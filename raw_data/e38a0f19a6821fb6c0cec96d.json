{
    "url": "http://localhost:9999/RaYell/openui5-sdk/resources/sap-ui-core-all.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>location.pathname</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>i[0].href=v||location.pathname;</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/RaYell/openui5-sdk/resources/sap-ui-core-all.js",
                "path": "/RaYell/openui5-sdk/resources/sap-ui-core-all.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9SYVllbGwvb3BlbnVpNS1zZGsvcmVzb3VyY2VzL3NhcC11aS1jb3JlLWFsbC5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "HTTP/1.1 200 OK
Content-Length: 1088349
Accept-Ranges: bytes
Content-Type: application/javascript
Date: Fri, 07 Nov 2014 21:27:04 GMT
Last-Modified: Fri, 07 Nov 2014 21:26:46 GMT

window["sap-ui-optimized"] = true;
try {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
if(window.jQuery&&window.jQuery.sap&&window.jQuery.sap.declare){window.jQuery.sap.declare("sap.ui.Device",false)}if(typeof window.sap!=="object"&&typeof window.sap!=="function"){window.sap={}}if(typeof window.sap.ui!=="object"){window.sap.ui={}}(function(){if(typeof window.sap.ui.Device==="object"||typeof window.sap.ui.Device==="function"){var c="1.24.2";window.sap.ui.Device._checkAPIVersion(c);return}var d={};function p(i,w){return("000"+String(i)).slice(-w)}var F=0,E=1,W=2,I=3,D=4,T=5;var g=function(){this.defaultComponent='DEVICE';this.sWindowName=(window.top==window)?"":"["+window.location.pathname.split('/').slice(-1)[0]+"] ";this.log=function(i,s,a){a=a||this.defaultComponent||'';var b=new Date(),e={time:p(b.getHours(),2)+":"+p(b.getMinutes(),2)+":"+p(b.getSeconds(),2),date:p(b.getFullYear(),4)+"-"+p(b.getMonth()+1,2)+"-"+p(b.getDate(),2),timestamp:b.getTime(),level:i,message:s||"",component:a||""};if(window.console){var f=e.date+" "+e.time+" "+this.sWindowName+e.message+" - "+e.component;switch(i){case F:case E:console.error(f);break;case W:console.warn(f);break;case I:console.info?console.info(f):console.log(f);break;case D:console.debug?console.debug(f):console.log(f);break;case T:console.trace?console.trace(f):console.log(f);break}}return e}};var l=new g();l.log(I,"Device API logging initialized");d._checkAPIVersion=function(s){var v="1.24.2";if(v!=s){l.log(W,"Device API version differs: "+v+" <-> "+s)}};var h={};function j(e,f,a){if(!h[e]){h[e]=[]}h[e].push({oListener:a,fFunction:f})};function k(e,f,a){var b=h[e];if(!b){return this}for(var i=0,q=b.length;i<q;i++){if(b[i].fFunction===f&&b[i].oListener===a){b.splice(i,1);break}}if(b.length==0){delete h[e]}};function n(e,a){var b=h[e],f;if(b){b=b.slice();for(var i=0,q=b.length;i<q;i++){f=b[i];f.fFunction.call(f.oListener||window,a)}}};var O={"WINDOWS":"win","MACINTOSH":"mac","LINUX":"linux","IOS":"iOS","ANDROID":"Android","BLACKBERRY":"bb","WINDOWS_PHONE":"winphone"};function o(a){function b(){var s=navigator.platform;if(s.indexOf("Win")!=-1){var t=/windows NT 6.(\d)/i;var f=a.match(t);var v="";if(f){if(f[1]==1){v="7"}else if(f[1]>1){v="8"}}return{"name":O.WINDOWS,"versionStr":v}}else if(s.indexOf("Mac")!=-1){return{"name":O.MACINTOSH,"versionStr":""}}else if(s.indexOf("Linux")!=-1){return{"name":O.LINUX,"versionStr":""}}l.log(I,"OS detection returned no result");return null}a=a||navigator.userAgent;var e=/\(([a-zA-Z ]+);\s(?:[U]?[;]?)([\D]+)((?:[\d._]*))(?:.*[\)][^\d]*)([\d.]*)\s/;var f=a.match(e);if(f){var i=/iPhone|iPad|iPod/;var q=/PlayBook|BlackBerry/;if(f[0].match(i)){f[3]=f[3].replace(/_/g,".");return({"name":O.IOS,"versionStr":f[3]})}else if(f[2].match(/Android/)){f[2]=f[2].replace(/\s/g,"");return({"name":O.ANDROID,"versionStr":f[3]})}else if(f[0].match(q)){return({"name":O.BLACKBERRY,"versionStr":f[4]})}else{return b()}}else if(a.indexOf("(BB10;")>0){e=/\sVersion\/([\d.]+)\s/;f=a.match(e);if(f){return{"name":O.BLACKBERRY,"versionStr":f[1]}}else{return{"name":O.BLACKBERRY,"versionStr":'10'}}}else{e=/Windows Phone (?:OS )?([\d.]*)/;f=a.match(e);if(f){return({"name":O.WINDOWS_PHONE,"versionStr":f[1]})}else{return b()}}};function r(){d.os=o()||{};d.os.OS=O;d.os.version=d.os.versionStr?parseFloat(d.os.versionStr):-1;if(d.os.name){for(var b in O){if(O[b]===d.os.name){d.os[b.toLowerCase()]=true}}}}r();var B={"INTERNET_EXPLORER":"ie","FIREFOX":"ff","CHROME":"cr","SAFARI":"sf","ANDROID":"an"};var u=navigator.userAgent;
/*!
	 * Taken from jQuery JavaScript Library v1.7.1
	 * http://jquery.com/
	 *
	 * Copyright 2011, John Resig
	 * Dual licensed under the MIT or GPL Version 2 licenses.
	 * http://jquery.org/license
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 * Copyright 2011, The Dojo Foundation
	 * Released under the MIT, BSD, and GPL Licenses.
	 *
	 * Date: Mon Nov 21 21:11:03 2011 -0500
	 */
function y(a){var b=(a||u).toLowerCase();var e=/(webkit)[ \/]([\w.]+)/;var f=/(opera)(?:.*version)?[ \/]([\w.]+)/;var i=/(msie) ([\w.]+)/;var q=/(trident)\/[\w.]+;.*rv:([\w.]+)/;var s=/(mozilla)(?:.*? rv:([\w.]+))?/;var V=e.exec(b)||f.exec(b)||i.exec(b)||q.exec(b)||b.indexOf("compatible")<0&&s.exec(b)||[];var t={browser:V[1]||"",version:V[2]||"0"};t[t.browser]=true;return t};function z(a){var b=y(a);var e=a||u;if(b.mozilla){if(e.match(/Firefox\/(\d+\.\d+)/)){var v=parseFloat(RegExp.$1);return{name:B.FIREFOX,versionStr:""+v,version:v,mozilla:true,mobile:false}}else{return{mobile:i.test(e),mozilla:true}}}else if(b.webkit){var f=e.toLowerCase().match(/webkit[\/]([\d.]+)/);if(f){var w=f[1]}var i=/Mobile/;if(e.match(/Chrome\/(\d+\.\d+).\d+/)){var v=parseFloat(RegExp.$1);return{name:B.CHROME,versionStr:""+v,version:v,mobile:i.test(e),webkit:true,webkitVersion:w}}else if(e.match(/Android .+ Version\/(\d+\.\d+)/)){var v=parseFloat(RegExp.$1);return{name:B.ANDROID,versionStr:""+v,version:v,mobile:i.test(e),webkit:true,webkitVersion:w}}else{var q=/Version\/(\d+\.\d+).*Safari/;if(q.test(e)){var v=parseFloat(q.exec(e)[1]);return{name:B.SAFARI,versionStr:""+v,version:v,mobile:i.test(e),webkit:true}}else{return{mobile:i.test(e),webkit:true,webkitVersion:w}}}}else if(b.msie||b.trident){var v;if(document.documentMode&&!a){if(document.documentMode===7){v=8.0}else{v=parseFloat(document.documentMode)}}else{v=parseFloat(b.version)}return{name:B.INTERNET_EXPLORER,versionStr:""+v,version:v,msie:true,mobile:false}}return{name:"",versionStr:"",version:-1,mobile:false}};d._testUserAgent=z;function A(){d.browser=z();d.browser.BROWSER=B;if(d.browser.name){for(var b in B){if(B[b]===d.browser.name){d.browser[b.toLowerCase()]=true}}}}A();d.support={};d.support.touch=!!(('ontouchstart'in window)||window.DocumentTouch&&document instanceof window.DocumentTouch);d.support.matchmedia=!!window.matchMedia;var m=d.support.matchmedia?window.matchMedia("screen and (max-width:0px)"):null;d.support.matchmedialistener=!!(m&&m.addListener);if(d.browser.safari&&d.browser.version<6){d.support.matchmedialistener=false}d.support.orientation=!!("orientation"in window&&"onorientationchange"in window);d.support.retina=(window.retina||window.devicePixelRatio>=2);d.support.websocket=('WebSocket'in window);d.support.input={};d.support.input.placeholder=('placeholder'in document.createElement("input"));d.media={};var R={"SAP_3STEPS":"3Step","SAP_4STEPS":"4Step","SAP_6STEPS":"6Step","SAP_STANDARD":"Std"};d.media.RANGESETS=R;d.media._predefinedRangeSets={};d.media._predefinedRangeSets[R.SAP_3STEPS]={points:[520,960],unit:"px",name:R.SAP_3STEPS,names:["S","M","L"]};d.media._predefinedRangeSets[R.SAP_4STEPS]={points:[520,760,960],unit:"px",name:R.SAP_4STEPS,names:["S","M","L","XL"]};d.media._predefinedRangeSets[R.SAP_6STEPS]={points:[241,400,541,768,960],unit:"px",name:R.SAP_6STEPS,names:["XS","S","M","L","XL","XXL"]};d.media._predefinedRangeSets[R.SAP_STANDARD]={points:[600,1024],unit:"px",name:R.SAP_STANDARD,names:["Phone","Tablet","Desktop"]};var _=R.SAP_STANDARD;var C=d.support.matchmedialistener?0:100;var G={};var H=null;function J(f,t,a){a=a||"px";var q="screen";if(f>0){q=q+" and (min-width:"+f+a+")"}if(t>0){q=q+" and (max-width:"+t+a+")"}return q};function K(a){if(!d.support.matchmedialistener&&H==Q()[0]){return}if(G[a].timer){clearTimeout(G[a].timer);G[a].timer=null}G[a].timer=setTimeout(function(){var b=M(a,false);if(b){n("media_"+a,b)}},C)};function L(s,i){var q=G[s].queries[i];var a={from:q.from,unit:G[s].unit};if(q.to>=0){a.to=q.to}if(G[s].names){a.name=G[s].names[i]}return a};function M(a,b){if(G[a]){var e=G[a].queries;var f=null;for(var i=0,s=e.length;i<s;i++){var q=e[i];if((q!=G[a].currentquery||b)&&d.media.matches(q.from,q.to,G[a].unit)){if(!b){G[a].currentquery=q}if(!G[a].noClasses&&G[a].names&&!b){N(a,G[a].names[i])}f=L(a,i)}}return f}l.log(W,"No queryset with name "+a+" found",'DEVICE.MEDIA');return null};function N(s,a,b){var e="sapUiMedia-"+s+"-";P(e+a,b,e)};function P(s,b,a){var e=document.documentElement;if(e.className.length==0){if(!b){e.className=s}}else{var f=e.className.split(" ");var q="";for(var i=0;i<f.length;i++){if((a&&f[i].indexOf(a)!=0)||(!a&&f[i]!=s)){q=q+f[i]+" "}}if(!b){q=q+s}e.className=q}};function Q(){return[document.documentElement.clientWidth,document.documentElement.clientHeight]};function S(v,a){if(a==="em"||a==="rem"){var s=window.getComputedStyle||function(e){return e.currentStyle};var x=s(document.documentElement).fontSize;var f=(x&&x.indexOf("px")>=0)?parseFloat(x,10):16;return v*f}return v};function U(f,t,e){f=S(f,e);t=S(t,e);var w=Q()[0];var a=f<0||f<=w;var b=t<0||w<=t;return a&&b};function V(f,t,a){var q=J(f,t,a);var m=window.matchMedia(q);return m&&m.matches};d.media.matches=d.support.matchmedia?V:U;d.media.attachHandler=function(f,a,s){var b=s||_;j("media_"+b,f,a)};d.media.detachHandler=function(f,a,s){var b=s||_;k("media_"+b,f,a)};d.media.initRangeSet=function(s,a,b,e,f){var t;if(!s){t=d.media._predefinedRangeSets[_]}else if(s&&d.media._predefinedRangeSets[s]){t=d.media._predefinedRangeSets[s]}else{t={name:s,unit:(b||"px").toLowerCase(),points:a||[],names:e,noClasses:!!f}}if(d.media.hasRangeSet(t.name)){return;l.log(I,"Range set "+t.name+" hase already been initialized",'DEVICE.MEDIA')}s=t.name;t.queries=[];t.timer=null;t.currentquery=null;t.listener=function(){return K(s)};var v,w,x;var x1=t.points;for(var i=0,y1=x1.length;i<=y1;i++){v=(i==0)?0:x1[i-1];w=(i==x1.length)?-1:x1[i];x=J(v,w,t.unit);t.queries.push({query:x,from:v,to:w})};if(t.names&&t.names.length!=t.queries.length){t.names=null}G[t.name]=t;if(d.support.matchmedialistener){var z1=t.queries;for(var i=0;i<z1.length;i++){var q=z1[i];q.media=window.matchMedia(q.query);q.media.addListener(t.listener)}}else{if(window.addEventListener){window.addEventListener("resize",t.listener,false);window.addEventListener("orientationchange",t.listener,false)}else{window.attachEvent("onresize",t.listener)}}t.listener()};d.media.getCurrentRange=function(s){if(!d.media.hasRangeSet(s)){return null}return M(s,true)};d.media.hasRangeSet=function(s){return s&&!!G[s]};d.media.removeRangeSet=function(s){if(!d.media.hasRangeSet(s)){l.log(I,"RangeSet "+s+" not found, thus could not be removed.",'DEVICE.MEDIA');return}for(var x in R){if(s===R[x]){l.log(W,"Cannot remove default rangeset - no action taken.",'DEVICE.MEDIA');return}}var a=G[s];if(d.support.matchmedialistener){var q=a.queries;for(var i=0;i<q.length;i++){q[i].media.removeListener(a.listener)}}else{if(window.removeEventListener){window.removeEventListener("resize",a.listener,false);window.removeEventListener("orientationchange",a.listener,false)}else{window.detachEvent("onresize",a.listener)}}N(s,"",true);delete h["media_"+s];delete G[s]};var X={"TABLET":"tablet","PHONE":"phone","DESKTOP":"desktop","COMBI":"combi"};var Y=d.os.windows&&d.os.version===8;var Z=d.os.windows&&d.os.version===7;d.system={};function $(a){var t=a1();var s={};s.tablet=((d.support.touch&&!Z)||!!a)&&t;s.phone=((d.support.touch&&!Z)||!!a)&&!t;s.desktop=(!s.tablet&&!s.phone)||Y||Z;s.combi=(s.desktop&&s.tablet);s.SYSTEMTYPE=X;for(var b in X){P("sap-"+X[b],!s[X[b]])}return s};function a1(){var a=(/(?=android)(?=.*mobile)/i.test(navigator.userAgent));var b=d.os.android&&(d.os.version>=4.4)&&/Version\/\d.\d/.test(navigator.userAgent);if(d.os.name===d.os.OS.IOS){return/ipad/i.test(navigator.userAgent)}else{if(d.support.touch){var e=window.devicePixelRatio?window.devicePixelRatio:1;if(!b&&(d.os.name===d.os.OS.ANDROID)&&d.browser.webkit&&(d.browser.webkitVersion>537.10)){e=1}var t=(Math.min(window.screen.width/e,window.screen.height/e)>=600);if(t1()&&(window.screen.height===552||window.screen.height===553)&&(/Nexus 7/i.test(navigator.userAgent))){t=true}return t}else{var f=(d.os.name===d.os.OS.ANDROID)&&!a;return f}}};function b1(a){d.system=$(a);if(d.system.tablet||d.system.phone){d.browser.mobile=true}}b1();d.orientation={};d.resize={};d.orientation.attachHandler=function(f,a){j("orientation",f,a)};d.resize.attachHandler=function(f,a){j("resize",f,a)};d.orientation.detachHandler=function(f,a){k("orientation",f,a)};d.resize.detachHandler=function(f,a){k("resize",f,a)};function c1(i){i.landscape=t1(true);i.portrait=!i.landscape};function d1(){c1(d.orientation);n("orientation",{landscape:d.orientation.landscape})};function e1(){f1(d.resize);n("resize",{height:d.resize.height,width:d.resize.width})};function f1(i){i.width=Q()[0];i.height=Q()[1]};function g1(){var w=d.orientation.landscape;var i=t1();if(w!=i){d1()}if(!l1){l1=window.setTimeout(h1,150)}};function h1(){e1();l1=null};var i1=false;var j1=false;var k1;var l1;var m1;var n1=Q()[1];var o1=Q()[0];var p1=false;var q1;var r1=/INPUT|TEXTAREA|SELECT/;var s1=d.os.ios&&d.browser.name==="sf"&&((d.system.phone&&d.os.version>=7&&d.os.version<7.1)||(d.system.tablet&&d.os.version>=7));function t1(f){if(d.support.touch&&d.support.orientation){if(p1&&f){return!d.orientation.landscape}if(p1){return d.orientation.landscape}}else{if(d.support.matchmedia&&d.support.orientation){return!!window.matchMedia("(orientation: landscape)").matches}}var s=Q();return s[0]>s[1]};function u1(e){if(e.type=="resize"){if(s1&&r1.test(document.activeElement.tagName)&&!i1){return}var w=Q()[1];var i=Q()[0];var t=new Date().getTime();if(w===n1&&i===o1){return}j1=true;if((n1!=w)&&(o1==i)){if(!q1||(t-q1>300)){p1=(w<n1)}e1()}else{o1=i}q1=t;n1=w;if(m1){window.clearTimeout(m1);m1=null}m1=window.setTimeout(w1,1200)}else if(e.type=="orientationchange"){i1=true}if(k1){clearTimeout(k1);k1=null}k1=window.setTimeout(v1,50)};function v1(){if(i1&&j1){d1();e1();i1=false;j1=false;if(m1){window.clearTimeout(m1);m1=null}}k1=null};function w1(){i1=false;j1=false;m1=null};d._update=function(a){u=navigator.userAgent;l.log(W,"Device API values manipulated: NOT PRODUCTIVE FEATURE!!! This should be only used for test purposes. Only use if you know what you are doing.");A();r();b1(a)};f1(d.resize);c1(d.orientation);window.sap.ui.Device=d;if(d.support.touch&&d.support.orientation){window.addEventListener("resize",u1,false);window.addEventListener("orientationchange",u1,false)}else{if(window.addEventListener){window.addEventListener("resize",g1,false)}else{window.attachEvent("onresize",g1)}}d.media.initRangeSet();if(sap.ui.define){sap.ui.define("sap/ui/Device",[],function(){return d})}}());
/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.11.2
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.com/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *   GPL v3 http://opensource.org/licenses/GPL-3.0
 *
 */
(function(r,f){if(typeof exports==='object'){module.exports=f()}else if(typeof define==='function'&&define.amd){define(f)}else{r.SecondLevelDomains=f(r)}}(this,function(r){"use strict";var _=r&&r.SecondLevelDomains;var h=Object.prototype.hasOwnProperty;var S={list:{"ac":"com|gov|mil|net|org","ae":"ac|co|gov|mil|name|net|org|pro|sch","af":"com|edu|gov|net|org","al":"com|edu|gov|mil|net|org","ao":"co|ed|gv|it|og|pb","ar":"com|edu|gob|gov|int|mil|net|org|tur","at":"ac|co|gv|or","au":"asn|com|csiro|edu|gov|id|net|org","ba":"co|com|edu|gov|mil|net|org|rs|unbi|unmo|unsa|untz|unze","bb":"biz|co|com|edu|gov|info|net|org|store|tv","bh":"biz|cc|com|edu|gov|info|net|org","bn":"com|edu|gov|net|org","bo":"com|edu|gob|gov|int|mil|net|org|tv","br":"adm|adv|agr|am|arq|art|ato|b|bio|blog|bmd|cim|cng|cnt|com|coop|ecn|edu|eng|esp|etc|eti|far|flog|fm|fnd|fot|fst|g12|ggf|gov|imb|ind|inf|jor|jus|lel|mat|med|mil|mus|net|nom|not|ntr|odo|org|ppg|pro|psc|psi|qsl|rec|slg|srv|tmp|trd|tur|tv|vet|vlog|wiki|zlg","bs":"com|edu|gov|net|org","bz":"du|et|om|ov|rg","ca":"ab|bc|mb|nb|nf|nl|ns|nt|nu|on|pe|qc|sk|yk","ck":"biz|co|edu|gen|gov|info|net|org","cn":"ac|ah|bj|com|cq|edu|fj|gd|gov|gs|gx|gz|ha|hb|he|hi|hl|hn|jl|js|jx|ln|mil|net|nm|nx|org|qh|sc|sd|sh|sn|sx|tj|tw|xj|xz|yn|zj","co":"com|edu|gov|mil|net|nom|org","cr":"ac|c|co|ed|fi|go|or|sa","cy":"ac|biz|com|ekloges|gov|ltd|name|net|org|parliament|press|pro|tm","do":"art|com|edu|gob|gov|mil|net|org|sld|web","dz":"art|asso|com|edu|gov|net|org|pol","ec":"com|edu|fin|gov|info|med|mil|net|org|pro","eg":"com|edu|eun|gov|mil|name|net|org|sci","er":"com|edu|gov|ind|mil|net|org|rochest|w","es":"com|edu|gob|nom|org","et":"biz|com|edu|gov|info|name|net|org","fj":"ac|biz|com|info|mil|name|net|org|pro","fk":"ac|co|gov|net|nom|org","fr":"asso|com|f|gouv|nom|prd|presse|tm","gg":"co|net|org","gh":"com|edu|gov|mil|org","gn":"ac|com|gov|net|org","gr":"com|edu|gov|mil|net|org","gt":"com|edu|gob|ind|mil|net|org","gu":"com|edu|gov|net|org","hk":"com|edu|gov|idv|net|org","id":"ac|co|go|mil|net|or|sch|web","il":"ac|co|gov|idf|k12|muni|net|org","in":"ac|co|edu|ernet|firm|gen|gov|i|ind|mil|net|nic|org|res","iq":"com|edu|gov|i|mil|net|org","ir":"ac|co|dnssec|gov|i|id|net|org|sch","it":"edu|gov","je":"co|net|org","jo":"com|edu|gov|mil|name|net|org|sch","jp":"ac|ad|co|ed|go|gr|lg|ne|or","ke":"ac|co|go|info|me|mobi|ne|or|sc","kh":"com|edu|gov|mil|net|org|per","ki":"biz|com|de|edu|gov|info|mob|net|org|tel","km":"asso|com|coop|edu|gouv|k|medecin|mil|nom|notaires|pharmaciens|presse|tm|veterinaire","kn":"edu|gov|net|org","kr":"ac|busan|chungbuk|chungnam|co|daegu|daejeon|es|gangwon|go|gwangju|gyeongbuk|gyeonggi|gyeongnam|hs|incheon|jeju|jeonbuk|jeonnam|k|kg|mil|ms|ne|or|pe|re|sc|seoul|ulsan","kw":"com|edu|gov|net|org","ky":"com|edu|gov|net|org","kz":"com|edu|gov|mil|net|org","lb":"com|edu|gov|net|org","lk":"assn|com|edu|gov|grp|hotel|int|ltd|net|ngo|org|sch|soc|web","lr":"com|edu|gov|net|org","lv":"asn|com|conf|edu|gov|id|mil|net|org","ly":"com|edu|gov|id|med|net|org|plc|sch","ma":"ac|co|gov|m|net|org|press","mc":"asso|tm","me":"ac|co|edu|gov|its|net|org|priv","mg":"com|edu|gov|mil|nom|org|prd|tm","mk":"com|edu|gov|inf|name|net|org|pro","ml":"com|edu|gov|net|org|presse","mn":"edu|gov|org","mo":"com|edu|gov|net|org","mt":"com|edu|gov|net|org","mv":"aero|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro","mw":"ac|co|com|coop|edu|gov|int|museum|net|org","mx":"com|edu|gob|net|org","my":"com|edu|gov|mil|name|net|org|sch","nf":"arts|com|firm|info|net|other|per|rec|store|web","ng":"biz|com|edu|gov|mil|mobi|name|net|org|sch","ni":"ac|co|com|edu|gob|mil|net|nom|org","np":"com|edu|gov|mil|net|org","nr":"biz|com|edu|gov|info|net|org","om":"ac|biz|co|com|edu|gov|med|mil|museum|net|org|pro|sch","pe":"com|edu|gob|mil|net|nom|org|sld","ph":"com|edu|gov|i|mil|net|ngo|org","pk":"biz|com|edu|fam|gob|gok|gon|gop|gos|gov|net|org|web","pl":"art|bialystok|biz|com|edu|gda|gdansk|gorzow|gov|info|katowice|krakow|lodz|lublin|mil|net|ngo|olsztyn|org|poznan|pwr|radom|slupsk|szczecin|torun|warszawa|waw|wroc|wroclaw|zgora","pr":"ac|biz|com|edu|est|gov|info|isla|name|net|org|pro|prof","ps":"com|edu|gov|net|org|plo|sec","pw":"belau|co|ed|go|ne|or","ro":"arts|com|firm|info|nom|nt|org|rec|store|tm|www","rs":"ac|co|edu|gov|in|org","sb":"com|edu|gov|net|org","sc":"com|edu|gov|net|org","sh":"co|com|edu|gov|net|nom|org","sl":"com|edu|gov|net|org","st":"co|com|consulado|edu|embaixada|gov|mil|net|org|principe|saotome|store","sv":"com|edu|gob|org|red","sz":"ac|co|org","tr":"av|bbs|bel|biz|com|dr|edu|gen|gov|info|k12|name|net|org|pol|tel|tsk|tv|web","tt":"aero|biz|cat|co|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel","tw":"club|com|ebiz|edu|game|gov|idv|mil|net|org","mu":"ac|co|com|gov|net|or|org","mz":"ac|co|edu|gov|org","na":"co|com","nz":"ac|co|cri|geek|gen|govt|health|iwi|maori|mil|net|org|parliament|school","pa":"abo|ac|com|edu|gob|ing|med|net|nom|org|sld","pt":"com|edu|gov|int|net|nome|org|publ","py":"com|edu|gov|mil|net|org","qa":"com|edu|gov|mil|net|org","re":"asso|com|nom","ru":"ac|adygeya|altai|amur|arkhangelsk|astrakhan|bashkiria|belgorod|bir|bryansk|buryatia|cbg|chel|chelyabinsk|chita|chukotka|chuvashia|com|dagestan|e-burg|edu|gov|grozny|int|irkutsk|ivanovo|izhevsk|jar|joshkar-ola|kalmykia|kaluga|kamchatka|karelia|kazan|kchr|kemerovo|khabarovsk|khakassia|khv|kirov|koenig|komi|kostroma|kranoyarsk|kuban|kurgan|kursk|lipetsk|magadan|mari|mari-el|marine|mil|mordovia|mosreg|msk|murmansk|nalchik|net|nnov|nov|novosibirsk|nsk|omsk|orenburg|org|oryol|penza|perm|pp|pskov|ptz|rnd|ryazan|sakhalin|samara|saratov|simbirsk|smolensk|spb|stavropol|stv|surgut|tambov|tatarstan|tom|tomsk|tsaritsyn|tsk|tula|tuva|tver|tyumen|udm|udmurtia|ulan-ude|vladikavkaz|vladimir|vladivostok|volgograd|vologda|voronezh|vrn|vyatka|yakutia|yamal|yekaterinburg|yuzhno-sakhalinsk","rw":"ac|co|com|edu|gouv|gov|int|mil|net","sa":"com|edu|gov|med|net|org|pub|sch","sd":"com|edu|gov|info|med|net|org|tv","se":"a|ac|b|bd|c|d|e|f|g|h|i|k|l|m|n|o|org|p|parti|pp|press|r|s|t|tm|u|w|x|y|z","sg":"com|edu|gov|idn|net|org|per","sn":"art|com|edu|gouv|org|perso|univ","sy":"com|edu|gov|mil|net|news|org","th":"ac|co|go|in|mi|net|or","tj":"ac|biz|co|com|edu|go|gov|info|int|mil|name|net|nic|org|test|web","tn":"agrinet|com|defense|edunet|ens|fin|gov|ind|info|intl|mincom|nat|net|org|perso|rnrt|rns|rnu|tourism","tz":"ac|co|go|ne|or","ua":"biz|cherkassy|chernigov|chernovtsy|ck|cn|co|com|crimea|cv|dn|dnepropetrovsk|donetsk|dp|edu|gov|if|in|ivano-frankivsk|kh|kharkov|kherson|khmelnitskiy|kiev|kirovograd|km|kr|ks|kv|lg|lugansk|lutsk|lviv|me|mk|net|nikolaev|od|odessa|org|pl|poltava|pp|rovno|rv|sebastopol|sumy|te|ternopil|uzhgorod|vinnica|vn|zaporizhzhe|zhitomir|zp|zt","ug":"ac|co|go|ne|or|org|sc","uk":"ac|bl|british-library|co|cym|gov|govt|icnet|jet|lea|ltd|me|mil|mod|national-library-scotland|nel|net|nhs|nic|nls|org|orgn|parliament|plc|police|sch|scot|soc","us":"dni|fed|isa|kids|nsn","uy":"com|edu|gub|mil|net|org","ve":"co|com|edu|gob|info|mil|net|org|web","vi":"co|com|k12|net|org","vn":"ac|biz|com|edu|gov|health|info|int|name|net|org|pro","ye":"co|com|gov|ltd|me|net|org|plc","yu":"ac|co|edu|gov|org","za":"ac|agric|alt|bourse|city|co|cybernet|db|edu|gov|grondar|iaccess|imt|inca|landesign|law|mil|net|ngo|nis|nom|olivetti|org|pix|school|tm|web","zm":"ac|co|com|edu|gov|net|org|sch"},has_expression:null,is_expression:null,has:function(d){return!!d.match(S.has_expression)},is:function(d){return!!d.match(S.is_expression)},get:function(d){var t=d.match(S.has_expression);return t&&t[1]||null},noConflict:function(){if(r.SecondLevelDomains===this){r.SecondLevelDomains=_}return this},init:function(){var t='';for(var a in S.list){if(!h.call(S.list,a)){continue}var e='('+S.list[a]+')\.'+a;t+='|('+e+')'}S.has_expression=new RegExp('\\.('+t.substr(1)+')$','i');S.is_expression=new RegExp('^('+t.substr(1)+')$','i')}};S.init();return S}));
/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.11.2
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.com/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *   GPL v3 http://opensource.org/licenses/GPL-3.0
 *
 */
(function(r,f){if(typeof exports==='object'){module.exports=f(require('./punycode'),require('./IPv6'),require('./SecondLevelDomains'))}else if(typeof define==='function'&&define.amd){r.URI=f(r.punycode,r.IPv6,r.SecondLevelDomains,r);define([],function(){return r.URI})}else{r.URI=f(r.punycode,r.IPv6,r.SecondLevelDomains,r)}}(this,function(a,I,S,r){"use strict";var _=r&&r.URI;function U(c,d){if(!(this instanceof U)){return new U(c,d)}if(c===undefined){if(typeof location!=='undefined'){c=location.href+""}else{c=""}}this.href(c);if(d!==undefined){return this.absoluteTo(d)}return this};var p=U.prototype;var h=Object.prototype.hasOwnProperty;function b(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1')}function g(v){if(v===undefined){return'Undefined'}return String(Object.prototype.toString.call(v)).slice(8,-1)}function f(c){return g(c)==="Array"}function j(d,v){var l={};var i,c;if(f(v)){for(i=0,c=v.length;i<c;i++){l[v[i]]=true}}else{l[v]=true}for(i=0,c=d.length;i<c;i++){if(l[d[i]]!==undefined){d.splice(i,1);c--;i--}}return d}function k(l,v){var i,c;if(f(v)){for(i=0,c=v.length;i<c;i++){if(!k(l,v[i])){return false}}return true}var d=g(v);for(i=0,c=l.length;i<c;i++){if(d==='RegExp'){if(typeof l[i]==='string'&&l[i].match(v)){return true}}else if(l[i]===v){return true}}return false}function m(c,t){if(!f(c)||!f(t)){return false}if(c.length!==t.length){return false}c.sort();t.sort();for(var i=0,l=c.length;i<l;i++){if(c[i]!==t[i]){return false}}return true}U._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,fragment:null,duplicateQueryParameters:U.duplicateQueryParameters,escapeQuerySpace:U.escapeQuerySpace}};U.duplicateQueryParameters=false;U.escapeQuerySpace=true;U.protocol_expression=/^[a-z][a-z0-9-+-]*$/i;U.idn_expression=/[^a-z0-9\.-]/i;U.punycode_expression=/(xn--)/i;U.ip4_expression=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;U.ip6_expression=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;U.find_uri_expression=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;U.defaultPorts={http:"80",https:"443",ftp:"21",gopher:"70",ws:"80",wss:"443"};U.invalid_hostname_characters=/[^a-zA-Z0-9\.-]/;U.domAttributes={'a':'href','blockquote':'cite','link':'href','base':'href','script':'src','form':'action','img':'src','area':'href','iframe':'src','embed':'src','source':'src','track':'src','input':'src'};U.getDomAttribute=function(c){if(!c||!c.nodeName){return undefined}var d=c.nodeName.toLowerCase();if(d==='input'&&c.type!=='image'){return undefined}return U.domAttributes[d]};function n(v){return escape(v)}function o(s){return encodeURIComponent(s).replace(/[!'()*]/g,n).replace(/\*/g,"%2A")}U.encode=o;U.decode=decodeURIComponent;U.iso8859=function(){U.encode=escape;U.decode=unescape};U.unicode=function(){U.encode=o;U.decode=decodeURIComponent};U.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/ig,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{expression:/[\/\?#]/g,map:{"/":"%2F","?":"%3F","#":"%23"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,map:{"%3A":":","%2F":"/","%3F":"?","%23":"#","%5B":"[","%5D":"]","%40":"@","%21":"!","%24":"$","%26":"&","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}}};U.encodeQuery=function(s,e){var c=U.encode(s+"");return e?c.replace(/%20/g,'+'):c};U.decodeQuery=function(s,c){s+="";try{return U.decode(c?s.replace(/\+/g,'%20'):s)}catch(e){return s}};U.recodePath=function(s){var c=(s+"").split('/');for(var i=0,l=c.length;i<l;i++){c[i]=U.encodePathSegment(U.decode(c[i]))}return c.join('/')};U.decodePath=function(s){var c=(s+"").split('/');for(var i=0,l=c.length;i<l;i++){c[i]=U.decodePathSegment(c[i])}return c.join('/')};var u={'encode':'encode','decode':'decode'};var w;var y=function(d,w){return function(s){return U[w](s+"").replace(U.characters[d][w].expression,function(c){return U.characters[d][w].map[c]})}};for(w in u){U[w+"PathSegment"]=y("pathname",u[w])}U.encodeReserved=y("reserved","encode");U.parse=function(s,c){var d;if(!c){c={}}d=s.indexOf('#');if(d>-1){c.fragment=s.substring(d+1)||null;s=s.substring(0,d)}d=s.indexOf('?');if(d>-1){c.query=s.substring(d+1)||null;s=s.substring(0,d)}if(s.substring(0,2)==='//'){c.protocol=null;s=s.substring(2);s=U.parseAuthority(s,c)}else{d=s.indexOf(':');if(d>-1){c.protocol=s.substring(0,d)||null;if(c.protocol&&!c.protocol.match(U.protocol_expression)){c.protocol=undefined}else if(c.protocol==='file'){s=s.substring(d+3)}else if(s.substring(d+1,d+3)==='//'){s=s.substring(d+3);s=U.parseAuthority(s,c)}else{s=s.substring(d+1);c.urn=true}}}c.path=s;return c};U.parseHost=function(s,c){var d=s.indexOf('/');var e;var t;if(d===-1){d=s.length}if(s.charAt(0)==="["){e=s.indexOf(']');c.hostname=s.substring(1,e)||null;c.port=s.substring(e+2,d)||null}else if(s.indexOf(':')!==s.lastIndexOf(':')){c.hostname=s.substring(0,d)||null;c.port=null}else{t=s.substring(0,d).split(':');c.hostname=t[0]||null;c.port=t[1]||null}if(c.hostname&&s.substring(d).charAt(0)!=='/'){d++;s="/"+s}return s.substring(d)||'/'};U.parseAuthority=function(s,c){s=U.parseUserinfo(s,c);return U.parseHost(s,c)};U.parseUserinfo=function(s,c){var d=s.indexOf('/');var e=d>-1?s.lastIndexOf('@',d):s.indexOf('@');var t;if(e>-1&&(d===-1||e<d)){t=s.substring(0,e).split(':');c.username=t[0]?U.decode(t[0]):null;t.shift();c.password=t[0]?U.decode(t.join(':')):null;s=s.substring(e+1)}else{c.username=null;c.password=null}return s};U.parseQuery=function(s,e){if(!s){return{}}s=s.replace(/&+/g,'&').replace(/^\?*&*|&+$/g,'');if(!s){return{}}var c={};var d=s.split('&');var l=d.length;var v,t,x;for(var i=0;i<l;i++){v=d[i].split('=');t=U.decodeQuery(v.shift(),e);x=v.length?U.decodeQuery(v.join('='),e):null;if(c[t]){if(typeof c[t]==="string"){c[t]=[c[t]]}c[t].push(x)}else{c[t]=x}}return c};U.build=function(c){var t="";if(c.protocol){t+=c.protocol+":"}if(!c.urn&&(t||c.hostname)){t+='//'}t+=(U.buildAuthority(c)||'');if(typeof c.path==="string"){if(c.path.charAt(0)!=='/'&&typeof c.hostname==="string"){t+='/'}t+=c.path}if(typeof c.query==="string"&&c.query){t+='?'+c.query}if(typeof c.fragment==="string"&&c.fragment){t+='#'+c.fragment}return t};U.buildHost=function(c){var t="";if(!c.hostname){return""}else if(U.ip6_expression.test(c.hostname)){if(c.port){t+="["+c.hostname+"]:"+c.port}else{t+=c.hostname}}else{t+=c.hostname;if(c.port){t+=':'+c.port}}return t};U.buildAuthority=function(c){return U.buildUserinfo(c)+U.buildHost(c)};U.buildUserinfo=function(c){var t="";if(c.username){t+=U.encode(c.username);if(c.password){t+=':'+U.encode(c.password)}t+="@"}return t};U.buildQuery=function(d,c,e){var t="";var l,s,i,v;for(s in d){if(h.call(d,s)&&s){if(f(d[s])){l={};for(i=0,v=d[s].length;i<v;i++){if(d[s][i]!==undefined&&l[d[s][i]+""]===undefined){t+="&"+U.buildQueryParameter(s,d[s][i],e);if(c!==true){l[d[s][i]+""]=true}}}}else if(d[s]!==undefined){t+='&'+U.buildQueryParameter(s,d[s],e)}}}return t.substring(1)};U.buildQueryParameter=function(c,v,e){return U.encodeQuery(c,e)+(v!==null?"="+U.encodeQuery(v,e):"")};U.addQuery=function(d,c,v){if(typeof c==="object"){for(var e in c){if(h.call(c,e)){U.addQuery(d,e,c[e])}}}else if(typeof c==="string"){if(d[c]===undefined){d[c]=v;return}else if(typeof d[c]==="string"){d[c]=[d[c]]}if(!f(v)){v=[v]}d[c]=d[c].concat(v)}else{throw new TypeError("URI.addQuery() accepts an object, string as the name parameter")}};U.removeQuery=function(d,c,v){var i,l,e;if(f(c)){for(i=0,l=c.length;i<l;i++){d[c[i]]=undefined}}else if(typeof c==="object"){for(e in c){if(h.call(c,e)){U.removeQuery(d,e,c[e])}}}else if(typeof c==="string"){if(v!==undefined){if(d[c]===v){d[c]=undefined}else if(f(d[c])){d[c]=j(d[c],v)}}else{d[c]=undefined}}else{throw new TypeError("URI.addQuery() accepts an object, string as the first parameter")}};U.hasQuery=function(d,c,v,e){if(typeof c==="object"){for(var i in c){if(h.call(c,i)){if(!U.hasQuery(d,i,c[i])){return false}}}return true}else if(typeof c!=="string"){throw new TypeError("URI.hasQuery() accepts an object, string as the name parameter")}switch(g(v)){case'Undefined':return c in d;case'Boolean':var l=Boolean(f(d[c])?d[c].length:d[c]);return v===l;case'Function':return!!v(d[c],c,d);case'Array':if(!f(d[c])){return false}var s=e?k:m;return s(d[c],v);case'RegExp':if(!f(d[c])){return Boolean(d[c]&&d[c].match(v))}if(!e){return false}return k(d[c],v);case'Number':v=String(v);case'String':if(!f(d[c])){return d[c]===v}if(!e){return false}return k(d[c],v);default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}};U.commonPath=function(c,t){var l=Math.min(c.length,t.length);var d;for(d=0;d<l;d++){if(c.charAt(d)!==t.charAt(d)){d--;break}}if(d<1){return c.charAt(0)===t.charAt(0)&&c.charAt(0)==='/'?'/':''}if(c.charAt(d)!=='/'||t.charAt(d)!=='/'){d=c.substring(0,d).lastIndexOf('/')}return c.substring(0,d+1)};U.withinString=function(s,c){return s.replace(U.find_uri_expression,c)};U.ensureValidHostname=function(v){if(v.match(U.invalid_hostname_characters)){if(!a){throw new TypeError("Hostname '"+v+"' contains characters other than [A-Z0-9.-] and Punycode.js is not available")}if(a.toASCII(v).match(U.invalid_hostname_characters)){throw new TypeError("Hostname '"+v+"' contains characters other than [A-Z0-9.-]")}}};U.noConflict=function(c){if(c){var d={URI:this.noConflict()};if(URITemplate&&typeof URITemplate.noConflict=="function"){d.URITemplate=URITemplate.noConflict()}if(I&&typeof I.noConflict=="function"){d.IPv6=I.noConflict()}if(SecondLevelDomains&&typeof SecondLevelDomains.noConflict=="function"){d.SecondLevelDomains=SecondLevelDomains.noConflict()}return d}else if(r.URI===this){r.URI=_}return this};p.build=function(d){if(d===true){this._deferred_build=true}else if(d===undefined||this._deferred_build){this._string=U.build(this._parts);this._deferred_build=false}return this};p.clone=function(){return new U(this)};p.valueOf=p.toString=function(){return this.build(false)._string};u={protocol:'protocol',username:'username',password:'password',hostname:'hostname',port:'port'};y=function(w){return function(v,c){if(v===undefined){return this._parts[w]||""}else{this._parts[w]=v||null;this.build(!c);return this}}};for(w in u){p[w]=y(u[w])}u={query:'?',fragment:'#'};y=function(w,c){return function(v,d){if(v===undefined){return this._parts[w]||""}else{if(v!==null){v=v+"";if(v.charAt(0)===c){v=v.substring(1)}}this._parts[w]=v;this.build(!d);return this}}};for(w in u){p[w]=y(w,u[w])}u={search:['?','query'],hash:['#','fragment']};y=function(w,c){return function(v,d){var t=this[w](v,d);return typeof t==="string"&&t.length?(c+t):t}};for(w in u){p[w]=y(u[w][1],u[w][0])}p.pathname=function(v,c){if(v===undefined||v===true){var d=this._parts.path||(this._parts.hostname?'/':'');return v?U.decodePath(d):d}else{this._parts.path=v?U.recodePath(v):"/";this.build(!c);return this}};p.path=p.pathname;p.href=function(c,d){var e;if(c===undefined){return this.toString()}this._string="";this._parts=U._parts();var _=c instanceof U;var i=typeof c==="object"&&(c.hostname||c.path||c.pathname);if(c.nodeName){var l=U.getDomAttribute(c);c=c[l]||"";i=false}if(!_&&i&&c.pathname!==undefined){c=c.toString()}if(typeof c==="string"){this._parts=U.parse(c,this._parts)}else if(_||i){var s=_?c._parts:c;for(e in s){if(h.call(this._parts,e)){this._parts[e]=s[e]}}}else{throw new TypeError("invalid input")}this.build(!d);return this};p.is=function(c){var i=false;var d=false;var e=false;var l=false;var s=false;var t=false;var a=false;var v=!this._parts.urn;if(this._parts.hostname){v=false;d=U.ip4_expression.test(this._parts.hostname);e=U.ip6_expression.test(this._parts.hostname);i=d||e;l=!i;s=l&&S&&S.has(this._parts.hostname);t=l&&U.idn_expression.test(this._parts.hostname);a=l&&U.punycode_expression.test(this._parts.hostname)}switch(c.toLowerCase()){case'relative':return v;case'absolute':return!v;case'domain':case'name':return l;case'sld':return s;case'ip':return i;case'ip4':case'ipv4':case'inet4':return d;case'ip6':case'ipv6':case'inet6':return e;case'idn':return t;case'url':return!this._parts.urn;case'urn':return!!this._parts.urn;case'punycode':return a}return null};var z=p.protocol;var A=p.port;var B=p.hostname;p.protocol=function(v,c){if(v!==undefined){if(v){v=v.replace(/:(\/\/)?$/,'');if(v.match(/[^a-zA-z0-9\.+-]/)){throw new TypeError("Protocol '"+v+"' contains characters other than [A-Z0-9.+-]")}}}return z.call(this,v,c)};p.scheme=p.protocol;p.port=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v!==undefined){if(v===0){v=null}if(v){v+="";if(v.charAt(0)===":"){v=v.substring(1)}if(v.match(/[^0-9]/)){throw new TypeError("Port '"+v+"' contains characters other than [0-9]")}}}return A.call(this,v,c)};p.hostname=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v!==undefined){var x={};U.parseHost(v,x);v=x.hostname}return B.call(this,v,c)};p.host=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){return this._parts.hostname?U.buildHost(this._parts):""}else{U.parseHost(v,this._parts);this.build(!c);return this}};p.authority=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){return this._parts.hostname?U.buildAuthority(this._parts):""}else{U.parseAuthority(v,this._parts);this.build(!c);return this}};p.userinfo=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){if(!this._parts.username){return""}var t=U.buildUserinfo(this._parts);return t.substring(0,t.length-1)}else{if(v[v.length-1]!=='@'){v+='@'}U.parseUserinfo(v,this._parts);this.build(!c);return this}};p.resource=function(v,c){var d;if(v===undefined){return this.path()+this.search()+this.hash()}d=U.parse(v);this._parts.path=d.path;this._parts.query=d.query;this._parts.fragment=d.fragment;this.build(!c);return this};p.subdomain=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var d=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,d)||""}else{var e=this._parts.hostname.length-this.domain().length;var s=this._parts.hostname.substring(0,e);var i=new RegExp('^'+b(s));if(v&&v.charAt(v.length-1)!=='.'){v+="."}if(v){U.ensureValidHostname(v)}this._parts.hostname=this._parts.hostname.replace(i,v);this.build(!c);return this}};p.domain=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(typeof v==='boolean'){c=v;v=undefined}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var t=this._parts.hostname.match(/\./g);if(t&&t.length<2){return this._parts.hostname}var e=this._parts.hostname.length-this.tld(c).length-1;e=this._parts.hostname.lastIndexOf('.',e-1)+1;return this._parts.hostname.substring(e)||""}else{if(!v){throw new TypeError("cannot set domain empty")}U.ensureValidHostname(v);if(!this._parts.hostname||this.is('IP')){this._parts.hostname=v}else{var d=new RegExp(b(this.domain())+"$");this._parts.hostname=this._parts.hostname.replace(d,v)}this.build(!c);return this}};p.tld=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(typeof v==='boolean'){c=v;v=undefined}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var d=this._parts.hostname.lastIndexOf('.');var t=this._parts.hostname.substring(d+1);if(c!==true&&S&&S.list[t.toLowerCase()]){return S.get(this._parts.hostname)||t}return t}else{var e;if(!v){throw new TypeError("cannot set TLD empty")}else if(v.match(/[^a-zA-Z0-9-]/)){if(S&&S.is(v)){e=new RegExp(b(this.tld())+"$");this._parts.hostname=this._parts.hostname.replace(e,v)}else{throw new TypeError("TLD '"+v+"' contains characters other than [A-Z0-9]")}}else if(!this._parts.hostname||this.is('IP')){throw new ReferenceError("cannot set TLD on non-domain host")}else{e=new RegExp(b(this.tld())+"$");this._parts.hostname=this._parts.hostname.replace(e,v)}this.build(!c);return this}};p.directory=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path&&!this._parts.hostname){return''}if(this._parts.path==='/'){return'/'}var d=this._parts.path.length-this.filename().length-1;var i=this._parts.path.substring(0,d)||(this._parts.hostname?"/":"");return v?U.decodePath(i):i}else{var e=this._parts.path.length-this.filename().length;var l=this._parts.path.substring(0,e);var s=new RegExp('^'+b(l));if(!this.is('relative')){if(!v){v='/'}if(v.charAt(0)!=='/'){v="/"+v}}if(v&&v.charAt(v.length-1)!=='/'){v+='/'}v=U.recodePath(v);this._parts.path=this._parts.path.replace(s,v);this.build(!c);return this}};p.filename=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path||this._parts.path==='/'){return""}var d=this._parts.path.lastIndexOf('/');var e=this._parts.path.substring(d+1);return v?U.decodePathSegment(e):e}else{var i=false;if(v.charAt(0)==='/'){v=v.substring(1)}if(v.match(/\.?\//)){i=true}var l=new RegExp(b(this.filename())+"$");v=U.recodePath(v);this._parts.path=this._parts.path.replace(l,v);if(i){this.normalizePath(c)}else{this.build(!c)}return this}};p.suffix=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path||this._parts.path==='/'){return""}var d=this.filename();var e=d.lastIndexOf('.');var s,i;if(e===-1){return""}s=d.substring(e+1);i=(/^[a-z0-9%]+$/i).test(s)?s:"";return v?U.decodePathSegment(i):i}else{if(v.charAt(0)==='.'){v=v.substring(1)}var l=this.suffix();var t;if(!l){if(!v){return this}this._parts.path+='.'+U.recodePath(v)}else if(!v){t=new RegExp(b("."+l)+"$")}else{t=new RegExp(b(l)+"$")}if(t){v=U.recodePath(v);this._parts.path=this._parts.path.replace(t,v)}this.build(!c);return this}};p.segment=function(s,v,c){var d=this._parts.urn?':':'/';var e=this.path();var t=e.substring(0,1)==='/';var x=e.split(d);if(s!==undefined&&typeof s!=='number'){c=v;v=s;s=undefined}if(s!==undefined&&typeof s!=='number'){throw new Error("Bad segment '"+s+"', must be 0-based integer")}if(t){x.shift()}if(s<0){s=Math.max(x.length+s,0)}if(v===undefined){return s===undefined?x:x[s]}else if(s===null||x[s]===undefined){if(f(v)){x=[];for(var i=0,l=v.length;i<l;i++){if(!v[i].length&&(!x.length||!x[x.length-1].length)){continue}if(x.length&&!x[x.length-1].length){x.pop()}x.push(v[i])}}else if(v||(typeof v==="string")){if(x[x.length-1]===""){x[x.length-1]=v}else{x.push(v)}}}else{if(v||(typeof v==="string"&&v.length)){x[s]=v}else{x.splice(s,1)}}if(t){x.unshift("")}return this.path(x.join(d),c)};p.segmentCoded=function(s,v,c){var d,i,l;if(typeof s!=='number'){c=v;v=s;s=undefined}if(v===undefined){d=this.segment(s,v,c);if(!f(d)){d=d!==undefined?U.decode(d):undefined}else{for(i=0,l=d.length;i<l;i++){d[i]=U.decode(d[i])}}return d}if(!f(v)){v=typeof v==='string'?U.encode(v):v}else{for(i=0,l=v.length;i<l;i++){v[i]=U.decode(v[i])}}return this.segment(s,v,c)};var q=p.query;p.query=function(v,c){if(v===true){return U.parseQuery(this._parts.query,this._parts.escapeQuerySpace)}else if(typeof v==="function"){var d=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);var e=v.call(this,d);this._parts.query=U.buildQuery(e||d,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);this.build(!c);return this}else if(v!==undefined&&typeof v!=="string"){this._parts.query=U.buildQuery(v,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);this.build(!c);return this}else{return q.call(this,v,c)}};p.setQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if(typeof c==="object"){for(var i in c){if(h.call(c,i)){e[i]=c[i]}}}else if(typeof c==="string"){e[c]=v!==undefined?v:null}else{throw new TypeError("URI.addQuery() accepts an object, string as the name parameter")}this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.addQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);U.addQuery(e,c,v===undefined?null:v);this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.removeQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);U.removeQuery(e,c,v);this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.hasQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return U.hasQuery(e,c,v,d)};p.setSearch=p.setQuery;p.addSearch=p.addQuery;p.removeSearch=p.removeQuery;p.hasSearch=p.hasQuery;p.normalize=function(){if(this._parts.urn){return this.normalizeProtocol(false).normalizeQuery(false).normalizeFragment(false).build()}return this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build()};p.normalizeProtocol=function(c){if(typeof this._parts.protocol==="string"){this._parts.protocol=this._parts.protocol.toLowerCase();this.build(!c)}return this};p.normalizeHostname=function(c){if(this._parts.hostname){if(this.is('IDN')&&a){this._parts.hostname=a.toASCII(this._parts.hostname)}else if(this.is('IPv6')&&I){this._parts.hostname=I.best(this._parts.hostname)}this._parts.hostname=this._parts.hostname.toLowerCase();this.build(!c)}return this};p.normalizePort=function(c){if(typeof this._parts.protocol==="string"&&this._parts.port===U.defaultPorts[this._parts.protocol]){this._parts.port=null;this.build(!c)}return this};p.normalizePath=function(c){if(this._parts.urn){return this}if(!this._parts.path||this._parts.path==='/'){return this}var d;var e=this._parts.path;var i,l;if(e.charAt(0)!=='/'){d=true;e='/'+e}e=e.replace(/(\/(\.\/)+)|(\/\.$)/g,'/').replace(/\/{2,}/g,'/');while(true){i=e.indexOf('/../');if(i===-1){break}else if(i===0){e=e.substring(3);break}l=e.substring(0,i).lastIndexOf('/');if(l===-1){l=i}e=e.substring(0,l)+e.substring(i+3)}if(d&&this.is('relative')){e=e.substring(1)}e=U.recodePath(e);this._parts.path=e;this.build(!c);return this};p.normalizePathname=p.normalizePath;p.normalizeQuery=function(c){if(typeof this._parts.query==="string"){if(!this._parts.query.length){this._parts.query=null}else{this.query(U.parseQuery(this._parts.query,this._parts.escapeQuerySpace))}this.build(!c)}return this};p.normalizeFragment=function(c){if(!this._parts.fragment){this._parts.fragment=null;this.build(!c)}return this};p.normalizeSearch=p.normalizeQuery;p.normalizeHash=p.normalizeFragment;p.iso8859=function(){var e=U.encode;var d=U.decode;U.encode=escape;U.decode=decodeURIComponent;this.normalize();U.encode=e;U.decode=d;return this};p.unicode=function(){var e=U.encode;var d=U.decode;U.encode=o;U.decode=unescape;this.normalize();U.encode=e;U.decode=d;return this};p.readable=function(){var c=this.clone();c.username("").password("").normalize();var t='';if(c._parts.protocol){t+=c._parts.protocol+'://'}if(c._parts.hostname){if(c.is('punycode')&&a){t+=a.toUnicode(c._parts.hostname);if(c._parts.port){t+=":"+c._parts.port}}else{t+=c.host()}}if(c._parts.hostname&&c._parts.path&&c._parts.path.charAt(0)!=='/'){t+='/'}t+=c.path(true);if(c._parts.query){var q='';for(var i=0,d=c._parts.query.split('&'),l=d.length;i<l;i++){var e=(d[i]||"").split('=');q+='&'+U.decodeQuery(e[0],this._parts.escapeQuerySpace).replace(/&/g,'%26');if(e[1]!==undefined){q+="="+U.decodeQuery(e[1],this._parts.escapeQuerySpace).replace(/&/g,'%26')}}t+='?'+q.substring(1)}t+=U.decodeQuery(c.hash(),true);return t};p.absoluteTo=function(c){var d=this.clone();var e=['protocol','username','password','hostname','port'];var l,i,p;if(this._parts.urn){throw new Error('URNs do not have any generally defined hierarchical components')}if(!(c instanceof U)){c=new U(c)}if(!d._parts.protocol){d._parts.protocol=c._parts.protocol}if(this._parts.hostname){return d}for(i=0;p=e[i];i++){d._parts[p]=c._parts[p]}e=['query','path'];for(i=0;p=e[i];i++){if(!d._parts[p]&&c._parts[p]){d._parts[p]=c._parts[p]}}if(d.path().charAt(0)!=='/'){l=c.directory();d._parts.path=(l?(l+'/'):'')+d._parts.path;d.normalizePath()}d.build();return d};p.relativeTo=function(c){var d=this.clone().normalize();var e,i,l,s,t;if(d._parts.urn){throw new Error('URNs do not have any generally defined hierarchical components')}c=new U(c).normalize();e=d._parts;i=c._parts;s=d.path();t=c.path();if(s.charAt(0)!=='/'){throw new Error('URI is already relative')}if(t.charAt(0)!=='/'){throw new Error('Cannot calculate a URI relative to another relative URI')}if(e.protocol===i.protocol){e.protocol=null}if(e.username!==i.username||e.password!==i.password){return d.build()}if(e.protocol!==null||e.username!==null||e.password!==null){return d.build()}if(e.hostname===i.hostname&&e.port===i.port){e.hostname=null;e.port=null}else{return d.build()}if(s===t){e.path='';return d.build()}l=U.commonPath(d.path(),c.path());if(!l){return d.build()}var v=i.path.substring(l.length).replace(/[^\/]*$/,'').replace(/.*?\//g,'../');e.path=v+e.path.substring(l.length);return d.build()};p.equals=function(c){var d=this.clone();var t=new U(c);var e={};var i={};var l={};var s,v,x;d.normalize();t.normalize();if(d.toString()===t.toString()){return true}s=d.query();v=t.query();d.query("");t.query("");if(d.toString()!==t.toString()){return false}if(s.length!==v.length){return false}e=U.parseQuery(s,this._parts.escapeQuerySpace);i=U.parseQuery(v,this._parts.escapeQuerySpace);for(x in e){if(h.call(e,x)){if(!f(e[x])){if(e[x]!==i[x]){return false}}else if(!m(e[x],i[x])){return false}l[x]=true}}for(x in i){if(h.call(i,x)){if(!l[x]){return false}}}return true};p.duplicateQueryParameters=function(v){this._parts.duplicateQueryParameters=!!v;return this};p.escapeQuerySpace=function(v){this._parts.escapeQuerySpace=!!v;return this};return U}));
/* Copyright Google Inc.
 * Licensed under the Apache Licence Version 2.0
 * Autogenerated at Tue May 22 10:18:21 PDT 2012
 * \@overrides window
 * \@provides cssSchema, CSS_PROP_BIT_QUANTITY, CSS_PROP_BIT_HASH_VALUE, CSS_PROP_BIT_NEGATIVE_QUANTITY, CSS_PROP_BIT_QSTRING_CONTENT, CSS_PROP_BIT_QSTRING_URL, CSS_PROP_BIT_HISTORY_INSENSITIVE, CSS_PROP_BIT_Z_INDEX, CSS_PROP_BIT_ALLOWED_IN_LINK */
var CSS_PROP_BIT_QUANTITY=1;var CSS_PROP_BIT_HASH_VALUE=2;var CSS_PROP_BIT_NEGATIVE_QUANTITY=4;var CSS_PROP_BIT_QSTRING_CONTENT=8;var CSS_PROP_BIT_QSTRING_URL=16;var CSS_PROP_BIT_HISTORY_INSENSITIVE=32;var CSS_PROP_BIT_Z_INDEX=64;var CSS_PROP_BIT_ALLOWED_IN_LINK=128;var cssSchema=(function(){var s=['rgb(?:\\(\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)|a\\(\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0(?:\\.\\d+)?|\\.\\d+|1(?:\\.0+)?|0|\\d+(?:\\.\\d+)?%)) *\\)'],c=[/^ *$/i,RegExp('^ *(?:\\s*'+s[0]+'|(?:\\s*'+s[0]+')?)+ *$','i'),RegExp('^ *\\s*'+s[0]+' *$','i'),RegExp('^ *\\s*'+s[0]+'\\s*'+s[0]+' *$','i')],L=[['aliceblue','antiquewhite','aqua','aquamarine','azure','beige','bisque','black','blanchedalmond','blue','blueviolet','brown','burlywood','cadetblue','chartreuse','chocolate','coral','cornflowerblue','cornsilk','crimson','cyan','darkblue','darkcyan','darkgoldenrod','darkgray','darkgreen','darkkhaki','darkmagenta','darkolivegreen','darkorange','darkorchid','darkred','darksalmon','darkseagreen','darkslateblue','darkslategray','darkturquoise','darkviolet','deeppink','deepskyblue','dimgray','dodgerblue','firebrick','floralwhite','forestgreen','fuchsia','gainsboro','ghostwhite','gold','goldenrod','gray','green','greenyellow','honeydew','hotpink','indianred','indigo','ivory','khaki','lavender','lavenderblush','lawngreen','lemonchiffon','lightblue','lightcoral','lightcyan','lightgoldenrodyellow','lightgreen','lightgrey','lightpink','lightsalmon','lightseagreen','lightskyblue','lightslategray','lightsteelblue','lightyellow','lime','limegreen','linen','magenta','maroon','mediumaquamarine','mediumblue','mediumorchid','mediumpurple','mediumseagreen','mediumslateblue','mediumspringgreen','mediumturquoise','mediumvioletred','midnightblue','mintcream','mistyrose','moccasin','navajowhite','navy','oldlace','olive','olivedrab','orange','orangered','orchid','palegoldenrod','palegreen','paleturquoise','palevioletred','papayawhip','peachpuff','peru','pink','plum','powderblue','purple','red','rosybrown','royalblue','saddlebrown','salmon','sandybrown','seagreen','seashell','sienna','silver','skyblue','slateblue','slategray','snow','springgreen','steelblue','tan','teal','thistle','tomato','turquoise','violet','wheat','white','whitesmoke','yellow','yellowgreen'],['all-scroll','col-resize','crosshair','default','e-resize','hand','help','move','n-resize','ne-resize','no-drop','not-allowed','nw-resize','pointer','progress','row-resize','s-resize','se-resize','sw-resize','text','vertical-text','w-resize','wait'],['-moz-inline-box','-moz-inline-stack','block','inline','inline-block','inline-table','list-item','run-in','table','table-caption','table-cell','table-column','table-column-group','table-footer-group','table-header-group','table-row','table-row-group'],['armenian','circle','decimal','decimal-leading-zero','disc','georgian','lower-alpha','lower-greek','lower-latin','lower-roman','square','upper-alpha','upper-latin','upper-roman'],['100','200','300','400','500','600','700','800','900','bold','bolder','lighter'],['condensed','expanded','extra-condensed','extra-expanded','narrower','semi-condensed','semi-expanded','ultra-condensed','ultra-expanded','wider'],['behind','center-left','center-right','far-left','far-right','left-side','leftwards','right-side','rightwards'],['large','larger','small','smaller','x-large','x-small','xx-large','xx-small'],['-moz-pre-wrap','-o-pre-wrap','-pre-wrap','nowrap','pre','pre-line','pre-wrap'],['dashed','dotted','double','groove','outset','ridge','solid'],['baseline','middle','sub','super','text-bottom','text-top'],['caption','icon','menu','message-box','small-caption','status-bar'],['fast','faster','slow','slower','x-fast','x-slow'],['above','below','higher','level','lower'],['border-box','contain','content-box','cover','padding-box'],['cursive','fantasy','monospace','sans-serif','serif'],['loud','silent','soft','x-loud','x-soft'],['no-repeat','repeat-x','repeat-y','round','space'],['blink','line-through','overline','underline'],['high','low','x-high','x-low'],['absolute','relative','static'],['capitalize','lowercase','uppercase'],['child','female','male'],['bidi-override','embed'],['bottom','top'],['clip','ellipsis'],['continuous','digits'],['hide','show'],['inside','outside'],['italic','oblique'],['left','right'],['ltr','rtl'],['no-content','no-display'],['suppress','unrestricted'],['thick','thin'],[','],['/'],['always'],['auto'],['avoid'],['both'],['break-word'],['center'],['code'],['collapse'],['fixed'],['hidden'],['inherit'],['inset'],['invert'],['justify'],['local'],['medium'],['mix'],['none'],['normal'],['once'],['repeat'],['scroll'],['separate'],['small-caps'],['spell-out'],['transparent'],['visible']];return{'-moz-border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'-moz-border-radius-bottomleft':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-bottomright':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-topleft':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-topright':{'cssExtra':c[0],'cssPropBits':5},'-moz-box-shadow':{'cssExtra':c[1],'cssAlternates':['boxShadow'],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'-moz-opacity':{'cssPropBits':1,'cssLitGroup':[L[47]]},'-moz-outline':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[49],L[52],L[54]]},'-moz-outline-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[49]]},'-moz-outline-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'-moz-outline-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'-o-text-overflow':{'cssPropBits':0,'cssLitGroup':[L[25]]},'-webkit-border-bottom-left-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-bottom-right-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'-webkit-border-radius-bottom-left':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-bottom-right':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-top-left':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-top-right':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-top-left-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-top-right-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-box-shadow':{'cssExtra':c[1],'cssAlternates':['boxShadow'],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'azimuth':{'cssPropBits':5,'cssLitGroup':[L[6],L[30],L[42],L[47]]},'background':{'cssExtra':RegExp('^ *(?:\\s*'+s[0]+'){0,2} *$','i'),'cssPropBits':23,'cssLitGroup':[L[0],L[14],L[17],L[24],L[30],L[35],L[36],L[38],L[42],L[45],L[47],L[51],L[54],L[57],L[58],L[62]]},'background-attachment':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[35],L[45],L[51],L[58]]},'background-color':{'cssExtra':c[2],'cssPropBits':130,'cssLitGroup':[L[0],L[47],L[62]]},'background-image':{'cssExtra':c[0],'cssPropBits':16,'cssLitGroup':[L[35],L[54]]},'background-position':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[24],L[30],L[35],L[42]]},'background-repeat':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[17],L[35],L[57]]},'border':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-bottom':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-bottom-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-bottom-left-radius':{'cssExtra':c[0],'cssPropBits':5},'border-bottom-right-radius':{'cssExtra':c[0],'cssPropBits':5},'border-bottom-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-bottom-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-collapse':{'cssPropBits':0,'cssLitGroup':[L[44],L[47],L[59]]},'border-color':{'cssExtra':RegExp('^ *(?:\\s*'+s[0]+'){1,4} *$','i'),'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-left':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-left-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-left-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-left-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'border-right':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-right-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-right-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-right-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-spacing':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47]]},'border-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-top':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-top-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-top-left-radius':{'cssExtra':c[0],'cssPropBits':5},'border-top-right-radius':{'cssExtra':c[0],'cssPropBits':5},'border-top-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-top-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'bottom':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'box-shadow':{'cssExtra':c[1],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'caption-side':{'cssPropBits':0,'cssLitGroup':[L[24],L[47]]},'clear':{'cssPropBits':0,'cssLitGroup':[L[30],L[40],L[47],L[54]]},'clip':{'cssExtra':/^ *\s*rect\(\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto) *\) *$/i,'cssPropBits':0,'cssLitGroup':[L[38],L[47]]},'color':{'cssExtra':c[2],'cssPropBits':130,'cssLitGroup':[L[0],L[47]]},'content':{'cssPropBits':0},'counter-increment':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47],L[54]]},'counter-reset':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47],L[54]]},'cue':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cue-after':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cue-before':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cursor':{'cssExtra':c[0],'cssPropBits':144,'cssLitGroup':[L[1],L[35],L[38],L[47]]},'direction':{'cssPropBits':0,'cssLitGroup':[L[31],L[47]]},'display':{'cssPropBits':32,'cssLitGroup':[L[2],L[47],L[54]]},'elevation':{'cssPropBits':5,'cssLitGroup':[L[13],L[47]]},'empty-cells':{'cssPropBits':0,'cssLitGroup':[L[27],L[47]]},'filter':{'cssExtra':/^ *(?:\s*alpha\(\s*opacity\s*=\s*(?:0|\d+(?:\.\d+)?%|[+\-]?\d+(?:\.\d+)?) *\))+ *$/i,'cssPropBits':32},'float':{'cssAlternates':['cssFloat','styleFloat'],'cssPropBits':32,'cssLitGroup':[L[30],L[47],L[54]]},'font':{'cssExtra':c[0],'cssPropBits':9,'cssLitGroup':[L[4],L[7],L[11],L[15],L[29],L[35],L[36],L[47],L[52],L[55],L[60]]},'font-family':{'cssExtra':c[0],'cssPropBits':8,'cssLitGroup':[L[15],L[35],L[47]]},'font-size':{'cssPropBits':1,'cssLitGroup':[L[7],L[47],L[52]]},'font-stretch':{'cssPropBits':0,'cssLitGroup':[L[5],L[55]]},'font-style':{'cssPropBits':0,'cssLitGroup':[L[29],L[47],L[55]]},'font-variant':{'cssPropBits':0,'cssLitGroup':[L[47],L[55],L[60]]},'font-weight':{'cssPropBits':0,'cssLitGroup':[L[4],L[47],L[55]]},'height':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'left':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'letter-spacing':{'cssPropBits':5,'cssLitGroup':[L[47],L[55]]},'line-height':{'cssPropBits':1,'cssLitGroup':[L[47],L[55]]},'list-style':{'cssPropBits':16,'cssLitGroup':[L[3],L[28],L[47],L[54]]},'list-style-image':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'list-style-position':{'cssPropBits':0,'cssLitGroup':[L[28],L[47]]},'list-style-type':{'cssPropBits':0,'cssLitGroup':[L[3],L[47],L[54]]},'margin':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-bottom':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-left':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-right':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-top':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'max-height':{'cssPropBits':1,'cssLitGroup':[L[38],L[47],L[54]]},'max-width':{'cssPropBits':1,'cssLitGroup':[L[38],L[47],L[54]]},'min-height':{'cssPropBits':1,'cssLitGroup':[L[38],L[47]]},'min-width':{'cssPropBits':1,'cssLitGroup':[L[38],L[47]]},'opacity':{'cssPropBits':33,'cssLitGroup':[L[47]]},'outline':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[49],L[52],L[54]]},'outline-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[49]]},'outline-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'outline-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'overflow':{'cssPropBits':32,'cssLitGroup':[L[38],L[46],L[47],L[58],L[63]]},'overflow-x':{'cssPropBits':0,'cssLitGroup':[L[32],L[38],L[46],L[58],L[63]]},'overflow-y':{'cssPropBits':0,'cssLitGroup':[L[32],L[38],L[46],L[58],L[63]]},'padding':{'cssPropBits':1,'cssLitGroup':[L[47]]},'padding-bottom':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-left':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-right':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-top':{'cssPropBits':33,'cssLitGroup':[L[47]]},'page-break-after':{'cssPropBits':0,'cssLitGroup':[L[30],L[37],L[38],L[39],L[47]]},'page-break-before':{'cssPropBits':0,'cssLitGroup':[L[30],L[37],L[38],L[39],L[47]]},'page-break-inside':{'cssPropBits':0,'cssLitGroup':[L[38],L[39],L[47]]},'pause':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pause-after':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pause-before':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pitch':{'cssPropBits':5,'cssLitGroup':[L[19],L[47],L[52]]},'pitch-range':{'cssPropBits':5,'cssLitGroup':[L[47]]},'play-during':{'cssExtra':c[0],'cssPropBits':16,'cssLitGroup':[L[38],L[47],L[53],L[54],L[57]]},'position':{'cssPropBits':32,'cssLitGroup':[L[20],L[47]]},'quotes':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[47],L[54]]},'richness':{'cssPropBits':5,'cssLitGroup':[L[47]]},'right':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'speak':{'cssPropBits':0,'cssLitGroup':[L[47],L[54],L[55],L[61]]},'speak-header':{'cssPropBits':0,'cssLitGroup':[L[37],L[47],L[56]]},'speak-numeral':{'cssPropBits':0,'cssLitGroup':[L[26],L[47]]},'speak-punctuation':{'cssPropBits':0,'cssLitGroup':[L[43],L[47],L[54]]},'speech-rate':{'cssPropBits':5,'cssLitGroup':[L[12],L[47],L[52]]},'stress':{'cssPropBits':5,'cssLitGroup':[L[47]]},'table-layout':{'cssPropBits':0,'cssLitGroup':[L[38],L[45],L[47]]},'text-align':{'cssPropBits':0,'cssLitGroup':[L[30],L[42],L[47],L[50]]},'text-decoration':{'cssPropBits':0,'cssLitGroup':[L[18],L[47],L[54]]},'text-indent':{'cssPropBits':5,'cssLitGroup':[L[47]]},'text-overflow':{'cssPropBits':0,'cssLitGroup':[L[25]]},'text-shadow':{'cssExtra':c[1],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'text-transform':{'cssPropBits':0,'cssLitGroup':[L[21],L[47],L[54]]},'text-wrap':{'cssPropBits':0,'cssLitGroup':[L[33],L[54],L[55]]},'top':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'unicode-bidi':{'cssPropBits':0,'cssLitGroup':[L[23],L[47],L[55]]},'vertical-align':{'cssPropBits':5,'cssLitGroup':[L[10],L[24],L[47]]},'visibility':{'cssPropBits':32,'cssLitGroup':[L[44],L[46],L[47],L[63]]},'voice-family':{'cssExtra':c[0],'cssPropBits':8,'cssLitGroup':[L[22],L[35],L[47]]},'volume':{'cssPropBits':1,'cssLitGroup':[L[16],L[47],L[52]]},'white-space':{'cssPropBits':0,'cssLitGroup':[L[8],L[47],L[55]]},'width':{'cssPropBits':33,'cssLitGroup':[L[38],L[47]]},'word-spacing':{'cssPropBits':5,'cssLitGroup':[L[47],L[55]]},'word-wrap':{'cssPropBits':0,'cssLitGroup':[L[41],L[55]]},'z-index':{'cssPropBits':69,'cssLitGroup':[L[38],L[47]]},'zoom':{'cssPropBits':1,'cssLitGroup':[L[55]]}}})();if(typeof window!=='undefined'){window['cssSchema']=cssSchema}
// Copyright (C) 2011 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var lexCss;var decodeCss;(function(){function d(s){var i=parseInt(s.substring(1),16);if(i>0xffff){return i-=0x10000,String.fromCharCode(0xd800+(i>>10),0xdc00+(i&0x3FF))}else if(i==i){return String.fromCharCode(i)}else if(s[1]<' '){return''}else{return s[1]}}function e(s,i){return'"'+s.replace(/[\u0000-\u001f\\\"<>]/g,i)+'"'}function a(i){return c[i]||(c[i]='\\'+i.charCodeAt(0).toString(16)+' ')}function b(i){return f[i]||(f[i]=(i<'\x10'?'%0':'%')+i.charCodeAt(0).toString(16))}var c={'\\':'\\\\'};var f={'\\':'%5c'};var g='[\\t\\n\\f ]';var W=g+'*';var N='[\\n\\f]';var h='[\\ud800-\\udbff][\\udc00-\\udfff]';var k='[\\u0080-\\ud7ff\\ue000-\\ufffd]|'+h;var U='[0-9a-fA-F]{1,6}'+g+'?';var l='\\\\'+U;var E='(?:'+U+'|[\\u0020-\\u007e\\u0080-\\ud7ff\\ue000\\ufffd]|'+h+')';var m='\\\\'+E;var o='(?:[\\t\\x21\\x23-\\x26\\x28-\\x5b\\x5d-\\x7e]|'+k+'|'+m+')';var p='[^\'"\\n\\f\\\\]|\\\\[\\s\\S]';var q='"(?:\'|'+p+')*"'+'|\'(?:\"|'+p+')*\'';var r='[-+]?(?:[0-9]+(?:[.][0-9]+)?|[.][0-9]+)';var t='(?:[a-zA-Z_]|'+k+'|'+m+')';var u='(?:[a-zA-Z0-9_-]|'+k+'|'+m+')';var v=u+'+';var I='-?'+t+u+'*';var A='@'+I;var H='#'+v;var w=r;var x='(?:@?-?'+t+'|#)'+u+'*';var P=r+'%';var D=r+I;var y=r+'(?:%|'+I+')?';var z='url[(]'+W+'(?:'+q+'|'+o+'*)'+W+'[)]';var B='U[+][0-9A-F?]{1,6}(?:-[0-9A-F]{1,6})?';var C='<\!--';var F='-->';var S=g+'+';var G='/(?:[*][^*]*[*]+(?:[^/][^*]*[*]+)*/|/[^\\n\\f]*)';var J='(?!url[(])'+I+'[(]';var K='~=';var L='[|]=';var M='[^]=';var O='[$]=';var Q='[*]=';var R='[~|^$*]=';var T='[^"\'\\\\/]|/(?![/*])';var V='\\uFEFF';var X=new RegExp([V,B,z,J,x,q,y,C,F,S,G,R,T].join("|"),'gi');decodeCss=function(i){return i.replace(new RegExp('\\\\(?:'+E+'|'+N+')','g'),d)};lexCss=function(s){s=''+s;var Y=s.replace(/\r\n?/g,'\n').match(X)||[];var j=0;var Z=' ';for(var i=0,n=Y.length;i<n;++i){var $=decodeCss(Y[i]);var _=$.length;var cc=$.charCodeAt(0);$=(cc=='"'.charCodeAt(0)||cc=='\''.charCodeAt(0))?e($.substring(1,_-1),a):(cc=='/'.charCodeAt(0)&&_>1||$=='\\'||$==F||$==C||$=='\ufeff'||cc<=' '.charCodeAt(0))?' ':/url\(/i.test($)?'url('+e($.replace(new RegExp('^url\\('+W+'["\']?|["\']?'+W+'\\)$','gi'),''),b)+')':$;if(Z!=$||$!=' '){Y[j++]=Z=$}}Y.length=j;return Y}})();if(typeof window!=='undefined'){window['lexCss']=lexCss;window['decodeCss']=decodeCss}
// Copyright (C) 2011 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var sanitizeCssProperty=(function(){var N='url("about:blank")';var a=/[\n\f\r\"\'()*<>]/g;var b={'\n':'%0a','\f':'%0c','\r':'%0d','"':'%22','\'':'%27','(':'%28',')':'%29','*':'%2a','<':'%3c','>':'%3e'};function c(s){if('string'===typeof s){return'url("'+s.replace(a,d)+'")'}else{return N}}function d(h){return b[h]}var U=new RegExp('^'+'(?:'+'([^:\/?# ]+)'+':)?');var A=/^(?:https?|mailto)$/i;function e(h,p,n){if(!n){return null}var i=(''+h).match(U);if(i&&(!i[1]||A.test(i[1]))){return n(h,p)}else{return null}}function u(h){var m={};for(var i=h.length;--i>=0;){var k=h[i];for(var j=k.length;--j>=0;){m[k[j]]=g}}return m}function f(t,s){var p=1,h=s+1,n=t.length;while(h<n&&p){var i=t[h++];p+=(i==='('?1:i===')'?-1:0)}return h}var g={};return function(p,h,t,o){var j=h.cssPropBits;var q=j&(CSS_PROP_BIT_QSTRING_CONTENT|CSS_PROP_BIT_QSTRING_URL);var l=NaN;var i=0,k=0;for(;i<t.length;++i){var m=t[i].toLowerCase();var n=m.charCodeAt(0),r,s,v,w,x;var y,z;m=((n===' '.charCodeAt(0))?'':(n==='"'.charCodeAt(0))?((q===CSS_PROP_BIT_QSTRING_URL&&o)?(c(e(decodeCss(t[i].substring(1,m.length-1)),p,o))):(q===CSS_PROP_BIT_QSTRING_CONTENT)?m:''):(n==='#'.charCodeAt(0)&&/^#(?:[0-9a-f]{3}){1,2}$/.test(m))?(j&CSS_PROP_BIT_HASH_VALUE?m:''):('0'.charCodeAt(0)<=n&&n<='9'.charCodeAt(0))?((j&CSS_PROP_BIT_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\d{1,7}$/)?m:''):m):''):(r=m.charCodeAt(1),s=m.charCodeAt(2),v='0'.charCodeAt(0)<=r&&r<='9'.charCodeAt(0),w='0'.charCodeAt(0)<=s&&s<='9'.charCodeAt(0),(n==='+'.charCodeAt(0)&&(v||(r==='.'.charCodeAt(0)&&w))))?((j&CSS_PROP_BIT_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\+\d{1,7}$/)?m:''):((v?'':'0')+m.substring(1))):''):(n==='-'.charCodeAt(0)&&(v||(r==='.'.charCodeAt(0)&&w)))?((j&CSS_PROP_BIT_NEGATIVE_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\-\d{1,7}$/)?m:''):((v?'-':'-0')+m.substring(1))):((j&CSS_PROP_BIT_QUANTITY)?'0':'')):(n==='.'.charCodeAt(0)&&v)?((j&CSS_PROP_BIT_QUANTITY)?'0'+m:''):('url('===m.substring(0,4))?((o&&(q&CSS_PROP_BIT_QSTRING_URL))?c(e(t[i].substring(5,m.length-2),p,o)):''):((m.charAt(m.length-1)==='(')&&(x=f(t,i),t.splice(i,x-i,m=t.slice(i,x).join(' '))),y=h.cssLitGroup,z=(y?(h.cssLitMap||(h.cssLitMap=u(y))):g),(z[m]===g||h.cssExtra&&h.cssExtra.test(m)))?m:(/^\w+$/.test(m)&&(q===CSS_PROP_BIT_QSTRING_CONTENT))?(l+1===k?(t[l]=t[l].substring(0,t[l].length-1)+' '+m+'"',m=''):(l=k,'"'+m+'"')):'');if(m){t[k++]=m}}if(k===1&&t[0]===N){k=0}t.length=k}})();
function sanitizeCssSelectors(s,a){var h=[];var b=[];var k=0,i;for(i=0;i<s.length;++i){if(!(s[i]==' '&&(s[i-1]=='>'||s[i+1]=='>'))){s[k++]=s[i]}}s.length=k;var n=s.length,c=0;for(i=0;i<n;++i){if(s[i]==','){p(c,i);c=i+1}}p(c,n);function p(c,e){var d=false;if(s[c]===' '){++c}if(e-1!==c&&s[e]===' '){--e}var o=[];var l=c;var f='';for(var i=c;i<e;++i){var t=s[i];var g=(t==='>');if(g||t===' '){f=j(l,i,false);if(!f||(g&&/^html/i.test(f))){return}l=i+1;o.push(f,g?' > ':' ')}}f=j(l,e,true);if(!f){return}o.push(f);function j(c,e,q){var r=c,u=e;var v,w,x,t,y;v='';if(c<e){t=s[c].toLowerCase();if(t==='*'||(t==='body'&&c+1!==e&&!q)||('number'===typeof(y=html4.ELEMENTS[t])&&!(y&html4.eflags.UNSAFE))){++c;v=t}}w='';while(c<e){t=s[c];if(t.charAt(0)==='#'){if(/^#_|__$|[^#0-9A-Za-z:_\-]/.test(t)){return null}w+=t+'-'+a}else if(t==='.'){if(++c<e&&/^[0-9A-Za-z:_\-]+$/.test(t=s[c])&&!/^_|__$/.test(t)){w+='.'+t}else{return null}}else{break}++c}x='';if(c<e&&s[c]===':'){t=s[++c];if(t==='visited'||t==='link'){if(!/^[a*]?$/.test(v)){return null}d=true;x=':'+t;v='a';++c}}if(c===e){return v+w+x}return null}var m=o.join('');if(/^body\b/.test(m)){m='.vdoc-body___.'+a+m.substring(4)}else{m='.'+a+' '+m}(d?h:b).push(m)}return[b,h]}
var sanitizeStylesheet=(function(){var a={};var c={'braille':a,'embossed':a,'handheld':a,'print':a,'projection':a,'screen':a,'speech':a,'tty':a,'tv':a};function s(b){var e=false;for(var i=0,n=b.length;i<n-1;++i){var t=b[i];if(':'===b[i+1]){e=!(cssSchema[t].cssPropBits&CSS_PROP_BIT_ALLOWED_IN_LINK)}if(e){b[i]=''}if(';'===t){e=false}}return b.join('')}return function(b,d,o){var e=void 0;var f=[];var g=false;parseCssStylesheet(b,{startStylesheet:function(){e=[]},endStylesheet:function(){},startAtrule:function(i,j){if(g){i=null}else if(i==='@media'){j=j.filter(function(m){return c[m]==a});if(j.length){e.push(i,j.join(','),'{')}else{i=null}}else{if(i==='@import'){if(window.console){window.console.log('@import '+j.join(' ')+' elided')}}i=null}g=!i;f.push(i)},endAtrule:function(){var i=f.pop();if(!g){e.push(';')}h()},startBlock:function(){if(!g){e.push('{')}},endBlock:function(){if(!g){e.push('}');g=true}},startRuleset:function(i){var j=void 0;var r=false;if(!g){var k=sanitizeCssSelectors(i,d);var l=k[0];j=k[1];if(!l.length&&!j.length){g=true}else{var m=l.join(', ');if(!m){m='head > html';r=true}e.push(m,'{')}}f.push(g?null:{historySensitiveSelectors:j,endOfSelectors:e.length-1,removeHistoryInsensitiveSelectors:r})},endRuleset:function(){var r=f.pop();var p=e.length;if(!g){e.push('}');if(r){var i=r.historySensitiveSelectors;if(i.length){var j=e.slice(r.endOfSelectors);e.push(i.join(', '),s(j))}}}if(r&&r.removeHistoryInsensitiveSelectors){e.splice(r.endOfSelectors-1,p+1)}h()},declaration:function(p,v){if(!g){var i=cssSchema[p];if(i){sanitizeCssProperty(p,i,v,o);if(v.length){e.push(p,':',v.join(' '),';')}}}}});function h(){g=f.length!==0&&f[f.length-1]!==null}return e.join('')}})();if(typeof window!=='undefined'){window['sanitizeCssProperty']=sanitizeCssProperty;window['sanitizeCssSelectors']=sanitizeCssSelectors;window['sanitizeStylesheet']=sanitizeStylesheet}
// Copyright (C) 2010 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var parseCssStylesheet;var parseCssDeclarations;(function(){parseCssStylesheet=function(e,h){var t=lexCss(e);if(h.startStylesheet){h.startStylesheet()}for(var i=0,n=t.length;i<n;){i=t[i]===' '?i+1:a(t,i,n,h)}if(h.endStylesheet){h.endStylesheet()}};function a(t,i,n,h){if(i<n){var e=t[i];if(e.charAt(0)==='@'){return b(t,i,n,h,true)}else{return r(t,i,n,h)}}else{return i}}function b(t,i,n,h,j){var k=i++;while(i<n&&t[i]!=='{'&&t[i]!==';'){++i}if(i<n&&(j||t[i]===';')){var s=k+1,e=i;if(s<n&&t[s]===' '){++s}if(e>s&&t[e-1]===' '){--e}if(h.startAtrule){h.startAtrule(t[k].toLowerCase(),t.slice(s,e))}i=(t[i]==='{')?c(t,i,n,h):i+1;if(h.endAtrule){h.endAtrule()}}return i}function c(t,i,n,h){++i;if(h.startBlock){h.startBlock()}while(i<n){var e=t[i].charAt(0);if(e=='}'){++i;break}if(e===' '||e===';'){i=i+1}else if(e==='@'){i=b(t,i,n,h,false)}else if(e==='{'){i=c(t,i,n,h)}else{i=r(t,i,n,h)}}if(h.endBlock){h.endBlock()}return i}function r(t,i,n,h){var s=i,e=d(t,i,n,true);if(e<0){e=~e;return i===e?e+1:e}i=e;if(e>s&&t[e-1]===' '){--e}var j=t[i];++i;if(j!=='{'){return i}if(h.startRuleset){h.startRuleset(t.slice(s,e))}while(i<n){j=t[i];if(j==='}'){++i;break}if(j===' '){i=i+1}else{i=g(t,i,n,h)}}if(h.endRuleset){h.endRuleset()}return i<n?i+1:i}function d(t,i,n,e){var s=i;var h;var j=[],k=-1;for(;i<n;++i){h=t[i].charAt(0);if(h==='['||h==='('){j[++k]=h}else if((h===']'&&j[k]==='[')||(h===')'&&j[k]==='(')){--k}else if(h==='{'||h==='}'||h===';'||h==='@'||(h===':'&&!e)){break}}if(k>=0){i=~(i+1)}return i}var f=/^-?[a-z]/i;function g(t,i,n,h){var p=t[i++];if(!f.test(p)){return i+1}var k;if(i<n&&t[i]===' '){++i}if(i==n||t[i]!==':'){while(i<n&&(k=t[i])!==';'&&k!=='}'){++i}return i}++i;if(i<n&&t[i]===' '){++i}var s=i,e=d(t,i,n,false);if(e<0){e=~e}else{var v=[],l=0;for(var j=s;j<e;++j){k=t[j];if(k!==' '){v[l++]=k}}if(e<n){do{k=t[e];if(k===';'||k==='}'){break}l=0}while(++e<n);if(k===';'){++e}}if(l&&h.declaration){h.declaration(p.toLowerCase(),v)}}return e}parseCssDeclarations=function(e,h){var t=lexCss(e);for(var i=0,n=t.length;i<n;){i=t[i]!==' '?g(t,i,n,h):i+1}}})();if(typeof window!=='undefined'){window['parseCssStylesheet']=parseCssStylesheet;window['parseCssDeclarations']=parseCssDeclarations}
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var html4={};html4.atype={NONE:0,URI:1,URI_FRAGMENT:11,SCRIPT:2,STYLE:3,ID:4,IDREF:5,IDREFS:6,GLOBAL_NAME:7,LOCAL_NAME:8,CLASSES:9,FRAME_TARGET:10};html4.ATTRIBS={'*::accesskey':0,'*::class':9,'*::contenteditable':0,'*::contextmenu':0,'*::dir':0,'*::draggable':0,'*::dropzone':0,'*::hidden':0,'*::id':4,'*::lang':0,'*::onabort':2,'*::onblur':2,'*::oncanplay':2,'*::oncanplaythrough':2,'*::onchange':2,'*::onclick':2,'*::oncontextmenu':2,'*::oncuechange':2,'*::ondblclick':2,'*::ondrag':2,'*::ondragend':2,'*::ondragenter':2,'*::ondragleave':2,'*::ondragover':2,'*::ondragstart':2,'*::ondrop':2,'*::ondurationchange':2,'*::onemptied':2,'*::onended':2,'*::onerror':2,'*::onfocus':2,'*::oninput':2,'*::oninvalid':2,'*::onkeydown':2,'*::onkeypress':2,'*::onkeyup':2,'*::onload':2,'*::onloadeddata':2,'*::onloadedmetadata':2,'*::onloadstart':2,'*::onmousedown':2,'*::onmousemove':2,'*::onmouseout':2,'*::onmouseover':2,'*::onmouseup':2,'*::onmousewheel':2,'*::onpause':2,'*::onplay':2,'*::onplaying':2,'*::onprogress':2,'*::onratechange':2,'*::onreadystatechange':2,'*::onreset':2,'*::onscroll':2,'*::onseeked':2,'*::onseeking':2,'*::onselect':2,'*::onshow':2,'*::onstalled':2,'*::onsubmit':2,'*::onsuspend':2,'*::ontimeupdate':2,'*::onvolumechange':2,'*::onwaiting':2,'*::spellcheck':0,'*::style':3,'*::tabindex':0,'*::title':0,'a::href':1,'a::hreflang':0,'a::media':0,'a::rel':0,'a::target':0,'a::type':0,'area::alt':0,'area::coords':0,'area::href':1,'area::hreflang':0,'area::media':0,'area::rel':0,'area::shape':0,'area::target':10,'area::type':0,'audio::autoplay':0,'audio::controls':0,'audio::loop':0,'audio::mediagroup':0,'audio::preload':0,'audio::src':1,'base::href':1,'base::target':10,'blockquote::cite':1,'body::onafterprint':2,'body::onbeforeprint':2,'body::onbeforeunload':2,'body::onblur':2,'body::onerror':2,'body::onfocus':2,'body::onhashchange':2,'body::onload':2,'body::onmessage':2,'body::onoffline':2,'body::ononline':2,'body::onpagehide':2,'body::onpageshow':2,'body::onpopstate':2,'body::onredo':2,'body::onresize':2,'body::onscroll':2,'body::onstorage':2,'body::onundo':2,'body::onunload':2,'button::autofocus':0,'button::disabled':0,'button::form':0,'button::formaction':1,'button::formenctype':0,'button::formmethod':0,'button::formnovalidate':0,'button::formtarget':10,'button::name':8,'button::type':0,'button::value':0,'canvas::height':0,'canvas::width':0,'col::span':0,'colgroup::span':0,'command::checked':0,'command::disabled':0,'command::icon':1,'command::label':0,'command::radiogroup':0,'command::type':0,'del::cite':1,'del::datetime':0,'details::open':0,'embed::height':0,'embed::src':1,'embed::type':0,'embed::width':0,'fieldset::disabled':0,'fieldset::form':0,'fieldset::name':8,'form::accept-charset':0,'form::action':1,'form::autocomplete':0,'form::enctype':0,'form::method':0,'form::name':7,'form::novalidate':0,'form::target':10,'html:: manifest':1,'iframe::height':0,'iframe::name':7,'iframe::sandbox':0,'iframe::seamless':0,'iframe::src':1,'iframe::srcdoc':10,'iframe::width':0,'img::alt':0,'img::height':0,'img::ismap':0,'img::name':7,'img::src':1,'img::usemap':11,'img::width':0,'input::accept':0,'input::alt':0,'input::autocomplete':0,'input::autofocus':0,'input::checked':0,'input::dirname':0,'input::disabled':0,'input::form':0,'input::formaction':1,'input::formenctype':0,'input::formmethod':0,'input::formnovalidate':0,'input::formtarget':10,'input::height':0,'input::list':0,'input::max':0,'input::maxlength':0,'input::min':0,'input::multiple':0,'input::name':8,'input::pattern':0,'input::placeholder':0,'input::readonly':0,'input::required':0,'input::step':0,'input::size':0,'input::src':1,'input::type':0,'input::value':0,'input::width':0,'ins::cite':1,'ins::datetime':0,'keygen::autofocus':0,'keygen::challenge':0,'keygen::disabled':0,'keygen::form':0,'keygen::keytype':0,'keygen::name':8,'label::for':5,'label::form':0,'link::href':1,'link::hreflang':0,'link::media':0,'link::rel':0,'link::sizes':0,'link::type':0,'li::value':0,'map::name':7,'menu::label':0,'menu::type':0,'meta::charset':0,'meta::content':0,'meta::http-equiv':0,'meta::name':7,'meter::form':0,'meter::high':0,'meter::low':0,'meter::max':0,'meter::min':0,'meter::optimum':0,'meter::value':0,'object::data':1,'object::form':0,'object::height':0,'object::name':8,'object::type':0,'object::usemap':11,'object::width':0,'ol::reversed':0,'ol::start':0,'optgroup::disabled':0,'optgroup::label':0,'option::disabled':0,'option::label':0,'option::selected':0,'option::value':0,'output::for':5,'output::form':0,'output::name':8,'param::name':8,'param::value':0,'progress::form':0,'progress::max':0,'progress::value':0,'q::cite':1,'script::async':0,'script::charset':0,'script::defer':0,'script::src':1,'script::type':0,'select::autofocus':0,'select::disabled':0,'select::form':0,'select::multiple':0,'select::name':8,'select::required':0,'select::size':0,'source::media':0,'source::src':1,'source::type':0,'style::media':0,'style::scoped':0,'style::type':0,'table::border':0,'td::colspan':0,'td::headers':6,'td::rowspan':0,'textarea::autofocus':0,'textarea::cols':0,'textarea::disabled':0,'textarea::form':0,'textarea::maxlength':0,'textarea::name':8,'textarea::placeholder':0,'textarea::readonly':0,'textarea::required':0,'textarea::rows':0,'textarea::wrap':0,'th::colspan':0,'th::headers':6,'th::rowspan':0,'th::scope':0,'time::datetime':0,'time::pubdate':0,'track::default':0,'track::kind':0,'track::label':0,'track::src':1,'track::srclang':0,'video::autoplay':0,'video::controls':0,'video::height':0,'video::loop':0,'video::mediagroup':0,'video::poster':1,'video::preload':0,'video::src':1,'video::width':0};html4.eflags={OPTIONAL_ENDTAG:1,EMPTY:2,CDATA:4,RCDATA:8,UNSAFE:16,FOLDABLE:32,SCRIPT:64,STYLE:128};html4.ELEMENTS={'a':0,'abbr':0,'address':0,'area':2,'article':0,'aside':0,'audio':0,'b':0,'base':18,'bdi':0,'bdo':0,'blockquote':0,'body':49,'br':2,'button':0,'canvas':0,'caption':0,'cite':0,'code':0,'col':2,'colgroup':1,'command':2,'datalist':0,'dd':1,'del':0,'details':0,'dfn':0,'div':0,'dl':0,'dt':1,'em':0,'embed':18,'fieldset':0,'figcaption':0,'figure':0,'footer':0,'form':0,'h1':0,'h2':0,'h3':0,'h4':0,'h5':0,'h6':0,'head':49,'header':0,'hgroup':0,'hr':2,'html':49,'i':0,'iframe':4,'img':2,'input':2,'ins':0,'kbd':0,'keygen':2,'label':0,'legend':0,'li':1,'link':18,'map':0,'mark':0,'menu':0,'meta':18,'meter':0,'nav':0,'noscript':20,'object':16,'ol':0,'optgroup':1,'option':1,'output':0,'p':1,'param':18,'pre':0,'progress':0,'q':0,'rp':1,'rt':1,'ruby':0,'s':0,'samp':0,'script':84,'section':0,'select':0,'small':0,'source':2,'span':0,'strong':0,'style':148,'sub':0,'summary':0,'sup':0,'table':0,'tbody':1,'td':1,'textarea':8,'tfoot':1,'th':1,'thead':1,'time':0,'title':24,'tr':1,'track':2,'u':0,'ul':0,'var':0,'video':0,'wbr':2};html4.ueffects={NOT_LOADED:0,SAME_DOCUMENT:1,NEW_DOCUMENT:2};html4.URIEFFECTS={'a::href':2,'area::href':2,'audio::src':1,'base::href':2,'blockquote::cite':0,'button::formaction':2,'command::icon':1,'del::cite':0,'embed::src':1,'form::action':2,'html:: manifest':1,'iframe::src':1,'img::src':1,'input::formaction':2,'input::src':1,'ins::cite':0,'link::href':2,'object::data':1,'q::cite':0,'script::src':1,'source::src':1,'track::src':1,'video::poster':1,'video::src':1};html4.ltypes={UNSANDBOXED:2,SANDBOXED:1,DATA:0};html4.LOADERTYPES={'a::href':2,'area::href':2,'audio::src':1,'base::href':2,'blockquote::cite':2,'button::formaction':2,'command::icon':1,'del::cite':2,'embed::src':1,'form::action':2,'html:: manifest':1,'iframe::src':1,'img::src':1,'input::formaction':2,'input::src':1,'ins::cite':2,'link::href':2,'object::data':0,'q::cite':2,'script::src':1,'source::src':1,'track::src':1,'video::poster':1,'video::src':1};if(typeof window!=='undefined'){window['html4']=html4}
// Copyright (C) 2006 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var html=(function(a){var b,c,d;if('undefined'!==typeof window){b=window['parseCssDeclarations'];c=window['sanitizeCssProperty'];d=window['cssSchema']}var l;if('script'==='SCRIPT'.toLowerCase()){l=function(s){return s.toLowerCase()}}else{l=function(s){return s.replace(/[A-Z]/g,function(e){return String.fromCharCode(e.charCodeAt(0)|32)})}}var E={'lt':'<','gt':'>','amp':'&','nbsp':'\240','quot':'"','apos':'\''};var f=/^#(\d+)$/;var g=/^#x([0-9A-Fa-f]+)$/;function j(n){n=l(n);if(E.hasOwnProperty(n)){return E[n]}var m=n.match(f);if(m){return String.fromCharCode(parseInt(m[1],10))}else if(!!(m=n.match(g))){return String.fromCharCode(parseInt(m[1],16))}return''}function k(_,n){return j(n)}var o=/\0/g;function r(s){return s.replace(o,'')}var t=/&(#\d+|#x[0-9A-Fa-f]+|\w+);/g;function u(s){return s.replace(t,k)}var w=/&/g;var x=/&([^a-z#]|#(?:[^0-9x]|x(?:[^0-9a-f]|$)|$)|$)/gi;var y=/[<]/g;var z=/>/g;var A=/\"/g;function B(s){return(''+s).replace(w,'&amp;').replace(y,'&lt;').replace(z,'&gt;').replace(A,'&#34;')}function C(e){return e.replace(x,'&amp;$1').replace(y,'&lt;').replace(z,'&gt;')}var D=new RegExp('^\\s*'+'([a-z][a-z-]*)'+'(?:'+('\\s*(=)\\s*'+'('+('(\")[^\"]*(\"|$)'+'|'+'(\')[^\']*(\'|$)'+'|'+'(?=[a-z][a-z-]*\\s*=)'+'|'+'[^\"\'\\s]*')+')')+')?','i');var F=/^(#[0-9]+|#x[0-9a-f]+|\w+);/i;var G=('a,b'.split(/(,)/).length===3);var H=a.eflags.CDATA|a.eflags.RCDATA;function I(h){return function(e,p){return K(e,h,p)}}var J={};function K(e,i,n){var h=i;var m,p,q;var s=N(e);var v={noMoreGT:false,noMoreEndComments:false};M(i,s,0,v,n)}function L(h,p,i,s,e){return function(){M(h,p,i,s,e)}}function M(h,i,n,s,q){try{if(h.startDoc&&n==0){h.startDoc(q)}var m,p,v;for(var _=n,b1=i.length;_<b1;){var c1=i[_++];var d1=i[_];switch(c1){case'&':if(F.test(d1)){if(h.pcdata){h.pcdata('&'+d1,q,J,L(h,i,_,s,q))}_++}else{if(h.pcdata){h.pcdata("&amp;",q,J,L(h,i,_,s,q))}}break;case'<\/':if(m=/^(\w+)[^\'\"]*/.exec(d1)){if(m[0].length===d1.length&&i[_+1]==='>'){_+=2;v=l(m[1]);if(a.ELEMENTS.hasOwnProperty(v)){if(h.endTag){h.endTag(v,q,J,L(h,i,_,s,q))}}}else{_=O(i,_,h,q,J,s)}}else{if(h.pcdata){h.pcdata('&lt;/',q,J,L(h,i,_,s,q))}}break;case'<':if(m=/^(\w+)\s*\/?/.exec(d1)){if(m[0].length===d1.length&&i[_+1]==='>'){_+=2;v=l(m[1]);if(a.ELEMENTS.hasOwnProperty(v)){if(h.startTag){h.startTag(v,[],q,J,L(h,i,_,s,q))}var e1=a.ELEMENTS[v];if(e1&H){var f1={name:v,next:_,eflags:e1};_=R(i,f1,h,q,J,s)}}}else{_=P(i,_,h,q,J,s)}}else{if(h.pcdata){h.pcdata('&lt;',q,J,L(h,i,_,s,q))}}break;case'<\!--':if(!s.noMoreEndComments){for(p=_+1;p<b1;p++){if(i[p]==='>'&&/--$/.test(i[p-1])){break}}if(p<b1){_=p+1}else{s.noMoreEndComments=true}}if(s.noMoreEndComments){if(h.pcdata){h.pcdata('&lt;!--',q,J,L(h,i,_,s,q))}}break;case'<\!':if(!/^\w/.test(d1)){if(h.pcdata){h.pcdata('&lt;!',q,J,L(h,i,_,s,q))}}else{if(!s.noMoreGT){for(p=_+1;p<b1;p++){if(i[p]==='>'){break}}if(p<b1){_=p+1}else{s.noMoreGT=true}}if(s.noMoreGT){if(h.pcdata){h.pcdata('&lt;!',q,J,L(h,i,_,s,q))}}}break;case'<?':if(!s.noMoreGT){for(p=_+1;p<b1;p++){if(i[p]==='>'){break}}if(p<b1){_=p+1}else{s.noMoreGT=true}}if(s.noMoreGT){if(h.pcdata){h.pcdata('&lt;?',q,J,L(h,i,_,s,q))}}break;case'>':if(h.pcdata){h.pcdata("&gt;",q,J,L(h,i,_,s,q))}break;case'':break;default:if(h.pcdata){h.pcdata(c1,q,J,L(h,i,_,s,q))}break}}if(h.endDoc){h.endDoc(q)}}catch(e){if(e!==J){throw e}}}function N(s){var e=/(<\/|<\!--|<[!?]|[&<>])/g;s+='';if(G){return s.split(e)}else{var p=[];var h=0;var m;while((m=e.exec(s))!==null){p.push(s.substring(h,m.index));p.push(m[0]);h=m.index+m[0].length}p.push(s.substring(h));return p}}function O(p,e,h,i,J,s){var m=S(p,e);if(!m){return p.length}if(m.eflags!==void 0){if(h.endTag){h.endTag(m.name,i,J,L(h,p,e,s,i))}}return m.next}function P(p,e,h,i,J,s){var m=S(p,e);if(!m){return p.length}if(m.eflags!==void 0){if(h.startTag){h.startTag(m.name,m.attrs,i,J,L(h,p,m.next,s,i))}if(m.eflags&H){return R(p,m,h,i,J,s)}}return m.next}var Q={};function R(e,i,h,m,J,s){var n=e.length;if(!Q.hasOwnProperty(i.name)){Q[i.name]=new RegExp('^'+i.name+'(?:[\\s\\/]|$)','i')}var q=Q[i.name];var v=i.next;var p=i.next+1;for(;p<n;p++){if(e[p-1]==='<\/'&&q.test(e[p])){break}}if(p<n){p-=1}var _=e.slice(v,p).join('');if(i.eflags&a.eflags.CDATA){if(h.cdata){h.cdata(_,m,J,L(h,e,p,s,m))}}else if(i.eflags&a.eflags.RCDATA){if(h.rcdata){h.rcdata(C(_),m,J,L(h,e,p,s,m))}}else{throw new Error('bug')}return p}function S(e,h){var m=/^(\w+)/.exec(e[h]);var i={name:l(m[1])};if(a.ELEMENTS.hasOwnProperty(i.name)){i.eflags=a.ELEMENTS[i.name]}else{i.eflags=void 0}var n=e[h].substr(m[0].length);var p=h+1;var q=e.length;for(;p<q;p++){if(e[p]==='>'){break}n+=e[p]}if(q<=p){return void 0}var s=[];while(n!==''){m=D.exec(n);if(!m){n=n.replace(/^[\s\S][^a-z\s]*/,'')}else if((m[4]&&!m[5])||(m[6]&&!m[7])){var v=m[4]||m[6];var _=false;var b1=[n,e[p++]];for(;p<q;p++){if(_){if(e[p]==='>'){break}}else if(0<=e[p].indexOf(v)){_=true}b1.push(e[p])}if(q<=p){break}n=b1.join('');continue}else{var c1=l(m[1]);var d1=m[2]?T(m[3]):c1;s.push(c1,d1);n=n.substr(m[0].length)}}i.attrs=s;i.next=p+1;return i}function T(v){var q=v.charCodeAt(0);if(q===0x22||q===0x27){v=v.substr(1,v.length-2)}return u(r(v))}function U(e){var s;var h;var m=function(i,n){if(!h){n.push(i)}};return I({startDoc:function(_){s=[];h=false},startTag:function(p,q,v){if(h){return}if(!a.ELEMENTS.hasOwnProperty(p)){return}var _=a.ELEMENTS[p];if(_&a.eflags.FOLDABLE){return}q=e(p,q);if(!q){h=!(_&a.eflags.EMPTY);return}if(!(_&a.eflags.EMPTY)){s.push(p)}v.push('<',p);for(var i=0,n=q.length;i<n;i+=2){var b1=q[i],c1=q[i+1];if(c1!==null&&c1!==void 0){v.push(' ',b1,'="',B(c1),'"')}}v.push('>')},endTag:function(n,p){if(h){h=false;return}if(!a.ELEMENTS.hasOwnProperty(n)){return}var q=a.ELEMENTS[n];if(!(q&(a.eflags.EMPTY|a.eflags.FOLDABLE))){var v;if(q&a.eflags.OPTIONAL_ENDTAG){for(v=s.length;--v>=0;){var _=s[v];if(_===n){break}if(!(a.ELEMENTS[_]&a.eflags.OPTIONAL_ENDTAG)){return}}}else{for(v=s.length;--v>=0;){if(s[v]===n){break}}}if(v<0){return}for(var i=s.length;--i>v;){var _=s[i];if(!(a.ELEMENTS[_]&a.eflags.OPTIONAL_ENDTAG)){p.push('<\/',_,'>')}}s.length=v;p.push('<\/',n,'>')}},pcdata:m,rcdata:m,cdata:m,endDoc:function(i){for(;s.length;s.length--){i.push('<\/',s[s.length-1],'>')}}})}var V=new RegExp('^'+'(?:'+'([^:\/?# ]+)'+':)?');var W=/^(?:https?|mailto)$/i;function X(e,n){if(!n){return null}var p=(''+e).match(V);if(p&&(!p[1]||W.test(p[1]))){return n(e)}else{return null}}function Y(e,h,m,n){for(var i=0;i<h.length;i+=2){var p=h[i];var v=h[i+1];var q=null,s;if((s=e+'::'+p,a.ATTRIBS.hasOwnProperty(s))||(s='*::'+p,a.ATTRIBS.hasOwnProperty(s))){q=a.ATTRIBS[s]}if(q!==null){switch(q){case a.atype.NONE:break;case a.atype.SCRIPT:v=null;break;case a.atype.STYLE:if('undefined'===typeof b){v=null;break}var _=[];b(v,{declaration:function(b1,c1){var d1=b1.toLowerCase();var e1=d[d1];if(!e1){return}c(d1,e1,c1,m);_.push(b1+': '+c1.join(' '))}});v=_.length>0?_.join(' ; '):null;break;case a.atype.ID:case a.atype.IDREF:case a.atype.IDREFS:case a.atype.GLOBAL_NAME:case a.atype.LOCAL_NAME:case a.atype.CLASSES:v=n?n(v):v;break;case a.atype.URI:v=X(v,m);break;case a.atype.URI_FRAGMENT:if(v&&'#'===v.charAt(0)){v=v.substring(1);v=n?n(v):v;if(v!==null&&v!==void 0){v='#'+v}}else{v=null}break;default:v=null;break}}else{v=null}h[i+1]=v}return h}function Z(e,h){return function(i,m){if(!(a.ELEMENTS[i]&a.eflags.UNSAFE)){return Y(i,m,e,h)}}}function $(i,e){var h=[];U(e)(i,h);return h.join('')}function a1(i,e,h){var m=Z(e,h);return $(i,m)}return{escapeAttrib:B,makeHtmlSanitizer:U,makeSaxParser:I,makeTagPolicy:Z,normalizeRCData:C,sanitize:a1,sanitizeAttribs:Y,sanitizeWithPolicy:$,unescapeEntities:u}})(html4);var html_sanitize=html.sanitize;if(typeof window!=='undefined'){window['html']=html;window['html_sanitize']=html_sanitize}
/*!
 * jQuery JavaScript Library v1.11.1
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-05-01T17:42Z
 */
(function(g,f){if(typeof module==="object"&&typeof module.exports==="object"){module.exports=g.document?f(g,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document")}return f(w)}}else{f(g)}}(typeof window!=="undefined"?window:this,function(w,c){var d=[];var f=d.slice;var g=d.concat;var h=d.push;var k=d.indexOf;var o={};var q=o.toString;var u=o.hasOwnProperty;var x={};var y="1.11.1",Q=function(s,a){return new Q.fn.init(s,a)},z=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,l){return l.toUpperCase()};Q.fn=Q.prototype={jquery:y,constructor:Q,selector:"",length:0,toArray:function(){return f.call(this)},get:function(n){return n!=null?(n<0?this[n+this.length]:this[n]):f.call(this)},pushStack:function(a){var r=Q.merge(this.constructor(),a);r.prevObject=this;r.context=this.context;return r},each:function(a,b){return Q.each(this,a,b)},map:function(a){return this.pushStack(Q.map(this,function(b,i){return a.call(b,i,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(i){var l=this.length,j=+i+(i<0?l:0);return this.pushStack(j>=0&&j<l?[this[j]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:d.sort,splice:d.splice};Q.extend=Q.fn.extend=function(){var s,a,b,n,j,l,t=arguments[0]||{},i=1,m=arguments.length,p=false;if(typeof t==="boolean"){p=t;t=arguments[i]||{};i++}if(typeof t!=="object"&&!Q.isFunction(t)){t={}}if(i===m){t=this;i--}for(;i<m;i++){if((j=arguments[i])!=null){for(n in j){s=t[n];b=j[n];if(t===b){continue}if(p&&b&&(Q.isPlainObject(b)||(a=Q.isArray(b)))){if(a){a=false;l=s&&Q.isArray(s)?s:[]}else{l=s&&Q.isPlainObject(s)?s:{}}t[n]=Q.extend(p,l,b)}else if(b!==undefined){t[n]=b}}}}return t};Q.extend({expando:"jQuery"+(y+Math.random()).replace(/\D/g,""),isReady:true,error:function(m){throw new Error(m)},noop:function(){},isFunction:function(a){return Q.type(a)==="function"},isArray:Array.isArray||function(a){return Q.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!Q.isArray(a)&&a-parseFloat(a)>=0},isEmptyObject:function(a){var n;for(n in a){return false}return true},isPlainObject:function(a){var b;if(!a||Q.type(a)!=="object"||a.nodeType||Q.isWindow(a)){return false}try{if(a.constructor&&!u.call(a,"constructor")&&!u.call(a.constructor.prototype,"isPrototypeOf")){return false}}catch(e){return false}if(x.ownLast){for(b in a){return u.call(a,b)}}for(b in a){}return b===undefined||u.call(a,b)},type:function(a){if(a==null){return a+""}return typeof a==="object"||typeof a==="function"?o[q.call(a)]||"object":typeof a},globalEval:function(a){if(a&&Q.trim(a)){(w.execScript||function(a){w["eval"].call(w,a)})(a)}},camelCase:function(s){return s.replace(A,"ms-").replace(B,C)},nodeName:function(a,n){return a.nodeName&&a.nodeName.toLowerCase()===n.toLowerCase()},each:function(a,b,j){var v,i=0,l=a.length,m=D(a);if(j){if(m){for(;i<l;i++){v=b.apply(a[i],j);if(v===false){break}}}else{for(i in a){v=b.apply(a[i],j);if(v===false){break}}}}else{if(m){for(;i<l;i++){v=b.call(a[i],i,a[i]);if(v===false){break}}}else{for(i in a){v=b.call(a[i],i,a[i]);if(v===false){break}}}}return a},trim:function(t){return t==null?"":(t+"").replace(z,"")},makeArray:function(a,r){var b=r||[];if(a!=null){if(D(Object(a))){Q.merge(b,typeof a==="string"?[a]:a)}else{h.call(b,a)}}return b},inArray:function(a,b,i){var l;if(b){if(k){return k.call(b,a,i)}l=b.length;i=i?i<0?Math.max(0,l+i):i:0;for(;i<l;i++){if(i in b&&b[i]===a){return i}}}return-1},merge:function(a,s){var l=+s.length,j=0,i=a.length;while(j<l){a[i++]=s[j++]}if(l!==l){while(s[j]!==undefined){a[i++]=s[j++]}}a.length=i;return a},grep:function(a,b,j){var l,m=[],i=0,n=a.length,p=!j;for(;i<n;i++){l=!b(a[i],i);if(l!==p){m.push(a[i])}}return m},map:function(a,b,j){var v,i=0,l=a.length,m=D(a),r=[];if(m){for(;i<l;i++){v=b(a[i],i,j);if(v!=null){r.push(v)}}}else{for(i in a){v=b(a[i],i,j);if(v!=null){r.push(v)}}}return g.apply([],r)},guid:1,proxy:function(a,b){var j,p,t;if(typeof b==="string"){t=a[b];b=a;a=t}if(!Q.isFunction(a)){return undefined}j=f.call(arguments,2);p=function(){return a.apply(b||this,j.concat(f.call(arguments)))};p.guid=a.guid=a.guid||Q.guid++;return p},now:function(){return+(new Date())},support:x});Q.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(i,n){o["[object "+n+"]"]=n.toLowerCase()});function D(a){var l=a.length,t=Q.type(a);if(t==="function"||Q.isWindow(a)){return false}if(a.nodeType===1&&l){return true}return t==="array"||l===0||typeof l==="number"&&l>0&&(l-1)in a}var S=
/*!
 * Sizzle CSS Selector Engine v1.10.19
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-04-18
 */
(function(w){var i,x,l,n,p,t,r,s,v,r3,s3,t3,J,o3,u3,v3,w3,x3,y3,z3="sizzle"+-(new Date()),A3=w.document,B3=0,C3=0,D3=c4(),E3=c4(),F3=c4(),G3=function(a,b){if(a===b){s3=true}return 0},X=typeof undefined,H3=1<<31,u=({}).hasOwnProperty,I3=[],J3=I3.pop,K3=I3.push,h=I3.push,f=I3.slice,k=I3.indexOf||function(a){var i=0,b=this.length;for(;i<b;i++){if(this[i]===a){return i}}return-1},L3="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M3="[\\x20\\t\\r\\n\\f]",N3="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O3=N3.replace("w","w#"),P3="\\["+M3+"*("+N3+")(?:"+M3+"*([*^$|!~]?=)"+M3+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O3+"))|)"+M3+"*\\]",Q3=":("+N3+")(?:\\(("+"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+"((?:\\\\.|[^\\\\()[\\]]|"+P3+")*)|"+".*"+")\\)|)",z=new RegExp("^"+M3+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M3+"+$","g"),R3=new RegExp("^"+M3+"*,"+M3+"*"),S3=new RegExp("^"+M3+"*([>+~]|"+M3+")"+M3+"*"),T3=new RegExp("="+M3+"*([^\\]'\"]*?)"+M3+"*\\]","g"),U3=new RegExp(Q3),V3=new RegExp("^"+O3+"$"),W3={"ID":new RegExp("^#("+N3+")"),"CLASS":new RegExp("^\\.("+N3+")"),"TAG":new RegExp("^("+N3.replace("w","w*")+")"),"ATTR":new RegExp("^"+P3),"PSEUDO":new RegExp("^"+Q3),"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M3+"*(even|odd|(([+-]|)(\\d*)n|)"+M3+"*(?:([+-]|)"+M3+"*(\\d+)|))"+M3+"*\\)|)","i"),"bool":new RegExp("^(?:"+L3+")$","i"),"needsContext":new RegExp("^"+M3+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M3+"*((?:-\\d)?\\d*)"+M3+"*\\)|)(?=[^-]|$)","i")},X3=/^(?:input|select|textarea|button)$/i,Y3=/^h\d$/i,Z3=/^[^{]+\{\s*\[native \w/,K=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$3=/[+~]/,_3=/'|\\/g,a4=new RegExp("\\\\([\\da-f]{1,6}"+M3+"?|("+M3+")|.)","ig"),b4=function(_,a,b){var j="0x"+a-0x10000;return j!==j||b?a:j<0?String.fromCharCode(j+0x10000):String.fromCharCode(j>>10|0xD800,j&0x3FF|0xDC00)};try{h.apply((I3=f.call(A3.childNodes)),A3.childNodes);I3[A3.childNodes.length].nodeType}catch(e){h={apply:I3.length?function(a,b){K3.apply(a,f.call(b))}:function(a,b){var j=a.length,i=0;while((a[j++]=b[i++])){}a.length=j-1}}}function S(a,b,j,_){var u4,v4,m,w4,i,x4,y4,z4,A4,B4;if((b?b.ownerDocument||b:A3)!==J){t3(b)}b=b||J;j=j||[];if(!a||typeof a!=="string"){return j}if((w4=b.nodeType)!==1&&w4!==9){return[]}if(u3&&!_){if((u4=K.exec(a))){if((m=u4[1])){if(w4===9){v4=b.getElementById(m);if(v4&&v4.parentNode){if(v4.id===m){j.push(v4);return j}}else{return j}}else{if(b.ownerDocument&&(v4=b.ownerDocument.getElementById(m))&&y3(b,v4)&&v4.id===m){j.push(v4);return j}}}else if(u4[2]){h.apply(j,b.getElementsByTagName(a));return j}else if((m=u4[3])&&x.getElementsByClassName&&b.getElementsByClassName){h.apply(j,b.getElementsByClassName(m));return j}}if(x.qsa&&(!v3||!v3.test(a))){z4=y4=z3;A4=b;B4=w4===9&&a;if(w4===1&&b.nodeName.toLowerCase()!=="object"){x4=t(a);if((y4=b.getAttribute("id"))){z4=y4.replace(_3,"\\$&")}else{b.setAttribute("id",z4)}z4="[id='"+z4+"'] ";i=x4.length;while(i--){x4[i]=z4+m4(x4[i])}A4=$3.test(a)&&k4(b.parentNode)||b;B4=x4.join(",")}if(B4){try{h.apply(j,A4.querySelectorAll(B4));return j}catch(C4){}finally{if(!y4){b.removeAttribute("id")}}}}}return s(a.replace(z,"$1"),b,j,_)}function c4(){var a=[];function b(j,m){if(a.push(j+" ")>l.cacheLength){delete b[a.shift()]}return(b[j+" "]=m)}return b}function d4(a){a[z3]=true;return a}function e4(a){var b=J.createElement("div");try{return!!a(b)}catch(e){return false}finally{if(b.parentNode){b.parentNode.removeChild(b)}b=null}}function f4(a,b){var I3=a.split("|"),i=a.length;while(i--){l.attrHandle[I3[i]]=b}}function g4(a,b){var j=b&&a,m=j&&a.nodeType===1&&b.nodeType===1&&(~b.sourceIndex||H3)-(~a.sourceIndex||H3);if(m){return m}if(j){while((j=j.nextSibling)){if(j===b){return-1}}}return a?1:-1}function h4(a){return function(b){var j=b.nodeName.toLowerCase();return j==="input"&&b.type===a}}function i4(a){return function(b){var j=b.nodeName.toLowerCase();return(j==="input"||j==="button")&&b.type===a}}function j4(a){return d4(function(b){b=+b;return d4(function(m,x3){var j,_=a([],m.length,b),i=_.length;while(i--){if(m[(j=_[i])]){m[j]=!(x3[j]=m[j])}}})})}function k4(a){return a&&typeof a.getElementsByTagName!==X&&a}x=S.support={};p=S.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":false};t3=S.setDocument=function(j){var _,u4=j?j.ownerDocument||j:A3,v4=u4.defaultView;if(u4===J||u4.nodeType!==9||!u4.documentElement){return J}J=u4;o3=u4.documentElement;u3=!p(u4);if(v4&&v4!==v4.top){if(v4.addEventListener){v4.addEventListener("unload",function(){t3()},false)}else if(v4.attachEvent){v4.attachEvent("onunload",function(){t3()})}}x.attributes=e4(function(a){a.className="i";return!a.getAttribute("className")});x.getElementsByTagName=e4(function(a){a.appendChild(u4.createComment(""));return!a.getElementsByTagName("*").length});x.getElementsByClassName=Z3.test(u4.getElementsByClassName)&&e4(function(a){a.innerHTML="<div class='a'></div><div class='a i'></div>";a.firstChild.className="i";return a.getElementsByClassName("i").length===2});x.getById=e4(function(a){o3.appendChild(a).id=z3;return!u4.getElementsByName||!u4.getElementsByName(z3).length});if(x.getById){l.find["ID"]=function(a,b){if(typeof b.getElementById!==X&&u3){var m=b.getElementById(a);return m&&m.parentNode?[m]:[]}};l.filter["ID"]=function(a){var b=a.replace(a4,b4);return function(m){return m.getAttribute("id")===b}}}else{delete l.find["ID"];l.filter["ID"]=function(a){var b=a.replace(a4,b4);return function(m){var j=typeof m.getAttributeNode!==X&&m.getAttributeNode("id");return j&&j.value===b}}}l.find["TAG"]=x.getElementsByTagName?function(a,b){if(typeof b.getElementsByTagName!==X){return b.getElementsByTagName(a)}}:function(a,b){var m,w4=[],i=0,x4=b.getElementsByTagName(a);if(a==="*"){while((m=x4[i++])){if(m.nodeType===1){w4.push(m)}}return w4}return x4};l.find["CLASS"]=x.getElementsByClassName&&function(a,b){if(typeof b.getElementsByClassName!==X&&u3){return b.getElementsByClassName(a)}};w3=[];v3=[];if((x.qsa=Z3.test(u4.querySelectorAll))){e4(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>";if(a.querySelectorAll("[msallowclip^='']").length){v3.push("[*^$]="+M3+"*(?:''|\"\")")}if(!a.querySelectorAll("[selected]").length){v3.push("\\["+M3+"*(?:value|"+L3+")")}if(!a.querySelectorAll(":checked").length){v3.push(":checked")}});e4(function(a){var b=u4.createElement("input");b.setAttribute("type","hidden");a.appendChild(b).setAttribute("name","D");if(a.querySelectorAll("[name=d]").length){v3.push("name"+M3+"*[*^$|!~]?=")}if(!a.querySelectorAll(":enabled").length){v3.push(":enabled",":disabled")}a.querySelectorAll("*,:x");v3.push(",.*:")})}if((x.matchesSelector=Z3.test((x3=o3.matches||o3.webkitMatchesSelector||o3.mozMatchesSelector||o3.oMatchesSelector||o3.msMatchesSelector)))){e4(function(a){x.disconnectedMatch=x3.call(a,"div");x3.call(a,"[s!='']:x");w3.push("!=",Q3)})}v3=v3.length&&new RegExp(v3.join("|"));w3=w3.length&&new RegExp(w3.join("|"));_=Z3.test(o3.compareDocumentPosition);y3=_||Z3.test(o3.contains)?function(a,b){var m=a.nodeType===9?a.documentElement:a,w4=b&&b.parentNode;return a===w4||!!(w4&&w4.nodeType===1&&(m.contains?m.contains(w4):a.compareDocumentPosition&&a.compareDocumentPosition(w4)&16))}:function(a,b){if(b){while((b=b.parentNode)){if(b===a){return true}}}return false};G3=_?function(a,b){if(a===b){s3=true;return 0}var m=!a.compareDocumentPosition-!b.compareDocumentPosition;if(m){return m}m=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(m&1||(!x.sortDetached&&b.compareDocumentPosition(a)===m)){if(a===u4||a.ownerDocument===A3&&y3(A3,a)){return-1}if(b===u4||b.ownerDocument===A3&&y3(A3,b)){return 1}return r3?(k.call(r3,a)-k.call(r3,b)):0}return m&4?-1:1}:function(a,b){if(a===b){s3=true;return 0}var m,i=0,w4=a.parentNode,x4=b.parentNode,ap=[a],bp=[b];if(!w4||!x4){return a===u4?-1:b===u4?1:w4?-1:x4?1:r3?(k.call(r3,a)-k.call(r3,b)):0}else if(w4===x4){return g4(a,b)}m=a;while((m=m.parentNode)){ap.unshift(m)}m=b;while((m=m.parentNode)){bp.unshift(m)}while(ap[i]===bp[i]){i++}return i?g4(ap[i],bp[i]):ap[i]===A3?-1:bp[i]===A3?1:0};return u4};S.matches=function(a,b){return S(a,null,null,b)};S.matchesSelector=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}b=b.replace(T3,"='$1']");if(x.matchesSelector&&u3&&(!w3||!w3.test(b))&&(!v3||!v3.test(b))){try{var j=x3.call(a,b);if(j||x.disconnectedMatch||a.document&&a.document.nodeType!==11){return j}}catch(e){}}return S(b,J,null,[a]).length>0};S.contains=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}return y3(a,b)};S.attr=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}var j=l.attrHandle[b.toLowerCase()],m=j&&u.call(l.attrHandle,b.toLowerCase())?j(a,b,!u3):undefined;return m!==undefined?m:x.attributes||!u3?a.getAttribute(b):(m=a.getAttributeNode(b))&&m.specified?m.value:null};S.error=function(m){throw new Error("Syntax error, unrecognized expression: "+m)};S.uniqueSort=function(a){var b,m=[],j=0,i=0;s3=!x.detectDuplicates;r3=!x.sortStable&&a.slice(0);a.sort(G3);if(s3){while((b=a[i++])){if(b===a[i]){j=m.push(i)}}while(j--){a.splice(m[j],1)}}r3=null;return a};n=S.getText=function(a){var b,j="",i=0,m=a.nodeType;if(!m){while((b=a[i++])){j+=n(b)}}else if(m===1||m===9||m===11){if(typeof a.textContent==="string"){return a.textContent}else{for(a=a.firstChild;a;a=a.nextSibling){j+=n(a)}}}else if(m===3||m===4){return a.nodeValue}return j};l=S.selectors={cacheLength:50,createPseudo:d4,match:W3,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{"ATTR":function(m){m[1]=m[1].replace(a4,b4);m[3]=(m[3]||m[4]||m[5]||"").replace(a4,b4);if(m[2]==="~="){m[3]=" "+m[3]+" "}return m.slice(0,4)},"CHILD":function(m){m[1]=m[1].toLowerCase();if(m[1].slice(0,3)==="nth"){if(!m[3]){S.error(m[0])}m[4]=+(m[4]?m[5]+(m[6]||1):2*(m[3]==="even"||m[3]==="odd"));m[5]=+((m[7]+m[8])||m[3]==="odd")}else if(m[3]){S.error(m[0])}return m},"PSEUDO":function(m){var a,b=!m[6]&&m[2];if(W3["CHILD"].test(m[0])){return null}if(m[3]){m[2]=m[4]||m[5]||""}else if(b&&U3.test(b)&&(a=t(b,true))&&(a=b.indexOf(")",b.length-a)-b.length)){m[0]=m[0].slice(0,a);m[2]=b.slice(0,a)}return m.slice(0,3)}},filter:{"TAG":function(a){var b=a.replace(a4,b4).toLowerCase();return a==="*"?function(){return true}:function(j){return j.nodeName&&j.nodeName.toLowerCase()===b}},"CLASS":function(a){var b=D3[a+" "];return b||(b=new RegExp("(^|"+M3+")"+a+"("+M3+"|$)"))&&D3(a,function(j){return b.test(typeof j.className==="string"&&j.className||typeof j.getAttribute!==X&&j.getAttribute("class")||"")})},"ATTR":function(a,b,j){return function(m){var _=S.attr(m,a);if(_==null){return b==="!="}if(!b){return true}_+="";return b==="="?_===j:b==="!="?_!==j:b==="^="?j&&_.indexOf(j)===0:b==="*="?j&&_.indexOf(j)>-1:b==="$="?j&&_.slice(-j.length)===j:b==="~="?(" "+_+" ").indexOf(j)>-1:b==="|="?_===j||_.slice(0,j.length+1)===j+"-":false}},"CHILD":function(a,b,j,m,_){var u4=a.slice(0,3)!=="nth",v4=a.slice(-4)!=="last",w4=b==="of-type";return m===1&&_===0?function(x4){return!!x4.parentNode}:function(x4,y4,z4){var A4,B4,C4,D4,E4,F4,G4=u4!==v4?"nextSibling":"previousSibling",H4=x4.parentNode,I4=w4&&x4.nodeName.toLowerCase(),J4=!z4&&!w4;if(H4){if(u4){while(G4){C4=x4;while((C4=C4[G4])){if(w4?C4.nodeName.toLowerCase()===I4:C4.nodeType===1){return false}}F4=G4=a==="only"&&!F4&&"nextSibling"}return true}F4=[v4?H4.firstChild:H4.lastChild];if(v4&&J4){B4=H4[z3]||(H4[z3]={});A4=B4[a]||[];E4=A4[0]===B3&&A4[1];D4=A4[0]===B3&&A4[2];C4=E4&&H4.childNodes[E4];while((C4=++E4&&C4&&C4[G4]||(D4=E4=0)||F4.pop())){if(C4.nodeType===1&&++D4&&C4===x4){B4[a]=[B3,E4,D4];break}}}else if(J4&&(A4=(x4[z3]||(x4[z3]={}))[a])&&A4[0]===B3){D4=A4[1]}else{while((C4=++E4&&C4&&C4[G4]||(D4=E4=0)||F4.pop())){if((w4?C4.nodeName.toLowerCase()===I4:C4.nodeType===1)&&++D4){if(J4){(C4[z3]||(C4[z3]={}))[a]=[B3,D4]}if(C4===x4){break}}}}D4-=_;return D4===m||(D4%m===0&&D4/m>=0)}}},"PSEUDO":function(a,b){var j,m=l.pseudos[a]||l.setFilters[a.toLowerCase()]||S.error("unsupported pseudo: "+a);if(m[z3]){return m(b)}if(m.length>1){j=[a,a,"",b];return l.setFilters.hasOwnProperty(a.toLowerCase())?d4(function(_,x3){var u4,v4=m(_,b),i=v4.length;while(i--){u4=k.call(_,v4[i]);_[u4]=!(x3[u4]=v4[i])}}):function(_){return m(_,0,j)}}return m}},pseudos:{"not":d4(function(a){var b=[],j=[],m=r(a.replace(z,"$1"));return m[z3]?d4(function(_,x3,u4,v4){var w4,x4=m(_,null,v4,[]),i=_.length;while(i--){if((w4=x4[i])){_[i]=!(x3[i]=w4)}}}):function(_,u4,v4){b[0]=_;m(b,null,v4,j);return!j.pop()}}),"has":d4(function(a){return function(b){return S(a,b).length>0}}),"contains":d4(function(a){return function(b){return(b.textContent||b.innerText||n(b)).indexOf(a)>-1}}),"lang":d4(function(a){if(!V3.test(a||"")){S.error("unsupported lang: "+a)}a=a.replace(a4,b4).toLowerCase();return function(b){var j;do{if((j=u3?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))){j=j.toLowerCase();return j===a||j.indexOf(a+"-")===0}}while((b=b.parentNode)&&b.nodeType===1);return false}}),"target":function(a){var b=w.location&&w.location.hash;return b&&b.slice(1)===a.id},"root":function(a){return a===o3},"focus":function(a){return a===J.activeElement&&(!J.hasFocus||J.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},"enabled":function(a){return a.disabled===false},"disabled":function(a){return a.disabled===true},"checked":function(a){var b=a.nodeName.toLowerCase();return(b==="input"&&!!a.checked)||(b==="option"&&!!a.selected)},"selected":function(a){if(a.parentNode){a.parentNode.selectedIndex}return a.selected===true},"empty":function(a){for(a=a.firstChild;a;a=a.nextSibling){if(a.nodeType<6){return false}}return true},"parent":function(a){return!l.pseudos["empty"](a)},"header":function(a){return Y3.test(a.nodeName)},"input":function(a){return X3.test(a.nodeName)},"button":function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},"text":function(a){var b;return a.nodeName.toLowerCase()==="input"&&a.type==="text"&&((b=a.getAttribute("type"))==null||b.toLowerCase()==="text")},"first":j4(function(){return[0]}),"last":j4(function(m,a){return[a-1]}),"eq":j4(function(m,a,b){return[b<0?b+a:b]}),"even":j4(function(m,a){var i=0;for(;i<a;i+=2){m.push(i)}return m}),"odd":j4(function(m,a){var i=1;for(;i<a;i+=2){m.push(i)}return m}),"lt":j4(function(m,a,b){var i=b<0?b+a:b;for(;--i>=0;){m.push(i)}return m}),"gt":j4(function(m,a,b){var i=b<0?b+a:b;for(;++i<a;){m.push(i)}return m})}};l.pseudos["nth"]=l.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){l.pseudos[i]=h4(i)}for(i in{submit:true,reset:true}){l.pseudos[i]=i4(i)}function l4(){}l4.prototype=l.filters=l.pseudos;l.setFilters=new l4();t=S.tokenize=function(a,b){var m,j,_,u4,v4,w4,x4,y4=E3[a+" "];if(y4){return b?0:y4.slice(0)}v4=a;w4=[];x4=l.preFilter;while(v4){if(!m||(j=R3.exec(v4))){if(j){v4=v4.slice(j[0].length)||v4}w4.push((_=[]))}m=false;if((j=S3.exec(v4))){m=j.shift();_.push({value:m,type:j[0].replace(z," ")});v4=v4.slice(m.length)}for(u4 in l.filter){if((j=W3[u4].exec(v4))&&(!x4[u4]||(j=x4[u4](j)))){m=j.shift();_.push({value:m,type:u4,matches:j});v4=v4.slice(m.length)}}if(!m){break}}return b?v4.length:v4?S.error(a):E3(a,w4).slice(0)};function m4(a){var i=0,b=a.length,j="";for(;i<b;i++){j+=a[i].value}return j}function n4(m,a,b){var j=a.dir,_=b&&j==="parentNode",u4=C3++;return a.first?function(v4,w4,x4){while((v4=v4[j])){if(v4.nodeType===1||_){return m(v4,w4,x4)}}}:function(v4,w4,x4){var y4,z4,A4=[B3,u4];if(x4){while((v4=v4[j])){if(v4.nodeType===1||_){if(m(v4,w4,x4)){return true}}}}else{while((v4=v4[j])){if(v4.nodeType===1||_){z4=v4[z3]||(v4[z3]={});if((y4=z4[j])&&y4[0]===B3&&y4[1]===u4){return(A4[2]=y4[2])}else{z4[j]=A4;if((A4[2]=m(v4,w4,x4))){return true}}}}}}}function o4(m){return m.length>1?function(a,b,j){var i=m.length;while(i--){if(!m[i](a,b,j)){return false}}return true}:m[0]}function p4(a,b,j){var i=0,m=b.length;for(;i<m;i++){S(a,b[i],j)}return j}function q4(a,m,b,j,_){var u4,v4=[],i=0,w4=a.length,x4=m!=null;for(;i<w4;i++){if((u4=a[i])){if(!b||b(u4,j,_)){v4.push(u4);if(x4){m.push(i)}}}}return v4}function r4(a,b,m,j,_,u4){if(j&&!j[z3]){j=r4(j)}if(_&&!_[z3]){_=r4(_,u4)}return d4(function(v4,w4,x4,y4){var z4,i,A4,B4=[],C4=[],D4=w4.length,E4=v4||p4(b||"*",x4.nodeType?[x4]:x4,[]),F4=a&&(v4||!b)?q4(E4,B4,a,x4,y4):E4,G4=m?_||(v4?a:D4||j)?[]:w4:F4;if(m){m(F4,G4,x4,y4)}if(j){z4=q4(G4,C4);j(z4,[],x4,y4);i=z4.length;while(i--){if((A4=z4[i])){G4[C4[i]]=!(F4[C4[i]]=A4)}}}if(v4){if(_||a){if(_){z4=[];i=G4.length;while(i--){if((A4=G4[i])){z4.push((F4[i]=A4))}}_(null,(G4=[]),z4,y4)}i=G4.length;while(i--){if((A4=G4[i])&&(z4=_?k.call(v4,A4):B4[i])>-1){v4[z4]=!(w4[z4]=A4)}}}}else{G4=q4(G4===w4?G4.splice(D4,G4.length):G4);if(_){_(null,w4,G4,y4)}else{h.apply(w4,G4)}}})}function s4(a){var b,m,j,_=a.length,u4=l.relative[a[0].type],v4=u4||l.relative[" "],i=u4?1:0,w4=n4(function(z4){return z4===b},v4,true),x4=n4(function(z4){return k.call(b,z4)>-1},v4,true),y4=[function(z4,A4,B4){return(!u4&&(B4||A4!==v))||((b=A4).nodeType?w4(z4,A4,B4):x4(z4,A4,B4))}];for(;i<_;i++){if((m=l.relative[a[i].type])){y4=[n4(o4(y4),m)]}else{m=l.filter[a[i].type].apply(null,a[i].matches);if(m[z3]){j=++i;for(;j<_;j++){if(l.relative[a[j].type]){break}}return r4(i>1&&o4(y4),i>1&&m4(a.slice(0,i-1).concat({value:a[i-2].type===" "?"*":""})).replace(z,"$1"),m,i<j&&s4(a.slice(i,j)),j<_&&s4((a=a.slice(j))),j<_&&m4(a))}y4.push(m)}}return o4(y4)}function t4(a,b){var m=b.length>0,_=a.length>0,u4=function(v4,w4,x4,y4,z4){var A4,j,B4,C4=0,i="0",D4=v4&&[],E4=[],F4=v,G4=v4||_&&l.find["TAG"]("*",z4),H4=(B3+=F4==null?1:Math.random()||0.1),I4=G4.length;if(z4){v=w4!==J&&w4}for(;i!==I4&&(A4=G4[i])!=null;i++){if(_&&A4){j=0;while((B4=a[j++])){if(B4(A4,w4,x4)){y4.push(A4);break}}if(z4){B3=H4}}if(m){if((A4=!B4&&A4)){C4--}if(v4){D4.push(A4)}}}C4+=i;if(m&&i!==C4){j=0;while((B4=b[j++])){B4(D4,E4,w4,x4)}if(v4){if(C4>0){while(i--){if(!(D4[i]||E4[i])){E4[i]=J3.call(y4)}}}E4=q4(E4)}h.apply(y4,E4);if(z4&&!v4&&E4.length>0&&(C4+b.length)>1){S.uniqueSort(y4)}}if(z4){B3=H4;v=F4}return D4};return m?d4(u4):u4}r=S.compile=function(a,m){var i,b=[],j=[],_=F3[a+" "];if(!_){if(!m){m=t(a)}i=m.length;while(i--){_=s4(m[i]);if(_[z3]){b.push(_)}else{j.push(_)}}_=F3(a,t4(j,b));_.selector=a}return _};s=S.select=function(a,b,j,m){var i,_,u4,v4,w4,x4=typeof a==="function"&&a,y4=!m&&t((a=x4.selector||a));j=j||[];if(y4.length===1){_=y4[0]=y4[0].slice(0);if(_.length>2&&(u4=_[0]).type==="ID"&&x.getById&&b.nodeType===9&&u3&&l.relative[_[1].type]){b=(l.find["ID"](u4.matches[0].replace(a4,b4),b)||[])[0];if(!b){return j}else if(x4){b=b.parentNode}a=a.slice(_.shift().value.length)}i=W3["needsContext"].test(a)?0:_.length;while(i--){u4=_[i];if(l.relative[(v4=u4.type)]){break}if((w4=l.find[v4])){if((m=w4(u4.matches[0].replace(a4,b4),$3.test(_[0].type)&&k4(b.parentNode)||b))){_.splice(i,1);a=m.length&&m4(_);if(!a){h.apply(j,m);return j}break}}}}(x4||r(a,y4))(m,b,!u3,j,$3.test(a)&&k4(b.parentNode)||b);return j};x.sortStable=z3.split("").sort(G3).join("")===z3;x.detectDuplicates=!!s3;t3();x.sortDetached=e4(function(a){return a.compareDocumentPosition(J.createElement("div"))&1});if(!e4(function(a){a.innerHTML="<a href='#'></a>";return a.firstChild.getAttribute("href")==="#"})){f4("type|href|height|width",function(a,b,p){if(!p){return a.getAttribute(b,b.toLowerCase()==="type"?1:2)}})}if(!x.attributes||!e4(function(a){a.innerHTML="<input/>";a.firstChild.setAttribute("value","");return a.firstChild.getAttribute("value")===""})){f4("value",function(a,b,p){if(!p&&a.nodeName.toLowerCase()==="input"){return a.defaultValue}})}if(!e4(function(a){return a.getAttribute("disabled")==null})){f4(L3,function(a,b,p){var j;if(!p){return a[b]===true?b.toLowerCase():(j=a.getAttributeNode(b))&&j.specified?j.value:null}})}return S})(w);Q.find=S;Q.expr=S.selectors;Q.expr[":"]=Q.expr.pseudos;Q.unique=S.uniqueSort;Q.text=S.getText;Q.isXMLDoc=S.isXML;Q.contains=S.contains;var E=Q.expr.match.needsContext;var F=(/^<(\w+)\s*\/?>(?:<\/\1>|)$/);var G=/^.[^:#\[\.,]*$/;function H(a,b,n){if(Q.isFunction(b)){return Q.grep(a,function(j,i){return!!b.call(j,i,j)!==n})}if(b.nodeType){return Q.grep(a,function(j){return(j===b)!==n})}if(typeof b==="string"){if(G.test(b)){return Q.filter(b,a,n)}b=Q.filter(b,a)}return Q.grep(a,function(j){return(Q.inArray(j,b)>=0)!==n})}Q.filter=function(a,b,n){var j=b[0];if(n){a=":not("+a+")"}return b.length===1&&j.nodeType===1?Q.find.matchesSelector(j,a)?[j]:[]:Q.find.matches(a,Q.grep(b,function(j){return j.nodeType===1}))};Q.fn.extend({find:function(s){var i,r=[],a=this,l=a.length;if(typeof s!=="string"){return this.pushStack(Q(s).filter(function(){for(i=0;i<l;i++){if(Q.contains(a[i],this)){return true}}}))}for(i=0;i<l;i++){Q.find(s,a[i],r)}r=this.pushStack(l>1?Q.unique(r):r);r.selector=this.selector?this.selector+" "+s:s;return r},filter:function(s){return this.pushStack(H(this,s||[],false))},not:function(s){return this.pushStack(H(this,s||[],true))},is:function(s){return!!H(this,typeof s==="string"&&E.test(s)?Q(s):s||[],false).length}});var I,J=w.document,K=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,L=Q.fn.init=function(s,a){var m,b;if(!s){return this}if(typeof s==="string"){if(s.charAt(0)==="<"&&s.charAt(s.length-1)===">"&&s.length>=3){m=[null,s,null]}else{m=K.exec(s)}if(m&&(m[1]||!a)){if(m[1]){a=a instanceof Q?a[0]:a;Q.merge(this,Q.parseHTML(m[1],a&&a.nodeType?a.ownerDocument||a:J,true));if(F.test(m[1])&&Q.isPlainObject(a)){for(m in a){if(Q.isFunction(this[m])){this[m](a[m])}else{this.attr(m,a[m])}}}return this}else{b=J.getElementById(m[2]);if(b&&b.parentNode){if(b.id!==m[2]){return I.find(s)}this.length=1;this[0]=b}this.context=J;this.selector=s;return this}}else if(!a||a.jquery){return(a||I).find(s)}else{return this.constructor(a).find(s)}}else if(s.nodeType){this.context=this[0]=s;this.length=1;return this}else if(Q.isFunction(s)){return typeof I.ready!=="undefined"?I.ready(s):s(Q)}if(s.selector!==undefined){this.selector=s.selector;this.context=s.context}return Q.makeArray(s,this)};L.prototype=Q.fn;I=Q(J);var M=/^(?:parents|prev(?:Until|All))/,N={children:true,contents:true,next:true,prev:true};Q.extend({dir:function(a,b,j){var m=[],l=a[b];while(l&&l.nodeType!==9&&(j===undefined||l.nodeType!==1||!Q(l).is(j))){if(l.nodeType===1){m.push(l)}l=l[b]}return m},sibling:function(n,a){var r=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==a){r.push(n)}}return r}});Q.fn.extend({has:function(t){var i,a=Q(t,this),l=a.length;return this.filter(function(){for(i=0;i<l;i++){if(Q.contains(this,a[i])){return true}}})},closest:function(s,a){var b,i=0,l=this.length,m=[],p=E.test(s)||typeof s!=="string"?Q(s,a||this.context):0;for(;i<l;i++){for(b=this[i];b&&b!==a;b=b.parentNode){if(b.nodeType<11&&(p?p.index(b)>-1:b.nodeType===1&&Q.find.matchesSelector(b,s))){m.push(b);break}}}return this.pushStack(m.length>1?Q.unique(m):m)},index:function(a){if(!a){return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1}if(typeof a==="string"){return Q.inArray(this[0],Q(a))}return Q.inArray(a.jquery?a[0]:a,this)},add:function(s,a){return this.pushStack(Q.unique(Q.merge(this.get(),Q(s,a))))},addBack:function(s){return this.add(s==null?this.prevObject:this.prevObject.filter(s))}});function O(a,b){do{a=a[b]}while(a&&a.nodeType!==1);return a}Q.each({parent:function(a){var p=a.parentNode;return p&&p.nodeType!==11?p:null},parents:function(a){return Q.dir(a,"parentNode")},parentsUntil:function(a,i,b){return Q.dir(a,"parentNode",b)},next:function(a){return O(a,"nextSibling")},prev:function(a){return O(a,"previousSibling")},nextAll:function(a){return Q.dir(a,"nextSibling")},prevAll:function(a){return Q.dir(a,"previousSibling")},nextUntil:function(a,i,b){return Q.dir(a,"nextSibling",b)},prevUntil:function(a,i,b){return Q.dir(a,"previousSibling",b)},siblings:function(a){return Q.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return Q.sibling(a.firstChild)},contents:function(a){return Q.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:Q.merge([],a.childNodes)}},function(n,a){Q.fn[n]=function(b,s){var r=Q.map(this,a,b);if(n.slice(-5)!=="Until"){s=b}if(s&&typeof s==="string"){r=Q.filter(s,r)}if(this.length>1){if(!N[n]){r=Q.unique(r)}if(M.test(n)){r=r.reverse()}}return this.pushStack(r)}});var P=(/\S+/g);var R={};function T(a){var b=R[a]={};Q.each(a.match(P)||[],function(_,j){b[j]=true});return b}Q.Callbacks=function(a){a=typeof a==="string"?(R[a]||T(a)):Q.extend({},a);var b,m,j,l,n,p,r=[],s=!a.once&&[],t=function(_){m=a.memory&&_;j=true;n=p||0;p=0;l=r.length;b=true;for(;r&&n<l;n++){if(r[n].apply(_[0],_[1])===false&&a.stopOnFalse){m=false;break}}b=false;if(r){if(s){if(s.length){t(s.shift())}}else if(m){r=[]}else{v.disable()}}},v={add:function(){if(r){var r3=r.length;(function add(s3){Q.each(s3,function(_,t3){var u3=Q.type(t3);if(u3==="function"){if(!a.unique||!v.has(t3)){r.push(t3)}}else if(t3&&t3.length&&u3!=="string"){add(t3)}})})(arguments);if(b){l=r.length}else if(m){p=r3;t(m)}}return this},remove:function(){if(r){Q.each(arguments,function(_,r3){var s3;while((s3=Q.inArray(r3,r,s3))>-1){r.splice(s3,1);if(b){if(s3<=l){l--}if(s3<=n){n--}}}})}return this},has:function(_){return _?Q.inArray(_,r)>-1:!!(r&&r.length)},empty:function(){r=[];l=0;return this},disable:function(){r=s=m=undefined;return this},disabled:function(){return!r},lock:function(){s=undefined;if(!m){v.disable()}return this},locked:function(){return!s},fireWith:function(_,r3){if(r&&(!j||s)){r3=r3||[];r3=[_,r3.slice?r3.slice():r3];if(b){s.push(r3)}else{t(r3)}}return this},fire:function(){v.fireWith(this,arguments);return this},fired:function(){return!!j}};return v};Q.extend({Deferred:function(a){var t=[["resolve","done",Q.Callbacks("once memory"),"resolved"],["reject","fail",Q.Callbacks("once memory"),"rejected"],["notify","progress",Q.Callbacks("memory")]],s="pending",p={state:function(){return s},always:function(){b.done(arguments).fail(arguments);return this},then:function(){var j=arguments;return Q.Deferred(function(n){Q.each(t,function(i,l){var m=Q.isFunction(j[i])&&j[i];b[l[1]](function(){var r=m&&m.apply(this,arguments);if(r&&Q.isFunction(r.promise)){r.promise().done(n.resolve).fail(n.reject).progress(n.notify)}else{n[l[0]+"With"](this===p?n.promise():this,m?[r]:arguments)}})});j=null}).promise()},promise:function(j){return j!=null?Q.extend(j,p):p}},b={};p.pipe=p.then;Q.each(t,function(i,j){var l=j[2],m=j[3];p[j[1]]=l.add;if(m){l.add(function(){s=m},t[i^1][2].disable,t[2][2].lock)}b[j[0]]=function(){b[j[0]+"With"](this===b?p:this,arguments);return this};b[j[0]+"With"]=l.fireWith});p.promise(b);if(a){a.call(b,b)}return b},when:function(s){var i=0,r=f.call(arguments),l=r.length,a=l!==1||(s&&Q.isFunction(s.promise))?l:0,b=a===1?s:Q.Deferred(),j=function(i,t,v){return function(_){t[i]=this;v[i]=arguments.length>1?f.call(arguments):_;if(v===p){b.notifyWith(t,v)}else if(!(--a)){b.resolveWith(t,v)}}},p,m,n;if(l>1){p=new Array(l);m=new Array(l);n=new Array(l);for(;i<l;i++){if(r[i]&&Q.isFunction(r[i].promise)){r[i].promise().done(j(i,n,r)).fail(b.reject).progress(j(i,m,p))}else{--a}}}if(!a){b.resolveWith(n,r)}return b.promise()}});var U;Q.fn.ready=function(a){Q.ready.promise().done(a);return this};Q.extend({isReady:false,readyWait:1,holdReady:function(a){if(a){Q.readyWait++}else{Q.ready(true)}},ready:function(a){if(a===true?--Q.readyWait:Q.isReady){return}if(!J.body){return setTimeout(Q.ready)}Q.isReady=true;if(a!==true&&--Q.readyWait>0){return}U.resolveWith(J,[Q]);if(Q.fn.triggerHandler){Q(J).triggerHandler("ready");Q(J).off("ready")}}});function V(){if(J.addEventListener){J.removeEventListener("DOMContentLoaded",W,false);w.removeEventListener("load",W,false)}else{J.detachEvent("onreadystatechange",W);w.detachEvent("onload",W)}}function W(){if(J.addEventListener||event.type==="load"||J.readyState==="complete"){V();Q.ready()}}Q.ready.promise=function(a){if(!U){U=Q.Deferred();if(J.readyState==="complete"){setTimeout(Q.ready)}else if(J.addEventListener){J.addEventListener("DOMContentLoaded",W,false);w.addEventListener("load",W,false)}else{J.attachEvent("onreadystatechange",W);w.attachEvent("onload",W);var t=false;try{t=w.frameElement==null&&J.documentElement}catch(e){}if(t&&t.doScroll){(function doScrollCheck(){if(!Q.isReady){try{t.doScroll("left")}catch(e){return setTimeout(doScrollCheck,50)}V();Q.ready()}})()}}}return U.promise(a)};var X=typeof undefined;var i;for(i in Q(x)){break}x.ownLast=i!=="0";x.inlineBlockNeedsLayout=false;Q(function(){var v,a,b,j;b=J.getElementsByTagName("body")[0];if(!b||!b.style){return}a=J.createElement("div");j=J.createElement("div");j.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";b.appendChild(j).appendChild(a);if(typeof a.style.zoom!==X){a.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";x.inlineBlockNeedsLayout=v=a.offsetWidth===3;if(v){b.style.zoom=1}}b.removeChild(j)});(function(){var a=J.createElement("div");if(x.deleteExpando==null){x.deleteExpando=true;try{delete a.test}catch(e){x.deleteExpando=false}}a=null})();Q.acceptData=function(a){var n=Q.noData[(a.nodeName+" ").toLowerCase()],b=+a.nodeType||1;return b!==1&&b!==9?false:!n||n!==true&&a.getAttribute("classid")===n};var Y=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/([A-Z])/g;function $(a,b,j){if(j===undefined&&a.nodeType===1){var n="data-"+b.replace(Z,"-$1").toLowerCase();j=a.getAttribute(n);if(typeof j==="string"){try{j=j==="true"?true:j==="false"?false:j==="null"?null:+j+""===j?+j:Y.test(j)?Q.parseJSON(j):j}catch(e){}Q.data(a,b,j)}else{j=undefined}}return j}function a1(a){var n;for(n in a){if(n==="data"&&Q.isEmptyObject(a[n])){continue}if(n!=="toJSON"){return false}}return true}function b1(a,n,b,p){if(!Q.acceptData(a)){return}var r,t,j=Q.expando,l=a.nodeType,m=l?Q.cache:a,s=l?a[j]:a[j]&&j;if((!s||!m[s]||(!p&&!m[s].data))&&b===undefined&&typeof n==="string"){return}if(!s){if(l){s=a[j]=d.pop()||Q.guid++}else{s=j}}if(!m[s]){m[s]=l?{}:{toJSON:Q.noop}}if(typeof n==="object"||typeof n==="function"){if(p){m[s]=Q.extend(m[s],n)}else{m[s].data=Q.extend(m[s].data,n)}}t=m[s];if(!p){if(!t.data){t.data={}}t=t.data}if(b!==undefined){t[Q.camelCase(n)]=b}if(typeof n==="string"){r=t[n];if(r==null){r=t[Q.camelCase(n)]}}else{r=t}return r}function c1(a,n,p){if(!Q.acceptData(a)){return}var t,i,b=a.nodeType,j=b?Q.cache:a,l=b?a[Q.expando]:Q.expando;if(!j[l]){return}if(n){t=p?j[l]:j[l].data;if(t){if(!Q.isArray(n)){if(n in t){n=[n]}else{n=Q.camelCase(n);if(n in t){n=[n]}else{n=n.split(" ")}}}else{n=n.concat(Q.map(n,Q.camelCase))}i=n.length;while(i--){delete t[n[i]]}if(p?!a1(t):!Q.isEmptyObject(t)){return}}}if(!p){delete j[l].data;if(!a1(j[l])){return}}if(b){Q.cleanData([a],true)}else if(x.deleteExpando||j!=j.window){delete j[l]}else{j[l]=null}}Q.extend({cache:{},noData:{"applet ":true,"embed ":true,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){a=a.nodeType?Q.cache[a[Q.expando]]:a[Q.expando];return!!a&&!a1(a)},data:function(a,n,b){return b1(a,n,b)},removeData:function(a,n){return c1(a,n)},_data:function(a,n,b){return b1(a,n,b,true)},_removeData:function(a,n){return c1(a,n,true)}});Q.fn.extend({data:function(a,v){var i,n,b,j=this[0],l=j&&j.attributes;if(a===undefined){if(this.length){b=Q.data(j);if(j.nodeType===1&&!Q._data(j,"parsedAttrs")){i=l.length;while(i--){if(l[i]){n=l[i].name;if(n.indexOf("data-")===0){n=Q.camelCase(n.slice(5));$(j,n,b[n])}}}Q._data(j,"parsedAttrs",true)}}return b}if(typeof a==="object"){return this.each(function(){Q.data(this,a)})}return arguments.length>1?this.each(function(){Q.data(this,a,v)}):j?$(j,a,Q.data(j,a)):undefined},removeData:function(a){return this.each(function(){Q.removeData(this,a)})}});Q.extend({queue:function(a,t,b){var j;if(a){t=(t||"fx")+"queue";j=Q._data(a,t);if(b){if(!j||Q.isArray(b)){j=Q._data(a,t,Q.makeArray(b))}else{j.push(b)}}return j||[]}},dequeue:function(a,t){t=t||"fx";var b=Q.queue(a,t),s=b.length,j=b.shift(),l=Q._queueHooks(a,t),n=function(){Q.dequeue(a,t)};if(j==="inprogress"){j=b.shift();s--}if(j){if(t==="fx"){b.unshift("inprogress")}delete l.stop;j.call(a,n,l)}if(!s&&l){l.empty.fire()}},_queueHooks:function(a,t){var b=t+"queueHooks";return Q._data(a,b)||Q._data(a,b,{empty:Q.Callbacks("once memory").add(function(){Q._removeData(a,t+"queue");Q._removeData(a,b)})})}});Q.fn.extend({queue:function(t,a){var s=2;if(typeof t!=="string"){a=t;t="fx";s--}if(arguments.length<s){return Q.queue(this[0],t)}return a===undefined?this:this.each(function(){var b=Q.queue(this,t,a);Q._queueHooks(this,t);if(t==="fx"&&b[0]!=="inprogress"){Q.dequeue(this,t)}})},dequeue:function(t){return this.each(function(){Q.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,a){var b,j=1,l=Q.Deferred(),m=this,i=this.length,r=function(){if(!(--j)){l.resolveWith(m,[m])}};if(typeof t!=="string"){a=t;t=undefined}t=t||"fx";while(i--){b=Q._data(m[i],t+"queueHooks");if(b&&b.empty){j++;b.empty.add(r)}}r();return l.promise(a)}});var d1=(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var e1=["Top","Right","Bottom","Left"];var f1=function(a,b){a=b||a;return Q.css(a,"display")==="none"||!Q.contains(a.ownerDocument,a)};var g1=Q.access=function(a,b,j,v,l,m,r){var i=0,n=a.length,p=j==null;if(Q.type(j)==="object"){l=true;for(i in j){Q.access(a,b,i,j[i],true,m,r)}}else if(v!==undefined){l=true;if(!Q.isFunction(v)){r=true}if(p){if(r){b.call(a,v);b=null}else{p=b;b=function(s,j,v){return p.call(Q(s),v)}}}if(b){for(;i<n;i++){b(a[i],j,r?v:v.call(a[i],i,b(a[i],j)))}}}return l?a:p?b.call(a):n?b(a[0],j):m};var h1=(/^(?:checkbox|radio)$/i);(function(){var a=J.createElement("input"),b=J.createElement("div"),j=J.createDocumentFragment();b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";x.leadingWhitespace=b.firstChild.nodeType===3;x.tbody=!b.getElementsByTagName("tbody").length;x.htmlSerialize=!!b.getElementsByTagName("link").length;x.html5Clone=J.createElement("nav").cloneNode(true).outerHTML!=="<:nav></:nav>";a.type="checkbox";a.checked=true;j.appendChild(a);x.appendChecked=a.checked;b.innerHTML="<textarea>x</textarea>";x.noCloneChecked=!!b.cloneNode(true).lastChild.defaultValue;j.appendChild(b);b.innerHTML="<input type='radio' checked='checked' name='t'/>";x.checkClone=b.cloneNode(true).cloneNode(true).lastChild.checked;x.noCloneEvent=true;if(b.attachEvent){b.attachEvent("onclick",function(){x.noCloneEvent=false});b.cloneNode(true).click()}if(x.deleteExpando==null){x.deleteExpando=true;try{delete b.test}catch(e){x.deleteExpando=false}}})();(function(){var i,a,b=J.createElement("div");for(i in{submit:true,change:true,focusin:true}){a="on"+i;if(!(x[i+"Bubbles"]=a in w)){b.setAttribute(a,"t");x[i+"Bubbles"]=b.attributes[a].expando===false}}b=null})();var i1=/^(?:input|select|textarea)$/i,j1=/^key/,k1=/^(?:mouse|pointer|contextmenu)|click/,l1=/^(?:focusinfocus|focusoutblur)$/,m1=/^([^.]*)(?:\.(.+)|)$/;function n1(){return true}function o1(){return false}function p1(){try{return J.activeElement}catch(a){}}Q.event={global:{},add:function(a,b,j,l,s){var m,n,t,p,r,v,_,r3,s3,t3,u3,v3=Q._data(a);if(!v3){return}if(j.handler){p=j;j=p.handler;s=p.selector}if(!j.guid){j.guid=Q.guid++}if(!(n=v3.events)){n=v3.events={}}if(!(v=v3.handle)){v=v3.handle=function(e){return typeof Q!==X&&(!e||Q.event.triggered!==e.type)?Q.event.dispatch.apply(v.elem,arguments):undefined};v.elem=a}b=(b||"").match(P)||[""];t=b.length;while(t--){m=m1.exec(b[t])||[];s3=u3=m[1];t3=(m[2]||"").split(".").sort();if(!s3){continue}r=Q.event.special[s3]||{};s3=(s?r.delegateType:r.bindType)||s3;r=Q.event.special[s3]||{};_=Q.extend({type:s3,origType:u3,data:l,handler:j,guid:j.guid,selector:s,needsContext:s&&Q.expr.match.needsContext.test(s),namespace:t3.join(".")},p);if(!(r3=n[s3])){r3=n[s3]=[];r3.delegateCount=0;if(!r.setup||r.setup.call(a,l,t3,v)===false){if(a.addEventListener){a.addEventListener(s3,v,false)}else if(a.attachEvent){a.attachEvent("on"+s3,v)}}}if(r.add){r.add.call(a,_);if(!_.handler.guid){_.handler.guid=j.guid}}if(s){r3.splice(r3.delegateCount++,0,_)}else{r3.push(_)}Q.event.global[s3]=true}a=null},remove:function(a,b,l,s,m){var j,n,p,r,t,v,_,r3,s3,t3,u3,v3=Q.hasData(a)&&Q._data(a);if(!v3||!(v=v3.events)){return}b=(b||"").match(P)||[""];t=b.length;while(t--){p=m1.exec(b[t])||[];s3=u3=p[1];t3=(p[2]||"").split(".").sort();if(!s3){for(s3 in v){Q.event.remove(a,s3+b[t],l,s,true)}continue}_=Q.event.special[s3]||{};s3=(s?_.delegateType:_.bindType)||s3;r3=v[s3]||[];p=p[2]&&new RegExp("(^|\\.)"+t3.join("\\.(?:.*\\.|)")+"(\\.|$)");r=j=r3.length;while(j--){n=r3[j];if((m||u3===n.origType)&&(!l||l.guid===n.guid)&&(!p||p.test(n.namespace))&&(!s||s===n.selector||s==="**"&&n.selector)){r3.splice(j,1);if(n.selector){r3.delegateCount--}if(_.remove){_.remove.call(a,n)}}}if(r&&!r3.length){if(!_.teardown||_.teardown.call(a,t3,v3.handle)===false){Q.removeEvent(a,s3,v3.handle)}delete v[s3]}}if(Q.isEmptyObject(v)){delete v3.handle;Q._removeData(a,"events")}},trigger:function(a,b,j,l){var m,n,p,r,s,t,i,v=[j||J],_=u.call(a,"type")?a.type:a,r3=u.call(a,"namespace")?a.namespace.split("."):[];p=t=j=j||J;if(j.nodeType===3||j.nodeType===8){return}if(l1.test(_+Q.event.triggered)){return}if(_.indexOf(".")>=0){r3=_.split(".");_=r3.shift();r3.sort()}n=_.indexOf(":")<0&&"on"+_;a=a[Q.expando]?a:new Q.Event(_,typeof a==="object"&&a);a.isTrigger=l?2:3;a.namespace=r3.join(".");a.namespace_re=a.namespace?new RegExp("(^|\\.)"+r3.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;a.result=undefined;if(!a.target){a.target=j}b=b==null?[a]:Q.makeArray(b,[a]);s=Q.event.special[_]||{};if(!l&&s.trigger&&s.trigger.apply(j,b)===false){return}if(!l&&!s.noBubble&&!Q.isWindow(j)){r=s.delegateType||_;if(!l1.test(r+_)){p=p.parentNode}for(;p;p=p.parentNode){v.push(p);t=p}if(t===(j.ownerDocument||J)){v.push(t.defaultView||t.parentWindow||w)}}i=0;while((p=v[i++])&&!a.isPropagationStopped()){a.type=i>1?r:s.bindType||_;m=(Q._data(p,"events")||{})[a.type]&&Q._data(p,"handle");if(m){m.apply(p,b)}m=n&&p[n];if(m&&m.apply&&Q.acceptData(p)){a.result=m.apply(p,b);if(a.result===false){a.preventDefault()}}}a.type=_;if(!l&&!a.isDefaultPrevented()){if((!s._default||s._default.apply(v.pop(),b)===false)&&Q.acceptData(j)){if(n&&j[_]&&!Q.isWindow(j)){t=j[n];if(t){j[n]=null}Q.event.triggered=_;try{j[_]()}catch(e){}Q.event.triggered=undefined;if(t){j[n]=t}}}}return a.result},dispatch:function(a){a=Q.event.fix(a);var i,r,b,m,j,l=[],n=f.call(arguments),p=(Q._data(this,"events")||{})[a.type]||[],s=Q.event.special[a.type]||{};n[0]=a;a.delegateTarget=this;if(s.preDispatch&&s.preDispatch.call(this,a)===false){return}l=Q.event.handlers.call(this,a,p);i=0;while((m=l[i++])&&!a.isPropagationStopped()){a.currentTarget=m.elem;j=0;while((b=m.handlers[j++])&&!a.isImmediatePropagationStopped()){if(!a.namespace_re||a.namespace_re.test(b.namespace)){a.handleObj=b;a.data=b.data;r=((Q.event.special[b.origType]||{}).handle||b.handler).apply(m.elem,n);if(r!==undefined){if((a.result=r)===false){a.preventDefault();a.stopPropagation()}}}}}if(s.postDispatch){s.postDispatch.call(this,a)}return a.result},handlers:function(a,b){var s,j,m,i,l=[],n=b.delegateCount,p=a.target;if(n&&p.nodeType&&(!a.button||a.type!=="click")){for(;p!=this;p=p.parentNode||this){if(p.nodeType===1&&(p.disabled!==true||a.type!=="click")){m=[];for(i=0;i<n;i++){j=b[i];s=j.selector+" ";if(m[s]===undefined){m[s]=j.needsContext?Q(s,this).index(p)>=0:Q.find(s,this,null,[p]).length}if(m[s]){m.push(j)}}if(m.length){l.push({elem:p,handlers:m})}}}}if(n<b.length){l.push({elem:this,handlers:b.slice(n)})}return l},fix:function(a){if(a[Q.expando]){return a}var i,p,b,t=a.type,j=a,l=this.fixHooks[t];if(!l){this.fixHooks[t]=l=k1.test(t)?this.mouseHooks:j1.test(t)?this.keyHooks:{}}b=l.props?this.props.concat(l.props):this.props;a=new Q.Event(j);i=b.length;while(i--){p=b[i];a[p]=j[p]}if(!a.target){a.target=j.srcElement||J}if(a.target.nodeType===3){a.target=a.target.parentNode}a.metaKey=!!a.metaKey;return l.filter?l.filter(a,j):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){if(a.which==null){a.which=b.charCode!=null?b.charCode:b.keyCode}return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var j,l,m,n=b.button,p=b.fromElement;if(a.pageX==null&&b.clientX!=null){l=a.target.ownerDocument||J;m=l.documentElement;j=l.body;a.pageX=b.clientX+(m&&m.scrollLeft||j&&j.scrollLeft||0)-(m&&m.clientLeft||j&&j.clientLeft||0);a.pageY=b.clientY+(m&&m.scrollTop||j&&j.scrollTop||0)-(m&&m.clientTop||j&&j.clientTop||0)}if(!a.relatedTarget&&p){a.relatedTarget=p===a.target?b.toElement:p}if(!a.which&&n!==undefined){a.which=(n&1?1:(n&2?3:(n&4?2:0)))}return a}},special:{load:{noBubble:true},focus:{trigger:function(){if(this!==p1()&&this.focus){try{this.focus();return false}catch(e){}}},delegateType:"focusin"},blur:{trigger:function(){if(this===p1()&&this.blur){this.blur();return false}},delegateType:"focusout"},click:{trigger:function(){if(Q.nodeName(this,"input")&&this.type==="checkbox"&&this.click){this.click();return false}},_default:function(a){return Q.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){if(a.result!==undefined&&a.originalEvent){a.originalEvent.returnValue=a.result}}}},simulate:function(t,a,b,j){var e=Q.extend(new Q.Event(),b,{type:t,isSimulated:true,originalEvent:{}});if(j){Q.event.trigger(e,null,a)}else{Q.event.dispatch.call(a,e)}if(e.isDefaultPrevented()){b.preventDefault()}}};Q.removeEvent=J.removeEventListener?function(a,t,b){if(a.removeEventListener){a.removeEventListener(t,b,false)}}:function(a,t,b){var n="on"+t;if(a.detachEvent){if(typeof a[n]===X){a[n]=null}a.detachEvent(n,b)}};Q.Event=function(s,p){if(!(this instanceof Q.Event)){return new Q.Event(s,p)}if(s&&s.type){this.originalEvent=s;this.type=s.type;this.isDefaultPrevented=s.defaultPrevented||s.defaultPrevented===undefined&&s.returnValue===false?n1:o1}else{this.type=s}if(p){Q.extend(this,p)}this.timeStamp=s&&s.timeStamp||Q.now();this[Q.expando]=true};Q.Event.prototype={isDefaultPrevented:o1,isPropagationStopped:o1,isImmediatePropagationStopped:o1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=n1;if(!e){return}if(e.preventDefault){e.preventDefault()}else{e.returnValue=false}},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=n1;if(!e){return}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=true},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=n1;if(e&&e.stopImmediatePropagation){e.stopImmediatePropagation()}this.stopPropagation()}};Q.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){Q.event.special[a]={delegateType:b,bindType:b,handle:function(j){var r,t=this,l=j.relatedTarget,m=j.handleObj;if(!l||(l!==t&&!Q.contains(t,l))){j.type=m.origType;r=m.handler.apply(this,arguments);j.type=b}return r}}});if(!x.submitBubbles){Q.event.special.submit={setup:function(){if(Q.nodeName(this,"form")){return false}Q.event.add(this,"click._submit keypress._submit",function(e){var a=e.target,b=Q.nodeName(a,"input")||Q.nodeName(a,"button")?a.form:undefined;if(b&&!Q._data(b,"submitBubbles")){Q.event.add(b,"submit._submit",function(j){j._submit_bubble=true});Q._data(b,"submitBubbles",true)}})},postDispatch:function(a){if(a._submit_bubble){delete a._submit_bubble;if(this.parentNode&&!a.isTrigger){Q.event.simulate("submit",this.parentNode,a,true)}}},teardown:function(){if(Q.nodeName(this,"form")){return false}Q.event.remove(this,"._submit")}}}if(!x.changeBubbles){Q.event.special.change={setup:function(){if(i1.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio"){Q.event.add(this,"propertychange._change",function(a){if(a.originalEvent.propertyName==="checked"){this._just_changed=true}});Q.event.add(this,"click._change",function(a){if(this._just_changed&&!a.isTrigger){this._just_changed=false}Q.event.simulate("change",this,a,true)})}return false}Q.event.add(this,"beforeactivate._change",function(e){var a=e.target;if(i1.test(a.nodeName)&&!Q._data(a,"changeBubbles")){Q.event.add(a,"change._change",function(b){if(this.parentNode&&!b.isSimulated&&!b.isTrigger){Q.event.simulate("change",this.parentNode,b,true)}});Q._data(a,"changeBubbles",true)}})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||(b.type!=="radio"&&b.type!=="checkbox")){return a.handleObj.handler.apply(this,arguments)}},teardown:function(){Q.event.remove(this,"._change");return!i1.test(this.nodeName)}}}if(!x.focusinBubbles){Q.each({focus:"focusin",blur:"focusout"},function(a,b){var j=function(l){Q.event.simulate(b,l.target,Q.event.fix(l),true)};Q.event.special[b]={setup:function(){var l=this.ownerDocument||this,m=Q._data(l,b);if(!m){l.addEventListener(a,j,true)}Q._data(l,b,(m||0)+1)},teardown:function(){var l=this.ownerDocument||this,m=Q._data(l,b)-1;if(!m){l.removeEventListener(a,j,true);Q._removeData(l,b)}else{Q._data(l,b,m)}}}})}Q.fn.extend({on:function(t,s,a,b,j){var l,m;if(typeof t==="object"){if(typeof s!=="string"){a=a||s;s=undefined}for(l in t){this.on(l,s,a,t[l],j)}return this}if(a==null&&b==null){b=s;a=s=undefined}else if(b==null){if(typeof s==="string"){b=a;a=undefined}else{b=a;a=s;s=undefined}}if(b===false){b=o1}else if(!b){return this}if(j===1){m=b;b=function(n){Q().off(n);return m.apply(this,arguments)};b.guid=m.guid||(m.guid=Q.guid++)}return this.each(function(){Q.event.add(this,t,b,a,s)})},one:function(t,s,a,b){return this.on(t,s,a,b,1)},off:function(t,s,a){var b,j;if(t&&t.preventDefault&&t.handleObj){b=t.handleObj;Q(t.delegateTarget).off(b.namespace?b.origType+"."+b.namespace:b.origType,b.selector,b.handler);return this}if(typeof t==="object"){for(j in t){this.off(j,s,t[j])}return this}if(s===false||typeof s==="function"){a=s;s=undefined}if(a===false){a=o1}return this.each(function(){Q.event.remove(this,t,a,s)})},trigger:function(t,a){return this.each(function(){Q.event.trigger(t,a,this)})},triggerHandler:function(t,a){var b=this[0];if(b){return Q.event.trigger(t,a,b,true)}}});function q1(J){var l=r1.split("|"),s=J.createDocumentFragment();if(s.createElement){while(l.length){s.createElement(l.pop())}}return s}var r1="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|"+"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",s1=/ jQuery\d+="(?:null|\d+)"/g,t1=new RegExp("<(?:"+r1+")[\\s/>]","i"),u1=/^\s+/,v1=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,w1=/<([\w:]+)/,x1=/<tbody/i,y1=/<|&#?\w+;/,z1=/<(?:script|style|link)/i,A1=/checked\s*(?:[^=]|=\s*.checked.)/i,B1=/^$|\/(?:java|ecma)script/i,C1=/^true\/(.*)/,D1=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,E1={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:x.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},F1=q1(J),G1=F1.appendChild(J.createElement("div"));E1.optgroup=E1.option;E1.tbody=E1.tfoot=E1.colgroup=E1.caption=E1.thead;E1.th=E1.td;function H1(a,t){var b,j,i=0,l=typeof a.getElementsByTagName!==X?a.getElementsByTagName(t||"*"):typeof a.querySelectorAll!==X?a.querySelectorAll(t||"*"):undefined;if(!l){for(l=[],b=a.childNodes||a;(j=b[i])!=null;i++){if(!t||Q.nodeName(j,t)){l.push(j)}else{Q.merge(l,H1(j,t))}}}return t===undefined||t&&Q.nodeName(a,t)?Q.merge([a],l):l}function I1(a){if(h1.test(a.type)){a.defaultChecked=a.checked}}function J1(a,b){return Q.nodeName(a,"table")&&Q.nodeName(b.nodeType!==11?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function K1(a){a.type=(Q.find.attr(a,"type")!==null)+"/"+a.type;return a}function L1(a){var m=C1.exec(a.type);if(m){a.type=m[1]}else{a.removeAttribute("type")}return a}function M1(a,r){var b,i=0;for(;(b=a[i])!=null;i++){Q._data(b,"globalEval",!r||Q._data(r[i],"globalEval"))}}function N1(s,a){if(a.nodeType!==1||!Q.hasData(s)){return}var t,i,l,b=Q._data(s),j=Q._data(a,b),m=b.events;if(m){delete j.handle;j.events={};for(t in m){for(i=0,l=m[t].length;i<l;i++){Q.event.add(a,t,m[t][i])}}}if(j.data){j.data=Q.extend({},j.data)}}function O1(s,a){var n,e,b;if(a.nodeType!==1){return}n=a.nodeName.toLowerCase();if(!x.noCloneEvent&&a[Q.expando]){b=Q._data(a);for(e in b.events){Q.removeEvent(a,e,b.handle)}a.removeAttribute(Q.expando)}if(n==="script"&&a.text!==s.text){K1(a).text=s.text;L1(a)}else if(n==="object"){if(a.parentNode){a.outerHTML=s.outerHTML}if(x.html5Clone&&(s.innerHTML&&!Q.trim(a.innerHTML))){a.innerHTML=s.innerHTML}}else if(n==="input"&&h1.test(s.type)){a.defaultChecked=a.checked=s.checked;if(a.value!==s.value){a.value=s.value}}else if(n==="option"){a.defaultSelected=a.selected=s.defaultSelected}else if(n==="input"||n==="textarea"){a.defaultValue=s.defaultValue}}Q.extend({clone:function(a,b,j){var l,n,m,i,s,p=Q.contains(a.ownerDocument,a);if(x.html5Clone||Q.isXMLDoc(a)||!t1.test("<"+a.nodeName+">")){m=a.cloneNode(true)}else{G1.innerHTML=a.outerHTML;G1.removeChild(m=G1.firstChild)}if((!x.noCloneEvent||!x.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!Q.isXMLDoc(a)){l=H1(m);s=H1(a);for(i=0;(n=s[i])!=null;++i){if(l[i]){O1(n,l[i])}}}if(b){if(j){s=s||H1(a);l=l||H1(m);for(i=0;(n=s[i])!=null;i++){N1(n,l[i])}}else{N1(a,m)}}l=H1(m,"script");if(l.length>0){M1(l,!p&&H1(a,"script"))}l=s=n=null;return m},buildFragment:function(a,b,s,m){var j,n,p,t,r,v,_,l=a.length,r3=q1(b),s3=[],i=0;for(;i<l;i++){n=a[i];if(n||n===0){if(Q.type(n)==="object"){Q.merge(s3,n.nodeType?[n]:n)}else if(!y1.test(n)){s3.push(b.createTextNode(n))}else{t=t||r3.appendChild(b.createElement("div"));r=(w1.exec(n)||["",""])[1].toLowerCase();_=E1[r]||E1._default;t.innerHTML=_[1]+n.replace(v1,"<$1></$2>")+_[2];j=_[0];while(j--){t=t.lastChild}if(!x.leadingWhitespace&&u1.test(n)){s3.push(b.createTextNode(u1.exec(n)[0]))}if(!x.tbody){n=r==="table"&&!x1.test(n)?t.firstChild:_[1]==="<table>"&&!x1.test(n)?t:0;j=n&&n.childNodes.length;while(j--){if(Q.nodeName((v=n.childNodes[j]),"tbody")&&!v.childNodes.length){n.removeChild(v)}}}Q.merge(s3,t.childNodes);t.textContent="";while(t.firstChild){t.removeChild(t.firstChild)}t=r3.lastChild}}}if(t){r3.removeChild(t)}if(!x.appendChecked){Q.grep(H1(s3,"input"),I1)}i=0;while((n=s3[i++])){if(m&&Q.inArray(n,m)!==-1){continue}p=Q.contains(n.ownerDocument,n);t=H1(r3.appendChild(n),"script");if(p){M1(t)}if(s){j=0;while((n=t[j++])){if(B1.test(n.type||"")){s.push(n)}}}}t=null;return r3},cleanData:function(a,b){var j,t,l,m,i=0,n=Q.expando,p=Q.cache,r=x.deleteExpando,s=Q.event.special;for(;(j=a[i])!=null;i++){if(b||Q.acceptData(j)){l=j[n];m=l&&p[l];if(m){if(m.events){for(t in m.events){if(s[t]){Q.event.remove(j,t)}else{Q.removeEvent(j,t,m.handle)}}}if(p[l]){delete p[l];if(r){delete j[n]}else if(typeof j.removeAttribute!==X){j.removeAttribute(n)}else{j[n]=null}d.push(l)}}}}}});Q.fn.extend({text:function(v){return g1(this,function(v){return v===undefined?Q.text(this):this.empty().append((this[0]&&this[0].ownerDocument||J).createTextNode(v))},null,v,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var t=J1(this,a);t.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var t=J1(this,a);t.insertBefore(a,t.firstChild)}})},before:function(){return this.domManip(arguments,function(a){if(this.parentNode){this.parentNode.insertBefore(a,this)}})},after:function(){return this.domManip(arguments,function(a){if(this.parentNode){this.parentNode.insertBefore(a,this.nextSibling)}})},remove:function(s,a){var b,j=s?Q.filter(s,this):this,i=0;for(;(b=j[i])!=null;i++){if(!a&&b.nodeType===1){Q.cleanData(H1(b))}if(b.parentNode){if(a&&Q.contains(b.ownerDocument,b)){M1(H1(b,"script"))}b.parentNode.removeChild(b)}}return this},empty:function(){var a,i=0;for(;(a=this[i])!=null;i++){if(a.nodeType===1){Q.cleanData(H1(a,false))}while(a.firstChild){a.removeChild(a.firstChild)}if(a.options&&Q.nodeName(a,"select")){a.options.length=0}}return this},clone:function(a,b){a=a==null?false:a;b=b==null?a:b;return this.map(function(){return Q.clone(this,a,b)})},html:function(v){return g1(this,function(v){var a=this[0]||{},i=0,l=this.length;if(v===undefined){return a.nodeType===1?a.innerHTML.replace(s1,""):undefined}if(typeof v==="string"&&!z1.test(v)&&(x.htmlSerialize||!t1.test(v))&&(x.leadingWhitespace||!u1.test(v))&&!E1[(w1.exec(v)||["",""])[1].toLowerCase()]){v=v.replace(v1,"<$1></$2>");try{for(;i<l;i++){a=this[i]||{};if(a.nodeType===1){Q.cleanData(H1(a,false));a.innerHTML=v}}a=0}catch(e){}}if(a){this.empty().append(v)}},null,v,arguments.length)},replaceWith:function(){var a=arguments[0];this.domManip(arguments,function(b){a=this.parentNode;Q.cleanData(H1(this));if(a){a.replaceChild(b,this)}});return a&&(a.length||a.nodeType)?this:this.remove()},detach:function(s){return this.remove(s,true)},domManip:function(a,b){a=g.apply([],a);var j,n,m,s,p,r,i=0,l=this.length,t=this,v=l-1,_=a[0],r3=Q.isFunction(_);if(r3||(l>1&&typeof _==="string"&&!x.checkClone&&A1.test(_))){return this.each(function(s3){var t3=t.eq(s3);if(r3){a[0]=_.call(this,s3,t3.html())}t3.domManip(a,b)})}if(l){r=Q.buildFragment(a,this[0].ownerDocument,false,this);j=r.firstChild;if(r.childNodes.length===1){r=j}if(j){s=Q.map(H1(r,"script"),K1);m=s.length;for(;i<l;i++){n=r;if(i!==v){n=Q.clone(n,true,true);if(m){Q.merge(s,H1(n,"script"))}}b.call(this[i],n,i)}if(m){p=s[s.length-1].ownerDocument;Q.map(s,L1);for(i=0;i<m;i++){n=s[i];if(B1.test(n.type||"")&&!Q._data(n,"globalEval")&&Q.contains(p,n)){if(n.src){if(Q._evalUrl){Q._evalUrl(n.src)}}else{Q.globalEval((n.text||n.textContent||n.innerHTML||"").replace(D1,""))}}}}r=j=null}}return this}});Q.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(n,a){Q.fn[n]=function(s){var b,i=0,r=[],j=Q(s),l=j.length-1;for(;i<=l;i++){b=i===l?this:this.clone(true);Q(j[i])[a](b);h.apply(r,b.get())}return this.pushStack(r)}});var P1,Q1={};function R1(n,a){var s,b=Q(a.createElement(n)).appendTo(a.body),j=w.getDefaultComputedStyle&&(s=w.getDefaultComputedStyle(b[0]))?s.display:Q.css(b[0],"display");b.detach();return j}function S1(n){var a=J,b=Q1[n];if(!b){b=R1(n,a);if(b==="none"||!b){P1=(P1||Q("<iframe frameborder='0' width='0' height='0'/>")).appendTo(a.documentElement);a=(P1[0].contentWindow||P1[0].contentDocument).document;a.write();a.close();b=R1(n,a);P1.detach()}Q1[n]=b}return b}(function(){var s;x.shrinkWrapBlocks=function(){if(s!=null){return s}s=false;var a,b,j;b=J.getElementsByTagName("body")[0];if(!b||!b.style){return}a=J.createElement("div");j=J.createElement("div");j.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";b.appendChild(j).appendChild(a);if(typeof a.style.zoom!==X){a.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;"+"box-sizing:content-box;display:block;margin:0;border:0;"+"padding:1px;width:1px;zoom:1";a.appendChild(J.createElement("div")).style.width="5px";s=a.offsetWidth!==3}b.removeChild(j);return s}})();var T1=(/^margin/);var U1=new RegExp("^("+d1+")(?!px)[a-z%]+$","i");var V1,W1,X1=/^(top|right|bottom|left)$/;if(w.getComputedStyle){V1=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};W1=function(a,n,b){var j,m,l,r,s=a.style;b=b||V1(a);r=b?b.getPropertyValue(n)||b[n]:undefined;if(b){if(r===""&&!Q.contains(a.ownerDocument,a)){r=Q.style(a,n)}if(U1.test(r)&&T1.test(n)){j=s.width;m=s.minWidth;l=s.maxWidth;s.minWidth=s.maxWidth=s.width=r;r=b.width;s.width=j;s.minWidth=m;s.maxWidth=l}}return r===undefined?r:r+""}}else if(J.documentElement.currentStyle){V1=function(a){return a.currentStyle};W1=function(a,n,b){var l,r,j,m,s=a.style;b=b||V1(a);m=b?b[n]:undefined;if(m==null&&s&&s[n]){m=s[n]}if(U1.test(m)&&!X1.test(n)){l=s.left;r=a.runtimeStyle;j=r&&r.left;if(j){r.left=a.currentStyle.left}s.left=n==="fontSize"?"1em":m;m=s.pixelLeft+"px";s.left=l;if(j){r.left=j}}return m===undefined?m:m+""||"auto"}}function Y1(a,b){return{get:function(){var j=a();if(j==null){return}if(j){delete this.get;return}return(this.get=b).apply(this,arguments)}}}(function(){var b,s,a,p,j,r,l;b=J.createElement("div");b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";a=b.getElementsByTagName("a")[0];s=a&&a.style;if(!s){return}s.cssText="float:left;opacity:.5";x.opacity=s.opacity==="0.5";x.cssFloat=!!s.cssFloat;b.style.backgroundClip="content-box";b.cloneNode(true).style.backgroundClip="";x.clearCloneStyle=b.style.backgroundClip==="content-box";x.boxSizing=s.boxSizing===""||s.MozBoxSizing===""||s.WebkitBoxSizing==="";Q.extend(x,{reliableHiddenOffsets:function(){if(r==null){m()}return r},boxSizingReliable:function(){if(j==null){m()}return j},pixelPosition:function(){if(p==null){m()}return p},reliableMarginRight:function(){if(l==null){m()}return l}});function m(){var b,n,t,v;n=J.getElementsByTagName("body")[0];if(!n||!n.style){return}b=J.createElement("div");t=J.createElement("div");t.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";n.appendChild(t).appendChild(b);b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;"+"box-sizing:border-box;display:block;margin-top:1%;top:1%;"+"border:1px;padding:1px;width:4px;position:absolute";p=j=false;l=true;if(w.getComputedStyle){p=(w.getComputedStyle(b,null)||{}).top!=="1%";j=(w.getComputedStyle(b,null)||{width:"4px"}).width==="4px";v=b.appendChild(J.createElement("div"));v.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;"+"box-sizing:content-box;display:block;margin:0;border:0;padding:0";v.style.marginRight=v.style.width="0";b.style.width="1px";l=!parseFloat((w.getComputedStyle(v,null)||{}).marginRight)}b.innerHTML="<table><tr><td></td><td>t</td></tr></table>";v=b.getElementsByTagName("td");v[0].style.cssText="margin:0;border:0;padding:0;display:none";r=v[0].offsetHeight===0;if(r){v[0].style.display="";v[1].style.display="none";r=v[0].offsetHeight===0}n.removeChild(t)}})();Q.swap=function(a,b,j,l){var r,n,m={};for(n in b){m[n]=a.style[n];a.style[n]=b[n]}r=j.apply(a,l||[]);for(n in b){a.style[n]=m[n]}return r};var Z1=/alpha\([^)]*\)/i,$1=/opacity\s*=\s*([^)]*)/,_1=/^(none|table(?!-c[ea]).+)/,a2=new RegExp("^("+d1+")(.*)$","i"),b2=new RegExp("^([+-])=("+d1+")","i"),c2={position:"absolute",visibility:"hidden",display:"block"},d2={letterSpacing:"0",fontWeight:"400"},e2=["Webkit","O","Moz","ms"];function f2(s,n){if(n in s){return n}var a=n.charAt(0).toUpperCase()+n.slice(1),b=n,i=e2.length;while(i--){n=e2[i]+a;if(n in s){return n}}return b}function g2(a,s){var b,j,l,v=[],m=0,n=a.length;for(;m<n;m++){j=a[m];if(!j.style){continue}v[m]=Q._data(j,"olddisplay");b=j.style.display;if(s){if(!v[m]&&b==="none"){j.style.display=""}if(j.style.display===""&&f1(j)){v[m]=Q._data(j,"olddisplay",S1(j.nodeName))}}else{l=f1(j);if(b&&b!=="none"||!l){Q._data(j,"olddisplay",l?b:Q.css(j,"display"))}}}for(m=0;m<n;m++){j=a[m];if(!j.style){continue}if(!s||j.style.display==="none"||j.style.display===""){j.style.display=s?v[m]||"":"none"}}return a}function h2(a,v,s){var m=a2.exec(v);return m?Math.max(0,m[1]-(s||0))+(m[2]||"px"):v}function i2(a,n,b,j,s){var i=b===(j?"border":"content")?4:n==="width"?1:0,v=0;for(;i<4;i+=2){if(b==="margin"){v+=Q.css(a,b+e1[i],true,s)}if(j){if(b==="content"){v-=Q.css(a,"padding"+e1[i],true,s)}if(b!=="margin"){v-=Q.css(a,"border"+e1[i]+"Width",true,s)}}else{v+=Q.css(a,"padding"+e1[i],true,s);if(b!=="padding"){v+=Q.css(a,"border"+e1[i]+"Width",true,s)}}}return v}function j2(a,n,b){var v=true,j=n==="width"?a.offsetWidth:a.offsetHeight,s=V1(a),l=x.boxSizing&&Q.css(a,"boxSizing",false,s)==="border-box";if(j<=0||j==null){j=W1(a,n,s);if(j<0||j==null){j=a.style[n]}if(U1.test(j)){return j}v=l&&(x.boxSizingReliable()||j===a.style[n]);j=parseFloat(j)||0}return(j+i2(a,n,b||(l?"border":"content"),v,s))+"px"}Q.extend({cssHooks:{opacity:{get:function(a,b){if(b){var r=W1(a,"opacity");return r===""?"1":r}}}},cssNumber:{"columnCount":true,"fillOpacity":true,"flexGrow":true,"flexShrink":true,"fontWeight":true,"lineHeight":true,"opacity":true,"order":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},cssProps:{"float":x.cssFloat?"cssFloat":"styleFloat"},style:function(a,n,v,b){if(!a||a.nodeType===3||a.nodeType===8||!a.style){return}var r,t,j,l=Q.camelCase(n),s=a.style;n=Q.cssProps[l]||(Q.cssProps[l]=f2(s,l));j=Q.cssHooks[n]||Q.cssHooks[l];if(v!==undefined){t=typeof v;if(t==="string"&&(r=b2.exec(v))){v=(r[1]+1)*r[2]+parseFloat(Q.css(a,n));t="number"}if(v==null||v!==v){return}if(t==="number"&&!Q.cssNumber[l]){v+="px"}if(!x.clearCloneStyle&&v===""&&n.indexOf("background")===0){s[n]="inherit"}if(!j||!("set"in j)||(v=j.set(a,v,b))!==undefined){try{s[n]=v}catch(e){}}}else{if(j&&"get"in j&&(r=j.get(a,false,b))!==undefined){return r}return s[n]}},css:function(a,n,b,s){var j,v,l,m=Q.camelCase(n);n=Q.cssProps[m]||(Q.cssProps[m]=f2(a.style,m));l=Q.cssHooks[n]||Q.cssHooks[m];if(l&&"get"in l){v=l.get(a,true,b)}if(v===undefined){v=W1(a,n,s)}if(v==="normal"&&n in d2){v=d2[n]}if(b===""||b){j=parseFloat(v);return b===true||Q.isNumeric(j)?j||0:v}return v}});Q.each(["height","width"],function(i,n){Q.cssHooks[n]={get:function(a,b,j){if(b){return _1.test(Q.css(a,"display"))&&a.offsetWidth===0?Q.swap(a,c2,function(){return j2(a,n,j)}):j2(a,n,j)}},set:function(a,v,b){var s=b&&V1(a);return h2(a,v,b?i2(a,n,b,x.boxSizing&&Q.css(a,"boxSizing",false,s)==="border-box",s):0)}}});if(!x.opacity){Q.cssHooks.opacity={get:function(a,b){return $1.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?(0.01*parseFloat(RegExp.$1))+"":b?"1":""},set:function(a,v){var s=a.style,b=a.currentStyle,j=Q.isNumeric(v)?"alpha(opacity="+v*100+")":"",l=b&&b.filter||s.filter||"";s.zoom=1;if((v>=1||v==="")&&Q.trim(l.replace(Z1,""))===""&&s.removeAttribute){s.removeAttribute("filter");if(v===""||b&&!b.filter){return}}s.filter=Z1.test(l)?l.replace(Z1,j):l+" "+j}}}Q.cssHooks.marginRight=Y1(x.reliableMarginRight,function(a,b){if(b){return Q.swap(a,{"display":"inline-block"},W1,[a,"marginRight"])}});Q.each({margin:"",padding:"",border:"Width"},function(p,s){Q.cssHooks[p+s]={expand:function(v){var i=0,a={},b=typeof v==="string"?v.split(" "):[v];for(;i<4;i++){a[p+e1[i]+s]=b[i]||b[i-2]||b[0]}return a}};if(!T1.test(p)){Q.cssHooks[p+s].set=h2}});Q.fn.extend({css:function(n,v){return g1(this,function(a,n,v){var s,l,m={},i=0;if(Q.isArray(n)){s=V1(a);l=n.length;for(;i<l;i++){m[n[i]]=Q.css(a,n[i],false,s)}return m}return v!==undefined?Q.style(a,n,v):Q.css(a,n)},n,v,arguments.length>1)},show:function(){return g2(this,true)},hide:function(){return g2(this)},toggle:function(s){if(typeof s==="boolean"){return s?this.show():this.hide()}return this.each(function(){if(f1(this)){Q(this).show()}else{Q(this).hide()}})}});function k2(a,b,p,j,l){return new k2.prototype.init(a,b,p,j,l)}Q.Tween=k2;k2.prototype={constructor:k2,init:function(a,b,p,j,l,m){this.elem=a;this.prop=p;this.easing=l||"swing";this.options=b;this.start=this.now=this.cur();this.end=j;this.unit=m||(Q.cssNumber[p]?"":"px")},cur:function(){var a=k2.propHooks[this.prop];return a&&a.get?a.get(this):k2.propHooks._default.get(this)},run:function(p){var a,b=k2.propHooks[this.prop];if(this.options.duration){this.pos=a=Q.easing[this.easing](p,this.options.duration*p,0,1,this.options.duration)}else{this.pos=a=p}this.now=(this.end-this.start)*a+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this)}if(b&&b.set){b.set(this)}else{k2.propHooks._default.set(this)}return this}};k2.prototype.init.prototype=k2.prototype;k2.propHooks={_default:{get:function(t){var r;if(t.elem[t.prop]!=null&&(!t.elem.style||t.elem.style[t.prop]==null)){return t.elem[t.prop]}r=Q.css(t.elem,t.prop,"");return!r||r==="auto"?0:r},set:function(t){if(Q.fx.step[t.prop]){Q.fx.step[t.prop](t)}else if(t.elem.style&&(t.elem.style[Q.cssProps[t.prop]]!=null||Q.cssHooks[t.prop])){Q.style(t.elem,t.prop,t.now+t.unit)}else{t.elem[t.prop]=t.now}}}};k2.propHooks.scrollTop=k2.propHooks.scrollLeft={set:function(t){if(t.elem.nodeType&&t.elem.parentNode){t.elem[t.prop]=t.now}}};Q.easing={linear:function(p){return p},swing:function(p){return 0.5-Math.cos(p*Math.PI)/2}};Q.fx=k2.prototype.init;Q.fx.step={};var l2,m2,n2=/^(?:toggle|show|hide)$/,o2=new RegExp("^(?:([+-])=|)("+d1+")([a-z%]*)$","i"),p2=/queueHooks$/,q2=[v2],r2={"*":[function(p,v){var t=this.createTween(p,v),a=t.cur(),b=o2.exec(v),j=b&&b[3]||(Q.cssNumber[p]?"":"px"),s=(Q.cssNumber[p]||j!=="px"&&+a)&&o2.exec(Q.css(t.elem,p)),l=1,m=20;if(s&&s[3]!==j){j=j||s[3];b=b||[];s=+a||1;do{l=l||".5";s=s/l;Q.style(t.elem,p,s+j)}while(l!==(l=t.cur()/a)&&l!==1&&--m)}if(b){s=t.start=+s||+a||0;t.unit=j;t.end=b[1]?s+(b[1]+1)*b[2]:+b[2]}return t}]};function s2(){setTimeout(function(){l2=undefined});return(l2=Q.now())}function t2(t,a){var b,j={height:t},i=0;a=a?1:0;for(;i<4;i+=2-a){b=e1[i];j["margin"+b]=j["padding"+b]=t}if(a){j.opacity=j.width=t}return j}function u2(v,p,a){var t,b=(r2[p]||[]).concat(r2["*"]),j=0,l=b.length;for(;j<l;j++){if((t=b[j].call(a,p,v))){return t}}}function v2(a,p,b){var j,v,t,l,m,n,r,s,_=this,r3={},s3=a.style,t3=a.nodeType&&f1(a),u3=Q._data(a,"fxshow");if(!b.queue){m=Q._queueHooks(a,"fx");if(m.unqueued==null){m.unqueued=0;n=m.empty.fire;m.empty.fire=function(){if(!m.unqueued){n()}}}m.unqueued++;_.always(function(){_.always(function(){m.unqueued--;if(!Q.queue(a,"fx").length){m.empty.fire()}})})}if(a.nodeType===1&&("height"in p||"width"in p)){b.overflow=[s3.overflow,s3.overflowX,s3.overflowY];r=Q.css(a,"display");s=r==="none"?Q._data(a,"olddisplay")||S1(a.nodeName):r;if(s==="inline"&&Q.css(a,"float")==="none"){if(!x.inlineBlockNeedsLayout||S1(a.nodeName)==="inline"){s3.display="inline-block"}else{s3.zoom=1}}}if(b.overflow){s3.overflow="hidden";if(!x.shrinkWrapBlocks()){_.always(function(){s3.overflow=b.overflow[0];s3.overflowX=b.overflow[1];s3.overflowY=b.overflow[2]})}}for(j in p){v=p[j];if(n2.exec(v)){delete p[j];t=t||v==="toggle";if(v===(t3?"hide":"show")){if(v==="show"&&u3&&u3[j]!==undefined){t3=true}else{continue}}r3[j]=u3&&u3[j]||Q.style(a,j)}else{r=undefined}}if(!Q.isEmptyObject(r3)){if(u3){if("hidden"in u3){t3=u3.hidden}}else{u3=Q._data(a,"fxshow",{})}if(t){u3.hidden=!t3}if(t3){Q(a).show()}else{_.done(function(){Q(a).hide()})}_.done(function(){var j;Q._removeData(a,"fxshow");for(j in r3){Q.style(a,j,r3[j])}});for(j in r3){l=u2(t3?u3[j]:0,j,_);if(!(j in u3)){u3[j]=l.start;if(t3){l.end=l.start;l.start=j==="width"||j==="height"?1:0}}}}else if((r==="none"?S1(a.nodeName):r)==="inline"){s3.display=r}}function w2(p,s){var a,n,b,v,j;for(a in p){n=Q.camelCase(a);b=s[n];v=p[a];if(Q.isArray(v)){b=v[1];v=p[a]=v[0]}if(a!==n){p[n]=v;delete p[a]}j=Q.cssHooks[n];if(j&&"expand"in j){v=j.expand(v);delete p[n];for(a in v){if(!(a in p)){p[a]=v[a];s[a]=b}}}else{s[n]=b}}}function x2(a,p,b){var r,s,j=0,l=q2.length,m=Q.Deferred().always(function(){delete t.elem}),t=function(){if(s){return false}var _=l2||s2(),r3=Math.max(0,n.startTime+n.duration-_),s3=r3/n.duration||0,t3=1-s3,j=0,l=n.tweens.length;for(;j<l;j++){n.tweens[j].run(t3)}m.notifyWith(a,[n,t3,r3]);if(t3<1&&l){return r3}else{m.resolveWith(a,[n]);return false}},n=m.promise({elem:a,props:Q.extend({},p),opts:Q.extend(true,{specialEasing:{}},b),originalProperties:p,originalOptions:b,startTime:l2||s2(),duration:b.duration,tweens:[],createTween:function(_,r3){var s3=Q.Tween(a,n.opts,_,r3,n.opts.specialEasing[_]||n.opts.easing);n.tweens.push(s3);return s3},stop:function(_){var j=0,l=_?n.tweens.length:0;if(s){return this}s=true;for(;j<l;j++){n.tweens[j].run(1)}if(_){m.resolveWith(a,[n,_])}else{m.rejectWith(a,[n,_])}return this}}),v=n.props;w2(v,n.opts.specialEasing);for(;j<l;j++){r=q2[j].call(n,a,v,n.opts);if(r){return r}}Q.map(v,u2,n);if(Q.isFunction(n.opts.start)){n.opts.start.call(a,n)}Q.fx.timer(Q.extend(t,{elem:a,anim:n,queue:n.opts.queue}));return n.progress(n.opts.progress).done(n.opts.done,n.opts.complete).fail(n.opts.fail).always(n.opts.always)}Q.Animation=Q.extend(x2,{tweener:function(p,a){if(Q.isFunction(p)){a=p;p=["*"]}else{p=p.split(" ")}var b,j=0,l=p.length;for(;j<l;j++){b=p[j];r2[b]=r2[b]||[];r2[b].unshift(a)}},prefilter:function(a,p){if(p){q2.unshift(a)}else{q2.push(a)}}});Q.speed=function(s,a,b){var j=s&&typeof s==="object"?Q.extend({},s):{complete:b||!b&&a||Q.isFunction(s)&&s,duration:s,easing:b&&a||a&&!Q.isFunction(a)&&a};j.duration=Q.fx.off?0:typeof j.duration==="number"?j.duration:j.duration in Q.fx.speeds?Q.fx.speeds[j.duration]:Q.fx.speeds._default;if(j.queue==null||j.queue===true){j.queue="fx"}j.old=j.complete;j.complete=function(){if(Q.isFunction(j.old)){j.old.call(this)}if(j.queue){Q.dequeue(this,j.queue)}};return j};Q.fn.extend({fadeTo:function(s,t,a,b){return this.filter(f1).css("opacity",0).show().end().animate({opacity:t},s,a,b)},animate:function(p,s,a,b){var j=Q.isEmptyObject(p),l=Q.speed(s,a,b),m=function(){var n=x2(this,Q.extend({},p),l);if(j||Q._data(this,"finish")){n.stop(true)}};m.finish=m;return j||l.queue===false?this.each(m):this.queue(l.queue,m)},stop:function(t,a,b){var s=function(j){var l=j.stop;delete j.stop;l(b)};if(typeof t!=="string"){b=a;a=t;t=undefined}if(a&&t!==false){this.queue(t||"fx",[])}return this.each(function(){var j=true,l=t!=null&&t+"queueHooks",m=Q.timers,n=Q._data(this);if(l){if(n[l]&&n[l].stop){s(n[l])}}else{for(l in n){if(n[l]&&n[l].stop&&p2.test(l)){s(n[l])}}}for(l=m.length;l--;){if(m[l].elem===this&&(t==null||m[l].queue===t)){m[l].anim.stop(b);j=false;m.splice(l,1)}}if(j||!b){Q.dequeue(this,t)}})},finish:function(t){if(t!==false){t=t||"fx"}return this.each(function(){var a,b=Q._data(this),j=b[t+"queue"],l=b[t+"queueHooks"],m=Q.timers,n=j?j.length:0;b.finish=true;Q.queue(this,t,[]);if(l&&l.stop){l.stop.call(this,true)}for(a=m.length;a--;){if(m[a].elem===this&&m[a].queue===t){m[a].anim.stop(true);m.splice(a,1)}}for(a=0;a<n;a++){if(j[a]&&j[a].finish){j[a].finish.call(this)}}delete b.finish})}});Q.each(["toggle","show","hide"],function(i,n){var a=Q.fn[n];Q.fn[n]=function(s,b,j){return s==null||typeof s==="boolean"?a.apply(this,arguments):this.animate(t2(n,true),s,b,j)}});Q.each({slideDown:t2("show"),slideUp:t2("hide"),slideToggle:t2("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(n,p){Q.fn[n]=function(s,a,b){return this.animate(p,s,a,b)}});Q.timers=[];Q.fx.tick=function(){var t,a=Q.timers,i=0;l2=Q.now();for(;i<a.length;i++){t=a[i];if(!t()&&a[i]===t){a.splice(i--,1)}}if(!a.length){Q.fx.stop()}l2=undefined};Q.fx.timer=function(t){Q.timers.push(t);if(t()){Q.fx.start()}else{Q.timers.pop()}};Q.fx.interval=13;Q.fx.start=function(){if(!m2){m2=setInterval(Q.fx.tick,Q.fx.interval)}};Q.fx.stop=function(){clearInterval(m2);m2=null};Q.fx.speeds={slow:600,fast:200,_default:400};Q.fn.delay=function(t,a){t=Q.fx?Q.fx.speeds[t]||t:t;a=a||"fx";return this.queue(a,function(n,b){var j=setTimeout(n,t);b.stop=function(){clearTimeout(j)}})};(function(){var b,j,s,a,l;j=J.createElement("div");j.setAttribute("className","t");j.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";a=j.getElementsByTagName("a")[0];s=J.createElement("select");l=s.appendChild(J.createElement("option"));b=j.getElementsByTagName("input")[0];a.style.cssText="top:1px";x.getSetAttribute=j.className!=="t";x.style=/top/.test(a.getAttribute("style"));x.hrefNormalized=a.getAttribute("href")==="/a";x.checkOn=!!b.value;x.optSelected=l.selected;x.enctype=!!J.createElement("form").enctype;s.disabled=true;x.optDisabled=!l.disabled;b=J.createElement("input");b.setAttribute("value","");x.input=b.getAttribute("value")==="";b.value="t";b.setAttribute("type","radio");x.radioValue=b.value==="t"})();var y2=/\r/g;Q.fn.extend({val:function(v){var a,r,b,j=this[0];if(!arguments.length){if(j){a=Q.valHooks[j.type]||Q.valHooks[j.nodeName.toLowerCase()];if(a&&"get"in a&&(r=a.get(j,"value"))!==undefined){return r}r=j.value;return typeof r==="string"?r.replace(y2,""):r==null?"":r}return}b=Q.isFunction(v);return this.each(function(i){var l;if(this.nodeType!==1){return}if(b){l=v.call(this,i,Q(this).val())}else{l=v}if(l==null){l=""}else if(typeof l==="number"){l+=""}else if(Q.isArray(l)){l=Q.map(l,function(v){return v==null?"":v+""})}a=Q.valHooks[this.type]||Q.valHooks[this.nodeName.toLowerCase()];if(!a||!("set"in a)||a.set(this,l,"value")===undefined){this.value=l}})}});Q.extend({valHooks:{option:{get:function(a){var v=Q.find.attr(a,"value");return v!=null?v:Q.trim(Q.text(a))}},select:{get:function(a){var v,b,j=a.options,l=a.selectedIndex,m=a.type==="select-one"||l<0,n=m?null:[],p=m?l+1:j.length,i=l<0?p:m?l:0;for(;i<p;i++){b=j[i];if((b.selected||i===l)&&(x.optDisabled?!b.disabled:b.getAttribute("disabled")===null)&&(!b.parentNode.disabled||!Q.nodeName(b.parentNode,"optgroup"))){v=Q(b).val();if(m){return v}n.push(v)}}return n},set:function(a,v){var b,j,l=a.options,m=Q.makeArray(v),i=l.length;while(i--){j=l[i];if(Q.inArray(Q.valHooks.option.get(j),m)>=0){try{j.selected=b=true}catch(_){j.scrollHeight}}else{j.selected=false}}if(!b){a.selectedIndex=-1}return l}}}});Q.each(["radio","checkbox"],function(){Q.valHooks[this]={set:function(a,v){if(Q.isArray(v)){return(a.checked=Q.inArray(Q(a).val(),v)>=0)}}};if(!x.checkOn){Q.valHooks[this].get=function(a){return a.getAttribute("value")===null?"on":a.value}}});var z2,A2,B2=Q.expr.attrHandle,C2=/^(?:checked|selected)$/i,D2=x.getSetAttribute,E2=x.input;Q.fn.extend({attr:function(n,v){return g1(this,Q.attr,n,v,arguments.length>1)},removeAttr:function(n){return this.each(function(){Q.removeAttr(this,n)})}});Q.extend({attr:function(a,n,v){var b,r,j=a.nodeType;if(!a||j===3||j===8||j===2){return}if(typeof a.getAttribute===X){return Q.prop(a,n,v)}if(j!==1||!Q.isXMLDoc(a)){n=n.toLowerCase();b=Q.attrHooks[n]||(Q.expr.match.bool.test(n)?A2:z2)}if(v!==undefined){if(v===null){Q.removeAttr(a,n)}else if(b&&"set"in b&&(r=b.set(a,v,n))!==undefined){return r}else{a.setAttribute(n,v+"");return v}}else if(b&&"get"in b&&(r=b.get(a,n))!==null){return r}else{r=Q.find.attr(a,n);return r==null?undefined:r}},removeAttr:function(a,v){var n,p,i=0,b=v&&v.match(P);if(b&&a.nodeType===1){while((n=b[i++])){p=Q.propFix[n]||n;if(Q.expr.match.bool.test(n)){if(E2&&D2||!C2.test(n)){a[p]=false}else{a[Q.camelCase("default-"+n)]=a[p]=false}}else{Q.attr(a,n,"")}a.removeAttribute(D2?n:p)}}},attrHooks:{type:{set:function(a,v){if(!x.radioValue&&v==="radio"&&Q.nodeName(a,"input")){var b=a.value;a.setAttribute("type",v);if(b){a.value=b}return v}}}}});A2={set:function(a,v,n){if(v===false){Q.removeAttr(a,n)}else if(E2&&D2||!C2.test(n)){a.setAttribute(!D2&&Q.propFix[n]||n,n)}else{a[Q.camelCase("default-"+n)]=a[n]=true}return n}};Q.each(Q.expr.match.bool.source.match(/\w+/g),function(i,n){var a=B2[n]||Q.find.attr;B2[n]=E2&&D2||!C2.test(n)?function(b,n,j){var r,l;if(!j){l=B2[n];B2[n]=r;r=a(b,n,j)!=null?n.toLowerCase():null;B2[n]=l}return r}:function(b,n,j){if(!j){return b[Q.camelCase("default-"+n)]?n.toLowerCase():null}}});if(!E2||!D2){Q.attrHooks.value={set:function(a,v,n){if(Q.nodeName(a,"input")){a.defaultValue=v}else{return z2&&z2.set(a,v,n)}}}}if(!D2){z2={set:function(a,v,n){var r=a.getAttributeNode(n);if(!r){a.setAttributeNode((r=a.ownerDocument.createAttribute(n)))}r.value=v+="";if(n==="value"||v===a.getAttribute(n)){return v}}};B2.id=B2.name=B2.coords=function(a,n,b){var r;if(!b){return(r=a.getAttributeNode(n))&&r.value!==""?r.value:null}};Q.valHooks.button={get:function(a,n){var r=a.getAttributeNode(n);if(r&&r.specified){return r.value}},set:z2.set};Q.attrHooks.contenteditable={set:function(a,v,n){z2.set(a,v===""?false:v,n)}};Q.each(["width","height"],function(i,n){Q.attrHooks[n]={set:function(a,v){if(v===""){a.setAttribute(n,"auto");return v}}}})}if(!x.style){Q.attrHooks.style={get:function(a){return a.style.cssText||undefined},set:function(a,v){return(a.style.cssText=v+"")}}}var F2=/^(?:input|select|textarea|button|object)$/i,G2=/^(?:a|area)$/i;Q.fn.extend({prop:function(n,v){return g1(this,Q.prop,n,v,arguments.length>1)},removeProp:function(n){n=Q.propFix[n]||n;return this.each(function(){try{this[n]=undefined;delete this[n]}catch(e){}})}});Q.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,n,v){var r,b,j,l=a.nodeType;if(!a||l===3||l===8||l===2){return}j=l!==1||!Q.isXMLDoc(a);if(j){n=Q.propFix[n]||n;b=Q.propHooks[n]}if(v!==undefined){return b&&"set"in b&&(r=b.set(a,v,n))!==undefined?r:(a[n]=v)}else{return b&&"get"in b&&(r=b.get(a,n))!==null?r:a[n]}},propHooks:{tabIndex:{get:function(a){var t=Q.find.attr(a,"tabindex");return t?parseInt(t,10):F2.test(a.nodeName)||G2.test(a.nodeName)&&a.href?0:-1}}}});if(!x.hrefNormalized){Q.each(["href","src"],function(i,n){Q.propHooks[n]={get:function(a){return a.getAttribute(n,4)}}})}if(!x.optSelected){Q.propHooks.selected={get:function(a){var p=a.parentNode;if(p){p.selectedIndex;if(p.parentNode){p.parentNode.selectedIndex}}return null}}}Q.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){Q.propFix[this.toLowerCase()]=this});if(!x.enctype){Q.propFix.enctype="encoding"}var H2=/[\t\r\n\f]/g;Q.fn.extend({addClass:function(v){var a,b,l,m,j,n,i=0,p=this.length,r=typeof v==="string"&&v;if(Q.isFunction(v)){return this.each(function(j){Q(this).addClass(v.call(this,j,this.className))})}if(r){a=(v||"").match(P)||[];for(;i<p;i++){b=this[i];l=b.nodeType===1&&(b.className?(" "+b.className+" ").replace(H2," "):" ");if(l){j=0;while((m=a[j++])){if(l.indexOf(" "+m+" ")<0){l+=m+" "}}n=Q.trim(l);if(b.className!==n){b.className=n}}}}return this},removeClass:function(v){var a,b,l,m,j,n,i=0,p=this.length,r=arguments.length===0||typeof v==="string"&&v;if(Q.isFunction(v)){return this.each(function(j){Q(this).removeClass(v.call(this,j,this.className))})}if(r){a=(v||"").match(P)||[];for(;i<p;i++){b=this[i];l=b.nodeType===1&&(b.className?(" "+b.className+" ").replace(H2," "):"");if(l){j=0;while((m=a[j++])){while(l.indexOf(" "+m+" ")>=0){l=l.replace(" "+m+" "," ")}}n=v?Q.trim(l):"";if(b.className!==n){b.className=n}}}}return this},toggleClass:function(v,s){var t=typeof v;if(typeof s==="boolean"&&t==="string"){return s?this.addClass(v):this.removeClass(v)}if(Q.isFunction(v)){return this.each(function(i){Q(this).toggleClass(v.call(this,i,this.className,s),s)})}return this.each(function(){if(t==="string"){var a,i=0,b=Q(this),j=v.match(P)||[];while((a=j[i++])){if(b.hasClass(a)){b.removeClass(a)}else{b.addClass(a)}}}else if(t===X||t==="boolean"){if(this.className){Q._data(this,"__className__",this.className)}this.className=this.className||v===false?"":Q._data(this,"__className__")||""}})},hasClass:function(s){var a=" "+s+" ",i=0,l=this.length;for(;i<l;i++){if(this[i].nodeType===1&&(" "+this[i].className+" ").replace(H2," ").indexOf(a)>=0){return true}}return false}});Q.each(("blur focus focusin focusout load resize scroll unload click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup error contextmenu").split(" "),function(i,n){Q.fn[n]=function(a,b){return arguments.length>0?this.on(n,null,a,b):this.trigger(n)}});Q.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(t,a,b){return this.on(t,null,a,b)},unbind:function(t,a){return this.off(t,null,a)},delegate:function(s,t,a,b){return this.on(t,s,a,b)},undelegate:function(s,t,a){return arguments.length===1?this.off(s,"**"):this.off(t,s||"**",a)}});var I2=Q.now();var J2=(/\?/);var K2=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;Q.parseJSON=function(a){if(w.JSON&&w.JSON.parse){return w.JSON.parse(a+"")}var r,b=null,s=Q.trim(a+"");return s&&!Q.trim(s.replace(K2,function(t,j,l,m){if(r&&j){b=0}if(b===0){return t}r=l||j;b+=!m-!l;return""}))?(Function("return "+s))():Q.error("Invalid JSON: "+a)};Q.parseXML=function(a){var b,t;if(!a||typeof a!=="string"){return null}try{if(w.DOMParser){t=new DOMParser();b=t.parseFromString(a,"text/xml")}else{b=new ActiveXObject("Microsoft.XMLDOM");b.async="false";b.loadXML(a)}}catch(e){b=undefined}if(!b||!b.documentElement||b.getElementsByTagName("parsererror").length){Q.error("Invalid XML: "+a)}return b};var L2,M2,N2=/#.*$/,O2=/([?&])_=[^&]*/,P2=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,Q2=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,R2=/^(?:GET|HEAD)$/,S2=/^\/\//,T2=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,U2={},V2={},W2="*/".concat("*");try{M2=location.href}catch(e){M2=J.createElement("a");M2.href="";M2=M2.href}L2=T2.exec(M2.toLowerCase())||[];function X2(s){return function(a,b){if(typeof a!=="string"){b=a;a="*"}var j,i=0,l=a.toLowerCase().match(P)||[];if(Q.isFunction(b)){while((j=l[i++])){if(j.charAt(0)==="+"){j=j.slice(1)||"*";(s[j]=s[j]||[]).unshift(b)}else{(s[j]=s[j]||[]).push(b)}}}}}function Y2(s,a,b,j){var l={},m=(s===V2);function n(p){var r;l[p]=true;Q.each(s[p]||[],function(_,t){var v=t(a,b,j);if(typeof v==="string"&&!m&&!l[v]){a.dataTypes.unshift(v);n(v);return false}else if(m){return!(r=v)}});return r}return n(a.dataTypes[0])||!l["*"]&&n("*")}function Z2(t,s){var a,b,j=Q.ajaxSettings.flatOptions||{};for(b in s){if(s[b]!==undefined){(j[b]?t:(a||(a={})))[b]=s[b]}}if(a){Q.extend(true,t,a)}return t}function $2(s,j,r){var a,b,l,t,m=s.contents,n=s.dataTypes;while(n[0]==="*"){n.shift();if(b===undefined){b=s.mimeType||j.getResponseHeader("Content-Type")}}if(b){for(t in m){if(m[t]&&m[t].test(b)){n.unshift(t);break}}}if(n[0]in r){l=n[0]}else{for(t in r){if(!n[0]||s.converters[t+" "+n[0]]){l=t;break}if(!a){a=t}}l=l||a}if(l){if(l!==n[0]){n.unshift(l)}return r[l]}}function _2(s,r,j,a){var b,l,m,t,p,n={},v=s.dataTypes.slice();if(v[1]){for(m in s.converters){n[m.toLowerCase()]=s.converters[m]}}l=v.shift();while(l){if(s.responseFields[l]){j[s.responseFields[l]]=r}if(!p&&a&&s.dataFilter){r=s.dataFilter(r,s.dataType)}p=l;l=v.shift();if(l){if(l==="*"){l=p}else if(p!=="*"&&p!==l){m=n[p+" "+l]||n["* "+l];if(!m){for(b in n){t=b.split(" ");if(t[1]===l){m=n[p+" "+t[0]]||n["* "+t[0]];if(m){if(m===true){m=n[b]}else if(n[b]!==true){l=t[0];v.unshift(t[1])}break}}}}if(m!==true){if(m&&s["throws"]){r=m(r)}else{try{r=m(r)}catch(e){return{state:"parsererror",error:m?e:"No conversion from "+p+" to "+l}}}}}}}return{state:"success",data:r}}Q.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:M2,type:"GET",isLocal:Q2.test(L2[1]),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":W2,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":true,"text json":Q.parseJSON,"text xml":Q.parseXML},flatOptions:{url:true,context:true}},ajaxSetup:function(t,s){return s?Z2(Z2(t,Q.ajaxSettings),s):Z2(Q.ajaxSettings,t)},ajaxPrefilter:X2(U2),ajaxTransport:X2(V2),ajax:function(a,b){if(typeof a==="object"){b=a;a=undefined}b=b||{};var p,i,j,r,t,l,m,n,s=Q.ajaxSetup({},b),v=s.context||s,_=s.context&&(v.nodeType||v.jquery)?Q(v):Q.event,r3=Q.Deferred(),s3=Q.Callbacks("once memory"),t3=s.statusCode||{},u3={},v3={},w3=0,x3="canceled",y3={readyState:0,getResponseHeader:function(A3){var B3;if(w3===2){if(!n){n={};while((B3=P2.exec(r))){n[B3[1].toLowerCase()]=B3[2]}}B3=n[A3.toLowerCase()]}return B3==null?null:B3},getAllResponseHeaders:function(){return w3===2?r:null},setRequestHeader:function(A3,B3){var C3=A3.toLowerCase();if(!w3){A3=v3[C3]=v3[C3]||A3;u3[A3]=B3}return this},overrideMimeType:function(A3){if(!w3){s.mimeType=A3}return this},statusCode:function(A3){var B3;if(A3){if(w3<2){for(B3 in A3){t3[B3]=[t3[B3],A3[B3]]}}else{y3.always(A3[y3.status])}}return this},abort:function(A3){var B3=A3||x3;if(m){m.abort(B3)}z3(0,B3);return this}};r3.promise(y3).complete=s3.add;y3.success=y3.done;y3.error=y3.fail;s.url=((a||s.url||M2)+"").replace(N2,"").replace(S2,L2[1]+"//");s.type=b.method||b.type||s.method||s.type;s.dataTypes=Q.trim(s.dataType||"*").toLowerCase().match(P)||[""];if(s.crossDomain==null){p=T2.exec(s.url.toLowerCase());s.crossDomain=!!(p&&(p[1]!==L2[1]||p[2]!==L2[2]||(p[3]||(p[1]==="http:"?"80":"443"))!==(L2[3]||(L2[1]==="http:"?"80":"443"))))}if(s.data&&s.processData&&typeof s.data!=="string"){s.data=Q.param(s.data,s.traditional)}Y2(U2,s,b,y3);if(w3===2){return y3}l=s.global;if(l&&Q.active++===0){Q.event.trigger("ajaxStart")}s.type=s.type.toUpperCase();s.hasContent=!R2.test(s.type);j=s.url;if(!s.hasContent){if(s.data){j=(s.url+=(J2.test(j)?"&":"?")+s.data);delete s.data}if(s.cache===false){s.url=O2.test(j)?j.replace(O2,"$1_="+I2++):j+(J2.test(j)?"&":"?")+"_="+I2++}}if(s.ifModified){if(Q.lastModified[j]){y3.setRequestHeader("If-Modified-Since",Q.lastModified[j])}if(Q.etag[j]){y3.setRequestHeader("If-None-Match",Q.etag[j])}}if(s.data&&s.hasContent&&s.contentType!==false||b.contentType){y3.setRequestHeader("Content-Type",s.contentType)}y3.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", "+W2+"; q=0.01":""):s.accepts["*"]);for(i in s.headers){y3.setRequestHeader(i,s.headers[i])}if(s.beforeSend&&(s.beforeSend.call(v,y3,s)===false||w3===2)){return y3.abort()}x3="abort";for(i in{success:1,error:1,complete:1}){y3[i](s[i])}m=Y2(V2,s,b,y3);if(!m){z3(-1,"No Transport")}else{y3.readyState=1;if(l){_.trigger("ajaxSend",[y3,s])}if(s.async&&s.timeout>0){t=setTimeout(function(){y3.abort("timeout")},s.timeout)}try{w3=1;m.send(u3,z3)}catch(e){if(w3<2){z3(-1,e)}else{throw e}}}function z3(A3,B3,C3,D3){var E3,F3,G3,H3,I3,J3=B3;if(w3===2){return}w3=2;if(t){clearTimeout(t)}m=undefined;r=D3||"";y3.readyState=A3>0?4:0;E3=A3>=200&&A3<300||A3===304;if(C3){H3=$2(s,y3,C3)}H3=_2(s,H3,y3,E3);if(E3){if(s.ifModified){I3=y3.getResponseHeader("Last-Modified");if(I3){Q.lastModified[j]=I3}I3=y3.getResponseHeader("etag");if(I3){Q.etag[j]=I3}}if(A3===204||s.type==="HEAD"){J3="nocontent"}else if(A3===304){J3="notmodified"}else{J3=H3.state;F3=H3.data;G3=H3.error;E3=!G3}}else{G3=J3;if(A3||!J3){J3="error";if(A3<0){A3=0}}}y3.status=A3;y3.statusText=(B3||J3)+"";if(E3){r3.resolveWith(v,[F3,J3,y3])}else{r3.rejectWith(v,[y3,J3,G3])}y3.statusCode(t3);t3=undefined;if(l){_.trigger(E3?"ajaxSuccess":"ajaxError",[y3,s,E3?F3:G3])}s3.fireWith(v,[y3,J3]);if(l){_.trigger("ajaxComplete",[y3,s]);if(!(--Q.active)){Q.event.trigger("ajaxStop")}}}return y3},getJSON:function(a,b,j){return Q.get(a,b,j,"json")},getScript:function(a,b){return Q.get(a,undefined,b,"script")}});Q.each(["get","post"],function(i,m){Q[m]=function(a,b,j,t){if(Q.isFunction(b)){t=t||j;j=b;b=undefined}return Q.ajax({url:a,type:m,dataType:t,data:b,success:j})}});Q.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(i,t){Q.fn[t]=function(a){return this.on(t,a)}});Q._evalUrl=function(a){return Q.ajax({url:a,type:"GET",dataType:"script",async:false,global:false,"throws":true})};Q.fn.extend({wrapAll:function(a){if(Q.isFunction(a)){return this.each(function(i){Q(this).wrapAll(a.call(this,i))})}if(this[0]){var b=Q(a,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){b.insertBefore(this[0])}b.map(function(){var j=this;while(j.firstChild&&j.firstChild.nodeType===1){j=j.firstChild}return j}).append(this)}return this},wrapInner:function(a){if(Q.isFunction(a)){return this.each(function(i){Q(this).wrapInner(a.call(this,i))})}return this.each(function(){var s=Q(this),b=s.contents();if(b.length){b.wrapAll(a)}else{s.append(a)}})},wrap:function(a){var b=Q.isFunction(a);return this.each(function(i){Q(this).wrapAll(b?a.call(this,i):a)})},unwrap:function(){return this.parent().each(function(){if(!Q.nodeName(this,"body")){Q(this).replaceWith(this.childNodes)}}).end()}});Q.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||(!x.reliableHiddenOffsets()&&((a.style&&a.style.display)||Q.css(a,"display"))==="none")};Q.expr.filters.visible=function(a){return!Q.expr.filters.hidden(a)};var a3=/%20/g,b3=/\[\]$/,c3=/\r?\n/g,d3=/^(?:submit|button|image|reset|file)$/i,e3=/^(?:input|select|textarea|keygen)/i;function f3(p,a,t,b){var n;if(Q.isArray(a)){Q.each(a,function(i,v){if(t||b3.test(p)){b(p,v)}else{f3(p+"["+(typeof v==="object"?i:"")+"]",v,t,b)}})}else if(!t&&Q.type(a)==="object"){for(n in a){f3(p+"["+n+"]",a[n],t,b)}}else{b(p,a)}}Q.param=function(a,t){var p,s=[],b=function(j,v){v=Q.isFunction(v)?v():(v==null?"":v);s[s.length]=encodeURIComponent(j)+"="+encodeURIComponent(v)};if(t===undefined){t=Q.ajaxSettings&&Q.ajaxSettings.traditional}if(Q.isArray(a)||(a.jquery&&!Q.isPlainObject(a))){Q.each(a,function(){b(this.name,this.value)})}else{for(p in a){f3(p,a[p],t,b)}}return s.join("&").replace(a3,"+")};Q.fn.extend({serialize:function(){return Q.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=Q.prop(this,"elements");return a?Q.makeArray(a):this}).filter(function(){var t=this.type;return this.name&&!Q(this).is(":disabled")&&e3.test(this.nodeName)&&!d3.test(t)&&(this.checked||!h1.test(t))}).map(function(i,a){var v=Q(this).val();return v==null?null:Q.isArray(v)?Q.map(v,function(v){return{name:a.name,value:v.replace(c3,"\r\n")}}):{name:a.name,value:v.replace(c3,"\r\n")}}).get()}});Q.ajaxSettings.xhr=w.ActiveXObject!==undefined?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&j3()||k3()}:j3;var g3=0,h3={},i3=Q.ajaxSettings.xhr();if(w.ActiveXObject){Q(w).on("unload",function(){for(var a in h3){h3[a](undefined,true)}})}x.cors=!!i3&&("withCredentials"in i3);i3=x.ajax=!!i3;if(i3){Q.ajaxTransport(function(a){if(!a.crossDomain||x.cors){var b;return{send:function(j,l){var i,m=a.xhr(),n=++g3;m.open(a.type,a.url,a.async,a.username,a.password);if(a.xhrFields){for(i in a.xhrFields){m[i]=a.xhrFields[i]}}if(a.mimeType&&m.overrideMimeType){m.overrideMimeType(a.mimeType)}if(!a.crossDomain&&!j["X-Requested-With"]){j["X-Requested-With"]="XMLHttpRequest"}for(i in j){if(j[i]!==undefined){m.setRequestHeader(i,j[i]+"")}}m.send((a.hasContent&&a.data)||null);b=function(_,p){var s,r,t;if(b&&(p||m.readyState===4)){delete h3[n];b=undefined;m.onreadystatechange=Q.noop;if(p){if(m.readyState!==4){m.abort()}}else{t={};s=m.status;if(typeof m.responseText==="string"){t.text=m.responseText}try{r=m.statusText}catch(e){r=""}if(!s&&a.isLocal&&!a.crossDomain){s=t.text?200:404}else if(s===1223){s=204}}}if(t){l(s,r,t,m.getAllResponseHeaders())}};if(!a.async){b()}else if(m.readyState===4){setTimeout(b)}else{m.onreadystatechange=h3[n]=b}},abort:function(){if(b){b(undefined,true)}}}}})}function j3(){try{return new w.XMLHttpRequest()}catch(e){}}function k3(){try{return new w.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}Q.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(t){Q.globalEval(t);return t}}});Q.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false}if(s.crossDomain){s.type="GET";s.global=false}});Q.ajaxTransport("script",function(s){if(s.crossDomain){var a,b=J.head||Q("head")[0]||J.documentElement;return{send:function(_,j){a=J.createElement("script");a.async=true;if(s.scriptCharset){a.charset=s.scriptCharset}a.src=s.url;a.onload=a.onreadystatechange=function(_,l){if(l||!a.readyState||/loaded|complete/.test(a.readyState)){a.onload=a.onreadystatechange=null;if(a.parentNode){a.parentNode.removeChild(a)}a=null;if(!l){j(200,"success")}}};b.insertBefore(a,b.firstChild)},abort:function(){if(a){a.onload(undefined,true)}}}}});var l3=[],m3=/(=)\?(?=&|$)|\?\?/;Q.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=l3.pop()||(Q.expando+"_"+(I2++));this[a]=true;return a}});Q.ajaxPrefilter("json jsonp",function(s,a,j){var b,l,r,m=s.jsonp!==false&&(m3.test(s.url)?"url":typeof s.data==="string"&&!(s.contentType||"").indexOf("application/x-www-form-urlencoded")&&m3.test(s.data)&&"data");if(m||s.dataTypes[0]==="jsonp"){b=s.jsonpCallback=Q.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;if(m){s[m]=s[m].replace(m3,"$1"+b)}else if(s.jsonp!==false){s.url+=(J2.test(s.url)?"&":"?")+s.jsonp+"="+b}s.converters["script json"]=function(){if(!r){Q.error(b+" was not called")}return r[0]};s.dataTypes[0]="json";l=w[b];w[b]=function(){r=arguments};j.always(function(){w[b]=l;if(s[b]){s.jsonpCallback=a.jsonpCallback;l3.push(b)}if(r&&Q.isFunction(l)){l(r[0])}r=l=undefined});return"script"}});Q.parseHTML=function(a,b,j){if(!a||typeof a!=="string"){return null}if(typeof b==="boolean"){j=b;b=false}b=b||J;var p=F.exec(a),s=!j&&[];if(p){return[b.createElement(p[1])]}p=Q.buildFragment([a],b,s);if(s&&s.length){Q(s).remove()}return Q.merge([],p.childNodes)};var n3=Q.fn.load;Q.fn.load=function(a,p,b){if(typeof a!=="string"&&n3){return n3.apply(this,arguments)}var s,r,t,j=this,l=a.indexOf(" ");if(l>=0){s=Q.trim(a.slice(l,a.length));a=a.slice(0,l)}if(Q.isFunction(p)){b=p;p=undefined}else if(p&&typeof p==="object"){t="POST"}if(j.length>0){Q.ajax({url:a,type:t,dataType:"html",data:p}).done(function(m){r=arguments;j.html(s?Q("<div>").append(Q.parseHTML(m)).find(s):m)}).complete(b&&function(m,n){j.each(b,r||[m.responseText,n,m])})}return this};Q.expr.filters.animated=function(a){return Q.grep(Q.timers,function(b){return a===b.elem}).length};var o3=w.document.documentElement;function p3(a){return Q.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:false}Q.offset={setOffset:function(a,b,i){var j,l,m,n,p,r,s,t=Q.css(a,"position"),v=Q(a),_={};if(t==="static"){a.style.position="relative"}p=v.offset();m=Q.css(a,"top");r=Q.css(a,"left");s=(t==="absolute"||t==="fixed")&&Q.inArray("auto",[m,r])>-1;if(s){j=v.position();n=j.top;l=j.left}else{n=parseFloat(m)||0;l=parseFloat(r)||0}if(Q.isFunction(b)){b=b.call(a,i,p)}if(b.top!=null){_.top=(b.top-p.top)+n}if(b.left!=null){_.left=(b.left-p.left)+l}if("using"in b){b.using.call(a,_)}else{v.css(_)}}};Q.fn.extend({offset:function(a){if(arguments.length){return a===undefined?this:this.each(function(i){Q.offset.setOffset(this,a,i)})}var o3,b,j={top:0,left:0},l=this[0],m=l&&l.ownerDocument;if(!m){return}o3=m.documentElement;if(!Q.contains(o3,l)){return j}if(typeof l.getBoundingClientRect!==X){j=l.getBoundingClientRect()}b=p3(m);return{top:j.top+(b.pageYOffset||o3.scrollTop)-(o3.clientTop||0),left:j.left+(b.pageXOffset||o3.scrollLeft)-(o3.clientLeft||0)}},position:function(){if(!this[0]){return}var a,b,p={top:0,left:0},j=this[0];if(Q.css(j,"position")==="fixed"){b=j.getBoundingClientRect()}else{a=this.offsetParent();b=this.offset();if(!Q.nodeName(a[0],"html")){p=a.offset()}p.top+=Q.css(a[0],"borderTopWidth",true);p.left+=Q.css(a[0],"borderLeftWidth",true)}return{top:b.top-p.top-Q.css(j,"marginTop",true),left:b.left-p.left-Q.css(j,"marginLeft",true)}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||o3;while(a&&(!Q.nodeName(a,"html")&&Q.css(a,"position")==="static")){a=a.offsetParent}return a||o3})}});Q.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(m,p){var t=/Y/.test(p);Q.fn[m]=function(v){return g1(this,function(a,m,v){var b=p3(a);if(v===undefined){return b?(p in b)?b[p]:b.document.documentElement[m]:a[m]}if(b){b.scrollTo(!t?v:Q(b).scrollLeft(),t?v:Q(b).scrollTop())}else{a[m]=v}},m,v,arguments.length,null)}});Q.each(["top","left"],function(i,p){Q.cssHooks[p]=Y1(x.pixelPosition,function(a,b){if(b){b=W1(a,p);return U1.test(b)?Q(a).position()[p]+"px":b}})});Q.each({Height:"height",Width:"width"},function(n,t){Q.each({padding:"inner"+n,content:t,"":"outer"+n},function(a,b){Q.fn[b]=function(m,v){var j=arguments.length&&(a||typeof m!=="boolean"),l=a||(m===true||v===true?"margin":"border");return g1(this,function(p,t,v){var r;if(Q.isWindow(p)){return p.document.documentElement["client"+n]}if(p.nodeType===9){r=p.documentElement;return Math.max(p.body["scroll"+n],r["scroll"+n],p.body["offset"+n],r["offset"+n],r["client"+n])}return v===undefined?Q.css(p,t,l):Q.style(p,t,v,l)},t,j?m:undefined,j,null)}})});Q.fn.size=function(){return this.length};Q.fn.andSelf=Q.fn.addBack;if(typeof define==="function"&&define.amd){define("jquery",[],function(){return Q})}var q3=w.jQuery,_$=w.$;Q.noConflict=function(a){if(w.$===Q){w.$=_$}if(a&&w.jQuery===Q){w.jQuery=q3}return Q};if(typeof c===X){w.jQuery=w.$=Q}return Q}));
/*!
 * jQuery UI Core 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
(function($,u){var b=0,r=/^ui-id-\d+$/;$.ui=$.ui||{};$.extend($.ui,{version:"1.10.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}});$.fn.extend({focus:(function(o){return function(d,a){return typeof d==="number"?this.each(function(){var e=this;setTimeout(function(){$(e).focus();if(a){a.call(e)}},d)}):o.apply(this,arguments)}})($.fn.focus),scrollParent:function(){var s;if(($.ui.ie&&(/(static|relative)/).test(this.css("position")))||(/absolute/).test(this.css("position"))){s=this.parents().filter(function(){return(/(relative|absolute|fixed)/).test($.css(this,"position"))&&(/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"))}).eq(0)}else{s=this.parents().filter(function(){return(/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"))}).eq(0)}return(/fixed/).test(this.css("position"))||!s.length?$(document):s},zIndex:function(z){if(z!==u){return this.css("zIndex",z)}if(this.length){var e=$(this[0]),p,a;while(e.length&&e[0]!==document){p=e.css("position");if(p==="absolute"||p==="relative"||p==="fixed"){a=parseInt(e.css("zIndex"),10);if(!isNaN(a)&&a!==0){return a}}e=e.parent()}}return 0},uniqueId:function(){return this.each(function(){if(!this.id){this.id="ui-id-"+(++b)}})},removeUniqueId:function(){return this.each(function(){if(r.test(this.id)){$(this).removeAttr("id")}})}});function f(e,i){var m,a,c,n=e.nodeName.toLowerCase();if("area"===n){m=e.parentNode;a=m.name;if(!e.href||!a||m.nodeName.toLowerCase()!=="map"){return false}c=$("img[usemap=#"+a+"]")[0];return!!c&&v(c)}return(/input|select|textarea|button|object/.test(n)?!e.disabled:"a"===n?e.href||i:i)&&v(e)}function v(e){return $.expr.filters.visible(e)&&!$(e).parents().addBack().filter(function(){return $.css(this,"visibility")==="hidden"}).length}$.extend($.expr[":"],{data:$.expr.createPseudo?$.expr.createPseudo(function(d){return function(e){return!!$.data(e,d)}}):function(e,i,m){return!!$.data(e,m[3])},focusable:function(e){return f(e,!isNaN($.attr(e,"tabindex")))},tabbable:function(e){var t=$.attr(e,"tabindex"),i=isNaN(t);return(i||t>=0)&&f(e,!i)}});if(!$("<a>").outerWidth(1).jquery){$.each(["Width","Height"],function(i,n){var s=n==="Width"?["Left","Right"]:["Top","Bottom"],t=n.toLowerCase(),o={innerWidth:$.fn.innerWidth,innerHeight:$.fn.innerHeight,outerWidth:$.fn.outerWidth,outerHeight:$.fn.outerHeight};function a(e,c,d,m){$.each(s,function(){c-=parseFloat($.css(e,"padding"+this))||0;if(d){c-=parseFloat($.css(e,"border"+this+"Width"))||0}if(m){c-=parseFloat($.css(e,"margin"+this))||0}});return c}$.fn["inner"+n]=function(c){if(c===u){return o["inner"+n].call(this)}return this.each(function(){$(this).css(t,a(this,c)+"px")})};$.fn["outer"+n]=function(c,m){if(typeof c!=="number"){return o["outer"+n].call(this,c)}return this.each(function(){$(this).css(t,a(this,c,true,m)+"px")})}})}if(!$.fn.addBack){$.fn.addBack=function(s){return this.add(s==null?this.prevObject:this.prevObject.filter(s))}}if($("<a>").data("a-b","a").removeData("a-b").data("a-b")){$.fn.removeData=(function(a){return function(k){if(arguments.length){return a.call(this,$.camelCase(k))}else{return a.call(this)}}})($.fn.removeData)}$.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());$.support.selectstart="onselectstart"in document.createElement("div");$.fn.extend({disableSelection:function(){return this.bind(($.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});$.extend($.ui,{plugin:{add:function(m,o,s){var i,p=$.ui[m].prototype;for(i in s){p.plugins[i]=p.plugins[i]||[];p.plugins[i].push([o,s[i]])}},call:function(a,n,c){var i,s=a.plugins[n];if(!s||!a.element[0].parentNode||a.element[0].parentNode.nodeType===11){return}for(i=0;i<s.length;i++){if(a.options[s[i][0]]){s[i][1].apply(a.element,c)}}}},hasScroll:function(e,a){if($(e).css("overflow")==="hidden"){return false}var s=(a&&a==="left")?"scrollLeft":"scrollTop",h=false;if(e[s]>0){return true}e[s]=1;h=(e[s]>0);e[s]=0;return h}})})(jQuery);
/*!
 * jQuery UI Datepicker 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/datepicker/
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function($,u){$.extend($.ui,{datepicker:{version:"1.10.4"}});var P="datepicker",c;function D(){this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._datepickerShowing=false;this._inDialog=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};$.extend(this._defaults,this.regional[""]);this.dpDiv=d($("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}$.extend(D.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(s){f(this._defaults,s||{});return this},_attachDatepicker:function(t,s){var n,i,a;n=t.nodeName.toLowerCase();i=(n==="div"||n==="span");if(!t.id){this.uuid+=1;t.id="dp"+this.uuid}a=this._newInst($(t),i);a.settings=$.extend({},s||{});if(n==="input"){this._connectDatepicker(t,a)}else if(i){this._inlineDatepicker(t,a)}},_newInst:function(t,i){var a=t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:a,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:(!i?this.dpDiv:d($("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))}},_connectDatepicker:function(t,i){var a=$(t);i.append=$([]);i.trigger=$([]);if(a.hasClass(this.markerClassName)){return}this._attachments(a,i);a.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);this._autoSize(i);$.data(t,P,i);if(i.settings.disabled){this._disableDatepicker(t)}},_attachments:function(i,a){var s,b,e,g=this._get(a,"appendText"),h=this._get(a,"isRTL");if(a.append){a.append.remove()}if(g){a.append=$("<span class='"+this._appendClass+"'>"+g+"</span>");i[h?"before":"after"](a.append)}i.unbind("focus",this._showDatepicker);if(a.trigger){a.trigger.remove()}s=this._get(a,"showOn");if(s==="focus"||s==="both"){i.focus(this._showDatepicker)}if(s==="button"||s==="both"){b=this._get(a,"buttonText");e=this._get(a,"buttonImage");a.trigger=$(this._get(a,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:e,alt:b,title:b}):$("<button type='button'></button>").addClass(this._triggerClass).html(!e?b:$("<img/>").attr({src:e,alt:b,title:b})));i[h?"before":"after"](a.trigger);a.trigger.click(function(){if($.datepicker._datepickerShowing&&$.datepicker._lastInput===i[0]){$.datepicker._hideDatepicker()}else if($.datepicker._datepickerShowing&&$.datepicker._lastInput!==i[0]){$.datepicker._hideDatepicker();$.datepicker._showDatepicker(i[0])}else{$.datepicker._showDatepicker(i[0])}return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b,m,e,i,g=new Date(2009,12-1,20),h=this._get(a,"dateFormat");if(h.match(/[DM]/)){b=function(n){m=0;e=0;for(i=0;i<n.length;i++){if(n[i].length>m){m=n[i].length;e=i}}return e};g.setMonth(b(this._get(a,(h.match(/MM/)?"monthNames":"monthNamesShort"))));g.setDate(b(this._get(a,(h.match(/DD/)?"dayNames":"dayNamesShort")))+20-g.getDay())}a.input.attr("size",this._formatDate(a,g).length)}},_inlineDatepicker:function(t,i){var a=$(t);if(a.hasClass(this.markerClassName)){return}a.addClass(this.markerClassName).append(i.dpDiv);$.data(t,P,i);this._setDate(i,this._getDefaultDate(i),true);this._updateDatepicker(i);this._updateAlternate(i);if(i.settings.disabled){this._disableDatepicker(t)}i.dpDiv.css("display","block")},_dialogDatepicker:function(i,a,o,s,p){var b,e,g,h,j,k=this._dialogInst;if(!k){this.uuid+=1;b="dp"+this.uuid;this._dialogInput=$("<input type='text' id='"+b+"' style='position: absolute; top: -100px; width: 0px;'/>");this._dialogInput.keydown(this._doKeyDown);$("body").append(this._dialogInput);k=this._dialogInst=this._newInst(this._dialogInput,false);k.settings={};$.data(this._dialogInput[0],P,k)}f(k.settings,s||{});a=(a&&a.constructor===Date?this._formatDate(k,a):a);this._dialogInput.val(a);this._pos=(p?(p.length?p:[p.pageX,p.pageY]):null);if(!this._pos){e=document.documentElement.clientWidth;g=document.documentElement.clientHeight;h=document.documentElement.scrollLeft||document.body.scrollLeft;j=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[(e/2)-100+h,(g/2)-150+j]}this._dialogInput.css("left",(this._pos[0]+20)+"px").css("top",this._pos[1]+"px");k.settings.onSelect=o;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);if($.blockUI){$.blockUI(this.dpDiv)}$.data(this._dialogInput[0],P,k);return this},_destroyDatepicker:function(t){var n,a=$(t),i=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();$.removeData(t,P);if(n==="input"){i.append.remove();i.trigger.remove();a.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else if(n==="div"||n==="span"){a.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(t){var n,i,a=$(t),b=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();if(n==="input"){t.disabled=false;b.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else if(n==="div"||n==="span"){i=a.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled");i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",false)}this._disabledInputs=$.map(this._disabledInputs,function(v){return(v===t?null:v)})},_disableDatepicker:function(t){var n,i,a=$(t),b=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();if(n==="input"){t.disabled=true;b.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else if(n==="div"||n==="span"){i=a.children("."+this._inlineClass);i.children().addClass("ui-state-disabled");i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",true)}this._disabledInputs=$.map(this._disabledInputs,function(v){return(v===t?null:v)});this._disabledInputs[this._disabledInputs.length]=t},_isDisabledDatepicker:function(t){if(!t){return false}for(var i=0;i<this._disabledInputs.length;i++){if(this._disabledInputs[i]===t){return true}}return false},_getInst:function(t){try{return $.data(t,P)}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,n,v){var s,a,m,b,i=this._getInst(t);if(arguments.length===2&&typeof n==="string"){return(n==="defaults"?$.extend({},$.datepicker._defaults):(i?(n==="all"?$.extend({},i.settings):this._get(i,n)):null))}s=n||{};if(typeof n==="string"){s={};s[n]=v}if(i){if(this._curInst===i){this._hideDatepicker()}a=this._getDateDatepicker(t,true);m=this._getMinMaxDate(i,"min");b=this._getMinMaxDate(i,"max");f(i.settings,s);if(m!==null&&s.dateFormat!==u&&s.minDate===u){i.settings.minDate=this._formatDate(i,m)}if(b!==null&&s.dateFormat!==u&&s.maxDate===u){i.settings.maxDate=this._formatDate(i,b)}if("disabled"in s){if(s.disabled){this._disableDatepicker(t)}else{this._enableDatepicker(t)}}this._attachments($(t),i);this._autoSize(i);this._setDate(i,a);this._updateAlternate(i);this._updateDatepicker(i)}},_changeDatepicker:function(t,n,v){this._optionDatepicker(t,n,v)},_refreshDatepicker:function(t){var i=this._getInst(t);if(i){this._updateDatepicker(i)}},_setDateDatepicker:function(t,a){var i=this._getInst(t);if(i){this._setDate(i,a);this._updateDatepicker(i);this._updateAlternate(i)}},_getDateDatepicker:function(t,n){var i=this._getInst(t);if(i&&!i.inline){this._setDateFromField(i,n)}return(i?this._getDate(i):null)},_doKeyDown:function(e){var o,a,s,i=$.datepicker._getInst(e.target),h=true,b=i.dpDiv.is(".ui-datepicker-rtl");i._keyEvent=true;if($.datepicker._datepickerShowing){switch(e.keyCode){case 9:$.datepicker._hideDatepicker();h=false;break;case 13:s=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",i.dpDiv);if(s[0]){$.datepicker._selectDay(e.target,i.selectedMonth,i.selectedYear,s[0])}o=$.datepicker._get(i,"onSelect");if(o){a=$.datepicker._formatDate(i);o.apply((i.input?i.input[0]:null),[a,i])}else{$.datepicker._hideDatepicker()}return false;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,(e.ctrlKey?-$.datepicker._get(i,"stepBigMonths"):-$.datepicker._get(i,"stepMonths")),"M");break;case 34:$.datepicker._adjustDate(e.target,(e.ctrlKey?+$.datepicker._get(i,"stepBigMonths"):+$.datepicker._get(i,"stepMonths")),"M");break;case 35:if(e.ctrlKey||e.metaKey){$.datepicker._clearDate(e.target)}h=e.ctrlKey||e.metaKey;break;case 36:if(e.ctrlKey||e.metaKey){$.datepicker._gotoToday(e.target)}h=e.ctrlKey||e.metaKey;break;case 37:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,(b?+1:-1),"D")}h=e.ctrlKey||e.metaKey;if(e.originalEvent.altKey){$.datepicker._adjustDate(e.target,(e.ctrlKey?-$.datepicker._get(i,"stepBigMonths"):-$.datepicker._get(i,"stepMonths")),"M")}break;case 38:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,-7,"D")}h=e.ctrlKey||e.metaKey;break;case 39:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,(b?-1:+1),"D")}h=e.ctrlKey||e.metaKey;if(e.originalEvent.altKey){$.datepicker._adjustDate(e.target,(e.ctrlKey?+$.datepicker._get(i,"stepBigMonths"):+$.datepicker._get(i,"stepMonths")),"M")}break;case 40:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,+7,"D")}h=e.ctrlKey||e.metaKey;break;default:h=false}}else if(e.keyCode===36&&e.ctrlKey){$.datepicker._showDatepicker(this)}else{h=false}if(h){e.preventDefault();e.stopPropagation()}},_doKeyPress:function(e){var a,b,i=$.datepicker._getInst(e.target);if($.datepicker._get(i,"constrainInput")){a=$.datepicker._possibleChars($.datepicker._get(i,"dateFormat"));b=String.fromCharCode(e.charCode==null?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||(b<" "||!a||a.indexOf(b)>-1)}},_doKeyUp:function(e){var a,i=$.datepicker._getInst(e.target);if(i.input.val()!==i.lastVal){try{a=$.datepicker.parseDate($.datepicker._get(i,"dateFormat"),(i.input?i.input.val():null),$.datepicker._getFormatConfig(i));if(a){$.datepicker._setDateFromField(i);$.datepicker._updateAlternate(i);$.datepicker._updateDatepicker(i)}}catch(b){}}return true},_showDatepicker:function(i){i=i.target||i;if(i.nodeName.toLowerCase()!=="input"){i=$("input",i.parentNode)[0]}if($.datepicker._isDisabledDatepicker(i)||$.datepicker._lastInput===i){return}var a,b,e,g,o,s,h;a=$.datepicker._getInst(i);if($.datepicker._curInst&&$.datepicker._curInst!==a){$.datepicker._curInst.dpDiv.stop(true,true);if(a&&$.datepicker._datepickerShowing){$.datepicker._hideDatepicker($.datepicker._curInst.input[0])}}b=$.datepicker._get(a,"beforeShow");e=b?b.apply(i,[i,a]):{};if(e===false){return}f(a.settings,e);a.lastVal=null;$.datepicker._lastInput=i;$.datepicker._setDateFromField(a);if($.datepicker._inDialog){i.value=""}if(!$.datepicker._pos){$.datepicker._pos=$.datepicker._findPos(i);$.datepicker._pos[1]+=i.offsetHeight}g=false;$(i).parents().each(function(){g|=$(this).css("position")==="fixed";return!g});o={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null;a.dpDiv.empty();a.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});$.datepicker._updateDatepicker(a);o=$.datepicker._checkOffset(a,o,g);a.dpDiv.css({position:($.datepicker._inDialog&&$.blockUI?"static":(g?"fixed":"absolute")),display:"none",left:o.left+"px",top:o.top+"px"});if(!a.inline){s=$.datepicker._get(a,"showAnim");h=$.datepicker._get(a,"duration");a.dpDiv.zIndex($(i).zIndex()+1);$.datepicker._datepickerShowing=true;if($.effects&&$.effects.effect[s]){a.dpDiv.show(s,$.datepicker._get(a,"showOptions"),h)}else{a.dpDiv[s||"show"](s?h:null)}if($.datepicker._shouldFocusInput(a)){a.input.focus()}$.datepicker._curInst=a}},_updateDatepicker:function(i){this.maxRows=4;c=i;i.dpDiv.empty().append(this._generateHTML(i));this._attachHandlers(i);i.dpDiv.find("."+this._dayOverClass+" a").mouseover();var o,n=this._getNumberOfMonths(i),a=n[1],w=17;i.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");if(a>1){i.dpDiv.addClass("ui-datepicker-multi-"+a).css("width",(w*a)+"em")}i.dpDiv[(n[0]!==1||n[1]!==1?"add":"remove")+"Class"]("ui-datepicker-multi");i.dpDiv[(this._get(i,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");if(i===$.datepicker._curInst&&$.datepicker._datepickerShowing&&$.datepicker._shouldFocusInput(i)){i.input.focus()}if(i.yearshtml){o=i.yearshtml;setTimeout(function(){if(o===i.yearshtml&&i.yearshtml){i.dpDiv.find("select.ui-datepicker-year:first").replaceWith(i.yearshtml)}o=i.yearshtml=null},0)}},_shouldFocusInput:function(i){return i.input&&i.input.is(":visible")&&!i.input.is(":disabled")&&!i.input.is(":focus")},_checkOffset:function(i,o,a){var b=i.dpDiv.outerWidth(),e=i.dpDiv.outerHeight(),g=i.input?i.input.outerWidth():0,h=i.input?i.input.outerHeight():0,v=document.documentElement.clientWidth+(a?0:$(document).scrollLeft()),j=document.documentElement.clientHeight+(a?0:$(document).scrollTop());o.left-=(this._get(i,"isRTL")?(b-g):0);o.left-=(a&&o.left===i.input.offset().left)?$(document).scrollLeft():0;o.top-=(a&&o.top===(i.input.offset().top+h))?$(document).scrollTop():0;o.left-=Math.min(o.left,(o.left+b>v&&v>b)?Math.abs(o.left+b-v):0);o.top-=Math.min(o.top,(o.top+e>j&&j>e)?Math.abs(e+h):0);return o},_findPos:function(o){var p,i=this._getInst(o),a=this._get(i,"isRTL");while(o&&(o.type==="hidden"||o.nodeType!==1||$.expr.filters.hidden(o))){o=o[a?"previousSibling":"nextSibling"]}p=$(o).offset();return[p.left,p.top]},_hideDatepicker:function(i){var s,a,p,o,b=this._curInst;if(!b||(i&&b!==$.data(i,P))){return}if(this._datepickerShowing){s=this._get(b,"showAnim");a=this._get(b,"duration");p=function(){$.datepicker._tidyDialog(b)};if($.effects&&($.effects.effect[s]||$.effects[s])){b.dpDiv.hide(s,$.datepicker._get(b,"showOptions"),a,p)}else{b.dpDiv[(s==="slideDown"?"slideUp":(s==="fadeIn"?"fadeOut":"hide"))]((s?a:null),p)}if(!s){p()}this._datepickerShowing=false;o=this._get(b,"onClose");if(o){o.apply((b.input?b.input[0]:null),[(b.input?b.input.val():""),b])}this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if($.blockUI){$.unblockUI();$("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(i){i.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst){return}var a=$(e.target),i=$.datepicker._getInst(a[0]);if(((a[0].id!==$.datepicker._mainDivId&&a.parents("#"+$.datepicker._mainDivId).length===0&&!a.hasClass($.datepicker.markerClassName)&&!a.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&!($.datepicker._inDialog&&$.blockUI)))||(a.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!==i)){$.datepicker._hideDatepicker()}},_adjustDate:function(i,o,p){var t=$(i),a=this._getInst(t[0]);if(this._isDisabledDatepicker(t[0])){return}this._adjustInstDate(a,o+(p==="M"?this._get(a,"showCurrentAtPos"):0),p);this._updateDatepicker(a)},_gotoToday:function(i){var a,t=$(i),b=this._getInst(t[0]);if(this._get(b,"gotoCurrent")&&b.currentDay){b.selectedDay=b.currentDay;b.drawMonth=b.selectedMonth=b.currentMonth;b.drawYear=b.selectedYear=b.currentYear}else{a=new Date();b.selectedDay=a.getDate();b.drawMonth=b.selectedMonth=a.getMonth();b.drawYear=b.selectedYear=a.getFullYear()}this._notifyChange(b);this._adjustDate(t)},_selectMonthYear:function(i,s,p){var t=$(i),a=this._getInst(t[0]);a["selected"+(p==="M"?"Month":"Year")]=a["draw"+(p==="M"?"Month":"Year")]=parseInt(s.options[s.selectedIndex].value,10);this._notifyChange(a);this._adjustDate(t)},_selectDay:function(i,m,y,t){var a,b=$(i);if($(t).hasClass(this._unselectableClass)||this._isDisabledDatepicker(b[0])){return}a=this._getInst(b[0]);a.selectedDay=a.currentDay=$("a",t).html();a.selectedMonth=a.currentMonth=m;a.selectedYear=a.currentYear=y;this._selectDate(i,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear))},_clearDate:function(i){var t=$(i);this._selectDate(t,"")},_selectDate:function(i,a){var o,t=$(i),b=this._getInst(t[0]);a=(a!=null?a:this._formatDate(b));if(b.input){b.input.val(a)}this._updateAlternate(b);o=this._get(b,"onSelect");if(o){o.apply((b.input?b.input[0]:null),[a,b])}else if(b.input){b.input.trigger("change")}if(b.inline){this._updateDatepicker(b)}else{this._hideDatepicker();this._lastInput=b.input[0];if(typeof(b.input[0])!=="object"){b.input.focus()}this._lastInput=null}},_updateAlternate:function(i){var a,b,e,g=this._get(i,"altField");if(g){a=this._get(i,"altFormat")||this._get(i,"dateFormat");b=this._getDate(i);e=this.formatDate(a,b,this._getFormatConfig(i));$(g).each(function(){$(this).val(e)})}},noWeekends:function(a){var b=a.getDay();return[(b>0&&b<6),""]},iso8601Week:function(a){var t,b=new Date(a.getTime());b.setDate(b.getDate()+4-(b.getDay()||7));t=b.getTime();b.setMonth(0);b.setDate(1);return Math.floor(Math.round((t-b)/86400000)/7)+1},parseDate:function(e,g,s){if(e==null||g==null){throw"Invalid arguments"}g=(typeof g==="object"?g.toString():g+"");if(g===""){return null}var F,h,j,V=0,l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,m=(typeof l!=="string"?l:new Date().getFullYear()%100+parseInt(l,10)),n=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,o=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,q=(s?s.monthNames:null)||this._defaults.monthNames,y=-1,r=-1,t=-1,w=-1,x=false,z,A=function(a){var b=(F+1<e.length&&e.charAt(F+1)===a);if(b){F++}return b},B=function(a){var i=A(a),b=(a==="@"?14:(a==="!"?20:(a==="y"&&i?4:(a==="o"?3:2)))),k=new RegExp("^\\d{1,"+b+"}"),v=g.substring(V).match(k);if(!v){throw"Missing number at position "+V}V+=v[0].length;return parseInt(v[0],10)},C=function(G,H,I){var J=-1,K=$.map(A(G)?I:H,function(v,k){return[[k,v]]}).sort(function(a,b){return-(a[1].length-b[1].length)});$.each(K,function(i,a){var b=a[1];if(g.substr(V,b.length).toLowerCase()===b.toLowerCase()){J=a[0];V+=b.length;return false}});if(J!==-1){return J+1}else{throw"Unknown name at position "+V}},E=function(){if(g.charAt(V)!==e.charAt(F)){throw"Unexpected literal at position "+V}V++};for(F=0;F<e.length;F++){if(x){if(e.charAt(F)==="'"&&!A("'")){x=false}else{E()}}else{switch(e.charAt(F)){case"d":t=B("d");break;case"D":C("D",n,o);break;case"o":w=B("o");break;case"m":r=B("m");break;case"M":r=C("M",p,q);break;case"y":y=B("y");break;case"@":z=new Date(B("@"));y=z.getFullYear();r=z.getMonth()+1;t=z.getDate();break;case"!":z=new Date((B("!")-this._ticksTo1970)/10000);y=z.getFullYear();r=z.getMonth()+1;t=z.getDate();break;case"'":if(A("'")){E()}else{x=true}break;default:E()}}}if(V<g.length){j=g.substr(V);if(!/^\s+/.test(j)){throw"Extra/unparsed characters found in date: "+j}}if(y===-1){y=new Date().getFullYear()}else if(y<100){y+=new Date().getFullYear()-new Date().getFullYear()%100+(y<=m?0:-100)}if(w>-1){r=1;t=w;do{h=this._getDaysInMonth(y,r-1);if(t<=h){break}r++;t-=h}while(true)}z=this._daylightSavingAdjust(new Date(y,r-1,t));if(z.getFullYear()!==y||z.getMonth()+1!==r||z.getDate()!==t){throw"Invalid date"}return z},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(((1970-1)*365+Math.floor(1970/4)-Math.floor(1970/100)+Math.floor(1970/400))*24*60*60*10000000),formatDate:function(a,b,s){if(!b){return""}var F,e=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,g=(s?s.dayNames:null)||this._defaults.dayNames,m=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,h=(s?s.monthNames:null)||this._defaults.monthNames,l=function(n){var p=(F+1<a.length&&a.charAt(F+1)===n);if(p){F++}return p},i=function(n,v,p){var q=""+v;if(l(n)){while(q.length<p){q="0"+q}}return q},j=function(n,v,p,q){return(l(n)?q[v]:p[v])},o="",k=false;if(b){for(F=0;F<a.length;F++){if(k){if(a.charAt(F)==="'"&&!l("'")){k=false}else{o+=a.charAt(F)}}else{switch(a.charAt(F)){case"d":o+=i("d",b.getDate(),2);break;case"D":o+=j("D",b.getDay(),e,g);break;case"o":o+=i("o",Math.round((new Date(b.getFullYear(),b.getMonth(),b.getDate()).getTime()-new Date(b.getFullYear(),0,0).getTime())/86400000),3);break;case"m":o+=i("m",b.getMonth()+1,2);break;case"M":o+=j("M",b.getMonth(),m,h);break;case"y":o+=(l("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100);break;case"@":o+=b.getTime();break;case"!":o+=b.getTime()*10000+this._ticksTo1970;break;case"'":if(l("'")){o+="'"}else{k=true}break;default:o+=a.charAt(F)}}}}return o},_possibleChars:function(a){var F,b="",l=false,e=function(m){var g=(F+1<a.length&&a.charAt(F+1)===m);if(g){F++}return g};for(F=0;F<a.length;F++){if(l){if(a.charAt(F)==="'"&&!e("'")){l=false}else{b+=a.charAt(F)}}else{switch(a.charAt(F)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":if(e("'")){b+="'"}else{l=true}break;default:b+=a.charAt(F)}}}return b},_get:function(i,n){return i.settings[n]!==u?i.settings[n]:this._defaults[n]},_setDateFromField:function(i,n){if(i.input.val()===i.lastVal){return}var a=this._get(i,"dateFormat"),b=i.lastVal=i.input?i.input.val():null,e=this._getDefaultDate(i),g=e,s=this._getFormatConfig(i);try{g=this.parseDate(a,b,s)||e}catch(h){b=(n?"":b)}i.selectedDay=g.getDate();i.drawMonth=i.selectedMonth=g.getMonth();i.drawYear=i.selectedYear=g.getFullYear();i.currentDay=(b?g.getDate():0);i.currentMonth=(b?g.getMonth():0);i.currentYear=(b?g.getFullYear():0);this._adjustInstDate(i)},_getDefaultDate:function(i){return this._restrictMinMax(i,this._determineDate(i,this._get(i,"defaultDate"),new Date()))},_determineDate:function(i,a,b){var o=function(e){var a=new Date();a.setDate(a.getDate()+e);return a},g=function(h){try{return $.datepicker.parseDate($.datepicker._get(i,"dateFormat"),h,$.datepicker._getFormatConfig(i))}catch(e){}var a=(h.toLowerCase().match(/^c/)?$.datepicker._getDate(i):null)||new Date(),y=a.getFullYear(),m=a.getMonth(),j=a.getDate(),p=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,k=p.exec(h);while(k){switch(k[2]||"d"){case"d":case"D":j+=parseInt(k[1],10);break;case"w":case"W":j+=parseInt(k[1],10)*7;break;case"m":case"M":m+=parseInt(k[1],10);j=Math.min(j,$.datepicker._getDaysInMonth(y,m));break;case"y":case"Y":y+=parseInt(k[1],10);j=Math.min(j,$.datepicker._getDaysInMonth(y,m));break}k=p.exec(h)}return new Date(y,m,j)},n=(a==null||a===""?b:(typeof a==="string"?g(a):(typeof a==="number"?(isNaN(a)?b:o(a)):new Date(a.getTime()))));n=(n&&n.toString()==="Invalid Date"?b:n);if(n){n.setHours(0);n.setMinutes(0);n.setSeconds(0);n.setMilliseconds(0)}return this._daylightSavingAdjust(n)},_daylightSavingAdjust:function(a){if(!a){return null}a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_setDate:function(i,a,n){var b=!a,o=i.selectedMonth,e=i.selectedYear,g=this._restrictMinMax(i,this._determineDate(i,a,new Date()));i.selectedDay=i.currentDay=g.getDate();i.drawMonth=i.selectedMonth=i.currentMonth=g.getMonth();i.drawYear=i.selectedYear=i.currentYear=g.getFullYear();if((o!==i.selectedMonth||e!==i.selectedYear)&&!n){this._notifyChange(i)}this._adjustInstDate(i);if(i.input){i.input.val(b?"":this._formatDate(i))}},_getDate:function(i){var s=(!i.currentYear||(i.input&&i.input.val()==="")?null:this._daylightSavingAdjust(new Date(i.currentYear,i.currentMonth,i.currentDay)));return s},_attachHandlers:function(i){var s=this._get(i,"stepMonths"),a="#"+i.id.replace(/\\\\/g,"\\");i.dpDiv.find("[data-handler]").map(function(){var h={prev:function(){$.datepicker._adjustDate(a,-s,"M")},next:function(){$.datepicker._adjustDate(a,+s,"M")},hide:function(){$.datepicker._hideDatepicker()},today:function(){$.datepicker._gotoToday(a)},selectDay:function(){$.datepicker._selectDay(a,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return false},selectMonth:function(){$.datepicker._selectMonthYear(a,this,"M");return false},selectYear:function(){$.datepicker._selectMonthYear(a,this,"Y");return false}};$(this).bind(this.getAttribute("data-event"),h[this.getAttribute("data-handler")])})},_generateHTML:function(i){var m,p,a,n,b,e,g,h,j,k,s,l,o,q,r,t,v,w,x,y,z,A,B,C,E,F,G,H,I,J,K,L,M,N,R,O,Q,S,T,U=new Date(),V=this._daylightSavingAdjust(new Date(U.getFullYear(),U.getMonth(),U.getDate())),W=this._get(i,"isRTL"),X=this._get(i,"showButtonPanel"),Y=this._get(i,"hideIfNoPrevNext"),Z=this._get(i,"navigationAsDateFormat"),_=this._getNumberOfMonths(i),a1=this._get(i,"showCurrentAtPos"),b1=this._get(i,"stepMonths"),c1=(_[0]!==1||_[1]!==1),d1=this._daylightSavingAdjust((!i.currentDay?new Date(9999,9,9):new Date(i.currentYear,i.currentMonth,i.currentDay))),e1=this._getMinMaxDate(i,"min"),f1=this._getMinMaxDate(i,"max"),g1=i.drawMonth-a1,h1=i.drawYear;if(g1<0){g1+=12;h1--}if(f1){m=this._daylightSavingAdjust(new Date(f1.getFullYear(),f1.getMonth()-(_[0]*_[1])+1,f1.getDate()));m=(e1&&m<e1?e1:m);while(this._daylightSavingAdjust(new Date(h1,g1,1))>m){g1--;if(g1<0){g1=11;h1--}}}i.drawMonth=g1;i.drawYear=h1;p=this._get(i,"prevText");p=(!Z?p:this.formatDate(p,this._daylightSavingAdjust(new Date(h1,g1-b1,1)),this._getFormatConfig(i)));a=(this._canAdjustMonth(i,-1,h1,g1)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'"+" title='"+p+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+p+"</span></a>":(Y?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+p+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+p+"</span></a>"));n=this._get(i,"nextText");n=(!Z?n:this.formatDate(n,this._daylightSavingAdjust(new Date(h1,g1+b1,1)),this._getFormatConfig(i)));b=(this._canAdjustMonth(i,+1,h1,g1)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'"+" title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+n+"</span></a>":(Y?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+n+"</span></a>"));e=this._get(i,"currentText");g=(this._get(i,"gotoCurrent")&&i.currentDay?d1:V);e=(!Z?e:this.formatDate(e,g,this._getFormatConfig(i)));h=(!i.inline?"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(i,"closeText")+"</button>":"");j=(X)?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(W?h:"")+(this._isInRange(i,g)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'"+">"+e+"</button>":"")+(W?"":h)+"</div>":"";k=parseInt(this._get(i,"firstDay"),10);k=(isNaN(k)?0:k);s=this._get(i,"showWeek");l=this._get(i,"dayNames");o=this._get(i,"dayNamesMin");q=this._get(i,"monthNames");r=this._get(i,"monthNamesShort");t=this._get(i,"beforeShowDay");v=this._get(i,"showOtherMonths");w=this._get(i,"selectOtherMonths");x=this._getDefaultDate(i);y="";z;for(A=0;A<_[0];A++){B="";this.maxRows=4;for(C=0;C<_[1];C++){E=this._daylightSavingAdjust(new Date(h1,g1,i.selectedDay));F=" ui-corner-all";G="";if(c1){G+="<div class='ui-datepicker-group";if(_[1]>1){switch(C){case 0:G+=" ui-datepicker-group-first";F=" ui-corner-"+(W?"right":"left");break;case _[1]-1:G+=" ui-datepicker-group-last";F=" ui-corner-"+(W?"left":"right");break;default:G+=" ui-datepicker-group-middle";F="";break}}G+="'>"}G+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+F+"'>"+(/all|left/.test(F)&&A===0?(W?b:a):"")+(/all|right/.test(F)&&A===0?(W?a:b):"")+this._generateMonthYearHeader(i,g1,h1,e1,f1,A>0||C>0,q,r)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>";H=(s?"<th class='ui-datepicker-week-col'>"+this._get(i,"weekHeader")+"</th>":"");for(z=0;z<7;z++){I=(z+k)%7;H+="<th"+((z+k+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+l[I]+"'>"+o[I]+"</span></th>"}G+=H+"</tr></thead><tbody>";J=this._getDaysInMonth(h1,g1);if(h1===i.selectedYear&&g1===i.selectedMonth){i.selectedDay=Math.min(i.selectedDay,J)}K=(this._getFirstDayOfMonth(h1,g1)-k+7)%7;L=Math.ceil((K+J)/7);M=(c1?this.maxRows>L?this.maxRows:L:L);this.maxRows=M;N=this._daylightSavingAdjust(new Date(h1,g1,1-K));for(R=0;R<M;R++){G+="<tr>";O=(!s?"":"<td class='ui-datepicker-week-col'>"+this._get(i,"calculateWeek")(N)+"</td>");for(z=0;z<7;z++){Q=(t?t.apply((i.input?i.input[0]:null),[N]):[true,""]);S=(N.getMonth()!==g1);T=(S&&!w)||!Q[0]||(e1&&N<e1)||(f1&&N>f1);O+="<td class='"+((z+k+6)%7>=5?" ui-datepicker-week-end":"")+(S?" ui-datepicker-other-month":"")+((N.getTime()===E.getTime()&&g1===i.selectedMonth&&i._keyEvent)||(x.getTime()===N.getTime()&&x.getTime()===E.getTime())?" "+this._dayOverClass:"")+(T?" "+this._unselectableClass+" ui-state-disabled":"")+(S&&!v?"":" "+Q[1]+(N.getTime()===d1.getTime()?" "+this._currentClass:"")+(N.getTime()===V.getTime()?" ui-datepicker-today":""))+"'"+((!S||v)&&Q[2]?" title='"+Q[2].replace(/'/g,"&#39;")+"'":"")+(T?"":" data-handler='selectDay' data-event='click' data-month='"+N.getMonth()+"' data-year='"+N.getFullYear()+"'")+">"+(S&&!v?"&#xa0;":(T?"<span class='ui-state-default'>"+N.getDate()+"</span>":"<a class='ui-state-default"+(N.getTime()===V.getTime()?" ui-state-highlight":"")+(N.getTime()===d1.getTime()?" ui-state-active":"")+(S?" ui-priority-secondary":"")+"' href='#'>"+N.getDate()+"</a>"))+"</td>";N.setDate(N.getDate()+1);N=this._daylightSavingAdjust(N)}G+=O+"</tr>"}g1++;if(g1>11){g1=0;h1++}G+="</tbody></table>"+(c1?"</div>"+((_[0]>0&&C===_[1]-1)?"<div class='ui-datepicker-row-break'></div>":""):"");B+=G}y+=B}y+=j;i._keyEvent=false;return y},_generateMonthYearHeader:function(i,a,b,m,e,s,g,h){var j,k,l,y,t,n,o,p,q=this._get(i,"changeMonth"),r=this._get(i,"changeYear"),v=this._get(i,"showMonthAfterYear"),w="<div class='ui-datepicker-title'>",x="";if(s||!q){x+="<span class='ui-datepicker-month'>"+g[a]+"</span>"}else{j=(m&&m.getFullYear()===b);k=(e&&e.getFullYear()===b);x+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";for(l=0;l<12;l++){if((!j||l>=m.getMonth())&&(!k||l<=e.getMonth())){x+="<option value='"+l+"'"+(l===a?" selected='selected'":"")+">"+h[l]+"</option>"}}x+="</select>"}if(!v){w+=x+(s||!(q&&r)?"&#xa0;":"")}if(!i.yearshtml){i.yearshtml="";if(s||!r){w+="<span class='ui-datepicker-year'>"+b+"</span>"}else{y=this._get(i,"yearRange").split(":");t=new Date().getFullYear();n=function(z){var o=(z.match(/c[+\-].*/)?b+parseInt(z.substring(1),10):(z.match(/[+\-].*/)?t+parseInt(z,10):parseInt(z,10)));return(isNaN(o)?t:o)};o=n(y[0]);p=Math.max(o,n(y[1]||""));o=(m?Math.max(o,m.getFullYear()):o);p=(e?Math.min(p,e.getFullYear()):p);i.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";for(;o<=p;o++){i.yearshtml+="<option value='"+o+"'"+(o===b?" selected='selected'":"")+">"+o+"</option>"}i.yearshtml+="</select>";w+=i.yearshtml;i.yearshtml=null}}w+=this._get(i,"yearSuffix");if(v){w+=(s||!(q&&r)?"&#xa0;":"")+x}w+="</div>";return w},_adjustInstDate:function(i,o,p){var y=i.drawYear+(p==="Y"?o:0),m=i.drawMonth+(p==="M"?o:0),a=Math.min(i.selectedDay,this._getDaysInMonth(y,m))+(p==="D"?o:0),b=this._restrictMinMax(i,this._daylightSavingAdjust(new Date(y,m,a)));i.selectedDay=b.getDate();i.drawMonth=i.selectedMonth=b.getMonth();i.drawYear=i.selectedYear=b.getFullYear();if(p==="M"||p==="Y"){this._notifyChange(i)}},_restrictMinMax:function(i,a){var m=this._getMinMaxDate(i,"min"),b=this._getMinMaxDate(i,"max"),n=(m&&a<m?m:a);return(b&&n>b?b:n)},_notifyChange:function(i){var o=this._get(i,"onChangeMonthYear");if(o){o.apply((i.input?i.input[0]:null),[i.selectedYear,i.selectedMonth+1,i])}},_getNumberOfMonths:function(i){var n=this._get(i,"numberOfMonths");return(n==null?[1,1]:(typeof n==="number"?[1,n]:n))},_getMinMaxDate:function(i,m){return this._determineDate(i,this._get(i,m+"Date"),null)},_getDaysInMonth:function(y,m){return 32-this._daylightSavingAdjust(new Date(y,m,32)).getDate()},_getFirstDayOfMonth:function(y,m){return new Date(y,m,1).getDay()},_canAdjustMonth:function(i,o,a,b){var n=this._getNumberOfMonths(i),e=this._daylightSavingAdjust(new Date(a,b+(o<0?o:n[0]*n[1]),1));if(o<0){e.setDate(this._getDaysInMonth(e.getFullYear(),e.getMonth()))}return this._isInRange(i,e)},_isInRange:function(i,a){var y,b,m=this._getMinMaxDate(i,"min"),e=this._getMinMaxDate(i,"max"),g=null,h=null,j=this._get(i,"yearRange");if(j){y=j.split(":");b=new Date().getFullYear();g=parseInt(y[0],10);h=parseInt(y[1],10);if(y[0].match(/[+\-].*/)){g+=b}if(y[1].match(/[+\-].*/)){h+=b}}return((!m||a.getTime()>=m.getTime())&&(!e||a.getTime()<=e.getTime())&&(!g||a.getFullYear()>=g)&&(!h||a.getFullYear()<=h))},_getFormatConfig:function(i){var s=this._get(i,"shortYearCutoff");s=(typeof s!=="string"?s:new Date().getFullYear()%100+parseInt(s,10));return{shortYearCutoff:s,dayNamesShort:this._get(i,"dayNamesShort"),dayNames:this._get(i,"dayNames"),monthNamesShort:this._get(i,"monthNamesShort"),monthNames:this._get(i,"monthNames")}},_formatDate:function(i,a,m,y){if(!a){i.currentDay=i.selectedDay;i.currentMonth=i.selectedMonth;i.currentYear=i.selectedYear}var b=(a?(typeof a==="object"?a:this._daylightSavingAdjust(new Date(y,m,a))):this._daylightSavingAdjust(new Date(i.currentYear,i.currentMonth,i.currentDay)));return this.formatDate(this._get(i,"dateFormat"),b,this._getFormatConfig(i))}});function d(a){var s="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return a.delegate(s,"mouseout",function(){$(this).removeClass("ui-state-hover");if(this.className.indexOf("ui-datepicker-prev")!==-1){$(this).removeClass("ui-datepicker-prev-hover")}if(this.className.indexOf("ui-datepicker-next")!==-1){$(this).removeClass("ui-datepicker-next-hover")}}).delegate(s,"mouseover",function(){if(!$.datepicker._isDisabledDatepicker(c.inline?a.parent()[0]:c.input[0])){$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");$(this).addClass("ui-state-hover");if(this.className.indexOf("ui-datepicker-prev")!==-1){$(this).addClass("ui-datepicker-prev-hover")}if(this.className.indexOf("ui-datepicker-next")!==-1){$(this).addClass("ui-datepicker-next-hover")}}})}function f(t,p){$.extend(t,p);for(var n in p){if(p[n]==null){t[n]=p[n]}}return t}$.fn.datepicker=function(o){if(!this.length){return this}if(!$.datepicker.initialized){$(document).mousedown($.datepicker._checkExternalClick);$.datepicker.initialized=true}if($("#"+$.datepicker._mainDivId).length===0){$("body").append($.datepicker.dpDiv)}var a=Array.prototype.slice.call(arguments,1);if(typeof o==="string"&&(o==="isDisabled"||o==="getDate"||o==="widget")){return $.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this[0]].concat(a))}if(o==="option"&&arguments.length===2&&typeof arguments[1]==="string"){return $.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this[0]].concat(a))}return this.each(function(){typeof o==="string"?$.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this].concat(a)):$.datepicker._attachDatepicker(this,o)})};$.datepicker=new D();$.datepicker.initialized=false;$.datepicker.uuid=new Date().getTime();$.datepicker.version="1.10.4"})(jQuery);
/*!
 * jQuery UI Position 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */
(function($,u){$.ui=$.ui||{};var c,m=Math.max,a=Math.abs,r=Math.round,b=/left|center|right/,d=/top|center|bottom/,e=/[\+\-]\d+(\.[\d]+)?%?/,f=/^\w+/,g=/%$/,_=$.fn.position;function h(o,w,i){return[parseFloat(o[0])*(g.test(o[0])?w/100:1),parseFloat(o[1])*(g.test(o[1])?i/100:1)]}function p(i,k){return parseInt($.css(i,k),10)||0}function j(i){var k=i[0];if(k.nodeType===9){return{width:i.width(),height:i.height(),offset:{top:0,left:0}}}if($.isWindow(k)){return{width:i.width(),height:i.height(),offset:{top:i.scrollTop(),left:i.scrollLeft()}}}if(k.preventDefault){return{width:0,height:0,offset:{top:k.pageY,left:k.pageX}}}return{width:i.outerWidth(),height:i.outerHeight(),offset:i.offset()}}$.position={scrollbarWidth:function(){if(c!==u){return c}var w,i,k=$("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),l=k.children()[0];$("body").append(k);w=l.offsetWidth;k.css("overflow","scroll");i=l.offsetWidth;if(w===i){i=k[0].clientWidth}k.remove();return(c=w-i)},getScrollInfo:function(w){var o=w.isWindow||w.isDocument?"":w.element.css("overflow-x"),i=w.isWindow||w.isDocument?"":w.element.css("overflow-y"),k=o==="scroll"||(o==="auto"&&w.width<w.element[0].scrollWidth),l=i==="scroll"||(i==="auto"&&w.height<w.element[0].scrollHeight);return{width:l?$.position.scrollbarWidth():0,height:k?$.position.scrollbarWidth():0}},getWithinInfo:function(i){var w=$(i||window),k=$.isWindow(w[0]),l=!!w[0]&&w[0].nodeType===9;return{element:w,isWindow:k,isDocument:l,offset:w.offset()||{left:0,top:0},scrollLeft:w.scrollLeft(),scrollTop:w.scrollTop(),width:k?w.width():w.outerWidth(),height:k?w.height():w.outerHeight()}}};$.fn.position=function(o){if(!o||!o.of){return _.apply(this,arguments)}o=$.extend({},o);var k,t,l,n,q,s,v=$(o.of),w=$.position.getWithinInfo(o.within),x=$.position.getScrollInfo(w),y=(o.collision||"flip").split(" "),z={};s=j(v);if(v[0].preventDefault){o.at="left top"}t=s.width;l=s.height;n=s.offset;q=$.extend({},n);$.each(["my","at"],function(){var i=(o[this]||"").split(" "),A,B;if(i.length===1){i=b.test(i[0])?i.concat(["center"]):d.test(i[0])?["center"].concat(i):["center","center"]}i[0]=b.test(i[0])?i[0]:"center";i[1]=d.test(i[1])?i[1]:"center";A=e.exec(i[0]);B=e.exec(i[1]);z[this]=[A?A[0]:0,B?B[0]:0];o[this]=[f.exec(i[0])[0],f.exec(i[1])[0]]});if(y.length===1){y[1]=y[0]}if(o.at[0]==="right"){q.left+=t}else if(o.at[0]==="center"){q.left+=t/2}if(o.at[1]==="bottom"){q.top+=l}else if(o.at[1]==="center"){q.top+=l/2}k=h(z.at,t,l);q.left+=k[0];q.top+=k[1];return this.each(function(){var A,B,C=$(this),D=C.outerWidth(),E=C.outerHeight(),F=p(this,"marginLeft"),G=p(this,"marginTop"),H=D+F+p(this,"marginRight")+x.width,I=E+G+p(this,"marginBottom")+x.height,J=$.extend({},q),K=h(z.my,C.outerWidth(),C.outerHeight());if(o.my[0]==="right"){J.left-=D}else if(o.my[0]==="center"){J.left-=D/2}if(o.my[1]==="bottom"){J.top-=E}else if(o.my[1]==="center"){J.top-=E/2}J.left+=K[0];J.top+=K[1];if(!$.support.offsetFractions){J.left=r(J.left);J.top=r(J.top)}A={marginLeft:F,marginTop:G};$.each(["left","top"],function(i,L){if($.ui.position[y[i]]){$.ui.position[y[i]][L](J,{targetWidth:t,targetHeight:l,elemWidth:D,elemHeight:E,collisionPosition:A,collisionWidth:H,collisionHeight:I,offset:[k[0]+K[0],k[1]+K[1]],my:o.my,at:o.at,within:w,elem:C})}});if(o.using){B=function(i){var L=n.left-J.left,M=L+t-D,N=n.top-J.top,O=N+l-E,P={target:{element:v,left:n.left,top:n.top,width:t,height:l},element:{element:C,left:J.left,top:J.top,width:D,height:E},horizontal:M<0?"left":L>0?"right":"center",vertical:O<0?"top":N>0?"bottom":"middle"};if(t<D&&a(L+M)<t){P.horizontal="center"}if(l<E&&a(N+O)<l){P.vertical="middle"}if(m(a(L),a(M))>m(a(N),a(O))){P.important="horizontal"}else{P.important="vertical"}o.using.call(this,i,P)}}C.offset($.extend(J,{using:B}))})};$.ui.position={fit:{left:function(i,k){var w=k.within,l=w.isWindow?w.scrollLeft:w.offset.left,o=w.width,n=i.left-k.collisionPosition.marginLeft,q=l-n,s=n+k.collisionWidth-o-l,t;if(k.collisionWidth>o){if(q>0&&s<=0){t=i.left+q+k.collisionWidth-o-l;i.left+=q-t}else if(s>0&&q<=0){i.left=l}else{if(q>s){i.left=l+o-k.collisionWidth}else{i.left=l}}}else if(q>0){i.left+=q}else if(s>0){i.left-=s}else{i.left=m(i.left-n,i.left)}},top:function(i,k){var w=k.within,l=w.isWindow?w.scrollTop:w.offset.top,o=k.within.height,n=i.top-k.collisionPosition.marginTop,q=l-n,s=n+k.collisionHeight-o-l,t;if(k.collisionHeight>o){if(q>0&&s<=0){t=i.top+q+k.collisionHeight-o-l;i.top+=q-t}else if(s>0&&q<=0){i.top=l}else{if(q>s){i.top=l+o-k.collisionHeight}else{i.top=l}}}else if(q>0){i.top+=q}else if(s>0){i.top-=s}else{i.top=m(i.top-n,i.top)}}},flip:{left:function(i,k){var w=k.within,l=w.offset.left+w.scrollLeft,o=w.width,n=w.isWindow?w.scrollLeft:w.offset.left,q=i.left-k.collisionPosition.marginLeft,s=q-n,t=q+k.collisionWidth-o-n,v=k.my[0]==="left"?-k.elemWidth:k.my[0]==="right"?k.elemWidth:0,x=k.at[0]==="left"?k.targetWidth:k.at[0]==="right"?-k.targetWidth:0,y=-2*k.offset[0],z,A;if(s<0){z=i.left+v+x+y+k.collisionWidth-o-l;if(z<0||z<a(s)){i.left+=v+x+y}}else if(t>0){A=i.left-k.collisionPosition.marginLeft+v+x+y-n;if(A>0||a(A)<t){i.left+=v+x+y}}},top:function(i,k){var w=k.within,l=w.offset.top+w.scrollTop,o=w.height,n=w.isWindow?w.scrollTop:w.offset.top,q=i.top-k.collisionPosition.marginTop,s=q-n,t=q+k.collisionHeight-o-n,v=k.my[1]==="top",x=v?-k.elemHeight:k.my[1]==="bottom"?k.elemHeight:0,y=k.at[1]==="top"?k.targetHeight:k.at[1]==="bottom"?-k.targetHeight:0,z=-2*k.offset[1],A,B;if(s<0){B=i.top+x+y+z+k.collisionHeight-o-l;if((i.top+x+y+z)>s&&(B<0||B<a(s))){i.top+=x+y+z}}else if(t>0){A=i.top-k.collisionPosition.marginTop+x+y+z-n;if((i.top+x+y+z)>t&&(A>0||a(A)<t)){i.top+=x+y+z}}}},flipfit:{left:function(){$.ui.position.flip.left.apply(this,arguments);$.ui.position.fit.left.apply(this,arguments)},top:function(){$.ui.position.flip.top.apply(this,arguments);$.ui.position.fit.top.apply(this,arguments)}}};(function(){var t,k,l,o,i,n=document.getElementsByTagName("body")[0],q=document.createElement("div");t=document.createElement(n?"div":"body");l={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};if(n){$.extend(l,{position:"absolute",left:"-1000px",top:"-1000px"})}for(i in l){t.style[i]=l[i]}t.appendChild(q);k=n||document.documentElement;k.insertBefore(t,k.firstChild);q.style.cssText="position: absolute; left: 10.7432222px;";o=$(q).offset().left;$.support.offsetFractions=o>10&&o<11;t.innerHTML="";k.removeChild(t)})()}(jQuery));
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
(function(q){"use strict";var P=function(A){if(typeof(A)!="function"){throw new TypeError("Argument is not a function")}this._deferred=new q.Deferred();try{var t=this;A(function(v){b(t,v,true)},function(v){b(t,v,false)})}catch(e){b(this,e,false)}};P.prototype.then=function(o,O){var f=new P(_);this._deferred.then(d(o,f,true),d(O,f,false));return f};P.prototype["catch"]=function(o){return this.then(undefined,o)};P.all=function(p){return new P(function(r,R){if(!q.isArray(p)){R({});return}if(p.length==0){r([]);return}var f=false,v=new Array(p.length),C=0;function e(I){P.resolve(p[I]).then(function(o){if(!f){C++;v[I]=o;if(C==p.length){r(v)}}},function(o){if(!f){f=true;R(o)}})};for(var i=0;i<p.length;i++){e(i)}})};P.race=function(p){return new P(function(r,R){if(!q.isArray(p)){R({})}var f=false;for(var i=0;i<p.length;i++){P.resolve(p[i]).then(function(o){if(!f){f=true;r(o)}},function(o){if(!f){f=true;R(o)}})}})};P.resolve=function(o){return o instanceof P?o:c(new P(_),o)};P.reject=function(o){return b(new P(_),o,false)};function _(){};function a(o){return o&&o.then&&typeof(o.then)=="function"};function b(p,o,r){setTimeout(function(){if(a(o)&&r){c(p,o)}else{p._deferred[r?"resolve":"reject"](o)}},0);return p};function c(p,o){if(a(o)){var f=false;try{o.then(function(v){b(p,v,true);f=true},function(v){b(p,v,false);f=true})}catch(e){if(!f){b(p,e,false)}else{q.sap.log.debug("Promise: Error in then: "+e)}}}else{b(p,o,true)}return p};function d(A,p,r){return function(o){if(!A){b(p,o,r)}else{try{c(p,A(o))}catch(e){b(p,e,false)}}}};if(!window.Promise){window.Promise=P}if(window.sap&&window.sap.__ui5PublishPromisePolyfill){window._UI5Promise=P}})(jQuery);
/*
* jQuery Mobile v1.3.1
* http://jquerymobile.com
*
* Copyright 2010, 2013 jQuery Foundation, Inc. and other contributors
* Released under the MIT license.
* http://jquery.org/license
*
*/
(function(r,d,f){if(typeof define==="function"&&define.amd){define(["jquery"],function($){f($,r,d);return $.mobile})}else{f(r.jQuery,r,d)}}(this,document,function(Q,d,f,u){
// About: License
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
(function($,d,u){var s='hashchange',a=f,b,c=$.event.special,g=a.documentMode,h='on'+s in d&&(g===u||g>7);function i(e){e=e||location.href;return'#'+e.replace(/^[^#]*#?(.*)$/,'$1')};$.fn[s]=function(e){return e?this.bind(s,e):this.trigger(s)};$.fn[s].delay=50;c[s]=$.extend(c[s],{setup:function(){if(h){return false}$(b.start)},teardown:function(){if(h){return false}$(b.stop)}});b=(function(){var j={},t,l=i(),k=function(v){return v},m=k,n=k;j.start=function(){t||p()};j.stop=function(){t&&clearTimeout(t);t=u};function p(){var e=i(),o=n(l);if(e!==l){m(l=e,o);$(d).trigger(s)}else if(o!==l){location.href=location.href.replace(/#.*/,'')+o}t=setTimeout(p,$.fn[s].delay)};d.attachEvent&&!d.addEventListener&&!h&&(function(){var o,q;j.start=function(){if(!o){q=$.fn[s].src;q=q&&q+i();o=$('<iframe tabindex="-1" title="empty"/>').hide().one('load',function(){q||m(i());p()}).attr('src',q||'javascript:0').insertAfter('body')[0].contentWindow;a.onpropertychange=function(){try{if(event.propertyName==='title'){o.document.title=a.title}}catch(e){}}}};j.stop=k;n=function(){return i(o.location.href)};m=function(e,r){var v=o.document,w=$.fn[s].domain;if(e!==r){v.title=a.title;v.open();w&&v.write('<script>document.domain="'+w+'"</script>');v.close();o.location.hash=e}}})();return j})()})(Q,this);(function($){$.mobile={};Q.mobile.orientationChangeEnabled=true}(Q));(function($,d,u){var n={};$.mobile=$.extend($.mobile,{version:"1.3.1",ns:"",subPageUrlKey:"ui-page",activePageClass:"ui-page-active",activeBtnClass:"ui-btn-active",focusClass:"ui-focus",ajaxEnabled:true,hashListeningEnabled:true,linkBindingEnabled:true,defaultPageTransition:"fade",maxTransitionWidth:false,minScrollBack:250,touchOverflowEnabled:false,defaultDialogTransition:"pop",pageLoadErrorMessage:"Error Loading Page",pageLoadErrorMessageTheme:"e",phonegapNavigationEnabled:false,autoInitializePage:true,pushStateEnabled:true,ignoreContentEnabled:false,orientationChangeEnabled:true,buttonMarkup:{hoverDelay:200},window:$(d),document:$(f),keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91},behaviors:{},silentScroll:function(y){if($.type(y)!=="number"){y=$.mobile.defaultHomeScroll}$.event.special.scrollstart.enabled=false;setTimeout(function(){d.scrollTo(0,y);$.mobile.document.trigger("silentscroll",{x:0,y:y})},20);setTimeout(function(){$.event.special.scrollstart.enabled=true},150)},nsNormalizeDict:n,nsNormalize:function(p){if(!p){return}return n[p]||(n[p]=$.camelCase($.mobile.ns+p))},getInheritedTheme:function(a,b){var e=a[0],l="",r=/ui-(bar|body|overlay)-([a-z])\b/,c,m;while(e){c=e.className||"";if(c&&(m=r.exec(c))&&(l=m[2])){break}e=e.parentNode}return l||b||"a"},closestPageData:function(a){return a.closest(':jqmData(role="page"), :jqmData(role="dialog")').data("mobile-page")},enhanceable:function(a){return this.haveParents(a,"enhance")},hijackable:function(a){return this.haveParents(a,"ajax")},haveParents:function(a,b){if(!$.mobile.ignoreContentEnabled){return a}var g=a.length,h=$(),e,k,l;for(var i=0;i<g;i++){k=a.eq(i);l=false;e=a[i];while(e){var c=e.getAttribute?e.getAttribute("data-"+$.mobile.ns+b):"";if(c==="false"){l=true;break}e=e.parentNode}if(!l){h=h.add(k)}}return h},getScreenHeight:function(){return d.innerHeight||$.mobile.window.height()}},$.mobile);$.fn.jqmData=function(p,v){var r;if(typeof p!=="undefined"){if(p){p=$.mobile.nsNormalize(p)}if(arguments.length<2||v===u){r=this.data(p)}else{r=this.data(p,v)}}return r};$.jqmData=function(e,p,v){var r;if(typeof p!=="undefined"){r=$.data(e,p?$.mobile.nsNormalize(p):p,v)}return r};$.fn.jqmRemoveData=function(p){return this.removeData($.mobile.nsNormalize(p))};$.jqmRemoveData=function(e,p){return $.removeData(e,$.mobile.nsNormalize(p))};$.fn.removeWithDependents=function(){$.removeWithDependents(this)};$.removeWithDependents=function(e){var a=$(e);(a.jqmData('dependents')||$()).remove();a.remove()};$.fn.addDependents=function(a){$.addDependents($(this),a)};$.addDependents=function(e,a){var b=$(e).jqmData('dependents')||$();$(e).jqmData('dependents',$.merge(b,a))};$.fn.getEncodedText=function(){return $("<div/>").text($(this).text()).html()};$.fn.jqmEnhanceable=function(){return $.mobile.enhanceable(this)};$.fn.jqmHijackable=function(){return $.mobile.hijackable(this)};var o=$.find,j=/:jqmData\(([^)]*)\)/g;$.find=function(s,c,r,e){s=s.replace(j,"[data-"+($.mobile.ns||"")+"$1]");return o.call(this,s,c,r,e)};$.extend($.find,o);$.find.matches=function(e,s){return $.find(e,null,null,s)};$.find.matchesSelector=function(a,e){return $.find(e,null,null,[a]).length>0}})(Q,this);(function($,u){
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */
d.matchMedia=d.matchMedia||(function(a,u){var b,c=a.documentElement,r=c.firstElementChild||c.firstChild,e=a.createElement("body"),g=a.createElement("div");g.id="mq-test-1";g.style.cssText="position:absolute;top:-100em";e.style.background="none";e.appendChild(g);return function(q){g.innerHTML="&shy;<style media=\""+q+"\"> #mq-test-1 { width: 42px; }</style>";c.insertBefore(e,r);b=g.offsetWidth===42;c.removeChild(e);return{matches:b,media:q}}}(f));$.mobile.media=function(q){return d.matchMedia(q).matches}})(Q);(function($,u){var s={touch:"ontouchend"in f};$.mobile.support=$.mobile.support||{};$.extend($.support,s);$.extend($.mobile.support,s)}(Q));(function($,u){$.extend($.support,{orientation:"orientation"in d&&"onorientationchange"in d})}(Q));(function($,u){function p(a){var i=a.charAt(0).toUpperCase()+a.substr(1),t=(a+" "+e.join(i+" ")+i).split(" ");for(var v in t){if(c[t[v]]!==u){return true}}}var b=$("<body>").prependTo("html"),c=b[0].style,e=["Webkit","Moz","O"],g="palmGetResource"in d,o=d.opera,h=d.operamini&&({}).toString.call(d.operamini)==="[object OperaMini]",j=d.blackberry&&!p("-webkit-transform");function k(a,v,t){var w=f.createElement('div'),x=function(C){return C.charAt(0).toUpperCase()+C.substr(1)},y=function(C){if(C===""){return""}else{return"-"+C.charAt(0).toLowerCase()+C.substr(1)+"-"}},z=function(C){var D=y(C)+a+": "+v+";",E=x(C),F=E+(E===""?a:x(a));w.setAttribute("style",D);if(!!w.style[F]){B=true}},A=t?t:e,B;for(var i=0;i<A.length;i++){z(A[i])}return!!B}function l(){var a="transform-3d",i=$.mobile.media("(-"+e.join("-"+a+"),(-")+"-"+a+"),("+a+")");if(i){return!!i}var v=f.createElement("div"),w={'MozTransform':'-moz-transform','transform':'transform'};b.append(v);for(var t in w){if(v.style[t]!==u){v.style[t]='translate3d( 100px, 1px, 1px )';i=d.getComputedStyle(v).getPropertyValue(w[t])}}return(!!i&&i!=="none")}function m(){var a=location.protocol+"//"+location.host+location.pathname+"ui-dir/",i=$("head base"),t=null,v="",w,x;if(!i.length){i=t=$("<base>",{"href":a}).appendTo("head")}else{v=i.attr("href")}w=$("<a href='testurl' />").prependTo(b);x=w[0].href;i[0].href=v||location.pathname;if(t){t.remove()}return x.indexOf(a)===0}function n(){var a=f.createElement('x'),i=f.documentElement,t=d.getComputedStyle,v;if(!('pointerEvents'in a.style)){return false}a.style.pointerEvents='auto';a.style.pointerEvents='x';i.appendChild(a);v=t&&t(a,'').pointerEvents==='auto';i.removeChild(a);return!!v}function q(){var a=f.createElement("div");return typeof a.getBoundingClientRect!=="undefined"}$.extend($.mobile,{browser:{}});$.mobile.browser.oldIE=(function(){var v=3,i=f.createElement("div"),a=i.all||[];do{i.innerHTML="<!--[if gt IE "+(++v)+"]><br><![endif]-->"}while(a[0]);return v>4?v:!v})();function r(){var w=d,a=navigator.userAgent,i=navigator.platform,t=a.match(/AppleWebKit\/([0-9]+)/),v=!!t&&t[1],x=a.match(/Fennec\/([0-9]+)/),y=!!x&&x[1],z=a.match(/Opera Mobi\/([0-9]+)/),A=!!z&&z[1];if(((i.indexOf("iPhone")>-1||i.indexOf("iPad")>-1||i.indexOf("iPod")>-1)&&v&&v<534)||(w.operamini&&({}).toString.call(w.operamini)==="[object OperaMini]")||(z&&A<7458)||(a.indexOf("Android")>-1&&v&&v<533)||(y&&y<6)||("palmGetResource"in d&&v&&v<534)||(a.indexOf("MeeGo")>-1&&a.indexOf("NokiaBrowser/8.5.0")>-1)){return false}return true}$.extend($.support,{cssTransitions:"WebKitTransitionEvent"in d||k('transition','height 100ms linear',["Webkit","Moz",""])&&!$.mobile.browser.oldIE&&!o,pushState:"pushState"in history&&"replaceState"in history&&!(d.navigator.userAgent.indexOf("Firefox")>=0&&d.top!==d)&&(d.navigator.userAgent.search(/CriOS/)===-1),mediaquery:$.mobile.media("only all"),cssPseudoElement:!!p("content"),touchOverflow:!!p("overflowScrolling"),cssTransform3d:l(),boxShadow:!!p("boxShadow")&&!j,fixedPosition:r(),scrollTop:("pageXOffset"in d||"scrollTop"in f.documentElement||"scrollTop"in b[0])&&!g&&!h,dynamicBaseTag:m(),cssPointerEvents:n(),boundingRect:q()});b.remove();var s=(function(){var a=d.navigator.userAgent;return a.indexOf("Nokia")>-1&&(a.indexOf("Symbian/3")>-1||a.indexOf("Series60/5")>-1)&&a.indexOf("AppleWebKit")>-1&&a.match(/(BrowserNG|NokiaBrowser)\/7\.[0-3]/)})();$.mobile.gradeA=function(){return($.support.mediaquery||$.mobile.browser.oldIE&&$.mobile.browser.oldIE>=7)&&($.support.boundingRect||$.fn.jquery.match(/1\.[0-7+]\.[0-9+]?/)!==null)};$.mobile.ajaxBlacklist=d.blackberry&&!d.WebKitPoint||h||s;if(s){$(function(){$("head link[rel='stylesheet']").attr("rel","alternate stylesheet").attr("rel","stylesheet")})}if(!$.support.boxShadow){$("html").addClass("ui-mobile-nosupport-boxshadow")}})(Q);(function($,u){var a=$.mobile.window,s,h;$.event.special.navigate=s={bound:false,pushStateEnabled:true,originalEventName:u,isPushStateEnabled:function(){return $.support.pushState&&$.mobile.pushStateEnabled===true&&this.isHashChangeEnabled()},isHashChangeEnabled:function(){return $.mobile.hashListeningEnabled===true},popstate:function(e){var n=new $.Event("navigate"),b=new $.Event("beforenavigate"),c=e.originalEvent.state||{},g=location.href;a.trigger(b);if(b.isDefaultPrevented()){return}if(e.historyState){$.extend(c,e.historyState)}n.originalEvent=e;setTimeout(function(){a.trigger(n,{state:c})},0)},hashchange:function(e,b){var n=new $.Event("navigate"),c=new $.Event("beforenavigate");a.trigger(c);if(c.isDefaultPrevented()){return}n.originalEvent=e;a.trigger(n,{state:e.hashchangeState||{}})},setup:function(b,n){if(s.bound){return}s.bound=true;if(s.isPushStateEnabled()){s.originalEventName="popstate";a.bind("popstate.navigate",s.popstate)}else if(s.isHashChangeEnabled()){s.originalEventName="hashchange";a.bind("hashchange.navigate",s.hashchange)}}}})(Q);(function($){$.event.special.throttledresize={setup:function(){$(this).bind("resize",h)},teardown:function(){$(this).unbind("resize",h)}};var t=250,h=function(){c=(new Date()).getTime();b=c-l;if(b>=t){l=c;$(this).trigger("throttledresize")}else{if(a){clearTimeout(a)}a=setTimeout(h,t-b)}},l=0,a,c,b})(Q);(function($,d){var w=$(d),e="orientationchange",s,g,l,i,a,p={"0":true,"180":true};if($.support.orientation){var b=d.innerWidth||w.width(),c=d.innerHeight||w.height(),h=50;i=b>c&&(b-c)>h;a=p[d.orientation];if((i&&a)||(!i&&!a)){p={"-90":true,"90":true}}}$.event.special.orientationchange=$.extend({},$.event.special.orientationchange,{setup:function(){if($.support.orientation&&!$.event.special.orientationchange.disabled){return false}l=g();w.bind("throttledresize",j)},teardown:function(){if($.support.orientation&&!$.event.special.orientationchange.disabled){return false}w.unbind("throttledresize",j)},add:function(k){var o=k.handler;k.handler=function(m){m.orientation=g();return o.apply(this,arguments)}}});function j(){var o=g();if(o!==l){l=o;w.trigger(e)}}$.event.special.orientationchange.orientation=g=function(){var k=true,m=f.documentElement;if($.support.orientation){k=p[d.orientation]}else{k=m&&m.clientWidth/m.clientHeight<1.1}return k?"portrait":"landscape"};$.fn[e]=function(k){return k?this.bind(e,k):this.trigger(e)};if($.attrFn){$.attrFn[e]=true}}(Q,this));(function($,d,f,u){var a="virtualMouseBindings",c="virtualTouchID",v="vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" "),g="clientX clientY pageX pageY screenX screenY".split(" "),m=$.event.mouseHooks?$.event.mouseHooks.props:[],h=$.event.props.concat(m),l={},r=0,s=0,n=0,p=false,q=[],w=false,z=false,A="addEventListener"in f,B=$(f),C=1,D=0,E;$.vmouse={moveDistanceThreshold:10,clickDistanceThreshold:10,resetTimerDuration:1500};function F(e){while(e&&typeof e.originalEvent!=="undefined"){e=e.originalEvent}return e}function G(e,b){var t=e.type,o,k,x,y,_,a1,i,j,b1;e=$.Event(e);e.type=b;o=e.originalEvent;k=$.event.props;if(t.search(/^(mouse|click)/)>-1){k=h}if(o){for(i=k.length,y;i;){y=k[--i];e[y]=o[y]}}if(t.search(/mouse(down|up)|click/)>-1&&!e.which){e.which=1}if(t.search(/^touch/)!==-1){x=F(o);t=x.touches;_=x.changedTouches;a1=(t&&t.length)?t[0]:((_&&_.length)?_[0]:u);if(a1){for(j=0,b1=g.length;j<b1;j++){y=g[j];e[y]=a1[y]}}}return e}function H(e){var j={},b,k;while(e){b=$.data(e,a);for(k in b){if(b[k]){j[k]=j.hasVirtualBinding=true}}e=e.parentNode}return j}function I(e,j){var b;while(e){b=$.data(e,a);if(b&&(!j||b[j])){return e}e=e.parentNode}return null}function J(){z=false}function K(){z=true}function L(){D=0;q.length=0;w=false;K()}function M(){J()}function N(){O();r=setTimeout(function(){r=0;L()},$.vmouse.resetTimerDuration)}function O(){if(r){clearTimeout(r);r=0}}function P(e,b,j){var k;if((j&&j[e])||(!j&&I(b.target,e))){k=G(b,e);$(b.target).trigger(k)}return k}function R(e){var t=$.data(e.target,c);if(!w&&(!D||D!==t)){var b=P("v"+e.type,e);if(b){if(b.isDefaultPrevented()){e.preventDefault()}if(b.isPropagationStopped()){e.stopPropagation()}if(b.isImmediatePropagationStopped()){e.stopImmediatePropagation()}}}}function S(e){var b=F(e).touches,j,k;if(b&&b.length===1){j=e.target;k=H(j);if(k.hasVirtualBinding){D=C++;$.data(j,c,D);O();M();p=false;var t=F(e).touches[0];s=t.pageX;n=t.pageY;P("vmouseover",e,k);P("vmousedown",e,k)}}}function T(e){if(z){return}if(!p){P("vmousecancel",e,H(e.target))}p=true;N()}function U(e){if(z){return}var t=F(e).touches[0],b=p,j=$.vmouse.moveDistanceThreshold,k=H(e.target);p=p||(Math.abs(t.pageX-s)>j||Math.abs(t.pageY-n)>j);if(p&&!b){P("vmousecancel",e,k)}P("vmousemove",e,k);N()}function V(e){if(z){return}K();var b=H(e.target),t;P("vmouseup",e,b);if(!p){var j=P("vclick",e,b);if(j&&$.support.touch){t=F(e).changedTouches[0];q.push({touchID:D,x:t.clientX,y:t.clientY,target:e.target});w=true}}P("vmouseout",e,b);p=false;N()}function W(e){var b=$.data(e,a),k;if(b){for(k in b){if(b[k]){return true}}}return false}function X(){}function Y(e){var b=e.substr(1);return{setup:function(j,k){if(!W(this)){$.data(this,a,{})}var o=$.data(this,a);o[e]=true;l[e]=(l[e]||0)+1;if(l[e]===1){B.bind(b,R)}$(this).bind(b,X);if(A){l["touchstart"]=(l["touchstart"]||0)+1;if(l["touchstart"]===1){B.bind("touchstart",S).bind("touchend",V).bind("touchmove",U)}}},teardown:function(j,k){--l[e];if(!l[e]){B.unbind(b,R)}if(A){--l["touchstart"];if(!l["touchstart"]){B.unbind("touchstart",S).unbind("touchmove",U).unbind("touchend",V).unbind("scroll",T)}}var o=$(this),t=$.data(this,a);if(t){t[e]=false}o.unbind(b,X);if(!W(this)){o.removeData(a)}}}}for(var i=0;i<v.length;i++){$.event.special[v[i]]=Y(v[i])}if(A){function Z(e){var b=q.length,t=e.target,x,y,j,i,o,k;if(b){x=e.clientX;y=e.clientY;E=$.vmouse.clickDistanceThreshold;j=t;while(j){for(i=0;i<b;i++){o=q[i];k=0;if((j===t&&Math.abs(o.x-x)<E&&Math.abs(o.y-y)<E)||$.data(j,c)===o.touchID){if(!e.isSynthetic){e._sapui_delayedMouseEvent=true}if(t===o.target){return}e.preventDefault();e.stopPropagation();return}}j=j.parentNode}}};f.addEventListener("mousedown",Z,true);f.addEventListener("mouseup",Z,true);f.addEventListener("click",Z,true)}})(Q,d,f);(function($,d,u){var a=$(f);$.each(("touchstart touchmove touchend "+"tap taphold "+"swipe swipeleft swiperight "+"scrollstart scrollstop").split(" "),function(i,n){$.fn[n]=function(h){return h?this.bind(n,h):this.trigger(n)};if($.attrFn){$.attrFn[n]=true}});var s=$.mobile.support.touch,b="touchmove scroll",t=s?"touchstart":"mousedown",c=s?"touchend touchcancel":"mouseup",e=s?"touchmove":"mousemove";function g(o,h,i){var j=i.type;i.type=h;$.event.dispatch.call(o,i);i.type=j}$.event.special.scrollstart={enabled:true,setup:function(){var h=this,i=$(h),j,k;function l(m,n){j=n;g(h,j?"scrollstart":"scrollstop",m)}i.bind(b,function(m){if(!$.event.special.scrollstart.enabled){return}if(!j){l(m,true)}clearTimeout(k);k=setTimeout(function(){l(m,false)},50)})}};$.event.special.tap={tapholdThreshold:750,setup:function(){var h=this,i=$(h);i.bind("vmousedown",function(j){if(j.which&&j.which!==1){return false}var o=j.target,k=j.originalEvent,l;function m(){clearTimeout(l)}function n(){m();i.unbind("vclick",p).unbind("vmouseup",m);a.unbind("vmousecancel",n)}function p(j){n();if(o===j.target){g(h,"tap",j)}}i.bind("vmouseup",m).bind("vclick",p);a.bind("vmousecancel",n);l=setTimeout(function(){g(h,"taphold",$.Event("taphold",{target:o}))},$.event.special.tap.tapholdThreshold)})}};$.event.special.swipe={scrollSupressionThreshold:30,durationThreshold:1000,horizontalDistanceThreshold:30,verticalDistanceThreshold:75,start:function(h){var i=h.originalEvent.touches?h.originalEvent.touches[0]:h;return{time:(new Date()).getTime(),coords:[i.pageX,i.pageY],origin:$(h.target)}},stop:function(h){var i=h.originalEvent.touches?h.originalEvent.touches[0]:h;return{time:(new Date()).getTime(),coords:[i.pageX,i.pageY]}},handleSwipe:function(h,i){if(i.time-h.time<$.event.special.swipe.durationThreshold&&Math.abs(h.coords[0]-i.coords[0])>$.event.special.swipe.horizontalDistanceThreshold&&Math.abs(h.coords[1]-i.coords[1])<$.event.special.swipe.verticalDistanceThreshold){h.origin.trigger("swipe").trigger(h.coords[0]>i.coords[0]?"swipeleft":"swiperight")}},setup:function(){var h=this,i=$(h);i.bind(t,function(j){if(j.isMarked("swipestartHandled")){return}j.setMarked("swipestartHandled");var k=$.event.special.swipe.start(j),l;function m(j){if(!k){return}l=$.event.special.swipe.stop(j);if(!sap.ui.Device.system.desktop||sap.ui.Device.browser.name!=="cr"){if(Math.abs(k.coords[0]-l.coords[0])>$.event.special.swipe.scrollSupressionThreshold){j.preventDefault()}}}function n(j){i.unbind(e,m).unbind(c,n);if(k&&l){$.event.special.swipe.handleSwipe(k,l)}k=l=u}i.bind(e,m).bind(c,n)})}};$.each({scrollstop:"scrollstart",taphold:"tap",swipeleft:"swipe",swiperight:"swipe"},function(h,i){$.event.special[h]={setup:function(){$(this).bind(i,$.noop)}}})})(Q,this)}));
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
(function(){if(!window.jQuery){throw new Error("SAPUI5 requires jQuery as a prerequisite (>= version 1.7)")}if(jQuery.sap){return}var _=window;var a=[];function b(l,m){a.push({level:l,message:m})}var c=undefined;var r=/^[0-9]+(?:\.([0-9]+)(?:\.([0-9]+))?)?(.*)$/;function V(M,i,d,s){if(M instanceof V){return M}if(!(this instanceof V)){return new V(M,i,d,s)}var m=(typeof M==="string"?r.exec(M):(jQuery.isArray(M)?M:arguments))||[];function n(v){v=parseInt(v,10);return isNaN(v)?0:v}M=n(m[0]);i=n(m[1]);d=n(m[2]);s=String(m[3]||"");this.toString=function(){return M+"."+i+"."+d+s};this.getMajor=function(){return M};this.getMinor=function(){return i};this.getPatch=function(){return d};this.getSuffix=function(){return s};this.compareTo=function(){var o=V.apply(window,arguments);return M-o.getMajor()||i-o.getMinor()||d-o.getPatch()||((s<o.getSuffix())?-1:(s===o.getSuffix())?0:1)}}V.prototype.inRange=function(m,M){return this.compareTo(m)>=0&&this.compareTo(M)<0};var j=V(jQuery.fn.jquery);if(!j.inRange("1.7.0","2.0.0")){b("error","SAPUI5 requires a jQuery version of 1.7 or higher, but lower than 2.0; current version is "+jQuery.fn.jquery)}if(!jQuery.browser){jQuery.browser=(function(u){var d=/(webkit)[ \/]([\w.]+)/,i=/(opera)(?:.*version)?[ \/]([\w.]+)/,l=/(msie) ([\w.]+)/,m=/(mozilla)(?:.*? rv:([\w.]+))?/,u=u.toLowerCase(),n=d.exec(u)||i.exec(u)||l.exec(u)||u.indexOf("compatible")<0&&m.exec(u)||[],o={};if(n[1]){o[n[1]]=true;o.version=n[2]||"0";if(o.webkit){o.safari=true}}return o}(window.navigator.userAgent))}if(!!sap.ui.Device.browser.internet_explorer){jQuery.support.cors=true}var f=(function(){var t,u,R,d=/^(.*\/)?download\/configurator[\/\?]/,i=/^(.*\/)?(sap-ui-(core|custom|boot|merged)(-.*)?)\.js([?#]|$)/,l=/^(.*\/)?resources\//;jQuery("script[src]").each(function(){var s=this.getAttribute("src"),m;if(m=s.match(d)){t=this;u=s;R=(m[1]||"")+"resources/";return false}else if(m=s.match(i)){t=this;u=s;R=m[1]||"";return false}else if(this.id=='sap-ui-bootstrap'&&(m=s.match(l))){t=this;u=s;R=m[0];return false}});return{tag:t,url:u,resourceRoot:R}})();(function(){if(/sap-bootstrap-debug=(true|x|X)/.test(location.search)){window["sap-ui-bRestart"]=false;window["sap-ui-sRestartUrl"]="http://localhost:8080/sapui5/resources/sap-ui-core.js";var d=function(){var s=f.tag,l="<script src=\""+window["sap-ui-sRestartUrl"]+"\"";jQuery.each(s.attributes,function(i,A){if(A.nodeName.indexOf("data-sap-ui-")==0){l+=" "+A.nodeName+"=\""+A.nodeValue+"\""}});l+="></script>";s.parentNode.removeChild(s);jQuery("#sap-ui-bootstrap-cachebusted").remove();window["sap-ui-config"]&&window["sap-ui-config"].resourceRoots&&(window["sap-ui-config"].resourceRoots[""]=undefined);document.write(l);var R=new Error("Aborting UI5 bootstrap and restarting from: "+window["sap-ui-sRestartUrl"]);R.name="Restart";delete window["sap-ui-bRestart"];delete window["sap-ui-sRestartUrl"];throw R};debugger;if(window["sap-ui-bRestart"]){d()}}})();(function(){var d=/sap-ui-debug=(true|x|X)/.test(location.search),i=window["sap-ui-optimized"];try{d=d||(window.localStorage.getItem("sap-ui-debug")=="X")}catch(e){}window["sap-ui-debug"]=d;if(/-dbg\.js([?#]|$)/.test(f.url)){window["sap-ui-loaddbg"]=true;window["sap-ui-debug"]=true}if(i&&d){var D=f.url.replace(/\/(?:sap-ui-cachebuster\/)?([^\/]+)\.js/,"/$1-dbg.js");window["sap-ui-optimized"]=false;window["sap-ui-loaddbg"]=true;document.write("<script type=\"text/javascript\" src=\""+D+"\"></script>");var R=new Error("Aborting UI5 bootstrap and restarting from: "+D);R.name="Restart";throw R}})();var C=_["sap-ui-config"]=(function(){function n(o){jQuery.each(o,function(i,v){var m=i.toLowerCase();if(!o.hasOwnProperty(m)){o[m]=v;delete o[i]}});return o}var s=f.tag,d=_["sap-ui-config"],l="sap-ui-config.json";if(typeof d==="string"){b("warning","Loading external bootstrap configuration from \""+d+"\". This is a design time feature and not for productive usage!");if(d!==l){b("warning","The external bootstrap configuration file should be named \""+l+"\"!")}jQuery.ajax({url:d,dataType:'json',async:false,success:function(D,T,i){d=D},error:function(i,T,o){b("error","Loading externalized bootstrap configuration from \""+d+"\" failed! Reason: "+o+"!");d=undefined}})}d=n(d||{});d.resourceroots=d.resourceroots||{};d.themeroots=d.themeroots||{};d.resourceroots['']=d.resourceroots['']||f.resourceRoot;d['xx-loadallmode']=/(^|\/)(sap-?ui5|[^\/]+-all).js([?#]|$)/.test(f.url);if(s){var t=s.getAttribute("data-sap-ui-config");if(t){try{jQuery.extend(d,n((new Function("return {"+t+"};"))()))}catch(e){b("error","failed to parse data-sap-ui-config attribute: "+(e.message||e))}}jQuery.each(s.attributes,function(i,o){var m=o.name.match(/^data-sap-ui-(.*)$/);if(m){m=m[1].toLowerCase();if(m==='resourceroots'){jQuery.extend(d[m],jQuery.parseJSON(o.value))}else if(m==='theme-roots'){jQuery.extend(d.themeroots,jQuery.parseJSON(o.value))}else if(m!=='config'){d[m]=o.value}}})}return d}());if(C.noconflict===true||C.noconflict==="true"||C.noconflict==="x"){jQuery.noConflict()}jQuery.sap={};jQuery.sap.Version=V;jQuery.sap.debug=function(d){if(!window.localStorage){return null}function i(u){alert("Usage of debug sources is "+(u?"on":"off")+" now.\nFor the change to take effect, you need to reload the page.")};if(d===true){window.localStorage.setItem("sap-ui-debug","X");i(true)}else if(d===false){window.localStorage.removeItem("sap-ui-debug");i(false)}return window.localStorage.getItem("sap-ui-debug")=="X"};jQuery.sap.statistics=function(d){if(!window.localStorage){return null}function i(u){alert("Usage of Gateway statistics "+(u?"on":"off")+" now.\nFor the change to take effect, you need to reload the page.")};if(d===true){window.localStorage.setItem("sap-ui-statistics","X");i(true)}else if(d===false){window.localStorage.removeItem("sap-ui-statistics");i(false)}return window.localStorage.getItem("sap-ui-statistics")=="X"};(function(){var F=0,d=1,W=2,I=3,D=4,T=5,s=(window.top==window)?"":"["+window.location.pathname.split('/').slice(-1)[0]+"] ",l=[],M={'':d},L=null;function n(i,w){return("000"+String(i)).slice(-w)}function o(i){return(!i||isNaN(M[i]))?M['']:M[i]}function t(){if(!L){L={listeners:[],onLogEntry:function(m){for(var i=0;i<L.listeners.length;i++){if(L.listeners[i].onLogEntry){L.listeners[i].onLogEntry(m)}}},attach:function(i,m){if(m){L.listeners.push(m);if(m.onAttachToLog){m.onAttachToLog(i)}}},detach:function(m,v){for(var i=0;i<L.listeners.length;i++){if(L.listeners[i]===v){if(v.onDetachFromLog){v.onDetachFromLog(m)}L.listeners.splice(i,1);return}}}}}return L}function u(i,m,v,w){if(i<=o(w)){var N=new Date(),y={time:n(N.getHours(),2)+":"+n(N.getMinutes(),2)+":"+n(N.getSeconds(),2),date:n(N.getFullYear(),4)+"-"+n(N.getMonth()+1,2)+"-"+n(N.getDate(),2),timestamp:N.getTime(),level:i,message:String(m||""),details:String(v||""),component:String(w||"")};l.push(y);if(L){L.onLogEntry(y)}if(window.console){var z=y.date+" "+y.time+" "+s+y.message+" - "+y.details+" "+y.component;switch(i){case F:case d:console.error(z);break;case W:console.warn(z);break;case I:console.info?console.info(z):console.log(z);break;case D:console.debug?console.debug(z):console.log(z);break;case T:console.trace?console.trace(z):console.log(z);break}}return y}}function x(i){this.fatal=function(m,v,w){u(F,m,v,w||i);return this};this.error=function error(m,v,w){u(d,m,v,w||i);return this};this.warning=function warning(m,v,w){u(W,m,v,w||i);return this};this.info=function info(m,v,w){u(I,m,v,w||i);return this};this.debug=function debug(m,v,w){u(D,m,v,w||i);return this};this.trace=function trace(m,v,w){u(T,m,v,w||i);return this};this.setLevel=function setLevel(m,w){w=w||i||'';M[w]=m;var B=[];jQuery.each(jQuery.sap.log.LogLevel,function(y,v){B[v]=y});u(I,"Changing log level "+(w?"for '"+w+"' ":"")+"to "+B[m],"","jQuery.sap.log");return this};this.getLevel=function getLevel(m){return o(m||i)};this.isLoggable=function(m,v){return(m==null?D:m)<=o(v||i)}}jQuery.sap.log=jQuery.extend(new x(),{Level:{NONE:F-1,FATAL:F,ERROR:d,WARNING:W,INFO:I,DEBUG:D,TRACE:T,ALL:(T+1)},getLogger:function(i,m){if(!isNaN(m)&&M[i]==null){M[i]=m}return new x(i)},getLogEntries:function(){return l.slice()},addLogListener:function(L){t().attach(this,L);return this},removeLogListener:function(L){t().detach(this,L);return this}});jQuery.sap.log.LogLevel=jQuery.sap.log.Level;jQuery.sap.log.getLog=jQuery.sap.log.getLogEntries;jQuery.sap.assert=function(R,m){if(!R){if(window.console&&console.assert){console.assert(R,s+m)}else{jQuery.sap.log.debug("[Assertions] "+m)}}};C.loglevel=(function(){var m=/(?:\?|&)sap-ui-log(?:L|-l)evel=([^&]*)/.exec(window.location.search);return m&&m[1]}())||C.loglevel;if(C.loglevel){jQuery.sap.log.setLevel(jQuery.sap.log.Level[C.loglevel.toUpperCase()]||parseInt(C.loglevel,10))}jQuery.sap.log.info("SAP Logger started.");jQuery.each(a,function(i,e){jQuery.sap.log[e.level](e.message)});a=null}());jQuery.sap.factory=function factory(o){function F(){}F.prototype=o;return F};jQuery.sap.newObject=function newObject(o){return new(jQuery.sap.factory(o))()};jQuery.sap.getter=function getter(v){return function(){return v}};jQuery.sap.getObject=function getObject(n,N,o){var O=o||_,d=(n||"").split("."),l=d.length,m=isNaN(N)?0:l-N,i;for(i=0;O&&i<l;i++){if(!O[d[i]]&&i<m){O[d[i]]={}}O=O[d[i]]}return O};jQuery.sap.setObject=function(n,v,o){var O=o||_,N=(n||"").split("."),l=N.length,i;if(l>0){for(i=0;O&&i<l-1;i++){if(!O[N[i]]){O[N[i]]={}}O=O[N[i]]}O[N[l-1]]=v}};function S(n,d,t){var T=[],o=0,F=0,s;this.startTask=function(l){var I=T.length;T[I]={name:l,finished:false};o++;return I};this.finishTask=function(I,l){if(!T[I]||T[I].finished){throw new Error("trying to finish non existing or already finished task")}T[I].finished=true;o--;if(l===false){F++}if(o===0){jQuery.sap.log.info("Sync point '"+n+"' finished (tasks:"+T.length+", open:"+o+", failures:"+F+")");if(s){clearTimeout(s);s=null};i()}};function i(){d&&d(o,F);d=null}if(!isNaN(t)){s=setTimeout(function(){jQuery.sap.log.info("Sync point '"+n+"' timed out (tasks:"+T.length+", open:"+o+", failures:"+F+")");i()},t)};jQuery.sap.log.info("Sync point '"+n+"' created"+(t?"(timeout after "+t+" ms)":""))}jQuery.sap.syncPoint=function(n,d,t){return new S(n,d,t)};var g=(function(){var o=jQuery.sap.log.getLogger("sap.ui.ModuleSystem",(/sap-ui-xx-debug(M|-m)odule(L|-l)oading=(true|x|X)/.test(location.search)||C["xx-debugModuleLoading"])?jQuery.sap.log.Level.DEBUG:jQuery.sap.log.Level.INFO),u={'':'resources/'},I=0,t=-1,L=1,v=2,w=3,R=4,F=5,M={"sap/ui/thirdparty/URI.js":{state:R,url:c,content:URI},"sap/ui/Device.js":{state:R,url:c,content:sap.ui.Device},"jquery.sap.global.js":{state:R,url:c,content:jQuery}},x={},A={'sap/ui/thirdparty/crossroads.js':true,'sap/ui/thirdparty/datajs.js':true,'sap/ui/thirdparty/hasher.js':true,'sap/ui/thirdparty/IPv6.js':true,'sap/ui/thirdparty/jquery/jquery-1.11.1.js':true,'sap/ui/thirdparty/jquery/jquery-1.10.2.js':true,'sap/ui/thirdparty/jquery/jquery-1.10.1.js':true,'sap/ui/thirdparty/jquery/jquery.1.7.1.js':true,'sap/ui/thirdparty/jquery/jquery.1.8.1.js':true,'sap/ui/thirdparty/jquery-mobile-custom.js':true,'sap/ui/thirdparty/less.js':true,'sap/ui/thirdparty/punycode.js':true,'sap/ui/thirdparty/require.js':true,'sap/ui/thirdparty/SecondLevelDomains.js':true,'sap/ui/thirdparty/signals.js':true,'sap/ui/thirdparty/URI.js':true},y=[],z="",B=512*1024,D=document.location.href.replace(/\?.*|#.*/g,""),G="fragment",H="view",K={js:[H,G,"controller"],xml:[H,G],json:[H,G],html:[H,G]},J=new RegExp("(\\.(?:"+K.js.join("|")+"))?\\.js$"),N,O;(function(){var s="",d="";jQuery.each(K,function(i,l){s=(s?s+"|":"")+i;d=(d?d+"|":"")+"(?:(?:"+l.join("\\.|")+"\\.)?"+i+")"});s="\\.("+s+")$";d="\\.(?:"+d+"|[^./]+)$";o.debug("constructed regexp for file types :"+s);o.debug("constructed regexp for file sub-types :"+d);N=new RegExp(s);O=new RegExp(d)}());function Q(s){if(/^sap\.ui\.thirdparty\.jquery\.jquery-/.test(s)){return"sap/ui/thirdparty/jquery/jquery-"+s.slice("sap.ui.thirdparty.jquery.jquery-".length)}else if(/^jquery\.sap\./.test(s)){return s}return s.replace(/\./g,"/")}function T(s){var d;if(!/\.js$/.test(s)){return}s=s.slice(0,-3);if(/^sap\/ui\/thirdparty\/jquery\/jquery-/.test(s)){return"sap.ui.thirdparty.jquery.jquery-"+s.slice("sap/ui/thirdparty/jquery/jquery-".length)}else if(/^jquery\.sap\./.test(s)){return s}return s.replace(/\//g,".")}function U(s,d){var i=s.split(/\//),l,a1,b1,m;if(arguments.length===1&&i.length>0){m=O.exec(i[i.length-1]);if(m){d=m[0];i[i.length-1]=i[i.length-1].slice(0,m.index)}else{d=""}}for(l=i.length;l>=0;l--){a1=i.slice(0,l).join('/');if(u[a1]){b1=u[a1];if(l<i.length){b1+=i.slice(l).join('/')}if(b1.slice(-1)==='/'){b1=b1.slice(0,-1)}return b1+(d||'')}}}function W(s){var d,i,l;for(d in u){if(u.hasOwnProperty(d)){i=u[d].slice(0,-1);if(s.indexOf(i)===0){l=d+s.slice(i.length);if(l.charAt(0)==='/'){l=l.slice(1)}if(M[l]&&M[l].data){return l}}}}}function X(m){var d;d=M[m]||(M[m]={state:I});if(d.state>I){return d}if(o.isLoggable()){o.debug(z+"declare module '"+m+"'")}d.state=R;if(y.length===0){y.push(m);d.url=d.url||c}return d}function Y(s){var m=J.exec(s),d,l,a1,b1,i;if(!m){o.error("can only require Javascript module, not "+s);a1.state=F;return}d=s.slice(0,m.index);l=m[0];a1=M[s]||(M[s]={state:I});if(o.isLoggable()){o.debug(z+"require '"+s+"' of type '"+l+"'")}if(a1.state!==I){if(a1.state===t){a1.state=v;if(A[s]&&typeof window.define==="function"&&window.define.amd){var c1=window.define.amd;try{delete window.define.amd;Z(s)}finally{window.define.amd=c1}}else{Z(s)}}if(a1.state===R){if(o.isLoggable()){o.debug(z+"module '"+s+"' has already been loaded (skipped).")}return this}else if(a1.state===F){throw new Error("found in negative cache: '"+s+"' from "+a1.url+": "+a1.error)}else{return this}}a1.state=L;b1=window["sap-ui-loaddbg"]?["-dbg",""]:[""];for(i=0;i<b1.length&&a1.state!==v;i++){a1.url=U(d,b1[i]+l);if(o.isLoggable()){o.debug(z+"loading "+(b1[i]?b1[i]+" version of ":"")+"'"+s+"' from '"+a1.url+"'")}jQuery.ajax({url:a1.url,dataType:'text',async:false,success:function(d1,e1,f1){a1.state=v;a1.data=d1},error:function(d1,e1,f1){a1.state=F;a1.error=d1?d1.status+" - "+d1.statusText:e1}})}if(a1.state===v){if(A[s]&&typeof window.define==="function"&&window.define.amd){var c1=window.define.amd;try{delete window.define.amd;Z(s)}finally{window.define.amd=c1}}else{Z(s)}}if(a1.state!==R){throw new Error("failed to load '"+s+"' from "+a1.url+": "+a1.error)}}function Z(m){var d=M[m],s,i;if(d&&d.state===v&&typeof d.data!=="undefined"){try{if(o.isLoggable()){o.debug(z+"executing '"+m+"'");s=z;z=z+": "}d.state=w;y.push(m);if(typeof d.data==="function"){d.data.apply(window)}else{i=d.data;if(i&&!i.match(/\/\/[#@] source(Mapping)?URL=.*$/)){i+="\n//# sourceURL="+URI(d.url).absoluteTo(D)}if(_.execScript&&(!d.data||d.data.length<B)){try{d.data&&_.execScript(i)}catch(e){y.pop();jQuery.sap.globalEval(d.data);throw e}}else{_.eval(i)}}y.pop();d.state=R;d.data=undefined;d.content=d.content||jQuery.sap.getObject(T(m));if(o.isLoggable()){z=s;o.debug(z+"finished executing '"+m+"'")}}catch(l){d.state=F;d.error=((l.toString&&l.toString())||l.message)+(l.line?"(line "+l.line+")":"");d.data=undefined;if(window["sap-ui-debug"]&&(/sap-ui-xx-show(L|-l)oad(E|-e)rrors=(true|x|X)/.test(location.search)||C["xx-showloaderrors"])){o.error("error while evaluating "+m+", embedding again via script tag to enforce a stack trace (see below)");jQuery.sap.includeScript(d.url);return}}}}function $(d,l){var s=[],i,a1,b1,m;for(i=0;i<d.length;i++){a1=d[i];o.debug(z+"require '"+a1+"'");Y(a1+".js");s[i]=M[a1+".js"].content||jQuery.sap.getObject(T(a1+".js"));o.debug(z+"require '"+a1+"': done.")}l.apply(this,s)}jQuery.sap.getModulePath=function(m,s){return U(Q(m),s)};jQuery.sap.getResourcePath=U;jQuery.sap.registerModulePath=function registerModulePath(m,s){m=m.replace(/\./g,"/");s=s||'.';jQuery.sap.registerResourcePath(m,s)};jQuery.sap.registerResourcePath=function(s,d){s=String(s||"");if(d==null){delete u[s]}else{d=String(d);if(d.slice(-1)!='/'){d+='/'}u[s]=d}o.info("registerResourcePath ('"+s+"', '"+d+"')")};jQuery.sap.isDeclared=function isDeclared(m,i){m=Q(m)+".js";return M[m]&&(i||M[m].state!==t)};jQuery.sap.getAllDeclaredModules=function(){var m=[];jQuery.each(M,function(s,d){if(d&&d.state!==t){var i=T(s);if(i){m.push(i)}}});return m};if(C.resourceroots){jQuery.each(C.resourceroots,jQuery.sap.registerModulePath)}o.info("URL prefixes set to:");for(var n in u){o.info("  "+(n?"'"+n+"'":"(default)")+" : "+u[n])}jQuery.sap.declare=function(m,d){var s=m;if(typeof(m)==="object"){s=m.modName;m=Q(m.modName)+(m.type?"."+m.type:"")+".js"}else{m=Q(m)+".js"}X(m);if(d!==false){jQuery.sap.getObject(s,1)}return this};jQuery.sap.require=function(m,d){if(jQuery.isArray(m)&&typeof d==="function"){$(m,d)}else if(arguments.length>1){for(var i=0;i<arguments.length;i++){jQuery.sap.require(arguments[i])}return this}if(typeof(m)==="object"){m=Q(m.modName)+(m.type?"."+m.type:"")+".js"}else{m=Q(m)+".js"}Y(m);return this};jQuery.sap._requirePath=function(m){Y(m+".js")};window.sap=window.sap||{};sap.ui=sap.ui||{};sap.ui.define=function(s,d,l,m){var a1=[],b1,c1,i;if(typeof s==="string"){b1=s+".js"}else{m=l;l=d;d=s;b1=y[y.length-1]}s=T(b1);if(!jQuery.isArray(d)){m=l;l=d;d=[]}else{var d1=b1.slice(0,1+b1.lastIndexOf('/'));for(i=0;i<d.length;i++){if(/^\.\//.test(d[i])){d[i]=d1+d[i].slice(2)}}}if(o.isLoggable()){o.debug("define("+b1+", "+"['"+d.join("','")+"']"+")")}var e1=X(b1);$(d,function(){if(o.isLoggable()){o.debug("define("+b1+"): calling factory "+typeof l)}if(m){jQuery.sap.getObject(s,1)}if(typeof l==="function"){e1.content=l.apply(window,arguments)}else{e1.content=l}if(m){if(e1.content==null){o.error("module '"+b1+"' returned no content, but should be exported")}else{if(o.isLoggable()){o.debug("exporting content of '"+b1+"': as global object")}jQuery.sap.setObject(s,e1.content)}}})};jQuery.sap.preloadModules=function(s,d,i){var l,m;if(x[s])return;x[s]=true;l=jQuery.sap.getModulePath(s,".json");o.debug("preload file "+s);m=i&&i.startTask("load "+s);jQuery.ajax({dataType:"json",async:d,url:l,success:function(a1){if(a1){a1.url=l}jQuery.sap.registerPreloadedModules(a1,d,i);i&&i.finishTask(m)},error:function(a1,b1,c1){o.error("failed to preload '"+s+"': "+(c1||b1));i&&i.finishTask(m,false)}})};jQuery.sap.registerPreloadedModules=function(d,i,s){var l=V(d.version||"1.0").compareTo("2.0")<0;if(o.isLoggable()){o.debug(z+"adding preloaded modules from '"+d.url+"'")}if(d.name){x[d.name]=true}jQuery.each(d.modules,function(m,a1){m=l?Q(m)+".js":m;if(!M[m]){M[m]={state:t,url:d.url+"/"+m,data:a1,group:d.name}}if(m.match(/\/library\.js$/)){x[T(m)+"-preload"]=true}});if(d.dependencies){jQuery.each(d.dependencies,function(m,a1){jQuery.sap.preloadModules(a1,i,s)})}};jQuery.sap.unloadResources=function(s,d,l,m){var a1=[];if(d==null){d=true}if(d){jQuery.each(M,function(i,b1){if(b1&&b1.group===s){a1.push(i)}});delete x[s]}else{if(M[s]){a1.push(s)}}jQuery.each(a1,function(i,b1){var c1=M[b1];if(c1&&m&&b1.match(/\.js$/)){jQuery.sap.setObject(T(b1),undefined)}if(c1&&(l||c1.state===t)){delete M[b1]}})};jQuery.sap.getResourceName=function(m,s){return Q(m)+(s||".js")};jQuery.sap.loadResource=function(s,m){var i,l,a1,b1,c1;if(typeof s==="string"){m=m||{}}else{m=s||{};s=m.name;if(!s&&m.url){s=W(m.url)}}m=jQuery.extend({failOnError:true,async:false},m);i=m.dataType;if(i==null&&s){i=(i=N.exec(s))&&i[1]}c1=m.async?new jQuery.Deferred():null;function d1(d,e){if(d==null&&m.failOnError){e=e||new Error("no data returned for "+s);if(m.async){c1.reject(e);jQuery.sap.log.error(e);return d}throw e}if(m.async){c1.resolve(d)}return d}function e1(d){var f1=jQuery.ajaxSettings.converters["text "+i];if(typeof f1==="function"){d=f1(d)}return d1(d)}l=s&&M[s]&&M[s].data;if(l!=null){if(m.async){setTimeout(function(){e1(l)},0)}else{l=e1(l)}}else{jQuery.ajax({url:a1=m.url||U(s),async:m.async,dataType:i,headers:m.headers,success:function(d,f1,g1){l=d1(d)},error:function(d,f1,g1){b1=new Error("resource "+s+" could not be loaded from "+a1+". Check for 'file not found' or parse errors.");b1.status=f1;b1.error=g1;b1.statusCode=d.status;l=d1(null,b1)}})}return m.async?window.Promise.resolve(c1):l};return function(){return{modules:M,prefixes:u}}}());function h(o){var d=window.document.getElementsByTagName("head")[0];if(d){d.appendChild(o)}}jQuery.sap.includeScript=function includeScript(u,i,l,d){var s=window.document.createElement("script");s.src=u;s.type="text/javascript";if(i){s.id=i}if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9){if(l){s.onreadystatechange=function(){if(s.readyState==="loaded"||s.readyState==="complete"){l();s.onreadystatechange=null}}}}else{if(l){jQuery(s).load(l)}if(d){jQuery(s).error(d)}}var o;if((i&&(o=jQuery.sap.domById(i))&&o.tagName==="SCRIPT")){jQuery(o).remove()}h(s)};jQuery.sap.includeStyleSheet=function includeStyleSheet(u,I,l,d){var m=function(u,I,l,d){var L=document.createElement("link");L.type="text/css";L.rel="stylesheet";L.href=u;if(I){L.id=I}jQuery(L).load(function(){jQuery(L).attr("sap-ui-ready","true");if(l){l()}});jQuery(L).error(function(){jQuery(L).attr("sap-ui-ready","false");if(d){d()}});return L};var n=function(u,I,l,d){if(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<=9&&document.styleSheets.length>=28){var s=URI.parse(document.URL).path;jQuery.sap.log.warning("StlyeSheet "+I+" not added as LINK because of IE limits",u,"jQuery.sap.includeStyleSheet");if(!this._oIEStyleSheet){this._oIEStyleSheet=document.createStyleSheet();this._oIEStyleSheet.addImport(URI(u).absoluteTo(s))}else{var A=false;for(var i=0;i<this._oIEStyleSheet.imports.length;i++){var t=this._oIEStyleSheet.imports[i];if(t.imports.length<30){t.addImport(URI(u).absoluteTo(s));A=true;break}}if(!A){this._oIEStyleSheet.addImport(URI(u).absoluteTo(s))}}var v=document.getElementById('sap-ui-core-customcss');if(!jQuery.isEmptyObject(v)){h(v)}}else{var L=m(u,I,l,d);if(jQuery('#sap-ui-core-customcss').length>0){jQuery('#sap-ui-core-customcss').first().before(jQuery(L))}else{h(L)}}};var o,R;if((I&&(o=jQuery.sap.domById(I))&&(R=o.tagName==="LINK"&&o.rel==="stylesheet"))||window.document.body){if(R){if(o.getAttribute("href")!==u||l||d){jQuery(o).replaceWith(m(u,I,l,d))}}else{n(u,I,l,d)}}else{n(u,I,l,d)}};if(!(C.productive===true||C.productive==="true"||C.productive==="x")){jQuery(function(){jQuery(document.body).keydown(function(e){if(e.keyCode==80&&e.shiftKey&&e.altKey&&e.ctrlKey){try{jQuery.sap.require("sap.ui.debug.TechnicalInfo")}catch(e){return}sap.ui.debug.TechnicalInfo.open(function(){var i=g();return{modules:i.modules,prefixes:i.urlPrefixes,config:C}})}})});jQuery(function(){jQuery(document.body).keydown(function(e){if(e.keyCode==83&&e.shiftKey&&e.altKey&&e.ctrlKey){try{jQuery.sap.require("sap.ui.core.support.Support");var s=sap.ui.core.support.Support.getStub();if(s.getType()!=sap.ui.core.support.Support.StubType.APPLICATION){return}s.openSupportTool()}catch(e){}}})})}if(/sap-ui-xx-e2e-trace=(true|x|X)/.test(location.search)){jQuery.sap.require("sap.ui.core.support.trace.E2eTraceLib"+"")}if(!jQuery.support){jQuery.support={}}jQuery.extend(jQuery.support,{touch:"ontouchend"in document});var p=["Webkit","ms","Moz"];var k=document.documentElement.style;var q=function(d,l){if(jQuery.support[d]===undefined){if(k[l]!==undefined){jQuery.support[d]=true;if(l==="boxFlex"||l==="flexOrder"||l==="flexGrow"){if(!sap.ui.Device.browser.chrome||sap.ui.Device.browser.version>28){jQuery.support.flexBoxPrefixed=false}}return}else{l=l.charAt(0).toUpperCase()+l.slice(1);for(var i in p){if(k[p[i]+l]!==undefined){jQuery.support[d]=true;return}}}jQuery.support[d]=false}};q("cssTransforms","transform");q("cssTransforms3d","perspective");q("cssTransitions","transition");q("cssAnimations","animationName");if(jQuery.support.cssGradients===undefined){var E=document.createElement('div'),k=E.style;try{k.backgroundImage="linear-gradient(left top, red, white)";k.backgroundImage="-moz-linear-gradient(left top, red, white)";k.backgroundImage="-webkit-linear-gradient(left top, red, white)";k.backgroundImage="-ms-linear-gradient(left top, red, white)";k.backgroundImage="-webkit-gradient(linear, left top, right bottom, from(red), to(white))"}catch(e){}jQuery.support.cssGradients=(k.backgroundImage&&k.backgroundImage.indexOf("gradient")>-1);E=null}jQuery.support.flexBoxPrefixed=true;q("flexBoxLayout","boxFlex");if(k.msFlexOrder!==undefined){jQuery.support.ie10FlexBoxLayout=true}q("newFlexBoxLayout","flexGrow");if(jQuery.support.flexBoxLayout||jQuery.support.newFlexBoxLayout||jQuery.support.ie10FlexBoxLayout){jQuery.support.hasFlexBoxSupport=true}else{jQuery.support.hasFlexBoxSupport=false}if(!jQuery.support.opacity){(function(){var o=jQuery.cssHooks.opacity.set;jQuery.cssHooks.opacity.set=function(d,v){o.apply(this,arguments);if(!jQuery.trim(d.style.filter)){d.style.removeAttribute("filter")}}}())}function P(){function M(i,I,s,l){this.id=i;this.info=I;this.start=s;this.end=l;this.pause=0;this.resume=0;this.duration=0;this.time=0}var A=false;var d=jQuery.ajax;this.getActive=function(){return A};this.setActive=function(o){if(A==o){return A}A=o;if(A){jQuery.ajax=function(u,i){jQuery.sap.measure.start(u.url,"Request for "+u.url);d.apply(this,arguments);jQuery.sap.measure.end(u.url)}}else if(d){jQuery.ajax=d}return A};this.setActive(/sap-ui-measure=(true|x|X)/.test(location.search));this.mMeasurements={};this.start=function(i,I){if(!A){return}var t=new Date().getTime();var m=new M(i,I,t,0);if(m){this.mMeasurements[i]=m;return({id:m.id,info:m.info,start:m.start})}else{return false}};this.pause=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&m.end>0){return false}if(m&&m.pause==0){m.pause=t;if(m.pause>=m.resume&&m.resume>0){m.duration=m.duration+m.pause-m.resume;m.resume=0}else if(m.pause>=m.start){m.duration=m.pause-m.start}}if(m){return({id:m.id,info:m.info,start:m.start,pause:m.pause})}else{return false}};this.resume=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&m.pause>0){m.pause=0;m.resume=t}if(m){return({id:m.id,info:m.info,start:m.start,resume:m.resume})}else{return false}};this.end=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&!m.end){m.end=t;if(m.end>=m.resume&&m.resume>0){m.duration=m.duration+m.end-m.resume;m.resume=0}else if(m.pause>0){m.pause=0}else if(m.end>=m.start){m.duration=m.end-m.start}if(m.end>=m.start){m.time=m.end-m.start}}if(m){return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}};this.getMeasurement=function(i){if(!A){return}var m=this.mMeasurements[i];if(m){return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}};this.clear=function(){if(!A){return}this.mMeasurements={}};this.remove=function(i){if(!A){return}delete this.mMeasurements[i]};this.getAllMeasurements=function(){if(!A){return}var m=new Array();jQuery.each(this.mMeasurements,function(i,o){m.push({id:o.id,info:o.info,start:o.start,end:o.end,duration:o.duration,time:o.time})});return m};this.add=function(i,I,s,l,t,D){if(!A){return}var m=new M(i,I,s,l);m.time=t;m.duration=D;if(m){this.mMeasurements[i]=m;return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}}}jQuery.sap.measure=new P()}());
jQuery.sap.globalEval=function(){eval(arguments[0])};
jQuery.sap.declare('sap-ui-core-all');jQuery.sap.declare('sap.ui.Device');jQuery.sap.declare('sap.ui.thirdparty.SecondLevelDomains');jQuery.sap.declare('sap.ui.thirdparty.URI');jQuery.sap.declare('sap.ui.thirdparty.caja-html-sanitizer');jQuery.sap.declare('sap.ui.thirdparty.jquery.jquery-1.11.1');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-core');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-datepicker');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-position');jQuery.sap.declare('jquery.sap.promise');jQuery.sap.declare('sap.ui.thirdparty.jquery-mobile-custom');jQuery.sap.declare('jquery.sap.global');if(!jQuery.sap.isDeclared('jquery.sap.keycodes')){jQuery.sap.declare('jquery.sap.keycodes');sap.ui.define("jquery.sap.keycodes",['jquery.sap.global'],function(q){"use strict";q.sap.KeyCodes={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CONTROL:17,ALT:18,BREAK:19,CAPS_LOCK:20,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40,PRINT:44,INSERT:45,DELETE:46,DIGIT_0:48,DIGIT_1:49,DIGIT_2:50,DIGIT_3:51,DIGIT_4:52,DIGIT_5:53,DIGIT_6:54,DIGIT_7:55,DIGIT_8:56,DIGIT_9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,WINDOWS:91,CONTEXT_MENU:93,TURN_OFF:94,SLEEP:95,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105,NUMPAD_ASTERISK:106,NUMPAD_PLUS:107,NUMPAD_MINUS:109,NUMPAD_COMMA:110,NUMPAD_SLASH:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUM_LOCK:144,SCROLL_LOCK:145,OPEN_BRACKET:186,PLUS:187,COMMA:188,SLASH:189,DOT:190,PIPE:191,SEMICOLON:192,MINUS:219,GREAT_ACCENT:220,EQUALS:221,SINGLE_QUOTE:222,BACKSLASH:226};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.logger')){jQuery.sap.declare("jquery.sap.logger",false)};if(!jQuery.sap.isDeclared('jquery.sap.script')){jQuery.sap.declare('jquery.sap.script');sap.ui.define("jquery.sap.script",['jquery.sap.global'],function(q){"use strict";var I=0;q.sap.uid=function uid(){return"id-"+new Date().valueOf()+"-"+I++};q.sap.delayedCall=function delayedCall(d,o,m,p){return setTimeout(function(){if(q.type(m)=="string"){m=o[m]}m.apply(o,p||[])},d)};q.sap.clearDelayedCall=function clearDelayedCall(d){clearTimeout(d);return this};q.sap.intervalCall=function intervalCall(i,o,m,p){return setInterval(function(){if(q.type(m)=="string"){m=o[m]}m.apply(o,p||[])},i)};q.sap.clearIntervalCall=function clearIntervalCall(i){clearInterval(i);return this};var U=function(u){this.mParams={};var Q=u||window.location.href;if(Q.indexOf('#')>=0){Q=Q.slice(0,Q.indexOf('#'))}if(Q.indexOf("?")>=0){Q=Q.slice(Q.indexOf("?")+1);var p=Q.split("&"),P={},a,n,v;for(var i=0;i<p.length;i++){a=p[i].split("=");n=decodeURIComponent(a[0]);v=a.length>1?decodeURIComponent(a[1].replace(/\+/g,' ')):"";if(n){if(!Object.prototype.hasOwnProperty.call(P,n)){P[n]=[]}P[n].push(v)}}this.mParams=P}};U.prototype={};U.prototype.get=function(n,a){var v=Object.prototype.hasOwnProperty.call(this.mParams,n)?this.mParams[n]:[];return a===true?v:(v[0]||null)};q.sap.getUriParameters=function getUriParameters(u){return new U(u)};q.sap.unique=function(a){var l=a.length;if(l>1){a.sort();for(var i=1,j=0;i<l;i++){if(a[i]!==a[j]){a[++j]=a[i]}}if(++j<l){a.splice(j,l-j)}}return a};q.sap.equal=function(a,b,m,c,d){if(typeof m=="boolean"){c=m;m=undefined}if(!d)d=0;if(!m)m=10;if(d>m)return false;if(a===b)return true;if(q.isArray(a)&&q.isArray(b)){if(!c){if(a.length!=b.length){return false}}else{if(a.length>b.length){return false}}for(var i=0;i<a.length;i++){if(!q.sap.equal(a[i],b[i],m,c,d+1)){return false}}return true}if(typeof a=="object"&&typeof b=="object"){if(!a||!b){return false}if(a.constructor!=b.constructor){return false}if(a.nodeName&&b.nodeName&&a.namespaceURI&&b.namespaceURI){return q.sap.isEqualNode(a,b)}if(a instanceof Date){return a.valueOf()==b.valueOf()}for(var i in a){if(!q.sap.equal(a[i],b[i],m,c,d+1)){return false}}if(!c){for(var i in b){if(a[i]===undefined){return false}}}return true}return false};q.sap.each=function(o,c){var a=q.isArray(o),l,i;if(a){for(i=0,l=o.length;i<l;i++){if(c.call(o[i],i,o[i])===false){break}}}else{for(i in o){if(c.call(o[i],i,o[i])===false){break}}}return o};q.sap.forIn={toString:null}.propertyIsEnumerable("toString")?function(o,c){for(var n in o){if(c(n,o[n])===false){return}}}:(function(){var D=["toString","valueOf","toLocaleString","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],a=D.length,o=Object.prototype,h=o.hasOwnProperty;return function(O,c){var n,i;for(n in O){if(c(n,O[n])===false){return}}for(var i=0;i<a;i++){n=D[i];if(h.call(O,n)||O[n]!==o[n]){if(c(n,O[n])===false){return}}}}}());q.sap.arrayDiff=function(o,n,c){c=c||function(v,V){return q.sap.equal(v,V)};var O=[];var N=[];var m=[];for(var i=0;i<n.length;i++){var a=n[i];var f=0;var t;for(var j=0;j<o.length;j++){if(c(o[j],a)){f++;t=j;if(f>1){break}}}if(f==1){var M={oldIndex:t,newIndex:i};if(m[t]){delete O[t];delete N[m[t].newIndex]}else{N[i]={data:n[i],row:t};O[t]={data:o[t],row:i};m[t]=M}}}for(var i=0;i<n.length-1;i++){if(N[i]&&!N[i+1]&&N[i].row+1<o.length&&!O[N[i].row+1]&&c(o[N[i].row+1],n[i+1])){N[i+1]={data:n[i+1],row:N[i].row+1};O[N[i].row+1]={data:O[N[i].row+1],row:i+1}}}for(var i=n.length-1;i>0;i--){if(N[i]&&!N[i-1]&&N[i].row>0&&!O[N[i].row-1]&&c(o[N[i].row-1],n[i-1])){N[i-1]={data:n[i-1],row:N[i].row-1};O[N[i].row-1]={data:O[N[i].row-1],row:i-1}}}var d=[];if(n.length==0){for(var i=0;i<o.length;i++){d.push({index:0,type:'delete'})}}else{var b=0;if(!O[0]){for(var i=0;i<o.length&&!O[i];i++){d.push({index:0,type:'delete'});b=i+1}}for(var i=0;i<n.length;i++){if(!N[i]||N[i].row>b){d.push({index:i,type:'insert'})}else{b=N[i].row+1;for(var j=N[i].row+1;j<o.length&&(!O[j]||O[j].row<i);j++){d.push({index:i+1,type:'delete'});b=j+1}}}}return d};q.sap.parseJS=(function(){var a,b,e={'"':'"','\'':'\'','\\':'\\','/':'/',b:'\b',f:'\f',n:'\n',r:'\r',t:'\t'},t,d=function(m){throw{name:'SyntaxError',message:m,at:a,text:t}},n=function(c){if(c&&c!==b){d("Expected '"+c+"' instead of '"+b+"'")}b=t.charAt(a);a+=1;return b},f=function(){var f,s='';if(b==='-'){s='-';n('-')}while(b>='0'&&b<='9'){s+=b;n()}if(b==='.'){s+='.';while(n()&&b>='0'&&b<='9'){s+=b}}if(b==='e'||b==='E'){s+=b;n();if(b==='-'||b==='+'){s+=b;n()}while(b>='0'&&b<='9'){s+=b;n()}}f=+s;if(!isFinite(f)){d("Bad number")}else{return f}},s=function(){var c,i,s='',k,u;if(b==='"'||b==='\''){k=b;while(n()){if(b===k){n();return s}if(b==='\\'){n();if(b==='u'){u=0;for(i=0;i<4;i+=1){c=parseInt(n(),16);if(!isFinite(c)){break}u=u*16+c}s+=String.fromCharCode(u)}else if(typeof e[b]==='string'){s+=e[b]}else{break}}else{s+=b}}}d("Bad string")},g=function(){var g='',c,i=function(b){return b==="_"||(b>="0"&&b<="9")||(b>="a"&&b<="z")||(b>="A"&&b<="Z")};if(i(b)){g+=b}else{d("Bad name")}while(n()){if(b===' '){n();return g}if(b===':'){return g}if(i(b)){g+=b}else{d("Bad name")}}d("Bad name")},w=function(){while(b&&b<=' '){n()}},h=function(){switch(b){case't':n('t');n('r');n('u');n('e');return true;case'f':n('f');n('a');n('l');n('s');n('e');return false;case'n':n('n');n('u');n('l');n('l');return null}d("Unexpected '"+b+"'")},v,j=function(){var j=[];if(b==='['){n('[');w();if(b===']'){n(']');return j}while(b){j.push(v());w();if(b===']'){n(']');return j}n(',');w()}}d("Bad array")},o=function(){var k,o={};if(b==='{'){n('{');w();if(b==='}'){n('}');return o}while(b){if(b>="0"&&b<="9"){k=f()}else if(b==='"'||b==='\''){k=s()}else{k=g()}w();n(':');if(Object.hasOwnProperty.call(o,k)){d('Duplicate key "'+k+'"')}o[k]=v();w();if(b==='}'){n('}');return o}n(',');w()}}d("Bad object")};v=function(){w();switch(b){case'{':return o();case'[':return j();case'"':case'\'':return s();case'-':return f();default:return b>='0'&&b<='9'?f():h()}};return function(c,i){var r;t=c;a=i||0;b=' ';r=v();if(isNaN(i)){w();if(b){d("Syntax error")}return r}else{return{result:r,at:a-1}}}}());return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.sjax')){jQuery.sap.declare('jquery.sap.sjax');sap.ui.define("jquery.sap.sjax",['jquery.sap.global'],function(q){"use strict";q.sap.sjaxSettings={complexResult:true,fallback:undefined};q.sap.sjax=function sjax(o){var s=q.extend(true,{},q.sap.sjaxSettings,o,{async:false,success:function(d,t,x){r={success:true,data:d,status:t,statusCode:x&&x.status}},error:function(x,t,e){r={success:false,data:undefined,status:t,error:e,statusCode:x.status}}});var r=undefined;q.ajax(s);if(!s.complexResult){return r.success?r.data:s.fallback}return r};q.sap.syncHead=function(u){return q.sap.sjax({type:'HEAD',url:u}).success};q.sap.syncGet=function syncGet(u,d,D){return q.sap.sjax({url:u,data:d,type:'GET',dataType:D||'text'})};q.sap.syncPost=function syncPost(u,d,D){return q.sap.sjax({url:u,data:d,type:'POST',dataType:D||'text'})};q.sap.syncGetText=function syncGetText(u,d,f){return q.sap.sjax({url:u,data:d,type:'GET',dataType:'text',fallback:f,complexResult:(arguments.length<3)})};q.sap.syncGetJSON=function syncGetJSON(u,d,f){return q.sap.sjax({url:u,data:d||null,type:'GET',dataType:'json',fallback:f,complexResult:(arguments.length<3)})};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.storage')){jQuery.sap.declare('jquery.sap.storage');sap.ui.define("jquery.sap.storage",['jquery.sap.global'],function(q){"use strict";var s=!!(window.JSON&&JSON.parse&&JSON.stringify);var S="state.key_";var f=function(a,b){var t="unknown",P=b||S;P+="-";var T=P+"___sapui5TEST___",c=true,o;if(!a||typeof(a)==="string"){t=a||"session";try{o=window[t+"Storage"]}catch(e){o=null}try{if(o){o.setItem(T,"1");o.removeItem(T)}}catch(e){c=false;o=null}}else if(typeof(a)==="object"){t=a.getType?a.getType():"unknown";o=a}var d=!!o;this.isSupported=function(){if(!d){return false}if(typeof(o.isSupported)=="function"){return o.isSupported()}return true};this.put=function(i,g){if(this.isSupported()&&i){try{o.setItem(P+i,s?JSON.stringify(g):g);return true}catch(e){return false}}else{return false}};this.get=function(i){if(this.isSupported()&&i){try{var I=o.getItem(P+i);return s?JSON.parse(I):I}catch(e){return null}}else{return null}};this.remove=function(i){if(this.isSupported()&&i){try{o.removeItem(P+i);return true}catch(e){return false}}else{return false}};this.removeAll=function(I){if(this.isSupported()&&o.length&&(document.addEventListener?/function/:/function|object/).test(typeof(o.key))){try{var l=o.length;var k=[];var g,i;var p=P+(I||"");for(i=0;i<l;i++){g=o.key(i);if(g&&g.indexOf(p)==0){k.push(g)}}for(i=0;i<k.length;i++){o.removeItem(k[i])}return true}catch(e){return false}}else{return false}};this.clear=function(){if(this.isSupported()){try{o.clear();return true}catch(e){return false}}else{return false}};this.getType=function(){return t}};var m={};q.sap.storage=function(o,i){if(!o){o=q.sap.storage.Type.session}if(typeof(o)==="string"&&q.sap.storage.Type[o]){var k=o;if(i&&i!=S){k=o+"_"+i}return m[k]||(m[k]=new f(o,i))}return new f(o,i)};q.sap.storage.Type={local:"local",session:"session",global:"global"};f.apply(q.sap.storage);m[q.sap.storage.Type.session]=q.sap.storage;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.strings')){jQuery.sap.declare('jquery.sap.strings');sap.ui.define("jquery.sap.strings",['jquery.sap.global'],function(q){"use strict";q.sap.endsWith=function endsWith(s,e){if(typeof(e)!="string"||e==""){return false}var p=s.lastIndexOf(e);return p>=0&&p==s.length-e.length};q.sap.endsWithIgnoreCase=function endsWithIgnoreCase(s,e){if(typeof(e)!="string"||e==""){return false}s=s.toUpperCase();e=e.toUpperCase();return q.sap.endsWith(s,e)};q.sap.startsWith=function startsWith(s,S){if(typeof(S)!="string"||S==""){return false}if(s==S){return true}return s.indexOf(S)==0};q.sap.startsWithIgnoreCase=function startsWithIgnoreCase(s,S){if(typeof(S)!="string"||S==""){return false}s=s.toUpperCase();S=S.toUpperCase();return q.sap.startsWith(s,S)};q.sap.charToUpperCase=function charToUpperCase(s,p){if(!s){return s}if(!p||isNaN(p)||p<=0||p>=s.length){p=0}var C=s.charAt(p).toUpperCase();if(p>0){return s.substring(0,p)+C+s.substring(p+1)}return C+s.substring(p+1)};q.sap.padLeft=function padLeft(s,p,l){if(!s){s=""}while(s.length<l){s=p+s}return s};q.sap.padRight=function padRight(s,p,l){if(!s){s=""}while(s.length<l){s=s+p}return s};var r=/-(.)/ig;q.sap.camelCase=function camelCase(s){return s.replace(r,function(m,C){return C.toUpperCase()})};var a=/([A-Z])/g;q.sap.hyphen=function hyphen(s){return s.replace(a,function(m,C){return"-"+C.toLowerCase()})};var b=/[-[\]{}()*+?.,\\^$|#\s]/g;q.sap.escapeRegExp=function escapeRegExp(s){return s.replace(b,"\\$&")};q.sap.formatMessage=function formatMessage(p,v){if(arguments.length>2||(v!=null&&!q.isArray(v))){v=Array.prototype.slice.call(arguments,1)}v=v||[];return p.replace(c,function($,d,e,f,o){if(d){return"'"}else if(e){return e.replace(/''/g,"'")}else if(f){return String(v[parseInt(f,10)])}throw new Error("formatMessage: pattern syntax error at pos. "+o)})};var c=/('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.xml')){jQuery.sap.declare('jquery.sap.xml');sap.ui.define("jquery.sap.xml",['jquery.sap.global','sap/ui/Device'],function(q,D){"use strict";q.sap.parseXML=function parseXML(x){var X;if(window.DOMParser){var p=new DOMParser();try{X=p.parseFromString(x,"text/xml")}catch(e){var P=q.sap.getParseError(X);X={};P.reason=e.message;X.parseError=P;return X}}else{X=new ActiveXObject("Microsoft.XMLDOM");X.async=false;X.loadXML(x)}var P=q.sap.getParseError(X);if(P){if(!X.parseError){X.parseError=P}}return X};q.sap.serializeXML=function serializeXML(x){var X="";if(window.ActiveXObject){X=x.xml;if(X){return X}}if(window.XMLSerializer){var s=new XMLSerializer();X=s.serializeToString(x)}return X};q.sap.isEqualNode=function(n,N){if(n===N)return true;if(!n||!N)return false;if(n.isEqualNode){return n.isEqualNode(N)}if(n.nodeType!=N.nodeType)return false;if(n.nodeValue!=N.nodeValue)return false;if(n.baseName!=N.baseName)return false;if(n.nodeName!=N.nodeName)return false;if(n.nameSpaceURI!=N.nameSpaceURI)return false;if(n.prefix!=N.prefix)return false;if(n.nodeType!=1)return true;if(n.attributes.length!=N.attributes.length)return false;for(var i=0;i<n.attributes.length;i++){if(!q.sap.isEqualNode(n.attributes[i],N.attributes[i])){return false}}if(n.childNodes.length!=N.childNodes.length)return false;for(var i=0;i<n.childNodes.length;i++){if(!q.sap.isEqualNode(n.childNodes[i],N.childNodes[i])){return false}}return true};q.sap.getParseError=function getParseError(d){var p={errorCode:-1,url:"",reason:"unknown error",srcText:"",line:-1,linepos:-1,filepos:-1};if(!!D.browser.internet_explorer&&d&&d.parseError&&d.parseError.errorCode!=0){return d.parseError}if(!!D.browser.firefox&&d&&d.documentElement&&d.documentElement.tagName=="parsererror"){var e=d.documentElement.firstChild.nodeValue,r=/XML Parsing Error: (.*)\nLocation: (.*)\nLine Number (\d+), Column (\d+):(.*)/;if(r.test(e)){p.reason=RegExp.$1;p.url=RegExp.$2;p.line=parseInt(RegExp.$3,10);p.linepos=parseInt(RegExp.$4,10);p.srcText=RegExp.$5}return p}if(!!D.browser.webkit&&d&&d.documentElement&&d.documentElement.tagName=="html"&&d.getElementsByTagName("parsererror").length>0){var e=q.sap.serializeXML(d),r=/error on line (\d+) at column (\d+): ([^<]*)/;if(r.test(e)){p.reason=RegExp.$3;p.url="";p.line=parseInt(RegExp.$1,10);p.linepos=parseInt(RegExp.$2,10);p.srcText=""}return p}if(!d||!d.documentElement){return p}return{errorCode:0}};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.base.BindingParser')){jQuery.sap.declare('sap.ui.base.BindingParser');sap.ui.define("sap/ui/base/BindingParser",['jquery.sap.global','jquery.sap.script'],function(q){"use strict";var r=/^\{\s*[a-zA-Z_][a-zA-Z0-9_]*\s*:/;var a=/(\\[\\\{\}])|(\{)/g;var b=/([\\\{\}])/g;function c(f){var F=function(v){var R=[],l=f.length,i;for(i=0;i<l;i++){if(typeof f[i]==="number"){R.push(arguments[f[i]])}else{R.push(f[i])}}return R.join('')};F.textFragments=f;return F}function d(p){var P=p.indexOf(">"),o={path:p};if(P>0){o.model=p.slice(0,P);o.path=p.slice(P+1)}return o}var B={};B._keepBindingStrings=false;B.simpleParser=function(s,C){if(q.sap.startsWith(s,"{")&&q.sap.endsWith(s,"}")){return d(s.slice(1,-1))}};B.simpleParser.escape=function(v){return v};B.complexParser=function(s,C,u){var e=q.sap.parseJS,f={parts:[]},F=[],U,P,p=0,m,g;function h(o,k){if(typeof o[k]==="string"){var n=o[k];if(q.sap.startsWith(o[k],".")){o[k]=q.proxy(q.sap.getObject(o[k].slice(1),undefined,C),C)}else{o[k]=q.sap.getObject(o[k])}if(typeof(o[k])!=="function"){q.sap.log.error(k+" function "+n+" not found!")}}}function i(o,k){var l;if(typeof o[k]==="string"){if(q.sap.startsWith(o[k],".")){l=q.sap.getObject(o[k].slice(1),undefined,C)}else{l=q.sap.getObject(o[k])}if(typeof l==="function"){o[k]=new l(o.formatOptions,o.constraints)}else{o[k]=l}delete o.formatOptions;delete o.constraints}}function j(o,k,l){var n;if(!(typeof o[k]==="object"||q.isArray(o[k]))){return}if(q.isArray(o[k])){q.each(o[k],function(I,O){j(o[k],I,k)})}else{if(k==="filters"||l==="filters"){n=q.sap.getObject("sap.ui.model.Filter")}else if(k==="sorter"||l==="sorter"){n=q.sap.getObject("sap.ui.model.Sorter");h(o[k],"group")}if(n){o[k]=new n(o[k])}}}while(m=a.exec(s)){if(p<m.index){F.push(s.slice(p,m.index))}if(m[1]){F.push(m[1].slice(1));U=true}else{if(r.test(s.slice(m.index))){P=e(s,m.index);i(P.result,'type');j(P.result,'filters');j(P.result,'sorter');h(P.result,'formatter');h(P.result,'factory');h(P.result,'groupHeaderFactory');F.push(f.parts.length);f.parts.push(P.result);a.lastIndex=P.at}else{g=s.indexOf('}',m.index);if(g<m.index){throw new SyntaxError("no closing braces found in '"+s+"' after pos:"+m.index)}F.push(f.parts.length);f.parts.push(d(s.slice(m.index+1,g)));a.lastIndex=g+1}}p=a.lastIndex}if(p<s.length){F.push(s.slice(p))}if(f.parts.length>0){if(F.length===1){f=f.parts[0]}else{f.formatter=c(F)}if(B._keepBindingStrings){f.bindingString=s}return f}else if(u&&U){return F.join('')}};B.complexParser.escape=function(v){return v.replace(b,"\\$1")};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.base.DataType')){jQuery.sap.declare('sap.ui.base.DataType');sap.ui.define("sap/ui/base/DataType",['jquery.sap.global'],function(q){"use strict";var D=function(){throw new Error()};D.prototype.getName=function(){return undefined};D.prototype.getBaseType=function(){return undefined};D.prototype.getComponentType=function(){return undefined};D.prototype.getDefaultValue=function(){return undefined};D.prototype.isArrayType=function(){return undefined};D.prototype.parseValue=function(v){var t=this.getName();if(t=="string"){return v}else if(t=="boolean"){return v=="true"}else if(t=="int"){return parseInt(v,10)}else if(t=="float"){return parseFloat(v)}else if(t=="object"){return v?q.parseJSON(v):null}else{return v}};D.prototype.isValid=undefined;D.prototype.setNormalizer=function(n){this._fnNormalizer=n};D.prototype.normalize=function(v){if(typeof this._fnNormalizer==="function"){return this._fnNormalizer(v)}else{return v}};(function(){function c(n,s,b){s=s||{};b=b||D.prototype;var t=q.sap.newObject(b);t.getName=function(){return n};if(s.hasOwnProperty("defaultValue")){var d=s.defaultValue;t.getDefaultValue=function(){return d}}if(s.hasOwnProperty("isValid")){var i=s.isValid;t.isValid=b.isValid?function(v){if(!b.isValid(v)){return false}return i(v)}:i};t.isArrayType=function(){return false};return t}function a(b){var t=q.sap.newObject(D.prototype);t.getName=function(){return b.getName()+"[]"};t.getComponentType=function(){return b};t.isValid=function(v){if(v===null){return true}if(q.isArray(v)){for(var i=0;i<v.length;i++){if(!b.isValid(v[i])){return false}}return true}return false};t.parseValue=function(v){var V=v.split(",");for(var i=0;i<V.length;i++){V[i]=b.parseValue(V[i])}return V};t.isArrayType=function(){return true};return t}var P={"any":c("any",{defaultValue:null,isValid:function(v){return true}}),"boolean":c("boolean",{defaultValue:false,isValid:function(v){return typeof v==="boolean"}}),"int":c("int",{defaultValue:0,isValid:function(v){return typeof v==="number"&&Math.floor(v)==v}}),"float":c("float",{defaultValue:0.0,isValid:function(v){return typeof v==="number"}}),"string":c("string",{defaultValue:"",isValid:function(v){return typeof v==="string"||v instanceof String}}),"object":c("object",{defaultValue:null,isValid:function(v){return typeof v==="object"||typeof v==="function"}})};D.getType=function(t){if(t.indexOf("[]")>0){var C=t.substr(0,t.length-2),o=this.getType(C);return o&&a(o)}else{return P[t]||q.sap.getObject(t)}};D.createType=c;var I={};D.registerInterfaceTypes=function(t){for(var i=0;i<t.length;i++){q.sap.setObject(t[i],I[t[i]]=new String(t[i]))}};D.isInterfaceType=function(t){return I.hasOwnProperty(t)&&q.sap.getObject(t)===I[t]}}());return D},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Exception')){jQuery.sap.declare('sap.ui.base.Exception');sap.ui.define("sap/ui/base/Exception",['jquery.sap.global'],function(q){"use strict";var E=function(m){this.name="Exception";this.message=m};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Interface')){jQuery.sap.declare('sap.ui.base.Interface');sap.ui.define("sap/ui/base/Interface",['jquery.sap.global'],function(q){"use strict";var I=function(o,m){if(!o){return o}function c(o,M){return function(){var t=o[M].apply(o,arguments);return(t instanceof sap.ui.base.Object)?t.getInterface():t}}if(!m){return{}}var M;for(var i=0,a=m.length;i<a;i++){M=m[i];this[M]=c(o,M)}};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Metadata')){jQuery.sap.declare('sap.ui.base.Metadata');sap.ui.define("sap/ui/base/Metadata",['jquery.sap.global','jquery.sap.script'],function(q){"use strict";var M=function(c,C){if(!C||typeof C.metadata!=="object"){C={metadata:C||{},constructor:q.sap.getObject(c)};C.metadata.__version=1.0}C.metadata.__version=C.metadata.__version||2.0;if(typeof C.constructor!=="function"){throw Error("constructor for class "+c+" must have been declared before creating metadata for it")}this._sClassName=c;this._oClass=C.constructor;this.extend(C)};M.prototype.extend=function(c){this.applySettings(c);this.afterApplySettings()};M.prototype.applySettings=function(c){var t=this,s=c.metadata,p,n;if(s.baseType){var P=q.sap.getObject(s.baseType);if(typeof P!=="function"){q.sap.log.fatal("base class '"+s.baseType+"' does not exist")}if(P.getMetadata){this._oParent=P.getMetadata();}else{this._oParent=new M(s.baseType,{})}}else{this._oParent=undefined}this._bAbstract=!!s["abstract"];this._bFinal=!!s["final"];this._sStereotype=s.stereotype||(this._oParent?this._oParent._sStereotype:"object");this._aInterfaces=q.sap.unique(s.interfaces||[]);this._aPublicMethods=q.sap.unique(s.publicMethods||[]);p=this._oClass.prototype;q.sap.forIn(c,function(n,v){if(n!=="metadata"&&n!=="constructor"){p[n]=v;if(!n.match(/^_|^on|^init$|^exit$/)){t._aPublicMethods.push(n)}}})};M.prototype.afterApplySettings=function(){if(this._oParent){this._aAllPublicMethods=q.sap.unique(this._oParent._aAllPublicMethods.concat(this._aPublicMethods))}else{this._aAllPublicMethods=this._aPublicMethods}};M.prototype.getStereotype=function(){return this._sStereotype};M.prototype.getName=function(){return this._sClassName};M.prototype.getClass=function(){return this._oClass};M.prototype.getParent=function(){return this._oParent};M.prototype.getPublicMethods=function(){return this._aPublicMethods};M.prototype.getAllPublicMethods=function(){return this._aAllPublicMethods};M.prototype.getInterfaces=function(){return this._aInterfaces};M.prototype.isInstanceOf=function(I){if(this._oParent){if(this._oParent.isInstanceOf(I)){return true}};var a=this._aInterfaces;for(var i=0,l=a.length;i<l;i++){if(a[i]===I){return true}}return false};M.prototype.isAbstract=function(){return this._bAbstract};M.prototype.isFinal=function(){return this._bFinal};M.prototype.addPublicMethods=function(m){var n=(m instanceof Array)?m:arguments;function u(a,v){Array.prototype.push.apply(a,v);q.sap.unique(a)}u(this._aPublicMethods,n);u(this._aAllPublicMethods,n)};M.createClass=function(b,c,C,F){if(typeof b==="string"){F=C;C=c;c=b;b=null}F=F||M;if(typeof F.preprocessClassInfo==="function"){C=F.preprocessClassInfo(C)}C=C||{};C.metadata=C.metadata||{};if(!C.hasOwnProperty('constructor')){C.constructor=undefined}var f=C.constructor;if(b){if(!f){if(C.metadata.deprecated){f=function(){q.sap.log.warning("Usage of deprecated class: "+c);b.apply(this,arguments)}}else{f=function(){b.apply(this,arguments)}}}f.prototype=q.sap.newObject(b.prototype);f.prototype.constructor=f;C.metadata.baseType=b.getMetadata().getName()}else{f=f||function(){};delete C.metadata.baseType}C.constructor=f;q.sap.setObject(c,f);var m=new F(c,C);f.getMetadata=f.prototype.getMetadata=q.sap.getter(m);if(!f.getMetadata().isFinal()){f.extend=function(s,S,a){return M.createClass(f,s,S,a||F)}}return f};return M},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Object')){jQuery.sap.declare('sap.ui.base.Object');sap.ui.define("sap/ui/base/Object",['jquery.sap.global','./Interface','./Metadata'],function(q,I,M){"use strict";var B=M.createClass("sap.ui.base.Object",{constructor:function(){if(!(this instanceof B)){throw Error("Cannot instantiate object: \"new\" is missing!")}}});B.prototype.destroy=function(){};B.prototype.getInterface=function(){var i=new I(this,this.getMetadata().getAllPublicMethods());this.getInterface=q.sap.getter(i);return i};B.defineClass=function(c,s,F){var m=new(F||M)(c,s);var C=m.getClass();C.getMetadata=C.prototype.getMetadata=q.sap.getter(m);if(!m.isFinal()){C.extend=function(S,o,f){return M.createClass(C,S,o,f||F)}}q.sap.log.debug("defined class '"+c+"'"+(m.getParent()?" as subclass of "+m.getParent().getName():""));return m};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ObjectPool')){jQuery.sap.declare('sap.ui.base.ObjectPool');sap.ui.define("sap/ui/base/ObjectPool",['jquery.sap.global','./Object'],function(q,B){"use strict";var O=B.extend("sap.ui.base.ObjectPool",{constructor:function(o){B.apply(this);this.oObjectClass=o;this.aFreeObjects=[]}});O.prototype.borrowObject=function(){var o=this.aFreeObjects.length==0?new this.oObjectClass():this.aFreeObjects.pop();o.init.apply(o,arguments);return o};O.prototype.returnObject=function(o){o.reset();this.aFreeObjects.push(o)};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentContainerRenderer')){jQuery.sap.declare('sap.ui.core.ComponentContainerRenderer');sap.ui.define("sap/ui/core/ComponentContainerRenderer",['jquery.sap.global'],function(q){"use strict";var C={};C.render=function(r,c){var R=r;var b=sap.ui.getCore().getConfiguration().getRTL();var o=c.getComponentInstance();var w=c.getWidth();var h=c.getHeight();R.write("<div");R.writeControlData(c);if(w){R.addStyle("width",w)}if(h){R.addStyle("height",h)}R.writeStyles();R.addClass("sapUiComponentContainer");R.writeClasses();R.write(">");R.write("<div id=\""+c.getId()+"-uiarea\"");if(w&&w!=="auto"){R.addStyle("width","100%")}if(h&&h!=="auto"){R.addStyle("height","100%")}R.writeStyles();R.write(">");if(o){o.render(R)}R.write("</div></div>")};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.DeclarativeSupport')){jQuery.sap.declare('sap.ui.core.DeclarativeSupport');sap.ui.define("sap/ui/core/DeclarativeSupport",['jquery.sap.global'],function(q){"use strict";var D={};D.attributes={"data-sap-ui-type":true,"data-sap-ui-aggregation":true,"data-sap-ui-default-aggregation":true,"data-sap-ui-binding":function(v,s){var b=sap.ui.base.ManagedObject.bindingParser(v);s.objectBindings=s.objectBindings||{};s.objectBindings[b.model||undefined]=b},"data-tooltip":function(v,s){s["tooltip"]=v},"tooltip":function(v,s,c){s["tooltip"]=v;q.sap.log.warning('[Deprecated] Control "'+s.id+'": The attribute "tooltip" is not prefixed with "data-*". Future version of declarative support will only suppport attributes with "data-*" prefix.')},"class":true,"style":true,"id":true};D.compile=function(e,v,i){var s=this;q(e).find("[data-sap-ui-type]").filter(function(){return q(this).parents("[data-sap-ui-type]").length===0}).each(function(){s._compile(this,v,i)})};D._compile=function(e,v,i){var $=q(e);var t=$.attr("data-sap-ui-type");var c=[];var I=t==="sap.ui.core.UIArea";if(I){var s=this;$.children().each(function(){var C=s._createControl(this,v);if(C){c.push(C)}})}else{var C=this._createControl(e,v);if(C){c.push(C)}}$.empty();var a=[];q.each(e.attributes,function(b,A){var n=A.name;if(!I||I&&/^data-/g.test(n.toLowerCase())){a.push(n)}});if(a.length>0){$.removeAttr(a.join(" "))}q.each(c,function(k,C){if(C instanceof sap.ui.core.Control){if(v&&!i){v.addContent(C)}else{C.placeAt(e);if(v){v.connectControl(C)}}}})};D._createControl=function(e,v){var $=q(e);var c=null;var t=$.attr("data-sap-ui-type");if(t){q.sap.require(t);var C=q.sap.getObject(t);var s={};var i=s.id=this._getId($,v);this._addSettingsForAttributes(s,C,e,v);this._addSettingsForAggregations(s,C,e,v);var c;if(sap.ui.core.mvc.View.prototype.isPrototypeOf(C.prototype)&&typeof C._sType==="string"){c=sap.ui.view(s,undefined,C._sType)}else{c=new C(s)}if(e.className){c.addStyleClass(e.className)}$.removeAttr("data-sap-ui-type")}else{c=this._createHtmlControl(e,v)}return c};D._createHtmlControl=function(e,v){var h=new sap.ui.core.HTML();h.setDOMContent(e);this.compile(e,v,true);return h};D._addSettingsForAttributes=function(s,c,e,v){var a=this;var S=D.attributes;var b=sap.ui.base.ManagedObject.bindingParser;var C=[];var r=/^data-custom-data:(.+)/i;q.each(e.attributes,function(i,A){var n=A.name;var V=A.value;if(!r.test(n)){if(typeof S[n]==="undefined"){n=a.convertAttributeToSettingName(n,s.id);var p=a._getProperty(c,n);if(p){var B=b(V,v&&v.getController(),true);if(B&&typeof B==="object"){s[n]=B}else{s[n]=a.convertValueToType(a.getPropertyDataType(p),B||V)}}else if(a._getAssociation(c,n)){var o=a._getAssociation(c,n);if(o.multiple){V=V.replace(/\s*,\s*|\s+/g,",");var I=V.split(",");q.each(I,function(i,g){I[i]=v?v.createId(g):g});s[n]=I}else{s[n]=v?v.createId(V):V}}else if(a._getAggregation(c,n)){var d=a._getAggregation(c,n);if(d.multiple){var B=b(V,v&&v.getController());if(B){s[n]=B}else{throw new Error("Aggregation "+n+" with cardinality 0..n only allows binding paths as attribute value")}}else if(d.altTypes){var B=b(V,v&&v.getController(),true);if(B&&typeof B==="object"){s[n]=B}else{s[n]=a.convertValueToType(d.altTypes[0],B||V)}}else{throw new Error("Aggregation "+n+" not supported")}}else if(a._getEvent(c,n)){var h=q.sap.getObject(V);if(v&&typeof h==="undefined"){var f=(v._oContainingView||v).getController();h=f[V];if(typeof h==="function"){h=q.proxy(h,f);h._sapui_handlerName=V}}if(typeof h==="function"){s[n]=h}else{throw new Error('Control "'+s.id+'": The function "'+V+'" for the event "'+n+'" is not defined')}}}else if(typeof S[n]==="function"){S[n](V,s,c)}}else{n=q.sap.camelCase(r.exec(n)[1]);var B=b(V,v&&v.getController());C.push(new sap.ui.core.CustomData({key:n,value:B||V}))}});if(C.length>0){s.customData=C}return s};D._addSettingsForAggregations=function(s,c,e,v){var $=q(e);var d=this._getDefaultAggregation(c,e);var a=this;var A=c.getMetadata().getAllAggregations();$.children().each(function(){var b=q(this);var f=b.attr("data-sap-ui-aggregation");var t=b.attr("data-sap-ui-type");var u=false;if(!f){u=true;f=d}if(f&&A[f]){var m=A[f].multiple;var g=function(C){var o=a._createControl(C,v);if(o){if(m){if(!s[f]){s[f]=[]}if(typeof s[f].path==="string"){s[f].template=o}else{s[f].push(o)}}else{s[f]=o}}};if(u||(t&&!u)){g(this)}else{b.children().each(function(){g(this)})}}b.removeAttr("data-sap-ui-aggregation");b.removeAttr("data-sap-ui-type")});return s};D._getId=function(e,v){var $=q(e);var i=$.attr("id");if(i){if(v){i=v.createId(i);$.attr("data-sap-ui-id",i)}$.attr("id","")}return i};D._getProperty=function(c,n){return c.getMetadata().getAllProperties()[n]};D.convertValueToType=function(t,v){if(t instanceof sap.ui.base.DataType){v=t.parseValue(v)}return typeof v==="string"?sap.ui.base.ManagedObject.bindingParser.escape(v):v};D.getPropertyDataType=function(p){var t=sap.ui.base.DataType.getType(p.type);if(!t){throw new Error("Property "+p.name+" has no known type")}return t};D.convertAttributeToSettingName=function(a,i,d){if(a.indexOf("data-")===0){a=a.substr(5)}else if(d){q.sap.log.warning('[Deprecated] Control "'+i+'": The attribute "'+a+'" is not prefixed with "data-*". Future version of declarative support will only suppport attributes with "data-*" prefix.')}else{throw new Error('Control "'+i+'": The attribute "'+a+'" is not prefixed with "data-*".')}return q.sap.camelCase(a)};D._getAssociation=function(c,n){return c.getMetadata().getAllAssociations()[n]};D._getAggregation=function(c,n){return c.getMetadata().getAllAggregations()[n]};D._getEvent=function(c,n){return c.getMetadata().getAllEvents()[n]};D._getDefaultAggregation=function(c,e){var $=q(e);var d=$.attr("data-sap-ui-default-aggregation")||c.getMetadata().getDefaultAggregationName();$.removeAttr("data-sap-ui-default-aggregation");return d};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.HTMLRenderer')){jQuery.sap.declare('sap.ui.core.HTMLRenderer');sap.ui.define("sap/ui/core/HTMLRenderer",['jquery.sap.global'],function(q){"use strict";var H={render:function(r,c){var u=c.getUIArea();r.write("<div id=\"sap-ui-dummy-"+c.getId()+"\" style=\"display:none\">");r.write("</div>")}};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.History')){jQuery.sap.declare('sap.ui.core.History');sap.ui.define("sap/ui/core/History",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var H=B.extend("sap.ui.core.History",{constructor:function(i,s){B.apply(this);if(!s){s={}}var h=s.prefix?s.prefix:document.location.pathname;this._iMaxHistory=s.max?s.max:100;this._sHistoryId=h+i;q.sap.require("jquery.sap.storage");this._oStorage=q.sap.storage(q.sap.storage.Type.local);this._fFilter=s.filter?s.filter:function(a,v){return a&&(!v||(v&&q.sap.startsWithIgnoreCase(a,v)))};this._fCheckHistory=s.checkHistory?s.checkHistory:function(a){return a}},_initHistory:function(){if(!this._aHistory){var h=this._oStorage.get(this._sHistoryId);if(typeof(h)==="string"){h=h.split(",")}else if(!h){h=[]}this._aHistory=this._fCheckHistory(h)}return this._aHistory},get:function(v){var h=this._initHistory();var r=[];for(var i=0;i<h.length;i++){if(this._fFilter(h[i],v)){r.push(h[i])}}return r},remove:function(v){var h=this._initHistory();for(var i=0;i<h.length;i++){if(h[i]==v){h.splice(i,1);break}}},add:function(v){var h=this._initHistory();for(var i=0;i<h.length;i++){if(h[i]===v){h.splice(i,1);break}}h.unshift(v);if(h.length>this._iMaxHistory){h.splice(this._iMaxHistory)}this._oStorage.put(this._sHistoryId,h)},clear:function(){this._oStorage.remove(this._sHistoryId);this._aHistory=null}});return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IconPool')){jQuery.sap.declare('sap.ui.core.IconPool');sap.ui.define("sap/ui/core/IconPool",['jquery.sap.global','sap/ui/thirdparty/URI'],function(q,U){"use strict";if(b){return}var I=["accidental-leave","account","wrench","windows-doors","washing-machine","visits","video","travel-expense","temperature","task","synchronize","survey","settings","search","sales-document","retail-store","refresh","product","present","ppt-attachment","pool","pie-chart","picture","photo-voltaic","phone","pending","pdf-attachment","past","outgoing-call","opportunity","opportunities","notes","money-bills","map","log","line-charts","lightbulb","leads","lead","laptop","kpi-managing-my-area","kpi-corporate-performance","incoming-call","inbox","horizontal-bar-chart","history","heating-cooling","gantt-bars","future","fridge","fallback","expense-report","excel-attachment","energy-saving-lightbulb","employee","email","edit","duplicate","download","doc-attachment","dishwasher","delete","decline","complete","competitor","collections-management","chalkboard","cart","card","camera","calendar","begin","basket","bar-chart","attachment","arrow-top","arrow-right","arrow-left","arrow-bottom","approvals","appointment","alphabetical-order","along-stacked-chart","alert","addresses","address-book","add-filter","add-favorite","add","activities","action","accept","hint","group","check-availability","weather-proofing","payment-approval","batch-payments","bed","arobase","family-care","favorite","navigation-right-arrow","navigation-left-arrow","e-care","less","lateness","lab","internet-browser","instance","inspection","image-viewer","home","grid","goalseek","general-leave-request","create-leave-request","flight","filter","favorite-list","factory","endoscopy","employee-pane","employee-approvals","email-read","electrocardiogram","documents","decision","database","customer-history","customer","credit-card","create-entry-time","contacts","compare","clinical-order","chain-link","pull-down","cargo-train","car-rental","business-card","bar-code","folder-blank","passenger-train","question-mark","world","iphone","ipad","warning","sort","course-book","course-program","add-coursebook","print","save","play","pause","record","response","pushpin-on","pushpin-off","unfavorite","learning-assistant","timesheet","time-entry-request","list","action-settings","share","feed","role","flag","post","inspect","inspect-down","appointment-2","target-group","marketing-campaign","notification","comment","shipping-status","collaborate","shortcut","lead-outdated","tools-opportunity","permission","supplier","table-view","table-chart","switch-views","e-learning","manager","switch-classes","simple-payment","signature","sales-order-item","sales-order","request","receipt","puzzle","process","private","popup-window","person-placeholder","per-diem","paper-plane","paid-leave","pdf-reader","overview-chart","overlay","org-chart","number-sign","notification-2","my-sales-order","meal","loan","order-status","customer-order-entry","performance","menu","employee-lookup","education","customer-briefing","customer-and-contacts","my-view","accelerated","to-be-reviewed","warning2","feeder-arrow","quality-issue","workflow-tasks","create","home-share","globe","tags","work-history","x-ray","wounds-doc","web-cam","waiver","vertical-bar-chart","upstacked-chart","trip-report","microphone","unpaid-leave","tree","toaster-up","toaster-top","toaster-down","time-account","theater","taxi","subway-train","study-leave","stethoscope","step","sonography","soccor","physical-activity","pharmacy","official-service","offsite-work","nutrition-activity","newspaper","monitor-payments","map-2","machine","mri-scan","end-user-experience-monitoring","unwired","customer-financial-fact-sheet","retail-store-manager","Netweaver-business-client","electronic-medical-record","eam-work-order","customer-view","crm-service-manager","crm-sales","widgets","commission-check","collections-insight","clinical-tast-tracker","citizen-connect","cart-approval","capital-projects","bo-strategy-management","business-objects-mobile","business-objects-explorer","business-objects-experience","bbyd-dashboard","bbyd-active-sales","business-by-design","business-one","sap-box","manager-insight","accounting-document-verification","hr-approval","idea-wall","Chart-Tree-Map","cart-5","cart-4","wallet","vehicle-repair","upload","unlocked","umbrella","travel-request","travel-expense-report","travel-itinerary","time-overtime","thing-type","technical-object","tag","syringe","syntax","suitcase","simulate","shield","share-2","sales-quote","repost","provision","projector","add-product","pipeline-analysis","add-photo","palette","nurse","sales-notification","mileage","meeting-room","media-forward","media-play","media-pause","media-reverse","media-rewind","measurement-document","measuring-point","measure","map-3","locked","letter","journey-arrive","journey-change","journey-depart","it-system","it-instance","it-host","iphone-2","ipad-2","inventory","insurance-house","insurance-life","insurance-car","initiative","incident","group-2","goal","functional-location","full-screen","form","fob-watch","blank-tag","family-protection","folder","fax-machine","example","eraser","employee-rejections","drop-down-list","draw-rectangle","document","doctor","discussion-2","discussion","dimension","customer-and-supplier","crop","add-contact","compare-2","color-fill","collision","curriculum","chart-axis","full-stacked-chart","full-stacked-column-chart","vertical-bar-chart-2","horizontal-bar-chart-2","horizontal-stacked-chart","vertical-stacked-chart","choropleth-chart","geographic-bubble-chart","multiple-radar-chart","radar-chart","crossed-line-chart","multiple-line-chart","multiple-bar-chart","line-chart","line-chart-dual-axis","bubble-chart","scatter-chart","multiple-pie-chart","column-chart-dual-axis","tag-cloud-chart","area-chart","cause","cart-3","cart-2","bus-public-transport","burglary","building","border","bookmark","badge","attachment-audio","attachment-video","attachment-html","attachment-photo","attachment-e-pub","attachment-zip-file","attachment-text-file","add-equipment","add-activity","activity-individual","activity-2","add-activity-2","activity-items","activity-assigned-to-goal","status-completed","status-error","status-inactive","status-in-process","blank-tag-2","cart-full","locate-me","paging","company-view","document-text","explorer","personnel-view","sorting-ranking","drill-down","drill-up","vds-file","sap-logo-shape","folder-full","system-exit","system-exit-2","close-command-field","open-command-field","sys-enter-2","sys-enter","sys-help-2","sys-help","sys-back","sys-back-2","sys-cancel","sys-cancel-2","open-folder","sys-find-next","sys-find","sys-monitor","sys-prev-page","sys-first-page","sys-next-page","sys-last-page","generate-shortcut","create-session","display-more","enter-more","zoom-in","zoom-out","header","detail-view","collapse","expand","positive","negative","display","menu2","redo","undo","navigation-up-arrow","navigation-down-arrow","down","up","shelf","background","resize","move","show","hide","nav-back","error","slim-arrow-right","slim-arrow-left","slim-arrow-down","slim-arrow-up","forward","overflow","value-help","multi-select","exit-full-screen","sys-add","sys-minus","dropdown","expand-group","collapse-group","vertical-grip","horizontal-grip","sort-descending","sort-ascending","arrow-down"];var a=["e000","e001","e002","e003","e004","e005","e006","e007","e008","e009","e00a","e00b","e00c","e00d","e00e","e00f","e010","e011","e012","e013","e014","e015","e016","e017","e018","e019","e01a","e01b","e01c","e01d","e01e","e01f","e020","e021","e022","e023","e024","e025","e026","e027","e028","e029","e02a","e02b","e02c","e02d","e02e","e02f","e030","e031","e032","e033","e034","e035","e036","e037","e038","e039","e03a","e03b","e03c","e03d","e03e","e03f","e040","e041","e042","e043","e044","e045","e046","e047","e048","e049","e04a","e04b","e04c","e04d","e04e","e04f","e050","e051","e052","e053","e054","e055","e056","e057","e058","e059","e05a","e05b","e05c","e05d","e05e","e05f","e060","e061","e062","e063","e064","e065","e066","e067","e068","e069","e06a","e06b","e06c","e06d","e06e","e06f","e070","e071","e072","e073","e074","e075","e076","e077","e078","e079","e07a","e07b","e07c","e07d","e07e","e07f","e080","e081","e082","e083","e084","e085","e086","e087","e088","e089","e08a","e08b","e08c","e08d","e08e","e08f","e090","e091","e092","e093","e094","e095","e096","e097","e098","e099","e09a","e09b","e09c","e09d","e09e","e09f","e0a0","e0a1","e0a2","e0a3","e0a4","e0a5","e0a6","e0a7","e0a8","e0a9","e0aa","e0ab","e0ac","e0ad","e0ae","e0af","e0b0","e0b1","e0b2","e0b3","e0b4","e0b5","e0b6","e0b7","e0b8","e0b9","e0ba","e0bb","e0bc","e0bd","e0be","e0bf","e0c0","e0c1","e0c2","e0c3","e0c4","e0c5","e0c6","e0c7","e0c8","e0c9","e0ca","e0cb","e0cc","e0cd","e0ce","e0cf","e0d0","e0d1","e0d2","e0d3","e0d4","e0d5","e0d6","e0d7","e0d8","e0d9","e0da","e0db","e0dc","e0dd","e0de","e0df","e0e0","e0e1","e0e2","e0e3","e0e4","e0e5","e0e6","e0e7","e0e8","e0e9","e0ea","e0eb","e0ec","e0ed","e0ee","e0ef","e0f0","e0f1","e0f2","e0f3","e0f4","e0f5","e0f6","e0f7","e0f8","e0f9","e0fa","e0fb","e0fc","e0fd","e0fe","e0ff","e100","e101","e102","e103","e104","e105","e106","e107","e108","e109","e10a","e10b","e10c","e10d","e10e","e10f","e110","e111","e112","e113","e114","e115","e116","e117","e118","e119","e11a","e11b","e11c","e11d","e11e","e11f","e120","e121","e122","e123","e124","e125","e126","e127","e128","e129","e12a","e12b","e12c","e12d","e12e","e12f","e130","e131","e132","e133","e134","e135","e136","e137","e138","e139","e13a","e13b","e13c","e13d","e13e","e13f","e140","e141","e142","e143","e144","e145","e146","e147","e148","e149","e14a","e14b","e14c","e14d","e14e","e14f","e150","e151","e152","e153","e154","e155","e156","e157","e158","e159","e15a","e15b","e15c","e15d","e15e","e15f","e160","e161","e162","e163","e164","e165","e166","e167","e168","e169","e16a","e16b","e16c","e16d","e16e","e16f","e170","e171","e172","e173","e174","e175","e176","e177","e178","e179","e17a","e17b","e17c","e17d","e17e","e17f","e180","e181","e182","e183","e184","e185","e186","e187","e188","e189","e18a","e18b","e18c","e18d","e18e","e18f","e190","e191","e192","e193","e194","e195","e196","e197","e198","e199","e19a","e19b","e19c","e19d","e19e","e19f","e1a0","e1a1","e1a2","e1a3","e1a4","e1a5","e1a6","e1a7","e1a8","e1a9","e1aa","e1ab","e1ac","e1ad","e1ae","e1af","e1b0","e1b1","e1b2","e1b3","e1b4","e1b5","e1b6","e1b7","e1b8","e1b9","e1ba","e1bb","e1bc","e1bd","e1be","e1bf","e1c0","e1c1","e1c2","e1c3","e1c4","e1c5","e1c6","e1c7","e1c8","e1c9","e1ca","e1cb","e1cc","e1cd","e1ce","e1cf","e1d0","e1d1","e1d2","e1d3","e1d4","e1d5","e1d6","e1d7","e1d8","e1d9","e1da","e1db","e1dc","e1dd","e1de","e1df","e1e0","e1e1","e1e2","e1e3","e1e4","e1e5","e1e6","e1e7","e1e8","e1e9","e1ea","e1eb","e1ec","e1ed","e1ee","e1ef","e1f0","e1f1","e1f2","e1f3","e1f4","e1f5","e1f6","e1f7","e1f8","e1f9","e200","e1fa","e1fb","e1fc","e1fd","e1fe"];var m={"chalkboard":true,"calendar":true,"alphabetical-order":true,"address-book":true,"hint":true,"payment-approval":true,"batch-payments":true,"arobase":true,"question-mark":true,"lead":true,"lead-outdated":true,"simple-payment":true,"sales-order-item":true,"sales-order":true,"per-diem":true,"paid-leave":true,"pdf-reader":true,"my-sales-order":true,"loan":true,"globe":true,"waiver":true,"unpaid-leave":true,"customer-financial-fact-sheet":true,"crm-sales":true,"commission-check":true,"collections-insight":true,"capital-projects":true,"business-one":true,"travel-expense":true,"travel-expense-report":true,"travel-request":true,"time-overtime":true,"sales-quote":true,"sales-notification":true,"incident":true,"money-bills":true,"sales-document":true,"opportunities":true,"expense-report":true,"monitor-payments":true,"widgets":true,"sys-help-2":true,"sys-help":true,"accept":true,"accounting-document-verification":true,"activities":true,"activity-2":true,"add-activity":true,"add-activity-2":true,"approvals":true,"bbyd-active-sales":true,"business-by-design":true,"cart-approval":true,"complete":true,"customer-order-entry":true,"employee-approvals":true,"hr-approval":true,"kpi-corporate-performance":true,"kpi-managing-my-area":true,"survey":true,"sys-enter":true,"sys-enter-2":true,"task":true};var s="SAP-icons";var p="sap-icon";var r={};var f=false;var b=function(){throw new Error()};b.createControlByURI=function(c,d){if(typeof c==="string"){c={src:c}}if(c&&c.src){var S=c.src,C=d;if(b.isIconURI(S)){if(!sap.ui.core.Icon){q.sap.require("sap.ui.core.Icon")}C=sap.ui.core.Icon;if(c.tap){c.press=c.tap;delete c.tap}}if(typeof C==="function"){return new C(c)}}};b.addIcon=function(i,c,d){if(typeof d==="string"){d={fontFamily:arguments[2],content:arguments[3],overWrite:!!arguments[4],suppressMirroring:!!arguments[5]}}if(!r[c]){r[c]={}}var e=r[c],g,o=e[i],h;if(o&&(c===undefined||!d.overWrite)){q.sap.log.warning("icon with the same iconName in the collection already exists, specify the last parameter to true in order to overwrite");return}h={protocol:p,hostname:c||i,path:c?i:undefined};g={name:i,collection:c,uri:window.URI.build(h),fontFamily:d.fontFamily,content:String.fromCharCode(parseInt(d.content,16)),suppressMirroring:d.suppressMirroring,skipMirroring:d.suppressMirroring};e[i]=g;return g};b.getIconURI=function(i,c){var d=r[c];if(d&&d[i]){return d[i].uri}};b.getIconInfo=function(i,c){b.insertFontFaceStyle();var P=i,d=c,e,g;if(this.isIconURI(i)){e=window.URI.parse(i);if(e.path.length===1){P=e.hostname;d=undefined}else{d=e.hostname;P=e.path.substr(1,e.path.length)}}g=r[d];return g&&g[P]};b.isIconURI=function(u){if(!u){return false}var c=window.URI.parse(u);return(c.protocol===p)&&!!c.hostname};b.getIconCollectionNames=function(){var n=[];q.map(r,function(v,k){n.push(k)});return n};b.getIconNames=function(c){var d=r[c],n=[];q.map(d,function(v,k){n.push(k)});return n};b.insertFontFaceStyle=function(){if(f){return}var F=q.sap.getModulePath("sap.ui.core",'/')+"themes/base/fonts/",w,c,d,i;if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<10&&window.self!==window.top){F=b._calcAbsPath(F,window.location.href)}d="@font-face {"+"font-family: 'SAP-icons';"+"src: url('"+F+"SAP-icons.eot');"+"src: url('"+F+"SAP-icons.eot?#iefix') format('embedded-opentype'),"+"url('"+F+"SAP-icons.ttf') format('truetype');"+"font-weight: normal;"+"font-style: normal;"+"}";q('head').append('<style type="text/css">'+d+'</style>');f=true};b._calcAbsPath=function(R,B){B=B&&B.replace(/\?.*|#.*/g,"");var u=new window.URI(R),A=u.absoluteTo(B);return A.href()};b._isMirroringSkipped=function(i){return!!m[i]};q.each(I,function(i,n){b.addIcon(n,undefined,{fontFamily:s,content:a[i],suppressMirroring:b._isMirroringSkipped(n)})});return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IconRenderer')){jQuery.sap.declare('sap.ui.core.IconRenderer');sap.ui.define("sap/ui/core/IconRenderer",["jquery.sap.global"],function(q){"use strict";var I={};I.render=function(r,c){if(!c.getVisible()){return}var i=sap.ui.core.IconPool.getIconInfo(c.getSrc()),w=c.getWidth(),h=c.getHeight(),C=c.getColor(),b=c.getBackgroundColor(),s=c.getSize(),t=c.getTooltip_AsString(),T=(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9);r.write("<span");r.writeControlData(c);if(!c.getDecorative()){r.writeAttribute("tabindex",0)}if(t){r.writeAttributeEscaped("title",t)}if(i){if(!T){r.writeAttribute("data-sap-ui-icon-content",i.content)}r.addStyle("font-family","'"+i.fontFamily+"'")}if(w){r.addStyle("width",w)}if(h){r.addStyle("height",h);r.addStyle("line-height",h)}if(C){r.addStyle("color",C)}if(b){r.addStyle("background-color",b)}if(s){r.addStyle("font-size",s)}r.addClass("sapUiIcon");if(i&&!i.suppressMirroring){r.addClass("sapUiIconMirrorInRTL")}r.writeClasses();r.writeStyles();r.write(">");if(i&&T){r.write(i.content)}r.write("</span>")};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicatorRenderer')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicatorRenderer');sap.ui.define("sap/ui/core/LocalBusyIndicatorRenderer",['jquery.sap.global'],function(q){"use strict";var L={};(function(){L.render=function(R,c){R.write("<div");R.writeControlData(c);R.addClass("sapUiLocalBusyIndicator");R.writeClasses();R.write(">");r(R,c);R.write("</div>")};var r=function(R,c){var I=c.getId();var s=I+"-animation";var b=["-leftBox","-middleBox","-rightBox"];R.write('<div');R.writeAttribute('id',s);R.addClass("sapUiLocalBusyIndicatorAnimation");R.writeClasses();R.write(">");for(var i=0;i<b.length;i++){R.write('<div');R.addClass("sapUiLocalBusyIndicatorBox");R.writeClasses();R.writeAttribute("id",I+b[i]);R.write(">");R.write("</div>")}R.write("</div>")}}());return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Locale')){jQuery.sap.declare('sap.ui.core.Locale');sap.ui.define("sap/ui/core/Locale",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var a=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?(-[0-9A-Z]{5,8}|(?:[0-9][0-9A-Z]{3}))*(?:-([0-9A-WYZ](?:-[0-9A-Z]{2,8})+))*(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;var L=B.extend("sap.ui.core.Locale",{constructor:function(l){B.apply(this);var r=a.exec(l.replace(/_/g,"-"));if(r===null){throw"The given language does not adhere to BCP-47."}this.sLocaleId=l;this.sLanguage=r[1]||null;this.sScript=r[2]||null;this.sRegion=r[3]||null;this.sVariant=(r[4]&&r[4].slice(1))||null;this.sExtension=r[5]||null;this.sPrivateUse=r[6]||null;if(this.sLanguage){this.sLanguage=this.sLanguage.toLowerCase()}if(this.sScript){this.sScript=this.sScript.toLowerCase().replace(/^[a-z]/,function($){return $.toUpperCase()})}if(this.sRegion){this.sRegion=this.sRegion.toUpperCase()}},getLanguage:function(){return this.sLanguage},getScript:function(){return this.sScript},getRegion:function(){return this.sRegion},getVariant:function(){return this.sVariant},getVariantSubtags:function(){return this.sVariant?this.sVariant.split('-'):[]},getExtension:function(){return this.sExtension},getExtensionSubtags:function(){return this.sExtension?this.sExtension.slice(2).split('-'):[]},getPrivateUse:function(){return this.sPrivateUse},getPrivateUseSubtags:function(){return this.sPrivateUse?this.sPrivateUse.slice(2).split('-'):[]},hasPrivateUseSubtag:function(s){return q.inArray(s,this.getPrivateUseSubtags())>=0},toString:function(){var r=[this.sLanguage];if(this.sScript){r.push(this.sScript)}if(this.sRegion){r.push(this.sRegion)}if(this.sVariant){r.push(this.sVariant)}if(this.sExtension){r.push(this.sExtension)}if(this.sPrivateUse){r.push(this.sPrivateUse)}return r.join("-")},getSAPLogonLanguage:function(){var l=this.sLanguage||"",m;if(l.indexOf("-")>=0){l=l.slice(0,l.indexOf("-"))}l=M[l]||l;if(l==="zh"){if(this.sScript==="Hant"||(!this.sScript&&this.sRegion==="TW")){l="zf"}}if(this.sPrivateUse&&(m=/-(saptrc|sappsd)(?:-|$)/i.exec(this.sPrivateUse))){l=(m[1].toLowerCase()==="saptrc")?"1Q":"2Q"}return l.toUpperCase()}});var M={"iw":"he","ji":"yi","in":"id","sh":"sr"};function g(v){var m=/\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(v);return(m&&m[2])?m[2].split(/,/):null}var A=g("$cldr-rtl-locales:ar,fa,he$")||[];L._cldrLocales=g("$cldr-locales:ar,ar_EG,ar_SA,bg,br,ca,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,ko,lt,lv,nb,nl,nl_BE,nn,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW$");L._coreI18nLocales=g("$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,ko,lt,lv,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$");L._impliesRTL=function(l){var o=new L(l);l=o.getLanguage()||"";l=(l&&M[l])||l;var r=o.getRegion()||"";if(r&&q.inArray(l+"_"+r,A)>=0){return true}return q.inArray(l,A)>=0};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Renderer')){jQuery.sap.declare('sap.ui.core.Renderer');sap.ui.define("sap/ui/core/Renderer",['jquery.sap.global'],function(q){"use strict";var R={};R.extend=function(p){var c={_super:p};for(var f in p){if(typeof(p[f])=="function"){c[f]=(function(){var m=f,t=c;return function(){return t._super[m].apply(this,arguments)}}())}}return c};R.getTextAlign=function(t,T){var s="";var c=sap.ui.getCore().getConfiguration();switch(t){case sap.ui.core.TextAlign.End:switch(T){case"LTR":s="right";break;case"RTL":s="left";break;default:if(c.getRTL()){s="left"}else{s="right"}break}break;case sap.ui.core.TextAlign.Begin:switch(T){case"LTR":s="left";break;case"RTL":s="right";break;default:if(c.getRTL()){s="right"}else{s="left"}break}break;case sap.ui.core.TextAlign.Right:if(c.getRTL()){if(T=="LTR"){s="right"}}else{s="right"}break;case sap.ui.core.TextAlign.Center:s="center";break;case sap.ui.core.TextAlign.Left:if(c.getRTL()){s="left"}else{if(T=="RTL"){s="left"}}break}return s};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ScrollBarRenderer')){jQuery.sap.declare('sap.ui.core.ScrollBarRenderer');sap.ui.define("sap/ui/core/ScrollBarRenderer",['jquery.sap.global'],function(q){"use strict";var S={};S.render=function(r,s){var a=r;var R=sap.ui.getCore().getConfiguration().getRTL();a.addClass("sapUiScrollBar");var b;if(sap.ui.Device.support.touch){b="sapUiScrollBarTouch";a.addClass(b)}var v=s.getVertical();var c=s.getSize();var C=s.getContentSize();var B=q.sap.scrollbarSize(b);var w=B.width;var h=B.height;if(v){a.write("<div");a.writeControlData(s);a.write(" style=\"overflow:hidden;width:"+w+"px");if(c){a.write(";height:"+c)}a.write("\"");a.writeClasses();a.write(">");a.write("<div ");a.writeAttribute("id",s.getId()+"-sb");a.write(" style=\"width:"+w*2+"px;height:100%;overflow-y:scroll;overflow-x:hidden");if(R){if((!(!!sap.ui.Device.browser.firefox&&sap.ui.Device.browser.version==3.6))&&(!!!sap.ui.Device.browser.safari)){a.write(";margin-right:-"+w+"px")}}else{a.write(";margin-left:-"+w+"px;")}a.write("\">");a.write("<div");a.writeAttribute("id",s.getId()+"-sbcnt");a.write(" style=\"width:"+w+"px");if(C){a.write(";height:"+C)}a.write("\"");a.write(">");a.write("</div>");a.write("</div>");a.write("<div> <span id="+s.getId()+"-ffsize"+" style='position: absolute; top: -9000px; left: -9000px; visibility: hidden; line-height: normal;'> FF Size</span></div>");a.write("</div>")}else{a.write("<div");a.writeControlData(s);a.write(" style=\"overflow:hidden;height:"+h+"px");if(c){a.write(";width:"+c)}a.write("\"");a.writeClasses();a.write(">");a.write("<div ");a.writeAttribute("id",s.getId()+"-sb");a.write(" style=\"height:"+h*2+"px;margin-top:-"+h+"px;overflow-x:scroll;overflow-y:hidden\">");a.write("<div");a.writeAttribute("id",s.getId()+"-sbcnt");a.write(" style=\"height:"+h+"px");if(C){a.write(";width:"+C)}a.write("\"");a.write(">");a.write("</div>");a.write("</div>");a.write("</div>")}};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ThemeCheck')){jQuery.sap.declare('sap.ui.core.ThemeCheck');sap.ui.define("sap/ui/core/ThemeCheck",['jquery.sap.global','sap/ui/Device','sap/ui/base/Object','jquery.sap.script'],function(q,D,B){"use strict";sap.ui._maxThemeCheckCycles=100;var T=B.extend("sap.ui.core.ThemeCheck",{constructor:function(C){this._oCore=C;this._iCount=0;this._CUSTOMCSSCHECK=/\.sapUiThemeDesignerCustomCss/i;this._CUSTOMID="sap-ui-core-customcss";this._customCSSAdded=false;this._themeCheckedForCustom=null;this._mAdditionalLibCss={}},getInterface:function(){return this},fireThemeChangedEvent:function(o,f){c(this);var u=sap.ui._maxThemeCheckCycles>0;if(u||f){d.apply(this,[true])}else{T.themeLoaded=true}if(!o&&!this._sThemeCheckId){this._oCore.fireThemeChanged({theme:this._oCore.getConfiguration().getTheme()})}}});T.themeLoaded=false;T.checkStyle=function(s,l){if(typeof(s)==="string"){s=q.sap.domById(s)}var S=q(s);try{var r=!s||!!((s.sheet&&s.sheet.cssRules.length>0)||!!(s.styleSheet&&s.styleSheet.cssText.length>0)||!!(s.innerHTML&&s.innerHTML.length>0));var f=S.attr("sap-ui-ready");f=!!(f==="true"||f==="false");if(l){q.sap.log.debug("ThemeCheck: Check styles '"+S.attr("id")+"': "+r+"/"+f+"/"+!!s)}return r||f}catch(e){}if(l){q.sap.log.debug("ThemeCheck: Error during check styles '"+S.attr("id")+"': false/false/"+!!s)}return false};function c(t){T.themeLoaded=false;if(t._sThemeCheckId){q.sap.clearDelayedCall(t._sThemeCheckId);t._sThemeCheckId=null;t._iCount=0;t._mAdditionalLibCss={}}}function a(t){var l=t._oCore.getLoadedLibraries();var s=t._oCore.getConfiguration().getTheme();var p=t._oCore._getThemePath("sap.ui.core",s)+"custom.css";var r=true;if(!!t._customCSSAdded&&t._themeCheckedForCustom===s){l[t._CUSTOMID]={}}function e(f){r=r&&T.checkStyle("sap-ui-theme-"+f,true);if(!!r){if(D.browser.msie&&D.browser.version<=9){var S=q.sap.domById("sap-ui-theme-"+f);var R=S&&S.sheet&&S.sheet.rules&&S.sheet.rules.length?S.sheet.rules.length:0;if(R===4095){var n=parseInt(q(S).attr("sap-ui-css-count"),10);if(isNaN(n)){n=1}else{n+=1}var A="ie9_"+n;var g=this.name+"-"+A;var L="sap-ui-theme-"+g;if(!t._mAdditionalLibCss[g]&&!q.sap.domById(L)){t._mAdditionalLibCss[g]={name:this.name};var o;if(f!==this.name){o=q.sap.domById("sap-ui-theme-"+this.name)}else{o=S}var h=new URI(o.getAttribute("href"));var i=h.suffix();var F=h.filename();if(i.length>0){i="."+i;F=F.slice(0,-i.length)}h.filename(F+"_"+A+i);var H=h.toString();var j=document.createElement("link");j.type="text/css";j.rel="stylesheet";j.href=H;j.id=L;q(j).attr("sap-ui-css-count",n).load(function(){q(j).attr("sap-ui-ready","true")}).error(function(){q(j).attr("sap-ui-ready","false")});S.parentNode.insertBefore(j,S.nextSibling)}}}if(t._themeCheckedForCustom!=s){if(b(t,f)){q.sap.includeStyleSheet(p,t._CUSTOMID);t._customCSSAdded=true;q.sap.log.warning("ThemeCheck delivered custom CSS needs to be loaded, Theme not yet applied");t._themeCheckedForCustom=s;r=false;return false}else{var k=q("LINK[id='"+t._CUSTOMID+"']");if(k.length>0){k.remove();q.sap.log.debug("Custom CSS removed")}t._customCSSAdded=false}}}}q.each(l,e);q.each(t._mAdditionalLibCss,e);if(!r){q.sap.log.warning("ThemeCheck: Theme not yet applied.")}else{t._themeCheckedForCustom=s}return r}function b(t,l){var r=2,s=false,R=Array();if(q.sap.domById("sap-ui-theme-"+l)){var e=q.sap.domById("sap-ui-theme-"+l);if(e.sheet){R=e.sheet.cssRules}else if(e.styleSheet){R=e.styleSheet.rules}}if(R.length==0){q.sap.log.warning("Custom check: Failed retrieving a CSS rule from stylesheet "+l);return false}for(var i=0;(i<r&&i<R.length);i++){if(t._CUSTOMCSSCHECK.test(R[i].selectorText)){s=true}}return s}function d(f){this._iCount++;var e=this._iCount>sap.ui._maxThemeCheckCycles;if(!a(this)&&!e){this._sThemeCheckId=q.sap.delayedCall(2,this,d)}else if(!f){c(this);T.themeLoaded=true;this._oCore.fireThemeChanged({theme:this._oCore.getConfiguration().getTheme()});if(e){q.sap.log.warning("ThemeCheck: max. check cycles reached.")}}else{T.themeLoaded=true}}return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ValueStateSupport')){jQuery.sap.declare('sap.ui.core.ValueStateSupport');sap.ui.define("sap/ui/core/ValueStateSupport",['jquery.sap.global'],function(q){"use strict";var V={};var t=null;var e=function(){if(!t){t={};var r=sap.ui.getCore().getLibraryResourceBundle("sap.ui.core");t[sap.ui.core.ValueState.Error]=r.getText("VALUE_STATE_ERROR");t[sap.ui.core.ValueState.Warning]=r.getText("VALUE_STATE_WARNING");t[sap.ui.core.ValueState.Success]=r.getText("VALUE_STATE_SUCCESS")}};V.enrichTooltip=function(E,T){if(!T&&E.getTooltip()){return undefined}if(E.getValueState){var s=E.getValueState();if(s&&(s!=sap.ui.core.ValueState.None)){e();return(T?T+" - ":"")+t[s]}}return T};V.getAdditionalText=function(E){var r=null;if(E.getValueState){var s=E.getValueState();if(s&&(s!=sap.ui.core.ValueState.None)){e();r=t[s]}}return r};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.core.XMLTemplateProcessor')){jQuery.sap.declare('sap.ui.core.XMLTemplateProcessor');sap.ui.define("sap/ui/core/XMLTemplateProcessor",['jquery.sap.global'],function(q){"use strict";function p(t,v,n,c){var b=sap.ui.base.ManagedObject.bindingParser(v,c,true);if(b&&typeof b==="object"){return b}var V=v=b||v;var T=sap.ui.base.DataType.getType(t);if(T){if(T instanceof sap.ui.base.DataType){V=T.parseValue(v)}}else{throw new Error("Property "+n+" has unknown type "+t)}return typeof V==="string"?sap.ui.base.ManagedObject.bindingParser.escape(V):V}function l(x){return x.localName||x.baseName||x.nodeName}var X={};X.loadTemplate=function(t,e){var r=q.sap.getResourceName(t,"."+(e||"view")+".xml");return q.sap.loadResource(r).documentElement};X.parseViewAttributes=function(x,v,s){var a=v.getMetadata().getAllProperties();for(var i=0;i<x.attributes.length;i++){var b=x.attributes[i];if(b.name==='controllerName'){v._controllerName=b.value}else if(b.name==='resourceBundleName'){v._resourceBundleName=b.value}else if(b.name==='resourceBundleUrl'){v._resourceBundleUrl=b.value}else if(b.name==='resourceBundleLocale'){v._resourceBundleLocale=b.value}else if(b.name==='resourceBundleAlias'){v._resourceBundleAlias=b.value}else if(b.name==='class'){v.addStyleClass(b.value)}else if(!s[b.name]&&a[b.name]){s[b.name]=p(a[b.name].type,b.value,b.name,v._oContainingView.oController)}}};X.parseTemplate=function(x,v){var r=[];var c=undefined;var C=v.sViewName||v._sFragmentName;if(!C){var t=v;var L=0;while(++L<1000&&t&&t!==t._oContainingView){t=t._oContainingView}C=t.sViewName}if(v.isSubView()){a(x,true)}else{b(x)}return r;function a(x,R,I){if(x.nodeType===1){var s=l(x);if(x.namespaceURI==="http://www.w3.org/1999/xhtml"||x.namespaceURI==="http://www.w3.org/2000/svg"){r.push("<"+s+" ");var j;for(var i=0;i<x.attributes.length;i++){var k=x.attributes[i];var m=k.value;if(k.name==="id"){m=v._oContainingView.createId(m)}r.push(k.name+"=\""+q.sap.encodeHTML(m)+"\" ")}if(R===true){r.push("data-sap-ui-preserve"+"=\""+v.getId()+"\" ")}r.push(">");b(x);r.push("</"+s+">")}else if(s==="FragmentDefinition"&&x.namespaceURI==="sap.ui.core"){b(x,false,true)}else{var n=e(x);for(var i=0;i<n.length;i++){var o=n[i];if(v.getMetadata().hasAggregation("content")){v.addAggregation("content",o)}else if(v.getMetadata().hasAssociation(("content"))){v.addAssociation("content",o)}r.push(o)}}}else if(x.nodeType===3&&!I){var u=x.textContent||x.text,w=l(x.parentNode);if(u){if(w!="style"){u=q.sap.encodeHTML(u)}r.push(u)}}}function b(x,R,I){var j=x.childNodes;for(var i=0;i<j.length;i++){a(j[i],R,I)}}function f(n,s){var i;var m=sap.ui.getCore().getLoadedLibraries();q.each(m,function(j,k){if(n===k.namespace||n===k.name){i=k.name+"."+((k.tagNames&&k.tagNames[s])||s)}});i=i||n+"."+s;q.sap.require(i);var o=q.sap.getObject(i);if(o){return o}else{q.sap.log.error("Can't find object class '"+i+"' for XML-view","","XMLTemplateProcessor.js")}}function d(n){if(n.namespaceURI==="http://www.w3.org/1999/xhtml"||n.namespaceURI==="http://www.w3.org/2000/svg"){var i=n.attributes['id']?n.attributes['id'].textContent||n.attributes['id'].text:null;return[new sap.ui.core.mvc.XMLView({id:i?v._oContainingView.createId(i):undefined,xmlNode:n,containingView:v._oContainingView})]}else{return e(n)}}function e(n){if(l(n)==="ExtensionPoint"&&n.namespaceURI==="sap.ui.core"){return g(n,v)}else{return h(n)}}function g(n,v){var R=undefined;if(sap.ui.core.CustomizingConfiguration){var j=sap.ui.core.CustomizingConfiguration.getViewExtension(C,n.getAttribute("name"));if(j){if(j.className){q.sap.require(j.className);var o=q.sap.getObject(j.className);q.sap.log.info("Customizing: View extension found for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className+": "+(j.viewName||j.fragmentName));if(j.className==="sap.ui.core.Fragment"){var F=new o({type:j.type,fragmentName:j.fragmentName,containingView:v});R=(q.isArray(F)?F:[F])}else if(j.className==="sap.ui.core.mvc.View"){var v=sap.ui.view({type:j.type,viewName:j.viewName});R=[v]}else{q.sap.log.warning("Customizing: Unknown extension className configured (and ignored) in Component.js for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className)}}else{q.sap.log.warning("Customizing: no extension className configured in Component.js for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className)}}else{q.sap.log.debug("Customizing: no View extension found for ExtensionPoint '"+n.getAttribute("name")+"' in View '"+C+"'.")}}if(!R){R=[];var k=n.childNodes;for(var i=0;i<k.length;i++){var m=k[i];if(m.nodeType===1){R=q.merge(R,d(m))}}}return R||[]}function h(n){var j=n.namespaceURI,o=f(j,l(n)),s={},S="",k=[],O;if(!o){return[]}var m=o.getMetadata();var J=m.getJSONKeys();for(var i=0;i<n.attributes.length;i++){var u=n.attributes[i];var N=u.name;var V=u.value;var I=J[N];if(N==="id"){s[N]=v._oContainingView.createId(V);O=V}else if(N==="class"){S+=V}else if(N==="viewName"){s[N]=V}else if(N==="fragmentName"){s[N]=V;s['containingView']=v._oContainingView}else if(N==="binding"){var B=sap.ui.base.ManagedObject.bindingParser(V,v._oContainingView.oController);s.objectBindings=s.objectBindings||{};s.objectBindings[B.model||undefined]=B}else if(N.indexOf(":")>-1){if(u.namespaceURI==="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"){var w=l(u);k.push(new sap.ui.core.CustomData({key:w,value:p("any",V,w,v._oContainingView.oController)}))}else if(N.indexOf("xmlns:")!==0){q.sap.log.warning(v+": XMLView parser encountered and ignored attribute '"+N+"' (value: '"+V+"') with unknown namespace")}}else if(I&&I._iKind===0){s[N]=p(I.type,V,N,v._oContainingView.oController)}else if(I&&I._iKind===1&&I.altTypes){s[N]=p(I.altTypes[0],V,N,v._oContainingView.oController)}else if(I&&I._iKind===2){var B=sap.ui.base.ManagedObject.bindingParser(V,v._oContainingView.oController);if(B){s[N]=B}else{q.sap.log.error(v+": aggregations with cardinality 0..n only allow binding paths as attribute value (wrong value: "+N+"='"+V+"')")}}else if(I&&I._iKind===3){s[N]=v._oContainingView.createId(V)}else if(I&&I._iKind===4){s[N]=q.map(V.split(/[\s,]+/g),function(G){return G?v._oContainingView.createId(G):null})}else if(I&&I._iKind===5){var E=v._oContainingView.oController[V];if(typeof(E)!=="function"){q.sap.log.warning(v+": event handler function \""+V+"\" is not a function or does not exist in the controller.")}if(E){E["_sapui_handlerName"]=V;s[N]=[E,v._oContainingView.oController]}}else if(N!=="xmlns"){q.sap.log.warning(v+": XMLTemplateProcessor encountered and ignored unknown attribute '"+N+"' (value: '"+V+"')")}}if(k.length>0){s.customData=k}function y(n,A,z){var G,H;for(G=n.firstChild;G;G=G.nextSibling){if(G.nodeType===1){H=G.namespaceURI===j&&z&&z[l(G)];if(H){y(G,H)}else if(A){var K=d(G);for(var i=0;i<K.length;i++){var M=K[i];var P=A._sName;if(A.multiple){if(!s[P]){s[P]=[]}if(typeof s[P].path==="string"){s[P].template=M}else{s[P].push(M)}}else{s[P]=M}}}else if(l(n)!=="FragmentDefinition"||n.namespaceURI!=="sap.ui.core"){throw new Error("Cannot add direct child without default aggregation defined for control "+m.getElementName())}}else if(G.nodeType===3){if(q.trim(G.textContent||G.text)){throw new Error("Cannot add text nodes as direct child of an aggregation. For adding text to an aggregation, a surrounding html tag is needed")}}}}var A=m.getDefaultAggregation();var z=m.getAllAggregations();y(n,A,z);if(sap.ui.core.CustomizingConfiguration&&O){var D=sap.ui.core.CustomizingConfiguration.getCustomProperties(C,O);if(D){s=q.extend(s,D);q.sap.log.info("Customizing: Control modification found for Control '"+O+"' in View '"+C+"': "+JSON.stringify(D))}else{if(document.location.search.indexOf("sap-ui-xx-debugCustomizing")>-1){q.sap.log.debug("Customizing: no Control modification found for Control '"+O+"' in View '"+C+"'.")}}}var F;if(sap.ui.core.mvc.View.prototype.isPrototypeOf(o.prototype)&&typeof o._sType==="string"){F=sap.ui.view(s,undefined,o._sType)}else{F=new o(s)}if(S&&F.addStyleClass){F.addStyleClass(S)}if(!F){F=[]}else if(!q.isArray(F)){F=[F]}return F}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.delegate.ScrollEnablement')){jQuery.sap.declare('sap.ui.core.delegate.ScrollEnablement');sap.ui.define("sap/ui/core/delegate/ScrollEnablement",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var $=q;var S=B.extend("sap.ui.core.delegate.ScrollEnablement",{constructor:function(c,s,C){B.apply(this);this._oControl=c;this._oControl.addDelegate(this);this._sContentId=s;this._bHorizontal=!!C.horizontal;this._bVertical=!!C.vertical;this._scrollX=0;this._scrollY=0;this._scroller=null;this._scrollbarClass=C.scrollbarClass||false;this._bounce=C.bounce;a(this,C);if(this._init){this._init.apply(this,arguments)}},setHorizontal:function(h){this._bHorizontal=!!h;if(this._scroller){if(this._zynga){this._scroller.options.scrollingX=this._bHorizontal}else{this._scroller.hScroll=this._scroller.hScrollbar=this._bHorizontal;this._scroller._scrollbar('h')}}else if(this._setOverflow){this._setOverflow()}},setVertical:function(v){this._bVertical=!!v;if(this._scroller){if(this._zynga){this._scroller.options.scrollingY=this._bVertical}else{this._scroller.vScroll=this._scroller.vScrollbar=this._bVertical;this._scroller._scrollbar('v')}}else if(this._setOverflow){this._setOverflow()}},getHorizontal:function(){return this._bHorizontal},getVertical:function(){return this._bVertical},setBounce:function(b){this._bounce=!!b},setPullDown:function(c){this._oPullDown=c;return this},setGrowingList:function(g,s){this._oGrowingList=g;this._fnScrollLoadCallback=q.proxy(s,g);return this},setIconTabBar:function(I,s,f){this._oIconTabBar=I;this._fnScrollEndCallback=q.proxy(s,I);this._fnScrollStartCallback=q.proxy(f,I);return this},scrollTo:function(x,y,t){this._scrollX=x;this._scrollY=y;this._scrollTo(x,y,t);return this},destroy:function(){if(this._exit){this._exit()}if(this._oControl){this._oControl.removeDelegate(this);this._oControl=undefined}},refresh:function(){if(this._refresh){this._refresh()}}});var i={getScrollTop:function(){return this._scrollY},getScrollLeft:function(){return this._scrollX},getMaxScrollTop:function(){return this._scroller?-this._scroller.maxScrollY:0},_scrollTo:function(x,y,t){this._scroller&&this._scroller.scrollTo(-x,-y,t,false)},_refresh:function(){if(this._scroller&&this._sScrollerId){var s=$.sap.domById(this._sScrollerId);if(s&&(s.offsetHeight>0)){this._bIgnoreScrollEnd=true;this._scroller.refresh();this._bIgnoreScrollEnd=false;if(-this._scrollX!=this._scroller.x||-this._scrollY!=this._scroller.y){this._scroller.scrollTo(-this._scrollX,-this._scrollY,0)}if(this._scroller.wrapper&&this._scroller.wrapper.scrollTop){this._scroller.wrapper.scrollTop=0}}}},_cleanup:function(){this._toggleResizeListeners(false);if(this._scroller){this._scroller.stop();this._scrollX=-this._scroller.x;var s=$.sap.domById(this._sScrollerId);if(s&&(s.offsetHeight>0)){this._scrollY=-this._scroller.y}this._scroller.destroy();this._scroller=null}},_toggleResizeListeners:function(t){if(this._sScrollerResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sScrollerResizeListenerId);this._sScrollerResizeListenerId=null}if(this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}if(t&&this._sContentId&&$.sap.domById(this._sContentId)){var b=$.proxy(this._refresh,this);this._sScrollerResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sScrollerId),b);this._sContentResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sContentId),b)}},onBeforeRendering:function(){this._cleanup()},onfocusin:function(e){if(S._bScrollToInput&&sap.ui.Device.os.android){var b=e.srcElement;this._sTimerId&&q.sap.clearDelayedCall(this._sTimerId);if(b&&b.nodeName&&(b.nodeName.toUpperCase()==="INPUT"||b.nodeName.toUpperCase()==="TEXTAREA")){this._sTimerId=q.sap.delayedCall(400,this,function(){var o=this._scroller._offset(b);o.top+=48;this._scroller.scrollTo(o.left,o.top)})}}},onAfterRendering:function(){var t=this,b=(this._bounce!==undefined)?this._bounce:sap.ui.Device.os.ios;var c=$.sap.byId(this._sContentId);this._sScrollerId=c.parent().attr("id");var d=(!!sap.ui.Device.os.android&&!sap.ui.Device.browser.chrome&&(sap.ui.Device.os.version==4||!sap.ui.Device.os.versionStr.indexOf("2.3.4"))&&c.find("input,textarea").length);this._iTopOffset=this._oPullDown&&this._oPullDown.getDomRef&&this._oPullDown.getDomRef().offsetHeight||0;var x=this._scrollX||0,y=this._scrollY||0;if(sap.ui.getCore().getConfiguration().getRTL()){c.attr("dir","rtl");var p=c.parent();p.attr("dir","ltr");if(!this._bScrollPosInitialized){x=this._scrollX=c.width()-p.width();this._bScrollPosInitialized=true}}this._scroller=new window.iScroll(this._sScrollerId,{useTransition:true,useTransform:!d,hideScrollbar:true,fadeScrollbar:true,bounce:!!b,momentum:true,handleClick:false,hScroll:this._bHorizontal,vScroll:this._bVertical,x:-x,y:-y,topOffset:this._iTopOffset,scrollbarClass:this._scrollbarClass,onBeforeScrollStart:function(e){if(t._isScrolling){e.stopPropagation();e.preventDefault()}},onScrollEnd:function(){if(!t._bIgnoreScrollEnd&&t._scroller){t._scrollX=-t._scroller.x;t._scrollY=-t._scroller.y}if(t._oPullDown){t._oPullDown.doScrollEnd()}if(t._oGrowingList&&t._fnScrollLoadCallback){var e=Math.floor(this.wrapperH/4);var I=-this.maxScrollY+this.y<e;if(this.dirY>0&&I){t._fnScrollLoadCallback()}}if(t._oIconTabBar&&t._fnScrollEndCallback){t._fnScrollEndCallback()}t._isScrolling=false},onRefresh:function(){if(t._oPullDown){t._oPullDown.doRefresh()}t._toggleResizeListeners(true)},onScrollMove:function(e){if(!t._isScrolling){var r=/(INPUT|TEXTAREA)/i,A=document.activeElement;if(r.test(A.tagName)&&e.target!==A){A.blur()}}t._isScrolling=true;if(t._oPullDown){t._oPullDown.doScrollMove()}if(t._oIconTabBar&&t._fnScrollStartCallback){t._fnScrollStartCallback()}}});for(var P=this._oControl;P=P.oParent;){var s=P.getScrollDelegate?P.getScrollDelegate():null;if(s&&(s.getVertical()&&this.getVertical()||s.getHorizontal()&&this.getHorizontal())){this._scroller._sapui_isNested=true;break}}this._scroller._move=function(e){if(e._sapui_handledByControl&&!e._sapui_scroll){return}if(this._sapui_isNested){e._sapui_handledByControl=!(this.dirY<0&&this.y>=0)&&!(this.dirY>0&&this.y<=this.maxScrollY)&&!(this.dirX<0&&this.x>=0)&&!(this.dirX>0&&this.x<=this.maxScrollX)}window.iScroll.prototype._move.call(this,e)};var o=c.parent()[0];if(o&&(o.offsetHeight>0)){if(this._scrollX!=-this._scroller.x||this._scrollY!=-this._scroller.y){this._scroller.scrollTo(-this._scrollX,-this._scrollY,0)}}this._toggleResizeListeners(true)},ontouchmove:function(e){if(this._preventTouchMoveDefault){e.preventDefault()}}};var z={_refresh:function(){if(this._scroller&&this._sContentId&&$.sap.domById(this._sContentId)){var c=$.sap.byId(this._sContentId);var C=c.parent();this._scroller.setDimensions(C.width(),C.height(),c.width(),c.height())}},_cleanup:function(){if(this._sScrollerResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sScrollerResizeListenerId);this._sScrollerResizeListenerId=null}if(this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}if(this._scroller){var v=this._scroller.getValues();this._scrollX=v.left;this._scrollY=v.top}},_scrollTo:function(x,y,t){if(this._scroller){if(!isNaN(t)){this._scroller.options.animationDuration=t}this._scroller.scrollTo(x,y,!!t)}},onBeforeRendering:function(){this._cleanup()},onAfterRendering:function(){this._refresh();this._scroller.scrollTo(this._scrollX,this._scrollY,false);this._sContentResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sContentId),$.proxy(function(){if((!this._sContentId||!$.sap.domById(this._sContentId))&&this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}else{this._refresh()}},this))},ontouchstart:function(e){if(e.target.tagName.match(/input|textarea|select/i)){return}this._scroller.doTouchStart(e.touches,e.timeStamp)},ontouchend:function(e){this._scroller.doTouchEnd(e.timeStamp)},ontouchmove:function(e){this._scroller.doTouchMove(e.touches,e.timeStamp);if(this._preventTouchMoveDefault){e.preventDefault()}else{e.stopPropagation()}}};var n={getScrollTop:function(){return this._scrollY||0},getScrollLeft:function(){return this._scrollX||0},getMaxScrollTop:function(){return(this._$Container&&this._$Container.length)?this._$Container[0].scrollHeight-this._$Container.height():-1},_setOverflow:function(){var c=this._$Container;if(!c||!c[0])return;c.css("z-index","0");if(sap.ui.Device.os.ios){c.css("overflow-x",this._bHorizontal?"scroll":"hidden").css("overflow-y",this._bVertical?"scroll":"hidden").css("-webkit-overflow-scrolling","touch")}else{c.css("overflow-x",this._bHorizontal&&!this._bDragScroll?"auto":"hidden").css("overflow-y",this._bVertical&&!this._bDragScroll?"auto":"hidden")}},_refresh:function(){var c=this._$Container;if(!c||!c.height())return;var C=$.sap.byId(this._sContentId);if(this._oPullDown&&this._oPullDown._bTouchMode){var d=this._oPullDown.getDomRef();if(d){d.style.marginTop=this._oPullDown._iState==2?"":"-"+d.offsetHeight+"px"}}if(c.scrollTop()!=this._scrollY){c.scrollTop(this._scrollY)}if(!(this._oPullDown&&this._oPullDown._bTouchMode)&&!this._fnScrollLoadCallback&&!!!sap.ui.Device.browser.internet_explorer){sap.ui.core.ResizeHandler.deregister(this._sResizeListenerId);this._sResizeListenerId=null}},_onScroll:function(e){var c=this._$Container;if(this._oIOSScroll&&this._oIOSScroll.bMomentum){var y=Math.abs(this._scrollY-c.scrollTop());if(y>0&&y<10||e.timeStamp-this._oIOSScroll.iTimeStamp>120){q.sap.log.debug("IOS Momentum Scrolling is OFF");this._oIOSScroll.bMomentum=false}}this._scrollX=c.scrollLeft();this._scrollY=c.scrollTop();if(this._fnScrollLoadCallback&&c[0].scrollHeight-c.scrollTop()-c.height()<100){this._fnScrollLoadCallback()}if(this._oIconTabBar&&this._fnScrollEndCallback){this._fnScrollEndCallback()}},_onStart:function(e){var c=this._$Container[0];if(!c)return;this._bDoDrag=this._bDragScroll;if(!this._scrollable){this._scrollable={}}this._scrollable.vertical=this._bVertical&&c.scrollHeight>c.clientHeight;this._scrollable.horizontal=this._bHorizontal&&c.scrollWidth>c.clientWidth;if(this._oIOSScroll&&this._oIOSScroll.bMomentum){q.sap.log.debug("IOS Momentum Scrolling: prevent tap event");e.stopPropagation();this._oIOSScroll.bMomentum=false}var p=e.touches?e.touches[0]:e;this._iX=p.pageX;this._iY=p.pageY;if(this._oIOSScroll){if(!this._scrollable.vertical){this._oIOSScroll.iTopDown=0}else if(c.scrollTop===0){this._oIOSScroll.iTopDown=1}else if(c.scrollTop===c.scrollHeight-c.clientHeight){this._oIOSScroll.iTopDown=-1}else{this._oIOSScroll.iTopDown=0}}this._bPullDown=false;this._iDirection=""},_onTouchMove:function(e){var c=this._$Container[0];var p=e.touches[0];var d=p.pageX-this._iX;var b=p.pageY-this._iY;if(this._iDirection==""){if(d!=0||b!=0){this._iDirection=Math.abs(b)>Math.abs(d)?"v":"h"}if(this._oPullDown&&this._oPullDown._bTouchMode&&this._iDirection=="v"&&c.scrollTop<=1){if(b>Math.abs(d)){this._bPullDown=true}}}if(this._oIOSScroll&&this._oIOSScroll.iTopDown&&b!=0){if(b*this._oIOSScroll.iTopDown>0){this._bDoDrag=true}}if(this._bPullDown===true){var f=this._oPullDown.getDomRef();var t=e.touches[0].pageY-this._iY-f.offsetHeight;if(t>20)t=20;f.style.marginTop=t+"px";this._oPullDown.doPull(t);e.preventDefault();this._bDoDrag=false}if(this._bDoDrag){c.scrollLeft=c.scrollLeft+this._iX-p.pageX;c.scrollTop=c.scrollTop+this._iY-p.pageY;this._iX=p.pageX;this._iY=p.pageY;e.setMarked();e.preventDefault();return}if(this._oIOSScroll&&!this._bDoDrag&&this._iDirection=="v"&&Math.abs(e.touches[0].pageY-this._iY)>=10){this._oIOSScroll.bMomentum=true;this._oIOSScroll.iTimeStamp=e.timeStamp}if(!this._oIOSScroll||this._scrollable.vertical||this._scrollable.horizontal&&this._iDirection=="h"){e.setMarked()}if(window.iScroll){e.setMarked("scroll")}},_onEnd:function(e){if(this._oIOSScroll&&this._oIOSScroll.bMomentum){this._oIOSScroll.iTimeStamp=e.timeStamp}if(this._oPullDown&&this._oPullDown._bTouchMode){this._oPullDown.doScrollEnd();this._refresh()}if(this._bDragScroll&&this._iDirection){e.setMarked()}},_onMouseDown:function(e){if(e.button==0){this._bScrolling=true;this._onStart(e)}},_onMouseMove:function(E){if(this._bScrolling){var e=E.originalEvent;var b=e.buttons||e.which;if(b==1){var c=this._$Container[0];c.scrollLeft=c.scrollLeft+this._iX-E.pageX;c.scrollTop=c.scrollTop+this._iY-E.pageY;this._iX=E.pageX;this._iY=E.pageY}}},_onMouseUp:function(e){this._bScrolling=false;this._onEnd()},onBeforeRendering:function(){if(this._sResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sResizeListenerId);this._sResizeListenerId=null}var c=this._$Container;if(c){if(c.height()>0){this._scrollX=c.scrollLeft();this._scrollY=c.scrollTop()}c.off()}},onAfterRendering:function(){var c=this._$Container=$.sap.byId(this._sContentId).parent();var _=q.proxy(this._refresh,this);this._setOverflow();this._scrollTo(this._scrollX,this._scrollY);this._refresh();if(!c.is(":visible")||!!sap.ui.Device.browser.internet_explorer||this._oPullDown||this._fnScrollLoadCallback){this._sResizeListenerId=sap.ui.core.ResizeHandler.register(c[0],_)}c.scroll(q.proxy(this._onScroll,this));if(sap.ui.Device.support.touch){c.on("touchcancel touchend",q.proxy(this._onEnd,this)).on("touchstart",q.proxy(this._onStart,this)).on("touchmove",q.proxy(this._onTouchMove,this))}else if(this._bDragScroll){c.on("mouseup mouseleave",q.proxy(this._onMouseUp,this)).mousedown(q.proxy(this._onMouseDown,this)).mousemove(q.proxy(this._onMouseMove,this))}},_readActualScrollPosition:function(){if(this._$Container.width()>0){this._scrollX=this._$Container.scrollLeft()}if(this._$Container.height()>0){this._scrollY=this._$Container.scrollTop()}},_scrollTo:function(x,y,t){if(this._$Container.length>0){if(t>0){this._$Container.animate({scrollTop:y,scrollLeft:x},t,q.proxy(this._readActualScrollPosition,this))}else{this._$Container.scrollTop(y);this._$Container.scrollLeft(x);this._readActualScrollPosition()}}}};function a(s,c){var d;if(!sap.ui.Device.support.touch&&!$.sap.simulateMobileOnDesktop&&!c.nonTouchScrolling){return}if(sap.ui.Device.support.touch||$.sap.simulateMobileOnDesktop){$.sap.require("jquery.sap.mobile")}d={_init:function(C,b,c){function e(f,h,v){var o=new window.Scroller(function(j,t,k){var m=$.sap.byId(f).parent();m.scrollLeft(j);m.scrollTop(t)},{scrollingX:h,scrollingY:v,bouncing:false});return o}function g(){if(c.zynga){return"z"}if(sap.ui.Device.os.android&&sap.ui.Device.os.version<4.1||sap.ui.Device.os.blackberry||sap.ui.Device.os.ios&&sap.ui.Device.os.version<6){return"i"}if(!sap.ui.Device.support.touch&&$.sap.simulateMobileOnDesktop){return"i"}if(c.iscroll=="force"||(sap.ui.Device.support.touch&&(c.iscroll||sap.ui.getCore().getConfiguration().getNoNativeScroll()))){return"i"}return"n"}var l=g();this._preventTouchMoveDefault=!!c.preventDefault;this._scroller=null;switch(l){case"z":$.sap.require("sap.ui.thirdparty.zyngascroll");$.extend(this,z);this._zynga=true;this._scroller=e(this._sContentId,this._bHorizontal,this._bVertical);break;case"i":$.sap.require("sap.ui.thirdparty.iscroll");$.extend(this,i);this._bIScroll=true;break;default:if($.mobile&&$.event.special.swipe&&$.event.special.swipe.scrollSupressionThreshold<120){$.event.special.swipe.scrollSupressionThreshold=120}$.extend(this,n);if(c.nonTouchScrolling===true){this._bDragScroll=true}if(sap.ui.getCore().getConfiguration().getRTL()){this._scrollX=9999}if(sap.ui.Device.os.ios){this._oIOSScroll={iTimeStamp:0,bMomentum:false}}break}},_exit:function(){if(this._cleanup){this._cleanup()}this._scroller=null}};$.extend(s,d)}return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.ViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.ViewRenderer');sap.ui.define("sap/ui/core/mvc/ViewRenderer",['jquery.sap.global'],function(q){"use strict";var V={};V.addDisplayClass=function(r,c){if(c.getDisplayBlock()||(c.getWidth()==="100%"&&c.getHeight()==="100%")){r.addClass("sapUiViewDisplayBlock")}};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.XMLViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.XMLViewRenderer');sap.ui.define("sap/ui/core/mvc/XMLViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var X={};X.render=function(r,c){var $=c._$oldContent=sap.ui.core.RenderManager.findPreservedContent(c.getId());if($.length===0){var s=c.isSubView();if(!s){r.write("<div");r.writeControlData(c);r.addClass("sapUiView");r.addClass("sapUiXMLView");V.addDisplayClass(r,c);r.writeAttribute("data-sap-ui-preserve",c.getId());if(c.getWidth()){r.addStyle("width",c.getWidth())}if(c.getHeight()){r.addStyle("height",c.getHeight())}r.writeStyles();r.writeClasses();r.write(">")}for(var i=0;i<c._aParsedContent.length;i++){var f=c._aParsedContent[i];if(f&&typeof(f)==="string"){r.write(f)}else{r.renderControl(f);if(!f.bOutput){r.write('<div id="sap-ui-dummy-'+f.getId()+'" class="sapUiHidden"/>')}}}if(!s){r.write("</div>")}}else{r.renderControl(c.oAfterRenderingNotifier);r.write('<div id="sap-ui-dummy-'+c.getId()+'" class="sapUiHidden">');for(var i=0;i<c._aParsedContent.length;i++){var f=c._aParsedContent[i];if(typeof(f)!=="string"){q.sap.byId(f.getId(),$).replaceWith('<div id="sap-ui-dummy-'+f.getId()+'" class="sapUiHidden"/>');r.renderControl(f)}}r.write('</div>')}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMElementRenderer')){jQuery.sap.declare('sap.ui.core.tmpl.DOMElementRenderer');sap.ui.define("sap/ui/core/tmpl/DOMElementRenderer",['jquery.sap.global'],function(q){"use strict";var D={};D.render=function(r,e){r.write("<");r.write(e.getTag());r.writeControlData(e);q.each(e.getAttributes(),function(i,a){var n=a.getName().toLowerCase();if(n==="class"){var c=a.getValue().split(" ");q.each(c,function(i,C){var C=C.trim();if(C){r.addClass(C)}})}else if(n==="style"){var s=a.getValue().split(";");q.each(s,function(i,S){var i=S.indexOf(":");if(i!=-1){var k=S.substring(0,i).trim();var v=S.substring(i+1).trim();r.addStyle(k,v)}})}else{r.writeAttributeEscaped(a.getName(),a.getValue())}});r.writeClasses();r.writeStyles();var E=e.getElements(),h=!!e.getText()||E.length>0;if(!h){r.write("/>")}else{r.write(">");if(e.getText()){r.writeEscaped(e.getText())}q.each(E,function(i,c){r.renderControl(c)});r.write("</");r.write(e.getTag());r.write(">")}};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.TemplateControlRenderer')){jQuery.sap.declare('sap.ui.core.tmpl.TemplateControlRenderer');sap.ui.define("sap/ui/core/tmpl/TemplateControlRenderer",['jquery.sap.global'],function(q){"use strict";var T={};T.render=function(r,c){var s=c.isInline()||this.hasControlData;if(!s){r.write("<div");r.writeControlData(c);r.writeStyles();r.writeClasses();r.write(">")}var R=this.renderTemplate||c.getTemplateRenderer();if(R){R.apply(this,arguments)}if(!s){r.write("</div>")}};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.File')){jQuery.sap.declare('sap.ui.core.util.File');sap.ui.define("sap/ui/core/util/File",['jquery.sap.global','sap/ui/Device'],function(q,D){'use strict';var F={save:function(d,f,s,m,c){var a=f+'.'+s;if(c==='utf-8'&&s==='csv'){d='\ufeff'+d}if(window.Blob){var t='data:'+m;if(c){t+=';charset='+c}var b=new window.Blob([d],{type:t});if(window.navigator.msSaveOrOpenBlob){window.navigator.msSaveOrOpenBlob(b,a)}else{var u=window.URL||window.webkitURL;var B=u.createObjectURL(b);var l=window.document.createElement('a');if('download'in l){var $=q(document.body);var e=q(l).attr({download:a,href:B,style:'display:none'});$.append(e);e.get(0).click();e.remove()}else{if(d&&c==='utf-8'&&s==='csv'){d=d.substr(1)}window.open(t+";base64,"+window.btoa(d))}}}else if(D.browser.internet_explorer&&D.browser.version<=9){var $=q(document.body);var g=q('<iframe/>',{style:'display:none'});$.append(g);var o=g.get(0).contentWindow.document;o.open(m,'replace');if(c){o.charset=c}o.write(d);o.close();var T=new Date();var S=o.execCommand('SaveAs',false,a);if(!S&&new Date()-T<10){o.execCommand('SaveAs',false,a+'.txt')}g.remove()}}};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.LibraryInfo')){jQuery.sap.declare('sap.ui.core.util.LibraryInfo');sap.ui.define("sap/ui/core/util/LibraryInfo",['jquery.sap.global','sap/ui/base/Object','jquery.sap.script'],function(q,B){"use strict";var L=B.extend("sap.ui.core.util.LibraryInfo",{constructor:function(){B.apply(this);this._oLibInfos={}},destroy:function(){B.prototype.destroy.apply(this,arguments);this._oLibInfos={}},getInterface:function(){return this}});L.prototype._loadLibraryMetadata=function(l,c){l=l.replace(/\//g,".");if(this._oLibInfos[l]){q.sap.delayedCall(0,window,c,[this._oLibInfos[l]]);return}var u=q.sap.getModulePath(l,'/'),t=this;q.ajax({url:u+".library",dataType:"xml",error:function(x,s,e){q.sap.log.error("failed to load library details from '"+u+".library': "+s+", "+e);t._oLibInfos[l]={name:l,data:null,url:u};c(t._oLibInfos[l])},success:function(d,s,x){t._oLibInfos[l]={name:l,data:d,url:u};c(t._oLibInfos[l])}})};L.prototype._getLibraryInfo=function(l,c){this._loadLibraryMetadata(l,function(d){var r={libs:[],library:d.name,libraryUrl:d.url};if(d.data){var $=q(d.data);r.vendor=$.find("vendor").text();r.copyright=$.find("copyright").text();r.version=$.find("version").text();r.documentation=$.find("documentation").text()}c(r)})};L.prototype._getThirdPartyInfo=function(l,c){this._loadLibraryMetadata(l,function(d){var r={libs:[],library:d.name,libraryUrl:d.url};if(d.data){var $=q(d.data).find("appData").find("thirdparty").children();$.each(function(i,o){if(o.nodeName==="lib"){var a=q(o);var b=a.children("license");r.libs.push({displayName:a.attr("displayName"),homepage:a.attr("homepage"),version:a.attr("version"),license:{url:b.attr("url"),type:b.attr("type"),file:d.url+b.attr("file")}})}})}c(r)})};L.prototype._getDocuIndex=function(l,c){this._loadLibraryMetadata(l,function(d){var a=d.name,b=d.url,r={"docu":{},library:a,libraryUrl:b};if(!d.data){c(r);return}var D=q(d.data).find("appData").find("documentation");var u=D.attr("indexUrl");if(!u){c(r);return}if(D.attr("resolve")=="lib"){u=d.url+u}q.ajax({url:u,dataType:"json",error:function(x,s,e){q.sap.log.error("failed to load library docu from '"+u+"': "+s+", "+e);c(r)},success:function(d,s,x){d.library=a;d.libraryUrl=b;c(d)}})})};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.ReadyState')){jQuery.sap.declare('sap.ui.core.ws.ReadyState');sap.ui.define("sap/ui/core/ws/ReadyState",['jquery.sap.global'],function(q){"use strict";var R={CONNECTING:0,OPEN:1,CLOSING:2,CLOSED:3};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.model.BindingMode')){jQuery.sap.declare('sap.ui.model.BindingMode');sap.ui.define("sap/ui/model/BindingMode",['jquery.sap.global'],function(q){"use strict";var B={Default:"Default",OneTime:"OneTime",OneWay:"OneWay",TwoWay:"TwoWay"};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ChangeReason')){jQuery.sap.declare('sap.ui.model.ChangeReason');sap.ui.define("sap/ui/model/ChangeReason",['jquery.sap.global'],function(q){"use strict";var C={Sort:"sort",Filter:"filter",Change:"change",Context:"context",Refresh:"refresh"};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FilterOperator')){jQuery.sap.declare('sap.ui.model.FilterOperator');sap.ui.define("sap/ui/model/FilterOperator",['jquery.sap.global'],function(q){"use strict";var F={EQ:"EQ",NE:"NE",LT:"LT",LE:"LE",GT:"GT",GE:"GE",BT:"BT",Contains:"Contains",StartsWith:"StartsWith",EndsWith:"EndsWith"};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FilterType')){jQuery.sap.declare('sap.ui.model.FilterType');sap.ui.define("sap/ui/model/FilterType",['jquery.sap.global'],function(q){"use strict";var F={Application:"Application",Control:"Control"};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FormatException')){jQuery.sap.declare('sap.ui.model.FormatException');sap.ui.define("sap/ui/model/FormatException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var F=function(m){this.name="FormatException";this.message=m};F.prototype=q.sap.newObject(E.prototype);return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ParseException')){jQuery.sap.declare('sap.ui.model.ParseException');sap.ui.define("sap/ui/model/ParseException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var P=function(m){this.name="ParseException";this.message=m};P.prototype=q.sap.newObject(E.prototype);return P},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Sorter')){jQuery.sap.declare('sap.ui.model.Sorter');sap.ui.define("sap/ui/model/Sorter",['jquery.sap.global'],function(q){"use strict";var S=sap.ui.base.Object.extend("sap.ui.model.Sorter",{constructor:function(p,d,g){if(typeof p==="object"){var s=p;p=s.path;d=s.descending;g=s.group}this.sPath=p;var i=this.sPath.indexOf(">");if(i>0){this.sPath=this.sPath.substr(i+1)}this.bDescending=d;this.vGroup=g;if(typeof g=="boolean"&&g){this.fnGroup=function(c){return c.getProperty(this.sPath)}}if(typeof g=="function"){this.fnGroup=g}}});return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Type')){jQuery.sap.declare('sap.ui.model.Type');sap.ui.define("sap/ui/model/Type",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var T=B.extend("sap.ui.model.Type",{constructor:function(){B.apply(this,arguments);this.sName="Type"},metadata:{"abstract":true,publicMethods:["getName"]}});T.prototype.getName=function(){return this.sName};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ValidateException')){jQuery.sap.declare('sap.ui.model.ValidateException');sap.ui.define("sap/ui/model/ValidateException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var V=function(m,v){this.name="ValidateException";this.message=m;this.violatedConstraints=v};V.prototype=q.sap.newObject(E.prototype);return V},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.odata4analytics')){jQuery.sap.declare('sap.ui.model.analytics.odata4analytics');sap.ui.define("sap/ui/model/analytics/odata4analytics",['jquery.sap.global'],function(q){"use strict";var o=o||{};o.constants={};o.constants["SAP_NAMESPACE"]="http://www.sap.com/Protocols/SAPData";o.constants["VERSION"]="0.7";o.helper={tokenizeNametoLabelText:function(n){var l="";l=n.replace(/^P_(.*)/,"$1");l=l.replace(/([^A-Z0-9_]+)([A-Z0-9_])/g,"$1 $2");l=l.replace(/([A-Z0-9_]{2,})([A-Z0-9_])([^A-Z0-9_]+)/g,"$1 $2$3");l=l.replace(/(.*) _E$/,"$1");l=l.replace(/(.*) _(.*)/g,"$1 $2");return l}};o.Model=function(m,p){this._init(m,p)};o.Model.ReferenceByURI=function(u){return{sServiceURI:u}};o.Model.ReferenceByModel=function(m){return{oModel:m}};o.Model.ReferenceWithWorkaround=function(m,w){return{oModelReference:m,aWorkaroundID:w}};o.Model.prototype={_init:function(m,p){if(typeof p=="string"){throw"Deprecated second argument: Adjust your invocation by passing an object with a property sAnnotationJSONDoc as a second argument instead"}this._mParameter=p;this._oActivatedWorkarounds=new Object();if(m&&m.aWorkaroundID){for(var i=-1,I;I=m.aWorkaroundID[++i];){this._oActivatedWorkarounds[I]=true}m=m.oModelReference}if(!m||(!m.sServiceURI&&!m.oModel)){throw"Usage with oModelReference being an instance of Model.ReferenceByURI or Model.ReferenceByModel"}if(m.oModel)this._oModel=m.oModel;else this._oModel=new sap.ui.model.odata.ODataModel(m.sServiceURI);if(this._oModel.getServiceMetadata().dataServices==undefined){throw"Model could not be loaded"}if(p&&p.sAnnotationJSONDoc)this.mergeV2Annotations(p.sAnnotationJSONDoc);this._oQueryResultSet=new Object();this._oParameterizationSet=new Object();this._oEntityTypeSet=new Object();this._oEntitySetSet=new Object();this._oEntityTypeNameToEntitySetMap=new Object();var s=this._oModel.getServiceMetadata().dataServices.schema[0];for(var i=-1,c;c=s.entityContainer[++i];){if(c.isDefaultEntityContainer=="true"){this._oDefaultEntityContainer=c;break}}var e=s.entityType;var Q=[],P=[],u=[];for(var i=-1,t;t=e[++i];){var b=false;if(t.extensions!=undefined){for(var j=-1,E;E=t.extensions[++j];){if(E.namespace==o.constants.SAP_NAMESPACE&&E.name=="semantics"){b=true;switch(E.value){case"aggregate":Q.push(t);break;case"parameters":P.push(t);break;default:u.push(t)}}if(b)continue}if(!b)u.push(t)}else u.push(t)}for(var i=-1,t;t=u[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var d=this._getEntitySetsOfType(s,a.getQName());if(d.length==0)throw"Invalid consumption model: No entity set for entity type "+a.getQName()+" found";if(d.length>1)throw"Unsupported consumption model: More than one entity set for entity type "+a.getQName()+" found";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f}var g={};for(var i=-1,t;t=P[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var d=this._getEntitySetsOfType(s,a.getQName());if(d.length==0)throw"Invalid consumption model: No entity set for parameter entity type "+a.getQName()+" found";if(d.length>1)throw"Unsupported consumption model: More than one entity set for parameter entity type "+a.getQName()+" found";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f;var h=new o.Parameterization(a,f);this._oParameterizationSet[h.getName()]=h;g[a.getQName()]=h;var k=a.getQName();if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){if(A.referentialConstraint==undefined)continue;var l=null;if(A.end[0].type==k&&A.end[0].multiplicity=="*"&&A.end[1].multiplicity=="1"){l=A.end[1].type}else if(A.end[1].type==k&&A.end[1].multiplicity=="*"&&A.end[0].multiplicity=="1"){l=A.end[0].type}if(!l)continue;if(A.referentialConstraint.dependent.propertyRef.length!=1)continue;var n=h.findParameterByName(A.referentialConstraint.dependent.propertyRef[0].name);if(n==null)continue;var v=this._oEntityTypeSet[l];var V=this._oEntityTypeNameToEntitySetMap[l];n.setValueSetEntity(v,V)}}}for(var i=-1,t;t=Q[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var r=a.getQName();var h=null;var w=null;if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){var x=null;if(A.end[0].type==r)x=A.end[1].type;else if(A.end[1].type==r)x=A.end[0].type;else continue;var M=null;M=g[x];if(M!=null)if(h!=null){throw"LIMITATION: Unable to handle multiple parameter entity types of query entity "+a.name}else{h=M;w=A}}}var d=this._getEntitySetsOfType(s,a.getQName());if(d.length!=1)throw"Invalid consumption model: There must be exactly one entity set for an entity type annotated with aggregating semantics";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f;var y=new o.QueryResult(this,a,f,h);this._oQueryResultSet[y.getName()]=y;if(h)h.setTargetQueryResult(y,w);if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){if(A.referentialConstraint==undefined)continue;var D=null;if(A.end[0].type==r&&A.end[0].multiplicity=="*"&&A.end[1].multiplicity=="1"){D=A.end[1].type}else if(A.end[1].type==r&&A.end[1].multiplicity=="*"&&A.end[0].multiplicity=="1"){D=A.end[0].type}if(!D)continue;if(A.referentialConstraint.dependent.propertyRef.length!=1)continue;var z=y.findDimensionByName(A.referentialConstraint.dependent.propertyRef[0].name);if(z==null)continue;var B=this._oEntityTypeNameToEntitySetMap[D];z.setMembersEntitySet(B)}}}},oUI5ODataModelAnnotatableObject:{objectName:"schema",keyPropName:"namespace",extensions:true,aSubObject:[{objectName:"entityType",keyPropName:"name",extensions:true,aSubObject:[{objectName:"property",keyPropName:"name",aSubObject:[],extensions:true}]},{objectName:"entityContainer",keyPropName:"name",extensions:false,aSubObject:[{objectName:"entitySet",keyPropName:"name",extensions:true,aSubObject:[]}]}]},mergeV2Annotations:function(a){var A=null;try{A=JSON.parse(a)}catch(e){return}var m;try{m=this._oModel.getServiceMetadata().dataServices}catch(e){return}for(var p in A){if(!(this.oUI5ODataModelAnnotatableObject.objectName==p))continue;if(!(A[p]instanceof Array)){continue}this.mergeV2AnnotationLevel(m[this.oUI5ODataModelAnnotatableObject.objectName],A[this.oUI5ODataModelAnnotatableObject.objectName],this.oUI5ODataModelAnnotatableObject);break}return},mergeV2AnnotationLevel:function(M,a,u){for(var i=-1,A;A=a[++i];){for(var j=-1,b;b=M[++j];){if(!(A[u.keyPropName]==b[u.keyPropName]))continue;if(A["extensions"]!=undefined){if(b["extensions"]==undefined)b["extensions"]=new Array();for(var l=-1,c;c=A["extensions"][++l];){var f=false;for(var m=-1,d;d=b["extensions"][++m];){if(c.name==d.name&&c.namespace==d.namespace){d.value=c.value;f=true;break}}if(!f)b["extensions"].push(c)}}for(var k=-1,U;U=u.aSubObject[++k];){for(var p in A){if(!(U.objectName==p))continue;if(!(A[U.objectName]instanceof Array))continue;if((b[U.objectName]==undefined)||(!(b[U.objectName]instanceof Array)))continue;this.mergeV2AnnotationLevel(b[U.objectName],A[U.objectName],U);break}}}}return},findQueryResultByName:function(n){var Q=this._oQueryResultSet[n];if(!Q&&this._oDefaultEntityContainer){var s=this._oDefaultEntityContainer.name+"."+n;Q=this._oQueryResultSet[s]}return Q},getAllQueryResultNames:function(){if(this._aQueryResultNames)return this._aQueryResultNames;this._aQueryResultNames=new Array(0);for(var n in this._oQueryResultSet)this._aQueryResultNames.push(this._oQueryResultSet[n].getName());return this._aQueryResultNames},getAllQueryResults:function(){return this._oQueryResultSet},getODataModel:function(){return this._oModel},_getEntitySetsOfType:function(s,Q){var e=[];for(var i=-1,E;E=s.entityContainer[++i];){for(var j=-1,a;a=E.entitySet[++j];){if(a.entityType==Q)e.push([E,a])}}return e},_mParameter:null,_oModel:null,_oDefaultEntityContainer:null,_aQueryResultNames:null,_oQueryResultSet:null,_oParameterizationSet:null,_oEntityTypeSet:null,_oEntitySetSet:null,_oEntityTypeNameToEntitySetMap:null,_oActivatedWorkarounds:null};o.QueryResult=function(m,e,E,p){this._init(m,e,E,p)};o.QueryResult.prototype={_init:function(m,e,E,p,a){this._oModel=m;this._oEntityType=e;this._oEntitySet=E;this._oParameterization=p;this._oDimensionSet=new Object();this._oMeasureSet=new Object();var P=e.getTypeDescription().property;var A={};for(var i=-1,b;b=P[++i];){if(b.extensions==undefined)continue;for(var j=-1,c;c=b.extensions[++j];){if(!c.namespace==o.constants.SAP_NAMESPACE)continue;switch(c.name){case"aggregation-role":switch(c.value){case"dimension":var d=new o.Dimension(this,b);this._oDimensionSet[d.getName()]=d;break;case"measure":var M=new o.Measure(this,b);this._oMeasureSet[M.getName()]=M;break;case"totaled-properties-list":this._oTotaledPropertyListProperty=b;break}break;case"attribute-for":var D=new o.DimensionAttribute(this,b);A[D.getKeyProperty()]=D;break}}}for(var s in A){var D=A[s];D.getDimension().addAttribute(D)}if(m._oActivatedWorkarounds.IdentifyTextPropertiesByName){var f=new Array();for(var g in this._oDimensionSet){var d=this._oDimensionSet[g];if(!d.getTextProperty()){var t=null;t=e.findPropertyByName(g+"Name");if(!t)t=e.findPropertyByName(g+"Text");if(!t)t=e.findPropertyByName(g+"Desc");if(!t)t=e.findPropertyByName(g+"Description");if(t){d.setTextProperty(t);f.push(t.name)}}}for(var i=-1,h;h=f[++i];){delete this._oDimensionSet[h]}}},getName:function(){return this.getEntitySet().getQName()},getParameterization:function(){return this._oParameterization},getAllDimensionNames:function(){if(this._aDimensionNames)return this._aDimensionNames;this._aDimensionNames=[];for(var n in this._oDimensionSet)this._aDimensionNames.push(this._oDimensionSet[n].getName());return this._aDimensionNames},getAllDimensions:function(){return this._oDimensionSet},getAllMeasureNames:function(){if(this._aMeasureNames)return this._aMeasureNames;this._aMeasureNames=[];for(var n in this._oMeasureSet)this._aMeasureNames.push(this._oMeasureSet[n].getName());return this._aMeasureNames},getAllMeasures:function(){return this._oMeasureSet},findDimensionByName:function(n){return this._oDimensionSet[n]},findDimensionByPropertyName:function(n){if(this._oDimensionSet[n])return this._oDimensionSet[n];for(var d in this._oDimensionSet){var D=this._oDimensionSet[d];var t=D.getTextProperty();if(t&&t.name==n)return D;if(D.findAttributeByName(n))return D}return null},getTotaledPropertiesListProperty:function(){return this._oTotaledPropertyListProperty},findMeasureByName:function(n){return this._oMeasureSet[n]},findMeasureByPropertyName:function(n){if(this._oMeasureSet[n])return this._oMeasureSet[n];for(var m in this._oMeasureSet){var M=this._oMeasureSet[m];var f=M.getFormattedValueProperty();if(f&&f.name==n)return M}return null},getModel:function(){return this._oModel},getEntityType:function(){return this._oEntityType},getEntitySet:function(){return this._oEntitySet},_oModel:null,_oEntityType:null,_oEntitySet:null,_oParameterization:null,_aDimensionNames:null,_oDimensionSet:null,_aMeasureNames:null,_oMeasureSet:null,_oTotaledPropertyListProperty:null};o.Parameterization=function(e,E){this._init(e,E)};o.Parameterization.prototype={_init:function(e,E){this._oEntityType=e;this._oEntitySet=E;this._oParameterSet=new Object();var p=e.getTypeDescription().property;for(var i=-1,P;P=p[++i];){if(P.extensions==undefined)continue;for(var j=-1,a;a=P.extensions[++j];){if(!a.namespace==o.constants.SAP_NAMESPACE)continue;switch(a.name){case"parameter":var b=new o.Parameter(this,P);this._oParameterSet[b.getName()]=b;break}}}},setTargetQueryResult:function(Q,a){this._oQueryResult=Q;var s=this._oEntityType.getSchema().namespace+"."+a.name;var n=this._oEntityType.getTypeDescription().navigationProperty;if(!n)throw"Invalid consumption model: Parameters entity type lacks navigation property for association to query result entity type";for(var i=-1,N;N=n[++i];){if(N.relationship==s)this._oNavPropToQueryResult=N.name}if(!this._oNavPropToQueryResult)throw"Invalid consumption model: Parameters entity type lacks navigation property for association to query result entity type"},getTargetQueryResult:function(){if(!this._oQueryResult)throw"No target query result set";return this._oQueryResult},getName:function(){return this.getEntitySet().getQName()},getAllParameterNames:function(){if(this._aParameterNames)return this._aParameterNames;this._aParameterNames=[];for(var n in this._oParameterSet)this._aParameterNames.push(this._oParameterSet[n].getName());return this._aParameterNames},getAllParameters:function(){return this._oParameterSet},findParameterByName:function(n){return this._oParameterSet[n]},getNavigationPropertyToQueryResult:function(){return this._oNavPropToQueryResult},getEntityType:function(){return this._oEntityType},getEntitySet:function(){return this._oEntitySet},_oEntityType:null,_oEntitySet:null,_oQueryResult:null,_oNavPropToQueryResult:null,_aParameterNames:null,_oParameterSet:null};o.Parameter=function(p,P){this._init(p,P)};o.Parameter.prototype={_init:function(p,P){this._oParameterization=p;this._oProperty=P;var e=p.getEntityType();if(P.extensions!=undefined){for(var i=-1,E;E=P.extensions[++i];){if(!E.namespace==o.constants.SAP_NAMESPACE)continue;switch(E.name){case"parameter":switch(E.value){case"mandatory":this._bRequired=true;break;case"optional":this._bRequired=false;break;default:throw"Invalid annotation value for parameter property"}break;case"label":this._sLabelText=E.value;break;case"text":this._oTextProperty=e.findPropertyByName(E.value);break;case"upper-boundary":this._bIntervalBoundaryParameter=true;this._oUpperIntervalBoundaryParameterProperty=e.findPropertyByName(E.value);break;case"lower-boundary":this._bIntervalBoundaryParameter=true;this._oLowerIntervalBoundaryParameterProperty=e.findPropertyByName(E.value);break}}}if(!this._sLabelText)this._sLabelText=""},setValueSetEntity:function(e,E){this._oValueSetEntityType=e;this._oValueSetEntitySet=E},getTextProperty:function(){return this._oTextProperty},getLabelText:function(){if(!this._sLabelText&&this._oParameterization._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},isOptional:function(){return(!this._bRequired)},isIntervalBoundary:function(){return this._bIntervalBoundaryParameter},isLowerIntervalBoundary:function(){return(this._oUpperIntervalBoundaryParameterProperty?true:false)},getPeerIntervalBoundaryParameter:function(){var p=null;if(this._oLowerIntervalBoundaryParameterProperty)p=this._oLowerIntervalBoundaryParameterProperty.name;else p=this._oUpperIntervalBoundaryParameterProperty.name;if(!p)throw"Parameter is not an interval boundary";return this._oParameterization.findParameterByName(p)},isValueSetAvailable:function(){return(this._oValueSetEntityType?true:false)},getName:function(){return this._oProperty.name},getProperty:function(){return this._oProperty},getContainingParameterization:function(){return this._oParameterization},getURIToValueEntitySet:function(s){var u=null;u=(s?s:"")+"/"+this._oValueSetEntitySet.getQName();return u},_oParameterization:null,_oProperty:null,_sLabelText:null,_oTextProperty:null,_bRequired:false,_bIntervalBoundaryParameter:false,_oLowerIntervalBoundaryParameterProperty:null,_oUpperIntervalBoundaryParameterProperty:null,_oValueSetEntityType:null,_oValueSetEntitySet:null};o.Dimension=function(Q,p){this._init(Q,p)};o.Dimension.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;this._oAttributeSet=new Object()},setMembersEntitySet:function(e){this._oMembersEntitySet=e},getName:function(){return this._oProperty.name},getKeyProperty:function(){return this._oProperty},getTextProperty:function(){if(!this._oTextProperty)this._oTextProperty=this._oQueryResult.getEntityType().getTextPropertyOfProperty(this.getName());return this._oTextProperty},setTextProperty:function(t){this._oTextProperty=t},getLabelText:function(){if(!this._sLabelText)this._sLabelText=this._oQueryResult.getEntityType().getLabelOfProperty(this.getName());if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return(this._sLabelText==null?"":this._sLabelText)},getSuperOrdinateDimension:function(){if(!this._sSuperOrdinateDimension){var s=this._oQueryResult.getEntityType().getSuperOrdinatePropertyOfProperty(this.getName()).name;this._sSuperOrdinateDimension=this._oQueryResult.findDimensionByName(s)}return this._sSuperOrdinateDimension},getHierarchy:function(){if(!this._oHierarchy)this._oHierarchy=this._oQueryResult.getEntityType().getHierarchy(this._oProperty.name);return this._oHierarchy},getAllAttributeNames:function(){if(this._aAttributeNames)return this._aAttributeNames;this._aAttributeNames=[];for(var n in this._oAttributeSet)this._aAttributeNames.push(this._oAttributeSet[n].getName());return this._aAttributeNames},getAllAttributes:function(){return this._oAttributeSet},findAttributeByName:function(n){return this._oAttributeSet[n]},addAttribute:function(d){this._oAttributeSet[d.getName()]=d},getContainingQueryResult:function(){return this._oQueryResult},hasMasterData:function(){return this._oMembersEntitySet!=null?true:false},getMasterDataEntitySet:function(){return this._oMembersEntitySet},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_sSuperOrdinateDimension:null,_aAttributeNames:null,_oAttributeSet:null,_oMembersEntitySet:null,_oHierarchy:null};o.DimensionAttribute=function(Q,p){this._init(Q,p)};o.DimensionAttribute.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;if(p.extensions!=undefined){for(var i=-1,e;e=p.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;switch(e.name){case"attribute-for":this._sDimensionName=e.value;break;case"label":this._sLabelText=e.value;break;case"text":this._oTextProperty=Q.getEntityType().findPropertyByName(e.value);break}}}},getName:function(){return this._oProperty.name},getKeyProperty:function(){return this._oProperty},getTextProperty:function(){return this._oTextProperty},getLabelText:function(){if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},getDimension:function(){return this._oQueryResult.findDimensionByName(this._sDimensionName)},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_sDimensionName:null};o.Measure=function(Q,p){this._init(Q,p)};o.Measure.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;if(p.extensions!=undefined){for(var i=-1,e;e=p.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;switch(e.name){case"label":this._sLabelText=e.value;break;case"text":this._oTextProperty=Q.getEntityType().findPropertyByName(e.value);break;case"unit":this._oUnitProperty=Q.getEntityType().findPropertyByName(e.value);break}}}if(!this._sLabelText)this._sLabelText=""},getName:function(){return this._oProperty.name},getRawValueProperty:function(){return this._oProperty},getFormattedValueProperty:function(){return this._oTextProperty},getUnitProperty:function(){return this._oUnitProperty},getLabelText:function(){if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},isUpdatable:function(){if(this._bIsUpdatable!=null)return this._bIsUpdatable;var u=this._oQueryResult.getEntitySet().getUpdatablePropertyNameSet();return(u[this.getName()]!=undefined)},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_oUnitProperty:null,_bIsUpdatable:null};o.EntitySet=function(m,s,c,e,E){this._init(m,s,c,e,E)};o.EntitySet.prototype={_init:function(m,s,c,e,E){this._oEntityType=E;this._oEntitySet=e;this._oContainer=c;this._oSchema=s;this._oModel=m;if(s.entityContainer.length>1)this._sQName=c.name+"."+e.name;else this._sQName=e.name},getQName:function(){return this._sQName},getSetDescription:function(){return this._oEntitySet},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},getUpdatablePropertyNameSet:function(){if(this._oUpdatablePropertyNames)return this._oUpdatablePropertyNames;this._oUpdatablePropertyNames=new Object();var s=true;if(this._oEntitySet.extensions!=undefined){for(var j=-1,e;e=this._oEntitySet.extensions[++j];){if(e.namespace==o.constants.SAP_NAMESPACE&&e.name=="updatable"){if(e.value=="false"){s=false;break}}}}if(!s){return this._oUpdatablePropertyNames}var p=this._oEntityType.getTypeDescription().property;for(var i=-1,P;P=p[++i];){var b=true;if(P.extensions==undefined)continue;for(var j=-1,e;e=P.extensions[++j];){if(e.namespace!=o.constants.SAP_NAMESPACE)continue;if(e.name=="updatable"){if(e.value=="false"){b=false;break}}}if(b)this._oUpdatablePropertyNames[P.name]=true}return this._oUpdatablePropertyNames},_oEntityType:null,_oEntitySet:null,_oContainer:null,_oSchema:null,_oModel:null,_sQName:null,_oUpdatablePropertyNames:null};o.EntityType=function(m,s,e){this._init(m,s,e)};o.EntityType.propertyFilterRestriction={SINGLE_VALUE:"single-value",MULTI_VALUE:"multi-value",INTERVAL:"interval"};o.EntityType.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aKeyProperties=[];this._oPropertySet=new Object();this._aFilterablePropertyNames=[];this._aSortablePropertyNames=[];this._aRequiredFilterPropertyNames=[];this._oPropertyFilterRestrictionSet=new Object();this._oPropertyHeadingsSet={};this._oPropertyQuickInfosSet={};this._sQName=s.namespace+"."+e.name;var r={};var R=null;for(var i=-1,p;p=e.key.propertyRef[++i];){this._aKeyProperties.push(p.name)}for(var i=-1,P;P=e.property[++i];){this._oPropertySet[P.name]=P;this._aFilterablePropertyNames.push(P.name);this._aSortablePropertyNames.push(P.name);if(P.extensions==undefined)continue;for(var j=-1,E;E=P.extensions[++j];){if(!E.namespace==o.constants.SAP_NAMESPACE)continue;switch(E.name){case"filterable":if(E.value=="false")this._aFilterablePropertyNames.pop(P.name);break;case"sortable":if(E.value=="false")this._aSortablePropertyNames.pop(P.name);break;case"required-in-filter":if(E.value=="true")this._aRequiredFilterPropertyNames.push(P.name);break;case"filter-restriction":if(E.value==o.EntityType.propertyFilterRestriction.SINGLE_VALUE||E.value==o.EntityType.propertyFilterRestriction.MULTI_VALUE||E.value==o.EntityType.propertyFilterRestriction.INTERVAL)this._oPropertyFilterRestrictionSet[P.name]=E.value;break;case"hierarchy-node-for":if(!(R=r[P.name]))R=r[P.name]=new Object();R.dimensionName=E.value;break;case"hierarchy-parent-node-for":case"hierarchy-parent-nod":if(!(R=r[E.value]))R=r[E.value]=new Object();R.parentNodeIDProperty=P;break;case"hierarchy-level-for":if(!(R=r[E.value]))R=r[E.value]=new Object();R.levelProperty=P;break;case"hierarchy-drill-state-for":case"hierarchy-drill-stat":if(!(R=r[E.value]))R=r[E.value]=new Object();R.drillStateProperty=P;break}}}this._oRecursiveHierarchySet=new Object();for(var h in r){var H=r[h];var a=this._oPropertySet[h];var d=this._oPropertySet[H.dimensionName];if(d==null){d=a}this._oRecursiveHierarchySet[d.name]=new o.RecursiveHierarchy(e,a,H.parentNodeIDProperty,H.levelProperty,d)}},getProperties:function(){return this._oPropertySet},findPropertyByName:function(p){return this._oPropertySet[p]},getKeyProperties:function(){return this._aKeyProperties},getLabelOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="label")return e.value}}return null},getHeadingOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){var s=null;for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="heading")return e.value;if(e.name=="label")s=e.value}}return s},getQuickInfoOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){var s=null;for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="quickinfo")return e.value;if(e.name=="label")s=e.value}}return s},getTextPropertyOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(e.name=="text")return this.findPropertyByName(e.value)}}return null},getSuperOrdinatePropertyOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(e.name=="super-ordinate")return this.findPropertyByName(e.value)}}return null},getFilterablePropertyNames:function(){return this._aFilterablePropertyNames},getSortablePropertyNames:function(){return this._aSortablePropertyNames},getRequiredFilterPropertyNames:function(){return this._aRequiredFilterPropertyNames},getPropertiesWithFilterRestrictions:function(){return this._oPropertyFilterRestrictionSet},getAllHierarchyPropertyNames:function(){if(this._aHierarchyPropertyNames)return this._aHierarchyPropertyNames;this._aHierarchyPropertyNames=[];for(var n in this._oRecursiveHierarchySet)this._aHierarchyPropertyNames.push(this._oRecursiveHierarchySet[n].getNodeValueProperty().name);return this._aHierarchyPropertyNames},getHierarchy:function(n){if(this._oRecursiveHierarchySet[n]==undefined)return null;return this._oRecursiveHierarchySet[n]},getQName:function(){return this._sQName},getTypeDescription:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_sQName:null,_aKeyProperties:null,_oPropertySet:null,_aFilterablePropertyNames:null,_aRequiredFilterPropertyNames:null,_oPropertyFilterRestrictionSet:null,_aHierarchyPropertyNames:null,_oRecursiveHierarchySet:null};o.RecursiveHierarchy=function(e,n,p,N,a){this._init(e,n,p,N,a)};o.RecursiveHierarchy.prototype={_init:function(e,n,p,N,a){this._oEntityType=e;this._oNodeIDProperty=n;this._oParentNodeIDProperty=p;this._oNodeLevelProperty=N;this._oNodeValueProperty=a},isRecursiveHierarchy:function(){return true},isLeveledHierarchy:function(){return false},getNodeIDProperty:function(){return this._oNodeIDProperty},getParentNodeIDProperty:function(){return this._oParentNodeIDProperty},getNodeLevelProperty:function(){return this._oNodeLevelProperty},getNodeValueProperty:function(){return this._oNodeValueProperty},_oNodeIDProperty:null,_oParentNodeIDProperty:null,_oNodeLevelProperty:null,_oNodeValueProperty:null};o.FilterExpression=function(m,s,e){this._init(m,s,e)};o.FilterExpression.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aConditionUI5Filter=new Array();this._aUI5FilterArray=new Array()},_renderPropertyFilterValue:function(f,p){return q.sap.encodeURL(this._oModel.getODataModel().formatValue(f,p))},clear:function(){this._aConditionUI5Filter=new Array();this._aUI5FilterArray=new Array()},_addCondition:function(p,O,v,V){for(var i=-1,u;u=this._aConditionUI5Filter[++i];){if(u.sPath==p&&u.sOperator==O&&u.oValue1==v&&u.oValue2==V)return}this._aConditionUI5Filter.push(new sap.ui.model.Filter(p,O,v,V))},_addUI5FilterArray:function(u){this._aUI5FilterArray.push(u)},addCondition:function(p,O,v,V){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add filter condition for unknown property name "+p}var f=this._oEntityType.getFilterablePropertyNames();if(f.indexOf(p)===-1){throw"Cannot add filter condition for not filterable property name "+p}this._addCondition(p,O,v,V);return this},addSetCondition:function(p,v){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add filter condition for unknown property name "+p}var f=this._oEntityType.getFilterablePropertyNames();if(f.indexOf(p)===-1){throw"Cannot add filter condition for not filterable property name "+p}for(var i=-1,V;V=v[++i];)this._addCondition(p,sap.ui.model.FilterOperator.EQ,V);return this},addUI5FilterConditions:function(u){if(!Array.isArray(u))throw"Argument is not an array";if(u.length==0)return this;var h=false;for(var i=0;i<u.length;i++){if(u[i].aFilters!=undefined){h=true;break}}if(h)this._addUI5FilterArray(u);else{for(var i=0;i<u.length;i++){this.addCondition(u[i].sPath,u[i].sOperator,u[i].oValue1,u[i].oValue2)}}return this},getExpressionAsUI5FilterArray:function(){var f=this._aConditionUI5Filter.concat([]);for(var i=-1,F;F=this._aUI5FilterArray[++i];){for(var j=-1,a;a=F[++j];){f.push(a)}}return f},getPropertiesReferencedByUI5FilterArray:function(u,r){for(var i=-1,U;U=u[++i];){if(U.aFilters!=undefined)this.getPropertiesReferencedByUI5FilterArray(U.aFilters,r);else{if(r[U.sPath]==undefined)r[U.sPath]=[];r[U.sPath].push(U)}}},getReferencedProperties:function(){var r=new Object();for(var i=-1,u;u=this._aConditionUI5Filter[++i];){if(r[u.sPath]==undefined)r[u.sPath]=[];r[u.sPath].push(u)}for(var i=-1,U;U=this._aUI5FilterArray[++i];){this.getPropertiesReferencedByUI5FilterArray(U,r)}return r},renderUI5Filter:function(u){var p=this._oEntityType.findPropertyByName(u.sPath);if(p==null){throw"Cannot add filter condition for unknown property name "+u.sPath}var f=null;switch(u.sOperator){case sap.ui.model.FilterOperator.BT:f="("+u.sPath+" "+sap.ui.model.FilterOperator.GE.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue1,p.type)+" and "+u.sPath+" "+sap.ui.model.FilterOperator.LE.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue2,p.type)+")";break;case sap.ui.model.FilterOperator.Contains:f="substringof("+this._renderPropertyFilterValue(u.oValue1,"Edm.String")+","+u.sPath+")";break;case sap.ui.model.FilterOperator.StartsWith:case sap.ui.model.FilterOperator.EndsWith:f=u.sOperator.toLowerCase()+"("+u.sPath+","+this._renderPropertyFilterValue(u.oValue1,"Edm.String")+")";break;default:f=u.sPath+" "+u.sOperator.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue1,p.type)}return f},renderUI5MultiFilter:function(u){var U=new Array();var O="";var l=u.bAnd==true?" and ":" or ";for(var i=-1,a;a=u.aFilters[++i];){if(a.aFilters!=undefined){U.push(a);continue}O+=(O==""?"":l)+"("+this.renderUI5Filter(a)+")"}if(U.length>0){for(var i=-1,m;m=U[++i];){O+=(O==""?"":l)+"("+this.renderUI5MultiFilter(m)+")"}}return O},renderUI5FilterArray:function(u){if(u.length==0)return"";var O="";u.sort(function(a,b){if(a.sPath==b.sPath)return 0;if(a.sPath>b.sPath)return 1;else return-1});var p=u[0].sPath;var s="";var n=new Array(),U=new Array();for(var i=-1,c;c=u[++i];){if(c.aFilters!=undefined){U.push(c);continue}if(p!=c.sPath){if(s!="")O+=(O==""?"":" and ")+"("+s+")";s="";if(n.length>0){for(var j=-1,N;N=n[++j];){s+=(s==""?"":" and ")+this.renderUI5Filter(N)}O+=(O==""?"":" and ")+"("+s+")";s=""}p=c.sPath;n=new Array()}if(c.sOperator==sap.ui.model.FilterOperator.NE){n.push(c);continue}s+=(s==""?"":" or ")+this.renderUI5Filter(c)}if(s!="")O+=(O==""?"":" and ")+"("+s+")";if(n.length>0){s="";for(var j=-1,N;N=n[++j];){s+=(s==""?"":" and ")+this.renderUI5Filter(N)}O+=(O==""?"":" and ")+"("+s+")"}if(U.length>0){for(var j=-1,m;m=U[++j];){O+=(O==""?"":" and ")+"("+this.renderUI5MultiFilter(m)+")"}}return O},getURIFilterOptionValue:function(){var O=this.renderUI5FilterArray(this._aConditionUI5Filter);for(var i=-1,u;u=this._aUI5FilterArray[++i];){O+=(O==""?"":" and ")+"("+this.renderUI5FilterArray(u)+")"}return O},isValid:function(){var r=this._oEntityType.getRequiredFilterPropertyNames();var p=this.getReferencedProperties();for(var i=-1,P;P=r[++i];){if(p[P]==undefined)throw"filter expression does not contain required property "+P}var a=this._oEntityType.getPropertiesWithFilterRestrictions();for(var P in a){var f=a[P];var c=0;if(f==o.EntityType.propertyFilterRestriction.SINGLE_VALUE){if(p[P]!=undefined){if(p[P].length>1||p[P][0].sOperator!=sap.ui.model.FilterOperator.EQ)throw"filter expression may use "+P+" only with a single EQ condition"}}}return true},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_aFilterCondition:null};o.SortOrder={Ascending:"asc",Descending:"desc"};o.SortExpression=function(m,s,e){this._init(m,s,e)};o.SortExpression.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aSortCondition=[]},_containsSorter:function(p){var r=null;for(var i=-1,c;c=this._aSortCondition[++i];){if(c.property.name===p){r={sorter:c,index:i};break}}return r},_removeFromArray:function(a,f,t){var r=a.slice((t||f)+1||a.length);a.length=f<0?a.length+f:f;return a.push.apply(a,r)},clear:function(){this._aSortCondition=[]},addSorter:function(p,s){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add sort condition for unknown property name "+p}var e=this._containsSorter(p);if(e!=null){e.sorter.order=s;return this}var S=this._oEntityType.getSortablePropertyNames();if(S.indexOf(p)===-1){throw"Cannot add sort condition for not sortable property name "+p}this._aSortCondition.push({property:P,order:s});return this},removeSorter:function(p){if(!p)return;var s=this._containsSorter(p);if(s){this._removeFromArray(this._aSortCondition,s.index)}},getExpressionsAsUI5SorterArray:function(){var s=[];for(var i=-1,c;c=this._aSortCondition[++i];){s.push(new sap.ui.model.Sorter(c.property.name,c.order==o.SortOrder.Descending))}return s},getExpressionAsUI5Sorter:function(){var s=this.getExpressionsAsUI5SorterArray();if(s.length==0){return null}else{return s[0]}},getURIOrderByOptionValue:function(s){if(this._aSortCondition.length==0)return"";var O="";for(var i=-1,c;c=this._aSortCondition[++i];){if(!s[c.property.name])continue;O+=(O==""?"":",")+c.property.name+" "+c.order}return O},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_aSortCondition:null};o.ParameterizationRequest=function(p){this._init(p)};o.ParameterizationRequest.prototype={_init:function(p){if(!p)throw"No parameterization given";this._oParameterization=p;this._oParameterValueAssignment=new Array()},_renderParameterKeyValue:function(k,p){return q.sap.encodeURL(this._oParameterization.getTargetQueryResult().getModel().getODataModel().formatValue(k,p))},getParameterization:function(){return this._oParameterization},setParameterValue:function(p,v,t){var P=this._oParameterization.findParameterByName(p);if(!P)throw"Invalid parameter name "+p;if(t!=null){if(!P.isIntervalBoundary())throw"Range value cannot be applied to parameter "+p+" accepting only single values";if(!P.isLowerIntervalBoundary())throw"Range value given, but parameter "+p+" does not hold the lower boundary"}if(!P.isIntervalBoundary()){if(v==null)delete this._oParameterValueAssignment[p];else this._oParameterValueAssignment[p]=v}else{if(v==null&&t!=null)throw"Parameter "+p+": An upper boundary cannot be given without the lower boundary";if(v==null){delete this._oParameterValueAssignment[p];t=null}else this._oParameterValueAssignment[p]=v;var u=P.getPeerIntervalBoundaryParameter();if(t==null)t=v;if(v==null)delete this._oParameterValueAssignment[u.getName()];else this._oParameterValueAssignment[u.getName()]=t}return},getURIToParameterizationEntitySet:function(s){return(s?s:"")+"/"+this._oParameterization.getEntitySet().getQName()},getURIToParameterizationEntry:function(s){var d=this._oParameterization.getAllParameters();for(var D in d){if(this._oParameterValueAssignment[D]==undefined)throw"Parameter "+D+" has no value assigned"}var k="",f=true;for(var p in this._oParameterValueAssignment){k+=(f?"":",")+p+"="+this._renderParameterKeyValue(this._oParameterValueAssignment[p],d[p].getProperty().type);f=false}return(s?s:"")+"/"+this._oParameterization.getEntitySet().getQName()+"("+k+")"},_oParameterization:null,_oParameterValueAssignment:null};o.QueryResultRequest=function(Q,p){this._init(Q)};o.QueryResultRequest.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oParameterizationRequest=p;this._oAggregationLevel=new Object();this._oMeasures=new Object();this._bIncludeEntityKey=false;this._oFilterExpression=null;this._oSortExpression=null;this._oSelectedPropertyNames=null},setParameterizationRequest:function(p){this._oParameterizationRequest=p},setResourcePath:function(r){this._sResourcePath=r;if(this._sResourcePath.indexOf("/")!=0)throw"Missing leading / (slash) for resource path";if(this._oQueryResult.getParameterization()){var l=r.lastIndexOf("/");if(l==-1)throw"Missing navigation from parameter entity set to query result in resource path";var n=r.substring(l+1);if(n!=this._oQueryResult.getParameterization().getNavigationPropertyToQueryResult())throw"Invalid navigation property from parameter entity set to query result in resource path"}},getParameterizationRequest:function(){return this._oParameterizationRequest},getQueryResult:function(){return this._oQueryResult},setAggregationLevel:function(d){this._oAggregationLevel=new Object();if(!d){d=this._oQueryResult.getAllDimensionNames()}this.addToAggregationLevel(d);this._oSelectedPropertyNames=null},addToAggregationLevel:function(d){if(!d)return;this._oSelectedPropertyNames=null;for(var i=-1,D;D=d[++i];){if(!this._oQueryResult.findDimensionByName(D))throw D+" is not a valid dimension name";this._oAggregationLevel[D]={key:true,text:false,attributes:null}}},removeFromAggregationLevel:function(d){if(!d){return}this._oSelectedPropertyNames=null;for(var i=-1,D;D=d[++i];){if(!this._oQueryResult.findDimensionByName(D)){throw D+" is not a valid dimension name"}if(this._oAggregationLevel[D]!=undefined){delete this._oAggregationLevel[D];this.getSortExpression().removeSorter(D)}}},getAggregationLevel:function(){var d=new Array();for(var D in this._oAggregationLevel){d.push(D)}return d},getAggregationLevelDetails:function(d){if(this._oAggregationLevel[d]==undefined)throw"Aggregation level does not include dimension "+d;return this._oAggregationLevel[d]},setMeasures:function(m){if(!m){m=this._oQueryResult.getAllMeasureNames()}this._oSelectedPropertyNames=null;this._oMeasures=new Object();for(var i=-1,M;M=m[++i];){if(!this._oQueryResult.findMeasureByName(M))throw M+" is not a valid measure name";this._oMeasures[M]={value:true,text:false,unit:false}}},getMeasureNames:function(){var m=new Array();for(var M in this._oMeasures){m.push(M)}return m},includeDimensionKeyTextAttributes:function(d,I,b,a){this._oSelectedPropertyNames=null;var D=new Array();if(d){if(this._oAggregationLevel[d]==undefined)throw d+" is not included in the aggregation level";D.push(d)}else{for(var n in this._oAggregationLevel){D.push(n)}a=null}for(var i=-1,s;s=D[++i];){if(I!=null)this._oAggregationLevel[s].key=I;if(b!=null)this._oAggregationLevel[s].text=b;if(a!=null)this._oAggregationLevel[s].attributes=a}},includeMeasureRawFormattedValueUnit:function(m,I,b,a){this._oSelectedPropertyNames=null;var M=new Array();if(m){if(this._oMeasures[m]==undefined)throw m+" is not part of the query result";M.push(m)}else{for(var n in this._oMeasures){M.push(n)}}for(var i=-1,s;s=M[++i];){if(I!=null)this._oMeasures[s].value=I;if(b!=null)this._oMeasures[s].text=b;if(a!=null)this._oMeasures[s].unit=a}},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oQueryResult.getEntityType();this._oFilterExpression=new o.FilterExpression(this._oQueryResult.getModel(),e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){var e=this._oQueryResult.getEntityType();this._oSortExpression=new o.SortExpression(e.getModel(),e.getSchema(),e)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},setRequestOptions:function(i,I){if(i!=null)this._bIncludeEntityKey=i;if(I!=null)this._bIncludeCount=I},setResultPageBoundaries:function(s,e){if(s!=null&&typeof s!=="number"){throw"Start value must be null or numeric"}if(e!==null&&typeof e!=="number"){throw"End value must be null or numeric"}if(s==null)s=1;if(s<1||s>(e==null?s:e)){throw"Invalid values for requested page boundaries"}this._iSkipRequestOption=(s>1)?s-1:null;this._iTopRequestOption=(e!=null)?(e-s+1):null},getResultPageBoundaries:function(){return{start:(this._iSkipRequestOption==null)?1:this._iSkipRequestOption,end:(this._iTopRequestOption!=null)?(this._iSkipRequestOption==null)?1:this._iSkipRequestOption+this._iTopRequestOption:null}},getURIToQueryResultEntitySet:function(s){var u=null;if(this._sResourcePath!=null){u=(s?s:"")+this._sResourcePath}else{if(this._oQueryResult.getParameterization()){if(!this._oParameterizationRequest)throw"Missing parameterization request";else u=this._oParameterizationRequest.getURIToParameterizationEntry(s)+"/"+this._oQueryResult.getParameterization().getNavigationPropertyToQueryResult()}else u=(s?s:"")+"/"+this._oQueryResult.getEntitySet().getQName()}return u},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";this._oSelectedPropertyNames=new Object();var d=null;for(var D in this._oAggregationLevel){var a=this._oQueryResult.findDimensionByName(D);var b=this._oAggregationLevel[D];if(b.key==true){d=a.getKeyProperty().name;if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}if(b.text==true&&a.getTextProperty()){d=a.getTextProperty().name;if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}if(b.attributes){for(var i=-1,A;A=b.attributes[++i];){d=a.findAttributeByName(A).getName();if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}}}var m;for(var M in this._oMeasures){var c=this._oQueryResult.findMeasureByName(M);var e=this._oMeasures[M];if(e.value==true){m=c.getRawValueProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}if(e.text==true&&c.getFormattedValueProperty()){m=c.getFormattedValueProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}if(e.unit==true&&c.getUnitProperty()){m=c.getUnitProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}}if(this._bIncludeEntityKey){var k=this._oQueryResult.getEntityType().getTypeDescription().key.propertyRef;for(var i=-1,K;K=k[++i];){S+=(S==""?"":",")+K.name}}s=(S?S:null);break}case"$filter":{var f=null;if(this._oFilterExpression)f=this._oFilterExpression.getURIFilterOptionValue();s=(f?f:null);break}case"$orderby":{var g=null;if(this._oSortExpression)g=this._oSortExpression.getURIOrderByOptionValue(this._oSelectedPropertyNames);s=(g?g:null);break}case"$top":{if(this._iTopRequestOption!==null){s=this._iTopRequestOption}break}case"$skip":{s=this._iSkipRequestOption;break}case"$inlinecount":{s=(this._bIncludeCount==true?"allpages":null);break}default:break}return s},getURIToQueryResultEntries:function(s,r){var r=this.getURIToQueryResultEntitySet(s);this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var t=this.getURIQueryOptionValue("$top");var b=this.getURIQueryOptionValue("$skip");var i=this.getURIQueryOptionValue("$inlinecount");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else{u+="&"}u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else{u+="&"}u+="$orderby="+a}if(this._iTopRequestOption&&t){if(!Q){u+="?";Q=true}else{u+="&"}u+="$top="+t}if(this._iSkipRequestOption&&b){if(!Q){u+="?";Q=true}else{u+="&"}u+="$skip="+b}if(this._bIncludeCount&&i){if(!Q){u+="?";Q=true}else{u+="&"}u+="$inlinecount="+i}return u},_oQueryResult:null,_oParameterizationRequest:null,_sResourcePath:null,_oAggregationLevel:null,_oMeasures:null,_bIncludeEntityKey:null,_bIncludeCount:null,_oFilterExpression:null,_oSortExpression:null,_iSkipRequestOption:0,_iTopRequestOption:null};o.ParameterValueSetRequest=function(p){this._init(p)};o.ParameterValueSetRequest.prototype={_init:function(p){this._oParameter=p;this._oValueSetResult=new Object();this._oFilterExpression=null;this._oSortExpression=null},includeParameterText:function(i){if(i!=null)this._oValueSetResult.text=i},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oParameter.getContainingParameterization().getEntityType();var m=this._oParameter.getContainingParameterization().getTargetQueryResult().getModel();this._oFilterExpression=new o.FilterExpression(m,e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){var e=this._oParameter.getContainingParameterization().getEntityType();this._oSortExpression=new o.SortExpression(e.getModel(),e.getSchema(),e)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";S+=(S==""?"":",")+this._oParameter.getProperty().name;if(this._oValueSetResult.text==true&&this._oParameter.getTextProperty())S+=(S==""?"":",")+this._oParameter.getTextProperty().name;s=(S?S:null);break}case"$filter":{var f=null;if(this._oFilterExpression)f=this._oFilterExpression.getURIFilterOptionValue();s=(f?f:null);break}case"$orderby":{var a=null;if(this._oSortExpression)a=this._oSortExpression.getURIOrderByOptionValue();s=(a?a:null);break}default:break}return s},getURIToParameterValueSetEntries:function(s){var r=null;r=(s?s:"")+"/"+this._oParameter.getContainingParameterization().getEntitySet().getQName();this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else u+="&";u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else u+="&";u+="$orderby="+a}return u},_oParameter:null,_oFilterExpression:null,_oSortExpression:null,_oValueSetResult:null};o.DimensionMemberSetRequest=function(d,p,u){this._init(d,p,u)};o.DimensionMemberSetRequest.prototype={_init:function(d,p,u){this._oDimension=d;this._oParameterizationRequest=p;this._bUseMasterData=u;this._oValueSetResult=new Object();this._oFilterExpression=null;this._oSortExpression=null;if(this._oParameterizationRequest!=null&&this._bUseMasterData==true)throw"LIMITATION: parameterized master data entity sets are not yet implemented";if(this._bUseMasterData){this._oEntitySet=this._oDimension.getMasterDataEntitySet()}else{this._oEntitySet=this._oDimension.getContainingQueryResult().getEntitySet();if(this._oDimension.getContainingQueryResult().getParameterization()&&!this._oParameterizationRequest)throw"Missing parameterization request"}},setParameterizationRequest:function(p){this._oParameterizationRequest=p},includeDimensionTextAttributes:function(i,I){this._oValueSetResult.text={text:false,attributes:false};if(i==true)this._oValueSetResult.text=true;if(I==true)this._oValueSetResult.attributes=true},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oEntitySet.getEntityType();var m=this._oDimension.getContainingQueryResult().getModel();this._oFilterExpression=new o.FilterExpression(m,e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){this._oSortExpression=new o.SortExpression(this._oEntityType.getModel(),this._oEntityType.getSchema(),this._oEntityType)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},setRequestOptions:function(i){if(i!=null)this._bIncludeCount=i},setResultPageBoundaries:function(s,e){if(s!=null&&typeof s!=="number"){throw"Start value must be null or numeric"}if(e!==null&&typeof e!=="number"){throw"End value must be null or numeric"}if(s==null)s=1;if(s<1||s>(e==null?s:e)){throw"Invalid values for requested page boundaries"}this._iSkipRequestOption=(s>1)?s-1:null;this._iTopRequestOption=(e!=null)?(e-s+1):null},getResultPageBoundaries:function(){return{start:(this._iSkipRequestOption==null)?1:this._iSkipRequestOption,end:(this._iTopRequestOption!=null)?(this._iSkipRequestOption==null)?1:this._iSkipRequestOption+this._iTopRequestOption:null}},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";var e=this._oEntitySet.getEntityType();var k=e.getKeyProperties();var K=[];if(this._bUseMasterData){for(var i=-1,a;a=k[++i];){S+=(S==""?"":",")+a;var b=e.getTextPropertyOfProperty(a);if(b){if(this._oValueSetResult.text==true)S+=","+b.name;K.push(b.name)}}}else{S+=(S==""?"":",")+this._oDimension.getKeyProperty().name;if(this._oValueSetResult.text==true&&this._oDimension.getTextProperty())S+=(S==""?"":",")+this._oDimension.getTextProperty().name}if(this._oValueSetResult.attributes){if(this._bUseMasterData){var A=e.getProperties();for(var p in A){var I=false;for(var i=-1,a;a=k[++i];){if(p==a){I=true;break}}if(I)continue;for(var i=-1,c;c=K[++i];){if(p==c){I=true;break}}if(!I)S+=","+p}}else{var d=this._oDimension.getAllAttributeNames();for(var i=-1,f;f=d[++i];){S+=(S==""?"":",")+this._oDimension.findAttributeByName(f).getName()}}}s=(S?S:null);break}case"$filter":{var F=null;if(this._oFilterExpression)F=this._oFilterExpression.getURIFilterOptionValue();s=(F?F:null);break}case"$orderby":{var g=null;if(this._oSortExpression)g=this._oSortExpression.getURIOrderByOptionValue();s=(g?g:null);break}case"$top":{if(this._iTopRequestOption!==null){s=this._iTopRequestOption}break}case"$skip":{s=this._iSkipRequestOption;break}case"$inlinecount":{s=(this._bIncludeCount==true?"allpages":null);break}default:break}return s},getURIToDimensionMemberEntitySet:function(s){var r=null;if(!this._bUseMasterData&&this._oParameterizationRequest){r=this._oParameterizationRequest.getURIToParameterizationEntry(s)+"/"+this._oDimension.getContainingQueryResult().getParameterization().getNavigationPropertyToQueryResult()}else{r=(s?s:"")+"/"+this._oEntitySet.getQName()}return r},getURIToDimensionMemberEntries:function(s){var r=this.getURIToDimensionMemberEntitySet(s);this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var t=this.getURIQueryOptionValue("$top");var b=this.getURIQueryOptionValue("$skip");var i=this.getURIQueryOptionValue("$inlinecount");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else u+="&";u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else u+="&";u+="$orderby="+a}if(this._iTopRequestOption&&t){if(!Q){u+="?";Q=true}else{u+="&"}u+="$top="+t}if(this._iSkipRequestOption&&b){if(!Q){u+="?";Q=true}else{u+="&"}u+="$skip="+b}if(this._bIncludeCount&&i){if(!Q){u+="?";Q=true}else{u+="&"}u+="$inlinecount="+i}return u},_oDimension:null,_oParameterizationRequest:null,_oEntitySet:null,_bUseMasterData:false,_oFilterExpression:null,_oSortExpression:null,_oValueSetResult:null,_bIncludeCount:null,_iSkipRequestOption:0,_iTopRequestOption:null};return o},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.CountMode')){jQuery.sap.declare('sap.ui.model.odata.CountMode');sap.ui.define("sap/ui/model/odata/CountMode",['jquery.sap.global'],function(q){"use strict";var C={Request:"Request",Inline:"Inline",Both:"Both",None:"None"};return C},true)};if(!jQuery.sap.isDeclared('jquery.sap.act')){jQuery.sap.declare('jquery.sap.act');sap.ui.define("jquery.sap.act",['jquery.sap.global'],function(q){"use strict";if(typeof window.jQuery.sap.act==="object"||typeof window.jQuery.sap.act==="function"){return}var _={},a=true,b=null,c=10000,d=!!window.addEventListener,e=[],f=[],g=false,h=null;function j(){b=null;if(g){k();return}a=false;h.observe(document.documentElement,{childList:true,attributes:true,subtree:true,characterData:true})};function k(){if(!a){a=true;l(e);h.disconnect()}if(b){g=true}else{b=setTimeout(j,c);g=false}};function l(L){if(L.length==0){return}var m=L.slice();setTimeout(function(){var I;for(var i=0,n=m.length;i<n;i++){I=m[i];I.fFunction.call(I.oListener||window)}},0)};_.attachActivate=function(F,L){e.push({oListener:L,fFunction:F})};_.detachActivate=function(F,L){for(var i=0,m=e.length;i<m;i++){if(e[i].fFunction===F&&e[i].oListener===L){e.splice(i,1);break}}};_.isActive=!d?function(){return true}:function(){return a};_.refresh=!d?function(){}:k;if(d){var E=["resize","orientationchange","mousemove","mousedown","mouseup","touchstart","touchmove","touchend","touchcancel","paste","cut","keydown","keyup","DOMMouseScroll","mousewheel"];for(var i=0;i<E.length;i++){window.addEventListener(E[i],_.refresh,true)}if(window.MutationObserver){h=new window.MutationObserver(_.refresh)}else if(window.WebKitMutationObserver){h=new window.WebKitMutationObserver(_.refresh)}else{h={observe:function(){document.documentElement.addEventListener("DOMSubtreeModified",_.refresh)},disconnect:function(){document.documentElement.removeEventListener("DOMSubtreeModified",_.refresh)}}}k()}q.sap.act=_;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.dom')){jQuery.sap.declare('jquery.sap.dom');sap.ui.define("jquery.sap.dom",['jquery.sap.global','sap/ui/Device'],function(q,D){"use strict";var d=function(I,w){if(!w){w=window}if(!I||I==""){return null}var o=w.document.getElementById(I);if(o&&o.id==I){return o}var r=w.document.getElementsByName(I);for(var i=0;i<r.length;i++){o=r[i];if(o&&o.id==I){return o}}return null};q.sap.domById=!!D.browser.internet_explorer&&D.browser.version<8?d:function domById(i,w){return i?(w||window).document.getElementById(i):null};q.sap.byId=function byId(i,c){var e="";if(i){e="#"+i.replace(/(:|\.)/g,'\\$1')}return q(e,c)};q.sap.focus=function focus(o){if(!o){return}try{o.focus()}catch(e){var i=(o&&o.id)?" (ID: '"+o.id+"')":"";q.sap.log.warning("Error when trying to focus a DOM element"+i+": "+e.message);return false}return true};q.fn.cursorPos=function cursorPos(p){var l=arguments.length,t,L,T,s;T=this.prop("tagName");s=this.prop("type");if(this.length===1&&((T=="INPUT"&&(s=="text"||s=="password"||s=="search"))||T=="TEXTAREA")){var o=this.get(0);if(l>0){if(typeof(o.selectionStart)=="number"){o.focus();o.selectionStart=p;o.selectionEnd=p}else if(o.createTextRange){t=o.createTextRange();var m=o.value.length;if(p<0||p>m){p=m}if(t){t.collapse();t.moveEnd("character",p);t.moveStart("character",p);t.select()}}return this}else{if(typeof(o.selectionStart)=="number"){return o.selectionStart}else if(o.createTextRange){t=window.document.selection.createRange();var c=t.duplicate();if(o.tagName=="TEXTAREA"){c.moveToElementText(o);var C=c.duplicate();L=c.text.length;C.moveStart("character",L);if(C.inRange(t)){S=L}else{var i=L;var S=0;while(L>1){i=Math.round(L/2);S=S+i;C=c.duplicate();C.moveStart("character",S);if(C.inRange(t)){L=L-i}else{S=S-i;L=i}}}return S}else if(c.parentElement()===o){c.collapse();var L=o.value.length;c.moveStart('character',-L);return c.text.length}}return-1}}else{return this}};q.fn.selectText=function selectText(s,E){var o=this.get(0);if(!o){return this}try{if(typeof(o.selectionStart)==="number"){if(s<0){s=0}if(E>o.value.length){E=o.value.length}if(!E||s>E){s=0;E=0}o.selectionStart=s;o.selectionEnd=E}else if(o.createTextRange){var t=o.createTextRange();t.collapse();t.moveStart('character',s);t.moveEnd('character',E-s);t.select()}}catch(e){}return this};q.fn.outerHTML=function outerHTML(){var o=this.get(0);if(o&&o.outerHTML){return q.trim(o.outerHTML)}else{var a=this[0]?this[0].ownerDocument:document;var b=a.createElement("div");b.appendChild(o.cloneNode(true));return b.innerHTML}};q.sap.containsOrEquals=function containsOrEquals(o,a){if(a&&o&&a!=document&&a!=window){return(o===a)||q.contains(o,a)}return false};q.fn.rect=function rect(){var o=this.get(0);if(o){if(o.getBoundingClientRect){var c=o.getBoundingClientRect();var r={top:c.top,left:c.left,width:c.right-c.left,height:c.bottom-c.top};var w=q.sap.ownerWindow(o);r.left+=q(w).scrollLeft();r.top+=q(w).scrollTop();return r}else{return{top:10,left:10,width:o.offsetWidth,height:o.offsetWidth}}}return null};q.fn.rectContains=function rectContains(p,P){var r=this.rect();if(r){return p>=r.left&&p<=r.left+r.width&&P>=r.top&&P<=r.top+r.height}return false};q.fn.hasTabIndex=function hasTabIndex(){var t=this.prop("tabIndex");if(this.attr("disabled")&&!this.attr("tabindex")){t=-1}return!isNaN(t)&&t>=0};q.fn.firstFocusableDomRef=function firstFocusableDomRef(){var c=this.get(0);var a=function(i){return q(this).css("visibility")=="hidden"};if(!c||q(c).is(':hidden')||q(c).filter(a).length==1){return null}var C=c.firstChild,o=null;while(C){if(C.nodeType==1&&q(C).is(':visible')){if(q(C).hasTabIndex()){return C}if(C.childNodes){o=q(C).firstFocusableDomRef();if(o){return o}}}C=C.nextSibling}return null};q.fn.lastFocusableDomRef=function lastFocusableDomRef(){var c=this.get(0);var a=function(i){return q(this).css("visibility")=="hidden"};if(!c||q(c).is(':hidden')||q(c).filter(a).length==1){return null}var C=c.lastChild,o=null;while(C){if(C.nodeType==1&&q(C).is(':visible')){if(C.childNodes){o=q(C).lastFocusableDomRef();if(o){return o}}if(q(C).hasTabIndex()){return C}}C=C.previousSibling}return null};q.fn.scrollLeftRTL=function scrollLeftRTL(p){var o=this.get(0);if(o){if(p===undefined){if(!!D.browser.internet_explorer){return o.scrollWidth-o.scrollLeft-o.clientWidth}else if(!!D.browser.webkit){return o.scrollLeft}else if(!!D.browser.firefox){return o.scrollWidth+o.scrollLeft-o.clientWidth}else{return o.scrollLeft}}else{o.scrollLeft=q.sap.denormalizeScrollLeftRTL(p,o);return this}}};
/*
	 * The following methods are taken from jQuery UI core but modified.
	 *
	 * jQuery UI Core
	 * http://jqueryui.com
	 *
	 * Copyright 2014 jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/category/ui-core/
	 */
q.support.selectstart="onselectstart"in document.createElement("div");q.fn.extend({disableSelection:function(){return this.on((q.support.selectstart?"selectstart":"mousedown")+".sapui5-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.off(".sapui5-disableSelection")}});q.fn.scrollRightRTL=function scrollRightRTL(){var o=this.get(0);if(o){if(!!D.browser.internet_explorer){return o.scrollLeft}else if(!!D.browser.webkit){return o.scrollWidth-o.scrollLeft-o.clientWidth}else if(!!D.browser.firefox){return(-o.scrollLeft)}else{return o.scrollLeft}}};q.sap.denormalizeScrollLeftRTL=function(n,o){if(o){if(!!D.browser.internet_explorer){return o.scrollWidth-o.clientWidth-n}else if(!!D.browser.webkit){return n}else if(!!D.browser.firefox){return o.clientWidth+n-o.scrollWidth}else{return n}}};
/*!
	 * The following functions are taken from jQuery UI 1.8.17 but modified
	 *
	 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
	 * Dual licensed under the MIT or GPL Version 2 licenses.
	 * http://jquery.org/license
	 *
	 * http://docs.jquery.com/UI
	 */
function v(e){var o=q(e).offsetParent();var O=false;var $=q(e).parents().filter(function(){if(this===o){O=true}return O});return!q(e).add($).filter(function(){return q.css(this,"visibility")==="hidden"||q.expr.filters.hidden(this)}).length}function f(e,i){var n=e.nodeName.toLowerCase();if("area"===n){var m=e.parentNode,a=m.name,b;if(!e.href||!a||m.nodeName.toLowerCase()!=="map"){return false}b=q("img[usemap=#"+a+"]")[0];return!!b&&v(b)}return(/input|select|textarea|button|object/.test(n)?!e.disabled:"a"==n?e.href||i:i)&&v(e)}if(!q.expr[":"].focusable){
/*!
		 * The following function is taken from jQuery UI 1.8.17
		 *
		 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
		 * Dual licensed under the MIT or GPL Version 2 licenses.
		 * http://jquery.org/license
		 *
		 * http://docs.jquery.com/UI
		 *
		 * But since visible is modified, focusable is different too the jQuery UI version too.
		 */
q.extend(q.expr[":"],{focusable:function(e){return f(e,!isNaN(q.attr(e,"tabindex")))}})}if(!q.expr[":"].sapTabbable){
/*!
		 * The following function is taken from
		 * jQuery UI Core 1.10.4
		 * http://jqueryui.com
		 *
		 * Copyright 2014 jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/category/ui-core/
		 */
q.extend(q.expr[":"],{sapTabbable:function(e){var t=q.attr(e,"tabindex"),i=isNaN(t);return(i||t>=0)&&f(e,!i)}})}if(!q.expr[":"].sapFocusable){q.extend(q.expr[":"],{sapFocusable:function(e){return f(e,!isNaN(q.attr(e,"tabindex")))}})}if(!q.fn.zIndex){q.fn.zIndex=function(z){if(z!==undefined){return this.css("zIndex",z)}if(this.length){var e=q(this[0]),p,a;while(e.length&&e[0]!==document){p=e.css("position");if(p==="absolute"||p==="relative"||p==="fixed"){a=parseInt(e.css("zIndex"),10);if(!isNaN(a)&&a!==0){return a}}e=e.parent()}}return 0}}q.fn.parentByAttribute=function parentByAttribute(a,V){if(this.length>0){if(V){return this.first().parents("["+a+"='"+V+"']").get(0)}else{return this.first().parents("["+a+"]").get(0)}}};q.sap.ownerWindow=function ownerWindow(o){if(o.ownerDocument.parentWindow){return o.ownerDocument.parentWindow}return o.ownerDocument.defaultView};var _={};q.sap.scrollbarSize=function(c,F){if(typeof c==="boolean"){F=c;c=null}var k=c||"#DEFAULT";if(F){if(c){delete _[c]}else{_={}}}if(_[k]){return _[k]}if(!document.body){return{width:0,height:0}}var a=q("<DIV/>").css("visibility","hidden").css("height","0").css("width","0").css("overflow","hidden");if(c){a.addClass(c)}a.prependTo(document.body);var $=q("<div style=\"visibility:visible;position:absolute;height:100px;width:100px;overflow:scroll;opacity:0;\"></div>");a.append($);var o=$.get(0);var w=o.offsetWidth-o.scrollWidth;var h=o.offsetHeight-o.scrollHeight;a.remove();if(w===0||h===0){return{width:w,height:h}}_[k]={width:w,height:h};return _[k]};q.sap.syncStyleClass=function(s,S,a){if(!s)return a;if(S instanceof sap.ui.core.Control){S=S.$()}else if(typeof S==="string"){S=q.sap.byId(S)}else if(!(S instanceof q)){return a}var c=!!S.closest("."+s).length;if(a instanceof q){a.toggleClass(s,c)}else if(a instanceof sap.ui.core.Control){a.toggleStyleClass(s,c)}else{}return a};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.encoder')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('jquery.sap.encoder');sap.ui.define("jquery.sap.encoder",['jquery.sap.global'],function(q){"use strict";function h(i,l){var g=i.toString(16);if(l){while(l>g.length){g="0"+g}}return g}var r=/[\x00-\x2b\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g,a=/[\x00-\x08\x0b\x0c\x0e-\x1f\x7f-\x9f]/,H={"<":"&lt;",">":"&gt;","&":"&amp;","\"":"&quot;"};var f=function(g){var E=H[g];if(!E){if(a.test(g)){E="&#xfffd;"}else{E="&#x"+h(g.charCodeAt(0))+";"}H[g]=E}return E};q.sap.encodeHTML=function(S){return S.replace(r,f)};q.sap.encodeXML=function(S){return S.replace(r,f)};q.sap.escapeHTML=function(S){return S.replace(r,f)};var b=/[\x00-\x2b\x2d\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g,j={};var J=function(g){var E=j[g];if(!E){var i=g.charCodeAt(0);if(i<256){E="\\x"+h(i,2)}else{E="\\u"+h(i,4)}j[g]=E}return E};q.sap.encodeJS=function(S){return S.replace(b,J)};q.sap.escapeJS=function(S){return S.replace(b,J)};var c=/[\x00-\x2c\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\uffff]/g,u={};var U=function(g){var E=u[g];if(!E){var i=g.charCodeAt(0);if(i<128){E="%"+h(i,2)}else if(i<2048){E="%"+h((i>>6)|192,2)+"%"+h((i&63)|128,2)}else{E="%"+h((i>>12)|224,2)+"%"+h(((i>>6)&63)|128,2)+"%"+h((i&63)|128,2)}u[g]=E}return E};q.sap.encodeURL=function(S){return S.replace(c,U)};q.sap.encodeURLParameters=function(p){if(!p){return""}var g=[];q.each(p,function(n,v){if(q.type(v)==="string"){v=q.sap.encodeURL(v)}g.push(q.sap.encodeURL(n)+"="+v)});return g.join("&")};var d=/[\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xff\u2028\u2029][0-9A-Fa-f]?/g;var C=function(g){var i=g.charCodeAt(0);if(g.length==1){return"\\"+h(i)}else{return"\\"+h(i)+" "+g.substr(1)}};q.sap.encodeCSS=function(S){return S.replace(d,C)};function W(p,g,i,k){if(p){this.protocol=p.toUpperCase()}if(g){this.host=g.toUpperCase()}this.port=i;this.path=k}var w=new Array();q.sap.clearUrlWhitelist=function(){w.splice(0,w.length)};q.sap.addUrlWhitelist=function(p,g,i,k){var E=new W(p,g,i,k);var I=w.length;w[I]=E};q.sap.removeUrlWhitelist=function(i){w.splice(i,1)};q.sap.getUrlWhitelist=function(){return w.slice()};q.sap.validateUrl=function(g){var k=/(?:([^:\/?#]+):)?(?:\/\/([^\/?#:]*)(?::([0-9]+))?)?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/.exec(g);if(!k){return k}var p=k[1],l=k[2],P=k[3],m=k[4],Q=k[5],n=k[6];var o=/[\x00-\x24\x26-\x29\x2b\x2c\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\x7d\x7f-\uffff]/;var t=/[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;if(p){p=p.toUpperCase();if(w.length<=0){if(!/^(https?|ftp)/i.test(p)){return false}}}if(l){l=l.toUpperCase()}if(m){if(p==="MAILTO"){var v=t.test(m);if(!v){return false}}else{var x=m.split("/");for(var i=0;i<x.length;i++){var v=o.test(x[i]);if(v){return false}}}}if(Q){var x=Q.split("&");for(var i=0;i<x.length;i++){var y=x[i].search("=");if(y!=-1){var z=x[i].substring(0,y);var A=x[i].substring(y+1);var B=o.test(z);var D=o.test(A);if(B||D){return false}}}}if(n){if(o.test(n)){return false}}if(w.length>0){var F=false;for(var i=0;i<w.length;i++){if(!p||!w[i].protocol||p==w[i].protocol){var O=false;if(l&&w[i].host&&/^\*/.test(w[i].host)){var E=w[i].host.slice(1).replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");var G=RegExp(E+"$");if(G.test(l)){O=true}}else if(!l||!w[i].host||l==w[i].host){O=true}if(O){if((!l&&!P)||!w[i].port||P==w[i].port){if(w[i].path&&/\*$/.test(w[i].path)){var I=w[i].path.slice(0,-1).replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");var G=RegExp("^"+I);if(G.test(m)){F=true}}else if(!w[i].path||m==w[i].path){F=true}}}}if(F){break}}if(!F){return false}}return true};q.sap._sanitizeHTML=function(g,o){return s(g,o||{uriRewriter:function(i){if(q.sap.validateUrl(i)){return i}}})};q.sap._setHTMLSanitizer=function(s){s=s||e};function e(g,o){if(!window.html||!window.html.sanitize){q.sap.require("sap.ui.thirdparty.caja-html-sanitizer");}var t=o.tagPolicy||window.html.makeTagPolicy(o.uriRewriter,o.tokenPolicy);return window.html.sanitizeWithPolicy(g,t)}var s=e;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.events')){jQuery.sap.declare('jquery.sap.events');sap.ui.define("jquery.sap.events",['jquery.sap.global','jquery.sap.keycodes'],function(q){"use strict";q.sap._touchToMouseEvent=true;var o,a,b,c,d,m,I=false;if(sap.ui.Device.browser.webkit&&/Mobile/.test(navigator.userAgent)&&sap.ui.Device.support.touch){I=true;var s=(function(){var e=window.document,H=false,t=null,j=false,r,u,i=0;m=["mousedown","mouseover","mouseup","mouseout","click"];var v=function(T,E){if(!H){return}var M=E.type=="touchend"?E.changedTouches[0]:E.touches[0];var x=e.createEvent('MouseEvent');x.initMouseEvent(T,true,true,window,E.detail,M.screenX,M.screenY,M.clientX,M.clientY,E.ctrlKey,E.shiftKey,E.altKey,E.metaKey,E.button,E.relatedTarget);x.isSynthetic=true;window.setTimeout(function(){t.dispatchEvent(x)},0)};var w=function(E){return E.target.tagName.match(/input|textarea|select/i)};d=function(E){if(!E.isSynthetic&&!w(E)){E.stopPropagation();E.preventDefault()}};o=function(E){var T=E.touches,x;H=(T.length==1&&!w(E));j=false;if(H){x=T[0];t=x.target;if(t.nodeType===3){t=t.parentNode}r=x.clientX;u=x.clientY;v("mousedown",E)}};a=function(E){var T;if(H){T=E.touches[0];if(Math.abs(T.clientX-r)>10||Math.abs(T.clientY-u)>10){j=true}if(j){v("mousemove",E)}}};b=function(E){v("mouseup",E);if(!j){v("click",E)}};c=function(E){v("mouseup",E)};for(;i<m.length;i++){e.addEventListener(m[i],d,true)}e.addEventListener('touchstart',o,true);e.addEventListener('touchmove',a,true);e.addEventListener('touchend',b,true);e.addEventListener('touchcancel',c,true)}())}q.sap.disableTouchToMouseHandling=function(){var i=0;if(!I){return}document.removeEventListener('touchstart',o,true);document.removeEventListener('touchmove',a,true);document.removeEventListener('touchend',b,true);document.removeEventListener('touchcancel',c,true);for(;i<m.length;i++){document.removeEventListener(m[i],d,true)}};q.sap.ControlEvents=["click","dblclick","contextmenu","focusin","focusout","keydown","keypress","keyup","mousedown","mouseout","mouseover","mouseup","select","selectstart","dragstart","dragenter","dragover","dragleave","dragend","drop","paste","cut","input"];if(sap.ui.Device.support.touch){q.sap.ControlEvents.push("touchstart","touchend","touchmove","touchcancel")}q.sap.PseudoEvents={sapdown:{sName:"sapdown",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&!k(e)}},sapdownmodifiers:{sName:"sapdownmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&k(e)}},sapshow:{sName:"sapshow",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.F4&&!k(e))||(e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&h(e,false,true,false))}},sapup:{sName:"sapup",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&!k(e)}},sapupmodifiers:{sName:"sapupmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&k(e)}},saphide:{sName:"saphide",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&h(e,false,true,false)}},sapleft:{sName:"sapleft",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_LEFT&&!k(e)}},sapleftmodifiers:{sName:"sapleftmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_LEFT&&k(e)}},sapright:{sName:"sapright",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_RIGHT&&!k(e)}},saprightmodifiers:{sName:"saprightmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_RIGHT&&k(e)}},saphome:{sName:"saphome",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&!k(e)}},saphomemodifiers:{sName:"saphomemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&k(e)}},saptop:{sName:"saptop",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&h(e,true,false,false)}},sapend:{sName:"sapend",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&!k(e)}},sapendmodifiers:{sName:"sapendmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&k(e)}},sapbottom:{sName:"sapbottom",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&h(e,true,false,false)}},sappageup:{sName:"sappageup",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_UP&&!k(e)}},sappageupmodifiers:{sName:"sappageupmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_UP&&k(e)}},sappagedown:{sName:"sappagedown",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_DOWN&&!k(e)}},sappagedownmodifiers:{sName:"sappagedownmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_DOWN&&k(e)}},sapselect:{sName:"sapselect",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.ENTER||e.keyCode==q.sap.KeyCodes.SPACE)&&!k(e)}},sapselectmodifiers:{sName:"sapselectmodifiers",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.ENTER||e.keyCode==q.sap.KeyCodes.SPACE)&&k(e)}},sapspace:{sName:"sapspace",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.SPACE&&!k(e)}},sapspacemodifiers:{sName:"sapspacemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.SPACE&&k(e)}},sapenter:{sName:"sapenter",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ENTER&&!k(e)}},sapentermodifiers:{sName:"sapentermodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ENTER&&k(e)}},sapbackspace:{sName:"sapbackspace",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.BACKSPACE&&!k(e)}},sapbackspacemodifiers:{sName:"sapbackspacemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.BACKSPACE&&k(e)}},sapdelete:{sName:"sapdelete",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.DELETE&&!k(e)}},sapdeletemodifiers:{sName:"sapdeletemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.DELETE&&k(e)}},sapexpand:{sName:"sapexpand",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_PLUS&&!k(e)}},sapexpandmodifiers:{sName:"sapexpandmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_PLUS&&k(e)}},sapcollapse:{sName:"sapcollapse",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_MINUS&&!k(e)}},sapcollapsemodifiers:{sName:"sapcollapsemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_MINUS&&k(e)}},sapcollapseall:{sName:"sapcollapseall",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_ASTERISK&&!k(e)}},sapescape:{sName:"sapescape",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ESCAPE&&!k(e)}},saptabnext:{sName:"saptabnext",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.TAB&&!k(e)}},saptabprevious:{sName:"saptabprevious",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.TAB&&h(e,false,false,true)}},sapskipforward:{sName:"sapskipforward",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.F6&&!k(e)}},sapskipback:{sName:"sapskipback",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.F6&&h(e,false,false,true)}},sapdecrease:{sName:"sapdecrease",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&!k(e)}},sapdecreasemodifiers:{sName:"sapdecreasemodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&k(e)}},sapincrease:{sName:"sapincrease",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&!k(e)}},sapincreasemodifiers:{sName:"sapincreasemodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&k(e)}},sapprevious:{sName:"sapprevious",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&!k(e)}},sappreviousmodifiers:{sName:"sappreviousmodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&k(e)}},sapnext:{sName:"sapnext",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&!k(e)}},sapnextmodifiers:{sName:"sapnextmodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&k(e)}},sapdelayeddoubleclick:{sName:"sapdelayeddoubleclick",aTypes:["click"],fnCheck:function(e){var i=q(e.target);var j=e.timeStamp;var r=i.data("sapdelayeddoubleclick_lastClickTimestamp");var t=r||0;i.data("sapdelayeddoubleclick_lastClickTimestamp",j);var u=j-t;return(u>=300&&u<=1300)}}};var P=["sapdown","sapdownmodifiers","sapshow","sapup","sapupmodifiers","saphide","sapleft","sapleftmodifiers","sapright","saprightmodifiers","saphome","saphomemodifiers","saptop","sapend","sapendmodifiers","sapbottom","sappageup","sappageupmodifiers","sappagedown","sappagedownmodifiers","sapselect","sapselectmodifiers","sapspace","sapspacemodifiers","sapenter","sapentermodifiers","sapexpand","sapbackspace","sapbackspacemodifiers","sapdelete","sapdeletemodifiers","sapexpandmodifiers","sapcollapse","sapcollapsemodifiers","sapcollapseall","sapescape","saptabnext","saptabprevious","sapskipforward","sapskipback","sapprevious","sappreviousmodifiers","sapnext","sapnextmodifiers","sapdecrease","sapdecreasemodifiers","sapincrease","sapincreasemodifiers","sapdelayeddoubleclick"];(function initTouchEventSupport(){q.sap.touchEventMode="SIM";var A=[];var e=[];if(sap.ui.Device.support.touch){q.sap.touchEventMode="ON";q.event.props.push("touches","targetTouches","changedTouches")}var j=function(x,y,H){var z="__"+x+"Handler";var B="sap"+x;A.push(B);e.push({sName:x,aTypes:[B],fnCheck:function(E){return true}});q.event.special[B]={add:function(C){var D=this,$=q(this),E={domRef:D,eventName:x,sapEventName:B,eventHandle:C};var G=function(J){H(J,E)};C.__sapSimulatedEventHandler=G;for(var i=0;i<y.length;i++){$.on(y[i],G)}},remove:function(C){var $=q(this);var H=C.__sapSimulatedEventHandler;$.removeData(z+C.guid);for(var i=0;i<y.length;i++){q.event.remove(this,y[i],H)}}}};var M=function(E,C){var D=q(C.domRef);if(E.isMarked("delayedMouseEvent")){return}if(!(E.type!="mouseout"||(E.type==="mouseout"&&q.sap.checkMouseEnterOrLeave(E,C.domRef)))){var x=true;var y=D.data("__touchstart_control");if(y){var z=q.sap.domById(y);if(z&&q.sap.checkMouseEnterOrLeave(E,z)){x=false}}if(x){return}}var N=q.event.fix(E.originalEvent||E);N.type=C.sapEventName;if(N.isMarked("firstUIArea")){N.setMark("handledByUIArea",false)}var B=[{identifier:1,pageX:N.pageX,pageY:N.pageY,clientX:N.clientX,clientY:N.clientY,screenX:N.screenX,screenY:N.screenY,target:N.target,radiusX:1,radiusY:1,rotationAngle:0}];switch(C.eventName){case"touchstart":case"touchmove":N.touches=N.changedTouches=N.targetTouches=B;break;case"touchend":N.changedTouches=B;N.touches=N.targetTouches=[];break}if(C.eventName==="touchstart"||D.data("__touch_in_progress")){D.data("__touch_in_progress","X");var G=q.fn.control?q(E.target).control(0):null;if(G){D.data("__touchstart_control",G.getId())}if(E.type==="mouseout"){N.setMarked("fromMouseout")}C.eventHandle.handler.call(C.domRef,N);if(C.eventName==="touchend"&&!N.isMarked("fromMouseout")){D.removeData("__touch_in_progress");D.removeData("__touchstart_control")}}};j("touchstart",["mousedown"],M);j("touchend",["mouseup","mouseout"],M);j("touchmove",["mousemove"],M);function r(){var C=window["sap-ui-config"]||{},L=C.libs||"";function x(K){return document.location.search.indexOf("sap-ui-"+K)>-1||!!C[K.toLowerCase()]}return sap.ui.Device.support.touch||x("xx-test-mobile")||x("xx-fakeOS")||L.match(/sap.m\b/)}if(r()){q.sap.require("sap.ui.thirdparty.jquery-mobile-custom");if(sap.ui.Device.support.touch){var F=false,t=q.vmouse.moveDistanceThreshold,u,v,O,w;var T=function(E,C){var x=E.originalEvent.touches[0],y;if(E.type==="touchstart"){F=false;u=x.pageX;v=x.pageY;O=Math.round(x.pageX-q(E.target).offset().left);w=Math.round(x.pageY-q(E.target).offset().top)}else if(E.type==="touchmove"){F=F||(Math.abs(x.pageX-u)>t||Math.abs(x.pageY-v)>t)}var N=q.event.fix(E.originalEvent||E);N.type=C.sapEventName;if(N.isMarked("firstUIArea")){N.setMark("handledByUIArea",false)}delete N.touches;delete N.changedTouches;delete N.targetTouches;var z=(C.eventName==="mouseup"?E.changedTouches[0]:E.touches[0]);N.screenX=z.screenX;N.screenY=z.screenY;N.clientX=z.clientX;N.clientY=z.clientY;N.ctrlKey=z.ctrlKey;N.altKey=z.altKey;N.shiftKey=z.shiftKey;N.button=(sap.ui.Device.browser.msie&&sap.ui.Device.browser.version<=8?1:0);y=N.isMarked("handledByUIArea");C.eventHandle.handler.call(C.domRef,N);if(E.type==="touchend"&&!y&&!F){N.type="click";N.setMark("handledByUIArea",false);N.offsetX=O;N.offsetY=w;C.eventHandle.handler.call(C.domRef,N)}};q.sap.disableTouchToMouseHandling();q.sap._touchToMouseEvent=false;j("mousedown",["touchstart"],T);j("mousemove",["touchmove"],T);j("mouseup",["touchend","touchcancel"],T)}A.push("swipe","tap","swipeleft","swiperight","scrollstart","scrollstop");e.push({sName:"swipebegin",aTypes:["swipeleft","swiperight"],fnCheck:function(E){var R=sap.ui.getCore().getConfiguration().getRTL();return(R&&E.type==="swiperight")||(!R&&E.type==="swipeleft")}});e.push({sName:"swipeend",aTypes:["swipeleft","swiperight"],fnCheck:function(E){var R=sap.ui.getCore().getConfiguration().getRTL();return(!R&&E.type==="swiperight")||(R&&E.type==="swipeleft")}})}if(q.sap.Version(q.fn.jquery).compareTo("1.9.1")<0){q.sap.ControlEvents=q.sap.ControlEvents.concat(A)}else{q.sap.ControlEvents=A.concat(q.sap.ControlEvents)}for(var i=0;i<e.length;i++){q.sap.PseudoEvents[e[i].sName]=e[i];P.push(e[i].sName)}}());function f(){var e=q.sap.PseudoEvents,r=[];for(var N in e){if(e[N].aTypes){for(var j=0,i=e[N].aTypes.length;j<i;j++){var t=e[N].aTypes[j];if(q.inArray(t,r)==-1){r.push(t)}}}}return r}var g=f();function h(e,C,A,i){return e.shiftKey==i&&e.altKey==A&&l(e)==C}function k(e){return e.shiftKey||e.altKey||l(e)}function l(e){return!!(e.metaKey||e.ctrlKey)}q.Event.prototype.getPseudoTypes=function(){var e=[];if(q.inArray(this.type,g)!=-1){var j=P;var r=j.length;var t=null;for(var i=0;i<r;i++){t=q.sap.PseudoEvents[j[i]];if(t.aTypes&&q.inArray(this.type,t.aTypes)>-1&&t.fnCheck&&t.fnCheck(this)){e.push(t.sName)}}}this.getPseudoTypes=function(){return e.slice()};return e.slice()};q.Event.prototype.isPseudoType=function(t){var e=this.getPseudoTypes();if(t){return q.inArray(t,e)>-1}else{return e.length>0}};var _=q.Event.prototype.preventDefault;q.Event.prototype.preventDefault=function(){_.apply(this,arguments);var e=this.originalEvent;if(!e){return}if(e.keyCode!=0){try{if(!sap.ui.Device.browser.firefox){e.keyCode=0}}catch(i){}}};q.sap.bindAnyEvent=function bindAnyEvent(C){if(C){q(document).bind(q.sap.ControlEvents.join(" "),C)}};q.sap.unbindAnyEvent=function unbindAnyEvent(C){if(C){q(document).unbind(q.sap.ControlEvents.join(" "),C)}};q.sap.checkMouseEnterOrLeave=function checkMouseEnterOrLeave(E,D){if(E.type!="mouseover"&&E.type!="mouseout"){return false}var i=false;var j=D;var r=E.relatedTarget;try{while(r&&r!==j){r=r.parentNode}if(r!==j){i=true}}catch(e){}return i};q.sap.isSpecialKey=function(e){var K=q.sap.KeyCodes,i=e.which,j=n(e)||p(e)||(i>=33&&i<=36)||(i>=44&&i<=46)||(i>=112&&i<=123)||(i===K.BREAK)||(i===K.BACKSPACE)||(i===K.TAB)||(i===K.ENTER)||(i===K.ESCAPE)||(i===K.SCROLL_LOCK);switch(e.type){case"keydown":case"keyup":return j;case"keypress":return(i===0||i===K.BACKSPACE||i===K.ESCAPE||i===K.ENTER)||false;default:return false}};function n(e){var K=q.sap.KeyCodes,i=e.which;return(i===K.SHIFT)||(i===K.CONTROL)||(i===K.ALT)||(i===K.CAPS_LOCK)||(i===K.NUM_LOCK)}function p(e){var K=e.which,A=(K>=37&&K<=40);switch(e.type){case"keydown":case"keyup":return A;case"keypress":return K===0;default:return false}}q.Event.prototype.getOffsetX=function(){if(this.type=='click'){if(this.offsetX){return this.offsetX}if(this.layerX){return this.layerX}if(this.originalEvent.layerX){return this.originalEvent.layerX}}return 0};q.Event.prototype.getOffsetY=function(){if(this.type=='click'){if(this.offsetY){return this.offsetY}if(this.layerY){return this.layerY}if(this.originalEvent.layerY){return this.originalEvent.layerY}}return 0};var S=q.Event.prototype.stopImmediatePropagation;q.Event.prototype.stopImmediatePropagation=function(e){S.apply(this,arguments);if(e){this._bIsStopHandlers=true}};q.Event.prototype.isImmediateHandlerPropagationStopped=function(){return!!this._bIsStopHandlers};q.Event.prototype.setMark=function(K,v){K=K||"handledByControl";v=arguments.length<2?true:v;(this.originalEvent||this)["_sapui_"+K]=v};q.Event.prototype.setMarked=q.Event.prototype.setMark;q.Event.prototype.isMarked=function(K){K=K||"handledByControl";return!!(this.originalEvent||this)["_sapui_"+K]};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.history')){jQuery.sap.declare('jquery.sap.history');sap.ui.define("jquery.sap.history",['jquery.sap.global','jquery.sap.strings'],function(q){"use strict";(function($,w){var s="_skip",r=/\|id-[0-9]+-[0-9]+/,a=new RegExp(s+"[0-9]*$"),b=[],h=[],S={},c=0,d=undefined,I="|",H=[],e=false,f,g=false;$.sap.history=function(A){if(!q.isPlainObject(A)){return}if(!g){var W=$(w),B=(w.location.href.split("#")[1]||"");W.bind('hashchange',k);if($.isArray(A.routes)){var i,C;for(i=0;i<A.routes.length;i++){C=A.routes[i];if(C.path&&C.handler){$.sap.history.addRoute(C.path,C.handler)}}}if(q.isFunction(A.defaultHandler)){f=A.defaultHandler}h.push(B);if(B.length>1){W.trigger("hashchange",[true])}else{d=B}g=true}};$.sap.history.addHistory=function(i,A,B,V){var C,D;if(B===undefined){B=true}if(!V){D=n(i,A);C=o(D);if(C){D+=(I+C)}D+=(I+(B?"1":"0"))}else{D=m(d)}H.push(D);S[D]=true;w.location.hash=D;return D};$.sap.history.addVirtualHistory=function(){$.sap.history.addHistory("",undefined,false,true)};$.sap.history.addRoute=function(i,A,T){if(T){A=q.proxy(A,T)}var R={};R.sIdentifier=i;R['action']=A;b.push(R);return this};$.sap.history.setDefaultHandler=function(i){f=i};$.sap.history.getDefaultHandler=function(){return f};$.sap.history.backToHash=function(i){i=i||"";var A;if(h.length===1){if($.isFunction(f)){f()}}else{A=j(d,i);if(A<0){w.history.go(A)}else{q.sap.log.error("jQuery.sap.history.backToHash: "+i+"is not in the history stack or it's after the current hash")}}};$.sap.history.backThroughPath=function(P){P=P||"";P=w.encodeURIComponent(P);var i;if(h.length===1){if($.isFunction(f)){f()}}else{i=j(d,P,true);if(i<0){w.history.go(i)}else{q.sap.log.error("jQuery.sap.history.backThroughPath: there's no history state which has the "+P+" identifier in the history stack before the current hash")}}};$.sap.history.back=function(i){if(h.length===1){if($.isFunction(f)){f($.sap.history.NavType.Back)}}else{if(!i){i=1}w.history.go(-1*i)}};$.sap.history.NavType={};$.sap.history.NavType.Back="_back";$.sap.history.NavType.Forward="_forward";$.sap.history.NavType.Bookmark="_bookmark";$.sap.history.NavType.Unknown="_unknown";function j(C,T,P){var A=$.inArray(C,h),B,i,D;if(A>0){if(P){for(i=A-1;i>=0;i--){D=h[i];if(D.indexOf(T)===0&&!u(D)){return i-A}}}else{B=$.inArray(T,h);if((B===-1)&&T.length===0){return-1*A}if((B>-1)&&(B<A)){return B-A}}}return 0}function k(E,M){var i=(w.location.href.split("#")[1]||"");i=l(i);if(M||!S[i]){H.push(i)}if(!e){e=true;if(H.length>0){var A=H.shift();if(S[A]){t(A);delete S[A]}else{x(A)}d=A}e=false}}function p(U){var i=U.indexOf("#");if(i===-1){return""}else if(i>0&&i!==U.length-1){return U.slice(i+1)}}function l(i,R){var A=i,B=i?i.indexOf("#"):-1,C,D;if(B===0){A=A.slice(B+1)}if(R){A=A.replace(r,"")}return A}function m(i){var P=i?i:"";if(u(P)){var A=P.lastIndexOf(s);P=P.slice(0,A)}return P+s+c++}function n(i,A){var E=w.encodeURIComponent(i);var B=w.encodeURIComponent(w.JSON.stringify(A));return E+I+B}function o(A){var B=$.inArray(d,h),T,i,C;if(B>-1){for(i=0;i<B+1;i++){C=h[i];if(C.slice(0,C.length-2)===A){return q.sap.uid()}}}return""}function t(i){var A=$.inArray(d,h);if(!(A===-1||A===h.length-1)){h.splice(A+1,h.length-1-A)}h.push(i)}function u(i){return a.test(i)}function v(C,F){var A=$.inArray(C,h),i;if(A!==-1){if(F){for(i=A;i<h.length;i++){if(!u(h[i])){return i-A}}}else{for(i=A;i>=0;i--){if(!u(h[i])){return i-A}}return-1*(A+1)}}}function x(A){var R,B,i,P=A,C,D,N,E;if(d===undefined){D=z(A);if(!D||!D.bBookmarkable){if(q.isFunction(f)){f($.sap.history.NavType.Bookmark)}return}}if(A.length===0){if(q.isFunction(f)){f($.sap.history.NavType.Back)}}else{N=q.inArray(A,h);if(N===0){D=z(A);if(!D||!D.bBookmarkable){if(q.isFunction(f)){f($.sap.history.NavType.Back)}return}}if(u(A)){if(u(d)){B=v(A,false);w.history.go(B)}else{var F=new RegExp(q.sap.escapeRegExp(d+s)+"[0-9]*$");if(F.test(A)){B=v(A,true);if(B){w.history.go(B)}else{w.history.back()}}else{B=v(A,false);w.history.go(B)}}}else{if(N===-1){E=$.sap.history.NavType.Unknown;h.push(A)}else{if(q.inArray(d,h,N+1)===-1){E=$.sap.history.NavType.Forward}else{E=$.sap.history.NavType.Back}}D=z(A);if(D){R=y(D.sIdentifier);if(R){R.action.apply(null,[D.oStateData,E])}}else{q.sap.log.error("hash format error! The current Hash: "+A)}}}}function y(A){var i;for(i=0;i<b.length;i++){if(b[i].sIdentifier===A){return b[i]}}}function z(A){if(u(A)){var i=A.lastIndexOf(s);A=A.slice(0,i)}var P=A.split(I),R={};if(P.length===4||P.length===3){R.sIdentifier=w.decodeURIComponent(P[0]);R.oStateData=w.JSON.parse(w.decodeURIComponent(P[1]));if(P.length===4){R.uid=P[2]}R.bBookmarkable=P[P.length-1]==="0"?false:true;return R}else{return null}}})(q,this);return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.mobile')){jQuery.sap.declare('jquery.sap.mobile');sap.ui.define("jquery.sap.mobile",['jquery.sap.global','sap/ui/Device','jquery.sap.dom','jquery.sap.events'],function(q,D){"use strict";(function($){var F=/(?:\?|&)sap-ui-xx-fakeOS=([^&]+)/;$.sap.simulateMobileOnDesktop=false;if((D.browser.webkit||(D.browser.msie&&D.browser.version>=10))&&!q.support.touch){var r=document.location.search.match(F);var a=r&&r[1]||q.sap.byId("sap-ui-bootstrap").attr("data-sap-ui-xx-fakeOS");if(a){$.sap.simulateMobileOnDesktop=true;var u={ios:"Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.48 (KHTML, like Gecko) Version/5.1 Mobile/9A406 Safari/7534.48.3",iphone:"Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.48 (KHTML, like Gecko) Version/5.1 Mobile/9A406 Safari/7534.48.3",ipad:"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B206",android:"Mozilla/5.0 (Linux; U; Android 4.0.3; en-us; GT-I9100 Build/IML74K) AppleWebKit/534.46 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.46",android_phone:"Mozilla/5.0 (Linux; U; Android 4.0.3; en-us; GT-I9100 Build/IML74K) AppleWebKit/534.46 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.46",android_tablet:"Mozilla/5.0 (Linux; Android 4.1.2; Nexus 7 Build/JZ054K) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19",blackberry:"Mozilla/5.0 (BB10; Touch) AppleWebKit/537.10+ (KHTML, like Gecko) Version/10.0.9.2372 Mobile Safari/537.10+",winphone:"Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)"}[a];if(u&&(D.browser.webkit&&a!=="winphone"||D.browser.msie&&a==="winphone")){if(D.browser.safari){var _=window.navigator;window.navigator=new Object();window.navigator.__proto__=_;window.navigator.__defineGetter__('userAgent',function(){return u})}else{Object.defineProperty(navigator,"userAgent",{get:function(){return u}})}if(D.browser.webkit){q.browser.msie=q.browser.opera=q.browser.mozilla=false;q.browser.webkit=true;q.browser.version="534.46"}else{}D._update($.sap.simulateMobileOnDesktop)}}}$.os=$.extend({os:D.os.name,version:D.os.versionStr,fVersion:D.os.version},$.os);$.os[D.os.name]=true;$.extend($.support,{retina:window.devicePixelRatio>=2});$.device=$.extend({},$.device);$.device.is=$.extend({standalone:window.navigator.standalone,landscape:D.orientation.landscape,portrait:D.orientation.portrait,iphone:D.os.ios&&D.system.phone,ipad:D.os.ios&&D.system.tablet,android_phone:D.system.phone&&D.os.android,android_tablet:D.system.tablet&&D.os.android,tablet:D.system.tablet,phone:D.system.phone,desktop:D.system.desktop},$.device.is);var b=false;$.sap.initMobile=function(o){var c=$("head");if(!b){b=true;o=$.extend({},{viewport:true,statusBar:"default",hideBrowser:true,preventScroll:true,preventPhoneNumberDetection:true,useFullScreenHeight:true,homeIconPrecomposed:false},o);if(D.os.ios&&o.preventPhoneNumberDetection){c.append($('<meta name="format-detection" content="telephone=no">'))}else if(D.browser.msie){c.append($('<meta http-equiv="cleartype" content="on">'));c.append($('<meta name="msapplication-tap-highlight" content="no"/>'))}var i=D.os.ios&&D.os.version>=7&&D.os.version<8&&D.browser.name==="sf";if(o.viewport){var m;if(i&&D.system.phone){m='minimal-ui, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'}else if(i&&D.system.tablet){m='initial-scale=1.0, maximum-scale=1.0, user-scalable=no'}else if($.device.is.iphone&&(Math.max(window.screen.height,window.screen.width)===568)){m="user-scalable=0, initial-scale=1.0"}else if(D.os.android&&D.os.version<3){m="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}else if(D.os.winphone){m="width=320, user-scalable=no"}else{m="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}c.append($('<meta name="viewport" content="'+m+'">'))}if(D.os.ios){c.append($('<meta name="apple-mobile-web-app-capable" content="yes">'));c.append($('<meta name="apple-mobile-web-app-status-bar-style" content="'+o.statusBar+'">'))}if(o.preventScroll){$(window).bind("touchmove",function sapInitMobileTouchMoveHandle(e){if(!e.isMarked()){e.preventDefault()}})}if(o.useFullScreenHeight){$(function(){document.documentElement.style.height="100%"})}}if(o.homeIcon){var I;if(typeof o.homeIcon==="string"){I={phone:o.homeIcon}}else{I=$.extend({},o.homeIcon)}I.precomposed=o.homeIconPrecomposed||I.precomposed;I.favicon=o.homeIcon.icon||I.favicon;I.icon=undefined;$.sap.setIcons(I)}};$.sap.setIcons=function(i){if(!i||(typeof i!=="object")){$.sap.log.warning("Call to jQuery.sap.setIcons() has been ignored because there were no icons given or the argument was not an object.");return}var c=$("head"),p=i.precomposed?"-precomposed":"",g=function(h){return i[h]||i['tablet@2']||i['phone@2']||i['phone']||i['tablet']},s={"phone":"","tablet":"72x72","phone@2":"114x114","tablet@2":"144x144"};if(i["favicon"]){var d=c.find("[rel^=shortcut]");d.each(function(){if(this.rel==="shortcut icon"){$(this).remove()}});c.append($('<link rel="shortcut icon" href="'+i["favicon"]+'" />'))}if(g("phone")){c.find("[rel=apple-touch-icon]").remove();c.find("[rel=apple-touch-icon-precomposed]").remove()}for(var e in s){i[e]=i[e]||g(e);if(i[e]){var f=s[e];c.append($('<link rel="apple-touch-icon'+p+'" '+(f?'sizes="'+f+'"':"")+' href="'+i[e]+'" />'))}}}})(q);return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.properties')){jQuery.sap.declare('jquery.sap.properties');sap.ui.define("jquery.sap.properties",['jquery.sap.global','jquery.sap.sjax'],function(q){"use strict";var P=function(){this.mProperties={};this.aKeys=[]};P.prototype.getProperty=function(k,d){var v=this.mProperties[k];if(typeof(v)=="string"){return v}else if(d){return d}return null};P.prototype.getKeys=function(){return this.aKeys};P.prototype.setProperty=function(k,v){if(typeof(v)!="string"){return}if(typeof(this.mProperties[k])!="string"){this.aKeys.push(k)}this.mProperties[k]=v};P.prototype.clone=function(){var c=new P();c.mProperties=q.extend({},this.mProperties);c.aKeys=q.merge([],this.aKeys);return c};var r=/(?:^|\r\n|\r|\n)[ \t\f]*/;var a=/(\\u[0-9a-fA-F]{0,4})|(\\.)|(\\$)|([ \t\f]*[ \t\f:=][ \t\f]*)/g;var E={'\\f':'\f','\\n':'\n','\\r':'\r','\\t':'\t'};function p(t,o){var l=t.split(r),L,k,v,K,i,m,b;o.mProperties={};o.aKeys=[];for(i=0;i<l.length;i++){L=l[i];if(L===""||L.charAt(0)==="#"||L.charAt(0)==="!"){continue}a.lastIndex=b=0;v="";K=true;while(m=a.exec(L)){if(b<m.index){v+=L.slice(b,m.index)}b=a.lastIndex;if(m[1]){if(m[1].length!==6){throw new Error("Incomplete Unicode Escape '"+m[1]+"'")}v+=String.fromCharCode(parseInt(m[1].slice(2),16))}else if(m[2]){v+=E[m[2]]||m[2].slice(1)}else if(m[3]){L=l[++i];a.lastIndex=b=0}else if(m[4]){if(K){K=false;k=v;v=""}else{v+=m[4]}}}if(b<L.length){v+=L.slice(b)}if(K){k=v;v=""}o.aKeys.push(k);o.mProperties[k]=v}q.sap.unique(o.aKeys)}q.sap.properties=function properties(m){m=q.extend({url:undefined,headers:{}},m);var A=!!m.async,o=new P();function _(t){if(typeof(t)=="string"){p(t,o)}};function b(){var R;if(typeof(m.url)=="string"){R=q.sap.loadResource({url:m.url,dataType:'text',headers:m.headers,failOnError:false,async:A})}return R};if(A){return new window.Promise(function(c,d){var R=b();if(!R){c(o);return}R.then(function(v){try{_(v);c(o)}catch(e){d(e)}},function(v){d(v instanceof Error?v:new Error("Problem during loading of property file '"+m.url+"': "+v))})})}else{_(b());return o}};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.resources')){jQuery.sap.declare('jquery.sap.resources');sap.ui.define("jquery.sap.resources",['jquery.sap.global','jquery.sap.properties','jquery.sap.strings'],function(q){"use strict";var r=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?(-[0-9A-Z]{5,8}|(?:[0-9][0-9A-Z]{3}))*(?:-([0-9A-WYZ](?:-[0-9A-Z]{2,8})+))*(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;var M={"he":"iw","yi":"ji","id":"in","sr":"sh"};var a={"iw":"he","ji":"yi","in":"id","sn":"sr"};var b=/-(saptrc|sappsd)(?:-|$)/i;function n(L){var m;if(typeof L==='string'&&(m=r.exec(L.replace(/_/g,'-')))){var g=m[1].toLowerCase();g=M[g]||g;var S=m[2]?m[2].toLowerCase():undefined;var R=m[3]?m[3].toUpperCase():undefined;var V=m[4];var p=m[6];if((p&&(m=b.exec(p)))||(V&&(m=b.exec(V)))){return"en_US_"+m[1].toLowerCase()}if(g==="zh"&&!R){if(S==="hans"){R="CN"}else if(S==="hant"){R="TW"}}return g+(R?"_"+R+(V?"_"+V.slice(1).replace("-","_"):""):"")}}function d(){var L;if(window.sap&&sap.ui&&sap.ui.getCore){L=sap.ui.getCore().getConfiguration().getLanguage();L=n(L)}return L||"en"}function c(L){var m;if(typeof L==='string'&&(m=r.exec(L.replace(/_/g,'-')))){var g=m[1].toLowerCase();g=a[g]||g;return g+(m[3]?"-"+m[3].toUpperCase()+(m[4]?"-"+m[4].slice(1).replace("_","-"):""):"")}}var e=/^((?:[^?#]*\/)?[^\/?#]*)(\.[^.\/?#]+)((?:\?([^#]*))?(?:#(.*))?)$/;var v=[".properties",".hdbtextbundle"];function s(u){var m=e.exec(u);return m&&{url:u,prefix:m[1],ext:m[2],query:m[4],hash:(m[5]||""),suffix:m[2]+(m[3]||"")}}var B=function(u,L,i,A){this.sLocale=n(L)||d();this.oUrlInfo=s(u);if(!this.oUrlInfo||q.inArray(this.oUrlInfo.ext,v)<0){throw new Error("resource URL '"+u+"' has unknown type (should be one of "+v.join(",")+")")}this.bIncludeInfo=i;this.aCustomBundles=[];this.aPropertyFiles=[];this.aLocales=[];var p=l(this,this.sLocale,A);if(A){this._promise=p}};B.prototype={};B.prototype._enhance=function(C){if(C&&C instanceof B){this.aCustomBundles.push(C)}else{q.sap.log.error("Custom ResourceBundle is either undefined or not an instanceof jQuery.sap.util.ResourceBundle. Therefore this custom ResourceBundle will be ignored!")}};B.prototype.getText=function(k,A,C){var V=null;for(var i=this.aCustomBundles.length-1;i>=0;i--){V=this.aCustomBundles[i].getText(k,A,true);if(V!=null){return V}}for(var i=0;i<this.aPropertyFiles.length;i++){V=this.aPropertyFiles[i].getProperty(k);if(typeof(V)==="string"){break}}if(typeof(V)!=="string"){var t=this.aLocales[0];while(t.length>0){if(t=="zh_HK"){t="zh_TW"}else{var p=t.lastIndexOf('_');if(p>=0){t=t.substring(0,p)}else if(t!="en"){t="en"}else{t=""}}var P=l(this,t);if(P==null){continue}V=P.getProperty(k);if(typeof(V)==="string"){break}}}if(!C&&typeof(V)!=="string"){V=k}if(typeof(V)==="string"){if(A){V=q.sap.formatMessage(V,A)}if(this.bIncludeInfo){V=new String(V);V.originInfo={source:"Resource Bundle",url:this.oUrlInfo.url,locale:this.sLocale,key:k}}}return V};function l(o,L,A){var u=o.oUrlInfo,R,p,P;if(q.inArray(L,o.aLocales)==-1){if(f(L)){switch(u.ext){case'.hdbtextbundle':R={url:u.url,headers:{"Accept-Language":c(L)||""}};break;default:R={url:u.prefix+(L?"_"+L:"")+u.suffix};break}if(A){R.async=true;P=window.Promise.resolve(q.sap.properties(R))}else{p=q.sap.properties(R)}}else{p={getProperty:function(){return undefined}};if(A){P=window.Promise.resolve(p)}}if(A){P.then(function(g){o.aPropertyFiles.push(g);o.aLocales.push(L)});return P}else{o.aPropertyFiles.push(p);o.aLocales.push(L);return p}}return A?window.Promise.resolve(null):null}function f(L){var g=window.sap&&sap.ui&&sap.ui.getCore&&sap.ui.getCore().getConfiguration().getSupportedLanguages();if(g&&g.length>0){return q.inArray(L,g)>=0}return true}q.sap.resources=function resources(p){p=q.extend({url:"",locale:undefined,includeInfo:false},p);var A=!!p.async;var o=new B(p.url,p.locale,p.includeInfo,A);if(A){return new window.Promise(function(g,h){function _(){g(o);delete o._promise}o._promise.then(_,_)})}else{return o}};q.sap.resources._getFallbackLocales=function(L,S){var t=n(L),g=[];function h(L){return!S||S.length===0||q.inArray(L,S)>=0}while(t){if(h(t)){g.push(t)}if(t==="zh_HK"){t="zh_TW"}else{var p=t.lastIndexOf('_');if(p>0){t=t.slice(0,p)}else if(t!=="en"){t="en"}else{t=""}}}if(h("")){g.push("")}return g};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.Global')){if(window.OpenAjax&&window.OpenAjax.hub){OpenAjax.hub.registerLibrary("sap","http://www.sap.com/","0.1",{})}jQuery.sap.declare('sap.ui.Global');sap.ui.define("sap/ui/Global",['jquery.sap.global','jquery.sap.dom'],function(q){"use strict";if(typeof window.sap!=="object"&&typeof window.sap!=="function"){window.sap={}}if(typeof window.sap.ui!=="object"){window.sap.ui={}}sap.ui=q.extend(sap.ui,{version:"1.24.2",buildinfo:{lastchange:"${ldi.scm.revision}",buildtime:"201410141426"}});sap.ui.getVersionInfo=function(L){if(!sap.ui.versioninfo){sap.ui.versioninfo=q.sap.loadResource("sap-ui-version.json")}if(L!==undefined){var a=sap.ui.versioninfo.libraries;for(var i=0,l=a.length;i<l;i++){if(a[i].name===L){return a[i]}}}else{return sap.ui.versioninfo}};sap.ui.namespace=function(n){return q.sap.getObject(n,0)};sap.ui.lazyRequire=function(c,m,M){var f=c.replace(/\//gi,"\."),l=f.lastIndexOf("."),p=f.substr(0,l),C=f.substr(l+1),P=q.sap.getObject(p,0),o=P[C],a=(m||"new").split(" "),b=q.inArray("new",a);M=M||f;if(!o){if(b>=0){o=function(){q.sap.log.debug("lazy stub for '"+f+"' (constructor) called.");q.sap.require(M);var r=P[C];if(r._sapUiLazyLoader){throw new Error("lazyRequire: stub '"+f+"'has not been replaced by module '"+M+"'")}var i=q.sap.newObject(r.prototype);var R=r.apply(i,arguments);if(R&&(typeof R==="function"||typeof R==="object")){i=R}return i};o._sapUiLazyLoader=true;a.splice(b,1)}else{o={}}P[C]=o}q.each(a,function(i,s){if(!o[s]){o[s]=function(){q.sap.log.debug("lazy stub for '"+f+"."+s+"' called.");q.sap.require(M);var r=P[C];if(r[s]._sapUiLazyLoader){throw new Error("lazyRequire: stub '"+f+"."+s+"' has not been replaced by loaded module '"+M+"'")}return r[s].apply(r,arguments)};o[s]._sapUiLazyLoader=true}})};sap.ui.resource=function(l,r){var m=r.match(/^themes\/([^\/]+)\//);if(m){l+=".themes."+m[1];r=r.substr(m[0].length)}return q.sap.getModulePath(l,'/')+r};sap.ui.localResources=function(n){q.sap.registerModulePath(n,"./"+n.replace(/\./g,"/"))};return sap.ui},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Event')){jQuery.sap.declare('sap.ui.base.Event');sap.ui.define("sap/ui/base/Event",['jquery.sap.global','./Object'],function(q,B){"use strict";var E=B.extend("sap.ui.base.Event",{constructor:function(i,s,p){B.apply(this);if(arguments.length>0){this.init(i,s,p)}}});E.prototype.init=function(i,s,p){this.sId=i;this.oSource=s;this.mParameters=p||{};this.bCancelBubble=false;this.bPreventDefault=false};E.prototype.reset=function(){this.sId="";this.oSource=null;this.mParameters=null;this.bCancelBubble=false;this.bPreventDefault=false};E.prototype.getId=function(){return this.sId};E.prototype.getSource=function(){return this.oSource};E.prototype.getParameters=function(){return this.mParameters};E.prototype.getParameter=function(n){return this.mParameters[n]};E.prototype.cancelBubble=function(){this.bCancelBubble=true};E.prototype.preventDefault=function(){this.bPreventDefault=true};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.base.EventProvider')){jQuery.sap.declare('sap.ui.base.EventProvider');sap.ui.define("sap/ui/base/EventProvider",['jquery.sap.global','./Event','./Object','./ObjectPool'],function(q,E,B,O){"use strict";var a=B.extend("sap.ui.base.EventProvider",{constructor:function(){B.apply(this);this.mEventRegistry={}}});a.M_EVENTS={EventHandlerChange:"EventHandlerChange"};a.prototype.oEventPool=new O(E);a.prototype.attachEvent=function(e,d,f,l){if(typeof(d)==="function"){l=f;f=d;d=undefined}if(!this.mEventRegistry[e]){this.mEventRegistry[e]=[]}this.mEventRegistry[e].push({oListener:l,fFunction:f,oData:d});this.fireEvent(a.M_EVENTS.EventHandlerChange,{EventId:e,type:'listenerAttached'});return this};a.prototype.attachEventOnce=function(e,d,f,l){if(typeof(d)==="function"){l=f;f=d;d=undefined}function o(){this.detachEvent(e,o);f.apply(l||this,arguments)}this.attachEvent(e,d,o,undefined);return this};a.prototype.detachEvent=function(e,f,l){var b=this.mEventRegistry[e];if(!b){return this}var L=false;for(var i=0,c=b.length;i<c;i++){if(b[i].fFunction===f&&b[i].oListener===l){b.splice(i,1);L=true;break}}if(b.length==0){delete this.mEventRegistry[e]}if(L){this.fireEvent(a.M_EVENTS.EventHandlerChange,{EventId:e,type:'listenerDetached'})}return this};a.prototype.fireEvent=function(e,p,A,b){if(typeof p=="boolean"){b=A;A=p}var c=this.mEventRegistry[e],P=false,o,d,I;if(b||(c&&q.isArray(c))){c=c?c.slice():[];o=this.oEventPool.borrowObject(e,this,p);for(var i=0,l=c.length;i<l;i++){I=c[i];I.fFunction.call(I.oListener||this,o,I.oData)}if(b){d=this.getEventingParent();while(d&&!o.bCancelBubble){c=d.mEventRegistry[e];if(c&&c instanceof Array){c=c.slice();for(var i=0,l=c.length;i<l;i++){I=c[i];I.fFunction.call(I.oListener||d,o,I.oData)}}d=d.getEventingParent()}}P=o.bPreventDefault;this.oEventPool.returnObject(o)}if(A){return!P}else{return this}};a.prototype.hasListeners=function(e){return!!this.mEventRegistry[e]};a.getEventList=function(e){return e.mEventRegistry};a.prototype.getEventingParent=function(){return null};a.prototype.toString=function(){if(this.getMetadata){return"EventProvider "+this.getMetadata().getName()}else{return"EventProvider"}};a.prototype.destroy=function(){this.mEventRegistry={};B.prototype.destroy.apply(this,arguments)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ManagedObjectMetadata')){jQuery.sap.declare('sap.ui.base.ManagedObjectMetadata');sap.ui.define("sap/ui/base/ManagedObjectMetadata",['jquery.sap.global','./DataType','./Metadata'],function(q,D,M){"use strict";var b=function(c,C){M.apply(this,arguments)};b.prototype=q.sap.newObject(M.prototype);b.prototype.applySettings=function(c){var s=c.metadata;M.prototype.applySettings.call(this,c);var r=/(children|ies|ves|oes|ses|ches|shes|xes|s)$/i;var S={'children':-3,'ies':'y','ves':'f','oes':-2,'ses':-2,'ches':-2,'shes':-2,'xes':-2,'s':-1};function n(i,e,o){var N,I;i=i||{};for(N in i){I=i[N];if(e&&typeof I!=="object"){I={};I[e]=i[N]}I=q.extend({},o,I);I.name=N;if(I.multiple===true&&!I.singularName){I.singularName=N.replace(r,function($,p){var R=S[p.toLowerCase()];return typeof R==="string"?R:p.slice(0,R)})}i[N]=I}return i}function f(i,p){var R={},N;for(N in i){if(p===(i[N].visibility==='public')){R[N]=i[N]}}return R}var a=/([a-z][^.]*(?:\.[a-z][^.]*)*)\./;function d(N){var m=a.exec(N);return(m&&m[1])||""}this._sLibraryName=s.library||d(this.getName());this._mProperties=n(s.properties,"type",{type:"string",group:"Misc"});var A=n(s.aggregations,"type",{type:"sap.ui.core.Control",multiple:true,visibility:'public'});this._mAggregations=f(A,true);this._mPrivateAggregations=f(A,false);this._sDefaultAggregation=s.defaultAggregation||null;this._mAssociations=n(s.associations,"type",{type:"sap.ui.core.Control",multiple:false});this._mEvents=n(s.events,null,{allowPreventDefault:false});this._bEnriched=false;if(c.metadata.__version>1.0){this.generateAccessors()}};b.prototype.afterApplySettings=function(){M.prototype.afterApplySettings.call(this);var p=this.getParent();if(p&&p instanceof b){this._mAllEvents=q.extend({},p._mAllEvents,this._mEvents);this._mAllProperties=q.extend({},p._mAllProperties,this._mProperties);this._mAllPrivateAggregations=q.extend({},p._mAllPrivateAggregations,this._mPrivateAggregations);this._mAllAggregations=q.extend({},p._mAllAggregations,this._mAggregations);this._mAllAssociations=q.extend({},p._mAllAssociations,this._mAssociations);this._sDefaultAggregation=this._sDefaultAggregation||p._sDefaultAggregation;if(p._mHiddenAggregations){this._mHiddenAggregations=q.extend({},p._mHiddenAggregations)}}else{this._mAllEvents=this._mEvents;this._mAllProperties=this._mProperties;this._mAllPrivateAggregations=this._mPrivateAggregations;this._mAllAggregations=this._mAggregations;this._mAllAssociations=this._mAssociations}};b.Kind={PROPERTY:0,SINGLE_AGGREGATION:1,MULTIPLE_AGGREGATION:2,SINGLE_ASSOCIATION:3,MULTIPLE_ASSOCIATION:4,EVENT:5};b.prototype.getLibraryName=function(){return this._sLibraryName};b.prototype.isAbstract=function(){return this._bAbstract};b.prototype.addProperty=function(n,i){i.name=n;this._mProperties[n]=i;if(!this._mAllProperties[n]){this._mAllProperties[n]=i}if(this._bEnriched){this._enrichChildInfos()}};b.prototype.hasProperty=function(n){return!!this._mAllProperties[n]};b.prototype.getProperties=function(){return this._mProperties};b.prototype.getAllProperties=function(){return this._mAllProperties};b.prototype.getAggregations=function(){return this._mAggregations};b.prototype.hasAggregation=function(n){return!!this._mAllAggregations[n]};b.prototype.getAllAggregations=function(){return this._mAllAggregations};b.prototype.getAllPrivateAggregations=function(){return this._mAllPrivateAggregations};b.prototype.getManagedAggregation=function(a){return this._mAllAggregations[a]||this._mAllPrivateAggregations[a]};b.prototype.getDefaultAggregationName=function(){return this._sDefaultAggregation};b.prototype.getDefaultAggregation=function(){return this._sDefaultAggregation&&this.getAllAggregations()[this._sDefaultAggregation]};b.prototype.getAssociations=function(){return this._mAssociations};b.prototype.hasAssociation=function(n){return!!this._mAllAssociations[n]};b.prototype.getAllAssociations=function(){return this._mAllAssociations};b.prototype.getEvents=function(){return this._mEvents};b.prototype.hasEvent=function(n){return!!this._mAllEvents[n]};b.prototype.getAllEvents=function(){return this._mAllEvents};b.prototype.getPropertyDefaults=function(){var d=this._mDefaults,t;if(d){return d}if(this.getParent()instanceof b){d=q.sap.newObject(this.getParent().getPropertyDefaults())}else{d={}}for(var s in this._mProperties){if(this._mProperties[s].defaultValue!==null){d[s]=this._mProperties[s].defaultValue}else{t=D.getType(this._mProperties[s].type);if(t instanceof D){d[s]=t.getDefaultValue()}else{for(var i in t){d[s]=t[i];break}}}}return(this._mDefaults=d)};b.prototype.createPropertyBag=function(){if(!this._fnPropertyBagFactory){this._fnPropertyBagFactory=q.sap.factory(this.getPropertyDefaults())}return new(this._fnPropertyBagFactory)()};b.prototype._enrichChildInfos=function(){if(this._bEnriched){return}if(this.getParent()instanceof b){this.getParent()._enrichChildInfos()}var m,n,i;function a(p,n){return p+n.substring(0,1).toUpperCase()+n.substring(1)}m=this._mProperties;for(n in m){i=m[n];i._sName=n;i._sUID=n;i._oParent=this;i._iKind=b.Kind.PROPERTY;i._sMutator=a("set",n);i._sGetter=a("get",n)}m=this._mAggregations;for(n in m){i=m[n];i._sName=n;i._sUID="aggregation:"+n;i._oParent=this;i._sDestructor=a("destroy",n);i._sGetter=a("get",n);if(i.multiple){i._iKind=b.Kind.MULTIPLE_AGGREGATION;i._sMutator=a("add",i.singularName);i._sRemoveMutator=a("remove",i.singularName);i._sRemoveAllMutator=a("removeAll",n)}else{i._iKind=b.Kind.SINGLE_AGGREGATION;i._sMutator=a("set",n)}}m=this._mAssociations;for(n in m){i=m[n];i._sName=n;i._sUID="association:"+n;i._oParent=this;i._sGetter=a("get",n);if(i.multiple){i._iKind=b.Kind.MULTIPLE_ASSOCIATION;i._sMutator=a("add",i.singularName)}else{i._iKind=b.Kind.SINGLE_ASSOCIATION;i._sMutator=a("set",n)}}m=this._mEvents;for(n in m){i=m[n];i._sName=n;i._sUID="event:"+n;i._oParent=this;i._iKind=b.Kind.EVENT;i._sMutator=a("attach",n)}this._bEnriched=true};b.prototype.getJSONKeys=function(){if(this._mJSONKeys){return this._mJSONKeys}this._enrichChildInfos();var j={};function a(m){var n,i;for(n in m){i=m[n];if(!j[n]||i._iKind<j[n]._iKind){j[n]=i};j[i._sUID]=i}}a(this.getAllProperties());a(this.getAllAggregations());a(this.getAllAssociations());a(this.getAllEvents());return(this._mJSONKeys=j)};b.prototype.generateAccessors=function(){var c=this;var e=this.getClass().prototype;function g(p,n,f,d){var n=p+n.substring(0,1).toUpperCase()+n.substring(1);if(!e[n]){e[n]=d?function(){q.sap.log.warning("Usage of deprecated feature: "+c.getName()+"."+n);return f.apply(this,arguments)}:f;c._aPublicMethods.push(n)}}q.each(this._mProperties,function(n,i){g("get",n,function(){return this.getProperty(n)});g("set",n,function(v){this.setProperty(n,v);return this},i.deprecated);if(i.bindable){g("bind",n,function(p,f,m){this.bindProperty(n,p,f,m);return this},i.deprecated);g("unbind",n,function(p){this.unbindProperty(n,p);return this})}});q.each(this._mAggregations,function(n,d){if(!d.multiple){g("get",n,function(){return this.getAggregation(n)});g("set",n,function(v){this.setAggregation(n,v);return this},d.deprecated)}else{var h=d.singularName;g("get",n,function(){return this.getAggregation(n,[])});g("add",h,function(a){this.addAggregation(n,a);return this},d.deprecated);g("insert",h,function(i,a){this.insertAggregation(n,i,a);return this},d.deprecated);g("remove",h,function(a){return this.removeAggregation(n,a)});g("removeAll",n,function(){return this.removeAllAggregation(n)});g("indexOf",h,function(a){return this.indexOfAggregation(n,a)})}g("destroy",n,function(){this.destroyAggregation(n);return this});if(d.bindable){g("bind",n,function(p,t,s,f){this.bindAggregation(n,p,t,s,f);return this},d.deprecated);g("unbind",n,function(p){this.unbindAggregation(n,p);return this})}});q.each(this._mAssociations,function(n,i){if(!i.multiple){g("get",n,function(){return this.getAssociation(n)});g("set",n,function(v){this.setAssociation(n,v);return this},i.deprecated)}else{var d=i.singularName;g("get",n,function(){return this.getAssociation(n,[])});g("add",d,function(a){this.addAssociation(n,a);return this},i.deprecated);g("remove",d,function(a){return this.removeAssociation(n,a)});g("removeAll",n,function(){return this.removeAllAssociation(n)})}});q.each(this._mEvents,function(n,i){g("attach",n,function(d,f,o){this.attachEvent(n,d,f,o);return this},i.deprecated);g("detach",n,function(f,o){this.detachEvent(n,f,o);return this});var a=!!i.allowPreventDefault;var h=!!i.enableEventBubbling;g("fire",n,function(p){return this.fireEvent(n,p,a,h)})})};(function(){var u={};function a(i){i=sap.ui.getCore().getConfiguration().getUIDPrefix()+i;u[i]=u[i]||0;return(i+u[i]++)}b.uid=a;b.prototype.uid=function(){var i=this._sUIDToken;if(typeof i!=="string"){i=this.getName();i=i.slice(i.lastIndexOf('.')+1);i=i.replace(/([a-z])([A-Z])/g,"$1 $2").split(" ").slice(-1)[0];i=this._sUIDToken=i.replace(/([^A-Za-z0-9-_.:])|([0-9]+$)/g,"").toLowerCase()}return a(i)}}());return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentMetadata')){jQuery.sap.declare('sap.ui.core.ComponentMetadata');sap.ui.define("sap/ui/core/ComponentMetadata",['jquery.sap.global','sap/ui/base/ManagedObjectMetadata'],function(q,M){"use strict";var C=function(c,o){M.apply(this,arguments)};C.prototype=q.sap.newObject(M.prototype);C.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};C.prototype.applySettings=function(c){var s=c.metadata;var n=this.getName(),p=n.replace(/\.\w+?$/,"");if(s._src){if(s._src=="component.json"){q.sap.log.warning("Usage of declacation \"metadata: 'component.json'\" is deprecated (component "+n+"). Use \"metadata: 'json'\" instead.")}else if(s._src!="json"){throw new Error("Invalid metadata declaration for component "+n+": \""+s._src+"\"! Use \"metadata: 'json'\" to load metadata from component.json.")}var r=p.replace(/\./g,"/")+"/component.json";q.sap.log.info("The metadata of the component "+n+" is loaded from file "+r+".");try{var R=q.sap.loadResource(r,{dataType:"json",failOnError:false});q.extend(s,R)}catch(e){q.sap.log.error("Failed to load component metadata from \""+r+"\" (component "+n+")! Reason: "+e)}}M.prototype.applySettings.call(this,c);this._sComponentName=p;this._bInitialized=false;this._iInstanceCount=0;this._sVersion=s.version;this._mDependencies=s.dependencies;this._aIncludes=s.includes;this._mConfig=s.config;this._mCustomizing=s.customizing;this._mModels=s.models||{};this._mServices=s.services||{};var P=this.getParent();if(P instanceof C){this._mConfig=q.extend(true,{},P._mConfig,this._mConfig);this._mCustomizing=q.extend(true,{},P._mCustomizing,this._mCustomizing);this._mModels=q.extend(true,{},P._mModels,this._mModels);this._mServices=q.extend(true,{},P._mServices,this._mServices)}this._oStaticInfo=s};C.prototype.init=function(){if(!this._bInitialized){var p=this.getParent();if(p instanceof C){p.init()}this._loadDependencies();this._loadIncludes();this._bInitialized=true}};C.prototype.exit=function(){if(this._bInitialized){var p=this.getParent();if(p instanceof C){p.exit()}this._bInitialized=false}};C.prototype.onInitComponent=function(){if(this._iInstanceCount===0&&!q.isEmptyObject(this._mCustomizing)){q.sap.require("sap.ui.core.CustomizingConfiguration");sap.ui.core.CustomizingConfiguration.activateForComponent(this._sComponentName)}this._iInstanceCount++};C.prototype.onExitComponent=function(){this._iInstanceCount--;if(this._iInstanceCount===0&&!q.isEmptyObject(this._mCustomizing)){if(sap.ui.core.CustomizingConfiguration){sap.ui.core.CustomizingConfiguration.deactivateForComponent(this._sComponentName)}}};C.prototype.getCustomEntry=function(k,m){if(!k||k.indexOf(".")<=0){q.sap.log.warning("Component Metadata entries with keys without namespace prefix can not be read via getCustomEntry. Key: "+k+", Component: "+this.getName());return null}var d=this._oStaticInfo[k]||{};if(!q.isPlainObject(d)){q.sap.log.warning("Custom Component Metadata entry with key '"+k+"' must be an object. Component: "+this.getName());return null}var p=this.getParent();if(m&&p instanceof C){return q.extend(true,{},p.getCustomEntry(k,m),d)}return q.extend(true,{},d)};C.prototype.getDependencies=function(){return this._mDependencies};C.prototype.getIncludes=function(){return(this._aIncludes&&this._aIncludes.length>0)?this._aIncludes:null};C.prototype.getUI5Version=function(){return this._mDependencies?this._mDependencies.ui5version:null};C.prototype.getComponents=function(){var c=null;if(this._mDependencies){if(this._mDependencies.components&&(this._mDependencies.components.length>0)){c=this._mDependencies.components}}return c};C.prototype.getLibs=function(){var l=null;if(this._mDependencies){if(this._mDependencies.libs&&(this._mDependencies.libs.length>0)){l=this._mDependencies.libs}}return l};C.prototype.getVersion=function(){return this._sVersion};C.prototype.getConfig=function(k){return this._mConfig?q.extend({},k?this._mConfig[k]:this._mConfig):undefined};C.prototype.getCustomizing=function(){return this._mCustomizing?q.extend({},this._mCustomizing):undefined};C.prototype.getModels=function(){return this._mModels};C.prototype.getServices=function(){return this._mServices};C.prototype._loadIncludes=function(){var I=this.getIncludes();if(I&&I.length>0){var t=this;var l=this.getLibraryName();q.each(I,function(i,f){if(f.match(/\.css$/i)){var c=sap.ui.resource(l,f);q.sap.log.info("Component \""+t.getName()+"\" is loading CSS: \""+c+"\"");q.sap.includeStyleSheet(c)}else{var m=f.match(/\.js$/i);if(m){var p=l.replace(/\./g,'/')+(f.slice(0,1)==='/'?'':'/')+f.slice(0,m.index);q.sap.log.info("Component \""+t.getName()+"\" is loading JS: \""+p+"\"");q.sap._requirePath(p)}}})}};C.prototype._loadDependencies=function(){var t=this,d=this.getDependencies();if(d){var l=d.libs;if(l){q.each(l,function(i,L){q.sap.log.info("Component \""+t.getName()+"\" is loading library: \""+L+"\"");sap.ui.getCore().loadLibrary(L)})}var c=d.components;if(c){q.each(c,function(i,n){q.sap.log.info("Component \""+t.getName()+"\" is loading component: \""+n+".Component\"");sap.ui.component.load({name:n})})}}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Configuration')){jQuery.sap.declare('sap.ui.core.Configuration');sap.ui.define("sap/ui/core/Configuration",['jquery.sap.global','sap/ui/base/Object','./Locale','sap/ui/thirdparty/URI'],function(q,B,L,U){"use strict";var C=B.extend("sap.ui.core.Configuration",{constructor:function(o){this._oCore=o;function f(){var e;if(!!sap.ui.Device.os.android){e=navigator.userAgent.match(/\s([a-z]{2}-[a-z]{2})[;)]/i);if(e){return e[1]}}return navigator.language||navigator.userLanguage||navigator.browserLanguage}var g={"theme":{type:"string",defaultValue:"base"},"language":{type:"string",defaultValue:f()},"formatLocale":{type:"string",defaultValue:null},"accessibility":{type:"boolean",defaultValue:true},"animation":{type:"boolean",defaultValue:true},"rtl":{type:"boolean",defaultValue:null},"debug":{type:"boolean",defaultValue:false},"inspect":{type:"boolean",defaultValue:false},"originInfo":{type:"boolean",defaultValue:false},"noConflict":{type:"boolean",defaultValue:false,noUrl:true},"noDuplicateIds":{type:"boolean",defaultValue:true},"trace":{type:"boolean",defaultValue:false,noUrl:true},"modules":{type:"string[]",defaultValue:[],noUrl:true},"areas":{type:"string[]",defaultValue:null,noUrl:true},"onInit":{type:"code",defaultValue:undefined,noUrl:true},"uidPrefix":{type:"string",defaultValue:"__",noUrl:true},"ignoreUrlParams":{type:"boolean",defaultValue:false,noUrl:true},"weinreServer":{type:"string",defaultValue:"",noUrl:true},"weinreId":{type:"string",defaultValue:""},"preload":{type:"string",defaultValue:"auto"},"rootComponent":{type:"string",defaultValue:"",noUrl:true},"xx-rootComponentNode":{type:"string",defaultValue:"",noUrl:true},"application":{type:"string",defaultValue:""},"appCacheBuster":{type:"string[]",defaultValue:[]},"xx-appCacheBusterMode":{type:"string",defaultValue:"sync"},"xx-disableCustomizing":{type:"boolean",defaultValue:false,noUrl:true},"xx-loadAllMode":{type:"boolean",defaultValue:false,noUrl:true},"xx-test-mobile":{type:"boolean",defaultValue:false},"xx-preloadLibCss":{type:"string[]",defaultValue:[]},"xx-componentPreload":{type:"string",defaultValue:""},"xx-bindingSyntax":{type:"string",defaultValue:"simple",noUrl:true},"xx-designMode":{type:"boolean",defaultValue:false},"xx-accessibilityMode":{type:"boolean",defaultValue:false},"xx-supportedLanguages":{type:"string[]",defaultValue:[]},"xx-bootTask":{type:"function",defaultValue:undefined,noUrl:true},"xx-suppressDeactivationOfControllerCode":{type:"boolean",defaultValue:false},"xx-noNativeScroll":{type:"boolean",defaultValue:false},"statistics":{type:"boolean",defaultValue:false}};var h={"xx-test":"1.15","flexBoxPolyfill":"1.14","sapMeTabContainer":"1.14","sapMeProgessIndicator":"1.14","sapMGrowingList":"1.14","sapMListAsTable":"1.14","sapMDialogWithPadding":"1.14"};this.oFormatSettings=new C.FormatSettings(this);var i=this;function s(N,V){if(typeof V==="undefined"||V===null){return}switch(g[N].type){case"boolean":if(typeof V==="string"){if(g[N].defaultValue){i[N]=V.toLowerCase()!="false"}else{i[N]=V.toLowerCase()==="true"||V.toLowerCase()==="x"}}else{i[N]=!!V}break;case"string":i[N]=""+V;break;case"code":i[N]=typeof V==="function"?V:String(V);break;case"function":if(typeof V!=="function"){throw new Error("unsupported value")}i[N]=V;break;case"string[]":if(q.isArray(V)){i[N]=V}else if(typeof V==="string"){i[N]=q.map(V.split(/[ ,;]/),function($){return q.trim($)})}else{throw new Error("unsupported value")}break;default:throw new Error("illegal state")}}function j(T){var v,w;try{v=new URI(T,window.location.href).normalize();w=v.path();return w+(w.slice(-1)==='/'?'':'/')+"UI5/"}catch(e){}}for(var n in g){i[n]=g[n].defaultValue}var k=window["sap-ui-config"]||{};k.oninit=k.oninit||k["evt-oninit"];for(var n in g){s(n,k[n.toLowerCase()])}if(k.libs){i.modules=q.map(k.libs.split(","),function($){return q.trim($)+".library"}).concat(i.modules)}var P="compatversion";var D=k[P];var l=q.sap.Version("1.14");this._compatversion={};function _(e){var v=!e?D||l.toString():k[P+"-"+e.toLowerCase()]||D||h[e]||l.toString();v=q.sap.Version(v.toLowerCase()==="edge"?sap.ui.version:v);return q.sap.Version(v.getMajor(),v.getMinor())}this._compatversion._default=_();for(var n in h){this._compatversion[n]=_(n)}if(!i.ignoreUrlParams){var u="sap-ui-";var m=q.sap.getUriParameters();if(m.mParams['sap-locale']||m.mParams['sap-language']){var V=m.get('sap-locale')||M[m.get('sap-language').toUpperCase()]||m.get('sap-language');if(V===""){i['language']=g['language'].defaultValue}else{s('language',V)}}if(m.mParams['sap-accessibility']){var V=m.get('sap-accessibility');if(V==="X"||V==="x"){s('xx-accessibilityMode',true)}else{s('xx-accessibilityMode',false)}}if(m.mParams['sap-rtl']){var V=m.get('sap-rtl');if(V==="X"||V==="x"){s('rtl',true)}else{s('rtl',false)}}if(m.mParams['sap-theme']){var V=m.get('sap-theme');if(V===""){i['theme']=g['theme'].defaultValue}else{s('theme',V)}}if(m.mParams['sap-statistics']){var V=m.get('sap-statistics');s('statistics',V)}for(var n in g){if(g[n].noUrl){continue}var V=m.get(u+n);if(V===""){i[n]=g[n].defaultValue}else{s(n,V)}}}this.derivedRTL=L._impliesRTL(i.language);var t=i.theme;var T;var I=t.indexOf("@");if(I>=0){T=j(t.slice(I+1));if(T){i.theme=t.slice(0,I);i.themeRoot=T}else{i.theme=(k.theme&&k.theme!==t)?k.theme:"base";I=-1}}i.theme=this._normalizeTheme(i.theme,T);var p=i['languagesDeliveredWithCore']=L._coreI18nLocales;var r=i['xx-supportedLanguages'];if(r.length===0||(r.length===1&&r[0]==='*')){r=[]}else if(r.length===1&&r[0]==='default'){r=p||[]}i['xx-supportedLanguages']=r;for(var n in g){if(i[n]!==g[n].defaultValue){q.sap.log.info("  "+n+" = "+i[n])}}},getVersion:function(){if(this._version){return this._version}this._version=new q.sap.Version(sap.ui.version);return this._version},getCompatibilityVersion:function(f){if(typeof(f)==="string"&&this._compatversion[f]){return this._compatversion[f]}return this._compatversion._default},getTheme:function(){return this.theme},_setTheme:function(t){this.theme=t;return this},_normalizeTheme:function(t,T){if(t&&T==null&&t.match(/^sap_corbu$/i))return"sap_goldreflection";return t},getLanguage:function(){return this.language},setLanguage:function(l){d(typeof l==="string"&&l,"sLanguage must be a BCP47 language tag or Java Locale id or null");var o=this.getRTL(),m;if(l!=this.language){m=this._collect();this.language=m.language=l;this.derivedRTL=L._impliesRTL(l);if(o!=this.getRTL()){m.rtl=this.getRTL()}this._endCollect()}return this},getLocale:function(){return new L(this.language)},getFormatLocale:function(){return this.formatLocale||this.language},setFormatLocale:function(f){d(f===null||typeof f==="string"&&f,"sFormatLocale must be a BCP47 language tag or Java Locale id or null");var m;if(f!=this.formatLocale){m=this._collect();this.formatLocale=m.formatLocale=f;this._endCollect()}return this},getLanguagesDeliveredWithCore:function(){return this["languagesDeliveredWithCore"]},getSupportedLanguages:function(){return this["xx-supportedLanguages"]},getAccessibility:function(){return this.accessibility},getAnimation:function(){return this.animation},getRTL:function(){return this.rtl===null?this.derivedRTL:this.rtl},setRTL:function(r){d(r===null||typeof r==="boolean","bRTL must be null or a boolean");var m;if(r!=this.rtl){m=this._collect();this.rtl=m.rtl=this.getRTL();this._endCollect()}return this},getDebug:function(){return this.debug},getInspect:function(){return this.inspect},getOriginInfo:function(){return this.originInfo},getNoDuplicateIds:function(){return this.noDuplicateIds},getTrace:function(){return this.trace},getUIDPrefix:function(){return this.uidPrefix},getDesignMode:function(){return this["xx-designMode"]},getSuppressDeactivationOfControllerCode:function(){return this["xx-suppressDeactivationOfControllerCode"]},getWeinreServer:function(){var w=this.weinreServer;if(!w){w=window.location.protocol+"//"+window.location.hostname+":";w+=(parseInt(window.location.port,10)||8080)+1}return w},getWeinreId:function(){return this.weinreId},getApplication:function(){return this.application},getRootComponent:function(){return this.rootComponent},getAppCacheBuster:function(){return this.appCacheBuster},getAppCacheBusterMode:function(){return this["xx-appCacheBusterMode"]},getDisableCustomizing:function(){return this["xx-disableCustomizing"]},getPreload:function(){return this.preload},getComponentPreload:function(){return this['xx-componentPreload']||this.preload},getFormatSettings:function(){return this.oFormatSettings},_collect:function(){var m=this.mChanges||(this.mChanges={__count:0});m.__count++;return m},_endCollect:function(){var m=this.mChanges;if(m&&(--m.__count)===0){delete m.__count;this._oCore&&this._oCore.fireLocalizationChanged(m);delete this.mChanges}},getStatistics:function(){return this.statistics||window.localStorage.getItem("sap-ui-statistics")=="X"},getNoNativeScroll:function(){return this["xx-noNativeScroll"]}});var M={"ZH":"zh-Hans","ZF":"zh-Hant","1Q":"en-US-x-saptrc","2Q":"en-US-x-sappsd"};var a={"":{pattern:null},"1":{pattern:"dd.MM.yyyy"},"2":{pattern:"MM/dd/yyyy"},"3":{pattern:"MM-dd-yyyy"},"4":{pattern:"yyyy.MM.dd"},"5":{pattern:"yyyy/MM/dd"},"6":{pattern:"yyyy-MM-dd"},"7":{pattern:"Gyy.MM.dd",ignore:true},"8":{pattern:"Gyy/MM/dd",ignore:true},"9":{pattern:"Gyy-MM-dd",ignore:true},"A":{pattern:"yyyy/MM/dd",ignore:true},"B":{pattern:"yyyy/MM/dd",ignore:true},"C":{pattern:"yyyy/MM/dd",ignore:true}};var b={"":{"short":null,medium:null,dayPeriods:null},"0":{"short":"HH:mm",medium:"HH:mm:ss",dayPeriods:null},"1":{"short":"hh:mm a",medium:"hh:mm:ss a",dayPeriods:["AM","PM"]},"2":{"short":"hh:mm a",medium:"hh:mm:ss a",dayPeriods:["am","pm"]},"3":{"short":"KK:mm a",medium:"KK:mm:ss a",dayPeriods:["AM","PM"]},"4":{"short":"KK:mm a",medium:"KK:mm:ss a",dayPeriods:["am","pm"]}};var c={"":{groupingSeparator:null,decimalSeparator:null}," ":{groupingSeparator:".",decimalSeparator:","},"X":{groupingSeparator:",",decimalSeparator:"."},"Y":{groupingSeparator:" ",decimalSeparator:","}};function d(e,m){if(!e){throw new Error(m)}}B.extend("sap.ui.core.Configuration.FormatSettings",{constructor:function(o){this.oConfiguration=o;this.mSettings={};this.sLegacyDateFormat=undefined;this.sLegacyTimeFormat=undefined;this.sLegacyNumberFormatSymbolSet=undefined},getFormatLocale:function(){function f(t){var l=t.oConfiguration.language;if(!q.isEmptyObject(t.mSettings)){if(l.indexOf("-x-")<0){l=l+"-x-sapufmt"}else if(l.indexOf("-sapufmt")<=l.indexOf("-x-")){l=l+"-sapufmt"}}return l}return new L(this.oConfiguration.formatLocale||f(this))},_set:function(k,v){var o=this.mSettings[k];if(v!=null){this.mSettings[k]=v}else{delete this.mSettings[k]}if((o==null!=v==null)||!q.sap.equal(o,v)){var m=this.oConfiguration._collect();m[k]=v;this.oConfiguration._endCollect()}},getDatePattern:function(s){return this.mSettings["dateFormat-"+s]},setDatePattern:function(s,p){d(s=="short"||s=="medium"||s=="long"||s=="full","sStyle must be short, medium, long or full");this._set("dateFormat-"+s,p);return this},getTimePattern:function(s){return this.mSettings["timeFormat-"+s]},setTimePattern:function(s,p){d(s=="short"||s=="medium"||s=="long"||s=="full","sStyle must be short, medium, long or full");this._set("timeFormat-"+s,p);return this},getNumberSymbol:function(t){return this.mSettings["symbols-latn-"+t]},setNumberSymbol:function(t,s){d(t=="decimal"||t=="group"||t=="plusSign"||t=="minusSign","sType must be decimal, group, plusSign or minusSign");this._set("symbols-latn-"+t,s);return this},_setDayPeriods:function(w,t){this._set("dayPeriods-format-"+w,t);return this},getLegacyDateFormat:function(){return this.sLegacyDateFormat||undefined},setLegacyDateFormat:function(f){f=f?String(f).toUpperCase():"";d(!f||a.hasOwnProperty(f),"sFormatId must be one of ['1','2','3','4','5','6','7','8','9','A','B','C'] or empty");if(a[f].ignore){q.sap.log.warning("The ABAP date format '"+f+"' ("+a[f].pattern+") is not supported yet. Falling back to locale specific date formats.");f=""}var m=this.oConfiguration._collect();this.sLegacyDateFormat=m.legacyDateFormat=f;this.setDatePattern("short",a[f].pattern);this.setDatePattern("medium",a[f].pattern);this.oConfiguration._endCollect();return this},getLegacyTimeFormat:function(){return this.sLegacyTimeFormat||undefined},setLegacyTimeFormat:function(f){d(!f||b.hasOwnProperty(f),"sFormatId must be one of ['0','1','2','3','4'] or empty");var m=this.oConfiguration._collect();this.sLegacyTimeFormat=m.legacyTimeFormat=f=f||"";this.setTimePattern("short",b[f]["short"]);this.setTimePattern("medium",b[f]["medium"]);this._setDayPeriods("abbreviated",b[f].dayPeriods);this.oConfiguration._endCollect();return this},getLegacyNumberFormat:function(){return this.sLegacyNumberFormat||undefined},setLegacyNumberFormat:function(f){f=f?f.toUpperCase():"";d(!f||c.hasOwnProperty(f),"sFormatId must be one of [' ','X','Y'] or empty");var m=this.oConfiguration._collect();this.sLegacyNumberFormat=m.legacyNumberFormat=f;this.setNumberSymbol("group",c[f].groupingSeparator);this.setNumberSymbol("decimal",c[f].decimalSeparator);this.oConfiguration._endCollect()},getCustomLocaleData:function(){return this.mSettings}});return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ElementMetadata')){jQuery.sap.declare('sap.ui.core.ElementMetadata');sap.ui.define("sap/ui/core/ElementMetadata",['jquery.sap.global','sap/ui/base/ManagedObjectMetadata'],function(q,M){"use strict";var E=function(c,C){M.apply(this,arguments)};E.prototype=q.sap.newObject(M.prototype);E.uid=M.uid;E.prototype.getElementName=function(){return this._sClassName};E.prototype.getRendererName=function(){return this._sRendererName};E.prototype.getRenderer=function(){var r=this.getRendererName();if(!r){return}var R=q.sap.getObject(r);if(R){return R}q.sap.require(r);return q.sap.getObject(r)};E.prototype.applySettings=function(c){var s=c.metadata;this._sVisibility=s["visibility"]||"public";var r=c.hasOwnProperty("renderer")?(c.renderer||""):undefined;delete c.renderer;M.prototype.applySettings.call(this,c);this._sRendererName=this.getName()+"Renderer";if(typeof r!=="undefined"){if(typeof r==="string"){this._sRendererName=r||undefined;return}if(typeof r==="function"){r={render:r}}var p=this.getParent();var b;if(p&&p instanceof E){b=p.getRenderer()}if(!b){q.sap.require("sap.ui.core.Renderer");b=sap.ui.core.Renderer}var R=q.sap.newObject(b);q.extend(R,r);q.sap.setObject(this.getRendererName(),R)}};E.prototype.afterApplySettings=function(){M.prototype.afterApplySettings.apply(this,arguments);this.register&&this.register(this)};E.prototype.isHidden=function(){return this._sVisibility==="hidden"};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.EventBus')){jQuery.sap.declare('sap.ui.core.EventBus');sap.ui.define("sap/ui/core/EventBus",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var a=sap.ui.base.Object.extend("sap.ui.core.EventBus",{constructor:function(){sap.ui.base.Object.apply(this);this._mChannels={};this._defaultChannel=new E()}});a.prototype.subscribe=function(c,e,f,l){if(typeof(e)==="function"){l=f;f=e;e=c;c=null}var C=b(this,c);C.attachEvent(e,f,l);return this};a.prototype.unsubscribe=function(c,e,f,l){if(typeof(e)==="function"){l=f;f=e;e=c;c=null}var C=g(this,c);if(!C){return this}C.detachEvent(e,f,l);if(C!=this._defaultChannel){var m=E.getEventList(C);var i=true;for(var I in m){if(C.hasListeners(I)){i=false;break}}if(i){delete this._mChannels[c]}}return this};a.prototype.publish=function(c,e,d){if(arguments.length==1){d=null;e=c;c=null}else if(arguments.length==2){if(typeof(e)!="string"){d=e;e=c;c=null}}d=d?d:{};var C=g(this,c);if(!C){return}var f=E.getEventList(C)[e];if(f&&q.isArray(f)){f=f.slice();var I;for(var i=0,l=f.length;i<l;i++){I=f[i];I.fFunction.call(I.oListener||this,c,e,d)}}};a.prototype.getInterface=function(){return this};a.prototype.destroy=function(){this._defaultChannel.destroy();for(var c in this._mChannels){this._mChannels[c].destroy()}this._mChannels={};sap.ui.base.Object.prototype.destroy.apply(this,arguments)};function g(e,c){if(!c){return e._defaultChannel}return e._mChannels[c]};function b(e,c){var C=g(e,c);if(!C&&c){e._mChannels[c]=new E();C=e._mChannels[c]}return C};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.FocusHandler')){jQuery.sap.declare('sap.ui.core.FocusHandler');sap.ui.define("sap/ui/core/FocusHandler",['jquery.sap.global','sap/ui/Device','sap/ui/Global','sap/ui/base/Object','jquery.sap.script'],function(q,D,G,B){"use strict";var F=B.extend("sap.ui.core.FocusHandler",{constructor:function(r,c){B.apply(this);this.oCore=c;this.oCurrent=null;this.oLast=null;this.aEventQueue=[];this.fEventHandler=q.proxy(this.onEvent,this);this.fDestroyHandler=q.proxy(this.destroy,this);if(r.addEventListener&&!!!D.browser.internet_explorer){r.addEventListener("focus",this.fEventHandler,true);r.addEventListener("blur",this.fEventHandler,true)}else{q(r).bind("activate",this.fEventHandler);q(r).bind("deactivate",this.fEventHandler)}q.sap.log.debug("FocusHandler setup on Root "+r.type+(r.id?": "+r.id:""),null,"sap.ui.core.FocusHandler");q(window).bind("unload",{"oRootRef":r},this.fDestroyHandler)}});F.prototype.getCurrentFocusedControlId=function(){var c=null;try{var a=q(document.activeElement);if(a.is(":focus")||(D.browser.internet_explorer&&D.browser.version==8&&document.hasFocus())){c=a.control()}}catch(e){}return c&&c.length>0?c[0].getId():null};F.prototype.destroy=function(e){var r=e.data.oRootRef;if(r){if(r.removeEventListener&&!!!D.browser.internet_explorer){r.removeEventListener("focus",this.fEventHandler,true);r.removeEventListener("blur",this.fEventHandler,true)}else{q(r).unbind("activate",this.fEventHandler);q(r).unbind("deactivate",this.fEventHandler)}}q(window).unbind("unload",this.fDestroyHandler);this.oCore=null};F.prototype.onEvent=function(b){var e=q.event.fix(b);q.sap.log.debug("Event "+e.type+" reached Focus Handler (target: "+e.target+(e.target?e.target.id:"")+")",null,"sap.ui.core.FocusHandler");var a=(e.type=="focus"||e.type=="focusin"||e.type=="activate")?"focus":"blur";this.aEventQueue.push({type:a,controlId:g(e.target)});if(this.aEventQueue.length==1){this.processEvent()}};F.prototype.processEvent=function(){var e=this.aEventQueue[0];if(!e){return}try{if(e.type=="focus"){this.onfocusEvent(e.controlId)}else if(e.type=="blur"){this.onblurEvent(e.controlId)}}finally{this.aEventQueue.shift();if(this.aEventQueue.length>0){this.processEvent()}}};F.prototype.onfocusEvent=function(c){this.oCurrent=c;if(!this.oLast){return}t(this.oLast,c,this.oCore);this.oLast=null};F.prototype.onblurEvent=function(c){if(!this.oCurrent){return}this.oLast=c;this.oCurrent=null;q.sap.delayedCall(0,this,"checkForLostFocus")};F.prototype.checkForLostFocus=function(){if(this.oCurrent==null&&this.oLast!=null){t(this.oLast,null,this.oCore)}this.oLast=null};var g=function(d){var i=q(d).closest("[data-sap-ui]").attr("id");if(i){return i}return null};var t=function(c,r,C){var o=c?sap.ui.getCore().byId(c):null;if(o){var R=r?sap.ui.getCore().byId(r):null;var e=q.Event("sapfocusleave");e.target=o.getDomRef();e.relatedControlId=R?R.getId():null;e.relatedControlFocusInfo=R?R.getFocusInfo():null;var a=o.getUIArea();var u=null;if(a){u=C.getUIArea(a.getId())}else{var p=sap.ui.getCore().getStaticAreaRef();if(q.sap.containsOrEquals(p,e.target)){u=C.getUIArea(p.id)}}if(u){u._handleEvent(e)}}};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IntervalTrigger')){jQuery.sap.declare('sap.ui.core.IntervalTrigger');sap.ui.define("sap/ui/core/IntervalTrigger",['jquery.sap.global','./EventBus'],function(q,E){"use strict";var _="sapUiIntervalTrigger-event";var I=sap.ui.base.Object.extend("sap.ui.core.IntervalTrigger",{constructor:function(i){sap.ui.base.Object.apply(this);this._oEventBus=new E();this._delayedCallId=null;this._triggerProxy=q.proxy(t,this);this._iInterval=0;if(i){this.setInterval(i)}}});var t=function(){q.sap.clearDelayedCall(this._delayedCallId);var h=this._oEventBus._defaultChannel.hasListeners(_);if(this._iInterval>0&&h){this._oEventBus.publish(_);this._delayedCallId=q.sap.delayedCall(this._iInterval,this,this._triggerProxy)}};I.prototype.destroy=function(){sap.ui.base.Object.prototype.destroy.apply(this,arguments);delete this._triggerProxy;this._oEventBus.destroy();delete this._oEventBus};I.prototype.setInterval=function(i){if(this._iInterval!==i){this._iInterval=i;this._triggerProxy()}};I.prototype.addListener=function(f,l){this._oEventBus.subscribe(_,f,l);this._triggerProxy()};I.prototype.removeListener=function(f,l){this._oEventBus.unsubscribe(_,f,l)};I.prototype.getInterface=function(){return this};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocaleData')){jQuery.sap.declare('sap.ui.core.LocaleData');sap.ui.define("sap/ui/core/LocaleData",['jquery.sap.global','sap/ui/base/Object','./Configuration','./Locale'],function(q,B,C,L){"use strict";var a=B.extend("sap.ui.core.LocaleData",{constructor:function(o){B.apply(this);this.mData=g(o)},_get:function(k){return this.mData[k]},getOrientation:function(){return this._get("orientation")},getLanguages:function(){return this._get("languages")},getScripts:function(){return this._get("scripts")},getTerritories:function(){return this._get("territories")},getMonths:function(w){return this._get("months-format-"+w)},getMonthsStandAlone:function(w){return this._get("months-standAlone-"+w)},getDays:function(w){return this._get("days-format-"+w)},getDaysStandAlone:function(w){return this._get("days-standAlone-"+w)},getQuarters:function(w){return this._get("quarters-format-"+w)},getDayPeriods:function(w){return this._get("dayPeriods-format-"+w)},getDatePattern:function(s){return this._get("dateFormat-"+s)},getTimePattern:function(s){return this._get("timeFormat-"+s)},getDateTimePattern:function(s){return this._get("dateTimeFormat-"+s)},getNumberSymbol:function(t){return this._get("symbols-latn-"+t)},getDecimalPattern:function(){return this._get("decimalFormat").standard},getCurrencyPattern:function(){return this._get("currencyFormat").standard},getPercentPattern:function(){return this._get("percentFormat").standard},getFirstDayOfWeek:function(){return this._get("weekData-firstDay")},getWeekendStart:function(){return this._get("weekData-weekendStart")},getWeekendEnd:function(){return this._get("weekData-weekendEnd")},getIntervalPattern:function(i){return(i&&this._get("intervalFormat-"+i))||this._get("intervalFormatFallback")},getCurrencyDigits:function(s){var o=this._get("currencyDigits");var d=2;if(o){if(o[s]!=undefined){d=o[s]}else{d=o["DEFAULT"]}}return d},getCurrencySymbol:function(s){var o=this._get("currencySymbols");return(o&&o[s])||s}});var M={"orientation":"left-to-right","languages":{},"scripts":{},"territories":{},"dateFormat-full":"EEEE, MMMM d, y","dateFormat-long":"MMMM d, y","dateFormat-medium":"MMM d, y","dateFormat-short":"M/d/yy","timeFormat-full":"h:mm:ss a zzzz","timeFormat-long":"h:mm:ss a z","timeFormat-medium":"h:mm:ss a","timeFormat-short":"h:mm a","dateTimeFormat-full":"{1} 'at' {0}","dateTimeFormat-long":"{1} 'at' {0}","dateTimeFormat-medium":"{1}, {0}","dateTimeFormat-short":"{1}, {0}","decimalFormat":{"standard":"#,##0.###"},"currencyFormat":{"standard":"¤#,##0.00"},"percentFormat":{"standard":"#,##0%"},"months-format-abbreviated":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"months-format-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"months-format-narrow":["1","2","3","4","5","6","7","8","9","10","11","12"],"months-standAlone-abbreviated":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"months-standAlone-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"months-standAlone-narrow":["1","2","3","4","5","6","7","8","9","10","11","12"],"days-format-abbreviated":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"days-format-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"days-format-narrow":["S","M","T","W","T","F","S"],"days-standAlone-abbreviated":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"days-standAlone-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"days-standAlone-narrow":["S","M","T","W","T","F","S"],"quarters-format-narrow":["1","2","3","4"],"quarters-format-abbreviated":["Q1","Q2","Q3","Q4"],"quarters-format-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"quarters-standAlone-narrow":["1","2","3","4"],"symbols-latn-decimal":".","symbols-latn-group":",","symbols-latn-plusSign":"+","symbols-latn-minusSign":"-","dayPeriods-format-narrow":["AM","PM"],"dayPeriods-format-wide":["AM","PM"],"dayPeriods-format-abbreviated":["AM","PM"],"weekData-minDays":4,"weekData-firstDay":1,"weekData-weekendStart":6,"weekData-weekendEnd":0,"intervalFormatFallback":"{0} – {1}"};var b={"iw":"he","ji":"yi","in":"id","sh":"sr"};var c=(function(){var d=L._cldrLocales,r={},i;if(d){for(i=0;i<d.length;i++){r[d[i]]=true}}return r}());var l={};function g(o){var s=o.getLanguage()||"",S=o.getScript()||"",r=o.getRegion()||"",d;function e(i){var D;if(!l[i]&&(!c||c[i]===true)){l[i]=q.sap.loadResource("sap/ui/core/cldr/"+i+".json",{dataType:"json",failOnError:false})}return l[i]}s=(s&&b[s])||s;if(s==="no"){s="nb"}if(s==="zh"&&!r){if(S==="Hans"){r="CN"}else if(S==="Hant"){r="TW"}}var i=s+"_"+r;if(s&&r){d=e(i)}if(!d&&s){d=e(s)}l[i]=d||M;return l[i]};a.extend("sap.ui.core.CustomLocaleData",{constructor:function(o){a.apply(this,arguments);this.mCustomData=sap.ui.getCore().getConfiguration().getFormatSettings().getCustomLocaleData()},_get:function(i){return this.mCustomData[i]||this.mData[i]}});a.getInstance=function(o){return o.hasPrivateUseSubtag("sapufmt")?new sap.ui.core.CustomLocaleData(o):new a(o)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.RenderManager')){jQuery.sap.declare('sap.ui.core.RenderManager');sap.ui.define("sap/ui/core/RenderManager",['jquery.sap.global','sap/ui/base/Interface','sap/ui/base/Object','jquery.sap.act','jquery.sap.encoder'],function(q,I,B){"use strict";var c=["renderControl","write","writeEscaped","translate","writeAcceleratorKey","writeControlData","writeElementData","writeAttribute","writeAttributeEscaped","addClass","writeClasses","addStyle","writeStyles","writeAccessibilityState","writeIcon","getConfiguration","getHTML","cleanupControlWithoutRendering"];var N=["render","flush","destroy"];var R=B.extend("sap.ui.core.RenderManager",{constructor:function(){B.apply(this,arguments);this.aBuffer=[];this.aRenderedControls=[];this.aStyleStack=[{}]},metadata:{publicMethods:c.concat(N)}});R.prototype.getRendererInterface=function(){var i=new I(this,c);this.getRendererInterface=q.sap.getter(i);return i};R.prototype.destroy=function(){this.aBuffer=[];this.aRenderedControls=[];this.aStyleStack=[{}]};R.prototype.getConfiguration=function(){return sap.ui.getCore().getConfiguration()};R.prototype.getRenderer=function(C){return R.getRenderer(C)};var t=function(r,C){r._bLocked=true;try{var e=q.Event("BeforeRendering");e.srcControl=C;C._handleEvent(e)}finally{r._bLocked=false}};R.prototype.cleanupControlWithoutRendering=function(C){if(!C||!C.getDomRef()){return}t(this,C);C.bOutput=false};R.prototype.renderControl=function(C){if(!C){return}if(!this.aRenderStack){this.aRenderStack=new Array()}if(this.aRenderStack&&this.aRenderStack.length>0){q.sap.measure.pause(this.aRenderStack[0]+"---renderControl")}else if(C.getParent()&&C.getParent().getMetadata().getName()=="sap.ui.core.UIArea"){q.sap.measure.pause(C.getParent().getId()+"---rerender")}this.aRenderStack.unshift(C.getId());q.sap.measure.start(C.getId()+"---renderControl","Rendering of "+C.getMetadata().getName());var b=this.aBuffer.length;var o={};if(C.aCustomStyleClasses&&C.aCustomStyleClasses.length>0){o.aCustomStyleClasses=C.aCustomStyleClasses}this.aStyleStack.push(o);q.sap.measure.pause(C.getId()+"---renderControl");var r=this.getRenderer(C);q.sap.measure.resume(C.getId()+"---renderControl");t(this,C);var a=C.aBindParameters;if(a&&a.length>0){var d=q(C.getDomRef());if(d&&d[0]){for(var i=0;i<a.length;i++){var p=a[i];d.unbind(p.sEventType,p.fnProxy)}}}r.render(this.getRendererInterface(),C);this.aStyleStack.pop();this.aRenderedControls.push(C);if(C.getUIArea&&C.getUIArea()){C.getUIArea()._onControlRendered(C)}C.bOutput=this.aBuffer.length!=b;q.sap.measure.end(C.getId()+"---renderControl");this.aRenderStack.shift();if(this.aRenderStack&&this.aRenderStack.length>0){q.sap.measure.resume(this.aRenderStack[0]+"---renderControl")}else if(C.getParent()&&C.getParent().getMetadata().getName()=="sap.ui.core.UIArea"){q.sap.measure.resume(C.getParent().getId()+"---rerender")}};R.prototype.getHTML=function(C){var a=this.aBuffer;var r=this.aBuffer=[];this.renderControl(C);this.aBuffer=a;return r.join("")};(function(){var s=function(){var C=sap.ui.getCore();var F=C.getCurrentFocusedControlId(),o=null,a=null;if(F){var b=C.getElementById(F);if(b){o=b.getFocusInfo();a=b.getFocusDomRef()}}return{focusedControlId:F,focusInfo:o,focusDomRef:a}};var f=function(r,a,S){for(var i=0,b=a.length;i<b;i++){var C=a[i];if(C.bOutput){r._bLocked=true;try{var E=q.Event("AfterRendering");E.srcControl=C;q.sap.measure.start(C.getId()+"---AfterRendering","AfterRendering of "+C.getMetadata().getName());C._handleEvent(E);q.sap.measure.end(C.getId()+"---AfterRendering")}finally{r._bLocked=false}}}try{if(S&&S.focusedControlId){var F=sap.ui.getCore().getElementById(S.focusedControlId);if(F&&F.getFocusDomRef()!=S.focusDomRef){F.applyFocusInfo(S.focusInfo)}}}catch(e){q.sap.log.warning("Problems while restore focus after rendering: "+e,null,r)}for(var i=0,b=a.length;i<b;i++){var C=a[i],d=C.aBindParameters;if(d&&d.length>0){var D=q(C.getDomRef());if(D&&D[0]){for(var j=0;j<d.length;j++){var p=d[j];D.bind(p.sEventType,p.fnProxy)}}}}};R.prototype.flush=function(T,d,v){if(this.bRendererMode){q.sap.log.info("Flush must not be called from control renderers. Call ignored.",null,this);return}if(!d&&(typeof v!=="number")&&!v){R.preserveContent(T)}var S=s();var h=R.prepareHTML5(this.aBuffer.join(""));if(this._fPutIntoDom){this._fPutIntoDom(T,h)}else{for(var i=0;i<this.aRenderedControls.length;i++){var o=this.aRenderedControls[i].getDomRef();if(o&&!R.isPreservedContent(o)){if(R.isInlineTemplate(o)){q(o).empty()}else{q(o).remove()}}}if(typeof v==="number"){if(v<=0){q(T).prepend(h)}else{var $=q(T).children().eq(v-1);if($.length===1){$.after(h)}else{q(T).append(h)}}}else if(!v){q(T).html(h)}else{q(T).append(h)}}f(this,this.aRenderedControls,S);this.aRenderedControls=[];this.aBuffer=[];this.aStyleStack=[{}];q.sap.act.refresh()};R.prototype.render=function(C,T){if(this.bRendererMode){q.sap.log.info("Render must not be called from control renderers. Call ignored.",null,this);return}if(this._bLocked){q.sap.log.error("Render must not be called within Before or After Rendering Phase. Call ignored.",null,this);return}this.aBuffer=[];this.renderControl(C);this._fPutIntoDom=function(o,h){if(C&&T){var a=C.getDomRef();if(R.isPreservedContent(a)){a=q.sap.byId("sap-ui-dummy-"+C.getId())[0]||a}var n=a&&a.parentNode!=T;var A=function(){var j=q(T);if(T.innerHTML==""){j.html(h)}else{j.append(h)}};if(n){if(!R.isPreservedContent(a)){if(R.isInlineTemplate(a)){q(a).empty()}else{q(a).remove()}}if(h){A()}}else{if(h){if(a){if(R.isInlineTemplate(a)){q(a).html(h)}else{q(a).replaceWith(h)}}else{A()}}else{if(R.isInlineTemplate(a)){q(a).empty()}else{if(!C.getParent()||!C.getParent()._onChildRerenderedEmpty||!C.getParent()._onChildRerenderedEmpty(C,a)){q(a).remove()}}}}}};this.flush(T,true);this._fPutIntoDom=null}}());R.getRenderer=function(C){return C.getMetadata().getRenderer()};R.initHTML5Support=function(){if(!!sap.ui.Device.browser.internet_explorer&&(sap.ui.Device.browser.version===8||sap.ui.Device.browser.version===7)){var T=["article","aside","audio","canvas","command","datalist","details","figcaption","figure","footer","header","hgroup","keygen","mark","meter","nav","output","progress","rp","rt","ruby","section","source","summary","template","time","video","wbr"];for(var i=0;i<T.length;i++){document.createElement(T[i])}var r=new RegExp("<("+T.join("|")+")(\\s|>)","i");var d=null;R.prepareHTML5=function(h){if(h&&h.match(r)){if(!d){d=document.createElement('div');d.style.display='none'}var e=d.cloneNode(true);var f=document.body||document.createDocumentFragment();f.appendChild(e);e.innerHTML=h.replace(/^\s\s*/,'').replace(/\s\s*$/,'');f.removeChild(e);return e.childNodes}return h};q.sap.log.info("IE8 HTML5 support activated")}else{q.sap.log.info("no IE8 HTML5 support required");R.prepareHTML5=function(h){return h}}};R.forceRepaint=function(d){var D=typeof d=="string"?q.sap.domById(d):d;if(D){q.sap.log.debug("forcing a repaint for "+(D.id||String(D)));var o=D.style.display;var a=document.activeElement;D.style.display="none";D.offsetHeight;D.style.display=o;if(document.activeElement!==a){q.sap.focus(a)}}};(function(){var a="sap-ui-preserve",b="sap-ui-static",A="data-sap-ui-preserve",d="data-sap-ui-area";function g(){var $=q("#"+a);if($.length===0){$=q("<DIV/>",{role:"application",id:a}).addClass("sapUiHidden").css("width","0").css("height","0").css("overflow","hidden").appendTo(document.body)}return $}function m(n){q("<DIV/>",{id:"sap-ui-dummy-"+n.id}).addClass("sapUiHidden").insertBefore(n)}R.preserveContent=function(r,p,P){sap.ui.getCore().getEventBus().publish("sap.ui","__preserveContent",{domNode:r});var $=g();function f(h){if(h.id===a||h.id===b){return}if(h.hasAttribute(A)){if(h===r){m(h)}$.append(h)}else if(P&&h.id){R.markPreservableContent(q(h),h.id);$.append(h);return}if(!h.hasAttribute(d)){var n=h.firstChild;while(n){h=n;n=n.nextSibling;if(h.nodeType===1){f(h)}}}}q.sap.measure.start(r.id+"---preserveContent","preserveContent for "+r.id);if(p){f(r)}else{q(r).children().each(function(i,n){f(n)})}q.sap.measure.end(r.id+"---preserveContent")};R.findPreservedContent=function(i){var $=g(),f=$.children("["+A+"='"+i.replace(/(:|\.)/g,'\\$1')+"']");return f};R.markPreservableContent=function($,i){$.attr(A,i)};R.isPreservedContent=function(D){return(D&&D.getAttribute(A)&&D.parentNode&&D.parentNode.id==a)};R.getPreserveAreaRef=function(){return g()[0]};var e="data-sap-ui-template";R.markInlineTemplate=function($){$.attr(e,"")};R.isInlineTemplate=function(D){return(D&&D.hasAttribute(e))}}());R.prototype.write=function(T){this.aBuffer.push.apply(this.aBuffer,arguments);return this};R.prototype.writeEscaped=function(T,l){if(l){var L=T.split("\n");for(var i=0;i<L.length;i++){L[i]=q.sap.encodeHTML(L[i])}T=L.join("<br>")}else{T=q.sap.encodeHTML(T)}this.aBuffer.push(T);return this};R.prototype.translate=function(k){};R.prototype.writeAcceleratorKey=function(){return this};R.prototype.addStyle=function(n,v){if(v!==undefined&&v!==null){var s=this.aStyleStack[this.aStyleStack.length-1];if(!s.aStyle){s.aStyle=[]}s.aStyle.push(n+":"+v)}return this};R.prototype.writeStyles=function(){var s=this.aStyleStack[this.aStyleStack.length-1];if(s.aStyle){this.write(" style=\""+s.aStyle.join(";")+"\" ")}s.aStyle=null;return this};R.prototype.addClass=function(n){if(n){var s=this.aStyleStack[this.aStyleStack.length-1];if(!s.aClasses){s.aClasses=[]}s.aClasses.push(n)}return this};R.prototype.writeClasses=function(e){var s=this.aStyleStack[this.aStyleStack.length-1];var C=e?e.aCustomStyleClasses:((e===false)?[]:s.aCustomStyleClasses);if(s.aClasses||C){var a=[].concat(s.aClasses||[],C||[]);a.sort();a=q.map(a,function(n,i){return(i==0||n!=a[i-1])?n:null});this.write(" class=\"",a.join(" "),"\" ")}if(!e){s.aCustomStyleClasses=null}s.aClasses=null;return this};R.prototype.writeControlData=function(C){this.writeElementData(C);return this};R.prototype.writeElementData=function(e){var s=e.getId();if(s){this.writeAttribute("id",s).writeAttribute("data-sap-ui",s)}var d=e.getCustomData();var l=d.length;for(var i=0;i<l;i++){var D=d[i];if(D.getWriteToDom()){var k=D.getKey();if(typeof D.getValue()==="string"){if((sap.ui.core.ID.isValid(k))&&(k.indexOf(":")==-1)&&(k.indexOf("sap-ui")!==0)){this.writeAttributeEscaped("data-"+k,D.getValue())}else{q.sap.log.error("CustomData with key "+k+" should be written to HTML of "+this+" but the key is not valid (must be a valid sap.ui.core.ID without any colon and may not start with 'sap-ui').")}}else{q.sap.log.error("CustomData with key "+k+" should be written to HTML of "+this+" but the value is not a string.")}}}return this};R.prototype.writeAttribute=function(n,v){this.write(" ",n,"=\"",v,"\"");return this};R.prototype.writeAttributeEscaped=function(n,v){this.writeAttribute(n,q.sap.escapeHTML(String(v)));return this};R.prototype.writeAccessibilityState=function(e,P){if(!sap.ui.getCore().getConfiguration().getAccessibility()){return this}if(arguments.length==1&&!(e instanceof sap.ui.core.Element)){P=e;e=null}var a={};if(e!=null){var m=e.getMetadata();m._enrichChildInfos();var b=function(E,A,v){var o=m.getAllProperties()[E];if(o&&e[o._sGetter]()===v){a[A]="true"}};var d=function(E,A){var o=m.getAllAssociations()[E];if(o&&o.multiple){var k=e[o._sGetter]();if(k.length>0){a[A]=k.join(" ")}}};b("editable","readonly",false);b("enabled","disabled",false);b("visible","hidden",false);b("required","required",true);b("selected","selected",true);b("checked","checked",true);d("ariaDescribedBy","describedby");d("ariaLabelledBy","labelledby")}if(P){var f=function(v){var i=typeof(v);return v===null||v===""||i==="number"||i==="string"||i==="boolean"};var g={};var x,h,i,j;for(x in P){h=P[x];if(f(h)){g[x]=h}else if(typeof(h)==="object"&&f(h.value)){j="";if(h.append&&(x==="describedby"||x==="labelledby")){j=a[x]?a[x]+" ":""}g[x]=j+h.value}}q.extend(a,g)}if(e instanceof sap.ui.core.Element&&e.getParent()&&e.getParent().enhanceAccessibilityState){e.getParent().enhanceAccessibilityState(e,a)}for(var p in a){if(a[p]!=null&&a[p]!==""){this.writeAttributeEscaped(p==="role"?p:"aria-"+p,a[p])}}return this};R.prototype.writeIcon=function(u,C,a){q.sap.require("sap.ui.core.IconPool");var i=sap.ui.core.IconPool.isIconURI(u),s=i?"<span ":"<img ",T=(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9),b,p,o;if(typeof C==="string"){C=[C]}if(i){o=sap.ui.core.IconPool.getIconInfo(u);if(!o){q.sap.log.error("An unregistered icon: "+u+" is used in sap.ui.core.RenderManager's writeIcon method.");return}if(!C){C=[]}C.push("sapUiIcon");if(!o.suppressMirroring){C.push("sapUiIconMirrorInRTL")}}this.write(s);if(q.isArray(C)&&C.length){b=C.join(" ");this.write("class=\""+b+"\" ")}if(i){if(!a){a={}}if(!T){a["data-sap-ui-icon-content"]=o.content}this.write("style=\"font-family: "+o.fontFamily+";\" ")}else{a=q.extend({role:"presentation",alt:"",src:u},a)}if(typeof a==="object"){for(p in a){if(a.hasOwnProperty(p)){this.writeAttributeEscaped(p,a[p])}}}this.write(i?">":"/>");if(i){T&&this.write(o.content);this.write("</span>")}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ResizeHandler')){jQuery.sap.declare('sap.ui.core.ResizeHandler');sap.ui.define("sap/ui/core/ResizeHandler",['jquery.sap.global','sap/ui/Global','sap/ui/base/Object','jquery.sap.act','jquery.sap.script'],function(q,G,B){"use strict";var l=q.sap.log.getLogger("sap.ui.core.ResizeHandler",q.sap.log.Level.ERROR);var c=null;var R=B.extend("sap.ui.core.ResizeHandler",{constructor:function(C){B.apply(this);c=C;this.aResizeListeners=[];this.bRegistered=false;this.iIdCounter=0;this.fDestroyHandler=q.proxy(this.destroy,this);q(window).bind("unload",this.fDestroyHandler);q.sap.act.attachActivate(i,this)}});function a(){if(this.bRegistered){this.bRegistered=false;sap.ui.getCore().detachIntervalTimer(this.checkSizes,this)}};function i(){if(!this.bRegistered&&this.aResizeListeners.length>0){this.bRegistered=true;sap.ui.getCore().attachIntervalTimer(this.checkSizes,this)}};R.prototype.destroy=function(e){q.sap.act.detachActivate(i,this);q(window).unbind("unload",this.fDestroyHandler);c=null;this.aResizeListeners=[];a.apply(this)};R.prototype.attachListener=function(r,h){var I=r instanceof sap.ui.core.Control,d=I?r.getDomRef():r,w=d?d.offsetWidth:0,H=d?d.offsetHeight:0,s="rs-"+new Date().valueOf()+"-"+this.iIdCounter++,b=(I?("Control "+r.getId()):(r.id?r.id:String(r)));this.aResizeListeners.push({sId:s,oDomRef:I?null:r,oControl:I?r:null,fHandler:h,iWidth:w,iHeight:H,dbg:b});l.debug("registered "+b);i.apply(this);return s};R.prototype.detachListener=function(I){var t=this;q.each(this.aResizeListeners,function(b,r){if(r.sId==I){t.aResizeListeners.splice(b,1);l.debug("deregistered "+I);return false}});if(this.aResizeListeners.length==0){a.apply(this)}};R.prototype.checkSizes=function(){var d=l.isLoggable();if(d){l.debug("checkSizes:")}q.each(this.aResizeListeners,function(b,r){if(r){var C=!!r.oControl,D=C?r.oControl.getDomRef():r.oDomRef;if(D&&q.contains(document.documentElement,D)){var o=r.iWidth,O=r.iHeight,n=D.offsetWidth,N=D.offsetHeight;if(o!=n||O!=N){r.iWidth=n;r.iHeight=N;var e=q.Event("resize");e.target=D;e.currentTarget=D;e.size={width:n,height:N};e.oldSize={width:o,height:O};e.control=C?r.oControl:null;if(d){l.debug("resize detected for '"+r.dbg+"': "+e.oldSize.width+"x"+e.oldSize.height+" -> "+e.size.width+"x"+e.size.height)}r.fHandler(e)}}}});if(R._keepActive!=true&&R._keepActive!=false){R._keepActive=false}if(!q.sap.act.isActive()&&!R._keepActive){a.apply(this)}};R.register=function(r,h){if(!c||!c.oResizeHandler){return null}return c.oResizeHandler.attachListener(r,h)};R.deregister=function(I){if(!c||!c.oResizeHandler){return}c.oResizeHandler.detachListener(I)};R.deregisterAllForControl=function(C){if(!c||!c.oResizeHandler){return}var I=[];q.each(c.oResizeHandler.aResizeListeners,function(b,r){if(r&&r.oControl&&r.oControl.getId()===C){I.push(r.sId)}});q.each(I,function(b,s){R.deregister(s)})};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIComponentMetadata')){jQuery.sap.declare('sap.ui.core.UIComponentMetadata');sap.ui.define("sap/ui/core/UIComponentMetadata",['jquery.sap.global','./ComponentMetadata'],function(q,C){"use strict";var U=function(c,o){C.apply(this,arguments)};U.prototype=q.sap.newObject(C.prototype);U.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};U.prototype.applySettings=function(c){C.prototype.applySettings.call(this,c);var s=c.metadata;this._mRootView=s.rootView;if(typeof this._mRootView==="string"){this._mRootView={viewName:this._mRootView,type:sap.ui.core.mvc.ViewType.XML}}this._mRouting=s.routing;var p=this.getParent();if(p instanceof U){if(p._mRootView){this._mRootView=q.extend(true,{},p._mRootView,this._mRootView)}this._mRouting=q.extend(true,{},p._mRouting,this._mRouting)}};U.prototype.getRootView=function(){return this._mRootView};U.prototype.getRoutingConfig=function(){return this._mRouting&&this._mRouting.config};U.prototype.getRoutes=function(){return this._mRouting&&this._mRouting.routes};return U},true)};if(!jQuery.sap.isDeclared('sap.ui.core.delegate.ItemNavigation')){jQuery.sap.declare('sap.ui.core.delegate.ItemNavigation');sap.ui.define("sap/ui/core/delegate/ItemNavigation",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var I=E.extend("sap.ui.core.delegate.ItemNavigation",{constructor:function(d,i,n){E.apply(this);this.oDomRef=null;if(d){this.setRootDomRef(d)}this.aItemDomRefs=[];if(i){this.setItemDomRefs(i)}this.iTabIndex=-1;this.iActiveTabIndex=!!n?-1:0;this.iFocusedIndex=-1;this.iSelectedIndex=-1;this.bCycling=true;this.bTableMode=false;this.iPageSize=-1;this._bMouseDownHappened=false;this.oDisabledModifiers={sapend:["alt","shift"],saphome:["alt","shift"]}}});I.Events={BeforeFocus:"BeforeFocus",AfterFocus:"AfterFocus",BorderReached:"BorderReached",FocusAgain:"FocusAgain"};I.prototype.setDisabledModifiers=function(d){this.oDisabledModifiers=d;return this};I.prototype.getDisabledModifiers=function(d){return this.oDisabledModifiers};I.prototype.hasDisabledModifier=function(e){var d=this.oDisabledModifiers[e.type.replace("modifiers","")];if(q.isArray(d)){for(var i=0;i<d.length;i++){if(e[d[i]+"Key"]){return true}}}return false};I.prototype.setRootDomRef=function(d){this.oDomRef=d;if(!q(this.oDomRef).data("sap.INItem")){if(this.iFocusedIndex>=0){q(this.oDomRef).attr("tabIndex",this.iTabIndex)}else{q(this.oDomRef).attr("tabIndex",this.iActiveTabIndex)}}q(this.oDomRef).data("sap.INRoot",this);return this};I.prototype.getRootDomRef=function(){return this.oDomRef};I.prototype.getItemDomRefs=function(){return this.aItemDomRefs};I.prototype.setItemDomRefs=function(a){this.aItemDomRefs=a;for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){var $=q(this.aItemDomRefs[i]);if(i==this.iFocusedIndex&&!$.data("sap.INRoot")){$.attr("tabIndex",this.iActiveTabIndex)}else if($.attr("tabindex")=="0"){$.attr("tabIndex",-1)}$.data("sap.INItem",true);$.data("sap.InNavArea",true);if($.data("sap.INRoot")&&i!=this.iFocusedIndex){$.data("sap.INRoot").setNestedItemsTabindex()}}}return this};I.prototype.setItemsTabindex=function(){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){var $=q(this.aItemDomRefs[i]);if($.is(":sapFocusable")){if(i==this.iFocusedIndex&&!$.data("sap.INRoot")){$.attr("tabIndex",this.iActiveTabIndex)}else{$.attr("tabIndex",-1)}}}}return this};I.prototype.setNestedItemsTabindex=function(){if(q(this.oDomRef).data("sap.INItem")){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]&&q(this.aItemDomRefs[i]).attr("tabindex")=="0"){q(this.aItemDomRefs[i]).attr("tabIndex",-1)}}}return this};I.prototype.destroy=function(){if(this.oDomRef){q(this.oDomRef).removeData("sap.INRoot");this.oDomRef=null}if(this.aItemDomRefs){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){q(this.aItemDomRefs[i]).removeData("sap.INItem");q(this.aItemDomRefs[i]).removeData("sap.InNavArea")}}this.aItemDomRefs=null}this._bItemTabIndex=undefined};I.prototype.setCycling=function(c){this.bCycling=c;return this};I.prototype.setTableMode=function(t,T){this.bTableMode=t;this.bTableList=t?T:false;return this};I.prototype.setPageSize=function(p){this.iPageSize=p;return this};I.prototype.setSelectedIndex=function(i){this.iSelectedIndex=i;return this};I.prototype.setColumns=function(c,n){this.iColumns=c;this.bNoColumnChange=n;return this};I.prototype.setHomeEndColumnMode=function(s,c){this._bStayInRow=s;this._bCtrlEnabled=c};I.prototype.focusItem=function(i,e){q.sap.log.info("FocusItem: "+i+" iFocusedIndex: "+this.iFocusedIndex,"focusItem","ItemNavigation");if(i==this.iFocusedIndex&&this.aItemDomRefs[this.iFocusedIndex]==document.activeElement){this.fireEvent(I.Events.FocusAgain,{index:i,event:e});return}if(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":sapFocusable")){if(this.bTableMode){var c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_RIGHT){if(c<this.iColumns-1){i+=1}}else{if(c>1){i-=1}}this.focusItem(i,e)}return}this.fireEvent(I.Events.BeforeFocus,{index:i,event:e});this.setFocusedIndex(i);this.bISetFocus=true;if(q(this.aItemDomRefs[this.iFocusedIndex]).data("sap.INRoot")&&e){var o=q(this.aItemDomRefs[this.iFocusedIndex]).data("sap.INRoot");o._sFocusEvent=e.type}q.sap.log.info("Set Focus on ID: "+this.aItemDomRefs[this.iFocusedIndex].id,"focusItem","ItemNavigation");q.sap.focus(this.aItemDomRefs[this.iFocusedIndex]);this.fireEvent(I.Events.AfterFocus,{index:i,event:e})};I.prototype.setFocusedIndex=function(i){var $;if(i<0){i=0}if(i>this.aItemDomRefs.length-1){i=this.aItemDomRefs.length-1}q(this.oDomRef).attr("tabIndex",this.iTabIndex);if(this.iFocusedIndex!==-1&&this.aItemDomRefs.length>this.iFocusedIndex){q(this.aItemDomRefs[this.iFocusedIndex]).attr("tabIndex",-1);$=q(this.aItemDomRefs[this.iFocusedIndex]);if($.data("sap.INRoot")&&i!=this.iFocusedIndex){q($.data("sap.INRoot").aItemDomRefs[$.data("sap.INRoot").iFocusedIndex]).attr("tabIndex",-1)}}this.iFocusedIndex=i;var f=this.aItemDomRefs[this.iFocusedIndex];$=q(this.aItemDomRefs[this.iFocusedIndex]);if(!$.data("sap.INRoot")){q(f).attr("tabIndex",this.iActiveTabIndex)}return this};I.prototype.getFocusedDomRef=function(){return this.aItemDomRefs[this.iFocusedIndex]};I.prototype.getFocusedIndex=function(){return this.iFocusedIndex};I.prototype.onfocusin=function(e){var s=e.target;if(s==this.oDomRef){if(!this._bItemTabIndex){this.setItemsTabindex();this._bItemTabIndex=true}if(this._bMouseDownHappened){return}var a;if(q(this.oDomRef).data("sap.INItem")&&this._sFocusEvent&&!q(this.oDomRef).data("sap.InNavArea")){switch(this._sFocusEvent){case"sapnext":a=0;break;case"sapprevious":a=this.aItemDomRefs.length-1;break;default:a=this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0);break}this._sFocusEvent=undefined}else{a=this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0)}this.focusItem(a,e);if(this.iFocusedIndex==-1){for(var i=a+1;i<this.aItemDomRefs.length;i++){this.focusItem(i,e);if(this.iFocusedIndex==i){break}}if(this.iFocusedIndex==-1&&a>0){for(var i=a-1;i>=0;i--){this.focusItem(i,e);if(this.iFocusedIndex==i){break}}}}e.preventDefault();e.stopPropagation()}else if(!this.bISetFocus){if(this.aItemDomRefs&&e.target!=this.aItemDomRefs[this.iFocusedIndex]){for(var i=0;i<this.aItemDomRefs.length;i++){if(e.target==this.aItemDomRefs[i]){this.focusItem(i,e);break}}}else{this.fireEvent(I.Events.AfterFocus,{index:this.iFocusedIndex,event:e})}}this.bISetFocus=false};I.prototype.onsapfocusleave=function(e){if(!e.relatedControlId||!q.sap.containsOrEquals(this.oDomRef,sap.ui.getCore().byId(e.relatedControlId).getFocusDomRef())){this.setFocusedIndex(this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0));if(q(this.oDomRef).data("sap.INItem")){var p,d=q(this.oDomRef);while(!p){d=d.parent();if(d.data("sap.INRoot")){p=d.get(0)}}if(!e.relatedControlId||q.sap.containsOrEquals(p,sap.ui.getCore().byId(e.relatedControlId).getFocusDomRef())){q(this.aItemDomRefs[this.iFocusedIndex]).attr("tabIndex",-1)}}var d=q(this.oDomRef);if(d.data("sap.InNavArea")===false){d.data("sap.InNavArea",true)}}};I.prototype.onmousedown=function(e){var s=e.target;if(q.sap.containsOrEquals(this.oDomRef,s)){for(var i=0;i<this.aItemDomRefs.length;i++){var o=this.aItemDomRefs[i];if(q.sap.containsOrEquals(o,s)){if(!this.bTableMode){this.focusItem(i,e)}else{if(o===s||!q(s).is(":sapFocusable")){this.focusItem(i,e)}}return}}if(s==this.oDomRef){this._bMouseDownHappened=true;var t=this;window.setTimeout(function(){t._bMouseDownHappened=false},20)}}};I.prototype.onsapnext=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(q(this.oDomRef).data("sap.InNavArea")){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.iFocusedIndex,f=true,b=false;if(i>-1){if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,R=Math.floor(i/this.iColumns),c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_DOWN){if(R<r-1){i+=this.iColumns}}else{if(c<this.iColumns-1){i+=1}}}else{do{if(this.iColumns>1&&e.keyCode==q.sap.KeyCodes.ARROW_DOWN){if((i+this.iColumns)>=this.aItemDomRefs.length){if(!this.bNoColumnChange){if((i%this.iColumns)<(this.iColumns-1)){i=(i%this.iColumns)+1}else if(this.bCycling){i=0}}else{i=this.iFocusedIndex;b=true}}else{i=i+this.iColumns}}else{if(i==this.aItemDomRefs.length-1){if(q(this.oDomRef).data("sap.INItem")){return}else if(this.bCycling){i=0}else{i=this.iFocusedIndex;b=true}}else{i++}}if(i===this.iFocusedIndex){if(f){f=false}else{throw new Error("ItemNavigation has no visible/existing items and is hence unable to select the next one")}}}while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable"))}this.focusItem(i,e);if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()}};I.prototype.onsapnextmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapnext(e)};I.prototype.onsapprevious=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(q(this.oDomRef).data("sap.InNavArea")){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.iFocusedIndex,f=true,b=false;if(i>-1){if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,R=Math.floor(i/this.iColumns),c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_UP){if(R>0){i-=this.iColumns}}else{if(c>0){i-=1}}}else{do{if(this.iColumns>1&&e.keyCode==q.sap.KeyCodes.ARROW_UP){if((i-this.iColumns)<0){if(!this.bNoColumnChange){var c=0;if((i%this.iColumns)>0){c=(i%this.iColumns)-1}else if(this.bCycling){c=this.iColumns-1}if(i===0&&c===0){i=0}else{var a=Math.ceil(this.aItemDomRefs.length/this.iColumns);i=c+((a-1)*this.iColumns);if(i>=this.aItemDomRefs.length){i=i-this.iColumns}}}else{i=this.iFocusedIndex;b=true}}else{i=i-this.iColumns}}else{if(i==0){if(q(this.oDomRef).data("sap.INItem")){return}else if(this.bCycling){i=this.aItemDomRefs.length-1}else{i=this.iFocusedIndex;b=true}}else{i--}}if(i==this.iFocusedIndex){if(f){f=false}else{throw new Error("ItemNavigation has no visible/existing items and is hence unable to select the previous one")}}}while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable"))}this.focusItem(i,e);if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()}};I.prototype.onsappreviousmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapprevious(e)};I.prototype.onsappageup=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;var b=false;if(this.iPageSize>0){i=this.iFocusedIndex;if(i>-1){i=i-this.iPageSize;while(i>0&&!q(this.aItemDomRefs[i]).is(":sapFocusable")){i--}if(i<0){if(!this.bNoColumnChange){i=0}else{i=this.iFocusedIndex;b=true}}this.focusItem(i,e)}}else if(this.bTableMode){i=this.iFocusedIndex%this.iColumns;this.focusItem(i,e)}if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()};I.prototype.onsappagedown=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;var b=false;if(this.iPageSize>0){i=this.iFocusedIndex;if(i>-1){i=i+this.iPageSize;while(i<this.aItemDomRefs.length-1&&!q(this.aItemDomRefs[i]).is(":sapFocusable")){i++}if(i>this.aItemDomRefs.length-1){if(!this.bNoColumnChange){i=this.aItemDomRefs.length-1}else{i=this.iFocusedIndex;b=true}}this.focusItem(i,e)}}else if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,c=this.iFocusedIndex%this.iColumns;i=(r-1)*this.iColumns+c;this.focusItem(i,e)}if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()};I.prototype.onsaphome=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;if(this.bTableMode){if(!this.bTableList&&!(e.metaKey||e.ctrlKey)){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns}}else{if(!!(e.metaKey||e.ctrlKey)&&!this._bCtrlEnabled){return}if(this._bStayInRow&&!(this._bCtrlEnabled&&(e.metaKey||e.ctrlKey))&&this.iColumns>0){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns}else{while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable")){i++;if(i==this.aItemDomRefs.length){return}}}}this.focusItem(i,e);e.preventDefault();e.stopPropagation()};I.prototype.onsaphomemodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsaphome(e)};I.prototype.onsapend=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.aItemDomRefs.length-1;if(this.bTableMode){if(!this.bTableList&&!(e.metaKey||e.ctrlKey)){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns+this.iColumns-1}}else{if(!!(e.metaKey||e.ctrlKey)&&!this._bCtrlEnabled){return}if(this._bStayInRow&&!(this._bCtrlEnabled&&(e.metaKey||e.ctrlKey))&&this.iColumns>0){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=(r+1)*this.iColumns-1;if(i>=this.aItemDomRefs.length){i=this.aItemDomRefs.length-1}}else{while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")=="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable")){i--;if(i<0){return}}}}this.focusItem(i,e);e.preventDefault();e.stopPropagation()};I.prototype.onsapendmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapend(e)};I.prototype.setTabIndex0=function(){this.iTabIndex=0;this.iActiveTabIndex=0};I.prototype.onkeyup=function(e){if(e.keyCode==q.sap.KeyCodes.F2){var d=q(this.oDomRef);if(d.data("sap.InNavArea")){d.data("sap.InNavArea",false)}else if(d.data("sap.InNavArea")===false){d.data("sap.InNavArea",true)}e.preventDefault();e.stopPropagation()}};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.format.DateFormat')){jQuery.sap.declare('sap.ui.core.format.DateFormat');sap.ui.define("sap/ui/core/format/DateFormat",['jquery.sap.global','sap/ui/core/LocaleData'],function(q,L){"use strict";var D=function(){throw new Error()};D.oDateInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"yyyy-MM-dd"},{pattern:"yyyyMMdd"}],getPattern:function(l,s){return l.getDatePattern(s)},oRequiredParts:{"text":true,"year":true,"weekYear":true,"month":true,"day":true}};D.oDateTimeInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"yyyy-MM-dd'T'hh:mm:ss"},{pattern:"yyyyMMdd hhmmss"}],getPattern:function(l,s){var d=l.getDateTimePattern(s),a=l.getDatePattern(s),t=l.getTimePattern(s);return d.replace("{1}",a).replace("{0}",t)},oRequiredParts:{"text":true,"year":true,"weekYear":true,"month":true,"day":true,"hour0_23":true,"hour1_24":true,"hour0_11":true,"hour1_12":true}};D.oTimeInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"hh:mm:ss"},{pattern:"hhmmss"}],getPattern:function(l,s){return l.getTimePattern(s)},oRequiredParts:{"text":true,"hour0_23":true,"hour1_24":true,"hour0_11":true,"hour1_12":true}};D.getInstance=function(f,l){return this.getDateInstance(f,l)};D.getDateInstance=function(f,l){return this.createInstance(f,l,this.oDateInfo)};D.getDateTimeInstance=function(f,l){return this.createInstance(f,l,this.oDateTimeInfo)};D.getTimeInstance=function(f,l){return this.createInstance(f,l,this.oTimeInfo)};D.createInstance=function(f,l,I){var F=q.sap.newObject(this.prototype);if(f instanceof sap.ui.core.Locale){l=f;f=undefined}if(!l){l=sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale()}F.oLocale=l;F.oLocaleData=L.getInstance(l);F.oFormatOptions=q.extend(false,{},I.oDefaultFormatOptions,f);if(!F.oFormatOptions.pattern){F.oFormatOptions.pattern=I.getPattern(F.oLocaleData,F.oFormatOptions.style)}if(!I.aFallbackFormats){I.aFallbackFormats=[];q.each(I.aFallbackFormatOptions,function(i,f){var o=D.createInstance(f,l,I);o.bIsFallback=true;I.aFallbackFormats.push(o)})}F.aFallbackFormats=I.aFallbackFormats;F.oRequiredParts=I.oRequiredParts;F.init();return F};D.prototype.init=function(){this.aMonthsAbbrev=this.oLocaleData.getMonths("abbreviated");this.aMonthsWide=this.oLocaleData.getMonths("wide");this.aMonthsAbbrevSt=this.oLocaleData.getMonthsStandAlone("abbreviated");this.aMonthsWideSt=this.oLocaleData.getMonthsStandAlone("wide");this.aDaysAbbrev=this.oLocaleData.getDays("abbreviated");this.aDaysWide=this.oLocaleData.getDays("wide");this.aDaysAbbrevSt=this.oLocaleData.getDaysStandAlone("abbreviated");this.aDaysWideSt=this.oLocaleData.getDaysStandAlone("wide");this.aDayPeriods=this.oLocaleData.getDayPeriods("abbreviated");this.aFormatArray=this.parseJavaDateFormat(this.oFormatOptions.pattern)};D.prototype.oStates={"G":"era","y":"year","Y":"weekYear","M":"month","L":"monthStandalone","w":"weekInYear","W":"weekInMonth","D":"dayInYear","d":"day","F":"dayOfWeekInMonth","E":"dayNameInWeek","c":"dayNameInWeekStandalone","u":"dayNumberOfWeek","a":"amPmMarker","H":"hour0_23","k":"hour1_24","K":"hour0_11","h":"hour1_12","m":"minute","s":"second","S":"millisecond","z":"timezoneGeneral","Z":"timezoneRFC822","X":"timezoneISO8601"};D.prototype.format=function(d,u){if(u===undefined){u=this.oFormatOptions.UTC}var b=[],p,a=u?d.getUTCDay():d.getDay(),c=u?d.getUTCDate():d.getDate(),m=u?d.getUTCMonth():d.getMonth(),y=u?d.getUTCFullYear():d.getFullYear(),M=u?d.getUTCMilliseconds():d.getMilliseconds(),s=u?d.getUTCSeconds():d.getSeconds(),e=u?d.getUTCMinutes():d.getMinutes(),h=u?d.getUTCHours():d.getHours(),t=Math.abs(d.getTimezoneOffset()),P=d.getTimezoneOffset()>0,H=Math.floor(t/60),f=t%60,Y,w,g,r;for(var i=0;i<this.aFormatArray.length;i++){p=this.aFormatArray[i];switch(p.sType){case"text":b.push(p.sValue);break;case"day":b.push(q.sap.padLeft(String(c),"0",p.iDigits));break;case"dayNameInWeek":if(p.iDigits<4){b.push(this.aDaysAbbrev[a])}else if(p.iDigits>=4){b.push(this.aDaysWide[a])}break;case"dayNameInWeekStandalone":if(p.iDigits<4){b.push(this.aDaysAbbrevSt[a])}else if(p.iDigits>=4){b.push(this.aDaysWideSt[a])}break;case"dayNumberOfWeek":b.push(a||7);break;case"month":if(p.iDigits==3){b.push(this.aMonthsAbbrev[m])}else if(p.iDigits>=4){b.push(this.aMonthsWide[m])}else{b.push(q.sap.padLeft(String(m+1),"0",p.iDigits))}break;case"monthStandalone":if(p.iDigits==3){b.push(this.aMonthsAbbrevSt[m])}else if(p.iDigits>=4){b.push(this.aMonthsWideSt[m])}else{b.push(q.sap.padLeft(String(m+1),"0",p.iDigits))}break;case"era":b.push("AD");break;case"year":case"weekYear":Y=""+y;if(p.iDigits==2&&Y.length>2){Y=Y.substr(Y.length-2)}b.push(q.sap.padLeft(Y,"0",p.iDigits));break;case"weekInYear":w="";if(d.getWeek){w+=d.getWeek()}b.push(q.sap.padLeft(w,"0",p.iDigits));break;case"hour0_23":b.push(q.sap.padLeft(String(h),"0",p.iDigits));break;case"hour1_24":if(h==0){g="24"}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"hour0_11":if(h>11){g=String(h-12)}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"hour1_12":if(h>12){g=String(h-12)}else if(h==0){g="12"}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"minute":b.push(q.sap.padLeft(String(e),"0",p.iDigits));break;case"second":b.push(q.sap.padLeft(String(s),"0",p.iDigits));break;case"millisecond":b.push(q.sap.padRight(q.sap.padLeft(String(M),"0",Math.min(3,p.iDigits)),"0",p.iDigits));break;case"amPmMarker":var j=h<12?0:1;b.push(this.aDayPeriods[j]);break;case"timezoneGeneral":if(p.iDigits>3&&d.getTimezoneLong){b.push(d.getTimezoneLong());break}else if(d.getTimezoneShort){b.push(d.getTimezoneShort());break}b.push("GMT");case"timezoneISO8601":if(!u&&t!=0){b.push(P?"-":"+");b.push(q.sap.padLeft(String(H),"0",2));b.push(":");b.push(q.sap.padLeft(String(f),"0",2))}else{b.push("Z")}break;case"timezoneRFC822":if(!u&&t!=0){b.push(P?"-":"+");b.push(q.sap.padLeft(String(H),"0",2));b.push(q.sap.padLeft(String(f),"0",2))}break}}r=b.join("");if(sap.ui.getCore().getConfiguration().getOriginInfo()){r=new String(r);r.originInfo={source:"Common Locale Data Repository",locale:this.oLocale.toString(),style:this.oFormatOptions.style,pattern:this.oFormatOptions.pattern}}return r};D.prototype.parse=function(v,u){if(u===undefined){u=this.oFormatOptions.UTC}var d,I=0,e=false,a=null,m=null,y=null,h=null,M=null,s=null,b=null,p=false,P,c,t=null,V=true,r=this.oRequiredParts;function f(x){return x>=48&&x<=57}function g(x){var z=0;while(z<x&&f(v.charCodeAt(I+z))){z++}return v.substr(I,z)}function j(x){var i;for(i=0;i<x.length;i++){if(v.indexOf(x[i],I)==I){return x[i]}}return null}function k(x){var i;for(i=0;i<x.length;i++){if(v.indexOf(x[i],I)==I){return i}}return null}function l(x){var z=v.charAt(I)=="+"?-1:1;I++;c=g(2);var B=parseInt(c,10);I=I+2;if(x){I++}c=g(2);I=I+2;t=parseInt(c,10);t=(t+60*B)*z}function n(x,z){if(x in r&&z){V=false}}v=q.trim(v);for(var i=0;i<this.aFormatArray.length;i++){P=this.aFormatArray[i];switch(P.sType){case"text":if(v.indexOf(P.sValue,I)==I){I+=P.sValue.length}else{n(P.sType,this.aFormatArray[i+1].sType in r)}break;case"day":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;a=parseInt(c,10);break;case"dayNameInWeek":case"dayNameInWeekStandalone":c=j(this.aDaysWide);if(c){I+=c.length;break}c=j(this.aDaysWideSt);if(c){I+=c.length;break}c=j(this.aDaysAbbrev);if(c){I+=c.length;break}c=j(this.aDaysAbbrevSt);if(c){I+=c.length;break}break;case"dayNumberOfWeek":c=g(P.iDigits);I+=c.length;break;case"month":case"monthStandalone":if(P.iDigits<3){c=g(Math.max(P.iDigits,2));n(P.sType,c==="");m=parseInt(c,10)-1;I+=c.length}else{m=k(this.aMonthsWide);if(m!=null){I+=this.aMonthsWide[m].length;break}m=k(this.aMonthsWideSt);if(m!=null){I+=this.aMonthsWideSt[m].length;break}m=k(this.aMonthsAbbrev);if(m!=null){I+=this.aMonthsAbbrev[m].length;break}m=k(this.aMonthsAbbrevSt);if(m!=null){I+=this.aMonthsAbbrevSt[m].length;break}n(P.sType,true)}break;case"era":break;case"year":case"weekYear":if(P.iDigits==1){c=g(4)}else if(P.iDigits==2){c=g(2)}else{c=g(P.iDigits)}I+=c.length;n(P.sType,c==="");y=parseInt(c,10);if(c.length<=2){var C=new Date().getFullYear(),o=Math.floor(C/100),Y=o*100+y-C;if(Y<-70){y+=(o+1)*100}else if(Y<30){y+=o*100}else{y+=(o-1)*100}}break;case"weekInYear":break;case"hour0_23":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);break;case"hour1_24":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);if(h==24){h=0}break;case"hour0_11":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);break;case"hour1_12":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);if(h==12){h=0;p=true}break;case"minute":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;M=parseInt(c,10);break;case"second":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;s=parseInt(c,10);break;case"millisecond":c=g(Math.max(P.iDigits,3));I+=c.length;c=q.sap.padRight(c,"0",3);b=parseInt(c,10);break;case"amPmMarker":var A=this.aDayPeriods[0],w=this.aDayPeriods[1];if(v.indexOf(A,I)==I){p=false;I+=2}else if(v.indexOf(w,I)==I){p=true;I+=2}break;case"timezoneGeneral":var T=v.substring(I,I+3);if(T==="GMT"||T==="UTC"){I=I+3}else if(v.substring(I,I+2)==="UT"){I=I+2}else if(v.charAt(I)=="Z"){I=I+1;t=0;break}else{q.sap.log.error(v+" cannot be parsed correcly by sap.ui.core.format.DateFormat: The given timezone is not supported!");break}case"timezoneISO8601":if(v.charAt(I)=="Z"){I=I+1;t=0;break}l(true);break;case"timezoneRFC822":l(false);break}if(!V){break}}if(I<v.length){V=false}if(p){h+=12}if(V){if(t!=null){d=new Date(0);d.setUTCFullYear(y||1970);d.setUTCMonth(m||0);d.setUTCDate(a||1);d.setUTCHours(h||0);d.setUTCMinutes((M||0)+t);d.setUTCSeconds(s||0);d.setUTCMilliseconds(b||0)}else if(u){d=new Date(0);d.setUTCFullYear(y||1970);d.setUTCMonth(m||0);d.setUTCDate(a||1);d.setUTCHours(h||0);d.setUTCMinutes(M||0);d.setUTCSeconds(s||0);d.setUTCMilliseconds(b||0)}else{d=new Date(1970,0,1,0,0,0);d.setFullYear(y||1970);d.setMonth(m||0);d.setDate(a||1);d.setHours(h||0);d.setMinutes(M||0);d.setSeconds(s||0);d.setMilliseconds(b||0)}return d}if(!this.bIsFallback){q.each(this.aFallbackFormats,function(i,F){d=F.parse(v,u);if(d){return false}});return d}return null};D.prototype.parseJavaDateFormat=function(f){var F=[],i,Q=false,c=null,s="",n="";for(i=0;i<f.length;i++){var C=f.charAt(i),N,p,P;if(Q){if(C=="'"){p=f.charAt(i-1);P=f.charAt(i-2);N=f.charAt(i+1);if(p=="'"&&P!="'"){Q=false}else if(N=="'"){i+=1}else{Q=false;continue}}if(s=="text"){c.sValue+=C}else{c={sType:"text",sValue:C};F.push(c);s="text"}}else{if(C=="'"){Q=true}else if(this.oStates[C]){n=this.oStates[C];if(s==n){c.iDigits++}else{c={sType:n,iDigits:1};F.push(c);s=n}}else{if(s=="text"){c.sValue+=C}else{c={sType:"text",sValue:C};F.push(c);s="text"}}}}return F};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.format.NumberFormat')){jQuery.sap.declare('sap.ui.core.format.NumberFormat');sap.ui.define("sap/ui/core/format/NumberFormat",['jquery.sap.global','sap/ui/core/LocaleData'],function(q,L){"use strict";var N=sap.ui.base.Object.extend("sap.ui.core.format.NumberFormat",{constructor:function(f){throw new Error()}});N.INTEGER=0;N.FLOAT=1;N.CURRENCY=2;N.PERCENT=3;N.oDefaultIntegerFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:0,maxFractionDigits:0,groupingEnabled:false,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:true,type:N.INTEGER,showMeasure:false};N.oDefaultFloatFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:0,maxFractionDigits:99,groupingEnabled:true,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:false,type:N.FLOAT,showMeasure:false};N.oDefaultCurrencyFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:2,maxFractionDigits:2,groupingEnabled:true,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:false,type:N.CURRENCY,showMeasure:true};N.getInstance=function(f,l){return this.getFloatInstance(f,l)};N.getFloatInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.FLOAT);F.oFormatOptions=q.extend(false,{},this.oDefaultFloatFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.getIntegerInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.INTEGER);F.oFormatOptions=q.extend(false,{},this.oDefaultIntegerFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.getCurrencyInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.CURRENCY);F.oFormatOptions=q.extend(false,{},this.oDefaultCurrencyFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.createInstance=function(f,l){var F=q.sap.newObject(this.prototype);if(f instanceof sap.ui.core.Locale){l=f;f=undefined}if(!l){l=sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale()}F.oLocale=l;F.oLocaleData=L.getInstance(l);return F};N.getLocaleFormatOptions=function(l,t){var o={},n;if(t==N.CURRENCY){n=l.getCurrencyPattern();o=this.parseNumberPattern(n)}o.plusSign=l.getNumberSymbol("plusSign");o.minusSign=l.getNumberSymbol("minusSign");o.decimalSeparator=l.getNumberSymbol("decimal");o.groupingSeparator=l.getNumberSymbol("group");o.pattern=n;return o};N.parseNumberPattern=function(f){var m=0;var M=0;var a=0;var g=false;var s=0;for(var i=0;i<f.length;i++){var c=f[i];if(c===","){g=true;continue}else if(c==="."){s=1;continue}else if(s==0&&c==="0"){m++}else if(s==1){if(c==="0"){M++;a++}else if(c==="#"){a++}}}return{minIntegerDigits:m,minFractionDigits:M,maxFractionDigits:a,groupingEnabled:g}};N.prototype.format=function(v,m){var n=this.convertToDecimal(v),i="",f="",g="",r="",p=0,l=0,b=v<0,d=-1,o=this.oFormatOptions;if(n=="NaN"){return n}if(o.type==N.CURRENCY){var D=this.oLocaleData.getCurrencyDigits(m);o.maxFractionDigits=D;o.minFractionDigits=D}if(b){n=n.substr(1)}d=n.indexOf(".");if(d>-1){i=n.substr(0,d);f=n.substr(d+1)}else{i=n}if(i.length<o.minIntegerDigits){i=q.sap.padLeft(i,"0",o.minIntegerDigits)}else if(i.length>o.maxIntegerDigits){i=q.sap.padLeft("","?",o.maxIntegerDigits)}if(f.length<o.minFractionDigits){f=q.sap.padRight(f,"0",o.minFractionDigits)}else if(f.length>o.maxFractionDigits){f=f.substr(0,o.maxFractionDigits)}l=i.length;if(o.groupingEnabled&&l>3){p=l%3||3;g=i.substr(0,p);while(p<i.length){g+=o.groupingSeparator;g+=i.substr(p,3);p+=3}i=g}if(b){r=o.minusSign}r+=i;if(f){r+=o.decimalSeparator+f}if(m&&o.showMeasure){if(o.type==N.CURRENCY){var c='\u00a4';var P=o.pattern;P=P.replace(/\u00a4/,this.oLocaleData.getCurrencySymbol(m));P=P.replace(/[0#.,]+/,r);r=P}}if(sap.ui.getCore().getConfiguration().getOriginInfo()){r=new String(r);r.originInfo={source:"Common Locale Data Repository",locale:this.oLocale.toString()}}return r};N.prototype.parse=function(v){var o=this.oFormatOptions,r="^\\s*([+-]?(?:[0-9\\"+o.groupingSeparator+"]+|[0-9\\"+o.groupingSeparator+"]*\\"+o.decimalSeparator+"[0-9]+)([eE][+-][0-9]+)?)\\s*$",R="^\\s*([+-]?[0-9\\"+o.groupingSeparator+"]+)\\s*$",g=new RegExp("\\"+o.groupingSeparator,"g"),d=new RegExp("\\"+o.decimalSeparator,"g"),a,b=0;v=v.replace(/\s/g,"");if(o.isInteger){a=new RegExp(R)}else{a=new RegExp(r)}if(!a.test(v)){return NaN}v=v.replace(g,"");if(o.isInteger){b=parseInt(v,10)}else{v=v.replace(d,".");b=parseFloat(v)}return b};N.prototype.convertToDecimal=function(v){var V=""+v,n,b,d,f,e,p;if(V.indexOf("e")==-1&&V.indexOf("E")==-1){return V}var r=V.match(/^([+-]?)((\d+)(?:\.(\d+))?)[eE]([+-]?\d+)$/);n=r[1]=="-";b=r[2].replace(/\./g,"");d=r[3]?r[3].length:0;f=r[4]?r[4].length:0;e=parseInt(r[5],10);if(e>0){if(e<f){p=d+e;V=b.substr(0,p)+"."+b.substr(p)}else{V=b;e-=f;for(var i=0;i<e;i++){V+="0"}}}else{if(-e<d){p=d+e;V=b.substr(0,p)+"."+b.substr(p)}else{V=b;e+=d;for(var i=0;i>e;i--){V="0"+V}V="0."+V}}if(n){V="-"+V}return V};return N},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.Controller')){jQuery.sap.declare('sap.ui.core.mvc.Controller');sap.ui.define("sap/ui/core/mvc/Controller",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var r={};var C=E.extend("sap.ui.core.mvc.Controller",{constructor:function(n){var t=null;if(typeof(n)=="string"){if(!r[n]){q.sap.require({modName:n,type:"controller"});if(!r[n]){throw new Error("Controller type "+n+" is still undefined after trying to load it.")}}t=r[n]}E.apply(this,arguments);if(t){q.extend(this,r[n])}}});var c={"onInit":true,"onExit":false,"onBeforeRendering":false,"onAfterRendering":true};function e(o,n){var a;if(sap.ui.core.CustomizingConfiguration){var b=sap.ui.core.CustomizingConfiguration.getControllerExtension(n);if(b){var s=b.controllerName;q.sap.log.info("Customizing: Controller '"+n+"' is now extended by '"+s+"'");if(!r[s]&&!q.sap.getObject(s)){q.sap.require({modName:s,type:"controller"})}if(!r[s]&&!q.sap.getObject(s)){q.sap.log.error("Attempt to load Extension Controller "+s+" was not successful - is the Controller correctly defined in its file?")}if(a=r[s]){for(var m in a){if(c[m]!==undefined){var O=o[m];if(O&&typeof O==="function"){(function(m,O){o[m]=function(){if(c[m]){O.apply(o,arguments);a[m].apply(o,arguments)}else{a[m].apply(o,arguments);O.apply(o,arguments)}}})(m,O)}else{o[m]=a[m]}}else{o[m]=a[m]}}return o}else{}}else{q.sap.log.debug("Customizing: no Controller extension found for Controller '"+n+"'.")}}return o}sap.ui.controller=function(n,o){if(!n){throw new Error("Controller name ('sName' parameter) is required")}if(!o){if(!r[n]&&!q.sap.getObject(n)){q.sap.require({modName:n,type:"controller"})}if(r[n]){var a=new C(n);a=e(a,n);return a}else{var b=q.sap.getObject(n);if(typeof b==="function"&&b.prototype instanceof C){var a=new b();a=e(a,n);return a}}throw new Error("Controller "+n+" couldn't be instantiated")}else{r[n]=o}};C.prototype.getView=function(){return this.oView};C.prototype.byId=function(i){return this.oView?this.oView.byId(i):undefined};C.prototype.createId=function(i){return this.oView?this.oView.createId(i):undefined};C.prototype.getOwnerComponent=function(){q.sap.require("sap.ui.core.Component");var v=sap.ui.core.Component.getOwnerIdFor(this.getView());if(v===undefined){return undefined}return sap.ui.component(v)};C.prototype.connectToView=function(v){this.oView=v;if(this.onInit){v.attachAfterInit(this.onInit,this)}if(this.onExit){v.attachBeforeExit(this.onExit,this)}if(this.onAfterRendering){v.attachAfterRendering(this.onAfterRendering,this)}if(this.onBeforeRendering){v.attachBeforeRendering(this.onBeforeRendering,this)}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.HTMLViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.HTMLViewRenderer');sap.ui.define("sap/ui/core/mvc/HTMLViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var H={};H.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiHTMLView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var h=c._oTemplate.innerHTML;var b=c.getContent();var d=[];var e=function(c){var t=H._getHTML(a,c,h);if(t){h=t}else{d.push(c)}};if(b){if(q.isArray(b)){for(var i=0;i<b.length;i++){e(b[i])}}else if(b){e(b)}}a.write(h);for(var i=0;i<d.length;i++){a.renderControl(d[i])}a.write("</div>")};H._getHTML=function(r,c,h){var i=c.getId();h=h.replace(/(<div)/gi,"\n$1");var a=new RegExp('<div.*?data-sap-ui-id="'+i+'".*?></div>',"gi");var m=a.exec(h);if(m){h=h.replace(m[0],r.getHTML(c));return h}else{return""}};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSONViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.JSONViewRenderer');sap.ui.define("sap/ui/core/mvc/JSONViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var J={};J.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiJSONView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var b=c.getContent();if(b){if(b.length&&!(b instanceof sap.ui.core.Control)){for(var i=0;i<b.length;i++){a.renderControl(b[i])}}else{a.renderControl(c.getContent())}}a.write("</div>")};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.JSViewRenderer');sap.ui.define("sap/ui/core/mvc/JSViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var J={};J.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiJSView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var b=c.getContent();if(b){if(q.isArray(b)){for(var i=0;i<b.length;i++){a.renderControl(b[i])}}else if(b){a.renderControl(b)}}a.write("</div>")};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.TemplateViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.TemplateViewRenderer');sap.ui.define("sap/ui/core/mvc/TemplateViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var T={};T.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiTmplView");V.addDisplayClass(a,c);a.addStyle("width",c.getWidth());a.addStyle("height",c.getHeight());a.writeStyles();a.writeClasses();a.write(">");a.renderControl(c._oTemplate);a.write("</div>")};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.HashChanger')){
// Copyright (c) 2013 SAP SE, All Rights Reserved
jQuery.sap.declare('sap.ui.core.routing.HashChanger');jQuery.sap.require('sap.ui.thirdparty.signals');jQuery.sap.require('sap.ui.thirdparty.hasher');sap.ui.define("sap/ui/core/routing/HashChanger",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/thirdparty/signals','sap/ui/thirdparty/hasher'],function(q,E,s,h){"use strict";var H=E.extend("sap.ui.core.routing.HashChanger",{constructor:function(){E.apply(this)}});H.prototype.init=function(){if(this._initialized){q.sap.log.info("this HashChanger instance has already been initialized.");return false}hasher.changed.add(this.fireHashChanged,this);if(!hasher.isActive()){hasher.initialized.addOnce(this.fireHashChanged,this);hasher.init()}else{this.fireHashChanged(hasher.getHash())}this._initialized=true;return this._initialized};H.prototype.fireHashChanged=function(n,o){this.fireEvent("hashChanged",{newHash:n,oldHash:o})};H.prototype.setHash=function(a){this.fireEvent("hashSet",{sHash:a});hasher.setHash(a)};H.prototype.replaceHash=function(a){this.fireEvent("hashReplaced",{sHash:a});hasher.replaceHash(a)};H.prototype.getHash=function(){return hasher.getHash()};H.prototype.destroy=function(){hasher.changed.remove(this.fireHashChanged,this);E.prototype.destroy.apply(this,arguments)};(function(){var _=null;H.getInstance=function(){if(!_){_=new H()}return _};H.replaceHashChanger=function(o){if(_){q.extend(o.mEventRegistry,_.mEventRegistry);_.destroy()}_=o}}());return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.History')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.routing.History');sap.ui.define("sap/ui/core/routing/History",['jquery.sap.global','./HashChanger'],function(q,H){"use strict";var a=function(h){this._iHistoryLength=window.history.length;this.aHistory=[];this._bIsInitial=true;if(!h){q.sap.log.error("sap.ui.core.routing.History constructor was called and it did not get a hashChanger as parameter")}this._oHashChanger=h;this._oHashChanger.attachEvent("hashChanged",this._onHashChange,this);this._oHashChanger.attachEvent("hashReplaced",this._hashReplaced,this);this._oHashChanger.attachEvent("hashSet",this._hashSet,this);this._reset()};a.prototype.destroy=function(n){this._oHashChanger.detachEvent("hashChanged",this._onHashChange,this);this._oHashChanger.detachEvent("hashReplaced",this._hashReplaced,this);this._oHashChanger.detachEvent("hashSet",this._hashSet,this);this._oHashChanger=null};a.prototype.getDirection=function(n){if(n!==undefined&&this._bIsInitial){return undefined}if(n===undefined){return this._sCurrentDirection}return this._getDirection(n)};a.prototype.getPreviousHash=function(){return this.aHistory[this.iHistoryPosition-1]};a.prototype._reset=function(){this.aHistory.length=0;this.iHistoryPosition=0;this._bUnknown=true;this.aHistory[0]=this._oHashChanger.getHash()};a.prototype._getDirection=function(n,h){var d=sap.ui.core.routing.HistoryDirection;if(this._oNextHash&&this._oNextHash.sHash===n){return d.NewEntry}if(this._bUnknown){return d.Unknown}if(h){return d.NewEntry}if(this.aHistory[this.iHistoryPosition+1]===n&&this.aHistory[this.iHistoryPosition-1]===n){return d.Unknown}if(this.aHistory[this.iHistoryPosition-1]===n){return d.Backwards}if(this.aHistory[this.iHistoryPosition+1]===n){return d.Forwards}return d.Unknown};a.prototype._onHashChange=function(e){this._hashChange(e.getParameter("newHash"))};a.prototype._hashChange=function(n){var d=sap.ui.core.routing.HistoryDirection,b=window.history.length,D;if(this._oNextHash&&this._oNextHash.bWasReplaced&&this._oNextHash.sHash===n){this.aHistory[this.iHistoryPosition]=n;this._oNextHash=null;return}this._bIsInitial=false;D=this._sCurrentDirection=this._getDirection(n,this._iHistoryLength<window.history.length);if(this._oNextHash&&!this._oNextHash.bWasReplaced){this._iHistoryLength=b+1}else{this._iHistoryLength=b}if(this._oNextHash){this._oNextHash=null}if(D===d.Unknown){this._reset();return}this._bUnknown=false;if(D===d.NewEntry){if(this.iHistoryPosition+1<this.aHistory.length){this.aHistory=this.aHistory.slice(0,this.iHistoryPosition+1)}this.aHistory.push(n);this.iHistoryPosition+=1;return}if(D===d.Forwards){this.iHistoryPosition++;return}if(D===d.Backwards){this.iHistoryPosition--}};a.prototype._hashSet=function(e){this._hashChangedByApp(e.getParameter("sHash"),false)};a.prototype._hashReplaced=function(e){this._hashChangedByApp(e.getParameter("sHash"),true)};a.prototype._hashChangedByApp=function(n,w){this._oNextHash={sHash:n,bWasReplaced:w}};(function(){var i=new a(H.getInstance());a.getInstance=function(){return i}}());return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.Route')){jQuery.sap.declare('sap.ui.core.routing.Route');jQuery.sap.require('sap.ui.thirdparty.crossroads');jQuery.sap.require('sap.ui.thirdparty.signals');sap.ui.define("sap/ui/core/routing/Route",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/thirdparty/crossroads','sap/ui/thirdparty/signals'],function(q,E,c,s){"use strict";var R=E.extend("sap.ui.core.routing.Route",{constructor:function(r,C,p){if(!C.name){q.sap.log.error("A name has to be specified for every route")}var t=this,v=C.pattern;if(!q.isArray(v)){v=[v]}if(q.isArray(C.subroutes)){var S=C.subroutes;C.subroutes={};q.each(S,function(i,o){C.subroutes[o.name]=o})}this._aPattern=[];this._aRoutes=[];this._oParent=p;this._oConfig=C;if(C.subroutes){q.each(C.subroutes,function(a,o){if(o.name==undefined){o.name=a}r.addRoute(o,t)})}if(C.pattern===undefined){return}q.each(v,function(i,a){t._aPattern[i]=a;t._aRoutes[i]=r._oRouter.addRoute(a);t._aRoutes[i].matched.add(function(){var A={};q.each(arguments,function(b,d){A[t._aRoutes[i]._paramsIds[b]]=d});t._routeMatched(r,A,true)})})},metadata:{publicMethods:["getURL","getPattern"]}});R.prototype.getURL=function(p){return this._aRoutes[0].interpolate(p)};R.prototype.getPattern=function(){return this._aPattern[0]};R.prototype._routeMatched=function(r,a,i){var v,p,t,T;if(this._oParent){p=this._oParent._routeMatched(r,a);t=p.oTargetParent;T=p.oTargetControl}var C=q.extend({},r._oConfig,this._oConfig);if((T||C.targetControl)&&C.targetAggregation){if(!t){if(C.targetParent){T=sap.ui.getCore().byId(C.targetParent).byId(C.targetControl)}}else{if(C.targetControl){T=t.byId(C.targetControl)}}if(!T){T=sap.ui.getCore().byId(C.targetControl)}if(T){var A=T.getMetadata().getJSONKeys()[C.targetAggregation];if(A){var V=C.view;if(C.viewPath){V=C.viewPath+"."+V}v=r.getView(V,C.viewType,C.viewId);if(C.clearTarget===true){T[A._sRemoveAllMutator]()}T[A._sMutator](v)}else{q.sap.log.error("Control "+C.targetControl+" does not has an aggregation called "+C.targetAggregation)}}else{q.sap.log.error("Control with ID "+C.targetControl+" could not be found")}}if(C.callback){C.callback(this,a,C,T,v)}r.fireRouteMatched({name:C.name,arguments:a,targetControl:T,view:v,config:C});if(i){r.fireRoutePatternMatched({name:C.name,arguments:a,targetControl:T,view:v,config:C})}return{oTargetParent:v,oTargetControl:T}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.Serializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.Serializer');sap.ui.define("sap/ui/core/util/serializer/Serializer",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var S=E.extend("sap.ui.core.util.serializer.Serializer",{constructor:function(r,s,b,w,f){E.apply(this);this._oRootControl=r;this._delegate=s;this._bSkipRoot=!!b;this._oWindow=w||window;this._fnSkipAggregations=f}});S.prototype.serialize=function(){return this._serializeRecursive(this._oRootControl,0)};S.prototype._serializeRecursive=function(c,l,a,b){var C=[];var w=(!this._bSkipRoot||l!==0);if(w){c.getMetadata().getJSONKeys();var s=this._delegate.start(c,a,b);var m=this._delegate.middle(c,a,b);C.push(s+m)}if(l===0||!(this._fnSkipAggregations&&this._fnSkipAggregations(c))){var A=c.getMetadata().getAllAggregations();if(A){for(var n in A){var e=[];var o=A[n];var v=c[o._sGetter]();if(c.getBindingPath(n)&&c.getBindingInfo(n).template){e.push(c.getBindingInfo(n).template)}else if(v&&v.length){for(var i=0;i<v.length;i++){var O=v[i];if(O instanceof this._oWindow.sap.ui.core.Element){e.push(O)}}}else if(v instanceof this._oWindow.sap.ui.core.Element){e.push(v)}if(e.length>0){if(w){C.push(this._delegate.startAggregation(c,n))}var d=this._isDefaultAggregation(c,n);for(var i=0;i<e.length;i++){C.push(this._serializeRecursive(e[i],l+1,n,d))}if(w){C.push(this._delegate.endAggregation(c,n))}}}}}if(w){var f=this._delegate.end(c,a,b);C.push(f)}return C.join("")};S.prototype._isDefaultAggregation=function(c,a){return c.getMetadata().getDefaultAggregationName()===a};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.Delegate')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.Delegate');sap.ui.define("sap/ui/core/util/serializer/delegate/Delegate",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var D=E.extend("sap.ui.core.util.serializer.delegate.Delegate",{constructor:function(){E.apply(this)}});D.prototype.start=function(c,a,i){return""};D.prototype.middle=function(c,a,i){return""};D.prototype.end=function(c,a,i){return""};D.prototype.startAggregation=function(c,a){return""};D.prototype.endAggregation=function(c,a){return""};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.HTML')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.HTML');sap.ui.define("sap/ui/core/util/serializer/delegate/HTML",['jquery.sap.global','./Delegate'],function(q,D){"use strict";var H=D.extend("sap.ui.core.util.serializer.delegate.HTML",{constructor:function(g,G){D.apply(this);this._fnGetControlId=g;this._fnGetEventHandlerName=G}});H.prototype.startAggregation=function(c,a){return'<div data-sap-ui-aggregation="'+a+'">'};H.prototype.endAggregation=function(c,a){return'</div>'};H.prototype.start=function(c,a,i){return"<div"};H.prototype.middle=function(c,a,b){var h=[];var I=(this._fnGetControlId)?this._fnGetControlId(c):c.getId();if(I.indexOf("__")!==0){h.push(this._createAttribute("id",I))}h.push(this._createAttribute("data-sap-ui-type",c.getMetadata()._sClassName));if(c.aCustomStyleClasses){var C=c.aCustomStyleClasses;var d=[];for(var i=0;i<C.length;i++){var s=C[i];if(!q.sap.startsWith(s,"sapM")&&!q.sap.startsWith(s,"sapUi")){d.push(s)}}if(d.length>0){h.push(this._createAttribute("class",d.join(" ")))}}if(this._fnGetEventHandlerName){var e=c.getMetadata().getAllEvents();for(var E in e){if(c.hasListeners(E)){var f=c.mEventRegistry[E];for(var i=0;i<f.length;i++){var g=this._fnGetEventHandlerName(f[i]);if(g){h.push(this._createAttribute("data-"+this._createHtmlAttributeName(E),g));break}}}}}var A=c.getMetadata().getAllAssociations();this._createAttributes(h,c,A,function(n,v){if(A[n].multiple){return v.join(" ")}return v},function(n,v){return(v!==null&&typeof v!==undefined&&v!=="")});var p=c.getMetadata().getAllProperties();this._createAttributes(h,c,p,null,function(n,v){return(!!c.getBindingInfo(n)||(v!==null&&typeof v!==undefined&&v!==""))});var o=c.getMetadata().getAllAggregations();this._createAttributes(h,c,o,null,function(n,v){if(!c.getBindingInfo(n)&&(!v||(typeof v!=="string"))){return false}return true});h.push('>');return h.join('')};H.prototype.end=function(c,a,i){return"</div>"};H.prototype._createAttributes=function(h,c,o,g,v){for(var n in o){var p=o[n];var G=p._sGetter;if(c[G]){var V=c[G]();V=g?g(n,V):V;if(!c.getBindingInfo(n)){if(V!==p.defaultValue){if(!v||v(n,V)){h.push(this._createAttribute("data-"+this._createHtmlAttributeName(n),V))}}}else{h.push(this._createDataBindingAttribute(c,n,V))}}}};H.prototype._createDataBindingAttribute=function(c,n,v){var b=c.getBindingInfo(n);var B=null;var p=v;if(!b.bindingString){if(b.binding){var C=b.binding.getMetadata().getName();if(C==="sap.ui.model.PropertyBinding"||C==="sap.ui.model.resource.ResourcePropertyBinding"){B=b.binding.getValue()}}if(b.parts){b=b.parts[0]}var m=b.model;if(B===v||B===null){p="{"+(m?(m+">"+b.path):b.path)+"}"}}else{p=b.bindingString}return this._createAttribute("data-"+this._createHtmlAttributeName(n),p)};H.prototype._createAttribute=function(a,v){return' '+a+'="'+v+'"'};H.prototype._createHtmlAttributeName=function(n){return q.sap.hyphen(n)};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.XML')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.XML');sap.ui.define("sap/ui/core/util/serializer/delegate/XML",['jquery.sap.global','./Delegate'],function(q,D){"use strict";var X=D.extend("sap.ui.core.util.serializer.delegate.XML",{constructor:function(d,g,G,m){D.apply(this);this._sDefaultNamespace=d;this._fnGetControlId=g;this._fnMemorizePackage=m;this._fnGetEventHandlerName=G}});X.prototype.startAggregation=function(c,a){return'<'+this._createAggregationName(c,a)+'>'};X.prototype.endAggregation=function(c,a){return'</'+this._createAggregationName(c,a)+'>'};X.prototype.start=function(c,a,i){return"<"+this._createTagName(c)};X.prototype.end=function(c,a,i){return"</"+this._createTagName(c)+">"};X.prototype.middle=function(c,a,b){var x=[];var I=(this._fnGetControlId)?this._fnGetControlId(c):c.getId();if(I.indexOf("__")!==0){x.push(this._createAttribute("id",I))}if(c.aCustomStyleClasses){var C=c.aCustomStyleClasses;var d=[];for(var i=0;i<C.length;i++){var s=C[i];if(!q.sap.startsWith(s,"sapM")&&!q.sap.startsWith(s,"sapUi")){d.push(s)}}if(d.length>0){x.push(this._createAttribute("class",d.join(" ")))}}if(this._fnGetEventHandlerName){var e=c.getMetadata().getAllEvents();for(var E in e){if(c.hasListeners(E)){var f=c.mEventRegistry[E];for(var i=0;i<f.length;i++){var h=this._fnGetEventHandlerName(f[i]);if(h){x.push(this._createAttribute(E,h));break}}}}}var A=c.getMetadata().getAllAssociations();this._createAttributes(x,c,A,function(n,v){if(A[n].multiple){return v.join(" ")}return v},function(n,v){return(v!==null&&typeof v!==undefined&&v!=="")});var p=c.getMetadata().getAllProperties();this._createAttributes(x,c,p,null,function(n,v){return(!!c.getBindingInfo(n)||(v!==null&&typeof v!==undefined&&v!==""))});var o=c.getMetadata().getAllAggregations();this._createAttributes(x,c,o,null,function(n,v){if(!c.getBindingInfo(n)&&(!v||(typeof v!=="string"))){return false}return true});x.push('>');return x.join('')};X.prototype._createAttributes=function(x,c,o,g,v){for(var n in o){var p=o[n];var G=p._sGetter;if(c[G]){var V=c[G]();V=g?g(n,V):V;if(!c.getBindingInfo(n)){if(V!==p.defaultValue){if(!v||v(n,V)){x.push(this._createAttribute(n,V))}}}else{x.push(this._createDataBindingAttribute(c,n,V))}}}};X.prototype._createDataBindingAttribute=function(c,n,v){var b=c.getBindingInfo(n);var B=null;var p=v;if(!b.bindingString){if(b.binding){var C=b.binding.getMetadata().getName();if(C==="sap.ui.model.PropertyBinding"||C==="sap.ui.model.resource.ResourcePropertyBinding"){B=b.binding.getValue()}}if(b.parts){b=b.parts[0]}var m=b.model;if(B===v||B===null){p="{"+(m?(m+">"+b.path):b.path)+"}"}}else{p=b.bindingString}return this._createAttribute(n,p)};X.prototype._createAttribute=function(a,v){return' '+a+'="'+v+'"'};X.prototype._createTagName=function(c){var C=c.getMetadata()._sClassName;var l=C.lastIndexOf(".");var s=(l===-1)?C:C.substring(l+1);var p=(l===-1)?C:C.substring(0,l);if(this._fnMemorizePackage){this._fnMemorizePackage(c,p)}return this._createNamespace(p,s)};X.prototype._createAggregationName=function(c,a){var C=c.getMetadata()._sClassName;var l=C.lastIndexOf(".");var p=(l===-1)?C:C.substring(0,l);return this._createNamespace(p,a)};X.prototype._createNamespace=function(n,N){if(this._sDefaultNamespace&&this._sDefaultNamespace===n){return N}else{return n+":"+N}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.WebSocket')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.ws.WebSocket');sap.ui.define("sap/ui/core/ws/WebSocket",['jquery.sap.global','sap/ui/Device','sap/ui/base/EventProvider','./ReadyState'],function(q,D,E,R){"use strict";var W=E.extend("sap.ui.core.ws.WebSocket",{constructor:function(u,p){E.apply(this);if(!D.support.websocket){throw new Error("Browser does not support WebSockets.")}if(typeof(u)!=="string"){throw new Error("sUrl must be a string.")}if(typeof(p)!=='undefined'&&!q.isArray(p)&&typeof(p)!=='string'){throw new Error("aProtocols must be a string, array of strings or undefined.")}this._openConnection(u,p)},metadata:{publicMethods:["send","close","getReadyState","getProtocol"]}});W.prototype.getInterface=function(){return this};W.M_EVENTS={Open:"open",Close:"close",Error:"error",Message:"message"};W.prototype.attachOpen=function(d,f,l){this.attachEvent("open",d,f,l);return this};W.prototype.detachOpen=function(f,l){this.detachEvent("open",f,l);return this};W.prototype.fireOpen=function(a){this.fireEvent("open",a);return this};W.prototype.attachClose=function(d,f,l){this.attachEvent("close",d,f,l);return this};W.prototype.detachClose=function(f,l){this.detachEvent("close",f,l);return this};W.prototype.fireClose=function(a){this.fireEvent("close",a);return this};W.prototype.attachError=function(d,f,l){this.attachEvent("error",d,f,l);return this};W.prototype.detachError=function(f,l){this.detachEvent("error",f,l);return this};W.prototype.fireError=function(a){this.fireEvent("error",a);return this};W.prototype.attachMessage=function(d,f,l){this.attachEvent("message",d,f,l);return this};W.prototype.detachMessage=function(f,l){this.detachEvent("message",f,l);return this};W.prototype.fireMessage=function(a){this.fireEvent("message",a);return this};W.prototype._resolveFullUrl=function(u){var f='';if(!/^wss?:\/\//.test(u)){var l=document.location;f=((l.protocol==='https:')?'wss://':'ws://')+l.host;if(u.substr(0,1)==='/'){f+=u}else{f+=l.pathname.substring(0,l.pathname.lastIndexOf('/'))+'/'+u}}else{f=u}return f};W.prototype._openConnection=function(u,p){var u=this._resolveFullUrl(u);this._oWs=(typeof(p)==='undefined')?new window.WebSocket(u):new window.WebSocket(u,p);this._oWs.onopen=q.proxy(this._onopen,this);this._oWs.onclose=q.proxy(this._onclose,this);this._oWs.onmessage=q.proxy(this._onmessage,this);this._oWs.onerror=q.proxy(this._onerror,this)};W.prototype._onopen=function(){this.fireOpen()};W.prototype._onclose=function(c){this.fireClose({code:c.code,reason:c.reason,wasClean:c.wasClean})};W.prototype._onerror=function(e){this.fireError()};W.prototype._onmessage=function(m){this.fireMessage({data:m.data})};W.prototype.send=function(m){if(this.getReadyState()===R.OPEN){this._oWs.send(m)}else if(this.getReadyState()===R.CONNECTING){this.attachEventOnce("open",function(e){this._oWs.send(m)})}else{q.sap.log.warning("Unable to send WebSocket message. "+"Connection is already closed or closing. message: "+m)}return this};W.prototype.close=function(c,r){if(typeof(c)==='string'){r=c;c=undefined}c=(typeof(c)==='undefined')?1000:c;r=(typeof(r)==='undefined')?"":r;if(this.getReadyState()===R.OPEN){this._oWs.close(c,r)}else if(this.getReadyState()===R.CONNECTING){this.attachEventOnce("open",function(e){this._oWs.close(c,r)})}else{var t='';switch(this.getReadyState()){case R.CLOSED:t="Connection is already closed.";break;case R.CLOSING:t="Connection is already closing.";break}q.sap.log.warning("Unable to close WebSocket connection. "+t)}return this};W.prototype.getReadyState=function(){return this._oWs.readyState};W.prototype.getProtocol=function(){return this._oWs.protocol};return W},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Binding')){jQuery.sap.declare('sap.ui.model.Binding');sap.ui.define("sap/ui/model/Binding",['jquery.sap.global','sap/ui/base/EventProvider','./ChangeReason'],function(q,E,C){"use strict";var B=E.extend("sap.ui.model.Binding",{constructor:function(m,p,c,P){E.apply(this);this.oModel=m;this.bRelative=!q.sap.startsWith(p,'/');this.sPath=p;this.oContext=c;this.mParameters=P;this.bInitial=false;this.bSuspended=false},metadata:{"abstract":true,publicMethods:["getPath","getContext","getModel","attachChange","detachChange","refresh","isInitial","attachDataRequested","detachDataRequested","attachDataReceived","detachDataReceived","suspend","resume"]}});B.prototype.getPath=function(){return this.sPath};B.prototype.getContext=function(){return this.oContext};B.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;this._fireChange()}};B.prototype.getModel=function(){return this.oModel};B.prototype.attachChange=function(f,l){if(!this.hasListeners("change")){this.oModel.addBinding(this)}this.attachEvent("change",f,l)};B.prototype.detachChange=function(f,l){this.detachEvent("change",f,l);if(!this.hasListeners("change")){this.oModel.removeBinding(this)}};B.prototype._fireChange=function(a){this.fireEvent("change",a)};B.prototype.attachDataRequested=function(f,l){this.attachEvent("dataRequested",f,l)};B.prototype.detachDataRequested=function(f,l){this.detachEvent("dataRequested",f,l)};B.prototype.fireDataRequested=function(a){this.fireEvent("dataRequested",a)};B.prototype.attachDataReceived=function(f,l){this.attachEvent("dataReceived",f,l)};B.prototype.detachDataReceived=function(f,l){this.detachEvent("dataReceived",f,l)};B.prototype.fireDataReceived=function(a){this.fireEvent("dataReceived",a)};B.prototype.updateRequired=function(m){return m&&this.getModel()===m};B.prototype.checkUpdate=function(f){if(!this.bSuspended){this._fireChange({reason:C.Change})}};B.prototype.refresh=function(f){this.checkUpdate(f)};B.prototype.initialize=function(){this.checkUpdate(true);return this};B.prototype._refresh=function(){this.refresh()};B.prototype.isInitial=function(){return this.bInitial};B.prototype.isRelative=function(){return this.bRelative};B.prototype.attachEvents=function(e){if(!e){return this}var t=this;q.each(e,function(s,h){var m="attach"+s.substring(0,1).toUpperCase()+s.substring(1);if(t[m]){t[m](h)}else{q.sap.log.warning(t.toString()+" has no handler for event '"+s+"'")}});return this};B.prototype.detachEvents=function(e){if(!e){return this}var t=this;q.each(e,function(s,h){var m="detach"+s.substring(0,1).toUpperCase()+s.substring(1);if(t[m]){t[m](h)}else{q.sap.log.warning(t.toString()+" has no handler for event '"+s+"'")}});return this};B.prototype.attachRefresh=function(f,l){this.attachEvent("refresh",f,l)};B.prototype.detachRefresh=function(f,l){this.detachEvent("refresh",f,l)};B.prototype._fireRefresh=function(a){this.fireEvent("refresh",a)};B.prototype.suspend=function(){this.bSuspended=true};B.prototype.resume=function(){this.bSuspended=false;this.checkUpdate()};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Context')){jQuery.sap.declare('sap.ui.model.Context');sap.ui.define("sap/ui/model/Context",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var C=sap.ui.base.Object.extend("sap.ui.model.Context",{constructor:function(m,p){sap.ui.base.Object.apply(this);this.oModel=m;this.sPath=p},metadata:{"abstract":true,publicMethods:["getModel","getPath","getProperty","getObject"]}});C.prototype.getModel=function(){return this.oModel};C.prototype.getPath=function(p){return this.sPath+(p?"/"+p:"")};C.prototype.getProperty=function(p){return this.oModel.getProperty(p,this)};C.prototype.getObject=function(p){return this.oModel.getObject(p,this)};C.prototype.toString=function(){return this.sPath};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ContextBinding')){jQuery.sap.declare('sap.ui.model.ContextBinding');sap.ui.define("sap/ui/model/ContextBinding",['jquery.sap.global','./Binding'],function(q,B){"use strict";var C=B.extend("sap.ui.model.ContextBinding",{constructor:function(m,p,c,P,e){B.call(this,m,p,c,P,e);this.oElementContext=null;this.bInitial=true},metadata:{publicMethods:["getElementContext"]}});C.prototype.checkUpdate=function(f){};C.prototype.getBoundContext=function(c){return this.oElementContext};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Filter')){jQuery.sap.declare('sap.ui.model.Filter');sap.ui.define("sap/ui/model/Filter",['jquery.sap.global','./FilterOperator'],function(q,F){"use strict";var a=sap.ui.base.Object.extend("sap.ui.model.Filter",{constructor:function(p,o,v,V){if(typeof p==="object"&&!q.isArray(p)){var f=p;this.sPath=f.path;this.sOperator=f.operator;this.oValue1=f.value1;this.oValue2=f.value2;this.aFilters=f.filters||f.aFilters;this.bAnd=f.and||f.bAnd}else{if(q.isArray(p)){this.aFilters=p}else{this.sPath=p}if(q.type(o)==="boolean"){this.bAnd=o}else{this.sOperator=o}this.oValue1=v;this.oValue2=V}if(q.isArray(this.aFilters)&&!this.sPath&&!this.sOperator&&!this.oValue1&&!this.oValue2){this._bMultiFilter=true;q.each(this.aFilters,function(i,b){if(!(b instanceof a)){q.sap.log.error("Filter in Aggregation of Multi filter has to be instance of sap.ui.model.Filter")}})}else if(!this.aFilters&&this.sPath!==undefined&&this.sOperator&&this.oValue1!==undefined){this._bMultiFilter=false}else{q.sap.log.error("Wrong parameters defined for filter.")}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ListBinding')){jQuery.sap.declare('sap.ui.model.ListBinding');sap.ui.define("sap/ui/model/ListBinding",['jquery.sap.global','./Binding','./Filter','./Sorter'],function(q,B,F,S){"use strict";var L=B.extend("sap.ui.model.ListBinding",{constructor:function(m,p,c,s,f,P){B.call(this,m,p,c,P);this.aSorters=s;if(!q.isArray(this.aSorters)&&this.aSorters instanceof S){this.aSorters=[this.aSorters]}else if(!q.isArray(this.aSorters)){this.aSorters=[]}this.aFilters=[];if(!q.isArray(f)&&f instanceof F){f=[f]}else if(!q.isArray(f)){f=[]}this.aApplicationFilters=f;this.bUseExtendedChangeDetection=false},metadata:{"abstract":true,publicMethods:["getContexts","sort","attachSort","detachSort","filter","attachFilter","detachFilter","getDistinctValues","isGrouped","getLength","isLengthFinal"]}});L.prototype.getLength=function(){return 0};L.prototype.isLengthFinal=function(){return true};L.prototype.getDistinctValues=function(p){return null};L.prototype.attachSort=function(f,l){this.attachEvent("sort",f,l)};L.prototype.detachSort=function(f,l){this.detachEvent("sort",f,l)};L.prototype._fireSort=function(a){this.fireEvent("sort",a)};L.prototype.attachFilter=function(f,l){this.attachEvent("filter",f,l)};L.prototype.detachFilter=function(f,l){this.detachEvent("filter",f,l)};L.prototype._fireFilter=function(a){this.fireEvent("filter",a)};L.prototype.isGrouped=function(){return this.aSorters.length>0&&!!this.aSorters[0].fnGroup};L.prototype.enableExtendedChangeDetection=function(){this.bUseExtendedChangeDetection=true;if(this.update){this.update()}};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Model')){jQuery.sap.declare('sap.ui.model.Model');sap.ui.define("sap/ui/model/Model",['jquery.sap.global','sap/ui/base/EventProvider','./BindingMode','./Context'],function(q,E,B,C){"use strict";var M=E.extend("sap.ui.model.Model",{constructor:function(){E.apply(this,arguments);this.oData={};this.bDestroyed=false;this.aBindings=[];this.mContexts={};this.iSizeLimit=100;this.sDefaultBindingMode=B.TwoWay;this.mSupportedBindingModes={"OneWay":true,"TwoWay":true,"OneTime":true};this.bLegacySyntax=false},metadata:{"abstract":true,publicMethods:["bindProperty","bindList","bindTree","bindContext","createBindingContext","destroyBindingContext","getProperty","getDefaultBindingMode","setDefaultBindingMode","isBindingModeSupported","attachParseError","detachParseError","attachRequestCompleted","detachRequestCompleted","attachRequestFailed","detachRequestFailed","attachRequestSent","detachRequestSent","setSizeLimit","refresh","isList","getObject"]}});M.M_EVENTS={ParseError:"parseError",RequestFailed:"requestFailed",RequestSent:"requestSent",RequestCompleted:"requestCompleted"};M.prototype.attachRequestFailed=function(d,f,l){this.attachEvent("requestFailed",d,f,l);return this};M.prototype.detachRequestFailed=function(f,l){this.detachEvent("requestFailed",f,l);return this};M.prototype.fireRequestFailed=function(a){this.fireEvent("requestFailed",a);return this};M.prototype.attachParseError=function(d,f,l){this.attachEvent("parseError",d,f,l);return this};M.prototype.detachParseError=function(f,l){this.detachEvent("parseError",f,l);return this};M.prototype.fireParseError=function(a){this.fireEvent("parseError",a);return this};M.prototype.attachRequestSent=function(d,f,l){this.attachEvent("requestSent",d,f,l);return this};M.prototype.detachRequestSent=function(f,l){this.detachEvent("requestSent",f,l);return this};M.prototype.fireRequestSent=function(a){this.fireEvent("requestSent",a);return this};M.prototype.attachRequestCompleted=function(d,f,l){this.attachEvent("requestCompleted",d,f,l);return this};M.prototype.detachRequestCompleted=function(f,l){this.detachEvent("requestCompleted",f,l);return this};M.prototype.fireRequestCompleted=function(a){this.fireEvent("requestCompleted",a);return this};M.prototype.getObject=function(p,c){return this.getProperty(p,c)};M.prototype.getContext=function(p){if(!q.sap.startsWith(p,"/")){throw new Error("Path "+p+" must start with a / ")}var c=this.mContexts[p];if(!c){c=new C(this,p);this.mContexts[p]=c}return c};M.prototype.resolve=function(p,c){var i=!q.sap.startsWith(p,"/"),r=p,s;if(i){if(c){s=c.getPath();r=s+(q.sap.endsWith(s,"/")?"":"/")+p}else{r=this.isLegacySyntax()?"/"+p:undefined}}if(r&&r!=="/"&&q.sap.endsWith(r,"/")){r=r.substr(0,r.length-1)}return r};M.prototype.addBinding=function(b){this.aBindings.push(b)};M.prototype.removeBinding=function(b){for(var i=0;i<this.aBindings.length;i++){if(this.aBindings[i]==b){this.aBindings.splice(i,1);break}}};M.prototype.getDefaultBindingMode=function(){return this.sDefaultBindingMode};M.prototype.setDefaultBindingMode=function(m){if(this.isBindingModeSupported(m)){this.sDefaultBindingMode=m}else{throw new Error("Binding mode "+m+" is not supported by this model.")}};M.prototype.isBindingModeSupported=function(m){return(m in this.mSupportedBindingModes)};M.prototype.setLegacySyntax=function(l){this.bLegacySyntax=l};M.prototype.isLegacySyntax=function(){return this.bLegacySyntax};M.prototype.setSizeLimit=function(s){this.iSizeLimit=s};M.prototype.getInterface=function(){return this};M.prototype.refresh=function(f){this.checkUpdate(f)};M.prototype.checkUpdate=function(f){var b=this.aBindings.slice(0);q.each(b,function(i,o){o.checkUpdate(f)})};M.prototype.destroy=function(){this.oData={};this.aBindings=[];this.mContexts={};this.bDestroyed=true;E.prototype.destroy.apply(this,arguments)};return M},true)};if(!jQuery.sap.isDeclared('sap.ui.model.SelectionModel')){jQuery.sap.declare('sap.ui.model.SelectionModel');sap.ui.define("sap/ui/model/SelectionModel",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var S=E.extend("sap.ui.model.SelectionModel",{constructor:function(s){E.apply(this);this.iSelectionMode=s||S.SINGLE_SELECTION;this.aSelectedIndices=[];this.iLeadIndex=-1;this.fnSort=function(a,b){return a-b};this.fnSortReverse=function(a,b){return b-a}}});S.SINGLE_SELECTION=0;S.MULTI_SELECTION=1;S.prototype.getSelectionMode=function(){return this.iSelectionMode};S.prototype.setSelectionMode=function(s){this.iSelectionMode=s||S.SINGLE_SELECTION};S.prototype.isSelectedIndex=function(i){return q.inArray(i,this.aSelectedIndices)!==-1};S.prototype.getLeadSelectedIndex=function(){return this.iLeadIndex};S.prototype.setLeadSelectedIndex=function(l){this.setSelectionInterval(l,l);return this};S.prototype.getMinSelectionIndex=function(){if(this.aSelectedIndices.length>0){var i=this.aSelectedIndices.sort(this.fnSort);return i[0]}else{return-1}};S.prototype.getMaxSelectionIndex=function(){if(this.aSelectedIndices.length>0){var i=this.aSelectedIndices.sort(this.fnSortReverse);return i[0]}else{return-1}};S.prototype.getSelectedIndices=function(){var i=this.aSelectedIndices.sort(this.fnSort);return i};S.prototype.setSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){f=t}var F=Math.min(f,t);var T=Math.max(f,t);var c=this.aSelectedIndices.slice();var s=[];for(var i=F;i<=T;i++){s.push(i);var p=q.inArray(i,c);if(p===-1){c.push(i)}else{c.splice(p,1)}}this._update(s,t,c);return this};S.prototype.addSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){return this.setSelectionInterval(f,t)}var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var s=this.aSelectedIndices;for(var i=F;i<=T;i++){if(q.inArray(i,s)===-1){s.push(i);c.push(i)}}this._update(s,T,c);return this};S.prototype.moveSelectionInterval=function(s,m){var c=[];var a=this.aSelectedIndices;var l=this.iLeadIndex;for(var i=0;i<a.length;i++){var I=a[i];if(I>=s){c.push(a[i]);a[i]+=m;c.push(a[i]);if(I===this.iLeadIndex){l+=m}}}this._update(a,l,c);return this};S.prototype.removeSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){f=t}var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var s=this.aSelectedIndices;var l=this.iLeadIndex;for(var i=F;i<=T;i++){var I=q.inArray(i,s);if(I>-1){s.splice(I,1);c.push(i)}if(i===this.iLeadIndex){l=-1}}this._update(s,l,c);return this};S.prototype.sliceSelectionInterval=function(f,t){var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var r=[];var o=this.aSelectedIndices.slice(0);var s=this.aSelectedIndices;var l=this.iLeadIndex;var R=T-F+1;for(var I=T;I>=F;I--){var a=q.inArray(I,s);if(a>-1){s.splice(a,1);r.push(I)}if(I===this.iLeadIndex){l=-1}}for(var I=0;I<s.length;I++){var O=s[I];if(O>=F){var n=s[I]-R;if(O===l){l=n}s[I]=n;if(q.inArray(n,o)===-1){c.push(n)}}}for(var i=0;i<r.length;i++){var I=o[o.length-1-i];if(q.inArray(I,c)===-1){c.push(I)}}for(var i=0;i<r.length;i++){if(q.inArray(r[i],s)===-1&&q.inArray(r[i],c)===-1){c.push(r[i])}}this._update(s,l,c);return this};S.prototype.clearSelection=function(){if(this.aSelectedIndices.length>0||this.iLeadIndex!==-1){this._update([],-1,this.aSelectedIndices.slice())}return this};S.prototype.attachSelectionChanged=function(d,f,l){this.attachEvent("selectionChanged",d,f,l);return this};S.prototype.detachSelectionChanged=function(f,l){this.detachEvent("selectionChanged",f,l);return this};S.prototype.fireSelectionChanged=function(a){this.fireEvent("selectionChanged",a);return this};S.prototype._update=function(s,l,c){var p={rowIndices:c&&c.sort(this.fnSort)};this.aSelectedIndices=s;p.oldIndex=this.iLeadIndex;if(this.iLeadIndex!==l){this.iLeadIndex=l;p.leadIndex=this.iLeadIndex}if(c.length>0||typeof p.leadIndex!=="undefined"){this.fireSelectionChanged(p)}};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.SimpleType')){jQuery.sap.declare('sap.ui.model.SimpleType');sap.ui.define("sap/ui/model/SimpleType",['jquery.sap.global','./FormatException','./ParseException','./Type','./ValidateException'],function(q,F,P,T,V){"use strict";var S=T.extend("sap.ui.model.SimpleType",{constructor:function(f,c){T.apply(this,arguments);this.setFormatOptions(f||{});this.setConstraints(c||{});this.sName="SimpleType"},metadata:{"abstract":true,publicMethods:["setConstraints","setFormatOptions","formatValue","parseValue","validateValue"]}});S.prototype.setConstraints=function(c){this.oConstraints=c};S.prototype.setFormatOptions=function(f){this.oFormatOptions=f};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.TreeBinding')){jQuery.sap.declare('sap.ui.model.TreeBinding');sap.ui.define("sap/ui/model/TreeBinding",['jquery.sap.global','./Binding'],function(q,B){"use strict";var T=B.extend("sap.ui.model.TreeBinding",{constructor:function(m,p,c,f,P){B.call(this,m,p,c,P);this.aFilters=f;this.bDisplayRootNode=P&&P.displayRootNode===true},metadata:{"abstract":true,publicMethods:["getRootContexts","getNodeContexts","hasChildren","filter"]}});T.prototype.attachFilter=function(f,l){this.attachEvent("_filter",f,l)};T.prototype.detachFilter=function(f,l){this.detachEvent("_filter",f,l)};T.prototype._fireFilter=function(a){this.fireEvent("_filter",a)};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.AnalyticalBinding')){jQuery.sap.declare('sap.ui.model.analytics.AnalyticalBinding');sap.ui.define("sap/ui/model/analytics/AnalyticalBinding",['jquery.sap.global','sap/ui/model/TreeBinding','sap/ui/model/ChangeReason','sap/ui/model/Sorter','sap/ui/model/FilterOperator','./odata4analytics'],function(q,T,C,S,F,o){"use strict";var A=T.extend("sap.ui.model.analytics.AnalyticalBinding",{constructor:function(m,p,c,s,f,P){T.call(this,m,p,c,f,P);this.sEntitySetName=(P&&P.entitySet)?P.entitySet:undefined;this.bArtificalRootContext=false;this.aApplicationFilter=this._convertDeprecatedFilterObjects(f);this.aControlFilter=undefined;this.aSorter=s?s:[];this.aMaxAggregationLevel=[];this.aAggregationLevel=[];this.oPendingRequests={};this.oPendingRequestHandle=[];this.oGroupedRequests={};this.bUseBatchRequests=(P&&P.useBatchRequests===true)?true:false;this.bProvideTotalSize=(P&&P.provideTotalResultSize===false)?false:true;this.bProvideGrandTotals=(P&&P.provideGrandTotals===false)?false:true;this.bUseAcceleratedAutoExpand=true;this.aRequestQueue=[];this.iTotalSize=-1;this.mKey={};this.mFinalLength={};this.mLength={};this.bNeedsUpdate=false;this.mOwnKey={};this.oAnalyticalQueryResult=this.oModel.getAnalyticalExtensions().findQueryResultByName(this._getEntitySet());this.aAnalyticalInfo=[];this.mAnalyticalInfoByProperty={};this.updateAnalyticalInfo(P==undefined?[]:P.analyticalInfo)}});A.prototype.getRootContexts=function(p){var a=(p&&p.numberOfExpandedLevels?p.numberOfExpandedLevels+1:1);var r=null;var R=this._getRequestId(A._requestType.groupMembersQuery,{groupId:null});if(this.bArtificalRootContext&&!this._cleanupGroupingForCompletedRequest(R)){return null}if(a<=1){r=this._getContextsForParentContext(null);if(a==1){this._considerRequestGrouping([R,this._getRequestId(A._requestType.groupMembersQuery,{groupId:"/"})]);this.getNodeContexts(this.getModel().getContext("/"),{startIndex:p.startIndex,length:p.length,threshold:p.threshold,level:0,numberOfExpandedLevels:0})}}else{r=this._getContextsForParentContext(null);var b=this._prepareGroupMembersAutoExpansionRequestIds("/",p.numberOfExpandedLevels);b.push(R);this._considerRequestGrouping(b);this.getNodeContexts(this.getModel().getContext("/"),{startIndex:p.startIndex,length:p.length,threshold:p.threshold,level:0,numberOfExpandedLevels:p.numberOfExpandedLevels})}if(r.length>1)q.sap.log.fatal("assertion failed: grand total represented by a single entry");return r};A.prototype.getNodeContexts=function(c,p){var s,l,t,L,n;if(typeof p=="object"){s=p.startIndex;l=p.length;t=p.threshold;L=p.level;n=p.numberOfExpandedLevels}else{s=arguments[1];l=arguments[2];t=arguments[3];L=arguments[4];n=arguments[5]}var a=this._getContextsForParentContext(c,s,l,t,L,n);return a};A.prototype.ContextsAvailabilityStatus={ALL:2,SOME:1,NONE:0};A.prototype.hasAvailableNodeContexts=function(c,l){var g=this._getGroupIdFromContext(c,l);if(this.mKey[g]!=undefined)if(this.mFinalLength[g]==true)return A.prototype.ContextsAvailabilityStatus.ALL;else return A.prototype.ContextsAvailabilityStatus.SOME;else return A.prototype.ContextsAvailabilityStatus.NONE};A.prototype.getGroupSize=function(c,l){if(c===undefined)return 0;var g=this._getGroupIdFromContext(c,l);return this.mFinalLength[g]?this.mLength[g]:-1};A.prototype.getTotalSize=function(){if(!this.bProvideTotalSize)q.sap.log.fatal("total size of result explicitly turned off, but getter invoked");return this.iTotalSize};A.prototype.hasChildren=function(c,p){if(c===undefined)return false;if(c==null)return true;var i=p.level;if(i==0)return true;if(this.aAggregationLevel.length<i)return false;return this.aMaxAggregationLevel.indexOf(this.aAggregationLevel[i-1])<this.aMaxAggregationLevel.length-1};A.prototype.hasMeasures=function(){var h=false;for(var p in this.oMeasureDetailsSet){h=true;break}return h};A.prototype.getDimensionDetails=function(){return this.oDimensionDetailsSet};A.prototype.getMeasureDetails=function(){return this.oMeasureDetailsSet};A.prototype.hasGrandTotalDisplayed=function(){return this.bProvideGrandTotals};A.prototype.getProperty=function(p){return this.oAnalyticalQueryResult.getEntityType().findPropertyByName(p)};A.prototype.getFilterablePropertyNames=function(){return this.oAnalyticalQueryResult.getEntityType().getFilterablePropertyNames()};A.prototype.getSortablePropertyNames=function(){return this.oAnalyticalQueryResult.getEntityType().getSortablePropertyNames()};A.prototype.getPropertyLabel=function(p){return this.oAnalyticalQueryResult.getEntityType().getLabelOfProperty(p)};A.prototype.getPropertyHeading=function(p){return this.oAnalyticalQueryResult.getEntityType().getHeadingOfProperty(p)};A.prototype.getPropertyQuickInfo=function(p){return this.oAnalyticalQueryResult.getEntityType().getQuickInfoOfProperty(p)};A.prototype.isMeasure=function(p){return q.inArray(p,this.aMeasureName)!==-1};A.prototype.filter=function(f,s){f=this._convertDeprecatedFilterObjects(f);if(s==sap.ui.model.FilterType.Application)this.aApplicationFilter=f;else this.aControlFilter=f;this.iTotalSize=-1;this._abortAllPendingRequests();this.resetData();this._fireRefresh({reason:C.Filter});return this};A.prototype.sort=function(s){if(s instanceof S){s=[s]}this.aSorter=s?s:[];this._abortAllPendingRequests();this._fireRefresh({reason:C.Sort});return this};A.prototype.getGroupName=function(c,l){if(c===undefined)return"";var g=this.aAggregationLevel[l-1],d=this.oAnalyticalQueryResult.findDimensionByPropertyName(g),v=this.mAnalyticalInfoByProperty[g].formatter,p=c.getProperty(g),t,f,G;if(d&&this.oDimensionDetailsSet[g].textPropertyName){t=d.getTextProperty()}var s,a,b,a;if(t){s=d.getTextProperty().name;b=this.mAnalyticalInfoByProperty[s].formatter;a=c.getProperty(s)}if(!t){f=v?v(p):p;G=((d.getLabelText())?d.getLabelText()+': ':'')+f}else{f=v?v(p,a):p;G=((d.getLabelText())?d.getLabelText()+': ':'')+f;var e=b?b(a,p):a;if(e){G+=' - '+e}}return G};A.prototype.updateAnalyticalInfo=function(c){var p=this.oDimensionDetailsSet;this.mAnalyticalInfoByProperty=new Object();this.aMaxAggregationLevel=new Array();this.aAggregationLevel=new Array();this.aMeasureName=new Array();this.iAnalyticalInfoVersionNumber=(this.iAnalyticalInfoVersionNumber===undefined?1:(this.iAnalyticalInfoVersionNumber>999?1:this.iAnalyticalInfoVersionNumber+1));this.oMeasureDetailsSet=new Object();this.oDimensionDetailsSet=new Object();for(var i=0;i<c.length;i++){var d=this.oAnalyticalQueryResult.findDimensionByPropertyName(c[i].name);if(d&&(c[i].inResult==true||c[i].visible==true)){c[i].dimensionPropertyName=d.getName();var D=this.oDimensionDetailsSet[d.getName()];if(!D){D=new Object();D.name=d.getName();D.aAttributeName=new Array();D.grouped=false;this.oDimensionDetailsSet[d.getName()]=D;this.aMaxAggregationLevel.push(D.name);if(c[i].grouped==true)this.aAggregationLevel.push(D.name)}if(c[i].grouped==true){if(this.getSortablePropertyNames().indexOf(d.getName())==-1){q.sap.log.fatal("property "+d.getName()+" must be sortable in order to be used as grouped dimension")}D.grouped=true}if(d.getName()==c[i].name){D.keyPropertyName=c[i].name}var t=d.getTextProperty();if(t&&t.name==c[i].name){D.textPropertyName=c[i].name}if(d.findAttributeByName(c[i].name)){D.aAttributeName.push(c[i].name)}D.analyticalInfo=c[i]}var m=this.oAnalyticalQueryResult.findMeasureByPropertyName(c[i].name);if(m&&(c[i].inResult==true||c[i].visible==true)){c[i].measurePropertyName=m.getName();var M=this.oMeasureDetailsSet[m.getName()];if(!M){M=new Object();M.name=m.getName();this.oMeasureDetailsSet[m.getName()]=M;this.aMeasureName.push(M.name)}if(m.getRawValueProperty().name==c[i].name){M.rawValuePropertyName=c[i].name}var f=m.getFormattedValueProperty();if(f&&f.name==c[i].name){M.formattedValuePropertyName=c[i].name}M.analyticalInfo=c[i]}this.mAnalyticalInfoByProperty[c[i].name]=c[i]}var M;for(var a in this.oMeasureDetailsSet){var u=this.oAnalyticalQueryResult.findMeasureByName(a).getUnitProperty();if(u)this.oMeasureDetailsSet[a].unitPropertyName=u.name}var b=function(e){var n=[];for(var g in e)n.push(g.name);return n.sort().join(";")};if(b(p)!=b(this.oDimensionDetailsSet))this.iTotalSize=-1;this.aAnalyticalInfo=c;this.mFinalLength={};this.mLength={};this.mKey={};this.mOwnKey={};this.mContexts={};this.bNeedsUpdate=false};A.prototype.getAnalyticalInfoForColumn=function(c){return this.mAnalyticalInfoByProperty[c]};A.prototype.loadGroups=function(g){var G=new Array();for(var s in g){G.push(s);delete this.mKey[s];delete this.mLength[s];delete this.mFinalLength[s];var a=g[s];for(var i=0;i<a.length;i++){var b=a[i];this._getContextsForParentGroupId(s,b.startIndex,b.length,b.threshold)}var r=new Array();for(var i=-1,s;s=G[++i];){r.push(this._getRequestId(A._requestType.groupMembersQuery,{groupId:s}))}this._considerRequestGrouping(r)}};A.prototype.getAnalyticalQueryResult=function(){return this.oAnalyticalQueryResult};A._requestType={groupMembersQuery:1,totalSizeQuery:2,groupMembersAutoExpansionQuery:3,levelMembersQuery:4};A.prototype._getContextsForParentContext=function(p,s,l,t,L,n){if(p===undefined)return[];if(p&&p.getPath()=="/artificialRootContent"){p=this.getModel().getContext("/")}var P=this._getGroupIdFromContext(p,L);return this._getContextsForParentGroupId(P,s,l,t,n)};A.prototype._getContextsForParentGroupId=function(p,s,l,t,n){if(p===undefined)return[];if(!s)s=0;if(!l)l=this.oModel.iSizeLimit;if(this.mFinalLength[p]&&this.mLength[p]<l)l=this.mLength[p];if(!t)t=0;if(!n)n=0;if(p==null){if(n>0){q.sap.log.fatal("invalid request to determine nodes of root context");return null}}else{if(this._getGroupIdLevel(p)>=this.aAggregationLevel.length&&n>0){q.sap.log.fatal("invalid request to determine nodes of context with group ID "+p);return null}if(this._getGroupIdLevel(p)+n>this.aAggregationLevel.length){n=this.aAggregationLevel.length-this._getGroupIdLevel(p)-1}}var c,L,g,a,G,m;var b=n>0&&p!=null;if(b){var M=this._getGroupIdLevel(p);var d=M+n;G=this._calculateRequiredGroupExpansion(p,d,s,l+t);var D=G.groupId_Missing==null;D=D||G.groupId_Missing.length<p.length||G.groupId_Missing.substring(0,p.length)!=p;if(D){q.sap.log.debug("auto expand: data available for group ID "+p);c=this._getLoadedContextsForGroup(p,s,l)}else{m=l+t}L=!D}else{c=this._getLoadedContextsForGroup(p,s,l);g=this._calculateRequiredGroupSection(p,s,l,t,c);var P=g.length>0&&l<g.length;L=(c.length!=l&&!(this.mFinalLength[p]&&c.length>=this.mLength[p]-s))||P}if(!L)this._cleanupGroupingForCompletedRequest(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(this.oModel.getServiceMetadata()){if(L){var N=this.bProvideTotalSize&&this.iTotalSize==-1&&!this._isRequestPending(this._getRequestId(A._requestType.totalSizeQuery));var e=true;var f;if(this.bUseBatchRequests){if(b){f=this._prepareGroupMembersAutoExpansionRequestIds(p,n);for(var i=-1,r;r=f[++i];){if(this._isRequestPending(r)){e=false;break}}if(e){this.aRequestQueue.push([A._requestType.groupMembersAutoExpansionQuery,p,G,m,n])}}else{e=!this._isRequestPending(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(e){this.aRequestQueue.push([A._requestType.groupMembersQuery,p,g.startIndex,g.length]);f=[this._getRequestId(A._requestType.groupMembersQuery,{groupId:p})]}}if(e&&N){f.push(this._getRequestId(A._requestType.totalSizeQuery));this._considerRequestGrouping(f);this.aRequestQueue.push([A._requestType.totalSizeQuery])}if(e){if(p==null){this._abortAllPendingRequests()}q.sap.delayedCall(0,this,A.prototype._processRequestQueue)}}else{var h;if(b){f=this._prepareGroupMembersAutoExpansionRequestIds(p,n);for(var i=-1,r;r=f[++i];){if(this._isRequestPending(r)){e=false;break}}if(e){h=this._prepareGroupMembersAutoExpansionQueryRequest(A._requestType.groupMembersAutoExpansionQuery,p,G,m,n)}}else{e=!this._isRequestPending(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(e){h=this._prepareGroupMembersQueryRequest(A._requestType.groupMembersQuery,p,g.startIndex,g.length);f=[h.sRequestId]}}if(e){if(p==null){this._abortAllPendingRequests()}this._executeQueryRequest(h);if(N&&!h.bIsFlatListRequest){f.push(this._getRequestId(A._requestType.totalSizeQuery));this._considerRequestGrouping(f);this._executeQueryRequest(this._prepareTotalSizeQueryRequest(A._requestType.totalSizeQuery))}}}}}return c};A.prototype._processRequestQueue=function(){if(this.aRequestQueue.length==0)return;var r=[];var f=false;for(var i=-1,R;R=this.aRequestQueue[++i];){if(R[0]==A._requestType.groupMembersQuery){var a=A.prototype._prepareGroupMembersQueryRequest.apply(this,R);f=f||a.bIsFlatListRequest;r.push(a)}}for(var i=-1,R;R=this.aRequestQueue[++i];){var a=null;switch(R[0]){case A._requestType.groupMembersQuery:continue;case A._requestType.totalSizeQuery:if(!f){a=A.prototype._prepareTotalSizeQueryRequest.apply(this,R);r.push(a)}break;case A._requestType.groupMembersAutoExpansionQuery:a=A.prototype._prepareGroupMembersAutoExpansionQueryRequest.apply(this,R);for(var j=-1,l;l=a.aGroupMembersAutoExpansionRequestDetails[++j];){r.push(l)}break;default:q.sap.log.fatal("unhandled request type "+this.aRequestQueue[i][0]);continue}}if(r.length>1)this._executeBatchRequest(r);else this._executeQueryRequest(r[0]);this.aRequestQueue=[]};A.prototype._prepareGroupMembersQueryRequest=function(r,g,s,L){var G=[];var c=this.iAnalyticalInfoVersionNumber;var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());a.getSortExpression().clear();var b=0,d=-1;if(g){G=this._getGroupIdComponents(g);b=d=G.length;var u=0;for(var i=0,e=0;i<b;e++){if(this.oDimensionDetailsSet[this.aMaxAggregationLevel[e]].grouped==false)++u;else++i}b=d=b+u;if(this.aMaxAggregationLevel.length>0){while(this.oDimensionDetailsSet[this.aMaxAggregationLevel[d]].grouped==false)if(++d==this.aMaxAggregationLevel.length)break}}var I=d>=this.aMaxAggregationLevel.length-1;var f=this.aMaxAggregationLevel.slice(0,d+1);a.setAggregationLevel(f);for(var i=0;i<f.length;i++){var D=this.oDimensionDetailsSet[f[i]];var h=(D.keyPropertyName!=undefined);var j=(D.textPropertyName!=undefined);a.includeDimensionKeyTextAttributes(D.name,true,j,D.aAttributeName);if(D.grouped){a.getSortExpression().addSorter(f[i],o.SortOrder.Ascending)}}var k=a.getFilterExpression();k.clear();if(this.aApplicationFilter)k.addUI5FilterConditions(this.aApplicationFilter);if(this.aControlFilter)k.addUI5FilterConditions(this.aControlFilter);if(b>=1){for(var i=0,l=G.length;i<l;i++){k.addCondition(this.aAggregationLevel[i],F.EQ,G[i])}}var m;var n;var p;var M;var t=new Array();if(g!=null||this.bProvideGrandTotals){a.setMeasures(this.aMeasureName);for(var v in this.oMeasureDetailsSet){M=this.oMeasureDetailsSet[v];if(!I&&this.mAnalyticalInfoByProperty[v].total==false){m=false;n=false;p=false}else{m=(M.rawValuePropertyName!=undefined);n=(M.formattedValuePropertyName!=undefined);p=(M.unitPropertyName!=undefined);if(p){if(t.indexOf(M.unitPropertyName)==-1){t.push(M.unitPropertyName)}}}a.includeMeasureRawFormattedValueUnit(M.name,m,n,p)}for(var i in f){var w;if((w=t.indexOf(f[i]))!=-1)t.splice(w,1)}}var x=a.getSortExpression();for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i])x.addSorter(this.aSorter[i].sPath,this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}if(L==0)q.sap.log.fatal("unhandled case: load 0 entities of sub group");a.setResultPageBoundaries(s+1,s+L);a.setRequestOptions(null,!this.mFinalLength[g]);return{iRequestType:r,sRequestId:this._getRequestId(A._requestType.groupMembersQuery,{groupId:g}),oAnalyticalQueryRequest:a,sGroupId:g,aSelectedUnitPropertyName:t,aAggregationLevel:f,bIsFlatListRequest:I&&b==0,bIsLeafGroupsRequest:I,iStartIndex:s,iLength:L}};A.prototype._prepareTotalSizeQueryRequest=function(r){var c=this.iAnalyticalInfoVersionNumber;var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());a.setAggregationLevel(this.aMaxAggregationLevel);a.setMeasures([]);var f=a.getFilterExpression();f.clear();if(this.aApplicationFilter)f.addUI5FilterConditions(this.aApplicationFilter);if(this.aControlFilter)f.addUI5FilterConditions(this.aControlFilter);a.setResultPageBoundaries(1,1);a.setRequestOptions(null,true);return{iRequestType:r,sRequestId:this._getRequestId(A._requestType.totalSizeQuery),oAnalyticalQueryRequest:a}};A.prototype._prepareGroupMembersAutoExpansionQueryRequest=function(r,g,G,l,n){var p=function(G,c){if(G.groupId_Missing==null){q.sap.log.fatal("missing group Id not present");return f}var d=t._getGroupIdComponents(G.groupId_Missing);var e=d.length;if(e>c){q.sap.log.fatal("the given group ID is too deep for requested level for auto expansion");return f}var z=[];for(var i=0;i<e;i++){var B=t.aAggregationLevel[i];var V=d[i];var y=t._getFilterOperatorMatchingPropertySortOrder(B);z[i]=new sap.ui.model.Filter(B,y,V)}var D=null;if(G.startIndex_Missing>0){var E=t.mKey[G.groupId_Missing][G.startIndex_Missing-1];var H=t.oModel.getObject("/"+E);var I=t.aAggregationLevel[e];var J=H[I];D=new sap.ui.model.Filter(I,t._getFilterOperatorMatchingPropertySortOrder(I,false),J)}var f=[];for(var L=0;L<c;L++){var K=[];var N=Math.min(e,L+1);for(var O=0;O<N;O++){var Q=[];var U=Math.min(e,O+1);var W=G.startIndex_Missing>0;for(var X=0;X<U;X++){var Y=new sap.ui.model.Filter("x",sap.ui.model.FilterOperator.EQ,"x");Y=q.extend(true,Y,z[X]);if(U>1&&X<U-1)Y.sOperator=sap.ui.model.FilterOperator.EQ;if(X==e-1&&L>e-1&&!W){if(Y.sOperator==sap.ui.model.FilterOperator.GT)Y.sOperator=sap.ui.model.FilterOperator.GE;else Y.sOperator=sap.ui.model.FilterOperator.LE}Q.push(Y)}if(Q.length>0){K.push(new sap.ui.model.Filter(Q,true));if(L>e-1&&O==e-1&&W){var Z=[];for(var i=0;i<Q.length;i++){var $=new sap.ui.model.Filter("x",sap.ui.model.FilterOperator.EQ,"x");$=q.extend(true,$,Q[i]);Z.push($)}Z[e-1].sOperator=sap.ui.model.FilterOperator.EQ;Z.push(D);K.push(new sap.ui.model.Filter(Z,true));break}}}if(K.length>0)f[L]=new sap.ui.model.Filter(K,false);else f[L]=null}return f};var a=function(r,g,L,z,s,l,B,U){var D=[];var E=t.iAnalyticalInfoVersionNumber;var H=new o.QueryResultRequest(t.oAnalyticalQueryResult);H.setResourcePath(t._getResourcePath());H.getSortExpression().clear();var I=0,J=-1;I=J=L-1;var K=0;for(var i=0,N=0;i<I;N++){if(t.oDimensionDetailsSet[t.aMaxAggregationLevel[N]].grouped==false){++K}else{++i}}I=J=I+K;if(t.aMaxAggregationLevel.length>0){while(t.oDimensionDetailsSet[t.aMaxAggregationLevel[J]].grouped==false){if(++J==t.aMaxAggregationLevel.length){break}}}var O=J>=t.aMaxAggregationLevel.length-1;var Q=t.aMaxAggregationLevel.slice(0,J+1);H.setAggregationLevel(Q);for(var i=0;i<Q.length;i++){var V=t.oDimensionDetailsSet[Q[i]];var W=(V.keyPropertyName!=undefined);var X=(V.textPropertyName!=undefined);H.includeDimensionKeyTextAttributes(V.name,true,X,V.aAttributeName);if(V.grouped){H.getSortExpression().addSorter(Q[i],o.SortOrder.Ascending)}}var Y=H.getFilterExpression();Y.clear();if(t.aApplicationFilter)Y.addUI5FilterConditions(t.aApplicationFilter);if(t.aControlFilter)Y.addUI5FilterConditions(t.aControlFilter);Y.addUI5FilterConditions(z);var Z;var $;var _;var a1;var b1=new Array();H.setMeasures(t.aMeasureName);for(var c1 in t.oMeasureDetailsSet){a1=t.oMeasureDetailsSet[c1];if(!O&&t.mAnalyticalInfoByProperty[c1].total==false){Z=false;$=false;_=false}else{Z=(a1.rawValuePropertyName!=undefined);$=(a1.formattedValuePropertyName!=undefined);_=(a1.unitPropertyName!=undefined);if(_){if(b1.indexOf(a1.unitPropertyName)==-1){b1.push(a1.unitPropertyName)}}}H.includeMeasureRawFormattedValueUnit(a1.name,Z,$,_)}for(var i in Q){var d1;if((d1=b1.indexOf(Q[i]))!=-1)b1.splice(d1,1)}var e1=H.getSortExpression();for(var i=0;i<t.aSorter.length;i++){if(t.aSorter[i])e1.addSorter(t.aSorter[i].sPath,t.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}if(l==0)q.sap.log.fatal("unhandled case: load 0 entities of sub group");var f1=s;if(!U)f1=0;H.setResultPageBoundaries(f1+1,f1+l);return{iRequestType:r,sRequestId:t._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}),oAnalyticalQueryRequest:H,iLevel:L,aSelectedUnitPropertyName:b1,aAggregationLevel:Q,bIsFlatListRequest:O,bIsLeafGroupsRequest:O,iStartIndex:s,iLength:l,bAvoidLengthUpdate:B}};var t=this;var b=[];var R=[];if(G&&this.bUseAcceleratedAutoExpand){var c=this._getGroupIdLevel(g)+n+1;var d=t._getGroupIdComponents(G.groupId_Missing);var e=d.length;var f=p(G,c);for(var L=1;L<=c;L++){var s;if(L>=e+2)s=0;else if(L==e+1)s=G.startIndex_Missing;else if(e>0){var h;if(L==e)h=G.groupId_Missing;else h=this._getGroupIdAncestors(G.groupId_Missing,-(e-L))[0];var j=this._getGroupIdAncestors(G.groupId_Missing,-(e-L+1))[0];if(!j)q.sap.log.fatal("failed to determine group id at parent level; group ID = "+g+", level = "+L);var s=this.mKey[j].indexOf(this.mOwnKey[h]);if(s==-1)q.sap.log.fatal("failed to determine position of value "+h+" in group "+j);s++}var k=l>L?Math.ceil((l-L)/(c-L+1)):l;var m=f[L-1]?[f[L-1]]:[];var u=a(A._requestType.levelMembersQuery,g,L,m,s,k,false,false);b.push(u);R.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}))}}else{var M=this._getGroupIdLevel(g)+1;var c=M+n;var m=[];var v=this._getGroupIdComponents(g);for(var i=0;i<v.length;i++)m.push(new sap.ui.model.Filter(this.aAggregationLevel[i],sap.ui.model.FilterOperator.EQ,v[i]));var w=false;if(G){var P=this.aAggregationLevel[v.length];var x=this._getGroupIdComponents(G.groupId_Missing)[v.length];if(x){var y=this._getFilterOperatorMatchingPropertySortOrder(P,true);m.push(new sap.ui.model.Filter(P,y,x));w=true}}for(var L=M;L<=c;L++){var k=l>L?Math.ceil((l-L)/(c-L+1)):l;var u=a(A._requestType.levelMembersQuery,g,L,m,0,k,L==M?w:false,true);b.push(u);R.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}))}}return{iRequestType:r,aRequestId:R,aGroupMembersAutoExpansionRequestDetails:b,sGroupId:g,iLength:l}};A.prototype._prepareGroupMembersAutoExpansionRequestIds=function(g,n){var m=this._getGroupIdLevel(g)+1;var a=m+n;var r=[];for(var l=m;l<=a;l++){r.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:l}))}return r};A.prototype._getQueryODataRequestOptions=function(a){var s=a.getURIQueryOptionValue("$select");var f=a.getURIQueryOptionValue("$filter");var O=a.getURIQueryOptionValue("$orderby");var b=a.getURIQueryOptionValue("$skip");var t=a.getURIQueryOptionValue("$top");var i=a.getURIQueryOptionValue("$inlinecount");if(this.mParameters["filter"])f+="and ("+this.mParameters["filter"]+")";var p=[];if(s)p.push("$select="+s);if(f)p.push("$filter="+f);if(O)p.push("$orderby="+O);if(b)p.push("$skip="+b);if(t)p.push("$top="+t);if(i)p.push("$inlinecount="+i);return p};A.prototype._executeBatchRequest=function(r){var c=this.iAnalyticalInfoVersionNumber;var t=this;var b=[],e=[];for(var i=-1,R;R=r[++i];){var a=R.oAnalyticalQueryRequest,g=R.sGroupId;if(a.getURIQueryOptionValue("$select")==null){this.fireDataRequested();var E=this.getModel().getContext("/artificialRootContent");g=null;this.mLength[g]=1;this.mFinalLength[g]=true;this.mKey[g]=["artificialRootContent"];this.bNeedsUpdate=true;var t=this;if(r.length==1){setTimeout(function(){t.fireDataReceived()})}this.bArtificalRootContext=true;continue}var p=a.getURIToQueryResultEntries();if(p.indexOf("/")==0)p=p.substring(1);if(!this._isRequestPending(R.sRequestId)){this._registerNewRequest(R.sRequestId);b.push(this.oModel.createBatchOperation(p.replace(/\ /g,"%20"),"GET"));e.push(R)}}q.sap.log.debug("AnalyticalBinding: executing batch request with "+e.length+" operations");var d=this._getIdForNewRequestHandle();if(b.length>0){this.oModel.addBatchReadOperations(b);this.fireDataRequested();var f=this.oModel.submitBatch(s,h,true,true);this.oModel.fireRequestSent({url:this.oModel.sServiceUrl+"/$batch",type:"POST",async:true,info:"",infoObject:{}});this._registerNewRequestHandle(d,f)}function s(D,j){t._deregisterHandleOfCompletedRequest(d);if(e.length!=D.__batchResponses.length)q.sap.log.fatal("assertion failed: received "+D.__batchResponses.length+" responses for "+e.length+" read operations in the batch request");if(c!=t.iAnalyticalInfoVersionNumber){for(var i=-1,k;k=e[++i].sRequestId;){t._deregisterCompletedRequest(k);t._cleanupGroupingForCompletedRequest(k)}return}for(var i=0;i<D.__batchResponses.length;i++){if(D.__batchResponses[i].data!=undefined){switch(e[i].iRequestType){case A._requestType.groupMembersQuery:t._processGroupMembersQueryResponse(e[i],D.__batchResponses[i].data);break;case A._requestType.totalSizeQuery:t._processTotalSizeQueryResponse(e[i],D.__batchResponses[i].data);break;case A._requestType.levelMembersQuery:t._processLevelMembersQueryResponse(e[i],D.__batchResponses[i].data);break;default:q.sap.log.fatal("invalid request type "+e[i].iRequestType);continue}}t._deregisterCompletedRequest(e[i].sRequestId);t._cleanupGroupingForCompletedRequest(e[i].sRequestId)}var O=true;var B=t.oModel._getBatchErrors(D);if(B.length>0)O=false;t.oModel.fireRequestCompleted({url:j.requestUri,type:"POST",async:true,info:"",infoObject:{},success:O,errorobject:O?{}:t.oModel._handleError(B[0])});if(O){t.oModel.checkUpdate()}t.fireDataReceived()}function h(j){t._deregisterHandleOfCompletedRequest(d);for(var i=-1,k;k=e[++i];){t._deregisterCompletedRequest(k.sRequestId);t._cleanupGroupingForCompletedRequest(k.sRequestId)}if(c!=t.iAnalyticalInfoVersionNumber){return}t.oModel.fireRequestCompleted({url:"",type:"POST",async:true,info:"",infoObject:{},success:false,errorobject:t.oModel._handleError(j)});t.oModel.fireRequestFailed(t.oModel._handleError(j));t.fireDataReceived()}};A.prototype._executeQueryRequest=function(r){if(r.iRequestType==A._requestType.groupMembersAutoExpansionQuery){for(var i=-1,a;a=r.aGroupMembersAutoExpansionRequestDetails[++i];){this._executeQueryRequest(a)}return}var c=this.iAnalyticalInfoVersionNumber;var a=r.oAnalyticalQueryRequest,g=r.sGroupId;var p=a.getURIToQueryResultEntitySet();var P=this._getQueryODataRequestOptions(a);var t=this;if(a.getURIQueryOptionValue("$select")==null){this.fireDataRequested();var e=this.getModel().getContext("/artificialRootContent");g=null;this.mLength[g]=1;this.mFinalLength[g]=true;this.mKey[g]=["artificialRootContent"];this.bNeedsUpdate=true;var t=this;setTimeout(function(){if(t._cleanupGroupingForCompletedRequest(r.sRequestId))t.fireDataReceived()});this.bArtificalRootContext=true;return}this._registerNewRequest(r.sRequestId);this.fireDataRequested();for(var i=0;i<P.length;i++)P[i]=P[i].replace(/\ /g,"%20");q.sap.log.debug("AnalyticalBinding: executing query request");var R=this._getIdForNewRequestHandle();this.oModel._loadData(p,P,s,E,false,u,f);function s(d){t._deregisterHandleOfCompletedRequest(R);if(c!=t.iAnalyticalInfoVersionNumber){t._deregisterCompletedRequest(r.sRequestId);return}switch(r.iRequestType){case A._requestType.groupMembersQuery:t._processGroupMembersQueryResponse(r,d);break;case A._requestType.totalSizeQuery:t._processTotalSizeQueryResponse(r,d);break;case A._requestType.levelMembersQuery:t._processLevelMembersQueryResponse(r,d);break;default:q.sap.log.fatal("invalid request type "+r.iRequestType);break}t._deregisterCompletedRequest(r.sRequestId)}function f(){if(c!=t.iAnalyticalInfoVersionNumber){return}if(t._cleanupGroupingForCompletedRequest(r.sRequestId))t.fireDataReceived()}function E(d){t._deregisterHandleOfCompletedRequest(R);t._deregisterCompletedRequest(r.sRequestId);t._cleanupGroupingForCompletedRequest(r.sRequestId);if(c!=t.iAnalyticalInfoVersionNumber){return}t.fireDataReceived()}function u(b){t._registerNewRequestHandle(R,b)}};A.prototype._abortAllPendingRequests=function(){this._abortAllPendingRequestsByHandle();this._clearAllPendingRequests()};A.prototype._processGroupMembersQueryResponse=function(r,d){var g=r.sGroupId,s=r.aSelectedUnitPropertyName,a=r.aAggregationLevel,b=r.iStartIndex,l=r.iLength,G=g==null?0:this._getGroupIdLevel(g)+1;if(!this.mKey[g])this.mKey[g]=[];var K=this.mKey[g];var c=b;var u=(s.length>0);var p=null,D=null;var f=-1;var e=0;var h=null;for(var i=0;i<d.results.length;i++){var E=d.results[i];if(u){D="";for(var j=0;j<a.length;j++){D+=E[a[j]]+"|"}if(p==D){if(f==-1)f=i-1;var m=-1,P=d.results[i-1];for(var k=0;k<s.length;k++){if(P[s[k]]!=E[s[k]]){m=k;break}}if(m==-1)q.sap.log.fatal("assertion failed: no deviating units found for result entries "+(i-1)+" and "+i)}if((p!=D||i==d.results.length-1)&&f!=-1){var M=q.extend(true,{},d.results[f]);var n=this.oModel._getObject("/"+this.oModel._getKey(d.results[f]));for(var k=0;k<s.length;k++)M[s[k]]="*";for(var t in this.oMeasureDetailsSet){var v=this.oMeasureDetailsSet[t];if(!r.bIsFlatListRequest&&!this.mAnalyticalInfoByProperty[t].total){if(v.rawValuePropertyName!=undefined)M[v.rawValuePropertyName]=undefined;if(v.formattedValuePropertyName!=undefined)M[v.formattedValuePropertyName]=undefined}else{if(v.rawValuePropertyName!=undefined)M[v.rawValuePropertyName]=null;if(v.formattedValuePropertyName!=undefined)M[v.formattedValuePropertyName]="*"}}var w="";if(h==null)h=this.oAnalyticalQueryResult.getAllDimensionNames().concat([]).sort();for(var k=0;k<h.length;k++){var x=M[h[k]];w+=(x===undefined?"":x)+","}M.__metadata.uri=w+"-multiple-units-not-dereferencable";delete M.__metadata["self"];delete M.__metadata["self_link_extensions"];M["^~volatile"]=true;this.oModel._importData(M,{});var y=this.oModel._getKey(M);this.oModel.getContext('/'+y)["_volatile"]=true;K[c-1]=y;if(i==d.results.length-1&&p==D)e+=i-f;else e+=i-f-1;f=-1;if(p!=D)K[c++]=this.oModel._getKey(E)}else if(p!=D)K[c++]=this.oModel._getKey(E);p=D}else K[c++]=this.oModel._getKey(E);if(!r.bIsLeafGroupsRequest){var z=this._getGroupIdFromContext(this.oModel.getContext('/'+K[c-1]),G);this.mOwnKey[z]=K[c-1]}}if(!r.bAvoidLengthUpdate){if(d.__count){this.mLength[g]=parseInt(d.__count,10)-e;this.mFinalLength[g]=true;if(r.bIsFlatListRequest)this.iTotalSize=d.__count}if(this.mLength[g]<b+d.results.length){this.mLength[g]=b+(d.results.length-e);this.mFinalLength[g]=false}if((d.results.length-e)<l||l===undefined){this.mLength[g]=b+(d.results.length-e);this.mFinalLength[g]=true}if(d.results.length==0){this.mLength[g]=0;this.mFinalLength[g]=true}}this.bNeedsUpdate=true};A.prototype._processTotalSizeQueryResponse=function(r,d){var a=r.oAnalyticalQueryRequest;if(d.__count==undefined){q.sap.log.fatal("missing entity count in query result");return}this.iTotalSize=d.__count};A.prototype._processLevelMembersQueryResponse=function(r,d){var p=function(c,I){var g={iRequestType:A._requestType.groupMembersQuery,sRequestId:t._getRequestId(A._requestType.groupMembersQuery,{groupId:P}),oAnalyticalQueryRequest:r.oAnalyticalQueryRequest,sGroupId:P,aSelectedUnitPropertyName:r.aSelectedUnitPropertyName,aAggregationLevel:r.aAggregationLevel,bIsFlatListRequest:r.bIsFlatListRequest,bIsLeafGroupsRequest:r.bIsLeafGroupsRequest,iStartIndex:c?r.iStartIndex:0,iLength:r.iLength,bAvoidLengthUpdate:r.bAvoidLengthUpdate};if(c&&r.iStartIndex>0&&(t.mKey[g.sGroupId]===undefined||t.mKey[g.sGroupId][r.iStartIndex-1]===undefined)){var s=t._getParentGroupId(g.sGroupId);var h=t.mKey[s].indexOf(t.mOwnKey[g.sGroupId]);if(h==-1)q.sap.log.fatal("assertion failed: failed to determine position of "+g.sGroupId+" in group "+s);if(h>0&&t.mKey[s][h-1]!==undefined){var j=t.mKey[s][h-1];var k=t._getGroupIdFromContext(t.oModel.getContext('/'+j),t._getGroupIdLevel(g.sGroupId));t.mFinalLength[k]=true;g.iStartIndex=0}}if(I){g.iLength=0;t.mLength[g.sGroupId]=0}var l=q.extend(true,{},d);l.results=b;t._processGroupMembersQueryResponse(g,l)};var a=r.oAnalyticalQueryRequest,t=this;if(d.results.length==0)return;var P=this._getGroupIdFromContext(this.oModel.getContext("/"+this.oModel._getKey(d.results[0])),r.iLevel-1);var b=[];var c=true;for(var i=0;i<d.results.length;i++){var e=d.results[i];var f=this.oModel.getContext("/"+this.oModel._getKey(d.results[i]));var s=this._getGroupIdFromContext(f,r.iLevel-1);if(P==s){b.push(e);if(i<d.results.length-1)continue}p(c,d.results.length==r.iLength&&i==d.results.length-1);c=false;if(P!=s)b=[e];P=s}if(b.length==1)p(c,d.results.length==r.iLength)};A.prototype._getLoadedContextsForGroup=function(g,s,l){var c=[],a,k=this.mKey[g],K;if(!k)return c;if(!s)s=0;if(!l){l=this.oModel.iSizeLimit;if(this.mFinalLength[g]&&this.mLength[g]<l)l=this.mLength[g]}for(var i=s;i<s+l;i++){K=k[i];if(!K){break}a=this.oModel.getContext('/'+K);c.push(a)}return c};A.prototype._calculateRequiredGroupSection=function(g,s,l,t,c){var L=false,a,b,p,P,r,d={},k=this.mKey[g],K;b=s;a=0;if(!k){P=s;p=s+l}else{for(var i=s-1;i>=Math.max(s-t,0);i--){K=k[i];if(!K){P=i+1;break}}for(var j=s+l;j<s+l+t;j++){K=k[j];if(!K){p=j;break}}}r=s-P;if(P&&s>t&&r<t){if(c.length!=l)b=s-t;else b=P-t;a=t}if(b==s)b+=c.length;if(c.length!=l)a+=l-c.length;r=p-s-l;if(r==0)a+=t;if(p&&r<t&&r>0){if(b>=s){b=p;a+=t}}if(this.mFinalLength[g]&&this.mLength[g]<(a+b))a=this.mLength[g]-b;d.startIndex=b;d.length=a;return d};A.prototype._calculateRequiredGroupExpansion=function(g,a,s,l){var n={groupId_Missing:null,length_Missing:0};var c=function(g,a,s,l){var L=t._getGroupIdLevel(g);if(L==a){var j=t._getLoadedContextsForGroup(g,s,l);var k=s+j.length-1;if(j.length>=l)return n;else{if(t.mFinalLength[g]){if(j.length>=t.mLength[g])return{groupId_Missing:null,length_Missing:l-j.length};else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:l-j.length}}else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:l-j.length}}}var j=t._getLoadedContextsForGroup(g,s,l);var b=l,k=s+j.length-1;for(var i=-1,m;m=j[++i];){b--;var G=c(t._getGroupIdFromContext(m,L+1),a,0,b);if(G.groupId_Missing==null){if(G.length_Missing==0)return G;else b=G.length_Missing}else{return G}if(b==0)break}if(t.mFinalLength[g]||b==0)return{groupId_Missing:null,length_Missing:b};else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:b}};var t=this;var L=this._getGroupIdLevel(g);if(L==a+1){g=this._getParentGroupId(g);--L}if(g==null||L>a)return n;var b=l,d=s;while(g!=null){var G=c(g,a,d,b);if(G.groupId_Missing!=null)return G;else if(G.length_Missing==0)return G;else{var f=false;while(!f){var p=this._getParentGroupId(g);if(p==null){g=p;--L;break}var e=this.mOwnKey[g];if(!e){q.sap.log.fatal("assertion failed: entitykey for group w/ ID "+g+" not available");return n}var h=this.mKey[p].indexOf(e);if(h==-1){q.sap.log.fatal("assertion failed: group w/ ID "+g+" not found in members of parent w/ ID "+p);return n}if(h==this.mKey[p].length-1){if(this.mFinalLength[p]){g=p;--L;continue}else{return{groupId_Missing:p,startIndex_Missing:h+1,length_Missing:b}}}else{e=this.mKey[p][h+1];g=this._getGroupIdFromContext(this.oModel.getContext('/'+e),L);f=true}}d=0;b=G.length_Missing}}return{groupId_Missing:null,length_Missing:b}};A.prototype._getResourcePath=function(){return this.isRelative()?this.oModel.resolve(this.sPath,this.getContext()):this.sPath};A.prototype._getEntitySet=function(){var e=this.sEntitySetName;var b=this.getContext();if(!e){e=this.sPath.split("/")[1];if(e.indexOf("(")!=-1){e=e.split("(")[0]+"Results"}}return e};A.prototype._getEffectiveSortOrder=function(p){for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i]&&this.aSorter[i].sPath==p){return this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending}}return null};A.prototype._getFilterOperatorMatchingPropertySortOrder=function(p,w){var f=sap.ui.model.FilterOperator.GT;switch(this._getEffectiveSortOrder(p)){case o.SortOrder.Ascending:if(w)f=sap.ui.model.FilterOperator.GE;else f=sap.ui.model.FilterOperator.GT;break;case o.SortOrder.Descending:if(w)f=sap.ui.model.FilterOperator.LE;else f=sap.ui.model.FilterOperator.LT;break}return f};A.prototype._convertDeprecatedFilterObjects=function(f){if(!f)return f;for(var i=0,l=f.length;i<l;i++){if(sap.ui.model.odata&&typeof sap.ui.model.odata.Filter==="function"&&f[i]instanceof sap.ui.model.odata.Filter)f[i]=f[i].convert()}return f};A.prototype._getGroupIdFromContext=function(c,l){if(!c){return null}var g="/";var d=null;if(l>this.aAggregationLevel.length)q.sap.log.fatal("assertion failed: aggregation level deeper than number of current aggregation levels");for(var i=0;i<l;i++){d=c.getProperty(this.aAggregationLevel[i]);if(d!=null){g+=encodeURIComponent(d)+"/"}else{g+="@/"}}return g};A.prototype._getGroupIdLevel=function(g){if(g==null){q.sap.log.fatal("assertion failed: no need to determine level of group ID = null");return-1}return g.split("/").length-2};A.prototype._getGroupIdComponents=function(g){if(g==null)return null;var G=g.split("/");var d=new Array();for(var i=1;i<G.length-1;i++){if(G[i]=="@")d[i-1]=null;else d[i-1]=decodeURIComponent(G[i])}return d};A.prototype._getGroupIdAncestors=function(g,n){if(!n)return[];if(g==null){q.sap.log.fatal("group ID null does not have ancestors");return[]}if(g=="/")if(Math.abs(n)==1)return[null];else{q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);return[]}var G=g.split("/");var a=new Array(),s="";var f=0,t=G.length-3;if(n>0)if(n-1>t)q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);else t=n-1;else if(-(n+1)>t)q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);else{f=t+1+n;for(var i=0;i<f;i++){s+=G[i]+"/"}}for(var i=f;i<=t;i++){s+=G[i]+"/";a.push(s)}return a};A.prototype._getParentGroupId=function(g){return this._getGroupIdAncestors(g,-1)[0]};A.prototype._removeDuplicatesFromStringArray=function(a){var t={};for(var i=0;i<a.length;i++)t[a[i]]=true;var u=[];for(var s in t)u.push(s);return u};A.prototype._getIdForNewRequestHandle=function(){if(this.oPendingRequestHandle===undefined)this.oPendingRequestHandle=[];for(var i=0;i<this.oPendingRequestHandle.length;i++){if(this.oPendingRequestHandle[i]===undefined)return i}this.oPendingRequestHandle[this.oPendingRequestHandle.length]=undefined;return this.oPendingRequestHandle.length-1};A.prototype._registerNewRequestHandle=function(r,R){if(this.oPendingRequestHandle[r]!==undefined)q.sap.log.fatal("request handle ID already in use");this.oPendingRequestHandle[r]=R};A.prototype._deregisterHandleOfCompletedRequest=function(r){if(this.oPendingRequestHandle[r]===undefined)q.sap.log.fatal("no handle found for this request ID");this.oPendingRequestHandle[r]=undefined};A.prototype._abortAllPendingRequestsByHandle=function(){for(var i=0;i<this.oPendingRequestHandle.length;i++){this.oPendingRequestHandle[i]!==undefined&&this.oPendingRequestHandle[i].abort()}this.oPendingRequestHandle=[]};A.prototype._getRequestId=function(r,p){switch(r){case A._requestType.groupMembersQuery:if(p.groupId===undefined)q.sap.log.fatal("missing group ID");var g=p.groupId;return A._requestType.groupMembersQuery+(g==null?"":g);case A._requestType.levelMembersQuery:if(p.level===undefined)q.sap.log.fatal("missing level");if(p.groupId===undefined)q.sap.log.fatal("missing groupId");return""+A._requestType.levelMembersQuery+p.level+(this.bUseAcceleratedAutoExpand==true?"":p.groupId);case A._requestType.totalSizeQuery:return A._requestType.totalSizeQuery;default:q.sap.log.fatal("invalid request type "+r);return-1}};A.prototype._registerNewRequest=function(r){if(r==undefined||r==""){q.sap.log.fatal("missing request ID");return}if(!this.oPendingRequests[r])this.oPendingRequests[r]=1;else++this.oPendingRequests[r]};A.prototype._considerRequestGrouping=function(r){for(var i=-1,R;R=r[++i];){if(this.oGroupedRequests[R]===undefined)this.oGroupedRequests[R]={};var g=this.oGroupedRequests[R];for(var j=0;j<r.length;j++)g[r[j]]=true}};A.prototype._isRequestPending=function(r){return this.oPendingRequests[r]!=undefined&&this.oPendingRequests[r]>0};A.prototype._deregisterCompletedRequest=function(r){if(!this.oPendingRequests[r])q.sap.log.fatal("assertion failed: there is no pending request ID "+r);if(this.oPendingRequests[r]==1)delete this.oPendingRequests[r];else--this.oPendingRequests[r]};A.prototype._cleanupGroupingForCompletedRequest=function(r){if(this._isRequestPending(r))return false;var g=true;if(this.oGroupedRequests[r]!=undefined){for(var O in this.oGroupedRequests[r]){if(this.oPendingRequests[O]){g=false;break}}}if(g){var R=this.oGroupedRequests[r];delete this.oGroupedRequests[r];for(var O in R){if(O!=r)this._cleanupGroupingForCompletedRequest(O)}}return g};A.prototype._clearAllPendingRequests=function(){this.oPendingRequests={};this.oGroupedRequests={}};A.prototype.resetData=function(c){if(c){var p=c.getPath();delete this.mKey[p];delete this.mOwnKey[p];delete this.mLength[p];delete this.mFinalLength[p]}else{this.mKey={};this.mOwnKey={};this.mLength={};this.mFinalLength={}}};A.prototype.refresh=function(f,c,e){var b=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e))b=true}if(c&&!b){q.each(this.mKey,function(i,n){q.each(n,function(i,k){if(k in c){b=true;return false}});if(b)return false})}if(!c&&!e){b=true}}if(f||b){this._abortAllPendingRequests();this.resetData();this.bNeedsUpdate=false;this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}};A.prototype.checkUpdate=function(f,c){var b=false;if(!f){if(this.bNeedsUpdate||!c){b=true}else{q.each(this.mKey,function(i,n){q.each(n,function(i,k){if(k in c){b=true;return false}});if(b)return false})}}if(f||b){this.bNeedsUpdate=false;this._fireChange()}};A.prototype.getDownloadUrl=function(f){var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());var s=[];var b=[];for(var d in this.oDimensionDetailsSet)s.push(d);a.setAggregationLevel(s);for(var d in this.oDimensionDetailsSet){var D=this.oDimensionDetailsSet[d];var I=(D.keyPropertyName!=undefined);var c=(D.textPropertyName!=undefined);a.includeDimensionKeyTextAttributes(D.name,true,c,D.aAttributeName)}for(var m in this.oMeasureDetailsSet)b.push(m);a.setMeasures(b);for(var m in this.oMeasureDetailsSet){var M=this.oMeasureDetailsSet[m];var e=(M.rawValuePropertyName!=undefined);var g=(M.formattedValuePropertyName!=undefined);var h=(M.unitPropertyName!=undefined);a.includeMeasureRawFormattedValueUnit(M.name,e,g,h)}var j=a.getSortExpression();j.clear();for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i]){j.addSorter(this.aSorter[i].sPath,this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}}var k=a.getFilterExpression();k.clear();if(this.aApplicationFilter){k.addUI5FilterConditions(this.aApplicationFilter)}if(this.aControlFilter){k.addUI5FilterConditions(this.aControlFilter)}var p=a.getURIToQueryResultEntitySet();var P=this._getQueryODataRequestOptions(a);for(var i=0,l=P.length;i<l;i++){if(/^\$select/i.test(P[i])){P.splice(i,1);break}}var v=[];for(var i=0,l=this.aAnalyticalInfo.length;i<l;i++){var n=this.aAnalyticalInfo[i];if(n.visible){v.push(n.name)}}if(v.length>0){P.push("$select="+v.join(","))}if(f){P.splice(0,0,"$format="+encodeURIComponent(f))}if(p){return this.oModel._createRequestUrl(p,null,P)}};return A},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.TreeBindingAdapter')){jQuery.sap.declare('sap.ui.model.analytics.TreeBindingAdapter');sap.ui.define("sap/ui/model/analytics/TreeBindingAdapter",['jquery.sap.global','sap/ui/model/TreeBinding','./AnalyticalBinding'],function(q,T,A){"use strict";var a=function(){if(!(this instanceof T&&this.getContexts===undefined)){return}for(var f in a.prototype){if(a.prototype.hasOwnProperty(f)){this[f]=a.prototype[f]}}this._aContexts=[];this._aContextInfos=[];this._bInitial=true;this._oExpanded={};this._oOpenGroups={};this._bTriggeredOpenGroupsLoad=false};a.prototype._updateContexts=function(p,c,C,r){var I=p;for(var i=0;i<c.length;i++){var o=c[i];var b=C[i];this._aContexts.splice(p,r?1:0,o);this._aContextInfos.splice(p,r?1:0,b);p++}if(!r){this._fireContextChange({type:"insert",index:I,length:c.length})}return C};a.prototype.getLength=function(){return this._aContexts.length};a.prototype.getContextInfo=function(i){return this._aContextInfos.slice(i,i+1)[0]};a.prototype._createContextInfos=function(c,p,P,l,L,t,s,I,b){if(!I){I=0}var C=[];for(var i=0;i<c.length;i++){var o=c[i];C.push({context:o,level:l,expanded:false,childCount:0,parent:p,sum:s,position:P,index:i+I,autoExpand:b,expandLength:L,expandThreshold:t});P++}return C};a.prototype.getContexts=function(s,l,t){var b=this;if(!l){l=this.oModel.iSizeLimit}if(this._bInitial){var n=this.mParameters&&this.mParameters.numberOfExpandedLevels;var r=this.getRootContexts({startIndex:s,length:l,threshold:t,numberOfExpandedLevels:n});if(r&&r.length>0){this._bInitial=false;var N=this._createContextInfos(r,null,0,0,l,t,true,0,parseInt(n,10)+1);if(this.bProvideGrandTotals&&this._hasTotaledMeasures()){this._updateContexts(0,r,N)}else{this._expandNodesForContexts(N,0,l,t)}}}if(this._oOpenGroups!={}&&this._bTriggeredOpenGroupsLoad==false){this.loadGroups(this._oOpenGroups);this._bTriggeredOpenGroupsLoad=true}this._expandNodesForContexts(this._aContextInfos.slice(s,s+l),s,l,t);var c=this._aContexts.slice(s,s+l);var C=this._aContextInfos.slice(s,s+l);var m={};q.each(c,function(i,o){if(!o){var d=b._aContextInfos[s+i];var p=d.parent;var S=m[p.getPath()];if(S){S.startIndex=Math.min(S.startIndex,d.index);S.position=Math.min(S.position,d.position);S.endIndex=Math.max(S.endIndex,d.index)}else{m[p.getPath()]={startIndex:d.index,endIndex:d.index,parent:d.parent,level:d.level-1,position:d.position}}}});var b=this,u=false;q.each(m,function(i,S){var d=S.endIndex-S.startIndex+1;var e=Math.max(b.mParameters.numberOfExpandedLevels-S.level,0);var M=b.getNodeContexts(S.parent,{startIndex:S.startIndex,length:d,threshold:t,level:S.level,numberOfExpandedLevels:e});if(M.length>0){b._updateContexts(S.position,M,b._createContextInfos(M,S.parent,S.position,S.level+1,d,t,false,0,e),true);b._updateExpandedInfo(S.parent,S.level,S.startIndex,S.endIndex-S.startIndex+1,t);u=true}});if(u){this._expandNodesForContexts(this._aContextInfos.slice(s,s+l),s,l,t);c=this._aContexts.slice(s,s+l)}return c};a.prototype._expandNodesForContexts=function(c,s,l,t){var e=q.grep(c,function(C){return C.autoExpand>0});for(var i=0;i<e.length;i++){this._expandNode(e[i],s,l,t)}};a.prototype._expandNode=function(c,s,l,t){var C=c.context,n=c.expandLength,N=c.expandThreshold,h=this.hasMeasures();if(!(c.position>=s&&c.position<=s+l)||c.expanded===true){return}var b=this.getNodeContexts(C,{startIndex:0,length:n,threshold:N,level:c.level,numberOfExpandedLevels:c.autoExpand?c.autoExpand-1:0});if(b&&b.length>0){var r=this.getGroupSize(C,c.level),i=c.parent?c.position+1:0,p=i,L=c.level+1,I=L,d=this._createContextInfos(b,C,p,L,n,N,false,0,c.autoExpand?c.autoExpand-1:0);p+=d.length;var e=d.length;if(r>-1){for(var j=b.length;j<r;j++){b.push(undefined);d.push(this._createContextInfos([undefined],C,p,L,l,t,false,e,c.autoExpand?c.autoExpand-1:0)[0]);p++;e++}}if(C&&c.parent!=null&&r>1&&!this.mParameters.sumOnTop&&h){b.push(C);d.push(this._createContextInfos([C],C,p,L-1,l,t,true,e,0)[0])}var f=b.length;this._updateContexts(i,b,d);var g=i+f;var P;L--;var k=i;while(P=this._aContextInfos[k]){if(P.level==L){P.childCount=P.childCount+f;L--}k--;if(L<0)break}var o=this._aContextInfos[g];if(o){var m=this._aContextInfos[g-1].position-o.position+1;for(var j=g;j<this._aContextInfos.length;j++){this._aContextInfos[j].position+=m}}if(c){c.expanded=true}this._updateExpandedInfo(c.context,c.level,0,l,t);var u=false;for(var j=0;j<b.length;j++){if(I<=this.aAggregationLevel.length&&this._oOpenGroups[this._getGroupIdFromContext(b[j],I)]){this._expandNode(d[j],s,l,t);delete this._oOpenGroups[this._getGroupIdFromContext(b[j],I)];u=true}if(d[j].autoExpand>0&&this.hasAvailableNodeContexts(b[j],I)>0&&!u){this._expandNode(d[j],s,l,t)}}c.autoExpand=0}};a.prototype._updateExpandedInfo=function(c,l,s,L,t){var b=this._getGroupIdFromContext(c,l);var p=b.substr(0,b.length-1).split("/");var e=this._oExpanded;for(var j=0;j<p.length;j++){var P=p[j];if(j==0){P="root"}e[P]=e[P]||{};e=e[P];if(j==p.length-1){e["sections"]=e["sections"]||[];if(e["sections"].length==0){e["sections"].push({startIndex:s,length:L,threshold:t})}var E=false;for(var k=0;k<e["sections"].length;k++){var S=e["sections"][k];var i=S.startIndex+S.length+S.threshold;var d=s+L+t;if(S.startIndex<=s&&i>=d){return}else if(S.startIndex<=s&&i>=s){S.threshold=Math.max(S.threshold,t);S.length=d-S.startIndex-S.threshold;E=true}else if(S.startIndex>s&&i>d){S.length=S.length+(S.startIndex-s);S.startIndex=s;S.threshold=Math.max(S.threshold,t);E=true}else if(S.startIndex>s&&S.endIndex<d){S.startIndex=s;S.length=L;S.threshold=t;E=true}}if(!E){e["sections"].push({startIndex:s,length:L,threshold:t})}}else{e["children"]=e["children"]||{};e["childProperty"]=this.aAggregationLevel[j];e=e["children"]}}};a.prototype.expand=function(i){var c=this._aContextInfos[i];if(c.expanded){return}c.autoExpand=c.autoExpand||1};a.prototype.collapse=function(I){var c=this._aContextInfos[I];var C=this._aContexts[I];if(!c.expanded){return}var p=c.position+1,l=c.childCount,L=c.level;var e=this._oExpanded["root"];var s=this._getGroupIdFromContext(C,L);var P=s.substr(0,s.length-1).split("/");for(var i=1;i<L;i++){e=e["children"][P[i]]}delete e["children"][P[P.length-1]];var r=p;this._aContexts.splice(p,l);this._aContextInfos.splice(p,l);p--;var o;while(o=this._aContextInfos[p]){if(o.level==L){o.childCount=o.childCount-l;L--}p--;if(L<0)break}if(r<this._aContextInfos.length){var d=this._aContextInfos[r-1].position-this._aContextInfos[r].position+1;for(var j=r;j<this._aContextInfos.length;j++){this._aContextInfos[j].position+=d}this._fireContextChange({type:"remove",index:r,length:Math.abs(d)})}c.expanded=false};a.prototype.collapseAll=function(l){if(!l||l<1){l=1}for(var i=0,j=this._aContextInfos.length;i<j;i++){if(this._aContextInfos[i].level==l){this.collapse(i);j=this._aContextInfos.length}}};a.prototype.toggleIndex=function(i){if(!this._aContextInfos[i].expanded){this.expand(i)}else{this.collapse(i)}};a.prototype.indexHasChildren=function(i){var c=this._aContextInfos[i];if(!c.parent||c.sum){return false}else{return A.prototype.hasChildren.call(this,c.context,{level:c.level})}};a.prototype.resetData=function(c){var r=A.prototype.resetData.call(this,c);this._aContexts=[];this._aContextInfos=[];this._oOpenGroups={};this._removeGroups(this._oExpanded["root"],0,'');this._oExpanded={};this._bInitial=true;this._bTriggeredOpenGroupsLoad=false;return r};a.prototype.updateAnalyticalInfo=function(c){var r=A.prototype.updateAnalyticalInfo.call(this,c);this._aContexts=[];this._aContextInfos=[];this._oOpenGroups={};this._removeGroups(this._oExpanded["root"],0,'');this._oExpanded={};this._bInitial=true;this._bTriggeredOpenGroupsLoad=false;return r};a.prototype._removeGroups=function(g,l,p){if(!g){return}this._oOpenGroups[p+'/']=g.sections;if(!g.childProperty){return}if(g.childProperty!=this.aAggregationLevel[l]){delete g.children;delete g.childProperty}else{for(var c in g.children){this._removeGroups(g.children[c],l+1,p+'/'+c)}}};a.prototype._hasTotaledMeasures=function(){var h=false;q.each(this.getMeasureDetails(),function(i,m){if(m.analyticalInfo.total){h=true;return false}});return h};a.prototype.attachContextChange=function(f,l){this.attachEvent("contextChange",f,l)};a.prototype.detachContextChange=function(f,l){this.detachEvent("contextChange",f,l)};a.prototype._fireContextChange=function(m){this.fireEvent("contextChange",m)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.Filter')){jQuery.sap.declare('sap.ui.model.odata.Filter');sap.ui.define("sap/ui/model/odata/Filter",['jquery.sap.global','sap/ui/model/Filter','sap/ui/model/FilterOperator'],function(q,F,a){"use strict";var O=sap.ui.base.Object.extend("sap.ui.model.odata.Filter",{constructor:function(p,v,A){if(typeof p==="object"){var f=p;p=f.path;v=f.values;A=f.and}this.sPath=p;this.aValues=v;this.bAND=A==undefined?true:A},convert:function(){var f=[];for(var i=0,l=this.aValues&&this.aValues.length||0;i<l;i++){f.push(new F({path:this.sPath,operator:this.aValues[i].operator,value1:this.aValues[i].value1,value2:this.aValues[i].value2}))}if(f.length>1){var o=new F({filters:f,and:this.bAND});return o}else{return f[0]}}});return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataAnnotations')){jQuery.sap.declare('sap.ui.model.odata.ODataAnnotations');sap.ui.define("sap/ui/model/odata/ODataAnnotations",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var O=sap.ui.base.EventProvider.extend("sap.ui.model.odata.ODataAnnotations",{constructor:function(a,m,p){"use strict";E.apply(this,arguments);this.oMetadata=m;this.oAnnotations=null;this.bLoaded=false;this.bAsync=p&&p.async;this.xPath=null;this.aAnnotationURI=a;this.error=null;this.bValidXML=true;this.oRequestHandles=[];this.oLoadEvent=null;this.oFailedEvent=null;this.xmlCompatVersion=false;if(a){this.loadXML();if(!this.bAsync){if(this.error){q.sap.log.error("OData annotations could not be loaded: "+this.error.message)}}}},metadata:{publicMethods:["parse","getAnnotationsData","attachFailed","detachAnnoationsFailed","attachLoaded","detachLoaded"]}});O.prototype.getAnnotationsData=function(){return this.oAnnotations};O.prototype.isLoaded=function(){return this.bLoaded};O.prototype.fireLoaded=function(a){this.fireEvent("loaded",a);return this};O.prototype.attachLoaded=function(d,f,l){this.attachEvent("loaded",d,f,l);return this};O.prototype.detachLoaded=function(f,l){this.detachEvent("loaded",f,l);return this};O.prototype.fireFailed=function(a){this.fireEvent("failed",a);return this};O.prototype.attachFailed=function(d,f,l){this.attachEvent("failed",d,f,l);return this};O.prototype.detachFailed=function(f,l){this.detachEvent("failed",f,l);return this};O.prototype._parseAliases=function(x,a,A){var r=this.xPath.selectNodes(x,"//edmx:Reference",x);for(var i=0;i<r.length;i+=1){var b=this.xPath.nextNode(r,i);var c=this.xPath.selectNodes(x,"./edmx:Include",b);if(c&&c.length>0){var d=this.xPath.nextNode(c,0);if(d.getAttribute("Alias")){A[d.getAttribute("Alias")]=d.getAttribute("Namespace")}else{A[d.getAttribute("Namespace")]=d.getAttribute("Namespace")}}var e=this.xPath.selectNodes(x,"./edmx:IncludeAnnotations",b);if(e.length>0){for(var j=0;j<e.length;j+=1){var f=this.xPath.nextNode(e,j);if(f.getAttribute("TargetNamespace")){var s=f.getAttribute("TargetNamespace");if(!a[s]){a[s]={}}a[s][f.getAttribute("TermNamespace")]=b.getAttribute("Uri")}else{a[f.getAttribute("TermNamespace")]=b.getAttribute("Uri")}}}}};O.prototype.parse=function(x){var m={},s,S={},a,A={},t=this,b,T,c,d,M,e,f,g,h,j,p,k,l,n,o,r,u,v,w,y,z,B,C;var D={};this.xPath=this.getXPath();this.oServiceMetadata=this.oMetadata.getServiceMetadata();x=this.xPath.setNameSpace(x);s=this.xPath.selectNodes(x,"//d:Schema",x);for(var i=0;i<s.length;i+=1){a=this.xPath.nextNode(s,i);S.Alias=a.getAttribute("Alias");S.Namespace=a.getAttribute("Namespace")}this._parseAliases(x,A,D);if(A){m.annotationReferences=A}m.aliasDefinitions=D;b=this.xPath.selectNodes(x,"//d:Term",x);if(b.length>0){T={};for(var F=0;F<b.length;F+=1){c=this.xPath.nextNode(b,F);d=this.replaceWithAlias(c.getAttribute("Type"),D);T["@"+S.Alias+"."+c.getAttribute("Name")]=d}m.termDefinitions=T}M=this.getAllPropertiesMetadata(this.oServiceMetadata);if(M.extensions){m.propertyExtensions=M.extensions}e=this.xPath.selectNodes(x,"//d:Annotations ",x);for(var F=0;F<e.length;F+=1){f=this.xPath.nextNode(e,F);if(f.hasChildNodes()===false){continue}g=f.getAttribute("Target");h=g.split(".")[0];if(h&&D[h]){g=g.replace(new RegExp(h,""),D[h])}j=g;p=null;if(g.indexOf("/")>0){j=g.split("/")[0];p=g.replace(j+"/","")}if(!m[j]){m[j]={}}if(p){if(!m.propertyAnnotations){m.propertyAnnotations={}}if(!m.propertyAnnotations[j]){m.propertyAnnotations[j]={}}m.propertyAnnotations[j][p]={};k=this.xPath.selectNodes(x,"./d:Annotation",f);for(var G=0;G<k.length;G+=1){l=this.xPath.nextNode(k,G);if(l.hasChildNodes()===false){n=this.replaceWithAlias(l.getAttribute("Term"),D);m.propertyAnnotations[j][p][n]=this.getPropertyValueAttributes(l,D)}}}else{o=j.replace(D[h],h);k=this.xPath.selectNodes(x,"./d:Annotation",f);for(var H=0;H<k.length;H+=1){l=this.xPath.nextNode(k,H);r=l.getAttribute("Qualifier");u=this.replaceWithAlias(l.getAttribute("Term"),D);if(r){u+="#"+r}v=this.getPropertyValue(x,l,o,D);v=this.setEdmTypes(v,M.types,j,S);m[j][u]=v}w=this.xPath.selectNodes(x,"//d:Annotations[contains(@Target, '"+o+"')]//d:PropertyValue[contains(@Path, '/')]//@Path",x);for(i=0;i<w.length;i+=1){y=this.xPath.nextNode(w,i);z=y.value;if(m.propertyAnnotations){if(m.propertyAnnotations[j]){if(m.propertyAnnotations[j][z]){continue}}}B=z.split('/');if(this.isNavProperty(j,B[0],this.oServiceMetadata)){if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}m.expand[j][B[0]]=B[0]}}C=this.xPath.selectNodes(x,"//d:Annotations[contains(@Target, '"+o+"')]//d:Path[contains(., '/')]",x);for(i=0;i<C.length;i+=1){y=this.xPath.nextNode(C,i);z=this.xPath.getNodeText(y);if(m.propertyAnnotations[j]){if(m.propertyAnnotations[j][z]){continue}}if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}B=z.split('/');if(this.isNavProperty(j,B[0],this.oServiceMetadata)){if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}m.expand[j][B[0]]=B[0]}}}}return m};O.prototype.getXPath=function(){var x={};if(this.xmlCompatVersion){x={setNameSpace:function(o){o.setProperty("SelectionNamespaces",'xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" xmlns:d="http://docs.oasis-open.org/odata/ns/edm"');o.setProperty("SelectionLanguage","XPath");return o},selectNodes:function(o,x,i){return i.selectNodes(x)},nextNode:function(n){return n.nextNode()},getNodeText:function(n){return n.text}}}else{x={setNameSpace:function(o){return o},nsResolver:function(p){var n={"edmx":"http://docs.oasis-open.org/odata/ns/edmx","d":"http://docs.oasis-open.org/odata/ns/edm"};return n[p]||null},selectNodes:function(o,p,i){var a=o.evaluate(p,i,this.nsResolver,7,null);a.length=a.snapshotLength;return a},nextNode:function(n,i){return n.snapshotItem(i)},getNodeText:function(n){return n.textContent}}}return x};O.prototype.setXML=function(x,X,o){var d={success:function(){},error:function(){}};o=q.extend({},d,o);var t=this;var a=null;if(sap.ui.Device.browser.internet_explorer){a=new ActiveXObject("Microsoft.XMLDOM");a.loadXML(X);this.xmlCompatVersion=true}else if(x){a=x}else{a=new DOMParser().parseFromString(X,'application/xml')}if(a.getElementsByTagName("parsererror").length>0){o.error({xmlDoc:a});return false}else{if(q.isEmptyObject(this.oMetadata.getServiceMetadata())){this.oMetadata.attachLoaded(function(){var A=t.parse(a);if(A){o.success({annotations:A,xmlDoc:a})}else{o.error({xmlDoc:a})}})}else{var A=this.parse(a);if(A){o.success({annotations:A,xmlDoc:a})}else{o.error({xmlDoc:a})}}return true}};O.prototype.loadXML=function(){var t=this;if(!q.isArray(this.aAnnotationURI)){this.aAnnotationURI=[this.aAnnotationURI]}var l=this.aAnnotationURI.length;this.mLoaded={length:l};for(var i=0;i<l;++i){this.mLoaded[i]=false;var a={url:this.aAnnotationURI[i],async:this.bAsync};var h=(function(r){return function _handleFail(j,s){if(t.oRequestHandles[r]&&t.oRequestHandles[r].bSuppressErrorHandlerCall){return}t.oRequestHandles[r]=null;t.error={message:s,statusCode:j.statusCode,statusText:j.statusText,url:t.aAnnotationURI[r],responseText:j.responseText};if(!this.bAsync){t.oFailedEvent=q.sap.delayedCall(0,t,t.fireFailed,[t.error])}else{t.fireFailed(t.error)}}})(i);var H=(function(r){return function(d,T,j){t.oRequestHandles[r]=null;t.setXML(j.responseXML,j.responseText,{success:function(D){t.mLoaded[r]=D.annotations;t.checkAllLoaded()},error:function(D){t.mLoaded[r]=false;h(j,"Malformed XML document");t.checkAllLoaded()}})}})(i);this.oRequestHandles[i]=q.ajax(a).done(H).fail(h)}};O.prototype.checkAllLoaded=function(){var l=this.mLoaded.length;for(var i=0;i<l;++i){if(!this.mLoaded[i]){return}}this.oAnnotations={};for(var i=0;i<l;++i){q.extend(true,this.oAnnotations,this.mLoaded[i])}this.bLoaded=true;if(this.bAsync){this.fireLoaded({annotations:this.oAnnotations})}else{this.oLoadEvent=q.sap.delayedCall(0,this,this.fireLoaded,[{annotations:this.oAnnotations}])}};O.prototype.getAllPropertiesMetadata=function(m){var M={},P={},o={},b=false,n,e,c,a={},d={},f={},g=false,h,C,s,t,r,R;for(var i=m.dataServices.schema.length-1;i>=0;i-=1){M=m.dataServices.schema[i];if(M.entityType){n=M.namespace;e=M.entityType;c=M.complexType;for(var j in e){a=e[j];f={};if(a.hasStream&&a.hasStream==="true"){continue}for(var k in a.property){h=a.property[k];if(h.type.substring(0,n.length)===n){for(var l in c){if(c[l].name===h.type.substring(n.length+1)){for(k in c[l].property){C=c[l].property[k];d[c[l].name+"/"+C.name]=C.type}}}}else{s=h.name;t=h.type;for(var p in h.extensions){r=h.extensions[p];if((r.name==="display-format")&&(r.value==="Date")){t="Edm.Date"}else{g=true;if(!f[s]){f[s]={}}if(r.namespace&&!f[s][r.namespace]){f[s][r.namespace]={}}f[s][r.namespace][r.name]=r.value}}d[s]=t}}if(!P[n+"."+a.name]){P[n+"."+a.name]={}}P[n+"."+a.name]=d;if(g){if(!o[n+"."+a.name]){b=true}o[n+"."+a.name]={};o[n+"."+a.name]=f}}}}if(b){R={types:P,extensions:o}}else{R={types:P}}return R};O.prototype.setEdmTypes=function(p,P,t,s){var o,e='';for(var a in p){if(p[a]){o=p[a];if(o.Value&&o.Value.Path){e=this.getEdmType(o.Value.Path,P,t,s);if(e){p[a].EdmType=e}continue}if(o.Path){e=this.getEdmType(o.Path,P,t,s);if(e){p[a].EdmType=e}continue}if(o.Facets){p[a].Facets=this.setEdmTypes(o.Facets,P,t,s);continue}if(o.Data){p[a].Data=this.setEdmTypes(o.Data,P,t,s);continue}if(a==="Data"){p.Data=this.setEdmTypes(o,P,t,s);continue}if(o.Value&&o.Value.Apply){p[a].Value.Apply.Parameters=this.setEdmTypes(o.Value.Apply.Parameters,P,t,s);continue}if(o.Value&&o.Type&&(o.Type==="Path")){e=this.getEdmType(o.Value,P,t,s);if(e){p[a].EdmType=e}}}}return p};O.prototype.getEdmType=function(p,P,t,s){if((p.charAt(0)==="@")&&(p.indexOf(s.Alias)===1)){p=p.slice(s.Alias.length+2)}if(p.indexOf("/")>=0){if(P[p.slice(0,p.indexOf("/"))]){t=p.slice(0,p.indexOf("/"));p=p.slice(p.indexOf("/")+1)}}for(var a in P[t]){if(p===a){return P[t][a]}}};O.prototype.getPropertyValueAttributes=function(d,a){var b="",c="",i,p={};for(i=0;i<d.attributes.length;i+=1){if((d.attributes[i].name!=="Property")&&(d.attributes[i].name!=="Term")){b=d.attributes[i].name;c=d.attributes[i].value}}if(b.length>0){p[b]=this.replaceWithAlias(c,a)}return p};O.prototype.getSimpleNodeValue=function(x,d){var v={},s,a,p,b,c,e;if(d.hasChildNodes()){s=this.xPath.selectNodes(x,"./d:String",d);if(s.length>0){a=this.xPath.nextNode(s,0);v["String"]=this.xPath.getNodeText(a)}else{p=this.xPath.selectNodes(x,"./d:Path",d);if(p.length>0){b=this.xPath.nextNode(p,0);v["Path"]=this.xPath.getNodeText(b)}else{c=this.xPath.selectNodes(x,"./d:Apply",d);if(c.length>0){e=this.xPath.nextNode(c,0);v["Apply"]=this.getApplyFunctions(x,e,this.xPath)}}}}return v};O.prototype.getPropertyValue=function(x,d,t,a){var p={},r,b,n,c,e,u,f,g,P={},h,i,j,k,l;var m=this.getXPath();if(d.hasChildNodes()){r=this.xPath.selectNodes(x,"./d:Record | ./d:Collection/d:Record | ./d:Collection/d:If/d:Record",d);if(r.length){b=0;for(n=0;n<r.length;n+=1){c=this.xPath.nextNode(r,n);e=this.getPropertyValues(x,c,t,a);if(c.getAttribute("Type")){e["RecordType"]=this.replaceWithAlias(c.getAttribute("Type"),a)}if(b===0){if(c.nextElementSibling||(c.parentNode.nodeName==="Collection")||(c.parentNode.nodeName==="If")){p=[];p.push(e)}else{p=e}}else{p.push(e)}b+=1}}else{u=this.xPath.selectNodes(x,"./d:UrlRef",d);if(u.length>0){for(n=0;n<u.length;n+=1){f=this.xPath.nextNode(u,n);p["UrlRef"]=this.getSimpleNodeValue(x,f)}}else{u=this.xPath.selectNodes(x,"./d:Url",d);if(u.length>0){for(n=0;n<u.length;n+=1){f=this.xPath.nextNode(u,n);p["Url"]=this.getSimpleNodeValue(x,f)}}else{l=this.xPath.selectNodes(x,"./d:Collection/d:AnnotationPath | ./d:Collection/d:PropertyPath",d);if(l.length>0){p=[];for(n=0;n<l.length;n+=1){g=this.xPath.nextNode(l,n);P={};P[g.nodeName]=m.getNodeText(g);p.push(P)}}else{p=this.getPropertyValueAttributes(d,a);h=this.xPath.selectNodes(x,"./d:Annotation",d);i={};for(j=0;j<h.length;j+=1){i=this.xPath.nextNode(h,j);if(i.hasChildNodes()===false){k=this.replaceWithAlias(i.getAttribute("Term"),a);p[k]=this.getPropertyValueAttributes(i,a)}}}}}}}else{p=this.getPropertyValueAttributes(d,a)}return p};O.prototype.getPropertyValues=function(x,d,t,a){var p={},b={},c,n,e,f,g,h,i,j,k,l;c=this.xPath.selectNodes(x,"./d:Annotation",d);for(n=0;n<c.length;n+=1){b=this.xPath.nextNode(c,n);if(b.hasChildNodes()===false){e=this.replaceWithAlias(b.getAttribute("Term"),a);p[e]=this.getPropertyValueAttributes(b,a)}}f=this.xPath.selectNodes(x,"./d:PropertyValue",d);if(f.length>0){for(g=0;g<f.length;g+=1){h=this.xPath.nextNode(f,g);i=h.getAttribute("Property");p[i]=this.getPropertyValue(x,h,t,a);j=this.xPath.selectNodes(x,"./d:Apply",h);k=null;for(l=0;l<j.length;l+=1){k=this.xPath.nextNode(j,l);if(k){p[i]={};p[i]['Apply']=this.getApplyFunctions(x,k)}}}}else{p=this.getPropertyValue(x,d,t,a)}return p};O.prototype.getApplyFunctions=function(x,a){var b={},p,c=null,d=[],i;p=this.xPath.selectNodes(x,"./d:*",a);for(i=0;i<p.length;i+=1){c=this.xPath.nextNode(p,i);switch(c.nodeName){case"Apply":d.push({"Type":"Apply","Value":this.getApplyFunctions(x,c)});break;case"LabeledElement":d.push({"Name":c.getAttribute("Name"),"Value":this.getSimpleNodeValue(x,c)});break;default:d.push({"Type":c.nodeName,"Value":this.xPath.getNodeText(c)});break}}b['Name']=a.getAttribute('Function');b['Parameters']=d;return b};O.prototype.isNavProperty=function(e,p,m){var M,i,n,a,j,k;for(i=m.dataServices.schema.length-1;i>=0;i-=1){M=m.dataServices.schema[i];if(M.entityType){n=M.namespace+".";a=M.entityType;for(k=a.length-1;k>=0;k-=1){if(n+a[k].name===e&&a[k].navigationProperty){for(j=0;j<a[k].navigationProperty.length;j+=1){if(a[k].navigationProperty[j].name===p){return true}}}}}}return false};O.prototype.replaceWithAlias=function(v,a){for(var A in a){if(v.indexOf(A+".")>=0){v=v.replace(A+".",a[A]+".");return v}}return v};O.prototype.destroy=function(){for(var i=0;i<this.oRequestHandles.length;++i){if(this.oRequestHandles[i]){this.oRequestHandles[i].bSuppressErrorHandlerCall=true;this.oRequestHandles[i].abort();this.oRequestHandles[i]=null}}sap.ui.base.Object.prototype.destroy.apply(this,arguments);if(!!this.oLoadEvent){q.sap.clearDelayedCall(this.oLoadEvent)}if(!!this.oFailedEvent){q.sap.clearDelayedCall(this.oFailedEvent)}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataContextBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataContextBinding');sap.ui.define("sap/ui/model/odata/ODataContextBinding",['jquery.sap.global','sap/ui/model/ContextBinding'],function(q,C){"use strict";var O=C.extend("sap.ui.model.odata.ODataContextBinding",{constructor:function(m,p,c,P,e){C.call(this,m,p,c,P,e)}});O.prototype.initialize=function(){var t=this,r=this.oModel.resolve(this.sPath,this.oContext),d=this.oModel._getObject(this.sPath,this.oContext),R=this.oModel._isReloadNeeded(r,d,this.mParameters);if(this.oModel.oMetadata.isLoaded()){if(R){this.fireDataRequested()}this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange();if(R){t.fireDataReceived()}},R)}};O.prototype.refresh=function(f,c){var t=this,k,s,b=false;if(c){s=this.oModel._getObject(this.sPath,this.oContext);if(s){k=this.oModel._getKey(s);if(k in c){b=true}}}else{b=true}if(f||b){this.fireDataRequested();this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(o){if(t.oElementContext==o){if(f){t._fireChange()}}else{t.oElementContext=o;t._fireChange()}t.fireDataReceived()},true)}};O.prototype.setContext=function(c){var t=this,r,d,R;if(this.oContext!=c&&this.isRelative()){r=this.oModel.resolve(this.sPath,this.oContext),d=this.oModel._getObject(this.sPath,this.oContext),R=this.oModel._isReloadNeeded(r,d,this.mParameters);this.oContext=c;if(R){this.fireDataRequested()}this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange();if(R){t.fireDataReceived()}},R)}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataMetadata')){jQuery.sap.declare('sap.ui.model.odata.ODataMetadata');sap.ui.define("sap/ui/model/odata/ODataMetadata",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var O=sap.ui.base.EventProvider.extend("sap.ui.model.odata.ODataMetadata",{constructor:function(m,p){E.apply(this,arguments);this.bLoaded=false;this.bFailed=false;this.mEntityTypes={};this.oRequestHandle=null;this.sUrl=m;this.bAsync=p.async;this.sUser=p.user;this.bWithCredentials=p.withCredentials;this.sPassword=p.password;this.mHeaders=p.headers;this.oLoadEvent=null;this.oFailedEvent=null;this.oMetadata=null;this.mNamespaces=p.namespaces||{sap:"http://www.sap.com/Protocols/SAPData",m:"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata","":"http://schemas.microsoft.com/ado/2007/06/edmx"};this._loadMetadata()},metadata:{publicMethods:["getServiceMetadata","attachFailed","detachFailed","attachLoaded","detachLoaded"]}});O.prototype._setNamespaces=function(n){this.mNamespaces=n};O.prototype._loadMetadata=function(){var t=this;var r=this._createRequest(this.sUrl);function _(m,R){if(!m||!m.dataServices){var p={message:"Invalid metadata document",request:r,response:R};a(p);return}t.oMetadata=m;t.oRequestHandle=null;if(t.bAsync){t.fireLoaded(t)}else{t.bLoaded=true;t.oLoadEvent=q.sap.delayedCall(0,t,t.fireLoaded,[t])}}function a(e){var p={message:e.message};if(e.response){p.statusCode=e.response.statusCode;p.statusText=e.response.statusText;p.responseText=e.response.body}if(t.oRequestHandle&&t.oRequestHandle.bSuppressErrorHandlerCall){return}t.oRequestHandle=null;if(t.bAsync){t.fireFailed(p)}else{t.oFailedEvent=q.sap.delayedCall(0,t,t.fireFailed,[p])}}this.oRequestHandle=OData.request(r,_,a,OData.metadataHandler)};O.prototype.getServiceMetadata=function(){return this.oMetadata};O.prototype.isLoaded=function(){return this.bLoaded};O.prototype.fireLoaded=function(){this.bLoaded=true;this.fireEvent("loaded");q.sap.log.debug('loaded on Metadata object was fired');return this};O.prototype.attachLoaded=function(d,f,l){this.attachEvent("loaded",d,f,l);return this};O.prototype.detachLoaded=function(f,l){this.detachEvent("loaded",f,l);return this};O.prototype.fireFailed=function(a){this.fireEvent("failed",a);return this};O.prototype.attachFailed=function(d,f,l){this.attachEvent("failed",d,f,l);return this};O.prototype.detachFailed=function(f,l){this.detachEvent("failed",f,l);return this};O.prototype._getEntityTypeByPath=function(p){if(!p){return null}if(!this.oMetadata||q.isEmptyObject(this.oMetadata)){return null}var c=p.replace(/^\/|\/$/g,""),P=c.split("/"),l=P.length,a,A,o,e,b,d,r,t=this;if(P[0].indexOf("(")!=-1){P[0]=P[0].substring(0,P[0].indexOf("("))}if(l>1){o=t._getEntityTypeByPath(P[0]);for(var i=1;i<P.length;i++){if(o){if(P[i].indexOf("(")!=-1){P[i]=P[i].substring(0,P[i].indexOf("("))}if(o.navigationProperty){r=t._getEntityTypeByNavProperty(o,P[i]);if(r){o=r}}d=o}}}else{b=this._splitName(this._getEntityTypeName(P[0]));d=this._getObjectMetadata("entityType",b[0],b[1]);if(d){d.entityType=this._getEntityTypeName(P[0])}}if(!d){var f=P[P.length-1];var F=this._getFunctionImportMetadata(f,"GET");if(F&&F.entitySet){d=this._getEntityTypeByPath(F.entitySet);if(d){d.entityType=this._getEntityTypeName(F.entitySet)}}}return d};O.prototype._getEntityTypeByName=function(n){var e,t=this;if(!n){return null}if(!this.oMetadata||q.isEmptyObject(this.oMetadata)){return null}if(this.mEntityTypes[n]){e=this.mEntityTypes[n]}else{q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityType){q.each(s.entityType,function(k,o){if(o.name===n){e=o;t.mEntityTypes[n]=e;e.namespace=s.namespace;return false}})}})}return e};O.prototype._getAnnotation=function(p){var n,k,P,m,M,e,s,o,a,p;P=p.split('/#');M=P[1].split('/');if(!P[0]){e=this._getEntityTypeByName(M[0]);if(!e)return;s=P[1].substr(P[1].indexOf('/')+1);o=this._getPropertyMetadata(e,s);if(!o)return;m=s.substr(s.indexOf(o.name));m=m.substr(m.indexOf('/')+1)}else{e=this._getEntityTypeByPath(P[0]);if(!e)return;p=P[0].replace(/^\/|\/$/g,"");s=p.substr(p.indexOf('/')+1);o=this._getPropertyMetadata(e,s);if(!o)return;m=M.join('/')}n=this._getAnnotationObject(e,o,m);return n};O.prototype._getAnnotationObject=function(e,o,m){var t=this,a,p,A,n,s;if(!o)return;n=o;p=m.split('/');if(p[0].indexOf('.')>-1){return this._getV4AnnotationObject(e,o,p)}else{if(p.length>1){n=n[p[0]];if(!n&&o.extensions){for(var i=0;i<o.extensions.length;i++){var b=o.extensions[i];if(b.name==p[0]){n=b;break}}}m=p.splice(0,1);A=this._getAnnotationObject(e,n,p.join('/'))}else{if(p[0].indexOf('@')>-1){s=p[0].substr(1);a=s.split(':');A=n[a[0]];if(!A&&n.extensions){for(var i=0;i<n.extensions.length;i++){var b=n.extensions[i];if(b.name===a[1]&&b.namespace===this.mNamespaces[a[0]]){A=b.value;break}}}}else{a=p[0].split(':');A=n[a[0]];A=n[p[0]];if(!A&&n.extensions){for(var i=0;i<n.extensions.length;i++){var b=n.extensions[i];if(b.name===a[1]&&b.namespace===this.mNamespaces[a[0]]){A=b;break}}}}}}return A};O.prototype._getV4AnnotationObject=function(e,o,p){var a,A=[];if(p.length>1){return}var t=e.namespace?e.namespace+".":"";t+=e.name+"/"+o.name;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.annotations){q.each(s.annotations,function(k,o){if(o.target===t&&!o.qualifier){A.push(o.annotation);return false}})}});if(A){q.each(A,function(i,b){q.each(b,function(j,c){if(c.term===p[0]){a=c}})})}return a};O.prototype._splitName=function(f){var p=[];if(f){var s=f.lastIndexOf(".");p[0]=f.substr(s+1);p[1]=f.substr(0,s)}return p};O.prototype._getEntityTypeName=function(c){var e;if(c){q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityContainer){q.each(s.entityContainer,function(k,o){if(o.entitySet){q.each(o.entitySet,function(j,a){if(a.name===c){e=a.entityType;return false}})}})}})}return e};O.prototype._getObjectMetadata=function(o,s,n){var a;if(s&&n){q.each(this.oMetadata.dataServices.schema,function(i,S){if(S[o]&&S.namespace===n){q.each(S[o],function(j,c){if(c.name===s){a=c;a.namespace=S.namespace;return false}});return!a}})}return a};O.prototype.getUseBatch=function(){var u=false;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityContainer){q.each(s.entityContainer,function(k,e){if(e.extensions){q.each(e.extensions,function(l,o){if(o.name==="use-batch"&&o.namespace==="http://www.sap.com/Protocols/SAPData"){u=(typeof o.value==='string')?(o.value.toLowerCase()==='true'):!!o.value;return false}})}})}});return u};O.prototype._getFunctionImportMetadata=function(f,m){var o=null;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s["entityContainer"]){q.each(s["entityContainer"],function(j,e){if(e["functionImport"]){q.each(e["functionImport"],function(k,F){if(F.name===f&&F.httpMethod===m){o=F;return false}})}return!o})}return!o});return o};O.prototype._getEntityTypeByNavProperty=function(e,n){var t=this,a,A,b,N;q.each(e.navigationProperty,function(k,o){if(o.name===n){a=t._splitName(o.relationship);A=t._getObjectMetadata("association",a[0],a[1]);if(A){var c=A.end[0];if(c.role!==o.toRole){c=A.end[1]}b=t._splitName(c.type);N=t._getObjectMetadata("entityType",b[0],b[1]);if(N){N.entityType=c.type}return false}}});return N};O.prototype._getNavigationPropertyNames=function(e){var n=[];if(e.navigationProperty){q.each(e.navigationProperty,function(k,N){n.push(N.name)})}return n};O.prototype._getPropertyMetadata=function(e,p){var P,t=this;if(!e)return;p=p.replace(/^\/|\/$/g,"");var a=p.split("/");q.each(e.property,function(k,b){if(b.name===a[0]){P=b;return false}});if(P&&a.length>1&&!q.sap.startsWith(P.type.toLowerCase(),"edm.")){var n=this._splitName(P.type);P=this._getPropertyMetadata(this._getObjectMetadata("complexType",n[0],n[1]),a[1])}if(!P&&a.length>1){var o=this._getEntityTypeByNavProperty(e,a[0]);if(o){P=t._getPropertyMetadata(o,a[1])}}return P};O.prototype.destroy=function(){delete this.oMetadata;if(this.oRequestHandle){this.oRequestHandle.bSuppressErrorHandlerCall=true;this.oRequestHandle.abort();this.oRequestHandle=null}if(!!this.oLoadEvent){q.sap.clearDelayedCall(this.oLoadEvent)}if(!!this.oFailedEvent){q.sap.clearDelayedCall(this.oFailedEvent)}sap.ui.base.Object.prototype.destroy.apply(this,arguments)};O.prototype._createRequest=function(u){var h={},l={"Accept-Language":sap.ui.getCore().getConfiguration().getLanguage()};q.extend(h,this.mHeaders,l);var r={headers:h,requestUri:u,method:'GET',user:this.sUser,password:this.sPassword,async:this.bAsync};if(this.bAsync){r.withCredentials=this.bWithCredentials}return r};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataTreeBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataTreeBinding');sap.ui.define("sap/ui/model/odata/ODataTreeBinding",['jquery.sap.global','sap/ui/model/TreeBinding'],function(q,T){"use strict";var O=T.extend("sap.ui.model.odata.ODataTreeBinding",{constructor:function(m,p,c,f,P){T.apply(this,arguments);this.bPendingRequest=false;this.oFinalLengths={};this.oLengths={};this.oKeys={};this.bNeedsUpdate=false;if(!P||!P.navigation){q.sap.log.error("A navigation paths parameter object has to be defined");this.oNavigationPaths={}}else{this.oNavigationPaths=P.navigation}}});O.prototype.getRootContexts=function(){var n=this._getNavPath(this.sPath),a=this.oModel.resolve(this.sPath,this.getContext()),t=this,c;if(!a){return[]}if(!this.oModel.isList(this.sPath,this.getContext())){if(this.bDisplayRootNode){this.oModel.createBindingContext(a,null,{expand:n},function(N){c=N;if(t.oRootContext!==N){t.oRootContext=N;t.bNeedsUpdate=true}else{var d=t.oModel.oData[c.getPath().substr(1)];t._processODataObject(d,c.getPath(),n)}},false);if(c){return[c]}else{return[]}}else{c=this.oModel.getContext(this.sPath);return this.getNodeContexts(c)}}else{return this._getContextsForPath(a,n)}};O.prototype.getNodeContexts=function(c){var n=this._getNavPath(c.getPath()),a;if(!n){return[]}a=this.oModel.resolve(n,c);n=this.oNavigationPaths[n];return this._getContextsForPath(a,n)};O.prototype.hasChildren=function(c){return c&&this.oLengths[c.getPath()]>0};O.prototype._getContextsForPath=function(a,n){var c=[],l=this.oModel.iSizeLimit,L,k;if(this.oFinalLengths&&this.oFinalLengths[a]&&this.oLengths[a]<l){l=this.oLengths[a]}if(this.oKeys[a]){for(var i=0;i<l;i++){k=this.oKeys[a][i];if(!k){break}c.push(this.oModel.getContext('/'+k))}}L=c.length!=l&&!(this.oFinalLengths[a]&&c.length>=this.oLengths[a]);if(this.oModel.getServiceMetadata()){if(!this.bPendingRequest&&L){this.loadSubNodes(a,n)}}return c};O.prototype.loadSubNodes=function(a,n){var t=this,p=[];if(n){p.push("$expand="+n)}function s(d){t.oLengths[a]=d.results.length;t.oFinalLengths[a]=true;t.oKeys[a]=[];for(var i=0;i<d.results.length;i++){var E=d.results[i];t._processODataObject(E,a,n);t.oKeys[a].push(t.oModel._getKey(E))}t.oRequestHandle=null;t.bPendingRequest=false;t.bNeedsUpdate=true}function c(){t.fireDataReceived()}function e(d){t.oRequestHandle=null;t.bPendingRequest=false;t.fireDataReceived()}function u(h){t.oRequestHandle=h}if(a){if(!this.oFinalLengths[a]){this.bPendingRequest=true;this.fireDataRequested();this.oModel._loadData(a,p,s,e,false,u,c)}}};O.prototype.resetData=function(c){if(c){var p=c.getPath();delete this.oKeys[p];delete this.oLengths[p];delete this.oFinalLengths[p]}else{this.oKeys={};this.oLengths={};this.oFinalLengths={}}};O.prototype.refresh=function(f,c,e){var C=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e)){C=true}}if(c&&!C){q.each(this.oKeys,function(i,n){q.each(n,function(i,k){if(k in c){C=true;return false}});if(C)return false})}if(!c&&!e){C=true}}if(f||C){this.resetData();this.bNeedsUpdate=false;this._fireChange()}};O.prototype.filter=function(f){q.sap.log.warning("Filtering is currently not possible in the ODataTreeBinding");return this};O.prototype.checkUpdate=function(f,c){var C=false;if(!f){if(this.bNeedsUpdate||!c){C=true}else{q.each(this.oKeys,function(i,n){q.each(n,function(i,k){if(k in c){C=true;return false}});if(C)return false})}}if(f||C){this.bNeedsUpdate=false;this._fireChange()}};O.prototype._getNavPath=function(p){var a=this.oModel.resolve(p,this.getContext());if(!a){return}var P=a.split("/"),e=P[P.length-1],n;var c=e.split("(")[0];if(c&&this.oNavigationPaths[c]){n=this.oNavigationPaths[c]}return n};O.prototype._processODataObject=function(o,a,n){var k=this.oModel._getKey(o),c=this.oModel.getContext("/"+k),p=c.getPath();var r=this.oModel._getObject(n,c);if(q.isArray(r)){this.oKeys[p]=r;this.oLengths[p]=r.length;this.oFinalLengths[p]=true}else if(typeof r==="object"){this.oKeys[p]=[r];this.oLengths[p]=0;this.oFinalLengths[p]=true}else{if(n&&o[n].__list){this.oKeys[p]=o[n].__list;this.oLengths[p]=this.oKeys[p].length;this.oFinalLengths[p]=true}else{this.oKeys[a]=[];this.oLengths[a]=0;this.oFinalLengths[a]=false}}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataUtils')){jQuery.sap.declare('sap.ui.model.odata.ODataUtils');sap.ui.define("sap/ui/model/odata/ODataUtils",['jquery.sap.global','./Filter','sap/ui/model/Sorter','sap/ui/model/Filter','sap/ui/core/format/DateFormat'],function(q,O,S,F,D){"use strict";var a=function(){};a.createSortParams=function(s){var b;if(!s||s.length==0){return}b="$orderby=";for(var i=0;i<s.length;i++){var o=s[i];if(o instanceof S){b+=o.sPath;b+=o.bDescending?"%20desc":"%20asc";b+=","}}b=b.slice(0,-1);return b};a.createFilterParams=function(f,m,e){if(!f||f.length==0){return}return"$filter="+this._createFilterParams(f,m,e)};a._createFilterParams=function(f,m,e){var s;if(!f||f.length==0){return}var o={},b=0,c,s="",d=0,M,t=this;q.each(f,function(j,g){if(g.sPath){c=o[g.sPath];if(!c){c=o[g.sPath]=[];b++}}else{c=o["__multiFilter"];if(!c){c=o["__multiFilter"]=[];b++}}c.push(g)});q.each(o,function(p,c){if(c.length>1){s+='('}q.each(c,function(i,g){if(g instanceof O){if(g.aValues.length>1){s+='('}q.each(g.aValues,function(i,h){if(i>0){if(g.bAND){s+="%20and%20"}else{s+="%20or%20"}}s=t._createFilterSegment(g.sPath,m,e,h.operator,h.value1,h.value2,s)});if(g.aValues.length>1){s+=')'}}else if(g._bMultiFilter){s+=t._resolveMultiFilter(g,m,e)}else{s=t._createFilterSegment(g.sPath,m,e,g.sOperator,g.oValue1,g.oValue2,s)}if(i<c.length-1){s+="%20or%20"}});if(c.length>1){s+=')'}if(d<b-1){s+="%20and%20"}d++});return s};a._createUrlParamsArray=function(p){var u,t=q.type(p);if(t==="array"){return p}u=[];if(t==="object"){u.push(q.sap.encodeURLParameters(p))}else if(t==="string"){u.push(p)}return u};a._resolveMultiFilter=function(m,M,e){var t=this,f=m.aFilters,s="";if(f){s+="(";q.each(f,function(i,o){var l=false;if(o._bMultiFilter){s+=t._resolveMultiFilter(o,M,e)}else if(o.sPath){s+=t._createFilterSegment(o.sPath,M,e,o.sOperator,o.oValue1,o.oValue2,"")}if(i<(f.length-1)){if(m.bAnd){s+="%20and%20"}else{s+="%20or%20"}}});s+=")"}return s};a._createFilterSegment=function(p,m,e,o,v,V,f){var P,t;if(e){P=m._getPropertyMetadata(e,p);t=P&&P.type;}if(t){v=this.formatValue(v,t);V=(V!=null)?this.formatValue(V,t):null}else{}if(v){v=q.sap.encodeURL(String(v))}if(V){V=q.sap.encodeURL(String(V))}switch(o){case"EQ":case"NE":case"GT":case"GE":case"LT":case"LE":f+=p+"%20"+o.toLowerCase()+"%20"+v;break;case"BT":f+="("+p+"%20ge%20"+v+"%20and%20"+p+"%20le%20"+V+")";break;case"Contains":f+="substringof("+v+","+p+")";break;case"StartsWith":f+="startswith("+p+","+v+")";break;case"EndsWith":f+="endswith("+p+","+v+")";break;default:f+="true"}return f};a.formatValue=function(v,t){if(!this.oDateTimeFormat){this.oDateTimeFormat=D.getDateInstance({pattern:"'datetime'''yyyy-MM-dd'T'HH:mm:ss''"});this.oDateTimeOffsetFormat=D.getDateInstance({pattern:"'datetimeoffset'''yyyy-MM-dd'T'HH:mm:ss'Z'''"});this.oTimeFormat=D.getTimeInstance({pattern:"'time'''HH:mm:ss''"})}if(v===null||v===undefined){return"null"}var V;switch(t){case"Edm.String":V="'"+String(v).replace(/'/g,"''")+"'";break;case"Edm.Time":V="time'"+v+"'";break;case"Edm.DateTime":V=this.oDateTimeFormat.format(new Date(v),true);break;case"Edm.DateTimeOffset":V=this.oDateTimeOffsetFormat.format(new Date(v),true);break;case"Edm.Guid":V="guid'"+v+"'";break;case"Edm.Decimal":V=v+"M";break;case"Edm.Int64":V=v+"L";break;case"Edm.Single":V=v+"f";break;case"Edm.Binary":V="binary'"+v+"'";break;default:V=new String(v);break}return V};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Boolean')){jQuery.sap.declare('sap.ui.model.type.Boolean');sap.ui.define("sap/ui/model/type/Boolean",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var B=S.extend("sap.ui.model.type.Boolean",{constructor:function(){S.apply(this,arguments);this.sName="Boolean"}});B.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"boolean":return v;case"string":return v.toString();case"int":case"float":default:throw new sap.ui.model.FormatException("Don't know how to format Boolean to "+i)}};B.prototype.parseValue=function(v,i){var r;switch(i){case"boolean":return v;case"string":if(v.toLowerCase()=="true"||v=="X"){return true}if(v.toLowerCase()=="false"||v==""){return false}throw new sap.ui.model.ParseException("Don't know how to parse Boolean from "+i);case"int":case"float":default:throw new sap.ui.model.ParseException("Don't know how to parse Boolean from "+i)}};B.prototype.validateValue=function(v){};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Date')){jQuery.sap.declare('sap.ui.model.type.Date');sap.ui.define("sap/ui/model/type/Date",['jquery.sap.global','sap/ui/core/format/DateFormat','sap/ui/model/SimpleType'],function(q,D,S){"use strict";var a=S.extend("sap.ui.model.type.Date",{constructor:function(){S.apply(this,arguments);this.sName="Date"}});a.prototype.formatValue=function(v,i){switch(i){case"string":if(v==null){return""}if(this.oInputFormat){if(this.oFormatOptions.source.pattern=="timestamp"){if(typeof(v)!="number"){if(isNaN(v)){throw new sap.ui.model.FormatException("Cannot format date: "+v+" is not a valid Timestamp")}else{v=parseInt(v,10)}}v=new Date(v)}else{if(v==""){return""}v=this.oInputFormat.parse(v);if(v==null){throw new sap.ui.model.FormatException("Cannot format date: "+v+" has the wrong format")}}}return this.oOutputFormat.format(v);default:throw new sap.ui.model.FormatException("Don't know how to format Date to "+i)}};a.prototype.parseValue=function(v,i){var r;switch(i){case"string":if(v===""){return null}var r=this.oOutputFormat.parse(v);if(!r){throw new sap.ui.model.ParseException(v+" is not a valid Date value")}if(this.oInputFormat){if(this.oFormatOptions.source.pattern=="timestamp"){r=r.getTime()}else{r=this.oInputFormat.format(r)}}return r;default:throw new sap.ui.model.ParseException("Don't know how to parse Date from "+i)}};a.prototype.validateValue=function(v){if(this.oConstraints){var V=[],i=this.oInputFormat;if(i&&this.oFormatOptions.source.pattern!="timestamp"){v=i.parse(v)}q.each(this.oConstraints,function(n,c){if(i){c=i.parse(c)}switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};a.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};a.prototype.getOutputPattern=function(){return this.oOutputFormat.oFormatOptions.pattern};a.prototype._handleLocalizationChange=function(){this.oOutputFormat=D.getInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=D.getInstance(this.oFormatOptions.source)}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.DateTime')){jQuery.sap.declare('sap.ui.model.type.DateTime');sap.ui.define("sap/ui/model/type/DateTime",['jquery.sap.global','./Date'],function(q,D){"use strict";var a=D.extend("sap.ui.model.type.DateTime",{constructor:function(){D.apply(this,arguments);this.sName="DateTime"}});a.prototype._handleLocalizationChange=function(){this.oOutputFormat=sap.ui.core.format.DateFormat.getDateTimeInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=sap.ui.core.format.DateFormat.getDateTimeInstance(this.oFormatOptions.source)}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Float')){jQuery.sap.declare('sap.ui.model.type.Float');sap.ui.define("sap/ui/model/type/Float",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var F=S.extend("sap.ui.model.type.Float",{constructor:function(){S.apply(this,arguments);this.sName="Float"}});F.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return this.oFormat.format(v);case"int":return Math.floor(v);case"float":return v;default:throw new sap.ui.model.FormatException("Don't know how to format Float to "+i)}};F.prototype.parseValue=function(v,i){var r;switch(i){case"string":r=this.oFormat.parse(v);if(isNaN(r)){throw new sap.ui.model.ParseException(v+" is not a valid Float value")}return r;case"int":case"float":return v;default:throw new sap.ui.model.ParseException("Don't know how to parse Float from "+i)}};F.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};F.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};F.prototype._handleLocalizationChange=function(){this.oFormat=N.getFloatInstance(this.oFormatOptions)};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Integer')){jQuery.sap.declare('sap.ui.model.type.Integer');sap.ui.define("sap/ui/model/type/Integer",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var I=S.extend("sap.ui.model.type.Integer",{constructor:function(){S.apply(this,arguments);this.sName="Integer"}});I.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return this.oFormat.format(v);case"int":case"float":return v;default:throw new sap.ui.model.FormatException("Don't know how to format Integer to "+i)}};I.prototype.parseValue=function(v,i){var r;switch(i){case"float":case"string":r=this.oFormat.parse(String(v));if(isNaN(r)){throw new sap.ui.model.ParseException(v+" is not a valid Integer value")}return r;case"int":return v;default:throw new sap.ui.model.ParseException("Don't know how to parse Integer from "+i)}};I.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};I.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};I.prototype._handleLocalizationChange=function(){this.oFormat=N.getIntegerInstance(this.oFormatOptions)};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.String')){jQuery.sap.declare('sap.ui.model.type.String');sap.ui.define("sap/ui/model/type/String",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var a=S.extend("sap.ui.model.type.String",{constructor:function(){S.apply(this,arguments);this.sName="String";if(this.oConstraints.search&&typeof this.oConstraints.search=="string"){this.oConstraints.search=new RegExp(this.oConstraints.search)}}});a.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return v;case"int":var r=parseInt(v,10);if(isNaN(r)){throw new sap.ui.model.FormatException(v+" is not a valid int value")}return r;case"float":var R=parseFloat(v);if(isNaN(R)){throw new sap.ui.model.FormatException(v+" is not a valid float value")}return R;case"boolean":if(v.toLowerCase()=="true"||v=="X"){return true}if(v.toLowerCase()=="false"||v==""){return false}throw new sap.ui.model.FormatException(v+" is not a valid boolean value");default:throw new sap.ui.model.FormatException("Don't know how to format String to "+i)}};a.prototype.parseValue=function(v,i){var r;switch(i){case"string":return v;case"boolean":case"int":case"float":return v.toString();default:throw new sap.ui.model.ParseException("Don't know how to parse String from "+i)}};a.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"maxLength":if(v.length>c){V.push("maxLength")}break;case"minLength":if(v.length<c){V.push("minLength")}break;case"startsWith":if(!q.sap.startsWith(v,c)){V.push("startsWith")}break;case"startsWithIgnoreCase":if(!q.sap.startsWithIgnoreCase(v,c)){V.push("startsWithIgnoreCase")}break;case"endsWith":if(!q.sap.endsWith(v,c)){V.push("endsWith")}break;case"endsWithIgnoreCase":if(!q.sap.endsWithIgnoreCase(v,c)){V.push("endsWithIgnoreCase")}break;case"contains":if(v.indexOf(c)==-1){V.push("contains")}break;case"equals":if(v!=c){V.push("equals")}break;case"search":if(v.search(c)==-1){V.push("search")}break}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Time')){jQuery.sap.declare('sap.ui.model.type.Time');sap.ui.define("sap/ui/model/type/Time",['jquery.sap.global','./Date'],function(q,D){"use strict";var T=D.extend("sap.ui.model.type.Time",{constructor:function(){D.apply(this,arguments);this.sName="Time"}});T.prototype._handleLocalizationChange=function(){this.oOutputFormat=sap.ui.core.format.DateFormat.getTimeInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=sap.ui.core.format.DateFormat.getTimeInstance(this.oFormatOptions.source)}};return T},true)};if(!jQuery.sap.isDeclared('jquery.sap.ui')){jQuery.sap.declare('jquery.sap.ui');sap.ui.define("jquery.sap.ui",['jquery.sap.global','sap/ui/Global'],function(q,G){"use strict";if(!q.sap){throw"Initialisation of jQuery.sap.ui failed. jQuery.sap plugin required!"}if(!window.sap||!window.sap.ui){q.sap.fatal("Initialisation of jQuery.sap.ui failed. Global SAP UI namespace required!")}if(q.sap.ui){return}function u(i){return sap.ui.getCore().getUIArea(this.id)!=null}function f(i,o){return sap.ui.getCore().getUIArea(this.id)}function a(c,i){return c.getUIArea().getInterface()}q.fn.root=function(r){var t;if(r){sap.ui.getCore().setRoot(this.get(0),r);return this}var c=this.control();if(c.length>0){return q.map(c,a)}var U=this.uiarea();if(U.length>0){return U}this.each(function(i){sap.ui.getCore().createUIArea(this)});return this};q.fn.uiarea=function(i){var U=this.slice("[id]").filter(u).map(f).get();return typeof(i)==="number"?U[i]:U};function b(){if(!this||!this.nodeType||this.nodeType===9){return null}try{var i=q(this).closest("[data-sap-ui]").attr("id");return i?sap.ui.getCore().byId(i):null}catch(e){return null}}q.fn.control=function(i){var c=this.map(b);if(i===undefined||isNaN(i)){return c.get()}else{return c.get(i)}};q.fn.sapui=function(c,i,C){return this.each(function(){var o=null;if(this){if(c.indexOf(".")==-1){c="sap.ui.commons."+c}var d=q.sap.getObject(c);if(d){if(typeof C=='object'&&typeof C.press=='function'){C.press=q.proxy(C.press,this)}o=new(d)(i,C);o.placeAt(this)}}})};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.app.ApplicationMetadata')){jQuery.sap.declare('sap.ui.app.ApplicationMetadata');sap.ui.define("sap/ui/app/ApplicationMetadata",['jquery.sap.global','sap/ui/core/ComponentMetadata'],function(q,C){"use strict";var A=function(c,o){C.apply(this,arguments)};A.prototype=q.sap.newObject(C.prototype);A.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};A.prototype.applySettings=function(c){var s=c.metadata;C.prototype.applySettings.call(this,c);if(s._src){q.sap.log.warning("The metadata of the application "+this.getName()+" is loaded from file "+s._src+". This is a design time feature and not for productive usage!");var p=this.getName().replace(/\.\w+?$/,"");var u=q.sap.getModulePath(p,"/"+s._src);var r=q.sap.syncGetJSON(u);if(r.success){q.extend(s,r.data)}else{q.sap.log.error("Failed to load application metadata from \""+s._src+"\"! Reason: "+r.error)}}this._mRootComponent=s.rootComponent||null};A.prototype.getRootComponent=function(){return this._mRootComponent};return A},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.HTMLViewSerializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.HTMLViewSerializer');jQuery.sap.require('sap.ui.thirdparty.vkbeautify');sap.ui.define("sap/ui/core/util/serializer/HTMLViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./delegate/HTML','sap/ui/thirdparty/vkbeautify'],function(q,E,H,v){"use strict";var a=E.extend("sap.ui.core.util.serializer.HTMLViewSerializer",{constructor:function(V,w,g,G){E.apply(this);this._oView=V;this._oWindow=w;this._fnGetControlId=g;this._fnGetEventHandlerName=G}});a.prototype.serialize=function(){var s=function(C){return(C instanceof this._oWindow.sap.ui.core.mvc.View)};var c=new sap.ui.core.util.serializer.Serializer(this._oView,new H(this._fnGetControlId,this._fnGetEventHandlerName),true,this._oWindow,s);var r=c.serialize();var V=[];V.push('<template');if(this._oView.getControllerName&&this._oView.getControllerName()){V.push(' data-controller-name="'+this._oView.getControllerName()+'"')}V.push(" >");V.push(r);V.push("</template>");return vkbeautify.xml(V.join(""))};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.XMLViewSerializer')){jQuery.sap.declare('sap.ui.core.util.serializer.XMLViewSerializer');jQuery.sap.require('sap.ui.thirdparty.vkbeautify');sap.ui.define("sap/ui/core/util/serializer/XMLViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./delegate/XML','sap/ui/thirdparty/vkbeautify'],function(q,E,X,v){"use strict";var a=E.extend("sap.ui.core.util.serializer.XMLViewSerializer",{constructor:function(V,w,d,g,G){E.apply(this);this._oView=V;this._oWindow=w;this._sDefaultNamespace=d;this._fnGetControlId=g;this._fnGetEventHandlerName=G}});a.prototype.serialize=function(){var p=[];var m=function(C,P){if(!P){var t=(C)?C.constructor:"?";throw Error("Controls with empty package are currently not supported by the XML serializer: "+t)}if(q.inArray(P,p)===-1){p.push(P)}};var s=function(C){return(C instanceof this._oWindow.sap.ui.core.mvc.View)};var c=new sap.ui.core.util.serializer.Serializer(this._oView,new X(this._sDefaultNamespace,this._fnGetControlId,this._fnGetEventHandlerName,m),true,this._oWindow,s);var r=c.serialize();var V=[];V.push('<sap.ui.core.mvc:View');if(this._oView.getControllerName&&this._oView.getControllerName()){V.push(' controllerName="'+this._oView.getControllerName()+'"')}if(q.inArray('sap.ui.core.mvc',p)===-1){p.push('sap.ui.core.mvc')}for(var i=0;i<p.length;i++){if(this._sDefaultNamespace&&this._sDefaultNamespace===p[i]){V.push(' xmlns="'+p[i]+'"')}else{V.push(' xmlns:'+p[i]+'="'+p[i]+'"')}}V.push(" >");V.push(r);V.push("</sap.ui.core.mvc:View>");return vkbeautify.xml(V.join(""))};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.SapPcpWebSocket')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.ws.SapPcpWebSocket');sap.ui.define("sap/ui/core/ws/SapPcpWebSocket",['jquery.sap.global','./WebSocket'],function(q,W){"use strict";var S=W.extend("sap.ui.core.ws.SapPcpWebSocket",{constructor:function(u,p){W.apply(this,arguments)}});S.SUPPORTED_PROTOCOLS={v10:"v10.pcp.sap.com"};S._deserializeRegexp=/((?:[^:\\]|(?:\\.))+):((?:[^:\\\n]|(?:\\.))*)/;S._SEPARATOR="\n\n";S._MESSAGE="MESSAGE";S.prototype._onopen=function(){var s=false;if(this.getProtocol()===""){s=true}else{for(var p in S.SUPPORTED_PROTOCOLS){if(S.SUPPORTED_PROTOCOLS.hasOwnProperty(p)){if(S.SUPPORTED_PROTOCOLS[p]===this.getProtocol()){s=true;break}}}}if(s){this.fireOpen()}else{q.sap.log.error("Unsupported protocol '"+this.getProtocol()+"' selected by the server. "+"Connection will be closed.");this.close("Unsupported protocol selected by the server")}};S.prototype._onmessage=function(m){var s=-1,e={};if(typeof m.data==="string"){s=m.data.indexOf(S._SEPARATOR)}if(s!==-1){e.pcpFields=this._extractPcpFields(m.data.substring(0,s));e.data=m.data.substr(s+S._SEPARATOR.length)}else{q.sap.log.warning("Invalid PCP message received: "+m.data);e.pcpFields={};e.data=m.data}this.fireMessage(e)};S.prototype._extractPcpFields=function(h){var f=h.split("\n"),l=[],p={};for(var i=0;i<f.length;i++){l=f[i].match(S._deserializeRegexp);if(l&&l.length===3){p[this._unescape(l[1])]=this._unescape(l[2])}}return p};S.prototype._unescape=function(e){var p=e.split("\u0008"),u="";for(var i=0;i<p.length;i++){p[i]=p[i].replace(/\\\\/g,"\u0008").replace(/\\:/g,':').replace(/\\n/g,'\n').replace(/\u0008/g,"\\")}u=p.join("\u0008");return u};S.prototype._serializePcpFields=function(p,m,P){var s="",f="",a="";if(m==='string'){a='text'}else if(m==='blob'||m==='arraybuffer'){a='binary'}if(p&&typeof p==='object'){for(f in p){if(p.hasOwnProperty(f)&&f.indexOf('pcp-')!==0){s+=this._escape(f)+":"+this._escape(String(p[f]))+"\n"}}}return"pcp-action:"+P+"\npcp-body-type:"+a+"\n"+s+"\n"};S.prototype._escape=function(u){return u.replace(/\\/g,'\\\\').replace(/:/g,'\\:').replace(/\n/g,'\\n')};S.prototype.send=function(m,p){var M=typeof m,P="";P=this._serializePcpFields(p,M,S._MESSAGE);W.prototype.send.call(this,P+m);return this};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientContextBinding')){jQuery.sap.declare('sap.ui.model.ClientContextBinding');sap.ui.define("sap/ui/model/ClientContextBinding",['jquery.sap.global','./ContextBinding'],function(q,C){"use strict";var a=C.extend("sap.ui.model.ClientContextBinding",{constructor:function(m,p,c,P,e){C.call(this,m,p,c,P,e);var t=this;m.createBindingContext(p,c,P,function(c){t.bInitial=false;t.oElementContext=c})}});a.prototype.refresh=function(f){var t=this;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){if(t.oElementContext===c&&!f){t.oModel.checkUpdate(true,c)}else{t.oElementContext=c;t._fireChange()}},true)};a.prototype.initialize=function(){var t=this;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange()},true)};a.prototype.setContext=function(c){var t=this;if(this.oContext!=c){this.oContext=c;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange()})}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientListBinding')){jQuery.sap.declare('sap.ui.model.ClientListBinding');sap.ui.define("sap/ui/model/ClientListBinding",['jquery.sap.global','./FilterType','./ListBinding'],function(q,F,L){"use strict";var C=L.extend("sap.ui.model.ClientListBinding",{constructor:function(m,p,c,s,f,P){L.apply(this,arguments);this.bIgnoreSuspend=false;this.update()},metadata:{publicMethods:["getLength"]}});C.prototype._getContexts=function(s,l){if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var e=Math.min(s+l,this.aIndices.length),c,a=[],p=this.oModel.resolve(this.sPath,this.oContext);if(p&&!q.sap.endsWith(p,"/")){p+="/"}for(var i=s;i<e;i++){c=this.oModel.getContext(p+this.aIndices[i]);a.push(c)}return a};C.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.update();this._fireChange({reason:sap.ui.model.ChangeReason.Context})}}};C.prototype.getLength=function(){return this.iLength};C.prototype._getLength=function(){return this.aIndices.length};C.prototype.updateIndices=function(){this.aIndices=[];for(var i=0;i<this.oList.length;i++){this.aIndices.push(i)}};C.prototype.sort=function(s){if(!s){this.aSorters=null;this.updateIndices();this.applyFilter()}else{if(s instanceof sap.ui.model.Sorter){s=[s]}this.aSorters=s;this.applySort()}this.bIgnoreSuspend=true;this._fireChange({reason:sap.ui.model.ChangeReason.Sort});this._fireSort({sorter:s});this.bIgnoreSuspend=false;return this};C.prototype.applySort=function(){var t=this,s=[],c=[],v,S;if(!this.aSorters||this.aSorters.length==0){return}for(var j=0;j<this.aSorters.length;j++){S=this.aSorters[j];c[j]=S.fnCompare;if(!c[j]){c[j]=function(a,b){if(b==null){return-1}if(a==null){return 1}if(typeof a=="string"&&typeof b=="string"){return a.localeCompare(b)}if(a<b){return-1}if(a>b){return 1}return 0}}q.each(this.aIndices,function(i,I){v=t.oModel.getProperty(S.sPath,t.oList[I]);if(typeof v=="string"){v=v.toLocaleUpperCase()}if(!s[j]){s[j]=[]}s[j][I]=v})}this.aIndices.sort(function(a,b){var d=s[0][a],e=s[0][b];return t._applySortCompare(a,b,d,e,s,c,0)})};C.prototype._applySortCompare=function(a,b,v,c,s,d,D){var S=this.aSorters[D],f=d[D],r;r=f(v,c);if(S.bDescending){r=-r}if(r==0&&this.aSorters[D+1]){v=s[D+1][a],c=s[D+1][b];r=this._applySortCompare(a,b,v,c,s,d,D+1)}return r};C.prototype.filter=function(f,s){this.updateIndices();if(f instanceof sap.ui.model.Filter){f=[f]}if(s==F.Application){this.aApplicationFilters=f||[]}else if(s==F.Control){this.aFilters=f||[]}else{this.aFilters=f||[];this.aApplicationFilters=[]}f=this.aFilters.concat(this.aApplicationFilters);if(f.length==0){this.aFilters=[];this.aApplicationFilters=[];this.iLength=this._getLength()}else{this.applyFilter()}this.applySort();this.bIgnoreSuspend=true;this._fireChange({reason:sap.ui.model.ChangeReason.Filter});if(s==F.Application){this._fireFilter({filters:this.aApplicationFilters})}else{this._fireFilter({filters:this.aFilters})}this.bIgnoreSuspend=false;return this};C.prototype.normalizeFilterValue=function(v){if(typeof v=="string"){return v.toUpperCase()}if(v instanceof Date){return v.getTime()}return v};C.prototype.applyFilter=function(){if(!this.aFilters){return}var t=this,f={},a,b=[],g=false,c=true,d=this.aFilters.concat(this.aApplicationFilters);q.each(d,function(j,o){if(o.sPath!==undefined){a=f[o.sPath];if(!a){a=f[o.sPath]=[]}}else{a=f["__multiFilter"];if(!a){a=f["__multiFilter"]=[]}}a.push(o)});q.each(this.aIndices,function(i,I){c=true;q.each(f,function(p,a){if(p!=="__multiFilter"){var v=t.oModel.getProperty(p,t.oList[I]);v=t.normalizeFilterValue(v);g=false;q.each(a,function(j,o){var T=t.getFilterFunction(o);if(v!=undefined&&T(v)){g=true;return false}})}else{g=false;q.each(a,function(j,o){g=t._resolveMultiFilter(o,I);if(g){return false}})}if(!g){c=false;return false}});if(c){b.push(I)}});this.aIndices=b;this.iLength=b.length};C.prototype._resolveMultiFilter=function(m,I){var t=this,M=false,f=m.aFilters;if(f){q.each(f,function(i,o){var l=false;if(o._bMultiFilter){l=t._resolveMultiFilter(o,I)}else if(o.sPath!==undefined){var v=t.oModel.getProperty(o.sPath,t.oList[I]);v=t.normalizeFilterValue(v);var T=t.getFilterFunction(o);if(v!=undefined&&T(v)){l=true}}if(l&&m.bAnd){M=true}else if(!l&&m.bAnd){M=false;return false}else if(l){M=true;return false}})}return M};C.prototype.getFilterFunction=function(f){if(f.fnTest){return f.fnTest}var v=this.normalizeFilterValue(f.oValue1),V=this.normalizeFilterValue(f.oValue2);switch(f.sOperator){case"EQ":f.fnTest=function(a){return a==v};break;case"NE":f.fnTest=function(a){return a!=v};break;case"LT":f.fnTest=function(a){return a<v};break;case"LE":f.fnTest=function(a){return a<=v};break;case"GT":f.fnTest=function(a){return a>v};break;case"GE":f.fnTest=function(a){return a>=v};break;case"BT":f.fnTest=function(a){return(a>=v)&&(a<=V)};break;case"Contains":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"Contains\".")}return a.indexOf(v)!=-1};break;case"StartsWith":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"StartsWith\".")}return a.indexOf(v)==0};break;case"EndsWith":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"EndsWith\".")}var p=a.lastIndexOf(v);if(p==-1){return false}return p==a.length-new String(f.oValue1).length};break;default:f.fnTest=function(a){return true}}return f.fnTest};C.prototype.getDistinctValues=function(p){var r=[],m={},v,t=this;q.each(this.oList,function(i,c){v=t.oModel.getProperty(p,c);if(!m[v]){m[v]=true;r.push(v)}});return r};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientTreeBinding')){jQuery.sap.declare('sap.ui.model.ClientTreeBinding');sap.ui.define("sap/ui/model/ClientTreeBinding",['jquery.sap.global','./TreeBinding'],function(q,T){"use strict";var C=T.extend("sap.ui.model.ClientTreeBinding",{constructor:function(m,p,c,f,P){T.apply(this,arguments);if(!this.oContext){this.oContext=""}this.filterInfo={};this.filterInfo.aFilteredContexts=[];this.filterInfo.oParentContext={};if(this.aFilters){if(this.oModel._getObject(this.sPath,this.oContext)){this.filter(f)}}}});C.prototype.getRootContexts=function(){if(!this.oModel.isList(this.sPath)){var c=this.oModel.getContext(this.sPath);if(this.bDisplayRootNode){return[c]}else{return this.getNodeContexts(c)}}else{var a=[],t=this;q.each(this.oModel._getObject(this.sPath),function(i,o){t._saveSubContext(o,a,t.sPath+(q.sap.endsWith(t.sPath,"/")?"":"/"),i)});return a}};C.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],t=this,n=this.oModel._getObject(s),o,A=this.mParameters&&this.mParameters.arrayNames,b;if(A&&q.isArray(A)){q.each(A,function(i,d){b=n[d];if(b){q.each(b,function(S,e){t._saveSubContext(e,a,s,d+"/"+S)})}})}else{if(n){q.sap.each(n,function(N,o){if(q.isArray(o)){q.each(o,function(S,d){t._saveSubContext(d,a,s,N+"/"+S)})}else if(typeof o=="object"){t._saveSubContext(o,a,s,N)}})}}return a};C.prototype.hasChildren=function(c){return c?this.getNodeContexts(c).length>0:false};C.prototype._saveSubContext=function(n,c,s,N){if(typeof n=="object"){var o=this.oModel.getContext(s+N);if(this.aFilters&&!this.bIsFiltering){if(q.inArray(o,this.filterInfo.aFilteredContexts)!=-1){c.push(o)}}else{c.push(o)}}};C.prototype.filter=function(f){this.filterInfo.aFilteredContexts=[];this.filterInfo.oParentContext={};if(!f||!q.isArray(f)||f.length==0){this.aFilters=null}else{this.aFilters=f;var c=new sap.ui.model.Context(this.oModel,this.sPath);this.filterRecursive(c)}this._fireChange({reason:"filter"});this._fireFilter({filters:f})};C.prototype.filterRecursive=function(p){this.bIsFiltering=true;var c=this.getNodeContexts(p);this.bIsFiltering=false;if(c.length>0){var t=this;q.each(c,function(i,o){t.filterRecursive(o)});this.applyFilter(p)}};C.prototype.applyFilter=function(p){if(!this.aFilters){return}var t=this,f={},F,a=[],g=false,b=true;this.bIsFiltering=true;var u=this.getNodeContexts(p);this.bIsFiltering=false;q.each(t.aFilters,function(j,o){if(o.sPath){F=f[o.sPath];if(!F){F=f[o.sPath]=[]}}else{F=f["__multiFilter"];if(!F){F=f["__multiFilter"]=[]}}F.push(o)});q.each(u,function(i,U){b=true;q.each(f,function(P,F){if(P!=="__multiFilter"){var v=t.oModel._getObject(P,U);if(typeof v=="string"){v=v.toUpperCase()}g=false;q.each(F,function(j,o){var c=t.getFilterFunction(o);if(v!=undefined&&c(v)){g=true;return false}})}else{g=false;q.each(F,function(j,o){g=t._resolveMultiFilter(o,U);if(g){return false}})}if(!g){b=false;return false}});if(b){a.push(U)}});if(a.length>0){q.merge(this.filterInfo.aFilteredContexts,a);this.filterInfo.aFilteredContexts.push(p);this.filterInfo.oParentContext=p}if(q.inArray(this.filterInfo.oParentContext,u)!=-1){this.filterInfo.aFilteredContexts.push(p);this.filterInfo.oParentContext=p}};C.prototype._resolveMultiFilter=function(m,u){var t=this,M=false,f=m.aFilters;if(f){q.each(f,function(i,F){var l=false;if(F._bMultiFilter){l=t._resolveMultiFilter(F,u)}else if(F.sPath){var v=t.oModel.getProperty(F.sPath,u);if(typeof v=="string"){v=v.toUpperCase()}var a=t.getFilterFunction(F);if(v!=undefined&&a(v)){l=true}}if(l&&m.bAnd){M=true}else if(!l&&m.bAnd){M=false;return false}else if(l){M=true;return false}})}return M};C.prototype.getFilterFunction=function(f){if(f.fnTest){return f.fnTest}var v=f.oValue1,V=f.oValue2;if(typeof v=="string"){v=v.toUpperCase()}if(typeof V=="string"){V=V.toUpperCase()}switch(f.sOperator){case"EQ":f.fnTest=function(a){return a==v};break;case"NE":f.fnTest=function(a){return a!=v};break;case"LT":f.fnTest=function(a){return a<v};break;case"LE":f.fnTest=function(a){return a<=v};break;case"GT":f.fnTest=function(a){return a>v};break;case"GE":f.fnTest=function(a){return a>=v};break;case"BT":f.fnTest=function(a){return(a>v)&&(a<V)};break;case"Contains":f.fnTest=function(a){return a.indexOf(v)!=-1};break;case"StartsWith":f.fnTest=function(a){return a.indexOf(v)==0};break;case"EndsWith":f.fnTest=function(a){return a.indexOf(v)==a.length-new String(f.oValue1).length};break;default:f.fnTest=function(a){return true}}return f.fnTest};C.prototype.checkUpdate=function(f){this._fireChange()};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.PropertyBinding')){jQuery.sap.declare('sap.ui.model.PropertyBinding');sap.ui.define("sap/ui/model/PropertyBinding",['jquery.sap.global','./Binding','./SimpleType'],function(q,B,S){"use strict";var P=B.extend("sap.ui.model.PropertyBinding",{constructor:function(m,p,c,a){B.apply(this,arguments)},metadata:{"abstract":true,publicMethods:["getValue","setValue","setType","getType","setFormatter","getFormatter","getExternalValue","setExternalValue","getBindingMode"]}});P.prototype.getExternalValue=function(){var v=this.getValue();if(this.oType){v=this.oType.formatValue(v,this.sInternalType)}if(this.fnFormatter){v=this.fnFormatter(v)}return v};P.prototype.setExternalValue=function(v){if(this.fnFormatter){return}if(this.oType){v=this.oType.parseValue(v,this.sInternalType);this.oType.validateValue(v)}this.setValue(v)};P.prototype.setType=function(t,i){this.oType=t;this.sInternalType=i};P.prototype.getType=function(){return this.oType};P.prototype.setFormatter=function(f){this.fnFormatter=f};P.prototype.getFormatter=function(){return this.fnFormatter};P.prototype.getBindingMode=function(){return this.sMode};P.prototype.setBindingMode=function(b){this.sMode=b};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.model.control.ControlPropertyBinding')){jQuery.sap.declare('sap.ui.model.control.ControlPropertyBinding');sap.ui.define("sap/ui/model/control/ControlPropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding'],function(q,P){"use strict";var C=P.extend("sap.ui.model.control.ControlPropertyBinding",{constructor:function(m,p,c){P.apply(this,arguments);this.oValue=this._getValue()}});C.prototype.getValue=function(){return this.oValue};C.prototype.setValue=function(v){this.oValue=v;this.oContext.setProperty(this.sPath,v)};C.prototype._getValue=function(){return this.oContext.getProperty(this.sPath)};C.prototype.setContext=function(c){this.oContext=c;this.checkUpdate()};C.prototype.checkUpdate=function(){var v=this._getValue();if(v!==this.oValue){this.oValue=v;this._fireChange()}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONListBinding')){jQuery.sap.declare('sap.ui.model.json.JSONListBinding');sap.ui.define("sap/ui/model/json/JSONListBinding",['jquery.sap.global','sap/ui/model/ChangeReason','sap/ui/model/ClientListBinding'],function(q,C,a){"use strict";var J=a.extend("sap.ui.model.json.JSONListBinding");J.prototype.getContexts=function(s,l){this.iLastStartIndex=s;this.iLastLength=l;if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var c=this._getContexts(s,l),o={};if(this.bUseExtendedChangeDetection){for(var i=0;i<c.length;i++){o[c[i].getPath()]=c[i].getObject()}if(this.aLastContexts&&s<this.iLastEndIndex){var t=this;var d=q.sap.arrayDiff(this.aLastContexts,c,function(O,n){return q.sap.equal(O&&t.oLastContextData&&t.oLastContextData[O.getPath()],n&&o&&o[n.getPath()])});c.diff=d}this.iLastEndIndex=s+l;this.aLastContexts=c.slice(0);this.oLastContextData=q.extend(true,{},o)}return c};J.prototype.update=function(){var l=this.oModel._getObject(this.sPath,this.oContext);if(l&&q.isArray(l)){if(this.bUseExtendedChangeDetection){this.oList=q.extend(true,[],l)}else{this.oList=l.slice(0)}this.updateIndices();this.applyFilter();this.applySort();this.iLength=this._getLength()}else{this.oList=[];this.aIndices=[];this.iLength=0}};J.prototype.checkUpdate=function(f){if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!this.bUseExtendedChangeDetection){var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)||f){this.update();this._fireChange({reason:C.Change})}}else{var c=false;var t=this;var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)){this.update()}var b=this._getContexts(this.iLastStartIndex,this.iLastLength);if(this.aLastContexts){if(this.aLastContexts.length!=b.length){c=true}else{q.each(this.aLastContexts,function(i,o){if(!q.sap.equal(b[i].getObject(),t.oLastContextData[o.getPath()])){c=true;return false}})}}else{c=true}if(c||f){this._fireChange({reason:C.Change})}}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONTreeBinding')){jQuery.sap.declare('sap.ui.model.json.JSONTreeBinding');sap.ui.define("sap/ui/model/json/JSONTreeBinding",['jquery.sap.global','sap/ui/model/ClientTreeBinding'],function(q,C){"use strict";var J=C.extend("sap.ui.model.json.JSONTreeBinding");J.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],t=this,n=this.oModel._getObject(s),o,A=this.mParameters&&this.mParameters.arrayNames,b;if(n){if(A&&q.isArray(A)){q.each(A,function(i,d){b=n[d];if(b){q.each(b,function(S,e){t._saveSubContext(e,a,s,d+"/"+S)})}})}else{q.sap.each(n,function(N,o){if(q.isArray(o)){q.each(o,function(S,d){t._saveSubContext(d,a,s,N+"/"+S)})}else if(o&&typeof o=="object"){t._saveSubContext(o,a,s,N)}})}}return a};J.prototype._saveSubContext=function(n,c,s,N){if(typeof n=="object"){var o=this.oModel.getContext(s+N);if(this.aFilters&&!this.bIsFiltering){if(q.inArray(o,this.filterInfo.aFilteredContexts)!=-1){c.push(o)}}else{c.push(o)}}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataListBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataListBinding');sap.ui.define("sap/ui/model/odata/ODataListBinding",['jquery.sap.global','sap/ui/core/format/DateFormat','sap/ui/model/FilterType','sap/ui/model/ListBinding','./ODataUtils','./CountMode','./Filter'],function(q,D,F,L,O,C,a){"use strict";var b=L.extend("sap.ui.model.odata.ODataListBinding",{constructor:function(m,p,c,s,f,P){L.apply(this,arguments);this.sFilterParams=null;this.sSortParams=null;this.sRangeParams=null;this.sCustomParams=this.oModel.createCustomParams(this.mParameters);this.iStartIndex=0;this.bPendingChange=false;this.aKeys=[];this.bInitial=true;this.sCountMode=(P&&P.countMode)||this.oModel.sDefaultCountMode;this.bRefresh=false;this.bNeedsUpdate=false;this.bDataAvailable=false;this.bIgnoreSuspend=false;if(!this.oModel.getServiceMetadata()){var t=this,d=function(e){t.bInitial=false;t._initSortersFilters();t.oModel.detachMetadataLoaded(d)};this.oModel.attachMetadataLoaded(this,d)}else{this.bInitial=false;this._initSortersFilters()}var r=this.oModel._getObject(this.sPath,this.oContext);this.aExpandRefs=r;if(q.isArray(r)&&!s&&!f){this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;this.bDataAvailable=true}else if(r===null&&this.oModel.resolve(this.sPath,this.oContext)){this.aKeys=[];this.iLength=0;this.bLengthFinal=true;this.bDataAvailable=true}else{if(this.oModel.getServiceMetadata()){this.resetData()}}}});b.prototype.getContexts=function(s,l,t){if(this.bInitial){return[]}this.iLastLength=l;this.iLastStartIndex=s;this.iLastThreshold=t;if(!s){s=0}if(!l){l=this.oModel.iSizeLimit;if(this.bLengthFinal&&this.iLength<l){l=this.iLength}}if(!t){t=0}var c=true,d=this._getContexts(s,l),o={},S;S=this.calculateSection(s,l,t,d);c=d.length!=l&&!(this.bLengthFinal&&d.length>=this.iLength-s);if(this.oModel.getServiceMetadata()){if(!this.bPendingRequest&&S.length>0&&(c||l<S.length)){this.loadData(S.startIndex,S.length);d.dataRequested=true}}if(this.bRefresh){if(this.bLengthFinal&&this.iLength==0){this.loadData(S.startIndex,S.length,true);d.dataRequested=true}this.bRefresh=false}else{for(var i=0;i<d.length;i++){o[d[i].getPath()]=d[i].getObject()}if(this.bUseExtendedChangeDetection){if(this.aLastContexts&&s<this.iLastEndIndex){var e=this;var f=q.sap.arrayDiff(this.aLastContexts,d,function(g,n){return q.sap.equal(g&&e.oLastContextData&&e.oLastContextData[g.getPath()],n&&o&&o[n.getPath()])});d.diff=f}}this.iLastEndIndex=s+l;this.aLastContexts=d.slice(0);this.oLastContextData=q.extend(true,{},o)}return d};b.prototype._getContexts=function(s,l){var c=[],o,k;if(!s){s=0}if(!l){l=this.oModel.iSizeLimit;if(this.bLengthFinal&&this.iLength<l){l=this.iLength}}for(var i=s;i<s+l;i++){k=this.aKeys[i];if(!k){break}o=this.oModel.getContext('/'+k);c.push(o)}return c};b.prototype.calculateSection=function(s,l,t,c){var d=false,S,e,p,P,r,o={},k;e=s;S=0;for(var i=s;i>=Math.max(s-t,0);i--){k=this.aKeys[i];if(!k){P=i+1;break}}for(var j=s+l;j<s+l+t;j++){k=this.aKeys[j];if(!k){p=j;break}}r=s-P;if(P&&s>t&&r<t){if(c.length!=l){e=s-t}else{e=P-t}S=t}if(e==s){e+=c.length}if(c.length!=l){S+=l-c.length}r=p-s-l;if(r==0){S+=t}if(p&&r<t&&r>0){if(e>s){e=p;S+=t}}if(this.bLengthFinal&&this.iLength<(S+e)){S=this.iLength-e}o.startIndex=e;o.length=S;return o};b.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this._initSortersFilters();if(!this.bInitial){var r=this.oModel._getObject(this.sPath,this.oContext);this.aExpandRefs=r;if(q.isArray(r)&&!this.aSorters.length>0&&!this.aFilters.length>0){this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;this._fireChange()}else if(r===null&&this.oModel.resolve(this.sPath,this.oContext)){this.aKeys=[];this.iLength=0;this.bLengthFinal=true;this._fireChange()}else{this.refresh()}}}}};b.prototype.getDownloadUrl=function(f){var p=[],P;if(f){p.push("$format="+encodeURIComponent(f))}if(this.sSortParams){p.push(this.sSortParams)}if(this.sFilterParams){p.push(this.sFilterParams)}if(this.sCustomParams){p.push(this.sCustomParams)}P=this.oModel.resolve(this.sPath,this.oContext);if(P){return this.oModel._createRequestUrl(P,null,p)}};b.prototype.loadData=function(s,l,p){var t=this,I=false;if(s||l){this.sRangeParams="$skip="+s+"&$top="+l;this.iStartIndex=s}else{s=this.iStartIndex}var P=[];if(this.sRangeParams){P.push(this.sRangeParams)}if(this.sSortParams){P.push(this.sSortParams)}if(this.sFilterParams){P.push(this.sFilterParams)}if(this.sCustomParams){P.push(this.sCustomParams)}if(!this.bLengthFinal&&(this.sCountMode==C.Inline||this.sCountMode==C.Both)){P.push("$inlinecount=allpages");I=true}function S(f){q.each(f.results,function(i,g){t.aKeys[s+i]=t.oModel._getKey(g)});if(I&&f.__count){t.iLength=parseInt(f.__count,10);t.bLengthFinal=true}if(t.iLength<s+f.results.length){t.iLength=s+f.results.length;t.bLengthFinal=false}if(f.results.length<l||l===undefined){t.iLength=s+f.results.length;t.bLengthFinal=true}if(s==0&&f.results.length==0){t.iLength=0;t.bLengthFinal=true}t.oRequestHandle=null;t.bPendingRequest=false;t.bNeedsUpdate=true;t.bIgnoreSuspend=true}function c(f){t.fireDataReceived({data:f})}function e(E,A){t.oRequestHandle=null;t.bPendingRequest=false;if(!A){t.aKeys=[];t.iLength=0;t.bLengthFinal=true;t.bDataAvailable=true;t._fireChange({reason:sap.ui.model.ChangeReason.Change})}t.fireDataReceived()}function u(h){t.oRequestHandle=h}var d=this.sPath,o=this.oContext;if(this.isRelative()){d=this.oModel.resolve(d,o)}if(d){if(p){var U=this.oModel._createRequestUrl(d,null,P);this.fireDataRequested();this.oModel.fireRequestSent({url:U,method:"GET",async:true});setTimeout(function(){t.bNeedsUpdate=true;t.checkUpdate();t.oModel.fireRequestCompleted({url:U,method:"GET",async:true,success:true});t.fireDataReceived()},0)}else{this.bPendingRequest=true;this.fireDataRequested();this.oModel._loadData(d,P,S,e,false,u,c)}}};b.prototype.getLength=function(){if(this.bLengthFinal){return this.iLength}else{var A=this.iLastThreshold||this.iLastLength||10;return this.iLength+A}};b.prototype.isLengthFinal=function(){return this.bLengthFinal};b.prototype._getLength=function(){var t=this;var p=[];if(this.sFilterParams){p.push(this.sFilterParams)}if(this.mParameters&&this.mParameters.custom){var c={custom:{}};q.each(this.mParameters.custom,function(s,v){c.custom[s]=v});p.push(this.oModel.createCustomParams(c))}function _(o){t.iLength=parseInt(o,10);t.bLengthFinal=true}function d(e){var E="Request for $count failed: "+e.message;if(e.response){E+=", "+e.response.statusCode+", "+e.response.statusText+", "+e.response.body}q.sap.log.warning(E)}var P=this.oModel.resolve(this.sPath,this.oContext);if(P){var u=this.oModel._createRequestUrl(P+"/$count",null,p);var r=this.oModel._createRequest(u,"GET",false);r.headers["Accept"]="text/plain, */*;q=0.5";this.oModel._request(r,_,d,undefined,undefined,this.oModel.getServiceMetadata())}};b.prototype.refresh=function(f,c,e){var d=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e)){d=true}}if(c&&!d){q.each(this.aKeys,function(i,k){if(k in c){d=true;return false}})}if(!c&&!e){d=true}}if(f||d){this.abortPendingRequest();this.resetData();this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}};b.prototype._fireRefresh=function(A){if(this.oModel.resolve(this.sPath,this.oContext)){this.bRefresh=true;this.fireEvent("refresh",A)}};b.prototype.initialize=function(){if(this.oModel.oMetadata.isLoaded()){if(this.bDataAvailable){this._fireChange({reason:sap.ui.model.ChangeReason.Change})}else{this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}}};b.prototype.checkUpdate=function(f,c){var d=this.sChangeReason?this.sChangeReason:sap.ui.model.ChangeReason.Change,e=false,l,o,t=this,r,R;if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!f&&!this.bNeedsUpdate){r=this.oModel._getObject(this.sPath,this.oContext);R=q.isArray(r)&&!q.sap.equal(r,this.aExpandRefs);this.aExpandRefs=r;if(R){if(this.aSorters.length>0||this.aFilters.length>0){this.refresh();return}else{this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;e=true}}else if(c){q.each(this.aKeys,function(i,k){if(k in c){e=true;return false}})}else{e=true}if(e&&this.aLastContexts){e=false;var g=this._getContexts(this.iLastStartIndex,this.iLastLength,this.iLastThreshold);if(this.aLastContexts.length!=g.length){e=true}else{q.each(this.aLastContexts,function(i,h){l=t.oLastContextData[h.getPath()];o=g[i].getObject();if(!q.sap.equal(l,o,3,true)){e=true;return false}})}}}if(f||e||this.bNeedsUpdate){this.bNeedsUpdate=false;this._fireChange({reason:d})}this.sChangeReason=undefined;this.bIgnoreSuspend=false};b.prototype.resetData=function(){this.aKeys=[];this.iLength=0;this.bLengthFinal=false;this.sChangeReason=undefined;this.bDataAvailable=false;if(this.oModel.isCountSupported()&&(this.sCountMode==C.Request||this.sCountMode==C.Both)){this._getLength()}};b.prototype.abortPendingRequest=function(){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}};b.prototype.sort=function(s){if(s instanceof sap.ui.model.Sorter){s=[s]}this.aSorters=s;this.createSortParams(s);this.abortPendingRequest();this.aKeys=[];if(!this.bInitial){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}this.sChangeReason=sap.ui.model.ChangeReason.Sort;this._fireRefresh({reason:this.sChangeReason});this._fireSort({sorter:s})}return this};b.prototype.createSortParams=function(s){this.sSortParams=O.createSortParams(s)};b.prototype.filter=function(f,s){if(!f){f=[]}if(f instanceof sap.ui.model.Filter){f=[f]}if(s==F.Application){this.aApplicationFilters=f}else{this.aFilters=f}if(!f||!q.isArray(f)||f.length==0){this.aFilters=[]}if(!this.aApplicationFilters||!q.isArray(this.aApplicationFilters)||this.aApplicationFilters.length===0){this.aApplicationFilters=[]}this.createFilterParams(this.aFilters,this.aApplicationFilters);this.abortPendingRequest();this.resetData();if(!this.bInitial){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}this.sChangeReason=sap.ui.model.ChangeReason.Filter;this._fireRefresh({reason:this.sChangeReason});if(s==F.Application){this._fireFilter({filters:this.aApplicationFilters})}else{this._fireFilter({filters:this.aFilters})}}return this};b.prototype.createFilterParams=function(c,A){var f,s=O._createFilterParams(c,this.oModel.oMetadata,this.oEntityType),d=O._createFilterParams(A,this.oModel.oMetadata,this.oEntityType);if(s){f=s}if(d){if(s){f="("+f+")"+"%20and%20"+"("+d+")"}else{f=d}}if(f){this.sFilterParams="$filter="+f}else{this.sFilterParams=undefined}};b.prototype._initSortersFilters=function(){var r=this.oModel.resolve(this.sPath,this.oContext);if(!r){return}this.oEntityType=this._getEntityType();this.createSortParams(this.aSorters);this.createFilterParams(this.aFilters.concat(this.aApplicationFilters))};b.prototype._getEntityType=function(){var r=this.oModel.resolve(this.sPath,this.oContext);if(r){var e=this.oModel.oMetadata._getEntityTypeByPath(r);return e}return undefined};b.prototype.resume=function(){this.bIgnoreSuspend=false;L.prototype.resume.apply(this,arguments)};return b},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataPropertyBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataPropertyBinding');sap.ui.define("sap/ui/model/odata/ODataPropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding'],function(q,P){"use strict";var O=P.extend("sap.ui.model.odata.ODataPropertyBinding",{constructor:function(m,p,c,a){P.apply(this,arguments);this.oValue=this._getValue()}});O.prototype.initialize=function(){if(this.oModel.oMetadata.isLoaded()){this.checkUpdate(true)}};O.prototype.getValue=function(){return this.oValue};O.prototype._getValue=function(){return this.oModel._getObject(this.sPath,this.oContext)};O.prototype.setValue=function(v){if(this.oValue!=v){if(!this.oModel.setProperty(this.sPath,v,this.oContext)){this._fireChange()}}};O.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.checkUpdate()}}};O.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.resource.ResourcePropertyBinding')){jQuery.sap.declare('sap.ui.model.resource.ResourcePropertyBinding');sap.ui.define("sap/ui/model/resource/ResourcePropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding','sap/ui/model/ChangeReason'],function(q,P,C){"use strict";var R=P.extend("sap.ui.model.resource.ResourcePropertyBinding",{constructor:function(m,p){P.apply(this,arguments);this.oValue=this.oModel.getProperty(p)}});R.prototype.getValue=function(){return this.oValue};R.prototype.checkUpdate=function(f){if(!this.bSuspended){var v=this.oModel.getProperty(this.sPath);if(f||v!=this.oValue){this.oValue=v;this._fireChange({reason:C.Change})}}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLListBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLListBinding');sap.ui.define("sap/ui/model/xml/XMLListBinding",['jquery.sap.global','sap/ui/model/ChangeReason','sap/ui/model/ClientListBinding'],function(q,C,a){"use strict";var X=a.extend("sap.ui.model.xml.XMLListBinding");X.prototype.getContexts=function(s,l){this.iLastStartIndex=s;this.iLastLength=l;if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var c=this._getContexts(s,l),o={};if(this.bUseExtendedChangeDetection){for(var i=0;i<c.length;i++){o[c[i].getPath()]=this.oModel._getObject(c[i].getPath())[0]}if(this.aLastContexts&&s<this.iLastEndIndex){var t=this;var d=q.sap.arrayDiff(this.aLastContexts,c,function(O,n){var b=t.oLastContextData&&t.oLastContextData[O.getPath()];var N=o&&o[n.getPath()];if(b&&N){return q.sap.isEqualNode(b,N)}return false});c.diff=d}this.iLastEndIndex=s+l;this.aLastContexts=c.slice(0);this.oLastContextData={};var t=this;q.each(o,function(k,n){t.oLastContextData[k]=n.cloneNode(true)})}return c};X.prototype.update=function(){var l=this.oModel._getObject(this.sPath,this.oContext);if(l){this.oList=[];var t=this;if(this.bUseExtendedChangeDetection){q.each(l,function(k,n){t.oList.push(n.cloneNode(true))})}else{this.oList=l.slice(0)}this.updateIndices();this.applyFilter();this.applySort();this.iLength=this._getLength()}else{this.oList=[];this.aIndices=[];this.iLength=0}};X.prototype.checkUpdate=function(f){if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!this.bUseExtendedChangeDetection){var l=this.oModel._getObject(this.sPath,this.oContext);if(!this.oList||!l||l.length!=this.oList.length||f){this.update();this._fireChange({reason:C.Change})}}else{var c=false;var t=this;var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)){this.update()}var b=this._getContexts(this.iLastStartIndex,this.iLastLength);if(this.aLastContexts){if(this.aLastContexts.length!=b.length){c=true}else{q.each(this.aLastContexts,function(i,o){var n=b[i].getObject();var O=t.oLastContextData&&t.oLastContextData[o.getPath()];if(n&&O&&!O.isEqualNode(n)){c=true;return false}})}}else{c=true}if(c||f){this._fireChange({reason:C.Change})}}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLTreeBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLTreeBinding');sap.ui.define("sap/ui/model/xml/XMLTreeBinding",['jquery.sap.global','sap/ui/model/ClientTreeBinding'],function(q,C){"use strict";var X=C.extend("sap.ui.model.xml.XMLTreeBinding");X.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],n={},t=this,N=this.oModel._getObject(c.getPath()),o,b,d;q.each(N[0].childNodes,function(e,o){if(o.nodeType==1){if(n[o.nodeName]==undefined){n[o.nodeName]=0}else{n[o.nodeName]++}b=s+o.nodeName+"/"+n[o.nodeName];d=t.oModel.getContext(b);if(t.aFilters&&!t.bIsFiltering){if(q.inArray(d,t.filterInfo.aFilteredContexts)!=-1){a.push(d)}}else{a.push(d)}}});return a};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.ViewSerializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.ViewSerializer');sap.ui.define("sap/ui/core/util/serializer/ViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./HTMLViewSerializer','./Serializer','./XMLViewSerializer'],function(q,E,H,S,X){"use strict";var V=E.extend("sap.ui.core.util.serializer.ViewSerializer",{constructor:function(r,w,d){E.apply(this);this._oRootControl=r;this._oWindow=w||window;this._mViews={};this._sDefaultXmlNamespace=d}});V.prototype.serializeToXML=function(){return this.serialize("XML")};V.prototype.serializeToHTML=function(){return this.serialize("HTML")};V.prototype.serialize=function(c){this._mViews={};this._sConvertToViewType=c||undefined;return this._serializeRecursive(this._oRootControl)};V.prototype._getViewType=function(v){if(!this._sConvertToViewType){if(v instanceof this._oWindow.sap.ui.core.mvc.HTMLView){return"HTML"}else if(v instanceof this._oWindow.sap.ui.core.mvc.XMLView){return"XML"}}return this._sConvertToViewType};V.prototype._serializeRecursive=function(c){if(c instanceof this._oWindow.sap.ui.core.mvc.View){var v=this._getViewSerializer(c,this._getViewType(c));if(v){var o=c.getViewName()||c.getControllerName();if(!this._mViews[o]){this._mViews[o]=v.serialize(this._getViewType(c))}}}if(c.getMetadata().getClass()===this._oWindow.sap.ui.core.UIArea){var C=c.getContent();for(var i=0;i<C.length;i++){this._serializeRecursive(C[i])}}else if(c.getMetadata().getClass()===this._oWindow.sap.ui.core.ComponentContainer){this._serializeRecursive(c.getComponentInstance().getAggregation("rootControl"))}else{var a=c.getMetadata().getAllAggregations();if(a){for(var n in a){var A=a[n];var b=c[A._sGetter]();if(b&&b.length){for(var i=0;i<b.length;i++){var O=b[i];if(O instanceof this._oWindow.sap.ui.core.Element){this._serializeRecursive(O)}}}else if(b instanceof this._oWindow.sap.ui.core.Element){this._serializeRecursive(b)}}}}return this._mViews};V.prototype._getViewSerializer=function(v,t){var g=function(e){if(e.fFunction&&e.fFunction._sapui_handlerName){var h=e.fFunction._sapui_handlerName;var c=v.getController();if(c[h]){return h}}};var G=function(c){if(c._sapui_controlId){return c._sapui_controlId}return c.getId().replace(v.createId(""),"")};if(t==="HTML"){return new H(v,this._oWindow,G,g)}else if(t==="XML"){return new X(v,this._oWindow,this._sDefaultXmlNamespace,G,g)}else{var t=(v)?v.constructor:"?";throw Error("View type '"+t+"' is not supported for conversion. Only HTML and XML is supported")}};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientPropertyBinding')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.model.ClientPropertyBinding');sap.ui.define("sap/ui/model/ClientPropertyBinding",['jquery.sap.global','./PropertyBinding'],function(q,P){"use strict";var C=P.extend("sap.ui.model.ClientPropertyBinding",{constructor:function(m,p,c,a){P.apply(this,arguments);this.oValue=this._getValue()}});C.prototype.getValue=function(){return this.oValue};C.prototype._getValue=function(){var p=this.sPath.substr(this.sPath.lastIndexOf("/")+1);if(p=="__name__"){var a=this.oContext.split("/");return a[a.length-1]}return this.oModel.getProperty(this.sPath,this.oContext)};C.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.checkUpdate()}}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.CompositeBinding')){jQuery.sap.declare('sap.ui.model.CompositeBinding');sap.ui.define("sap/ui/model/CompositeBinding",['jquery.sap.global','./PropertyBinding','./SimpleType'],function(q,P,S){"use strict";var C=P.extend("sap.ui.model.CompositeBinding",{constructor:function(b,r){P.apply(this,[null,""]);var t=this;this.aBindings=b;this.bRawValues=r},metadata:{publicMethods:["getBindings","attachChange","detachChange"]}});C.prototype.getPath=function(){return null};C.prototype.getModel=function(){return null};C.prototype.getContext=function(){return null};C.prototype.getType=function(){return null};C.prototype.setContext=function(c){q.each(this.aBindings,function(i,b){if(!c||b.updateRequired(c.getModel())){b.setContext(c)}})};C.prototype.setValue=function(v){throw new sap.ui.base.Exception("Composite Binding does not support setValue because it contains multiple property bindings!")};C.prototype.getValue=function(){var v=[],V;q.each(this.aBindings,function(i,b){V=b.getValue();v.push(V)});return v};C.prototype.getExternalValue=function(){var v=[],V;if(this.bRawValues){v=this.getValue()}else{q.each(this.aBindings,function(i,b){V=b.getExternalValue();v.push(V)})}if(this.fnFormatter){V=this.fnFormatter.apply(this,v)}else{if(v.length>1){V=v.join(" ")}else{V=v[0]}}return V};C.prototype.setExternalValue=function(v){throw new sap.ui.base.Exception("Composite Binding does not support setExternalValue because it contains multiple property bindings!")};C.prototype.getBindings=function(){return this.aBindings};C.prototype.attachChange=function(f,l){this.attachEvent("change",f,l);if(this.aBindings){var t=this;q.each(this.aBindings,function(i,b){b.attachChange(t.checkUpdate,t)})}};C.prototype.detachChange=function(f,l){this.detachEvent("change",f,l);if(this.aBindings){var t=this;q.each(this.aBindings,function(i,b){b.detachChange(t.checkUpdate,t)})}};C.prototype.updateRequired=function(m){var u=false;q.each(this.aBindings,function(i,b){u=u||b.updateRequired(m)});return u};C.prototype.checkUpdate=function(f){var v=this.getExternalValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.control.ControlModel')){jQuery.sap.declare('sap.ui.model.control.ControlModel');sap.ui.define("sap/ui/model/control/ControlModel",['jquery.sap.global','sap/ui/model/Model','./ControlPropertyBinding'],function(q,M,C){"use strict";var a=M.extend("sap.ui.model.control.ControlModel",{constructor:function(c){M.apply(this,arguments);this.oControl=c;this.oControl.attachEvent("_change",this.checkUpdate,this);this.oElements=[]}});a.prototype.destroy=function(){this.oControl.detachEvent("_change",this.checkUpdate,this)};a.prototype.addFacadeComponent=function(e){var i=q.inArray(e,this.oElements);if(i<0){this.oElements.push(e);e.attachEvent("_change",this.checkUpdate,this)}};a.prototype.removeFacadeComponent=function(e){var i=q.inArray(e,this.oElements);if(i>=0){this.oElements.splice(i,1);e.detachEvent("_change",this.checkUpdate,this)}};a.prototype.bindProperty=function(p,c){c=c||this.oControl;if(c!==this.oControl){this.addFacadeComponent(c)}return new C(this,p,c)};a.prototype.checkUpdate=function(e){if(this._onchange){this._onchange(e)}if(this.aBindings.length){var b=this.aBindings.slice(0);q.each(b,function(i,B){B.checkUpdate()})}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONPropertyBinding')){jQuery.sap.declare('sap.ui.model.json.JSONPropertyBinding');sap.ui.define("sap/ui/model/json/JSONPropertyBinding",['jquery.sap.global','sap/ui/model/ClientPropertyBinding'],function(q,C){"use strict";var J=C.extend("sap.ui.model.json.JSONPropertyBinding");J.prototype.setValue=function(v){if(!q.sap.equal(this.oValue,v)){this.oModel.setProperty(this.sPath,v,this.oContext)}};J.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataModel')){jQuery.sap.declare('sap.ui.model.odata.ODataModel');jQuery.sap.require('sap.ui.thirdparty.datajs');sap.ui.define("sap/ui/model/odata/ODataModel",['jquery.sap.global','sap/ui/model/Model','./ODataUtils','./CountMode','./ODataContextBinding','./ODataListBinding','./ODataMetadata','./ODataPropertyBinding','./ODataTreeBinding','sap/ui/thirdparty/URI','sap/ui/thirdparty/datajs'],function(q,M,O,C,a,b,c,d,e,U,f){"use strict";var g=M.extend("sap.ui.model.odata.ODataModel",{constructor:function(s,j,u,p,h,t,w,l){M.apply(this,arguments);var i,r,m,A=null,L,k,n,D,S,o,v=this;if(typeof j==="object"){u=j.user;p=j.password;h=j.headers;t=j.tokenHandling;l=j.loadMetadataAsync;w=j.withCredentials;m=j.maxDataServiceVersion;i=j.useBatch;r=j.refreshAfterChange;A=j.annotationURI;L=j.loadAnnotationsJoined;D=j.defaultCountMode;n=j.metadataNamespaces;S=j.serviceUrlParams;o=j.metadataUrlParams;j=j.json}this.sDefaultBindingMode=sap.ui.model.BindingMode.OneWay;this.mSupportedBindingModes={"OneWay":true,"OneTime":true,"TwoWay":true};this.bCountSupported=true;this.bJSON=j;this.bCache=true;this.aPendingRequestHandles=[];this.oRequestQueue={};this.aBatchOperations=[];this.oHandler;this.bTokenHandling=t!==false;this.bWithCredentials=w===true;this.bUseBatch=i===true;this.bRefreshAfterChange=r!==false;this.sMaxDataServiceVersion=m;this.bLoadMetadataAsync=!!l;this.bLoadAnnotationsJoined=L===undefined?true:L;this.sAnnotationURI=A;this.sDefaultCountMode=D||C.Both;this.oMetadataLoadEvent=null;this.oMetadataFailedEvent=null;if(this.sAnnotationURI){q.sap.require("sap.ui.model.odata.ODataAnnotations")}this.oHeaders={};this.setHeaders(h);this.oData={};this.oMetadata=null;this.oAnnotations=null;this.aUrlParams=[];if(s.indexOf("?")==-1){this.sServiceUrl=s}else{var x=s.split("?");this.sServiceUrl=x[0];this.aUrlParams.push(x[1])}if(sap.ui.getCore().getConfiguration().getStatistics()){this.aUrlParams.push("sap-statistics=true")}this.sServiceUrl=this.sServiceUrl.replace(/\/$/,"");this.oServiceData=g.mServiceData[this.sServiceUrl];if(!this.oServiceData){g.mServiceData[this.sServiceUrl]={};this.oServiceData=g.mServiceData[this.sServiceUrl]}if(this.bTokenHandling&&this.oServiceData.securityToken){this.oHeaders["x-csrf-token"]=this.oServiceData.securityToken}this.sUser=u;this.sPassword=p;this.oHeaders["Accept-Language"]=sap.ui.getCore().getConfiguration().getLanguage();if(!this.oServiceData.oMetadata){this.oMetadata=new sap.ui.model.odata.ODataMetadata(this._createRequestUrl("$metadata",undefined,o),{async:this.bLoadMetadataAsync,user:this.sUser,password:this.sPassword,headers:this.mCustomHeaders,namespaces:n,withCredentials:this.bWithCredentials});v.oServiceData.oMetadata=v.oMetadata}else{this.oMetadata=this.oServiceData.oMetadata}if(S){this.aUrlParams=this.aUrlParams.concat(O._createUrlParamsArray(S))}if(!this.oMetadata.isLoaded()){this.oMetadata.attachLoaded(function(E){v._initializeMetadata();v.initialize()},this);this.oMetadata.attachFailed(this.fireMetadataFailed,this)}if(this.sAnnotationURI){this.oAnnotations=new sap.ui.model.odata.ODataAnnotations(this.sAnnotationURI,this.oMetadata,{async:this.bLoadMetadataAsync});this.oAnnotations.attachFailed(this.fireAnnotationsFailed,this);this.oAnnotations.attachLoaded(this.fireAnnotationsLoaded,this)}if(this.oMetadata.isLoaded()){this._initializeMetadata(true)}if(this.bJSON){if(this.sMaxDataServiceVersion==="3.0"){this.oHeaders["Accept"]="application/json;odata=fullmetadata"}else{this.oHeaders["Accept"]="application/json"}this.oHandler=OData.jsonHandler}else{this.oHeaders["Accept"]="application/atom+xml,application/atomsvc+xml,application/xml";this.oHandler=OData.atomHandler}this.oHeaders["MaxDataServiceVersion"]="2.0";if(this.sMaxDataServiceVersion){this.oHeaders["MaxDataServiceVersion"]=this.sMaxDataServiceVersion}this.oHeaders["DataServiceVersion"]="2.0"},metadata:{publicMethods:["create","remove","update","submitChanges","getServiceMetadata","read","hasPendingChanges","refresh","resetChanges","isCountSupported","setCountSupported","setDefaultCountMode","getDefaultCountMode","forceNoCache","setProperty","refreshSecurityToken","setHeaders","getHeaders","setUseBatch"]}});g.M_EVENTS={RejectChange:"rejectChange",MetadataLoaded:"metadataLoaded",MetadataFailed:"metadataFailed",AnnotationsLoaded:"annotationsLoaded",AnnotationsFailed:"annotationsFailed"};g.mServiceData={};g.prototype.fireRejectChange=function(A){this.fireEvent("rejectChange",A);return this};g.prototype.attachRejectChange=function(D,F,l){this.attachEvent("rejectChange",D,F,l);return this};g.prototype.detachRejectChange=function(F,l){this.detachEvent("rejectChange",F,l);return this};g.prototype._initializeMetadata=function(D){var t=this;this.bUseBatch=this.bUseBatch||this.oMetadata.getUseBatch();var h=function(i){if(!!i){t.metadataLoadEvent=q.sap.delayedCall(0,t,h)}else{t.fireMetadataLoaded({metadata:t.oMetadata});q.sap.log.debug("ODataModel fired metadataloaded")}};if(this.bLoadMetadataAsync&&this.sAnnotationURI&&this.bLoadAnnotationsJoined){if(this.oAnnotations&&this.oAnnotations.bInitialized){h()}else{this.oAnnotations.attachLoaded(function(){h()},this)}}else{h(D)}};g.prototype.fireAnnotationsLoaded=function(A){this.fireEvent("annotationsLoaded",A);return this};g.prototype.attachAnnotationsLoaded=function(D,F,l){this.attachEvent("annotationsLoaded",D,F,l);return this};g.prototype.detachAnnotationsLoaded=function(F,l){this.detachEvent("annotationsLoaded",F,l);return this};g.prototype.fireAnnotationsFailed=function(A){this.fireEvent("annotationsFailed",A);q.sap.log.debug("ODataModel fired annotationsfailed");return this};g.prototype.attachAnnotationsFailed=function(D,F,l){this.attachEvent("annotationsFailed",D,F,l);return this};g.prototype.detachAnnotationsFailed=function(F,l){this.detachEvent("annotationsFailed",F,l);return this};g.prototype.fireMetadataLoaded=function(A){this.fireEvent("metadataLoaded",A);return this};g.prototype.attachMetadataLoaded=function(D,F,l){this.attachEvent("metadataLoaded",D,F,l);return this};g.prototype.detachMetadataLoaded=function(F,l){this.detachEvent("metadataLoaded",F,l);return this};g.prototype.fireMetadataFailed=function(A){this.fireEvent("metadataFailed",A);return this};g.prototype.attachMetadataFailed=function(D,F,l){this.attachEvent("metadataFailed",D,F,l);return this};g.prototype.detachMetadataFailed=function(F,l){this.detachEvent("metadataFailed",F,l);return this};g.prototype._createRequestUrl=function(p,o,u,B,h){var i,r,s,j="";if(p&&p.indexOf('?')!=-1){s=p.substr(p.indexOf('?')+1);p=p.substr(0,p.indexOf('?'))}r=this._normalizePath(p,o);if(!B){j=this.sServiceUrl+r}else{j=r.substr(r.indexOf('/')+1)}i=O._createUrlParamsArray(u);if(this.aUrlParams){i=i.concat(this.aUrlParams)}if(s){i.push(s)}if(i.length>0){j+="?"+i.join("&")}if(h===undefined){h=true}if(h===false){var t=q.now();var k=j.replace(/([?&])_=[^&]*/,"$1_="+t);j=k+((k===j)?(/\?/.test(j)?"&":"?")+"_="+t:"")}return j};g.prototype._loadData=function(p,P,s,E,h,H,i){var r,R,o,t=this;function _(D,m){var n=D,v={};if(!n){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+m.requestUri);t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:false});return false}if(t.bUseBatch){var w=t._getBatchErrors(D);if(w.length>0){j(w[0]);return false}if(n.__batchResponses&&n.__batchResponses.length>0){n=n.__batchResponses[0].data}else{q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+m.requestUri)}}l=l.concat(n.results);if(n.__next){var x=new URI(n.__next);o.requestUri=x.absoluteTo(m.requestUri).toString();k(o)}else{q.extend(n.results,l);if(n.results&&!q.isArray(n.results)){n=n.results}t._importData(n,v);if(t.sChangeKey&&v){var y=t.sChangeKey.substr(t.sChangeKey.lastIndexOf('/')+1);if(v[y]){delete t.oRequestQueue[t.sChangeKey];t.sChangeKey=null}}if(s){s(n)}t.checkUpdate(false,v);if(i){i(n)}t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:true})}}function j(m){if(t.bTokenHandling&&m.response){var T=t._getHeader("x-csrf-token",m.response.headers);if(!o.bTokenReset&&m.response.statusCode=='403'&&T&&T.toLowerCase()=="required"){t.resetSecurityToken();o.bTokenReset=true;k();return}}var n=t._handleError(m);if(E){E(m,r&&r.bAborted)}t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:false,errorobject:n});if(!r||!r.bAborted){n.url=o.requestUri;t.fireRequestFailed(n)}}function k(){if(t.bUseBatch){t.updateSecurityToken();var m=URI.parse(o.requestUri).query;var n=t._createRequestUrl(p,null,m,t.bUseBatch);o=t._createRequest(n,"GET",true);var B=t._createBatchRequest([o],true);r=t._request(B,_,j,OData.batchHandler,undefined,t.getServiceMetadata())}else{r=t._request(o,_,j,t.oHandler,undefined,t.getServiceMetadata())}if(H){var w={abort:function(){r.bAborted=true;r.abort()}};H(w)}}var l=[];var u=this._createRequestUrl(p,null,P,null,h||this.bCache);o=this._createRequest(u,"GET",true);this.fireRequestSent({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+this.oHeaders["Accept"],infoObject:{acceptHeaders:this.oHeaders["Accept"]}});k()};g.prototype._importData=function(D,k){var t=this,l,K,r,E;if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._importData(h,k))});return l}else{K=this._getKey(D);E=this.oData[K];if(!E){E=D;this.oData[K]=E}q.each(D,function(n,p){if(p&&(p.__metadata&&p.__metadata.uri||p.results)&&!p.__deferred){r=t._importData(p,k);if(q.isArray(r)){E[n]={__list:r}}else{E[n]={__ref:r}}}else if(!p||!p.__deferred){E[n]=p}});k[K]=true;return K}};g.prototype._removeReferences=function(D){var t=this,l;if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._removeReferences(h))});return l}else{q.each(D,function(p,o){if(o){if(o["__ref"]||o["__list"]){delete D[p]}}});return D}};g.prototype._restoreReferences=function(D){var t=this,o,l,r=[];if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._restoreReferences(h))});return l}else{q.each(D,function(p,o){if(o&&o["__ref"]){var h=t._getObject("/"+o["__ref"]);if(h){delete o["__ref"];D[p]=h;t._restoreReferences(h)}}else if(o&&o["__list"]){q.each(o["__list"],function(j,E){var h=t._getObject("/"+o["__list"][j]);if(h){r.push(h);t._restoreReferences(h)}});delete o["__list"];o.results=r;r=[]}});return D}};g.prototype.removeData=function(){this.oData={}};g.prototype.initialize=function(){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.initialize()})};g.prototype.refresh=function(F,r){if(r){this.removeData()}this._refresh(F)};g.prototype._refresh=function(F,m,E){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.refresh(F,m,E)})};g.prototype.checkUpdate=function(F,m){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.checkUpdate(F,m)})};g.prototype.bindProperty=function(p,o,P){var B=new d(this,p,o,P);return B};g.prototype.bindList=function(p,o,s,F,P){var B=new b(this,p,o,s,F,P);return B};g.prototype.bindTree=function(p,o,F,P){var B=new e(this,p,o,F,P);return B};g.prototype.createBindingContext=function(p,o,P,h,r){var r=!!r,F=this.resolve(p,o);if(typeof o=="function"){h=o;o=null}if(typeof P=="function"){h=P;P=null}var D=this._getObject(p,o),k,n,t=this;if(!r){r=this._isReloadNeeded(F,D,P)}if(!r){k=this._getKey(D);n=this.getContext('/'+k);h(n)}else{var i=!q.sap.startsWith(p,"/");if(F){var j=[],s=this.createCustomParams(P);if(s){j.push(s)}this._loadData(F,j,function(D){k=D?t._getKey(D):undefined;if(k&&o&&i){var l=o.getPath();l=l.substr(1);if(t.oData[l]){t.oData[l][p]={__ref:k}}}n=t.getContext('/'+k);h(n)},function(){h(null)})}else{h(null)}}};g.prototype._isReloadNeeded=function(F,D,p){var n,N=[],h,s,S=[];if(!D){return true}if(p&&p["expand"]){n=p["expand"].replace(/\s/g,"");N=n.split(',')}if(N){for(var i=0;i<N.length;i++){var j=N[i].indexOf("/");if(j!==-1){var k=N[i].slice(0,j);var l=N[i].slice(j+1);N[i]=[k,l]}}}for(var i=0;i<N.length;i++){var m=N[i];if(q.isArray(m)){var o=D[m[0]];var r=m[1];if(!o||(o&&o.__deferred)){return true}else{if(o){if(o.__list&&o.__list.length>0){for(var t=0;t<o.__list.length;t++){var P="/"+o.__list[t];var u=this.getObject(P);var R=this._isReloadNeeded(P,u,{expand:r});if(R){return true}}}else if(o.__ref){var P="/"+o.__ref;var u=this.getObject(P);var R=this._isReloadNeeded(P,u,{expand:r});if(R){return true}}}}}else{if(D[m]===undefined||(D[m]&&D[m].__deferred)){return true}}}if(p&&p["select"]){s=p["select"].replace(/\s/g,"");S=s.split(',')}for(var i=0;i<S.length;i++){if(D[S[i]]===undefined){return true}}if(S.length==0){var E=this.oMetadata._getEntityTypeByPath(F);if(!E){return false}else{for(var i=0;i<E.property.length;i++){if(D[E.property[i].name]===undefined){return true}}}}return false};g.prototype.destroyBindingContext=function(o){};g.prototype.createCustomParams=function(p){var h=[],m,s={expand:true,select:true};for(var n in p){if(n in s){h.push("$"+n+"="+q.sap.encodeURL(p[n]))}if(n=="custom"){m=p[n];for(var n in m){if(n.indexOf("$")==0){q.sap.log.warning("Trying to set OData parameter "+n+" as custom query option!")}else{h.push(n+"="+q.sap.encodeURL(m[n]))}}}}return h.join("&")};g.prototype.bindContext=function(p,o,P){var B=new a(this,p,o,P);return B};g.prototype.setCountSupported=function(h){this.bCountSupported=h};g.prototype.isCountSupported=function(){return this.bCountSupported};g.prototype.setDefaultCountMode=function(s){this.sDefaultCountMode=s};g.prototype.getDefaultCountMode=function(){return this.sDefaultCountMode};g.prototype._getKey=function(o,D){var k,u;if(o instanceof sap.ui.model.Context){k=o.getPath().substr(1)}else if(o&&o.__metadata&&o.__metadata.uri){u=o.__metadata.uri;k=u.substr(u.lastIndexOf("/")+1)}if(D)k=decodeURIComponent(k);return k};g.prototype.getKey=function(o,D){return this._getKey(o,D)};g.prototype.createKey=function(s,k,D){var E=this.oMetadata._getEntityTypeByPath(s),K=s,t=this,h,n,v,p;K+="(";if(E.key.propertyRef.length==1){n=E.key.propertyRef[0].name;p=this.oMetadata._getPropertyMetadata(E,n);v=O.formatValue(k[n],p.type);K+=D?v:encodeURIComponent(v)}else{q.each(E.key.propertyRef,function(i,P){if(i>0)K+=",";n=P.name;p=t.oMetadata._getPropertyMetadata(E,n);v=O.formatValue(k[n],p.type);K+=n;K+="=";K+=D?v:encodeURIComponent(v)})}K+=")";return K};g.prototype.getProperty=function(p,o,i){var v=this._getObject(p,o);if(i==null||i==undefined){return v}if(!q.isPlainObject(v)){return v}v=q.extend(true,{},v);if(i==true){return this._restoreReferences(v)}else{return this._removeReferences(v)}};g.prototype._getObject=function(p,o){var n=this.isLegacySyntax()?this.oData:null,r,k;if(this.oMetadata&&p&&p.indexOf('#')>-1){r=this.resolve(p,o);if(r){n=this.oMetadata._getAnnotation(r)}}else{if(o){k=o.getPath();k=k.substr(1);n=this.oData[k]}if(!p){return n}var P=p.split("/"),i=0;if(!P[0]){n=this.oData;i++}while(n&&P[i]){n=n[P[i]];if(n){if(n.__ref){n=this.oData[n.__ref]}else if(n.__list){n=n.__list}else if(n.__deferred){n=undefined}}i++}}return n};g.prototype.updateSecurityToken=function(){if(this.bTokenHandling){if(!this.oServiceData.securityToken){this.refreshSecurityToken()}if(this.bTokenHandling){this.oHeaders["x-csrf-token"]=this.oServiceData.securityToken}}};g.prototype.resetSecurityToken=function(){delete this.oServiceData.securityToken;delete this.oHeaders["x-csrf-token"]};g.prototype.refreshSecurityToken=function(s,E,A){var t=this,u,T;A=A===true;u=this._createRequestUrl("/");var r=this._createRequest(u,"GET",A);r.headers["x-csrf-token"]="Fetch";function _(D,R){if(R){T=t._getHeader("x-csrf-token",R.headers);if(T){t.oServiceData.securityToken=T;t.oHeaders["x-csrf-token"]=T}else{t.resetSecurityToken();t.bTokenHandling=false}}if(s){s(D,R)}}function h(o){t.resetSecurityToken();t.bTokenHandling=false;t._handleError(o);if(E){E(o)}}return this._request(r,_,h,undefined,undefined,this.getServiceMetadata())};g.prototype._submitRequest=function(r,B,s,E,h,i){var t=this,R,m={};function _(D,o){if(B&&h){var l=t._getBatchErrors(D);if(l.length>0){j(l[0]);return false}if(D.__batchResponses&&D.__batchResponses.length>0){R=D.__batchResponses[0].data;if(!R&&D.__batchResponses[0].__changeResponses){R=D.__batchResponses[0].__changeResponses[0].data}}D=R}if(i){if(D&&D.__batchResponses){q.each(D.__batchResponses,function(I,o){if(o&&o.data){t._importData(o.data,m)}})}}t._handleETag(r,o,B);t._updateRequestQueue(r,B);if(t._isRefreshNeeded(r,o)){t._refresh(false,r.keys,r.entityTypes)}if(s){s(D,o)}}function j(o){if(t.bTokenHandling&&o.response){var T=t._getHeader("x-csrf-token",o.response.headers);if(!r.bTokenReset&&o.response.statusCode=='403'&&T&&T.toLowerCase()=="required"){t.resetSecurityToken();r.bTokenReset=true;k();return}}t._handleError(o);if(E){E(o)}}function k(){if(t.bTokenHandling&&r.method!=="GET"){t.updateSecurityToken();if(t.bTokenHandling){r.headers["x-csrf-token"]=t.oServiceData.securityToken}}if(B){return t._request(r,_,j,OData.batchHandler,undefined,t.getServiceMetadata())}else{return t._request(r,_,j,t.oHandler,undefined,t.getServiceMetadata())}}return k()};g.prototype._createBatchRequest=function(B,A){var u,r,o={},p={},h=[],K={},E={};p.__batchRequests=B;u=this.sServiceUrl+"/$batch";if(this.aUrlParams){u+="?"+this.aUrlParams.join("&")}q.extend(o,this.mCustomHeaders,this.oHeaders);delete o["Content-Type"];r={headers:o,requestUri:u,method:"POST",data:p,user:this.sUser,password:this.sPassword,async:A};if(A){r.withCredentials=this.bWithCredentials}q.each(B,function(i,m){if(m["__changeRequests"]){q.each(m["__changeRequests"],function(j,n){if(n.keys&&n.method!="POST"){q.each(n.keys,function(k,s){K[k]=s})}else if(n.entityTypes&&n.method=="POST"){q.each(n.entityTypes,function(l,s){E[l]=s})}})}});r.keys=K;r.entityTypes=E;return r};g.prototype._handleETag=function(r,R,B){var u,E,h,k,l,m;if(B){l=r.data.__batchRequests;m=R.data.__batchResponses;if(m&&l){for(var i=0;i<l.length;i++){h=l[i].__changeRequests;if(m[i]){k=m[i].__changeResponses;if(h&&k){for(var j=0;j<h.length;j++){if(h[j].method=="MERGE"||h[j].method=="PUT"){u=h[j].requestUri.replace(this.sServiceUrl+'/','');if(!q.sap.startsWith(u,"/")){u="/"+u}E=this._getObject(u);if(E&&E.__metadata&&k[j].headers&&k[j].headers.ETag){E.__metadata.etag=k[j].headers.ETag}}}}}else{q.sap.log.warning("could not update ETags for batch request: corresponding response for request missing")}}}else{q.sap.log.warning("could not update ETags for batch request: no batch responses/requests available")}}else{u=r.requestUri.replace(this.sServiceUrl+'/','');if(!q.sap.startsWith(u,"/")){u="/"+u}E=this._getObject(u);if(E&&E.__metadata&&R.headers.ETag){E.__metadata.etag=R.headers.ETag}}};g.prototype._handleBatchErrors=function(r,D){var E=[];E=this._getBatchErrors(D);this._handleETag()};g.prototype._getBatchErrors=function(D){var E=[],s;q.each(D.__batchResponses,function(i,o){if(o.message){s="The following problem occurred: "+o.message;if(o.response){s+=o.response.statusCode+","+o.response.statusText+","+o.response.body}E.push(o);q.sap.log.fatal(s)}if(o.__changeResponses){q.each(o.__changeResponses,function(i,h){if(h.message){s="The following problem occurred: "+h.message;if(h.response){s+=h.response.statusCode+","+h.response.statusText+","+h.response.body}E.push(h);q.sap.log.fatal(s)}})}});return E};g.prototype._handleError=function(E){var p={},h,t;var s="The following problem occurred: "+E.message;p.message=E.message;if(E.response){if(this.bTokenHandling){t=this._getHeader("x-csrf-token",E.response.headers);if(E.response.statusCode=='403'&&t&&t.toLowerCase()=="required"){this.resetSecurityToken()}}s+=E.response.statusCode+","+E.response.statusText+","+E.response.body;p.statusCode=E.response.statusCode;p.statusText=E.response.statusText;p.responseText=E.response.body}q.sap.log.fatal(s);return p};g.prototype.getData=function(p,o,i){return this.getProperty(p,o,i)};g.prototype._getETag=function(p,P,E){var s,h,i;if(E){s=E}else{if(P&&P.__metadata){s=P.__metadata.etag}else if(p){h=p.replace(this.sServiceUrl+'/','');i=h.indexOf("?");if(i>-1){h=h.substr(0,i)}if(this.oData.hasOwnProperty(h)){s=this.getProperty('/'+h+'/__metadata/etag')}}}return s};g.prototype._createRequest=function(u,m,A,p,E){var o={},s;q.extend(o,this.mCustomHeaders,this.oHeaders);s=this._getETag(u,p,E);if(s&&m!="GET"){o["If-Match"]=s}if(this.bJSON&&m!="DELETE"&&this.sMaxDataServiceVersion==="2.0"){o["Content-Type"]="application/json"}if(m=="MERGE"&&!this.bUseBatch){o["x-http-method"]="MERGE";m="POST"}var r={headers:o,requestUri:u,method:m,user:this.sUser,password:this.sPassword,async:A};if(p){r.data=p}if(A){r.withCredentials=this.bWithCredentials}return r};g.prototype._isRefreshNeeded=function(r,R){var h=false,E,i=[],t=this;if(!this.bRefreshAfterChange){return h}if(r.data&&q.isArray(r.data.__batchRequests)){if(R){i=t._getBatchErrors(R.data);q.each(i,function(I,o){if(o.response&&o.response.statusCode=="412"){E=o.response.statusCode;return false}});if(!!E){return false}}q.each(r.data.__batchRequests,function(I,B){if(q.isArray(B.__changeRequests)){q.each(B.__changeRequests,function(I,o){h=h||t._isRefreshNeeded(o);return!h})}return!h})}else{if(r.method==="GET"){return false}else{if(R&&R.statusCode=="412"){h=false}else{h=true}}}return h};g.prototype.update=function(p,D,P){var s,E,m,r,u,o,h,R,B,i,S,k,j,A=false;if(P instanceof sap.ui.model.Context||arguments.length>3){o=P;s=arguments[3];E=arguments[4];m=arguments[5]}else{o=P.context||P.oContext;s=P.success||P.fnSuccess;E=P.error||P.fnError;h=P.eTag||P.sETag;m=typeof(P.merge)=="undefined"?P.bMerge===true:P.merge===true;A=typeof(P.async)=="undefined"?P.bAsync===true:P.async===true;j=P.urlParameters}u=this._createRequestUrl(p,o,j,this.bUseBatch);if(m){r=this._createRequest(u,"MERGE",A,D,h)}else{r=this._createRequest(u,"PUT",A,D,h)}p=this._normalizePath(p,o);S=this._getObject(p);r.keys={};if(S){k=this._getKey(S);r.keys[k]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R};g.prototype.create=function(p,D,P){var r,B,u,R,s,E,o,S,h,A=false,m;if(P&&typeof(P)=="object"&&!(P instanceof sap.ui.model.Context)){o=P.context;S=P.success;m=P.urlParameters;h=P.error;A=P.async===true}else{o=P;S=arguments[3];h=arguments[4]}u=this._createRequestUrl(p,o,m,this.bUseBatch);r=this._createRequest(u,"POST",A,D);p=this._normalizePath(p,o);E=this.oMetadata._getEntityTypeByPath(p);r.entityTypes={};if(E){r.entityTypes[E.entityType]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,S,h,true)}else{R=this._submitRequest(r,this.bUseBatch,S,h)}return R};g.prototype.remove=function(p,P){var o,E,s,S,h,r,u,i,k,j,_,B,R,l,m,A=false,t=this;if((P&&P instanceof sap.ui.model.Context)||arguments[2]){o=P;S=arguments[2];h=arguments[3]}else if(P){o=P.context||P.oContext;S=P.success||P.fnSuccess;h=P.error||P.fnError;i=P.eTag||P.sETag;j=P.payload||P.oPayload;A=typeof(P.async)=="undefined"?P.bAsync===true:P.async===true;m=P.urlParameters}_=function(D,n){E=u.substr(u.lastIndexOf('/')+1);if(E.indexOf('?')!=-1){E=E.substr(0,E.indexOf('?'))}delete t.oData[E];delete t.mContexts["/"+E];if(S){S(D,n)}};u=this._createRequestUrl(p,o,m,this.bUseBatch);r=this._createRequest(u,"DELETE",A,j,i);p=this._normalizePath(p,o);s=this._getObject(p);r.keys={};if(s){k=this._getKey(s);r.keys[k]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,_,h,true)}else{R=this._submitRequest(r,this.bUseBatch,_,h)}return R};g.prototype.callFunction=function(F,p){var r,B,u,R,o,P,h,s,E,A,m="GET",i={},t=this;if(p&&typeof(p)=="object"){m=p.method?p.method:m;P=p.urlParameters;h=p.context;s=p.success;E=p.error;A=p.async===true}else{m=p;P=arguments[2];h=arguments[3];s=arguments[4];E=arguments[5];A=arguments[6]===true}o=this.oMetadata._getFunctionImportMetadata(F,m);if(o){u=this._createRequestUrl(F,h,null,this.bUseBatch);var j=URI(u);if(o.parameter!=null){q.each(P,function(k,l){var n=q.grep(o.parameter,function(w){return w.name==k&&w.mode=="In"});if(n!=null&&n.length>0){var v=n[0];i[k]=O.formatValue(l,v.type)}else{q.sap.log.warning("Parameter "+k+" is not defined for function call "+F+"!")}})}if(m==="GET"){return t.read(F,h,i,true,s,E)}else{q.each(i,function(k,l){j.addQuery(k,l)});r=this._createRequest(j.toString(),m,A);if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R}}};g.prototype.read=function(p,P){var r,u,R,B,o,m,A,s,E,F,S,h,i,j,k,l,t=this;if(P&&typeof(P)=="object"&&!(P instanceof sap.ui.model.Context)){o=P.context;m=P.urlParameters;A=P.async!==false;s=P.success;E=P.error;F=P.filters;S=P.sorters}else{o=P;m=arguments[2];A=arguments[3]!==false;s=arguments[4];E=arguments[5]}A=A!==false;l=O._createUrlParamsArray(m);i=O.createSortParams(S);if(i){l.push(i)};if(F&&!this.oMetadata){q.sap.log.fatal("Tried to use filters in read method before metadata is available.")}else{k=this._normalizePath(p,o);j=this.oMetadata&&this.oMetadata._getEntityTypeByPath(k);h=O.createFilterParams(F,this.oMetadata,j);if(h){l.push(h)}}u=this._createRequestUrl(p,o,l,this.bUseBatch);r=this._createRequest(u,"GET",A);if(this.bUseBatch){B=this._createBatchRequest([r],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R};g.prototype.createBatchOperation=function(p,m,D,P){var o={},E,s,k,h;q.extend(o,this.mCustomHeaders,this.oHeaders);if(q.sap.startsWith(p,"/")){p=p.substr(1)}if(P){E=P.sETag}if(m!="GET"){E=this._getETag(p,D,E);if(E){o["If-Match"]=E}}if(this.bJSON){if(m!="DELETE"&&m!="GET"&&this.sMaxDataServiceVersion==="2.0"){o["Content-Type"]="application/json"}}else{o["Content-Type"]="application/atom+xml"}var r={requestUri:p,method:m.toUpperCase(),headers:o};if(D){r.data=D}if(m!="GET"&&m!="POST"){if(p&&p.indexOf("/")!=0){p='/'+p}s=this._getObject(p);if(s){k=this._getKey(s);r.keys={};r.keys[k]=true}}else if(m=="POST"){h=this.oMetadata._getEntityTypeByPath(p);if(h){r.entityTypes={};r.entityTypes[h.entityType]=true}}return r};g.prototype.addBatchReadOperations=function(r){if(!q.isArray(r)||r.length<=0){q.sap.log.warning("No array with batch operations provided!");return false}var t=this;q.each(r,function(i,R){if(R.method!="GET"){q.sap.log.warning("Batch operation should be a GET operation!");return false}t.aBatchOperations.push(R)})};g.prototype.addBatchChangeOperations=function(h){if(!q.isArray(h)||h.length<=0){return false}q.each(h,function(i,o){if(o.method!="POST"&&o.method!="PUT"&&o.method!="MERGE"&&o.method!="DELETE"){q.sap.log.warning("Batch operation should be a POST/PUT/MERGE/DELETE operation!");return false}});this.aBatchOperations.push({__changeRequests:h})};g.prototype.clearBatch=function(){this.aBatchOperations=[]};g.prototype.submitBatch=function(s,E,A,i){var r,u,R,t=this;function _(D,j){if(s){s(D,j,t._getBatchErrors(D))}}if(!(typeof(s)=="function")){var o=A;var h=E;A=s;s=h;E=o}A=A!==false;if(this.aBatchOperations.length<=0){q.sap.log.warning("No batch operations in batch. No request will be triggered!");return false}r=this._createBatchRequest(this.aBatchOperations,A);R=this._submitRequest(r,true,_,E,false,i);this.clearBatch();return R};g.prototype.getServiceMetadata=function(){if(this.oMetadata&&this.oMetadata.isLoaded()){return this.oMetadata.getServiceMetadata()}};g.prototype.getServiceAnnotations=function(){if(this.oAnnotations&&this.oAnnotations.getAnnotationsData){return this.oAnnotations.getAnnotationsData()}};g.prototype.submitChanges=function(s,E,p){var r,P,t=this,h,i,T,m,S,k;if(this.sChangeKey){h=this.sChangeKey.replace(this.sServiceUrl,'');S=this._getObject(h);P=S;if(q.isPlainObject(S)){P=q.extend(true,{},S);if(P.__metadata){T=P.__metadata.type;m=P.__metadata.etag;delete P.__metadata;if(T||m){P.__metadata={}}if(T){P.__metadata.type=T}if(!!m){P.__metadata.etag=m}}q.each(P,function(l,u){if(u&&u.__deferred){delete P[l]}});var o=this.oMetadata._getEntityTypeByPath(h);if(o){var n=this.oMetadata._getNavigationPropertyNames(o);q.each(n,function(I,N){delete P[N]})}P=this._removeReferences(P)}if(p&&p.sETag){i=p.sETag}r=this._createRequest(this.sChangeKey,"MERGE",true,P,i);if(this.sUrlParams){r.requestUri+="?"+this.sUrlParams}r.keys={};if(S){k=this._getKey(S);r.keys[k]=true}this.oRequestQueue[this.sChangeKey]=r}if(q.isEmptyObject(this.oRequestQueue)){return undefined}if(this.bUseBatch){var j=[];q.each(this.oRequestQueue,function(k,l){delete l._oRef;var R=q.extend(true,{},l);l._oRef=R;R.requestUri=R.requestUri.replace(t.sServiceUrl+'/','');R.data._bCreate?delete R.data._bCreate:false;j.push(R)});r=this._createBatchRequest([{__changeRequests:j}],true);this._submitRequest(r,this.bUseBatch,s,E,true)}else{q.each(this.oRequestQueue,function(k,l){delete l._oRef;var R=q.extend(true,{},l);l._oRef=R;if(R.data&&R.data._bCreate){delete R.data._bCreate}t._submitRequest(R,this.bUseBatch,s,E,true)})}return undefined};g.prototype._updateRequestQueue=function(r,B){var h,k,o,t=this;if(B){h=r.data.__batchRequests;if(h){for(var i=0;i<h.length;i++){k=h[i].__changeRequests;if(k){for(var j=0;j<k.length;j++){o=k[j];q.each(this.oRequestQueue,function(K,l){if(l._oRef===o&&K!==t.sChangeKey){delete t.oRequestQueue[K];delete t.oData[K];delete t.mContexts["/"+K]}else if(t.sChangeKey&&K===t.sChangeKey){delete t.oRequestQueue[K];t.sChangeKey=null}})}}}}}else{q.each(this.oRequestQueue,function(K,l){if(l._oRef===r&&K!==t.sChangeKey){delete t.oRequestQueue[K];delete t.oData[K];delete t.mContexts["/"+K]}else if(t.sChangeKey&&K===t.sChangeKey){delete t.oRequestQueue[K];t.sChangeKey=null}})}};g.prototype.resetChanges=function(s,E){var p;if(this.sChangeKey){p=this.sChangeKey.replace(this.sServiceUrl,'');this._loadData(p,null,s,E)}};g.prototype.setProperty=function(p,v,o){var P,E={},D={},s=this._createRequestUrl(p,o),h=p.substring(0,p.lastIndexOf("/")),k,j,m={},l=false;if(!this.resolve(p,o)){return false}s=s.replace(this.sServiceUrl+'/','');s=s.substring(0,s.indexOf("/"));s=this.sServiceUrl+'/'+s;P=p.substr(p.lastIndexOf("/")+1);D=this._getObject(h,o);if(!D){return false}j=h.split("/");for(var i=j.length-1;i>=0;i--){E=this._getObject(j.join("/"),o);if(E){k=this._getKey(E);if(k){break}}j.splice(i-1,1)}if(!k){k=this._getKey(o)}if(k){m[k]=true}if(D._bCreate){D[P]=v;l=true;this.checkUpdate(false,m)}else{if(!this.sChangeKey){this.sChangeKey=s}if(this.sChangeKey==s){D[P]=v;l=true;this.checkUpdate(false,m)}else{this.fireRejectChange({rejectedValue:v,oldValue:D[P]})}}return l};g.prototype._isHeaderPrivate=function(h){switch(h.toLowerCase()){case"accept":case"accept-language":case"maxdataserviceversion":case"dataserviceversion":return true;break;case"x-csrf-token":return this.bTokenHandling;break;default:return false}};g.prototype.setHeaders=function(h){var m={},t=this;if(h){q.each(h,function(H,s){if(t._isHeaderPrivate(H)){q.sap.log.warning("Not allowed to modify private header: "+H)}else{m[H]=s}});this.mCustomHeaders=m}else{this.mCustomHeaders={}}};g.prototype.getHeaders=function(){return q.extend({},this.mCustomHeaders,this.oHeaders)};g.prototype._getHeader=function(F,h){var H;for(H in h){if(H.toLowerCase()===F.toLowerCase()){return h[H]}}return null};g.prototype.hasPendingChanges=function(){return this.sChangeKey!=null};g.prototype.updateBindings=function(F){this.checkUpdate(F)};g.prototype.forceNoCache=function(F){this.bCache=!F};g.prototype.setTokenHandlingEnabled=function(t){this.bTokenHandling=t};g.prototype.setUseBatch=function(u){this.bUseBatch=u};g.prototype.formatValue=function(v,t){return O.formatValue(v,t)};g.prototype.deleteCreatedEntry=function(o){if(o){var p=o.getPath();delete this.mContexts[p];if(q.sap.startsWith(p,"/")){p=p.substr(1)}delete this.oRequestQueue[p];delete this.oData[p]}};g.prototype.createEntry=function(p,P){var E={},k,u,r;if(!q.sap.startsWith(p,"/")){p="/"+p}var o=this.oMetadata._getEntityTypeByPath(p);if(!o){return undefined}if(typeof P==="object"&&!q.isArray(P)){E=P}else{for(var i=0;i<o.property.length;i++){var h=o.property[i];var t=h.type.split('.');var j=q.inArray(h.name,P)>-1;if(!P||j){E[h.name]=this._createPropertyValue(t);if(j){P.splice(P.indexOf(h.name),1)}}}if(P){}}E._bCreate=true;k=p.substring(1)+"('"+q.sap.uid()+"')";this.oData[k]=E;E.__metadata={type:""+o.entityType};u=this._createRequestUrl(p);r=this._createRequest(u,"POST",true,E);r.entityTypes={};r.entityTypes[o.entityType]=true;this.oRequestQueue[k]=r;return this.getContext("/"+k)};g.prototype._createPropertyValue=function(t){var n=t[0];var T=t[1];if(n.toUpperCase()!=='EDM'){var o={};var h=this.oMetadata._getObjectMetadata("complexType",T,n);for(var i=0;i<h.property.length;i++){var p=h.property[i];var t=p.type.split('.');o[p.name]=this._createPropertyValue(t)}return o}else{return this._getDefaultPropertyValue(T,n)}};g.prototype._getDefaultPropertyValue=function(t,n){return undefined};g.prototype._normalizePath=function(p,o){if(p&&p.indexOf('?')!=-1){p=p.substr(0,p.indexOf('?'))}if(!o&&!q.sap.startsWith(p,"/")){p='/'+p;q.sap.log.warning("sPath should be absolute if no Context is set")}return this.resolve(p,o)};g.prototype.setRefreshAfterChange=function(r){this.bRefreshAfterChange=r};g.prototype.isList=function(p,o){var p=this.resolve(p,o);return p&&p.substr(p.lastIndexOf("/")).indexOf("(")===-1};g.prototype._request=function(r,s,E,h,H,m){if(this.bDestroyed){return{abort:function(){}}}var t=this;function w(i){return function(){var I=q.inArray(R,t.aPendingRequestHandles);if(I>-1){t.aPendingRequestHandles.splice(I,1)}if(!(R&&R.bSuppressErrorHandlerCall)){i.apply(this,arguments)}}}var R=OData.request(r,w(s||OData.defaultSuccess),w(E||OData.defaultError),h,H,m);if(r.async!==false){this.aPendingRequestHandles.push(R)}return R};g.prototype.destroy=function(){if(this.aPendingRequestHandles){for(var i=this.aPendingRequestHandles.length-1;i>=0;i--){var r=this.aPendingRequestHandles[i];if(r&&r.abort){r.bSuppressErrorHandlerCall=true;r.abort()}}delete this.aPendingRequestHandles}if(!!this.oMetadataLoadEvent){q.sap.clearDelayedCall(this.oMetadataLoadEvent)}if(!!this.oMetadataFailedEvent){q.sap.clearDelayedCall(this.oMetadataFailedEvent)}if(this.oMetadata){this.oMetadata.destroy();delete this.oMetadata}if(this.oAnnotations){this.oAnnotations.destroy();delete this.oAnnotations}M.prototype.destroy.apply(this,arguments)};return g},true)};if(!jQuery.sap.isDeclared('sap.ui.model.resource.ResourceModel')){jQuery.sap.declare('sap.ui.model.resource.ResourceModel');sap.ui.define("sap/ui/model/resource/ResourceModel",['jquery.sap.global','sap/ui/model/Model','./ResourcePropertyBinding'],function(q,M,R){"use strict";var a=M.extend("sap.ui.model.resource.ResourceModel",{constructor:function(d){M.apply(this,arguments);this.bAsync=!!(d&&d.async);this.sDefaultBindingMode=this.bAsync?sap.ui.model.BindingMode.OneWay:sap.ui.model.BindingMode.OneTime;this.mSupportedBindingModes={"OneWay":true,"TwoWay":false,"OneTime":true};if(this.bAsync&&this.sDefaultBindingMode==sap.ui.model.BindingMode.OneTime){q.sap.log.warning("Using binding mode OneTime for asynchronous ResourceModel is not supported!")}this.oData=d;_(this,true)},metadata:{publicMethods:["getResourceBundle"]}});a.prototype.loadResourceBundle=function(d){var c=sap.ui.getCore().getConfiguration(),r,u,l,i;l=d.bundleLocale;if(!l){l=c.getLanguage()}i=c.getOriginInfo();u=b(d.bundleUrl,d.bundleName);r=q.sap.resources({url:u,locale:l,includeInfo:i,async:!!d.async});return r};a.prototype.enhance=function(d){var t=this,r,p=this.bAsync?new Promise(function(e){r=e}):null;function c(){d.async=t.bAsync;var e=t.loadResourceBundle(d);if(e instanceof Promise){e.then(function(f){t._oResourceBundle._enhance(f);r(true)},function(){r(true)})}else if(e){t._oResourceBundle._enhance(e)}}if(this._oPromise){Promise.resolve(this._oPromise).then(c)}else{c()}return p};a.prototype.bindProperty=function(p){var B=new R(this,p);return B};a.prototype.getProperty=function(p){return this._oResourceBundle?this._oResourceBundle.getText(p):null};a.prototype.getResourceBundle=function(){if(!this.bAsync){return this._oResourceBundle}else{var p=this._oPromise;if(p){return new Promise(function(r,c){function d(B){r(B)}p.then(d,d)})}else{return Promise.resolve(this._oResourceBundle)}}};a.prototype._handleLocalizationChange=function(){_(this,false)};function _(m,t){var d=m.oData;if(d&&(d.bundleUrl||d.bundleName)){var r=m.loadResourceBundle(d);if(r instanceof Promise){var e={url:b(d.bundleUrl,d.bundleName),async:true};m.fireRequestSent(e);m._oPromise=r;m._oPromise.then(function(B){m._oResourceBundle=B;delete m._oPromise;m.checkUpdate(true);m.fireRequestCompleted(e)})}else{m._oResourceBundle=r}}else if(t){throw new Error("Neither bundleUrl nor bundleName are given. One of these is mandatory.")}};function b(c,d){var u=c;if(d){u=q.sap.getModulePath(d,'.properties')}return u};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLPropertyBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLPropertyBinding');sap.ui.define("sap/ui/model/xml/XMLPropertyBinding",['jquery.sap.global','sap/ui/model/ClientPropertyBinding'],function(q,C){"use strict";var X=C.extend("sap.ui.model.xml.XMLPropertyBinding");X.prototype.setValue=function(v){if(this.oValue!=v){this.oModel.setProperty(this.sPath,v,this.oContext)}};X.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ManagedObject')){jQuery.sap.declare('sap.ui.base.ManagedObject');sap.ui.define("sap/ui/base/ManagedObject",['jquery.sap.global','./BindingParser','./DataType','./EventProvider','./ManagedObjectMetadata','sap/ui/model/CompositeBinding','sap/ui/model/ContextBinding','sap/ui/model/Model','sap/ui/model/Type','jquery.sap.act','jquery.sap.script','jquery.sap.strings'],function(q,B,D,E,M,C,b,c,T){"use strict";var d=E.extend("sap.ui.base.ManagedObject",{metadata:{"abstract":true,publicMethods:["getId","getMetadata","getModel","setModel","hasModel","bindProperty","unbindProperty","bindAggregation","unbindAggregation","bindObject","unbindObject","getObjectBinding"],library:"sap.ui.core",properties:{},aggregations:{},associations:{},events:{"validationSuccess":{enableEventBubbling:true},"validationError":{enableEventBubbling:true},"parseError":{enableEventBubbling:true},"formatError":{enableEventBubbling:true}}},constructor:function(i,s,S){E.apply(this);if(typeof(i)!="string"&&arguments.length>0){S=s;s=i;if(s&&s.id){i=s["id"]}else{i=null}}if(!i){i=this.getMetadata().uid()||q.sap.uid()}else{var p=d._fnIdPreprocessor;i=(p?p.call(this,i):i);var t=D.getType("sap.ui.core.ID");if(!t.isValid(i)){throw new Error("\""+i+"\" is not a valid ID.")}}this.sId=i;this.mProperties=this.getMetadata().createPropertyBag();this.mAggregations={};this.mAssociations={};this.mMethods={};this.oParent=null;this.aDelegates=[];this.aBeforeDelegates=[];this.iSuppressInvalidate=0;this.oPropagatedProperties={oModels:{},oBindingContexts:{}};this.oModels={};this.oBindingContexts={};this.mBindingInfos={};this.sBindingPath=null;this.mBindingParameters=null;this.mBoundObjects={};this._sOwnerId=d._sOwnerId;try{if(this.register)this.register();if(this._initCompositeSupport){this._initCompositeSupport(s)}if(this.init){this.init()}this.applySettings(s,S)}catch(e){if(this.deregister)this.deregister();throw e}}},M);d.create=function(v,k){if(!v||v instanceof d||typeof v!=="object"||v instanceof String){return v}function g(t){if(typeof t==="function"){return t}if(typeof t==="string"){return q.sap.getObject(t)}}var f=g(v.Type)||g(k&&k.type);if(typeof f==="function"){return new f(v)}var m="Don't know how to create a ManagedObject from "+v+" ("+(typeof v)+")";q.sap.log.fatal(m);throw new Error(m)};d._fnIdPreprocessor=null;d._fnSettingsPreprocessor=null;d.runWithPreprocessors=function(f,p){var o={id:this._fnIdPreprocessor,settings:this._fnSettingsPreprocessor};p=p||{};this._fnIdPreprocessor=p.id;this._fnSettingsPreprocessor=p.settings;try{var r=f.call();this._fnIdPreprocessor=o.id;this._fnSettingsPreprocessor=o.settings;return r}catch(e){this._fnIdPreprocessor=o.id;this._fnSettingsPreprocessor=o.settings;throw e}};d.getOwnerIdFor=function(o){return o&&o._sOwnerId};d.runWithOwner=function(f,o){var a=d._sOwnerId;try{d._sOwnerId=o.getId();var r=f.call();d._sOwnerId=a;return r}catch(e){d._sOwnerId=a;throw e}};d.prototype.applySettings=function(s,S){if(!s||q.isEmptyObject(s)){return this}var m=this.getMetadata(),v=m.getJSONKeys(),a=d.create,p=d._fnSettingsPreprocessor,k,V,K;p&&p.call(this,s);if(s.models){if(typeof s.models!=="object"){throw new Error("models must be a simple object")}if(s.models instanceof c){this.setModel(s.models)}else{for(k in s.models){this.setModel(s.models[k],k==="undefined"?undefined:k)}}delete s.models}if(s.bindingContexts){if(typeof s.bindingContexts!=="object"){throw new Error("bindingContexts must be a simple object")}if(s.bindingContexts instanceof sap.ui.model.Context){this.setBindingContext(s.bindingContexts)}else{for(k in s.bindingContexts){this.setBindingContext(s.bindingContexts[k],k==="undefined"?undefined:k)}}delete s.bindingContexts}if(s.objectBindings){if(typeof s.objectBindings!=="string"&&typeof s.objectBindings!=="object"){throw new Error("binding must be a string or simple object")}if(typeof s.objectBindings==="string"||s.objectBindings.path){this.bindObject(s.objectBindings)}else{for(var k in s.objectBindings){s.objectBindings.model=k;this.bindObject(s.objectBindings[k])}}delete s.objectBindings}for(k in s){if(K=v[k]){V=s[k];switch(K._iKind){case 0:var o=this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindProperty(k,o)}else{this[K._sMutator](o||V)}break;case 1:var o=K.altTypes&&this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindProperty(k,o)}else{this[K._sMutator](a(o||V,K))}break;case 2:var o=this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindAggregation(k,o)}else{V=o||V;if(V&&!q.isArray(V)){V=[V]}if(V){for(var i=0,l=V.length;i<l;i++){this[K._sMutator](a(V[i],K))}}}break;case 3:this[K._sMutator](V);break;case 4:if(V&&!q.isArray(V)){V=[V]}if(V){for(var i=0,l=V.length;i<l;i++){this[K._sMutator](V[i])}}break;case 5:if(typeof V=="function"){this[K._sMutator](V)}else{this[K._sMutator](V[0],V[1],V[2])}break;default:break}}}return this};d.prototype.toString=function(){return"ManagedObject "+this.getMetadata().getName()+"#"+this.getId()};d.prototype.getId=function(){return this.sId};d.prototype.setProperty=function(p,v,s){var o=this.mProperties[p];v=this.validateProperty(p,v);if(q.sap.equal(o,v)){return this}if(s){q.sap.act.refresh();this.iSuppressInvalidate++}this.mProperties[p]=v;if(!this.isInvalidateSuppressed()){this.invalidate()}this.updateModelProperty(p,v,o);E.prototype.fireEvent.apply(this,["_change",{"id":this.getId(),"name":p,"oldValue":o,"newValue":v}]);if(s){this.iSuppressInvalidate--}return this};d.prototype.getProperty=function(p){var v=this.mProperties[p],m=this.getMetadata(),P=m.getAllProperties()[p],t;if(!P){throw new Error("Property \""+p+"\" does not exist in "+this)}t=D.getType(P.type);if(t instanceof D&&t.isArrayType()&&q.isArray(v)){v=v.slice(0)}if(v instanceof String){v=v.valueOf()}return v};d.prototype.validateProperty=function(p,v){var m=this.getMetadata(),P=m.getAllProperties()[p],t;if(!P){throw new Error("Property \""+p+"\" does not exist in "+this)}t=D.getType(P.type);if(t instanceof D&&t.isArrayType()&&q.isArray(v)){v=v.slice(0)}if(v===null||v===undefined){if(P.defaultValue!==null){v=P.defaultValue}else{v=t.getDefaultValue()}}else if(t instanceof D){if(t.getName()=="string"){if(!(typeof v=="string"||v instanceof String)){v=""+v}}else if(t.getName()=="string[]"){if(typeof v=="string"){v=[v]}if(!q.isArray(v)){throw new Error("\""+v+"\" is of type "+typeof v+", expected string[]"+" for property \""+p+"\" of "+this)}for(var i=0;i<v.length;i++){if(!typeof v[i]=="string"){v[i]=""+v[i]}}}else if(!t.isValid(v)){throw new Error("\""+v+"\" is of type "+typeof v+", expected "+t.getName()+" for property \""+p+"\" of "+this)}}else if(!(v in t)){throw new Error("\""+v+"\" is not a valid entry of the enumeration for property \""+p+"\" of "+this)}if(t&&t.normalize&&typeof t.normalize==="function"){v=t.normalize(v)}return v};d.prototype.getOriginInfo=function(p){var v=this.mProperties[p];if(!(v instanceof String&&v.originInfo)){return null}return v.originInfo};d.prototype.setAssociation=function(a,i,s){if(i instanceof d){i=i.getId()}else if(i!=null&&typeof i!=="string"){return this}if(this.mAssociations[a]===i){return this}if(s){this.iSuppressInvalidate++}this.mAssociations[a]=i;if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.getAssociation=function(a,o){var r=this.mAssociations[a];if(!r){r=this.mAssociations[a]=o||null}else{if(typeof r.length==='number'&&!(r.propertyIsEnumerable('length'))){return r.slice()}return r}return r};d.prototype.addAssociation=function(a,i,s){if(i instanceof d){i=i.getId()}else if(typeof i!=="string"){return this}if(s){this.iSuppressInvalidate++}var I=this.mAssociations[a];if(!I){I=this.mAssociations[a]=[i]}else{I.push(i)}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.removeAssociation=function(a,o,s){var I=this.mAssociations[a];var e=null;if(s){this.iSuppressInvalidate++}if(typeof(o)=="object"&&o.getId){o=o.getId()}if(typeof(o)=="string"){for(var i=0;i<I.length;i++){if(I[i]==o){o=i;break}}}if(typeof(o)=="number"){if(o<0||o>=I.length){q.sap.log.warning("ManagedObject.removeAssociation called with invalid index: "+a+", "+o)}else{e=I[o];I.splice(o,1);if(!this.isInvalidateSuppressed()){this.invalidate()}}}if(s){this.iSuppressInvalidate--}return e};d.prototype.removeAllAssociation=function(a,s){var i=this.mAssociations[a];if(!i){return[]}if(s){this.iSuppressInvalidate++}delete this.mAssociations[a];if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return i};d.prototype.validateAggregation=function(a,o,m){var e=this.getMetadata(),A=e.getManagedAggregation(a),f,t,i,g;if(!A){if(a&&e._mHiddenAggregations&&e._mHiddenAggregations[a]){A=e._mHiddenAggregations[a];q.sap.log.error("Support for '_mHiddenAggregations' is about to be removed (with 1.12 latest). Hidden aggregations like '"+e.getName()+"."+a+"' instead can be declared like normal aggregations but with visibility:'hidden'.")}else{g="Aggregation \""+a+"\" does not exist in "+this;if(/^sap\.(ui\.core|ui\.commons|ui\.table|ui\.ux3|m|makit|viz|uiext\.inbox)$/.test(e.getLibraryName()||"")){throw new Error(g)}else{q.sap.log.error("Support for undeclared aggregations is about to be removed (with 1.12 latest). Hidden aggregations like '"+e.getName()+"."+a+"' can be declared like normal aggregations but with visibility:'hidden'.");return o}}}if(A.multiple!==m){throw new Error("Aggregation '"+a+"' of "+this+" used with wrong cardinality (declared as "+(A.multiple?"0..n":"0..1")+")")}if(!A.multiple&&!o){return o}t=q.sap.getObject(A.type);if(typeof t==="function"&&o instanceof t){return o}if(o&&o.getMetadata&&o.getMetadata().isInstanceOf(A.type)){return o}f=A.altTypes;if(f&&f.length){if(o==null){return o}for(i=0;i<f.length;i++){t=D.getType(f[i]);if(t instanceof D){if(t.isValid(o)){return o}}else if(o in t){return o}}}g="\""+o+"\" is not valid for aggregation \""+a+"\" of "+this;if(D.isInterfaceType(A.type)){return o}else{throw new Error(g)}};d.prototype.setAggregation=function(a,o,s){var O=this.mAggregations[a];if(O===o){return this}o=this.validateAggregation(a,o,false);if(s){this.iSuppressInvalidate++}if(O instanceof d){O.setParent(null)}this.mAggregations[a]=o;if(o instanceof d){o.setParent(this,a,s)}else{if(!this.isInvalidateSuppressed()){this.invalidate()}}if(s){this.iSuppressInvalidate--}return this};d.prototype.getAggregation=function(a,o){var e=this.mAggregations[a];if(!e){e=this.mAggregations[a]=o||null}if(e){if(typeof e.length==='number'&&!(e.propertyIsEnumerable('length'))){return e.slice()}return e}else{return null}};d.prototype.indexOfAggregation=function(a,o){var e=this.mAggregations[a];if(e){if(e.length==undefined){return-2}for(var i=0;i<e.length;i++){if(e[i]==o){return i}}}return-1};d.prototype.insertAggregation=function(a,o,I,s){if(!o){return this}o=this.validateAggregation(a,o,true);var e=this.mAggregations[a]||(this.mAggregations[a]=[]);var i=I<0?0:(I>e.length?e.length:I);if(i!==I){q.sap.log.warning("ManagedObject.insertAggregation: index '"+I+"' out of range [0,"+e.length+"], forced to "+i)}e.splice(i,0,o);o.setParent(this,a,s);return this};d.prototype.addAggregation=function(a,o,s){if(!o){return this}o=this.validateAggregation(a,o,true);var e=this.mAggregations[a];if(!e){e=this.mAggregations[a]=[o]}else{e.push(o)}o.setParent(this,a,s);return this};d.prototype.removeAggregation=function(a,o,s){var e=this.mAggregations[a],f=null,i;if(!e){return null}if(s){this.iSuppressInvalidate++}if(typeof(o)=="string"){for(i=0;i<e.length;i++){if(e[i]&&e[i].getId()===o){o=i;break}}}if(typeof(o)=="object"){for(i=0;i<e.length;i++){if(e[i]==o){o=i;break}}}if(typeof(o)=="number"){if(o<0||o>=e.length){q.sap.log.warning("ManagedObject.removeAggregation called with invalid index: "+a+", "+o)}else{f=e[o];e.splice(o,1);f.setParent(null);if(!this.isInvalidateSuppressed()){this.invalidate()}}}if(s){this.iSuppressInvalidate--}return f};d.prototype.removeAllAggregation=function(a,s){var e=this.mAggregations[a];if(!e){return[]}if(s){this.iSuppressInvalidate++}delete this.mAggregations[a];for(var i=0;i<e.length;i++){e[i].setParent(null)}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return e};d.prototype.destroyAggregation=function(a,s){var e=this.mAggregations[a],i,f;if(!e){return this}if(s){this.iSuppressInvalidate++}delete this.mAggregations[a];if(e instanceof d){e.destroy(s)}else if(q.isArray(e)){for(i=e.length-1;i>=0;i--){f=e[i];if(f){f.destroy(s)}}}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.invalidate=function(){if(this.oParent){this.oParent.invalidate(this)}};d.prototype.isInvalidateSuppressed=function(){var i=this.iSuppressInvalidate>0;if(this.oParent&&this.oParent instanceof d){i=i||this.oParent.isInvalidateSuppressed()}return i};d.prototype._removeChild=function(o,a,s){if(!a){q.sap.log.error("Cannot remove aggregated child without aggregation name.",null,this)}else{if(s){this.iSuppressInvalidate++}var i=this.indexOfAggregation(a,o);var A=this.getMetadata().getJSONKeys()[a];if(i==-2){if(A&&this[A._sMutator]){this[A._sMutator](null)}else{this.setAggregation(a,null,s)}}else if(i>-1){if(A&&this[A._sRemoveMutator]){this[A._sRemoveMutator](i)}else{this.removeAggregation(a,i,s)}}else{}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}}};d.prototype.setParent=function(p,a,s){var t=this;if(!p){this.oParent=null;this.sParentAggregationName=null;this.oPropagatedProperties={oModels:{},oBindingContexts:{}};q.sap.act.refresh();return}if(s){q.sap.act.refresh();this.iSuppressInvalidate++}var o=this.getParent();if(o){o._removeChild(this,this.sParentAggregationName)}this.oParent=p;this.sParentAggregationName=a;this.oPropagatedProperties=p._getPropertiesToPropagate();if(this.hasModel()){this.updateBindingContext(false,true,undefined,true);this.updateBindings(true,null);this.propagateProperties(true)}if(p&&!this.isInvalidateSuppressed()){p.invalidate(this)}if(s){this.iSuppressInvalidate--}return this};d.prototype.getParent=function(){return this.oParent};d.prototype.destroy=function(s){var t=this;if(s){this.iSuppressInvalidate++}if(this.exit){this.exit()}if(this._exitCompositeSupport){this._exitCompositeSupport()}for(var a in this.mAggregations){this.destroyAggregation(a,s)}if(this.deregister)this.deregister();if(this.oParent&&this.sParentAggregationName){this.oParent._removeChild(this,this.sParentAggregationName,s)}delete this.oParent;q.each(this.mBindingInfos,function(n,o){if(o.factory){t.unbindAggregation(n,true)}else{t.unbindProperty(n,true)}});if(s){this.iSuppressInvalidate--}E.prototype.destroy.apply(this,arguments);this.setParent=function(){throw Error("The object with ID "+t.getId()+" was destroyed and cannot be used anymore.")};this.bIsDestroyed=true};d.bindingParser=B.simpleParser;d.prototype.isBinding=function(v,k){return"object"===typeof this.extractBindingInfo(v)};d.prototype.extractBindingInfo=function(v,s){if(v&&typeof v==="object"){if(v.ui5object){delete v.ui5object}else if(v.path||v.parts){if(v.template){v.template=d.create(v.template)}return v}}if(typeof v==="string"){return d.bindingParser(v,s,true)}};d.prototype.getBindingInfo=function(n){return this.mBindingInfos[n]};d.prototype.bindObject=function(p,P){var a={},o,m,s;if(typeof p=="object"){var e=p;p=e.path;P=e.parameters;m=e.model;a.events=e.events}s=p.indexOf(">");a.sBindingPath=p;a.mBindingParameters=P;if(s>0){m=p.substr(0,s);a.sBindingPath=p.substr(s+1)}o=this.mBoundObjects[m];if(o&&o.binding){o.binding.detachChange(o.fChangeHandler);o.binding.detachEvents(o.events)}this.mBoundObjects[m]=a;if(this.getModel(m)){this._bindObject(m,a)}return this};d.prototype._bindObject=function(m,o){var a,p,e,t=this;var f=function(g){t.setBindingContext(a.getBoundContext(),m)};e=this.getModel(m);if(this.oParent&&e==this.oParent.getModel(m)){p=this.oParent.getBindingContext(m)}a=e.bindContext(o.sBindingPath,p,o.mBindingParameters);a.attachChange(f);o.binding=a;o.fChangeHandler=f;a.attachEvents(o.events);a.initialize()};d.prototype.bindContext=function(p){return this.bindElement(p)};d.prototype.unbindContext=function(m){return this.unbindElement(m)};d.prototype.unbindObject=function(m){var o=this.mBoundObjects[m];if(o){if(o.binding){o.binding.detachChange(o.fChangeHandler);o.binding.detachEvents(o.events)}delete this.mBoundObjects[m];delete this.oBindingContexts[m];this.updateBindingContext(false,false,m)}return this};d.prototype.bindProperty=function(n,o){var p,f,m,s,F,t,S,a=true,e=this,g=this.getMetadata(),P=g.getAllProperties()[n],k=g.getJSONKeys()[n];if(!P&&!(k&&k.altTypes)){throw new Error("Property \""+n+"\" does not exist in "+this)}if(typeof o=="string"){p=arguments[1];f=arguments[2];m=arguments[3];if(typeof f=="function"){F=f}else if(f instanceof T){t=f}o={formatter:F,parts:[{path:p,type:t,mode:m}]}}if(!o.parts){o.parts=[];o.parts[0]={path:o.path,type:o.type,formatOptions:o.formatOptions,constraints:o.constraints,model:o.model,mode:o.mode};delete o.path;delete o.mode;delete o.model}q.each(o.parts,function(i,h){if(typeof h=="string"){h={path:h};o.parts[i]=h}S=h.path.indexOf(">");if(S>0){h.model=h.path.substr(0,S);h.path=h.path.substr(S+1)}if(o.formatter||o.parts.length>1){h.mode=sap.ui.model.BindingMode.OneWay}if(!e.getModel(h.model)){a=false}});if(this.isBound(n)){this.unbindProperty(n,true)}this.mBindingInfos[n]=o;if(a){this._bindProperty(n,o)}return this};d.prototype._bindProperty=function(n,o){var m,s,a,e,t,f,p=this.getMetadata().getJSONKeys()[n],g=this,h=[],j=function(i){g.updateProperty(n)};a=this.getBindingContext(o.model);q.each(o.parts,function(i,P){a=g.getBindingContext(P.model);m=g.getModel(P.model);t=P.type;if(typeof t=="string"){f=q.sap.getObject(t);t=new f(P.formatOptions,P.constraints)}e=m.bindProperty(P.path,a,o.parameters);e.setType(t,p.type);e.setFormatter(P.formatter);s=!P.mode?m.getDefaultBindingMode():P.mode;e.setBindingMode(s);h.push(e)});if(h.length>1||(o.formatter&&o.formatter.textFragments)){t=o.type;if(typeof t=="string"){f=q.sap.getObject(t);t=new f(o.formatOptions,o.constraints)}e=new C(h,o.useRawValues);e.setType(t,p.type);e.setBindingMode(o.mode)}else{e=h[0]}e.attachChange(j);e.setFormatter(q.proxy(o.formatter,this));o.binding=e;o.modelChangeHandler=j;e.attachEvents(o.events);e.initialize();if(e.getBindingMode()===sap.ui.model.BindingMode.OneTime){e.detachChange(j);e.detachEvents(o.events)}};d.prototype.unbindProperty=function(n,s){var o=this.mBindingInfos[n],p=this.getMetadata().getJSONKeys()[n];if(o){if(o.binding){o.binding.detachChange(o.modelChangeHandler);o.binding.detachEvents(o.events)}delete this.mBindingInfos[n];if(!s){this[p._sMutator](null)}}return this};d.prototype.updateProperty=function(n){var o=this.mBindingInfos[n],a=o.binding,p=this.getMetadata().getJSONKeys()[n];if(o.skipPropertyUpdate)return;try{var v=a.getExternalValue();o.skipModelUpdate=true;this[p._sMutator](v);o.skipModelUpdate=false}catch(e){o.skipModelUpdate=false;if(e instanceof sap.ui.model.FormatException){this.fireFormatError({element:this,property:n,type:a.getType(),newValue:a.getValue(),oldValue:this.getProperty(n),exception:e},false,true)}else{throw e}}};d.prototype.updateModelProperty=function(n,v,o){if(this.isBound(n)){var a=this.mBindingInfos[n],e=a.binding;if(a.skipModelUpdate)return;if(e&&e.getBindingMode()==sap.ui.model.BindingMode.TwoWay){try{a.skipPropertyUpdate=true;e.setExternalValue(v);a.skipPropertyUpdate=false;var f=e.getExternalValue();if(v!=f){this.updateProperty(n)}if(e.getType()){this.fireValidationSuccess({element:this,property:n,type:e.getType(),newValue:v,oldValue:o},false,true)}}catch(g){a.skipPropertyUpdate=false;if(g instanceof sap.ui.model.ParseException){this.fireParseError({element:this,property:n,type:e.getType(),newValue:v,oldValue:o,exception:g},false,true)}else if(g instanceof sap.ui.model.ValidateException){this.fireValidationError({element:this,property:n,type:e.getType(),newValue:v,oldValue:o,exception:g},false,true)}else{throw g}}}}};d.prototype.bindAggregation=function(n,o){var p,t,s,f,m=this.getMetadata(),a=m.getAllAggregations()[n];if(!a){throw new Error("Aggregation \""+n+"\" does not exist in "+this)}if(typeof o=="string"){p=arguments[1];t=arguments[2];s=arguments[3];f=arguments[4];o={path:p,sorter:s,filters:f};if(t instanceof d){o.template=t}else if(typeof t==="function"){o.factory=t}}if(this.isBound(n)){this.unbindAggregation(n,true)}if(!(o.template||o.factory)){if(a._doesNotRequireFactory){o.factory=function(){throw new Error("dummy factory called unexpectedly ")}}else{throw new Error("Missing template or factory function for aggregation "+n+" of "+this+" !")}}if(o.template){if(o.templateShareable===undefined){o.templateShareable=true}o.factory=function(i){return o.template.clone(i)}}var S=o.path.indexOf(">");if(S>0){o.model=o.path.substr(0,S);o.path=o.path.substr(S+1)}this.mBindingInfos[n]=o;if(this.getModel(o.model)){this._bindAggregation(n,o)}return this};d.prototype._bindAggregation=function(n,o){var t=this,a,m=function(g){var u="update"+n.substr(0,1).toUpperCase()+n.substr(1);if(t[u]){var s=g&&g.getParameter("reason");if(s){t[u](s)}else{t[u]()}}else{t.updateAggregation(n)}},f=function(g){var r="refresh"+n.substr(0,1).toUpperCase()+n.substr(1);if(t[r]){t[r](g.getParameter("reason"))}else{m(g)}};var e=this.getModel(o.model);if(this.isTreeBinding(n)){a=e.bindTree(o.path,this.getBindingContext(o.model),o.filters,o.parameters)}else{a=e.bindList(o.path,this.getBindingContext(o.model),o.sorter,o.filters,o.parameters)}if(this.bUseExtendedChangeDetection===true){a.enableExtendedChangeDetection()}o.binding=a;o.modelChangeHandler=m;o.modelRefreshHandler=f;a.attachChange(m);a.attachRefresh(f);a.attachEvents(o.events);a.initialize()};d.prototype.unbindAggregation=function(n,s){var o=this.mBindingInfos[n],a=this.getMetadata().getJSONKeys()[n];if(o){if(o.binding){o.binding.detachChange(o.modelChangeHandler);o.binding.detachRefresh(o.modelRefreshHandler);o.binding.detachEvents(o.events)}if(!o.templateShareable&&o.template&&o.template.destroy){o.template.destroy()}delete this.mBindingInfos[n];if(!s){this[a._sDestructor]()}}return this};d.prototype.updateAggregation=function(n){var o=this.mBindingInfos[n],a=o.binding,f=o.factory,A=this.getMetadata().getJSONKeys()[n],e,N=null,g=null,G=null,s=null,t=this;this[A._sDestructor]();if(this.isTreeBinding(n)){var i=0,u=function(h,f,a,p){q.each(h,function(I,j){var k=t.getId()+"-"+i++;e=f(k,j);e.setBindingContext(j,o.model);p[A._sMutator](e);u(a.getNodeContexts(j),f,a,e)})};u(a.getRootContexts(),f,a,this)}else{g=A._sMutator+"Group";G=a.isGrouped()&&this[g];q.each(a.getContexts(o.startIndex,o.length),function(I,h){if(G&&a.aSorters.length>0){N=a.aSorters[0].fnGroup(h);if(typeof N=="string"){N={key:N}}if(N.key!==s){var j;if(o.groupHeaderFactory){j=o.groupHeaderFactory(N)}t[g](N,j);s=N.key}}var k=t.getId()+"-"+I;e=f(k,h);e.setBindingContext(h,o.model);t[A._sMutator](e)})}};d.prototype.refreshAggregation=function(n){var o=this.mBindingInfos[n],a=o.binding;a.getContexts(o.startIndex,o.length)};d.prototype.isTreeBinding=function(n){return false};d.prototype.updateBindings=function(u,m){var t=this;function a(o){var p=o.parts,i;if(p&&p.length>1){for(i=0;i<p.length;i++){if((u||p[i].model==m)&&!o.binding.aBindings[i].updateRequired(t.getModel(p[i].model))){return true}}}else if(o.factory){return(u||o.model==m)&&!o.binding.updateRequired(t.getModel(o.model))}else{return(u||p[0].model==m)&&!o.binding.updateRequired(t.getModel(p[0].model))}return false}function e(o){var p=o.parts,i;if(p){for(i=0;i<p.length;i++){if(!t.getModel(p[i].model)){return false}}return true}else if(o.factory){return!!t.getModel(o.model)}return false}q.each(this.mBindingInfos,function(n,o){if(o.binding&&a(o)){o.binding.detachChange(o.modelChangeHandler);if(o.modelRefreshHandler){o.binding.detachRefresh(o.modelRefreshHandler)}o.binding.detachEvents(o.events);delete o.binding}if(!o.binding&&e(o)){if(o.factory){t._bindAggregation(n,o)}else{t._bindProperty(n,o)}}})};d.prototype.isBound=function(n){return(n in this.mBindingInfos)};d.prototype.getObjectBinding=function(m){return this.mBoundObjects[m]&&this.mBoundObjects[m].binding};d.prototype.getEventingParent=function(){return this.oParent};d.prototype.getBinding=function(n){return this.mBindingInfos[n]&&this.mBindingInfos[n].binding};d.prototype.getBindingPath=function(n){var i=this.mBindingInfos[n];return i&&(i.path||(i.parts&&i.parts[0]&&i.parts[0].path))};d.prototype.setBindingContext=function(o,m){var O=this.oBindingContexts[m];if(O!==o){this.oBindingContexts[m]=o;this.updateBindingContext(true,true,m);this.propagateProperties(m)}return this};d.prototype.updateBindingContext=function(s,S,m,u){var o,a={},p,e,t=this;if(u){for(m in this.oModels){if(this.oModels.hasOwnProperty(m)){a[m]=m}}for(m in this.oPropagatedProperties.oModels){if(this.oPropagatedProperties.oModels.hasOwnProperty(m)){a[m]=m}}}else{a[m]=m}for(m in a){if(a.hasOwnProperty(m)){m=m==="undefined"?undefined:m;o=this.getModel(m);e=this.mBoundObjects[m];if(o&&e&&e.sBindingPath&&!s){if(!e.binding){this._bindObject(m,e)}else{p=null;if(this.oParent&&o==this.oParent.getModel(m)){p=this.oParent.getBindingContext(m)}if(p!==e.binding.getContext()){e.binding.setContext(p)}}continue}q.each(this.mBindingInfos,function(n,g){var h=g.binding;var P=g.parts,i;if(!h){return}if(P&&P.length>1){for(i=0;i<P.length;i++){if(P[i].model==m){h.aBindings[i].setContext(t.getBindingContext(P[i].model))}}}else if(g.factory){if(g.model==m){h.setContext(t.getBindingContext(g.model))}}else{if(P[0].model==m){h.setContext(t.getBindingContext(P[0].model))}}});if(!S){var f=this.getBindingContext(m);q.each(this.mAggregations,function(n,A){if(A instanceof d){A.oPropagatedProperties.oBindingContexts[m]=f;A.updateBindingContext(false,false,m)}else if(A instanceof Array){for(var i=0;i<A.length;i++){A[i].oPropagatedProperties.oBindingContexts[m]=f;A[i].updateBindingContext(false,false,m)}}})}}}};d.prototype.getBindingContext=function(m){var o=this.getModel(m);if(this.oBindingContexts[m]){return this.oBindingContexts[m]}else if(o&&this.oParent&&this.oParent.getModel(m)&&o!=this.oParent.getModel(m)){return undefined}else{return this.oPropagatedProperties.oBindingContexts[m]}};d.prototype.setModel=function(m,n){if(!m&&this.oModels[n]){delete this.oModels[n];this.propagateProperties(n);this.updateBindings(false,n)}else if(m&&m!==this.oModels[n]){this.oModels[n]=m;this.propagateProperties(n);this.updateBindingContext(false,true,n);this.updateBindings(false,n)}else{}return this};d.prototype.propagateProperties=function(n){var p=this._getPropertiesToPropagate(),u=n===true,N=u?undefined:n,t=this;q.each(this.mAggregations,function(a,A){if(A instanceof d){t._propagateProperties(n,A,p,u,N)}else if(A instanceof Array){for(var i=0;i<A.length;i++){if(A[i]instanceof d){t._propagateProperties(n,A[i],p,u,N)}}}})};d.prototype._propagateProperties=function(n,o,p,u,N){if(!p){p=this._getPropertiesToPropagate(),u=n===true,N=u?undefined:n}o.oPropagatedProperties=p;o.updateBindings(u,N);o.updateBindingContext(false,true,N,u);o.propagateProperties(n)};d.prototype._getPropertiesToPropagate=function(){var n=q.isEmptyObject(this.oModels),N=q.isEmptyObject(this.oBindingContexts);function m(e,o,a){return e?o:q.extend({},o,a)}if(N&&n){return this.oPropagatedProperties}else{return{oModels:m(n,this.oPropagatedProperties.oModels,this.oModels),oBindingContexts:m(N,this.oPropagatedProperties.oBindingContexts,this.oBindingContexts)}}};d.prototype.getModel=function(n){return this.oModels[n]||this.oPropagatedProperties.oModels[n]};d.prototype.hasModel=function(){return!(q.isEmptyObject(this.oModels)&&q.isEmptyObject(this.oPropagatedProperties.oModels))};d.prototype.clone=function(I,l,o){var t=this,a=true,e=true;if(o){a=!!o.cloneChildren;e=!!o.cloneBindings}if(!I){I=M.uid("clone")||q.sap.uid()}if(!l&&a){l=q.map(this.findAggregatedObjects(true),function(O){return O.getId()})}var m=this.getMetadata(),f=m._oClass,s=this.getId()+"-"+I,S={},p=this.mProperties,k,g,h=d.bindingParser.escape;for(k in p){if(p.hasOwnProperty(k)&&!(this.isBound(k)&&e)){if(typeof p[k]==="string"){S[k]=h(p[k])}else{S[k]=p[k]}}}S["models"]=this.oModels;S["bindingContexts"]=this.oBindingContexts;if(a){q.each(this.mAggregations,function(n,A){if(m.hasAggregation(n)&&!(t.isBound(n)&&e)){if(A instanceof d){S[n]=A.clone(I,l)}else if(q.isArray(A)){S[n]=[];for(var i=0;i<A.length;i++){S[n].push(A[i].clone(I,l))}}else{S[n]=A}}});q.each(this.mAssociations,function(n,A){if(q.isArray(A)){A=A.slice(0);for(var i=0;i<A.length;i++){if(q.inArray(A[i],l)>=0){A[i]+="-"+I}}}else if(q.inArray(A,l)>=0){A+="-"+I}S[n]=A})}g=new f(s,S);q.each(this.mBoundObjects,function(n,i){g.mBoundObjects[n]=q.extend({},i)});q.each(this.mEventRegistry,function(n,L){g.mEventRegistry[n]=L.slice()});if(e){q.each(this.mBindingInfos,function(n,i){var j=q.extend({},i);if(!i.templateShareable&&i.template&&i.template.clone){j.template=i.template.clone(I,l);delete j.factory}delete j.binding;if(i.factory||i.template){g.bindAggregation(n,j)}else{g.bindProperty(n,j)}})}return g};d._handleLocalizationChange=function(p){var i;if(p===1){q.each(this.oModels,function(n,m){if(m&&m._handleLocalizationChange){m._handleLocalizationChange()}})}else if(p===2){q.each(this.mBindingInfos,function(n,o){var P=o.parts;if(P){for(i=0;i<P.length;i++){if(o.type&&o.type._handleLocalizationChange){o.type._handleLocalizationChange()}}if(o.modelChangeHandler){o.modelChangeHandler()}}})}};d._mapAggregation=function(p,o,n){var k=p.getMetadata().getJSONKeys();var O=k[o];var N=k[n];if(!O||!N||O._iKind!=2||N._iKind!=2){return}var f={"insert":true,"add":true,"remove":true,"removeAll":false,"indexOf":true,"destroy":false,"get":false};function m(P,g){return P+g.substring(0,1).toUpperCase()+g.substring(1)}function a(F){return function(){return this[F].apply(this,arguments)}}for(var P in f){var s=m(P,f[P]?O.singularName:O._sName);var e=m(P,f[P]?N.singularName:N._sName);p[s]=a(e)}};d.prototype.findAggregatedObjects=function(r){var A=[];function f(o){for(var n in o.mAggregations){var a=o.mAggregations[n];if(q.isArray(a)){for(var i=0;i<a.length;i++){A.push(a[i]);if(r){f(a[i])}}}else if(a instanceof d){A.push(a);if(r){f(a)}}}}f(this);return A};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Fragment')){jQuery.sap.declare('sap.ui.core.Fragment');sap.ui.define("sap/ui/core/Fragment",['jquery.sap.global','sap/ui/base/ManagedObject','./DeclarativeSupport','./XMLTemplateProcessor'],function(q,M,D,X){"use strict";var r={},t={};var F=M.extend("sap.ui.core.Fragment",{metadata:{properties:{type:"string"}},constructor:function(i,s){M.apply(this,arguments);if(this._aContent&&this._aContent.length==1){return this._aContent[0]}else{return this._aContent}}});F.registerType=function(T,f){if(!typeof(T)==="string"){q.sap.log.error("Ignoring non-string Fragment type: "+T);return}if(t[T]){q.sap.log.warning("sap.ui.core.Fragment.registerType(): Fragment type '"+T+"' is already defined. Overriding this type now!")}t[T]=f};F.prototype._initCompositeSupport=function(s){if(!s){throw new Error("Settings must be set")}if(!(s.fragmentName||s.fragmentContent)){throw new Error("Please provide a fragment name")}if(s.oController){this.oController=s.oController}this._sExplicitId=s.sId||s.id;this._sFragmentName=s.fragmentName;var f=t[s.type];if(f){f.init.apply(this,[s])}else{throw new Error("No type for the fragment has been specified: "+s.type)}};F.prototype.getController=function(){return this.oController};F.byId=function(f,i){if(!(typeof(f)==="string"&&typeof(i)==="string")){q.sap.log.error("sap.ui.core.Fragment.byId: two strings must be given as parameters, but are: "+f+" and "+i);return undefined}return sap.ui.getCore().byId(f+"--"+i)};F.createId=function(f,i){if(!(typeof(f)==="string"&&typeof(i)==="string")){q.sap.log.error("sap.ui.core.Fragment.createId: two strings must be given as parameters, but are: "+f+" and "+i);return undefined}return f+"--"+i};F.prototype.createId=function(i){var a=this._sExplicitId?this._sExplicitId+"--"+i:i;if(this._oContainingView&&this._oContainingView!=this){a=this._oContainingView.createId(a)}return a};F.prototype.isSubView=function(){return true};sap.ui.fragment=function(n,T,c){var s={};if(typeof(n)==="string"){s.fragmentName=n;s.oController=c;s.type=T}else if(typeof(n)==="object"){s=n;if(T){s.oController=T}}else{q.sap.log.error("sap.ui.fragment() must be called with Fragment name or config object as first parameter, but is: "+n)}return new F(s)};sap.ui.xmlfragment=function(i,f,c){if(typeof(i)==="string"){if(typeof(f)==="string"){return sap.ui.fragment({fragmentName:f,sId:i,type:"XML"},c)}else{return sap.ui.fragment(i,"XML",f)}}else{i.type="XML";return sap.ui.fragment(i,f)}};sap.ui.jsfragment=function(n,f){if(typeof(n)==="string"&&typeof(f)==="object"){if(f.createContent){r[n]=f;q.sap.declare({modName:n,type:"fragment"},false)}else{return sap.ui.fragment(n,"JS",f)}}else if(typeof(n)==="string"&&f===undefined){return sap.ui.fragment(n,"JS")}else{if(typeof(n)==="object"){n.type="JS";return sap.ui.fragment(n,f)}else if(arguments&&arguments.length>=3){return sap.ui.fragment({id:n,fragmentName:f,type:"JS"},arguments[2])}else{q.sap.log.error("sap.ui.jsfragment() was called with wrong parameter set: "+n+" + "+f)}}};sap.ui.htmlfragment=function(i,f,c){if(typeof(i)==="string"){if(typeof(f)==="string"){return sap.ui.fragment({fragmentName:f,sId:i,type:"HTML"},c)}else{return sap.ui.fragment(i,"HTML",f)}}else{i.type="HTML";return sap.ui.fragment(i,f)}};F.registerType("XML",{init:function(s){this._xContent=s.fragmentContent?((typeof(s.fragmentContent)==="string")?q.parseXML(s.fragmentContent).documentElement:s.fragmentContent):X.loadTemplate(s.fragmentName,"fragment");this._oContainingView=this._sExplicitId?this:(s.containingView||this);if((this._oContainingView===this)){this._oContainingView.oController=(s.containingView&&s.containingView.oController)||s.oController}var a=this;M.runWithPreprocessors(function(){var x=a._xContent;a._aContent=X.parseTemplate(a._xContent,a)})}});F.registerType("JS",{init:function(s){if(!r[s.fragmentName]){q.sap.require({modName:s.fragmentName,type:"fragment"})}q.extend(this,r[s.fragmentName]);this._oContainingView=s.containingView||this;var a=this;M.runWithPreprocessors(function(){var c=a.createContent(s.oController||a._oContainingView.oController);a._aContent=[];a._aContent=a._aContent.concat(c)})}});(function(){var _={};var a=function(T){var u=q.sap.getModulePath(T,".fragment.html");var h=_[u];var R;if(!h){R=q.sap.getResourceName(T,".fragment.html");h=q.sap.loadResource(R);_[u]=h}return h};F.registerType("HTML",{init:function(s){this._aContent=[];this.getContent=function(){return this._aContent};this.addContent=function(C){this._aContent.push(C)};this._oContainingView=s.containingView||this;var h=s.fragmentContent||a(s.fragmentName);this._oTemplate=document.createElement("div");var H=sap.ui.core.RenderManager.prepareHTML5(h);if(typeof H==="string"){this._oTemplate.innerHTML=H}else{var n=H;var f=document.createDocumentFragment();for(var i=0;i<n.length;i++){f.appendChild(n.item(i))}this._oTemplate.appendChild(f)}var m=this._oTemplate.getElementsByTagName("template")[0];var p=this.getMetadata().getAllProperties();if(m){var b=this;var c=D;q.each(m.attributes,function(I,A){var N=c.convertAttributeToSettingName(A.name,b.getId());var v=A.value;var P=p[N];if(!s[N]){if(P){s[N]=c.convertValueToType(c.getPropertyDataType(P),v)}else if(sap.ui.core.mvc.HTMLView._mAllowedSettings[N]){s[N]=v}}});this._oTemplate=m}if(this._oTemplate.content){var f=this._oTemplate.content;this._oTemplate=document.createElement("div");this._oTemplate.appendChild(f)}var b=this;M.runWithPreprocessors(function(){D.compile(b._oTemplate,b);var d=b.getContent();if(d&&d.length===1){b._aContent=[d[0]]}else{}})}})}());return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.Router')){jQuery.sap.declare('sap.ui.core.routing.Router');jQuery.sap.require('sap.ui.thirdparty.crossroads');jQuery.sap.require('sap.ui.thirdparty.signals');sap.ui.define("sap/ui/core/routing/Router",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/base/ManagedObject','./HashChanger','./Route','sap/ui/thirdparty/crossroads','sap/ui/thirdparty/signals'],function(q,E,M,H,R,c,s){"use strict";var r={};var a=E.extend("sap.ui.core.routing.Router",{constructor:function(o,C,O){E.apply(this);this._oConfig=C;this._oRouter=crossroads.create();this._oRouter.ignoreState=true;this._oRoutes={};this._oViews={};this._oOwner=O;var t=this;if(!o){o={}}if(q.isArray(o)){var b=o;o={};q.each(b,function(i,d){o[d.name]=d})}q.each(o,function(d,e){if(e.name==undefined){e.name=d}t.addRoute(e)})},metadata:{publicMethods:["initialize","getURL","register"]}});a.M_EVENTS={RouteMatched:"routeMatched",RoutePatternMatched:"routePatternMatched",ViewCreated:"viewCreated"};a.prototype.addRoute=function(C,p){if(!C.name){q.sap.log.error("A name has to be specified for every route")}if(this._oRoutes[C.name]){q.sap.log.error("Route with name "+C.name+" already exists")}this._oRoutes[C.name]=new R(this,C,p)};a.prototype.parse=function(n,o){this._oRouter.parse(n)};a.prototype.initialize=function(){var t=this,h=this.oHashChanger=H.getInstance();if(this._bIsInitialized){q.sap.log.warning("Router is already initialized.");return this}this._bIsInitialized=true;this.fnHashChanged=function(e){t.parse(e.getParameter("newHash"),e.getParameter("oldHash"))};h.attachEvent("hashChanged",this.fnHashChanged);if(!h.init()){this.parse(h.getHash())}return this};a.prototype.stop=function(){if(!this._bIsInitialized){q.sap.log.warning("Router is not initialized. But it got stopped")}if(this.fnHashChanged){this.oHashChanger.detachEvent("hashChanged",this.fnHashChanged)}this._bIsInitialized=false;return this};a.prototype.destroy=function(){E.prototype.destroy.apply(this);if(!this._bIsInitialized){q.sap.log.info("Router is not initialized, but got destroyed.")}if(this.fnHashChanged){this.oHashChanger.detachEvent("hashChanged",this.fnHashChanged)}this._oOwner=null;this._oRouter.removeAllRoutes();this._oRouter=null;return this};a.prototype.getURL=function(n,p){if(p===undefined){p={}}var o=this._oRoutes[n];if(!o){q.sap.log.warning("Route with name "+n+" does not exist");return}return o.getURL(p)};a.prototype.getView=function(v,V,b){if(!v){q.sap.log.error("A name for the view has to be defined")}if(!this._oViews[v]){var C=function(){var o={type:V,viewName:v};if(b){o.id=b}return sap.ui.view(o)};if(this._oOwner){var t=this;M.runWithOwner(function(){t._oViews[v]=C()},this._oOwner)}else{this._oViews[v]=C()}this.fireViewCreated({view:this._oViews[v],viewName:v,type:V})}return this._oViews[v]};a.prototype.setView=function(v,V){if(!v){q.sap.log.error("A name for the view has to be defined")}this._oViews[v]=V};a.prototype.navTo=function(n,p,b){if(b){this.oHashChanger.replaceHash(this.getURL(n,p))}else{this.oHashChanger.setHash(this.getURL(n,p))}};a.prototype.attachRouteMatched=function(d,f,l){this.attachEvent("routeMatched",d,f,l);return this};a.prototype.detachRouteMatched=function(f,l){this.detachEvent("routeMatched",f,l);return this};a.prototype.fireRouteMatched=function(A){this.fireEvent("routeMatched",A);return this};a.prototype.attachViewCreated=function(d,f,l){this.attachEvent("viewCreated",d,f,l);return this};a.prototype.detachViewCreated=function(f,l){this.detachEvent("viewCreated",f,l);return this};a.prototype.fireViewCreated=function(A){this.fireEvent("viewCreated",A);return this};a.prototype.attachRoutePatternMatched=function(d,f,l){this.attachEvent("routePatternMatched",d,f,l);return this};a.prototype.detachRoutePatternMatched=function(f,l){this.detachEvent("routePatternMatched",f,l);return this};a.prototype.fireRoutePatternMatched=function(A){this.fireEvent("routePatternMatched",A);return this};a.prototype.register=function(n){r[n]=this;return this};a.getRouter=function(n){return r[n]};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.Template')){jQuery.sap.declare('sap.ui.core.tmpl.Template');sap.ui.define("sap/ui/core/tmpl/Template",['jquery.sap.global','sap/ui/base/ManagedObject'],function(q,M){"use strict";var T=M.extend("sap.ui.core.tmpl.Template",{constructor:function(i,s){M.apply(this,arguments)},metadata:{stereotype:"template","abstract":true,properties:{"content":{type:"string",group:"Data",defaultValue:null}},publicMethods:["declareControl","createControl","placeAt","createMetadata","createRenderer"],library:"sap.ui.core"}});T.prototype.getInterface=function(){return this};T._mSupportedTypes={};T.registerType=function(t,c){T._mSupportedTypes[t]=c};T.unregisterType=function(t){delete T._mSupportedTypes[t]};T.parsePath=function(p){var m=undefined,s=p.indexOf(">");if(s>0){m=p.substr(0,s);p=p.substr(s+1)}return{path:p,model:m}};T.prototype.init=function(s,S){if(this.getMetadata().getName()==="sap.ui.core.tmpl.Template"){throw new Error("The class 'sap.ui.core.tmpl.Template' is abstract and must not be instantiated!")}if(M.bindingParser===sap.ui.base.BindingParser.complexParser){T.prototype.extractBindingInfo=function(v,i,S){M.bindingParser=sap.ui.base.BindingParser.simpleParser;var r=sap.ui.core.Control.prototype.extractBindingInfo.apply(this,arguments);M.bindingParser=sap.ui.base.BindingParser.complexParser;return r}}};T.prototype.declareControl=function(c){if(c){var m=this.createMetadata(),r=this.createRenderer(),t=this;q.sap.require("sap.ui.core.tmpl.TemplateControl");sap.ui.core.tmpl.TemplateControl.extend(c,{metadata:m,init:function(){sap.ui.core.tmpl.TemplateControl.prototype.init.apply(this,arguments);this.setTemplate(t)},renderer:{renderTemplate:r,hasControlData:m._hasControlData}});return q.sap.getObject(c)}};T.prototype.createControl=function(i,c,v){q.sap.require("sap.ui.core.tmpl.TemplateControl");var C=new sap.ui.core.tmpl.TemplateControl({id:i,template:this,context:c});C.setTemplateRenderer(this.createRenderer(v));return C};T.prototype.placeAt=function(r,c,p,i){if(typeof c==="string"||typeof c==="number"){p=c;c=undefined}var I;if(!(r instanceof sap.ui.core.Control)&&i){var $=typeof r==="string"?q.sap.byId(r):q(r);if($.length>0){I=$.attr("id");r=$.get(0);var C=$.attr("data-context");c=c||C&&q.parseJSON(C);sap.ui.core.RenderManager.markInlineTemplate($)}}var o=this.createControl(I,c);o.placeAt(r,p);return o};T.prototype.createMetadata=function(){q.sap.log.error("The function createMetadata is an abstract function which needs to be implemented by subclasses.")};T.prototype.createRenderer=function(){q.sap.log.error("The function createRenderer is an abstract function which needs to be implemented by subclasses.")};sap.ui.template=function(t){if(!t){var a=[];q.each(T._mSupportedTypes,function(s,j){q("script[type='"+s+"'], [data-type='"+s+"']").each(function(m,E){a.push(sap.ui.template({id:E.id,domref:E,type:s,_class:j}))})});return a}else{if(typeof t==="string"){return sap.ui.template({id:t})}else if(t&&t.tagName&&t.nodeName&&t.ownerDocument&&t.nodeType===1){return sap.ui.template({id:t.id,domref:t})}t=q.extend({type:T.DEFAULT_TEMPLATE},t);var i,s,c,C,r,b=false,l=typeof t.src==="string";if(l){var R=q.sap.sjax({url:t.src,dataType:"text"});if(R.success){i=t.id,s=t.type,c=t.control,C=R.data;var d=/^<!--\sUI5:Template\stype=([a-z\/\-]*)\s(?:controller=([A-Za-z.]*)\s)?-->/,e=C.match(d);if(e){s=e[1];if(e.length==3){b=e[2]}C=C.substr(e[0].length)}}else{throw new Error("The template could not be loaded from "+t.src+"!")}}else{var E=t.domref||q.sap.domById(t.id),$=q(E),I=false;i=t.id||E&&E.id;s=$.attr("type")||t.type,c=$.attr("data-control")||t.control;if(i){var f=sap.ui.getCore().getTemplate(i);if(!f instanceof T){throw new Error("Object for id \""+i+"\" is no sap.ui.core.tmpl.Template!")}else{if(f){return f}}}if($.length===0){throw new Error("DOM element for the Template with the id \""+i+"\" not found!")}C=$.html();var g=/path="(\w|\/|&gt;)+"/i;if(g.test(C)){C=C.replace("&gt;",">")}var h=E.tagName.toLowerCase();if(h!=="script"){I=$.parents("body").length===1}}var j=t._class;if(!j){j=T._mSupportedTypes[s];if(!j){throw new Error("The type \""+s+"\" is not supported.")}}q.sap.require(j);var o=q.sap.getObject(j);var k=new o({id:i,content:C});if(c){k.declareControl(c)}if(b){k._sControllerName=b}if(I){k.placeAt(i,t.context,undefined,true)}return k}};T.DEFAULT_TEMPLATE="text/x-handlebars-template";T.registerType(T.DEFAULT_TEMPLATE,"sap.ui.core.tmpl.HandlebarsTemplate");return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportType')){jQuery.sap.declare('sap.ui.core.util.ExportType');sap.ui.define("sap/ui/core/util/ExportType",['jquery.sap.global','sap/ui/base/ManagedObject'],function(q,M){'use strict';var E=M.extend('sap.ui.core.util.ExportType',{metadata:{properties:{fileExtension:'string',mimeType:'string',charset:'string'}}});E.prototype.init=function(){this._oExport=null};E.prototype._generate=function(e){this._oExport=e;var c=this.generate();this._oExport=null;return c};E.prototype.generate=function(){return''};E.prototype.getColumnCount=function(){if(this._oExport){return this._oExport.getColumns().length}return 0};E.prototype.getRowCount=function(){if(this._oExport&&this._oExport.getBinding("rows")){return this._oExport.getBinding("rows").getLength()}return 0};E.prototype.columnGenerator=function(){var i=0,c=this._oExport.getColumns(),C=c.length;return{next:function(){if(i<C){var I=i;i++;return{value:{index:I,name:c[I].getName()},done:false}}else{return{value:undefined,done:true}}}}};E.prototype.cellGenerator=function(){var i=0,r=this._oExport.getAggregation('_template'),c=r.getCells(),C=c.length;return{next:function(){if(i<C){var I=i;i++;var m={};q.each(c[I].getCustomData(),function(){m[this.getKey()]=this.getValue()});return{value:{index:I,content:c[I].getContent(),customData:m},done:false}}else{return{value:undefined,done:true}}}}};E.prototype.rowGenerator=function(){var t=this,i=0,e=this._oExport,b=e.getBinding("rows"),B=e.getBindingInfo("rows"),c=b.getContexts(0,b.getLength()),C=c.length,r=e.getAggregation('_template');return{next:function(){if(i<C){var I=i;i++;r.setBindingContext(c[I],B.model);return{value:{index:I,cells:t.cellGenerator()},done:false}}else{return{value:undefined,done:true}}}}};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportTypeCSV')){jQuery.sap.declare('sap.ui.core.util.ExportTypeCSV');sap.ui.define("sap/ui/core/util/ExportTypeCSV",['jquery.sap.global','./ExportType'],function(q,E){'use strict';var C=E.extend('sap.ui.core.util.ExportTypeCSV',{metadata:{properties:{separatorChar:{type:'string',defaultValue:','}}}});C.prototype.setSeparatorChar=function(s){var s=this.validateProperty('separatorChar',s);if(s.length>1){throw new Error("Value of property \"separatorChar\" needs to be exactly one character or empty. "+"\""+s+"\" is "+s.length+" characters long.")}return this.setProperty('separatorChar',s)};C.prototype.init=function(){this.setProperty('fileExtension','csv',true);this.setProperty('mimeType','text/csv',true);this.setProperty('charset','utf-8',true)};C.prototype.escapeContent=function(v){if(v&&(v.indexOf(this.getSeparatorChar())>-1||v.indexOf('\r\n')>-1)){v=v.replace(/"/g,'""');v='"'+v+'"'}return v};C.prototype.generate=function(){var b=[];this.generateColumns(b);this.generateRows(b);return b.join('\r\n')};C.prototype.generateColumns=function(b){var c=[],o=this.columnGenerator(),a;while(!(a=o.next()).done){c.push(this.escapeContent(a.value.name))}b.push(c.join(this.getSeparatorChar()))};C.prototype.generateRows=function(b){var r=this.rowGenerator(),R;while(!(R=r.next()).done){var a=[];var c=R.value.cells,o;while(!(o=c.next()).done){a.push(this.escapeContent(o.value.content))}b.push(a.join(this.getSeparatorChar()))}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.MockServer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.MockServer');jQuery.sap.require('sap.ui.thirdparty.sinon');sap.ui.define("sap/ui/core/util/MockServer",['jquery.sap.global','sap/ui/Device','sap/ui/base/ManagedObject','sap/ui/thirdparty/sinon'],function(q,D,M,d){"use strict";if(!!D.browser.internet_explorer){q.sap.require("sap.ui.thirdparty.sinon-ie")}var f=M.extend("sap.ui.core.util.MockServer",{constructor:function(i,s,S){M.apply(this,arguments);f._aServers.push(this)},metadata:{properties:{rootUri:"string",requests:{type:"object[]",defaultValue:[]}}},_oServer:null,_aFilter:null,_oMockdata:null,_oMetadata:null,_sMetadataUrl:null,_sMockdataBaseUrl:null,_mEntitySets:null});f.prototype.start=function(){this._oServer=f._getInstance();this._aFilters=[];var r=this.getRequests();var l=r.length;for(var i=0;i<l;i++){var R=r[i];this._addRequestHandler(R.method,R.path,R.response)}};f.prototype.stop=function(){if(this.isStarted()){this._removeAllRequestHandlers();this._removeAllFilters();this._oServer=null}};f.prototype.isStarted=function(){return!!this._oServer};f.prototype._applyQueryOnCollection=function(F,Q,e){var a=Q.split('=');var o=a[1];if(o==="")return;if(o.lastIndexOf(',')===o.length){q.sap.log.error("The URI is violating the construction rules defined in the Data Services specification!");throw new Error("400")}switch(a[0]){case"$top":if(!(new RegExp(/^\d+$/).test(o))){q.sap.log.error("Invalid system query options value!");throw new Error("400")}F.results=F.results.slice(0,o);break;case"$skip":if(!(new RegExp(/^\d+$/).test(o))){q.sap.log.error("Invalid system query options value!");throw new Error("400")}F.results=F.results.slice(o,F.results.length);break;case"$orderby":F.results=this._getOdataQueryOrderby(F.results,o);break;case"$filter":F.results=this._recursiveOdataQueryFilter(F.results,o);break;case"$select":F.results=this._getOdataQuerySelect(F.results,o);break;case"$inlinecount":var c=this._getOdataInlineCount(F.results,o);if(c){F.__count=c}break;case"$expand":F.results=this._getOdataQueryExpand(F.results,o,e);break;case"$format":F.results=this._getOdataQueryFormat(F.results,o);break;default:q.sap.log.error("Invalid system query options value!");throw new Error("400")}};f.prototype._applyQueryOnEntry=function(e,Q,E){var a=Q.split('=');var o=a[1];if(o==="")return;if(o.lastIndexOf(',')===o.length){q.sap.log.error("The URI is violating the construction rules defined in the Data Services specification!");throw new Error("400")}switch(a[0]){case"$filter":return this._recursiveOdataQueryFilter([e],o)[0];case"$select":return this._getOdataQuerySelect([e],o)[0];case"$expand":return this._getOdataQueryExpand([e],o,E)[0];case"$format":return this._getOdataQueryFormat([e],o);default:q.sap.log.error("Invalid system query options value!");throw new Error("400")}};f.prototype._getOdataQueryOrderby=function(c,o){var p=o.split(',');var t=this;q.each(p,function(i,P){p[i]=t._trim(P)});var C=function compare(a,b){for(var i=0;i<p.length;i++){var s=p[i].split(' ');var S=1;if(s.length>1){switch(s[1]){case'asc':S=1;break;case'desc':S=-1;break;default:q.sap.log.error("Invalid sortorder '"+s[1]+"' detected!");throw new Error("400")}}var P,e;var h=s[0].indexOf("/");if(h!==-1){P=s[0].substring(h+1);e=s[0].substring(0,h);if(!a[e].hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found!");throw new Error("400")}if(a[e][P]<b[e][P])return-1*S;if(a[e][P]>b[e][P])return 1*S}else{P=s[0];if(!a.hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found!");throw new Error("400")}if(a[P]<b[P])return-1*S;if(a[P]>b[P])return 1*S}}return 0};return c.sort(C)};f.prototype._arrayUnique=function(b){var a=b.concat();for(var i=0;i<a.length;++i){for(var j=i+1;j<a.length;++j){if(a[i]===a[j])a.splice(j--,1)}}return a};f.prototype._getBracketIndices=function(s){var S=[];var r=false;var i,e=0;for(var c=0;c<s.length;c++){if(s[c]==='('){if(/[substringof|endswith|startswith]$/.test(s.substring(0,c))){r=true}else{S.push(s[c]);if(i===undefined){i=c}}}else if(s[c]===')'){if(!r){S.pop();e=c;if(S.length===0)return{start:i,end:e}}else{r=false}}}return{start:i,end:e}};f.prototype._recursiveOdataQueryFilter=function(a,o){var I=this._getBracketIndices(o);if(I.start===0&&I.end===o.length-1){o=this._trim(o.substring(I.start+1,I.end));return this._recursiveOdataQueryFilter(a,o)}var r=/([^substringof|endswith|startswith]|^)\((.*)\)/;if(r.test(o)){var b=o.substring(I.start,I.end+1);var c=new RegExp("(.*) +(or|and) +("+this._trim(this._escapeStringForRegExp(b))+".*)");if(I.start===0){c=new RegExp("("+this._trim(this._escapeStringForRegExp(b))+") +(or|and) +(.*)")}var e=c.exec(o);var E=e[1];var O=e[2];var s=e[3];var S=this._recursiveOdataQueryFilter(a,E);var h,p;if(O==="or"){h=this._recursiveOdataQueryFilter(a,s);return this._arrayUnique(S.concat(h))}if(O==="and"){return this._recursiveOdataQueryFilter(S,s)}}else{p=o.split(/ +and | or +/);if(p.length===1){if(o.match(/ +and | or +/)){throw new Error("400")}return this._getOdataQueryFilter(a,this._trim(o))}var R=this._recursiveOdataQueryFilter(a,p[0]);var j;for(var i=1;i<p.length;i++){j=new RegExp(this._trim(this._escapeStringForRegExp(p[i-1]))+" +(and|or) +"+this._trim(this._escapeStringForRegExp(p[i])));O=j.exec(o)[1];if(O==="or"){h=this._recursiveOdataQueryFilter(a,p[i]);R=this._arrayUnique(R.concat(h))}if(O==="and"){R=this._recursiveOdataQueryFilter(R,p[i])}}return R}};f.prototype._getOdataQueryFilter=function(a,o){if(a.length===0)return a;var r=new RegExp("(.*) (eq|ne|gt|lt|le|ge) (.*)");var b=new RegExp("(endswith|startswith|substringof)\\((.*)");var O=null;var c=r.exec(o);if(c){O=c[2]}else{c=b.exec(o);if(c){O=c[1]}else{throw new Error("400")}}var t=this;var G=function(v,V,p,s){var c,e;if(!v){c=r.exec(o);e=t._trim(c[V+1]);var P=t._trim(c[p+1])}else{var h=new RegExp("(substringof|startswith|endswith)\\(([^,\\)]*),(.*)\\)");c=h.exec(o);e=t._trim(c[V+2]);P=t._trim(c[p+2])}if(e.indexOf("datetime")===0){e=t._getJsonDate(e)}else if(e==="true"){e=true}else if(e==="false"){e=false}else if(t._isValidNumber(e)){e=parseFloat(e)}else if((e.charAt(0)==="'")&&(e.charAt(e.length-1)==="'")){e=e.substr(1,e.length-2)}var C=P.indexOf("/");if(C!==-1){var i=P.substring(C+1);var j=P.substring(0,C);if(!a[0][j].hasOwnProperty(i)){q.sap.log.error("Property "+i+" not found!");throw new Error("400")}return s(P,e,j,i)}else{if(!a[0].hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found for "+a[0].__metadata.type+"!");throw new Error("400")}return s(P,e)}};switch(O){case"substringof":return G(true,0,1,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)!==-1)}return(m[p].indexOf(v)!==-1)})});case"startswith":return G(true,1,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)===0)}return(m[p].indexOf(v)===0)})});case"endswith":return G(true,1,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)===(m[C][P].length-v.length))}return(m[p].indexOf(v)===(m[p].length-v.length))})});case"eq":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]===v)}return(m[p]===v)})});case"ne":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]!==v)}return(m[p]!==v)})});case"gt":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]>v)}return(m[p]>v)})});case"lt":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]<v)}return(m[p]<v)})});case"ge":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]>=v)}return(m[p]>=v)})});case"le":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]<=v)}return(m[p]<=v)})});default:q.sap.log.error("Invalid $filter operator '"+O+"'!");throw new Error("400")}};f.prototype._getOdataQuerySelect=function(a,o){var t=this;var p,c;var P=o.split(',');var s=[];var b;var C=function(P,e,b){if(e["__metadata"]){b["__metadata"]=e["__metadata"]}q.each(P,function(i,h){var j=h.indexOf("/");if(j!==-1){p=h.substring(j+1);c=h.substring(0,j);if(!b[c]){b[c]={}}b[c]=C([p],e[c],b[c])}else{if(e&&!e.hasOwnProperty(h)){q.sap.log.error("Resource not found for the selection clause '"+h+"'!");throw new Error("404")}b[h]=e[h]}});return b};if(q.inArray("*",P)!==-1){return a}q.each(P,function(i,e){P[i]=t._trim(e)});q.each(a,function(i,e){b={};s.push(C(P,e,b))});return s};f.prototype._getOdataInlineCount=function(a,o){var p=o.split(',');if(p.length!==1||(p[0]!=='none'&&p[0]!=='allpages')){q.sap.log.error("Invalid system query options value!");throw new Error("400")}if(p[0]==='none'){return}return a.length};f.prototype._getOdataQueryFormat=function(a,o){if(o!=='json'){q.sap.log.error("Unsupported format value. Only json format is supported!");throw new Error("400")}return a};f.prototype._getOdataQueryExpand=function(a,o,e){var t=this;var n=o.split(',');q.each(n,function(i,p){n[i]=t._trim(p)});var E=t._mEntitySets[e].navprops;q.each(a,function(i,r){q.each(n,function(i,N){var b=N.split("/");var s=b[0];if(!r[s]){throw new Error("404")}var c=r[s].results||r[s];if(!c||!!c.__deferred){c=q.extend(true,[],t._resolveNavigation(e,r,s))}if(!!c&&b.length>1){var R=b.splice(1,b.length).join("/");c=t._getOdataQueryExpand(c,R,E[s].to.entitySet)}if(E[s].to.multiplicity==="*"){r[s]={results:c}}else{r[s]=c[0]?c[0]:{}}})});return a};f.prototype._refreshData=function(){this._loadMetadata(this._sMetadataUrl);this._mEntitySets=this._findEntitySets(this._oMetadata);if(!this._sMockdataBaseUrl){this._generateMockdata(this._mEntitySets,this._oMetadata)}else{if(!q.sap.endsWith(this._sMockdataBaseUrl,"/")&&!q.sap.endsWith(this._sMockdataBaseUrl,".json")){this._sMockdataBaseUrl+="/"}this._loadMockdata(this._mEntitySets,this._sMockdataBaseUrl)}};f.prototype._getRootUri=function(){var u=this.getRootUri();u=u&&/([^?#]*)([?#].*)?/.exec(u)[1];return u};f.prototype._loadMetadata=function(m){var o=q.sap.sjax({url:m,dataType:"xml"}).data;this._oMetadata=o;return o};f.prototype._findEntitySets=function(m){var e={};var p=q(m).find("Principal");var o=q(m).find("Dependent");q(m).find("EntitySet").each(function(i,E){var $=q(E);var a=/((.*)\.)?(.*)/.exec($.attr("EntityType"));e[$.attr("Name")]={"name":$.attr("Name"),"schema":a[2],"type":a[3],"keys":[],"keysType":{},"navprops":{}}});var r=function(R,F){var a=q(m).find("End[Role="+R+"]");var E;var s;q.each(a,function(i,v){if(!!q(v).attr("EntitySet")){E=q(v).attr("EntitySet")}else{s=q(v).attr("Multiplicity")}});var P=[];var b=(F)?p:o;q(b).each(function(i,c){if(R===(q(c).attr("Role"))){q(c).children("PropertyRef").each(function(i,h){P.push(q(h).attr("Name"))});return false}});return{"role":R,"entitySet":E,"propRef":P,"multiplicity":s}};q.each(e,function(E,a){var $=q(m).find("EntityType[Name="+a.type+"]");var k=q($).find("PropertyRef");q.each(k,function(i,P){var K=q(P).attr("Name");a.keys.push(K);a.keysType[K]=q($).find("Property[Name="+K+"]").attr("Type")});var n=q(m).find("EntityType[Name="+a.type+"] NavigationProperty");q.each(n,function(i,N){var b=q(N);a.navprops[b.attr("Name")]={"name":b.attr("Name"),"from":r(b.attr("FromRole"),true),"to":r(b.attr("ToRole"),false)}})});return e};f.prototype._findEntityTypes=function(m){var e={};q(m).find("EntityType").each(function(i,E){var $=q(E);e[$.attr("Name")]={"name":$.attr("Name"),"properties":[],"keys":[]};$.find("Property").each(function(i,p){var P=q(p);var t=P.attr("Type");e[$.attr("Name")].properties.push({"schema":t.substring(0,t.lastIndexOf(".")),"type":t.substring(t.lastIndexOf(".")+1),"name":P.attr("Name"),"precision":P.attr("Precision"),"scale":P.attr("Scale")})});$.find("PropertyRef").each(function(i,k){var K=q(k);var p=K.attr("Name");e[$.attr("Name")].keys.push(p)})});return e};f.prototype._findComplexTypes=function(m){var c={};q(m).find("ComplexType").each(function(i,C){var $=q(C);c[$.attr("Name")]={"name":$.attr("Name"),"properties":[]};$.find("Property").each(function(i,p){var P=q(p);var t=P.attr("Type");c[$.attr("Name")].properties.push({"schema":t.substring(0,t.lastIndexOf(".")),"type":t.substring(t.lastIndexOf(".")+1),"name":P.attr("Name"),"precision":P.attr("Precision"),"scale":P.attr("Scale")})})});return c};f.prototype._createKeysString=function(e,E){var t=this;var k="";if(E){q.each(e.keys,function(i,K){if(k){k+=","}var o=E[K];if(e.keysType[K]==="Edm.String"){o="'"+o+"'"}else if(e.keysType[K]==="Edm.DateTime"){o=t._getDateTime(o)}else if(e.keysType[K]==="Edm.Guid"){o="guid'"+o+"'"}if(e.keys.length===1){k+=o;return k}k+=K+"="+o})}return k};f.prototype._loadMockdata=function(e,b){var t=this,E={};this._oMockdata={};if(q.sap.endsWith(b,".json")){var r=q.sap.sjax({url:b,dataType:"json"});if(r.success){E=r.data}else{q.sap.log.error("The mockdata for all the entity types could not be found at \""+b+"\"!")}}else{q.each(e,function(s,o){if(!E[o.type]){var a=b+o.type+".json";var r=q.sap.sjax({url:a,dataType:"json"});if(r.success){if(!!r.data.d){if(!!r.data.d.results){E[o.type]=r.data.d.results}else{q.sap.log.error("The mockdata format for entity type \""+o.type+"\" invalid")}}else{E[o.type]=r.data}}else{if(r.status==="parsererror"){q.sap.log.error("The mockdata for entity type \""+o.type+"\" could not be loaded due to a parsing error!")}else{q.sap.log.error("The mockdata for entity type \""+o.type+"\" could not be found at \""+b+"\"!");if(!!t._bGenerateMissingMockData){var m={};m[o.name]=o;E[o.type]=t._generateODataMockdataForEntitySet(m,t._oMetadata)[o.name]}}}}})}q.each(e,function(s,o){t._oMockdata[s]=[];if(E[o.type]){q.each(E[o.type],function(i,a){t._oMockdata[s].push(q.extend(true,{},a))})}if(t._oMockdata[s].length>0){t._enhanceWithMetadata(o,t._oMockdata[s])}});return this._oMockdata};f.prototype._enhanceWithMetadata=function(e,m){if(m){var t=this,r=this._getRootUri(),E=e&&e.name;q.each(m,function(i,o){o.__metadata={id:r+E+"("+t._createKeysString(e,o)+")",type:e.schema+"."+e.type,uri:r+E+"("+t._createKeysString(e,o)+")"};q.each(e.navprops,function(k,n){o[k]={__deferred:{uri:r+E+"("+t._createKeysString(e,o)+")/"+k}}})})}};f.prototype._isRequestedKeysValid=function(e,r){if(r.length===1){var s=r[0].split('=');if(this._trim(s[0])!==e.keys[0]){r=[e.keys[0]+"="+r[0]]}}for(var i=0;i<r.length;i++){var k=this._trim(r[i].substring(0,r[i].indexOf('=')));var R=this._trim(r[i].substring(r[i].indexOf('=')+1));var F=R.charAt(0);var l=R.charAt(R.length-1);if(e.keysType[k]==="Edm.String"){if(F!=="'"||l!=="'"){return false}}else if(e.keysType[k]==="Edm.DateTime"){if(F==="'"||l!=="'"){return false}}else if(e.keysType[k]==="Edm.Guid"){if(F==="'"||l!=="'"){return false}}else{if(F==="'"||l==="'"){return false}}}return true};f.prototype._parseKeys=function(k,e){var r={};var p=k.split(",");var K,s,P;for(var i=0;i<p.length;i++){P=p[i].split("=");if(P.length===1&&e.keys.length===1){K=e.keys[0];s=P[0]}else{if(P.length===2){K=P[0];s=P[1]}}if(s.indexOf('\'')===0){r[K]=s.slice(1,s.length-1)}else{r[K]=s}}return r};f.prototype._generatePropertyValue=function(k,t,C,i){var I=i;if(!I){I=Math.floor(Math.random()*10000)+101}switch(t){case"String":return k+" "+I;case"DateTime":var a=new Date();a.setFullYear(2000+Math.floor(Math.random()*20));a.setDate(Math.floor(Math.random()*30));a.setMonth(Math.floor(Math.random()*12));a.setMilliseconds(0);return"/Date("+a.getTime()+")/";case"Int16":case"Int32":case"Int64":return Math.floor(Math.random()*10000);case"Decimal":return Math.floor(Math.random()*1000000)/100;case"Boolean":return Math.random()<.5;case"Byte":return Math.floor(Math.random()*10);case"Double":return Math.random()*10;case"Single":return Math.random()*1000000000;case"SByte":return Math.floor(Math.random()*10);case"Time":return Math.floor(Math.random()*23)+":"+Math.floor(Math.random()*59)+":"+Math.floor(Math.random()*59);case"Guid":return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==='x'?r:(r&0x3|0x8);return v.toString(16)});case"Binary":var n=Math.floor(-2147483648+Math.random()*4294967295);for(var b=0,e=n,m="";b<32;b++,m+=String(e>>>31),e<<=1);return m;case"DateTimeOffset":default:return this._generateDataFromEntity(C[t],I)}};f.prototype._completeKey=function(e,k,E){if(E){for(var i=0;i<e.keys.length;i++){var K=e.keys[i];if(k[K]){if(!E[K]){switch(e.keysType[K]){case"Edm.DateTime":E[K]=this._getJsonDate(k[K]);break;case"Edm.Guid":E[K]=k[K].substring(5,k[K].length-2);break;default:E[K]=k[K]}}}else{if(!E[K]){E[K]=this._generatePropertyValue(K,e.keysType[K].substring(e.keysType[K].lastIndexOf('.')+1))}}}}};f.prototype._generateDataFromEntity=function(e,I,c){var E={};if(!e){return E}for(var i=0;i<e.properties.length;i++){var p=e.properties[i];var P="";E[p.name]=this._generatePropertyValue(p.name,p.type,c,I)}return E};f.prototype._generateDataFromEntitySet=function(e,E,c){var o=E[e.type];var m=[];for(var i=0;i<100;i++){m.push(this._generateDataFromEntity(o,i+1,c))}return m};f.prototype._generateMockdata=function(e,m){var t=this;var o={};q.each(e,function(E,a){var b={};b[a.name]=a;o[E]=t._generateODataMockdataForEntitySet(b,m)[E]});this._oMockdata=o};f.prototype._generateODataMockdataForEntitySet=function(e,m){var t=this,r=this._getRootUri(),o={};var E=this._findEntityTypes(m);var c=this._findComplexTypes(m);q.each(e,function(s,a){o[s]=t._generateDataFromEntitySet(a,E,c);q.each(o[s],function(i,b){b.__metadata={uri:r+s+"("+t._createKeysString(a,b)+")",type:a.schema+"."+a.type};q.each(a.navprops,function(k,n){b[k]={__deferred:{uri:r+s+"("+t._createKeysString(a,b)+")/"+k}}})})});return o};f.prototype._resolveNavigation=function(e,F,n){var E=this._mEntitySets[e];var N=E.navprops[n];if(!N){throw new Error("404")}var a=[];var p=N.from.propRef.length;if(p===0){if(N.to.multiplicity==="*"){return this._oMockdata[N.to.entitySet]}else{a.push(this._oMockdata[N.to.entitySet][0]);return a}}q.each(this._oMockdata[N.to.entitySet],function(I,t){var b=true;for(var i=0;i<p;i++){if(F[N.from.propRef[i]]!==t[N.to.propRef[i]]){b=false;break}}if(b){a.push(t)}});return a};f.prototype.simulate=function(m,v){var t=this;this._sMetadataUrl=m;if(!v||typeof v==="string"){this._sMockdataBaseUrl=v}else{this._sMockdataBaseUrl=v.sMockdataBaseUrl;this._bGenerateMissingMockData=v.bGenerateMissingMockData}this._refreshData();var h=function(x,H){if(x.requestHeaders["x-csrf-token"]==="Fetch"){H["X-CSRF-Token"]="42424242424242424242424242424242"}};var G=function(e,k){var F;var E=t._mEntitySets[e];var K=E.keys;var b=k.split(',');if(b.length!==K.length||!t._isRequestedKeysValid(E,b)){return F}if(b.length===1&&!b[0].split('=')[1]){b=[K[0]+"="+b[0]]}q.each(t._oMockdata[e],function(I,o){for(var i=0;i<b.length;i++){var c=b[i].split('=');var s=t._trim(c[0]);if(q.inArray(s,K)===-1){return true}var n=t._trim(c[1]);var O=o[s];switch(E.keysType[s]){case"Edm.String":n=n.replace(/^\'|\'$/g,'');break;case"Edm.Time":case"Edm.DateTime":O=t._getDateTime(O);break;case"Edm.Int16":case"Edm.Int32":case"Edm.Int64":case"Edm.Decimal":case"Edm.Byte":case"Edm.Double":case"Edm.Single":case"Edm.SByte":if(!t._isValidNumber(n)){return false}n=parseFloat(n);break;case"Edm.Guid":n=n.replace(/^guid\'|\'$/g,'');break;case"Edm.Boolean":case"Edm.Binary":case"Edm.DateTimeOffset":default:n=n}if(O!==n){return true}}F={index:I,entry:o};return false});return F};var r=function(e,k,u){var s=e.name;if(u){var n=e.navprops[u]}if(n){s=n.to.entitySet}return s};var a=function(x,T,k,u){var e=JSON.parse(x.requestBody);if(e){var K={};if(k){K=t._parseKeys(k,t._mEntitySets[T])}t._completeKey(t._mEntitySets[T],K,e);t._enhanceWithMetadata(t._mEntitySets[T],[e]);return e}return null};var R=[];R.push({method:"GET",path:new RegExp("\\$metadata([?#].*)?"),response:function(x){q.sap.require("jquery.sap.xml");q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/xml;charset=utf-8"};h(x,H);x.respond(200,H,q.sap.serializeXML(t._oMetadata));q.sap.log.debug("MockServer: response sent with: 200, "+q.sap.serializeXML(t._oMetadata))}});R.push({method:"POST",path:new RegExp("\\$batch([?#].*)?"),response:function(x){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var b=function(U){switch(U){case 200:return"200 OK";case 204:return"204 No Content";case 201:return"201 Created";case 400:return"400 Bad Request";case 404:return"404 Not Found";default:break}};var B=function(A,U){var V=JSON.stringify(A.data)||"";if(U){return"HTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: "+U+"\r\nContent-Length: "+V.length+"\r\ndataserviceversion: 2.0\r\n\r\n"+V+"\r\n"}return"HTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: application/json\r\nContent-Length: "+V.length+"\r\ndataserviceversion: 2.0\r\n\r\n"+V+"\r\n"};var s=x.requestBody;var o=new RegExp("--batch_[a-z0-9-]*");var c=o.exec(s)[0];if(!!c){var e=[];var l=s.split(c);var S=x.url.split("$")[0];var n=new RegExp("PUT (.*) HTTP");var p=new RegExp("MERGE (.*) HTTP");var u=new RegExp("POST (.*) HTTP");var w=new RegExp("DELETE (.*) HTTP");var y=new RegExp("GET (.*) HTTP");for(var i=1;i<l.length-1;i++){var z=l[i];if(y.test(z)&&z.indexOf("multipart/mixed")===-1){if(n.test(z)||u.test(z)||w.test(z)){x.respond(400,null,"The Data Services Request could not be understood due to malformed syntax");q.sap.log.debug("MockServer: response sent with: 400");return}var A=q.sap.sjax({url:S+y.exec(z)[1],dataType:"json"});if(y.exec(z)[1].indexOf('$count')!==-1){var C=B(A,"text/plain")}else{C=B(A)}e.push("\r\nContent-Type: application/http\r\n"+"Content-Length: "+C.length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+C)}else{var E=[];var F=q.extend(true,{},t._oMockdata);var H=function(U,L,V){var A=q.sap.sjax({type:V,url:S+U.exec(K)[1],dataType:"json",data:L});if(A.statusCode===400||A.statusCode===404){var P="\r\nHTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: application/json\r\nContent-Length: 0\r\n\r\n";throw new Error(P)}E.push(B(A))};var I=z.substring(z.indexOf("boundary=")+9,z.indexOf("\r\n\r\n"));var J=z.split("--"+I);try{for(var j=1;j<J.length-1;j++){var K=J[j];if(y.test(K)){t._oMockdata=F;x.respond(400,null,"The Data Services Request could not be understood due to malformed syntax");q.sap.log.debug("MockServer: response sent with: 400");return}else if(n.test(K)){var L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(n,L,'PUT')}else if(p.test(K)){L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(p,L,'PUT')}else if(u.test(K)){L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(u,L,'POST')}else if(w.test(K)){H(w,null,'DELETE')}}var N="\r\nContent-Type: multipart/mixed; boundary=ejjeeffe1\r\n\r\n--ejjeeffe1";for(var k=0;k<E.length;k++){N+="\r\nContent-Type: application/http\r\n"+"Content-Length: "+E[k].length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+E[k]+"--ejjeeffe1"}N+="--\r\n";e.push(N)}catch(O){t._oMockdata=F;var P="\r\nContent-Type: application/http\r\n"+"Content-Length: "+O.message.length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+O.message;e.push(P)}}}var Q="--ejjeeffe0";for(var i=0;i<e.length;i++){Q+=e[i]+"--ejjeeffe0"}Q+="--";var T={'Content-Type':"multipart/mixed; boundary=ejjeeffe0"};h(x,T);x.respond(202,T,Q);q.sap.log.debug("MockServer: response sent with: 202, "+Q)}else{x.respond(202)}}});q.each(this._mEntitySets,function(E,o){R.push({method:"GET",path:new RegExp("("+E+")/\\$count/?(.*)?"),response:function(x,E,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"text/plain;charset=utf-8"};h(x,H);var b=t._oMockdata[E];if(b){var F={results:q.extend(true,[],b)};if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){t._applyQueryOnCollection(F,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));return}}x.respond(200,H,""+F.results.length);q.sap.log.debug("MockServer: response sent with: 200, "+F.results.length)}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")/?(\\?(.*))?"),response:function(x,E,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=t._oMockdata[E];if(b){var F={results:q.extend(true,[],b)};if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){t._applyQueryOnCollection(F,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));return}}x.respond(200,H,JSON.stringify({d:F}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:F}))}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(\\?(.*))?"),response:function(x,E,k,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=q.extend(true,{},G(E,k));if(!q.isEmptyObject(b)){if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){b.entry=t._applyQueryOnEntry(b.entry,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}x.respond(200,H,JSON.stringify({d:b.entry}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:b.entry}))}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});q.each(o.navprops,function(n,N){R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/("+n+")/\\$count/?(.*)?"),response:function(x,E,k,s,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"text/plain;charset=utf-8"};h(x,H);var b=G(E,decodeURIComponent(k));if(b){var c,F={};try{c=t._resolveNavigation(E,b.entry,s);if(c&&c.length!==0){var i=t._mEntitySets[E].navprops[s].to.multiplicity;if(i==="*"){F={results:q.extend(true,[],c)}}else{F=q.extend(true,{},c[0])}if(u){var U=decodeURIComponent(u).replace("?","&").split("&");if(U.length>1){U=t._orderQueryOptions(U)}if(i==="*"){q.each(U,function(I,Q){t._applyQueryOnCollection(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}else{q.each(U,function(I,Q){F=t._applyQueryOnEntry(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}}}x.respond(200,H,""+F.results.length);q.sap.log.debug("MockServer: response sent with: 200, "+F.results.length);return}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/("+n+")/?(\\?(.*))?"),response:function(x,E,k,s,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=G(E,decodeURIComponent(k));if(b){var c,F={};try{c=t._resolveNavigation(E,b.entry,s);if(c&&c.length!==0){var i=t._mEntitySets[E].navprops[s].to.multiplicity;if(i==="*"){F={results:q.extend(true,[],c)}}else{F=q.extend(true,{},c[0])}if(u){var U=decodeURIComponent(u).replace("?","&").split("&");if(U.length>1){U=t._orderQueryOptions(U)}if(i==="*"){q.each(U,function(I,Q){t._applyQueryOnCollection(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}else{q.each(U,function(I,Q){F=t._applyQueryOnEntry(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}}}x.respond(200,H,JSON.stringify({d:F}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:F}));return}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}})});R.push({method:"POST",path:new RegExp("("+E+")(\\(([^/\\?#]+)\\)/?(.*)?)?"),response:function(x,E,b,k,n){q.sap.log.debug("MockServer: incoming create request for url: "+x.url);var s=null;var c=null;var i=405;var T=r(o,decodeURIComponent(k),n);if(T){var e=a(x,T,k,n);if(e){var u=t._getRootUri()+T+"("+t._createKeysString(t._mEntitySets[T],e)+")";s=JSON.stringify({d:e,uri:u});c={"Content-Type":"application/json;charset=utf-8"};t._oMockdata[T]=t._oMockdata[T].concat([e]);i=201}}x.respond(i,c,s);q.sap.log.debug("MockServer: response sent with: "+i+", "+s)}});R.push({method:"PUT",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(.*)?"),response:function(x,E,k,n){q.sap.log.debug("MockServer: incoming update request for url: "+x.url);var i=405;var s=null;var b=null;var T=r(o,decodeURIComponent(k),n);if(T){var e=a(x,T,k,n);if(e){var u=t._getRootUri()+T+"("+t._createKeysString(t._mEntitySets[T],e)+")";b={"Content-Type":"application/json;charset=utf-8"};var c=G(E,k);if(c){t._oMockdata[E][c.index]=e}i=204}}x.respond(i,b,s);q.sap.log.debug("MockServer: response sent with: "+i+", "+s)}});R.push({method:"DELETE",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(.*)?"),response:function(x,E,k,u){q.sap.log.debug("MockServer: incoming delete request for url: "+x.url);var i=200;var e=G(E,decodeURIComponent(k));if(e){t._oMockdata[E].splice(e.index,1)}else{i=400}x.respond(i,null,null);q.sap.log.debug("MockServer: response sent with: "+i)}})});this.setRequests(R)};f.prototype._orderQueryOptions=function(u){var F,i,s,t,o,S,e,a,O=[];q.each(u,function(I,Q){switch(Q.split('=')[0]){case"$top":t=q.inArray(Q,u);break;case"$skip":s=q.inArray(Q,u);break;case"$orderby":o=q.inArray(Q,u);break;case"$filter":F=q.inArray(Q,u);break;case"$select":S=q.inArray(Q,u);break;case"$inlinecount":i=q.inArray(Q,u);break;case"$expand":e=q.inArray(Q,u);break;case"$format":a=q.inArray(Q,u);break;default:if(Q.split('=')[0].indexOf('$')===0){q.sap.log.error("Invalid system query options value!");throw new Error("400")}}});if(F>=0)O.push(u[F]);if(i>=0)O.push(u[i]);if(s>=0)O.push(u[s]);if(t>=0)O.push(u[t]);if(S>=0)O.push(u[S]);if(o>=0)O.push(u[o]);if(e>=0)O.push(u[e]);if(a>=0)O.push(u[a]);return O};f.prototype._removeAllRequestHandlers=function(){var r=this.getRequests();var l=r.length;for(var i=0;i<l;i++){f._removeResponse(r[i].response)}};f.prototype._removeAllFilters=function(){for(var i=0;i<this._aFilters.length;i++){f._removeFilter(this._aFilters[i])}this._aFilters=null};f.prototype._addRequestHandler=function(m,p,r){m=m?m.toUpperCase():m;if(typeof m!=="string"){throw new Error("Error in request configuration: value of 'method' has to be a string")}if(!(typeof p==="string"||p instanceof RegExp)){throw new Error("Error in request configuration: value of 'path' has to be a string or a regular expression")}if(typeof r!=="function"){throw new Error("Error in request configuration: value of 'response' has to be a function")}var u=this._getRootUri();u=u&&new RegExp(this._escapeStringForRegExp(u));if(p&&!(p instanceof RegExp)){p=new RegExp(this._createRegExpPattern(p))}var R=this._createRegExp(u?u.source+p.source:p.source);this._addFilter(this._createFilter(m,R));this._oServer.respondWith(m,R,r);q.sap.log.debug("MockServer: adding "+m+" request handler for pattern "+R)};f.prototype._createRegExp=function(p){return new RegExp("^"+p+"$")};f.prototype._createRegExpPattern=function(p){return p.replace(/:([\w\d]+)/g,"([^\/]+)")};f.prototype._escapeStringForRegExp=function(s){return s.replace(/[\\\/\[\]\{\}\(\)\-\*\+\?\.\^\$\|]/g,"\\$&")};f.prototype._trim=function(s){return s&&s.replace(/^\s+|\s+$/g,"")};f.prototype._isValidNumber=function(s){return!isNaN(parseFloat(s))&&isFinite(s)};f.prototype._getDateTime=function(s){if(!s)return;return"datetime'"+new Date(Number(s.replace("/Date(",'').replace(")/",''))).toJSON().substring(0,19)+"'"};f.prototype._getJsonDate=function(S){if(!S)return;var n=function(s){var a=q.map(s.slice(0,-5).split(/\D/),function(i){return parseInt(i,10)||0});a[1]-=1;a=new Date(Date.UTC.apply(Date,a));var o=s.slice(-5);var b=parseInt(o,10)/100;if(o.slice(0,1)==="+"){b*=-1}a.setHours(a.getHours()+b);return a.getTime()};return"/Date("+n(S.substring("datetime'".length,S.length-1))+")/"};f.prototype._addFilter=function(F){this._aFilters.push(F);f._addFilter(F)};f.prototype._createFilter=function(r,R){return function(m,u,a,U,p){return r===m&&R.test(u)}};f.prototype.destroy=function(s){M.prototype.destroy.apply(this,arguments);this.stop();var S=f._aServers;var i=q.inArray(this,S);S.splice(i,1)};f._aFilters=[];f._oServer=null;f._aServers=[];f._getInstance=function(){if(!this._oServer){this._oServer=window.sinon.fakeServer.create();this._oServer.autoRespond=true}return this._oServer};f.config=function(c){var s=this._getInstance();s.autoRespond=c.autoRespond===false?false:true;s.autoRespondAfter=c.autoRespondAfter||0;s.fakeHTTPMethods=c.fakeHTTPMethods||false};f.respond=function(){this._getInstance().respond()};f.startAll=function(){for(var i=0;i<this._aServers.length;i++){this._aServers[i].start()}};f.stopAll=function(){for(var i=0;i<this._aServers.length;i++){this._aServers[i].stop()}this._getInstance().restore();this._oServer=null};f.destroyAll=function(){this.stopAll();for(var i=0;i<this._aServers.length;i++){this._aServers[i].destroy()}};f._addFilter=function(F){this._aFilters.push(F)};f._removeFilter=function(F){var i=q.inArray(F,this._aFilters);if(i!==-1){this._aFilters.splice(i,1)}return i!==-1};f._removeResponse=function(r){var R=this._oServer.responses;var l=R.length;for(var i=0;i<l;i++){if(R[i].response===r){R.splice(i,1);return true}}return false};window.sinon.FakeXMLHttpRequest.useFilters=true;window.sinon.FakeXMLHttpRequest.addFilter(function(m,u,a,U,p){var F=f._aFilters;for(var i=0;i<F.length;i++){var b=F[i];if(b(m,u,a,U,p)){return false}}return true});var g=function(F){if(/.*\.json$/i.test(F)){return"JSON"}if(/.*\.xml$/i.test(F)){return"XML"}if(/.*metadata$/i.test(F)){return"XML"}return null};window.sinon.FakeXMLHttpRequest.prototype.respondFile=function(s,h,F){var r=q.sap.sjax({url:F,dataType:"text"});if(!r.success)throw new Error("Could not load file from: "+F);var o=r.data;var m=g(F);if(this["respond"+m]){this["respond"+m](s,h,o)}else{this.respond(s,h,o)}};window.sinon.FakeXMLHttpRequest.prototype.respondJSON=function(s,h,j){h=h||{};h["Content-Type"]=h["Content-Type"]||"application/json";this.respond(s,h,typeof j==="string"?j:JSON.stringify(j))};window.sinon.FakeXMLHttpRequest.prototype.respondXML=function(s,h,x){h=h||{};h["Content-Type"]=h["Content-Type"]||"application/xml";this.respond(s,h,x)};return f},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientModel')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.model.ClientModel');sap.ui.define("sap/ui/model/ClientModel",['jquery.sap.global','./ClientContextBinding','./ClientListBinding','./ClientPropertyBinding','./ClientTreeBinding','./Model'],function(q,C,a,b,c,M){"use strict";var d=M.extend("sap.ui.model.ClientModel",{constructor:function(D){M.apply(this,arguments);this.bCache=true;this.aPendingRequestHandles=[];if(typeof D=="string"){this.loadData(D)}},metadata:{publicMethods:["loadData","setData","getData","setProperty","forceNoCache"]}});d.prototype.getData=function(){return this.oData};d.prototype.checkUpdate=function(f){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.checkUpdate(f)})};d.prototype.createBindingContext=function(p,o,P,f){if(typeof o=="function"){f=o;o=null}if(typeof P=="function"){f=P;P=null}var s=this.resolve(p,o),n=(s==undefined)?undefined:this.getContext(s?s:"/");if(!n){n=null}f(n)};d.prototype._ajax=function(p){var t=this;if(this.bDestroyed){return}function w(f){return function(){var i=q.inArray(r,t.aPendingRequestHandles);if(i>-1){t.aPendingRequestHandles.splice(i,1)}if(!(r&&r.bSuppressErrorHandlerCall)){f.apply(this,arguments)}}}p.success=w(p.success);p.error=w(p.error);var r=q.ajax(p);if(p.async){this.aPendingRequestHandles.push(r)}};d.prototype.destroy=function(){if(this.aPendingRequestHandles){for(var i=this.aPendingRequestHandles.length-1;i>=0;i--){var r=this.aPendingRequestHandles[i];if(r&&r.abort){r.bSuppressErrorHandlerCall=true;r.abort()}}delete this.aPendingRequestHandles}M.prototype.destroy.apply(this,arguments)};d.prototype.destroyBindingContext=function(o){};d.prototype.bindContext=function(p,o,P){var B=new C(this,p,o,P);return B};d.prototype.updateBindings=function(f){this.checkUpdate(f)};d.prototype.forceNoCache=function(f){this.bCache=!f};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.ODataModelAdapter')){jQuery.sap.declare('sap.ui.model.analytics.ODataModelAdapter');sap.ui.define("sap/ui/model/analytics/ODataModelAdapter",['jquery.sap.global','./AnalyticalBinding',"./TreeBindingAdapter",'sap/ui/model/odata/ODataModel','./odata4analytics'],function(q,A,T,O,o){"use strict";var a=function(){if(!(this instanceof O&&this.getAnalyticalExtensions===undefined)){return}for(var f in a.prototype){if(a.prototype.hasOwnProperty(f)){this[f]=a.prototype[f]}}if(this.isCountSupported()){q.sap.log.info("ODataModelAdapter: switched ODataModel to use inlinecount (mandatory for analytical bindings)");this.setCountSupported(false)}};a.prototype.bindList=function(p,c,s,f,P){if(P&&P.analyticalInfo){var b=new A(this,p,c,s,f,P);T.apply(b);return b}else{return O.prototype.bindList.apply(this,arguments)}};a.prototype.bindTree=function(p,c,f,P){if(P&&P.analyticalInfo){var b=new A(this,p,c,[],f,P);return b}else{return O.prototype.bindTree.apply(this,arguments)}};a.prototype.getAnalyticalExtensions=function(){if(this.oOData4SAPAnalyticsModel!=undefined&&this.oOData4SAPAnalyticsModel!=null)return this.oOData4SAPAnalyticsModel;var s=null;if(arguments.length==1){var b=arguments[0];var r=q.sap.syncGetText(b);if(r.success){s=r.data}}try{this.oOData4SAPAnalyticsModel=new o.Model(new o.Model.ReferenceByModel(this),s)}catch(e){throw"Failed to instantiate analytical extensions for given OData model: "+e.message}return this.oOData4SAPAnalyticsModel};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONModel')){jQuery.sap.declare('sap.ui.model.json.JSONModel');sap.ui.define("sap/ui/model/json/JSONModel",['jquery.sap.global','sap/ui/model/ClientModel','./JSONListBinding','./JSONPropertyBinding','./JSONTreeBinding'],function(q,C,J,a,b){"use strict";var c=C.extend("sap.ui.model.json.JSONModel",{constructor:function(d){C.apply(this,arguments);if(d&&typeof d=="object"){this.setData(d)}},metadata:{publicMethods:["setJSON","getJSON"]}});c.prototype.setData=function(d,m){if(m){this.oData=q.extend(true,{},this.oData,d)}else{this.oData=d}this.checkUpdate()};c.prototype.setJSON=function(j,m){var o;try{o=q.parseJSON(j);this.setData(o,m)}catch(e){q.sap.log.fatal("The following problem occurred: JSON parse Error: "+e);this.fireParseError({url:"",errorCode:-1,reason:"",srcText:e,line:-1,linepos:-1,filepos:-1})}};c.prototype.getJSON=function(){return JSON.stringify(this.oData)};c.prototype.loadData=function(u,p,A,t,m,d,h){var e=this;A=(A!==false);t=t||"GET";d=d===undefined?this.bCache:d;this.fireRequestSent({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m}});this._ajax({url:u,async:A,dataType:'json',cache:d,data:p,headers:h,type:t,success:function(D){if(!D){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+u)}e.setData(D,m);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m},success:true})},error:function(X,f,g){var E={message:f,statusCode:X.status,statusText:X.statusText,responseText:X.responseText};q.sap.log.fatal("The following problem occurred: "+f,X.responseText+","+X.status+","+X.statusText);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m},success:false,errorobject:E});e.fireRequestFailed(E)}})};c.prototype.bindProperty=function(p,o,P){var B=new a(this,p,o,P);return B};c.prototype.bindList=function(p,o,s,f,P){var B=new J(this,p,o,s,f,P);return B};c.prototype.bindTree=function(p,o,f,P){var B=new b(this,p,o,f,P);return B};c.prototype.setProperty=function(p,v,o){var O=p.substring(0,p.lastIndexOf("/")),P=p.substr(p.lastIndexOf("/")+1);if(!this.resolve(p,o)){return}if(!O&&!o){o=this.oData}var d=this._getObject(O,o);if(d){d[P]=v;this.checkUpdate()}};c.prototype.getProperty=function(p,o){return this._getObject(p,o)};c.prototype._getObject=function(p,o){var n=this.isLegacySyntax()?this.oData:null;if(o instanceof sap.ui.model.Context){n=this._getObject(o.getPath())}else if(o){n=o}if(!p){return n}var P=p.split("/"),i=0;if(!P[0]){n=this.oData;i++}while(n&&P[i]){n=n[P[i]];i++}return n};c.prototype.isList=function(p,o){var A=this.resolve(p,o);return q.isArray(this._getObject(A))};return c},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLModel')){jQuery.sap.declare('sap.ui.model.xml.XMLModel');sap.ui.define("sap/ui/model/xml/XMLModel",['jquery.sap.global','sap/ui/model/ClientModel','./XMLListBinding','./XMLPropertyBinding','./XMLTreeBinding','jquery.sap.xml'],function(q,C,X,a,b){"use strict";var c=C.extend("sap.ui.model.xml.XMLModel",{constructor:function(d){C.apply(this,arguments);this.oNameSpaces=null;if(d&&d.documentElement){this.setData(d)}},metadata:{publicMethods:["setXML","getXML","setNameSpace"]}});c.prototype.setXML=function(x){var o=q.sap.parseXML(x);if(o.parseError.errorCode!=0){var p=o.parseError;q.sap.log.fatal("The following problem occurred: XML parse Error for "+p.url+" code: "+p.errorCode+" reason: "+p.reason+" src: "+p.srcText+" line: "+p.line+" linepos: "+p.linepos+" filepos: "+p.filepos);this.fireParseError({url:p.url,errorCode:p.errorCode,reason:p.reason,srcText:p.srcText,line:p.line,linepos:p.linepos,filepos:p.filepos})}this.setData(o)};c.prototype.getXML=function(){return q.sap.serializeXML(this.oData)};c.prototype.setData=function(d){this.oData=d;this.checkUpdate()};c.prototype.loadData=function(u,p,A,t,d,h){var e=this;A=(A!==false);t=t||"GET";d=d===undefined?this.bCache:d;this.fireRequestSent({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d}});this._ajax({url:u,async:A,cache:d,dataType:'xml',data:p,headers:h,type:t,success:function(D){if(!D){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+u)}e.setData(D);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d},success:true})},error:function(f,g,i){var E={message:g,statusCode:f.status,statusText:f.statusText,responseText:f.responseText};q.sap.log.fatal("The following problem occurred: "+g,f.responseText+","+f.status+","+f.statusText);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d},success:false,errorobject:E});e.fireRequestFailed(E)}})};c.prototype.setNameSpace=function(n,p){if(!p){p=""}if(!this.oNameSpaces){this.oNameSpaces={}}this.oNameSpaces[p]=n};c.prototype.bindProperty=function(p,o,P){var B=new a(this,p,o,P);return B};c.prototype.bindList=function(p,o,s,f,P){var B=new X(this,p,o,s,f,P);return B};c.prototype.bindTree=function(p,o,f,P){var B=new b(this,p,o,f,P);return B};c.prototype.setProperty=function(p,v,o){var O=p.substring(0,p.lastIndexOf("/")+1),P=p.substr(p.lastIndexOf("/")+1);if(!this.resolve(p,o)){return}if(!this.oData.documentElement){q.sap.log.warning("Trying to set property "+p+", but no document exists.");return}var d;if(P.indexOf("@")==0){d=this._getObject(O,o);if(d[0]){d[0].setAttribute(P.substr(1),v);this.checkUpdate()}}else{d=this._getObject(p,o);if(d[0]){q(d[0]).text(v);this.checkUpdate()}}};c.prototype.getProperty=function(p,o){var r=this._getObject(p,o);if(r&&typeof r!="string"){r=q(r[0]).text()}return r};c.prototype.getObject=function(p,o){var O=this._getObject(p,o);if(q.isArray(O)){O=O[0]}return O};c.prototype._getObject=function(p,o){var r=this.oData.documentElement;if(!r){return null}var n=this.isLegacySyntax()?[r]:[];if(o instanceof sap.ui.model.Context){n=this._getObject(o.getPath())}else if(o){n=[o]}if(!p){return n}var P=p.split("/"),s,i=0;if(!P[0]){n=r;i++}n=n.length==undefined?[n]:n;n=n[0]?n:null;while(n&&n.length>0&&P[i]){s=P[i];if(s.indexOf("@")==0){n=this._getAttribute(n[0],s.substr(1))}else if(s=="text()"){n=q(n[0]).text()}else if(isNaN(s)){n=this._getChildElementsByTagName(n[0],s)}else{n=[n[s]]}i++}return n};c.prototype._getAttribute=function(n,N){if(!this.oNameSpaces||N.indexOf(":")==-1){return n.getAttribute(N)}var s=this._getNameSpace(N),l=this._getLocalName(N);if(n.getAttributeNS){return n.getAttributeNS(s,l)}else{if(!this.oDocNSPrefixes){this.oDocNSPrefixes=this._getDocNSPrefixes()}var p=this.oDocNSPrefixes[s];N=(p?p+":":"")+l;return n.getAttribute(N)}};c.prototype._getChildElementsByTagName=function(n,N){var d=n.childNodes,r=[];if(this.oNameSpaces){var s=this._getNameSpace(N),l=this._getLocalName(N),e;q.each(d,function(i,o){e=o.localName||o.baseName;if(o.nodeType==1&&e==l&&o.namespaceURI==s){r.push(o)}})}else{q.each(d,function(i,o){if(o.nodeType==1&&o.nodeName==N){r.push(o)}})}return r};c.prototype._getNameSpace=function(n){var i=n.indexOf(":"),p="";if(i>0){p=n.substr(0,i)}return this.oNameSpaces[p]};c.prototype._getLocalName=function(n){var i=n.indexOf(":"),l=n;if(i>0){l=n.substr(i+1)}return l};c.prototype._getDocNSPrefixes=function(){var p={},d=this.oData&&this.oData.documentElement;if(!d){return p}var A=d.attributes;q.each(A,function(i,o){var n=o.name,v=o.value;if(n=="xmlns"){p[v]=""}else if(n.indexOf("xmlns")==0){p[v]=n.substr(6)}});return p};c.prototype._resolve=function(p,o){var i=!q.sap.startsWith(p,"/"),r=p;if(i){if(o){r=o.getPath()+"/"+p}else{r=this.isLegacySyntax()?"/"+p:undefined}}return r};c.prototype.isList=function(p,o){return false};return c},true)};if(!jQuery.sap.isDeclared('sap.ui.app.MockServer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.app.MockServer');sap.ui.define("sap/ui/app/MockServer",['jquery.sap.global','sap/ui/core/util/MockServer'],function(q,M){"use strict";var a=M;return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.HandlebarsTemplate')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.tmpl.HandlebarsTemplate');jQuery.sap.require('sap.ui.thirdparty.handlebars');sap.ui.define("sap/ui/core/tmpl/HandlebarsTemplate",['jquery.sap.global','sap/ui/core/RenderManager','./Template','sap/ui/thirdparty/handlebars'],function(q,R,T,h){"use strict";var H=T.extend("sap.ui.core.tmpl.HandlebarsTemplate",{constructor:function(i,s){T.apply(this,arguments)}});T.registerType("text/x-handlebars-template","sap.ui.core.tmpl.HandlebarsTemplate");H.RENDER_HELPERS=(function(){var e=Handlebars.helpers["each"],w=Handlebars.helpers["with"],I=Handlebars.helpers["if"],u=Handlebars.helpers["unless"],p=T.parsePath,r=new R();r.renderControl=function(c){this.writeControlData(c);this.writeClasses(c);this.writeStyles(c)};var o={"each":function(c,a){a=a||c;if(!a.hash.path){return e.apply(this,arguments)}else{var b=a.data.renderManager,d=a.data.rootControl,P=a.data.path,f=a.data.parentControl,s=(q.sap.startsWith(a.hash.path,"/")?"":(P||""))+a.hash.path,g=d.bindList(s),i=[],j;if(a.data){j=Handlebars.createFrame(a.data)}if(g){q.each(g,function(k,v){if(j){j.renderManager=b;j.rootControl=d;j.path=s+"/"+k+"/";j.parentControl=f}i.push(a.fn({},{data:j}))})}if(!f){return new Handlebars.SafeString(i.join(""))}}},"with":function(c,a){a=a||c;if(!a.hash.path){return w.apply(this,arguments)}else{}},"if":function(c,a){a=a||c;if(!a.hash.path){return I.apply(this,arguments)}else{}},"unless":function(c,a){a=a||c;if(!a.hash.path){return u.apply(this,arguments)}else{}},"text":function(c,a){a=a||c;var b=a.data.rootControl,P=a.data.path,s=(q.sap.startsWith(a.hash.path,"/")?"":(P||""))+a.hash.path;if(s){var v=b.bindProp(s);return v&&new Handlebars.SafeString(v)}else{throw new Error("The expression \"text\" requires the option \"path\"!")}},"element":function(c,a){a=a||c;var b=a.data.renderManager,d=a.data.rootControl,E=d.createDOMElement(a.hash,a.data.path),P=a.data.parentElement;if(a.fn){var C=a.fn({},{data:{renderManager:b,rootControl:d,parentElement:E}})}if(P){P.addElement(E);return}return new Handlebars.SafeString(b.getHTML(E))},"control":function(c,a){a=a||c;var b=a.data.renderManager,C=a.data.control;if(C){return new Handlebars.SafeString(b.getHTML(C))}var d=a.data.rootControl,P=a.data.path,m=a.data.children,t=a.hash["sap-ui-type"],M=q.sap.getObject(t).getMetadata(),D=a.hash["sap-ui-default-aggregation"]||M.getDefaultAggregationName(),v=a.data.view;var f={};if(a.fn){a.fn({},{data:{rootControl:d,path:P,children:f,defaultAggregation:D,view:v}})}var s=q.extend({},a.hash);q.each(s,function(k,V){if(f[k]){delete s[k]}});var n=d.createControl(s,a.data.path,!!m,v);if(!q.isEmptyObject(f)){s=a.hash;var A=M.getAllAggregations();q.each(f,function(g,j){for(var i=0,l=j.length;i<l;i++){var k=j[i],x=A[g],y=x&&x.multiple;if(typeof s[g]==="string"){var B=sap.ui.base.ManagedObject.bindingParser(s[g],v&&v.getController());B.template=k;n.bindAggregation(g,B)}else{if(y){n.addAggregation(g,k)}else{n.setAggregation(g,k)}}}})}if(m){var g=a.hash["sap-ui-aggregation"]||a.data.defaultAggregation;m[g]=m[g]||[];m[g].push(n);return}return new Handlebars.SafeString(b.getHTML(n))},"property":function(c,a){a=a||c;var b=a.data.rootControl,m=b.getMetadata(),P=a.hash.name,g=m.getAllProperties()[P]._sGetter;return b[g]()},"aggregation":function(c,a){a=a||c;var b=a.data.renderManager,d=a.data.rootControl,m=d.getMetadata(),A=a.hash.name,g=m.getAllAggregations()[A]._sGetter,f=[];var C=d[g]();if(C){for(var i=0,l=C.length;i<l;i++){if(a.fn){f.push(a.fn({},{data:{renderManager:b,rootControl:d,control:C[i]}}))}else{f.push(b.getHTML(C[i]))}}}return new Handlebars.SafeString(f.join(""))},"event":function(c,a){a=a||c},"controlData":function(c,a){a=a||c;var b=a.data.rootControl;return new Handlebars.SafeString(r.getHTML(b))}};return o}());H.prototype.createMetadata=function(){var t=this.getContent(),f=this._fnTemplate=this._fnTemplate||Handlebars.compile(t);var m={},j=sap.ui.core.tmpl.TemplateControl.getMetadata().getJSONKeys(),p=sap.ui.core.tmpl.TemplateControl.getMetadata().getAllPrivateAggregations();var o={"property":function(c,a){a=a||c;var n=a.hash.name;if(n&&n!=="id"&&!j[n]){m.properties=m.properties||{};m.properties[n]=q.extend({},{type:"string"},a.hash)}else{throw new Error("The property name \""+n+"\" is reserved.")}},"aggregation":function(c,a){a=a||c;var n=a.hash.name;if(n&&!j[n]&&!p[n]){a.hash.multiple=a.hash.multiple=="true";m.aggregations=m.aggregations||{};m.aggregations[n]=q.extend({},a.hash)}else{throw new Error("The aggregation name \""+n+"\" is reserved.")}},"event":function(c,a){a=a||c},"controlData":function(c,a){a=a||c;m._hasControlData=true}};q.each(["each","if","unless","with"],function(i,v){o[v]=function(){}});f({},{helpers:o});return m};H.prototype.createRenderer=function(v){var t=this.getContent(),f=this._fnTemplate=this._fnTemplate||Handlebars.compile(t);var r=function(a,c){var s=f(c.getContext()||{},{data:{renderManager:a,rootControl:c,view:v},helpers:H.RENDER_HELPERS});a.write(s)};return r};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Core')){jQuery.sap.declare('sap.ui.core.Core');if(!jQuery.sap.isDeclared('sap.ui.core.Component')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.Component');sap.ui.define("sap/ui/core/Component",['jquery.sap.global','sap/ui/base/ManagedObject','./ComponentMetadata','./Core'],function(q,M,C,a){"use strict";var b=M.extend("sap.ui.core.Component",{constructor:function(i,s){M.apply(this,arguments)},metadata:{stereotype:"component","abstract":true,version:"0.0",includes:[],dependencies:{libs:[],components:[],ui5version:""},config:{},customizing:{},library:"sap.ui.core"}},C);b.activateCustomizing=function(c){};b.deactivateCustomizing=function(c){};b.getOwnerIdFor=function(o){if(o&&(o instanceof b||o instanceof sap.ui.core.mvc.View)){return M.getOwnerIdFor(o)}};b.prototype.getInterface=function(){return this};b.prototype._initCompositeSupport=function(s){this._mMockServers={};this.getMetadata().onInitComponent();this.oComponentData=s&&s.componentData;this.getMetadata().init();this.initComponentModels();if(this.onWindowError){this._fnWindowErrorHandler=q.proxy(function(e){var E=e.originalEvent;this.onWindowError(E.message,E.filename,E.lineno)},this);q(window).bind("error",this._fnWindowErrorHandler)}if(this.onWindowBeforeUnload){this._fnWindowBeforeUnloadHandler=q.proxy(this.onWindowBeforeUnload,this);q(window).bind("beforeunload",this._fnWindowBeforeUnloadHandler)}if(this.onWindowUnload){this._fnWindowUnloadHandler=q.proxy(this.onWindowUnload,this);q(window).bind("unload",this._fnWindowUnloadHandler)}};b.prototype.destroy=function(){if(this._mMockServers){q.each(this._mMockServers,function(n,m){m.stop()});delete this._mMockServers}if(this._fnWindowErrorHandler){q(window).unbind("error",this._fnWindowErrorHandler);delete this._fnWindowErrorHandler}if(this._fnWindowBeforeUnloadHandler){q(window).unbind("beforeunload",this._fnWindowBeforeUnloadHandler);delete this._fnWindowBeforeUnloadHandler}if(this._fnWindowUnloadHandler){q(window).unbind("unload",this._fnWindowUnloadHandler);delete this._fnWindowUnloadHandler}if(this._oEventBus){this._oEventBus.destroy();delete this._oEventBus}M.prototype.destroy.apply(this,arguments);this.getMetadata().onExitComponent()};b.prototype.getComponentData=function(){return this.oComponentData};b.prototype.getEventBus=function(){if(!this._oEventBus){q.sap.require("sap.ui.core.EventBus");this._oEventBus=new sap.ui.core.EventBus()}return this._oEventBus};b.prototype.initComponentModels=function(m,s){var o=this.getMetadata();var c=m||o.getModels(),S=s||o.getServices();if(c){var f=function(n,u,e,g){if(this._mMockServers[n]){this._mMockServers[n].stop()}q.sap.require("sap.ui.core.util.MockServer");this._mMockServers[n]=new sap.ui.core.util.MockServer({rootUri:u});this._mMockServers[n].simulate(e,g);this._mMockServers[n].start()};var d=function(n,e){var u=e.uri,T=e.type;q.sap.require(T);var g=q.sap.getObject(T);var h;if(T==="sap.ui.model.resource.ResourceModel"){h=new g({bundleUrl:u})}else if(T==="sap.ui.model.odata.ODataModel"){if(e.mockserver){f.call(this,n,u,e.mockserver.model,e.mockserver.data)}h=new g(u,e.settings)}else if(T==="sap.ui.model.json.JSONModel"||T==="sap.ui.model.xml.XMLModel"){h=new g();if(u){h.loadData(u)}}return h};var t=this;q.each(c,function(k,e){var g=e.service,h;if(g){var i=S[g];h=d.call(t,k,i)}else if(e.type){h=d.call(t,k,e)}if(h){t.setModel(h,k||undefined)}})}};sap.ui.component=function(c){if(!c){throw new Error("sap.ui.component cannot be called without parameter!")}if(typeof c==="string"){return sap.ui.getCore().getComponent(c)}else{var n=c.name,i=c.id,o=c.componentData,s=n+".Component",S=c.settings;var d=sap.ui.component.load(c,true);var I=new d(q.extend({},S,{id:i,componentData:o}));q.sap.log.info("Component instance Id = "+I.getId());return I}};sap.ui.component.load=function(c,f){var n=c.name,u=c.url,s=n+".Component",p=s+"-preload",P=sap.ui.getCore().getConfiguration().getComponentPreload();if(!n){throw new Error("The name of the component is undefined.")}if(u){q.sap.registerModulePath(n,u)}if(P==="sync"||P==="async"){try{if(!q.sap.isDeclared(s,true)){q.sap.require(p)}}catch(e){q.sap.log.warning("couldn't preload component from "+p+": "+((e&&e.message)||e))}}q.sap.require(s);var o=q.sap.getObject(s);if(!o){if(f){throw new Error("The specified component controller\""+s+"\" could not be found!")}else{q.sap.log.warning("The specified component controller \""+s+"\" could not be found!")}}return o};return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Control')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.Control');if(!jQuery.sap.isDeclared('sap.ui.core.CustomStyleClassSupport')){jQuery.sap.declare('sap.ui.core.CustomStyleClassSupport');if(!jQuery.sap.isDeclared('sap.ui.core.Element')){jQuery.sap.declare('sap.ui.core.Element');sap.ui.define("sap/ui/core/Element",['jquery.sap.global','sap/ui/base/ManagedObject','./Core','./ElementMetadata','sap/ui/model/SimpleType','jquery.sap.strings'],function(q,M,C,E,S){"use strict";var a=M.extend("sap.ui.core.Element",{metadata:{stereotype:"element","abstract":true,publicMethods:["getId","getMetadata","getTooltip_AsString","getTooltip_Text","getModel","setModel","hasModel","bindElement","unbindElement","getElementBinding","prop","getLayoutData","setLayoutData"],library:"sap.ui.core",properties:{},aggregations:{tooltip:{name:"tooltip",type:"sap.ui.core.TooltipBase",altTypes:["string"],multiple:false},customData:{name:"customData",type:"sap.ui.core.CustomData",multiple:true,singularName:"customData"},layoutData:{name:"layoutData",type:"sap.ui.core.LayoutData",multiple:false,singularName:"layoutData"},dependents:{name:"dependents",type:"sap.ui.core.Control",multiple:true}},associations:{},events:{}},constructor:function(i,s){M.apply(this,arguments)},renderer:null},E);a.defineClass=function(c,s,m){return sap.ui.base.Object.defineClass(c,s,m||E)};a.prototype.getInterface=function(){return this};a.prototype._handleEvent=function(e){var h="on"+e.type;this._callEventHandles(this.aBeforeDelegates.slice(0),h,e,true);this._callEventHandles([this],h,e);this._callEventHandles(this.aDelegates.slice(0),h,e,true)};a.prototype._callEventHandles=function(h,H,e,d){if(h.length>0){for(var i=0;i<h.length;i++){if(e.isImmediateHandlerPropagationStopped()){break}var o=d?h[i].oDelegate:h[i];var t=(d&&h[i].vThis)?h[i].vThis:o;if(t===true){t=this}if(o[H]){o[H].call(t,e)}}}};a.create=function(d,k){if(!d||d instanceof a||typeof d!=="object"||d instanceof String){return d}function g(t){if(typeof t==="function"){return t}if(typeof t==="string"){return q.sap.getObject(t)}}var c=g(d.Type)||g(k&&k.type);if(typeof c==="function"){return new c(d)}var m="Don't know how to create an Element from "+d+" ("+(typeof d)+")";q.sap.log.fatal(m);throw new Error(m)};a.prototype.toString=function(){if(this.getMetadata){return"Element "+this.getMetadata().getName()+"#"+this.sId}else{return"Element {unknown class}#"+this.sId}};a.prototype.getDomRef=function(s){return q.sap.domById(s?this.getId()+"-"+s:this.getId())};a.prototype.$=function(s){return q(this.getDomRef(s))};a.prototype.isActive=function(){return this.oParent&&this.oParent.isActive()};a.prototype.prop=function(p,v){var P=this.getMetadata().getJSONKeys()[p];if(P){if(arguments.length==1){return this[P._sGetter]()}else{this[P._sMutator](v);return this}}};a.prototype.insertDependent=function(c,i){return this.insertAggregation("dependents",c,i,true)};a.prototype.addDependent=function(c){return this.addAggregation("dependents",c,true)};a.prototype.removeDependent=function(c){return this.removeAggregation("dependents",c,true)};a.prototype.removeAllDependents=function(){return this.removeAllAggregation("dependents",true)};a.prototype.destroyDependents=function(){return this.destroyAggregation("dependents",true)};a.prototype.rerender=function(){if(this.oParent){this.oParent.rerender()}};a.prototype.getUIArea=function(){return this.oParent?this.oParent.getUIArea():null};a.prototype.destroy=function(s){M.prototype.destroy.call(this,s);this.$().remove()};a.prototype.fireEvent=function(e,p){var A=Array.prototype.slice.apply(arguments);A[1]=p=p||{};p.id=p.id||this.getId();return sap.ui.base.EventProvider.prototype.fireEvent.apply(this,A)};a.prototype.addDelegate=function(d,c,t,b){this.removeDelegate(d);if(typeof c==="object"){b=t;t=c;c=false}if(typeof t==="boolean"){b=t;t=undefined}(c?this.aBeforeDelegates:this.aDelegates).push({oDelegate:d,bClone:!!b,vThis:((t===this)?true:t)});return this};a.prototype.removeDelegate=function(d){for(var i=0;i<this.aDelegates.length;i++){if(this.aDelegates[i].oDelegate==d){this.aDelegates.splice(i,1)}}for(var i=0;i<this.aBeforeDelegates.length;i++){if(this.aBeforeDelegates[i].oDelegate==d){this.aBeforeDelegates.splice(i,1)}}return this};a.prototype.addEventDelegate=function(d,t){return this.addDelegate(d,false,t,true)};a.prototype.removeEventDelegate=function(d){return this.removeDelegate(d)};a.prototype.getFocusDomRef=function(){return this.getDomRef()||null};a.prototype.focus=function(){var f=this.getFocusDomRef();if(f){try{f.focus()}catch(e){var i=f.id?" (id: "+f.id+")":" ";q.sap.log.warning("DOM element"+i+" in "+this.toString()+" which should be focused cannot be focused: "+e.message)}}};a.prototype.getFocusInfo=function(){return{id:this.getId()}};a.prototype.applyFocusInfo=function(f){this.focus();return this};a.prototype._refreshTooltipBaseDelegate=function(t){var o=this.getTooltip();if(o instanceof sap.ui.core.TooltipBase){this.removeDelegate(o)}if(t instanceof sap.ui.core.TooltipBase){t._currentControl=this;this.addDelegate(t)}};a.prototype.setTooltip=function(t){this._refreshTooltipBaseDelegate(t);this.setAggregation("tooltip",t);return this};a.prototype.getTooltip=function(){return this.getAggregation("tooltip")};a.runWithPreprocessors=M.runWithPreprocessors;a.prototype.getTooltip_AsString=function(){var t=this.getTooltip();if(typeof t==="string"||t instanceof String){return t}return undefined};a.prototype.getTooltip_Text=function(){var t=this.getTooltip();if(t&&typeof t.getText==="function"){return t.getText()}return t};(function(){var g=function(e,k){var d=e.getAggregation("customData");if(d){for(var i=0;i<d.length;i++){if(d[i].getKey()==k){return d[i]}}}return null};var s=function(e,k,v,w){if(v===null){var d=g(e,k);if(!d){return}var b=e.getAggregation("customData").length;if(b==1){e.destroyAggregation("customData",true)}else{e.removeAggregation("customData",d,true);d.destroy()}}else{var d=g(e,k);if(d){d.setValue(v);d.setWriteToDom(w)}else{var d=new sap.ui.core.CustomData({key:k,value:v,writeToDom:w});e.addAggregation("customData",d,true)}}};a.prototype.data=function(){var b=arguments.length;if(b==0){var d=this.getAggregation("customData"),r={};if(d){for(var i=0;i<d.length;i++){r[d[i].getKey()]=d[i].getValue()}}return r}else if(b==1){var c=arguments[0];if(c===null){this.destroyAggregation("customData",true);return this}else if(typeof c=="string"){var e=g(this,c);return e?e.getValue():null}else if(typeof c=="object"){for(var k in c){s(this,k,c[k])}return this}else{throw new Error("When data() is called with one argument, this argument must be a string, an object or null, but is "+(typeof c)+":"+c+" (on UI Element with ID '"+this.getId()+"')")}}else if(b==2){s(this,arguments[0],arguments[1]);return this}else if(b==3){s(this,arguments[0],arguments[1],arguments[2]);return this}else{throw new Error("data() may only be called with 0-3 arguments (on UI Element with ID '"+this.getId()+"')")}}})();a.prototype.clone=function(I,l){var c=M.prototype.clone.apply(this,arguments);for(var i=0;i<this.aDelegates.length;i++){if(this.aDelegates[i].bClone){c.aDelegates.push(this.aDelegates[i])}}for(var i=0;i<this.aBeforeDelegates.length;i++){if(this.aBeforeDelegates[i].bClone){c.aBeforeDelegates.push(this.aBeforeDelegates[i])}}return c};a.prototype.findElements=function(r){var c=M.prototype.findAggregatedObjects.call(this,r);return c};a.prototype.setLayoutData=function(l){this.setAggregation("layoutData",l,true);var L=this.getParent();if(L){var e=q.Event("LayoutDataChange");e.srcControl=this;L._handleEvent(e)}return this};a.prototype.bindElement=function(p,P){return this.bindObject(p,P)};a.prototype.unbindElement=function(m){return this.unbindObject(m)};a.prototype.getElementBinding=function(m){return this.getObjectBinding(m)};return a},true)};sap.ui.define("sap/ui/core/CustomStyleClassSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var C=function(){if(!(this instanceof E)){return}var o=this.clone;this.clone=function(){var c=o.apply(this,arguments);if(this.aCustomStyleClasses){c.aCustomStyleClasses=this.aCustomStyleClasses.slice()}return c};this.addStyleClass=function(s,S){if(!this.aCustomStyleClasses){this.aCustomStyleClasses=[]}if(s){if(s.indexOf("\"")>-1){return this}if(s.indexOf("'")>-1){return this}for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){return this}}this.aCustomStyleClasses.push(s);var r=this.getDomRef();if(r){q(r).addClass(s)}else if(S===false){this.invalidate()}}return this};this.removeStyleClass=function(s,S){if(s&&this.aCustomStyleClasses){for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){this.aCustomStyleClasses.splice(i,1);var r=this.getDomRef();if(r){q(r).removeClass(s)}else if(S===false){this.invalidate()}}}}return this};this.toggleStyleClass=function(s,a){if(s&&typeof s==="string"){if(a===true){this.addStyleClass(s)}else if(a===false){this.removeStyleClass(s)}else if(a===undefined){this.hasStyleClass(s)?this.removeStyleClass(s):this.addStyleClass(s)}else{q.sap.log.warning(this.toString()+"- toggleStyleClass(): bAdd should be a boolean or undefined, but is '"+a+"'")}}return this};this.hasStyleClass=function(s){if(s&&this.aCustomStyleClasses){for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){return true}}}return false};this.getMetadata().addPublicMethods(["addStyleClass","removeStyleClass","toggleStyleClass","hasStyleClass"])};return C},true)};sap.ui.define("sap/ui/core/Control",['jquery.sap.global','./CustomStyleClassSupport','./Element'],function(q,C,E){"use strict";var a=E.extend("sap.ui.core.Control",{metadata:{stereotype:"control","abstract":true,publicMethods:["placeAt","attachBrowserEvent","detachBrowserEvent"],library:"sap.ui.core",properties:{"busy":{type:"boolean",defaultValue:false},"busyIndicatorDelay":{type:"int",defaultValue:1000}},aggregations:{},associations:{},events:{}},constructor:function(i,s){this.bAllowTextSelection=true;E.apply(this,arguments);this.bOutput=this.getDomRef()!=null;if(this._sapUiCoreLocalBusy_initBusyIndicator){this._sapUiCoreLocalBusy_initBusyIndicator()}},renderer:null});a.prototype.clone=function(){var c=E.prototype.clone.apply(this,arguments);if(this.aBindParameters){for(var i=0,l=this.aBindParameters.length;i<l;i++){var p=this.aBindParameters[i];c.attachBrowserEvent(p.sEventType,p.fnHandler,p.oListener!==this?p.oListener:undefined)}}c.bAllowTextSelection=this.bAllowTextSelection;return c};C.apply(a.prototype);a.prototype.isActive=function(){return q.sap.domById(this.sId)!=null};a.prototype.invalidate=function(o){var u;if(this.bOutput&&(u=this.getUIArea())){if(!this._bIsBeingDestroyed){u.addInvalidatedControl(this)}}else{var p=this.getParent();if(p&&(this.bOutput||!(this.getVisible&&this.getVisible()===false))){p.invalidate(this)}}};a.prototype.rerender=function(){sap.ui.core.UIArea.rerenderControl(this)};a.prototype.allowTextSelection=function(A){this.bAllowTextSelection=A;return this};a.prototype.attachBrowserEvent=function(e,h,l){if(e&&(typeof(e)==="string")){if(h&&typeof(h)==="function"){if(!this.aBindParameters){this.aBindParameters=[]}l=l||this;var p=function(){h.apply(l,arguments)};this.aBindParameters.push({sEventType:e,fnHandler:h,oListener:l,fnProxy:p});this.$().bind(e,p)}}return this};a.prototype.detachBrowserEvent=function(e,h,l){if(e&&(typeof(e)==="string")){if(h&&typeof(h)==="function"){var $=this.$(),i,p;l=l||this;if(this.aBindParameters){for(i=this.aBindParameters.length-1;i>=0;i--){p=this.aBindParameters[i];if(p.sEventType===e&&p.fnHandler===h&&p.oListener===l){this.aBindParameters.splice(i,1);$.unbind(e,p.fnProxy)}}}}}return this};a.prototype.getRenderer=function(){return sap.ui.core.RenderManager.getRenderer(this)};a.prototype.placeAt=function(r,p){var c=sap.ui.getCore();if(c.isInitialized()){var o=r;if(typeof o==="string"){o=c.byId(r)}var i=false;if(!(o instanceof E)){o=c.createUIArea(r);i=true}if(!o){return}if(!i){var b=o.getMetadata().getAllAggregations()["content"];var d=true;if(b){if(!b.multiple||b.type!="sap.ui.core.Control"){d=false}}else{if(!o.addContent||!o.insertContent||!o.removeAllContent){d=false}}if(!d){q.sap.log.warning("placeAt cannot be processed because container "+o+" does not have an aggregation 'content'.");return}}if(typeof p==="number"){o.insertContent(this,p)}else{p=p||"last";switch(p){case"last":o.addContent(this);break;case"first":o.insertContent(this,0);break;case"only":o.removeAllContent();o.addContent(this);break;default:q.sap.log.warning("Position "+p+" is not supported for function placeAt.")}}}else{var t=this;c.attachInitEvent(function(){t.placeAt(r,p)})}return this};a.prototype.onselectstart=function(b){if(!this.bAllowTextSelection){b.preventDefault();b.stopPropagation()}};a.prototype.getIdForLabel=function(){return this.getId()};a.prototype.destroy=function(s){this._bIsBeingDestroyed=true;this._cleanupBusyIndicator();sap.ui.core.ResizeHandler.deregisterAllForControl(this.getId());E.prototype.destroy.call(this,s)};(function(){var p="focusin focusout keydown keypress keyup",b={onAfterRendering:function(){if(this.getProperty("busy")===true&&this.$()){A.apply(this)}}},A=function(){var $=this.$(this._sBusySection),F=["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"];if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}var t=$.get(0)&&$.get(0).tagName;if(t&&q.inArray(t.toLowerCase(),F)>=0){q.sap.log.warning("Busy Indicator cannot be placed in elements with tag "+t);return}if($.css('position')=='static'){this._busyStoredPosition='static';$.css('position','relative')}var B=q('<div class="sapUiLocalBusyIndicator"><div class="sapUiLocalBusyIndicatorAnimation"><div class="sapUiLocalBusyIndicatorBox"></div><div class="sapUiLocalBusyIndicatorBox"></div><div class="sapUiLocalBusyIndicatorBox"></div></div></div>');B.attr("id",this.getId()+"-busyIndicator");$.append(B);$.addClass('sapUiLocalBusy');if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId)}this._busyDelayedCallId=q.sap.delayedCall(1200,this,f);h.apply(this,[true])},h=function(B){if(B){var $=this.$(this._sBusySection),t=$.find('[tabindex]'),c=this;this._busyTabIndices=[];t.each(function(i,o){var r=q(o),T=r.attr('tabindex');if(T<0)return true;c._busyTabIndices.push({ref:r,tabindex:T});r.attr('tabindex',-1);r.bind(p,P)})}else{if(this._busyTabIndices){q.each(this._busyTabIndices,function(i,o){o.ref.attr('tabindex',o.tabindex);o.ref.unbind(p,P)})}this._busyTabIndices=[]}},P=function(e){e.preventDefault();e.stopImmediatePropagation()},f=function(){var $=this.$(this._sBusySection).children('.sapUiLocalBusyIndicator').children('.sapUiLocalBusyIndicatorAnimation');var t=this;t._busyAnimationTimer1=setTimeout(function(){$.children(":eq(0)").addClass('active');$.children(":not(:eq(0))").removeClass('active');t._busyAnimationTimer2=setTimeout(function(){$.children(":eq(1)").addClass('active');$.children(":not(:eq(1))").removeClass('active');t._busyAnimationTimer3=setTimeout(function(){$.children(":eq(2)").addClass('active');$.children(":not(:eq(2))").removeClass('active');t._busyAnimationTimer4=setTimeout(function(){$.children().removeClass('active')},150)},150)},150)},150);this._busyDelayedCallId=q.sap.delayedCall(1200,this,f)};a.prototype.setBusy=function(B,s){this._sBusySection=s;var $=this.$(this._sBusySection);if(B==this.getProperty("busy")){return}this.setProperty("busy",B,true);if(B){this.addDelegate(b,false,this)}else{this.removeDelegate(b);if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}}if(!this.getDomRef()){return}if(B){if(this.getBusyIndicatorDelay()<=0){A.apply(this)}else{this._busyIndicatorDelayedCallId=q.sap.delayedCall(this.getBusyIndicatorDelay(),this,A)}}else{this.$("busyIndicator").remove();this.$().removeClass('sapUiLocalBusy');if(this._busyStoredPosition){$.css('position',this._busyStoredPosition);delete this._busyStoredPosition}h.apply(this,[false]);if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId);delete this._busyDelayedCallId}}};a.prototype.isBusy=function(){return this.getProperty("busy")};a.prototype.setBusyIndicatorDelay=function(d){this.setProperty("busyIndicatorDelay",d,true);return this};a.prototype._cleanupBusyIndicator=function(){if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId);delete this._busyDelayedCallId}if(this._busyAnimationTimer1){clearTimeout(this._busyAnimationTimer1);delete this._busyAnimationTimer1}if(this._busyAnimationTimer2){clearTimeout(this._busyAnimationTimer2);delete this._busyAnimationTimer2}if(this._busyAnimationTimer3){clearTimeout(this._busyAnimationTimer3);delete this._busyAnimationTimer3}if(this._busyAnimationTimer4){clearTimeout(this._busyAnimationTimer4);delete this._busyAnimationTimer4}}})();return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIArea')){jQuery.sap.declare('sap.ui.core.UIArea');sap.ui.define("sap/ui/core/UIArea",['jquery.sap.global','sap/ui/base/ManagedObject','./Element','jquery.sap.act','jquery.sap.ui'],function(q,M,E){"use strict";var r=q.sap.log.getLogger("sap.ui.Rendering",((window["sap-ui-config"]&&window["sap-ui-config"]["xx-debugRendering"])||/sap-ui-xx-debug(R|-r)endering=(true|x|X)/.test(document.location.search))?q.sap.log.Level.DEBUG:Math.min(q.sap.log.Level.INFO,q.sap.log.getLevel())),d=function(c){return c},D=q.noop,f=q.noop;if(r.isLoggable()){d=function(c){var l;try{throw new Error()}catch(e){l=e.stack||e.stacktrace||(e.sourceURL?e.sourceURL+":"+e.line:null);l=l?l.split(/\n\s*/g).slice(2):undefined}return{obj:c,location:l}};D=function(t,c){var C=sap.ui.getCore(),R={},n,o;for(n in c){o=C.byId(n);R[n]={type:o?o.getMetadata().getName():(c[n].obj===t?"UIArea":"(no such control)"),location:c[n].location,reason:c[n].reason}}r.debug("  UIArea '"+t.getId()+"', pending updates: "+JSON.stringify(R,null,"\t"))};f=function(b,a){var n;for(n in a){if(b[n]!=null){if(b[n].obj!==a[n].obj){a[n].reason="replaced during rendering"}else{a[n].reason="invalidated again during rendering"}}else{a[n].reason="invalidated during rendering"}}}}var U=M.extend("sap.ui.core.UIArea",{constructor:function(c,R){if(arguments.length===0){return}M.apply(this);this.oCore=c;this.bLocked=false;this.bInitial=true;this.aContentToRemove=[];this.bNeedsRerendering=false;if(R!=null){this.setRootNode(R);this.bNeedsRerendering=this.bNeedsRerendering&&!q.sap.domById(R.id+"-Init")}this.mInvalidatedControls={};if(!this.bNeedsRerendering){this.bRenderSelf=false}else{this.oCore.addInvalidatedUIArea(this)}},metadata:{publicMethods:["setRootNode","getRootNode","setRootControl","getRootControl","lock","unlock","isLocked"],aggregations:{content:{name:"content",type:"sap.ui.core.Control",multiple:true,singularName:"content"},dependents:{name:"dependents",type:"sap.ui.core.Control",multiple:true}}}});U.prototype.isInvalidateSuppressed=function(){return this.iSuppressInvalidate>0};U.prototype.getId=function(){return this.oRootNode?this.oRootNode.id:null};U.prototype.getUIArea=function(){return this};U.prototype.setRootNode=function(R){if(this.oRootNode===R){return}if(this.oRootNode){this._ondetach()}this.oRootNode=R;if(this.getContent().length>0){this.invalidate()}if(this.oRootNode){this._onattach()}};U.prototype.getRootNode=function(){return this.oRootNode};U.prototype.setRootControl=function(R){this.removeAllContent();this.addContent(R)};U.prototype.getRootControl=function(i){var c=this.getContent();if(c.length>0){if(i>=0&&i<c.length){return c[i]}return c[0]}return null};U.prototype._addRemovedContent=function(o){if(this.oRootNode&&o){this.aContentToRemove.push(o)}};U.prototype.addContent=function(c,_){this.addAggregation("content",c,_);if(_!==true){this.invalidate()}return this};U.prototype.removeContent=function(c,_){var C=this.removeAggregation("content",c,_);if(!_){var o;if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}return C};U.prototype.removeAllContent=function(){var c=this.removeAllAggregation("content");for(var i=0;i<c.length;i++){var o;var C=c[i];if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}return c};U.prototype.destroyContent=function(){var c=this.getContent();for(var i=0;i<c.length;i++){var o;var C=c[i];if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}this.destroyAggregation("content");return this};U.prototype.lock=function(){this.bLocked=true};U.prototype.unlock=function(){if(this.bLocked&&this.bNeedsRerendering){this.oCore.addInvalidatedUIArea(this)}this.bLocked=false};U.prototype.isLocked=function(){return this.bLocked};U.prototype.getBindingContext=function(){return null};U.prototype.getEventingParent=function(){return this.oCore};U.prototype.isActive=function(){return q.sap.domById(this.getId())!=null};U.prototype.invalidate=function(){this.addInvalidatedControl(this)};U.prototype.addInvalidatedControl=function(c){if(this.bRenderSelf){return}if(!this.bNeedsRerendering){this.oCore.addInvalidatedUIArea(this)}var i=c.getId();if(c===this){this.bRenderSelf=true;this.bNeedsRerendering=true;this.mInvalidatedControls={};this.mInvalidatedControls[i]=d(this);return}if(this.mInvalidatedControls[i]){return}if(!this.bRenderSelf){this.mInvalidatedControls[i]=d(c);this.bNeedsRerendering=true}};U.prototype.rerender=function(a){var t=this;function c(){t.bRenderSelf=false;t.aContentToRemove=[];t.mInvalidatedControls={};t.bNeedsRerendering=false}if(a){this.bNeedsRerendering=true}if(this.bLocked||!this.bNeedsRerendering){return false}var R=this.bRenderSelf,C=this.aContentToRemove,I=this.mInvalidatedControls,u=false;c();q.sap.measure.pause("renderPendingUIUpdates");q.sap.measure.start(this.getId()+"---rerender","Rerendering of "+this.getMetadata().getName());D(this,I);if(R){if(this.oRootNode){r.debug("Full Rendering of UIArea '"+this.getId()+"'");sap.ui.core.RenderManager.preserveContent(this.oRootNode,false,this.bInitial);this.bInitial=false;var b=function(h,j){var l=h.length;var k;for(var i=0;i<l;i++){k=j?h[i].getDomRef():h[i];if(k&&!sap.ui.core.RenderManager.isPreservedContent(k)&&t.oRootNode===k.parentNode){q(k).remove()}}return l};b(C);var e=this.getContent();var l=b(e,true);for(var i=0;i<l;i++){this.oCore.oRenderManager.render(e[i],this.oRootNode,true)}u=true}else{r.debug("Full Rendering of UIArea '"+this.getId()+"' postponed, no root node")}}else{var g=function(A){while(A&&A!==t){if(I.hasOwnProperty(A.getId())){return true}if(A&&A.getMetadata&&A.getMetadata().isInstanceOf("sap.ui.core.PopupInterface")){break}A=A.getParent()}return false};for(var n in I){var o=this.oCore.byId(n);if(o&&!g(o.getParent())){o.rerender();u=true}}}f(I,this.mInvalidatedControls);q.sap.measure.end(this.getId()+"---rerender");q.sap.measure.resume("renderPendingUIUpdates");return u};U.prototype._onControlRendered=function(c){var i=c.getId();if(this.mInvalidatedControls[i]){delete this.mInvalidatedControls[i]}};U.rerenderControl=function(c){var o=c?c.getDomRef():null;var p=o&&o.parentNode;if(p){var u=c.getUIArea();var a=u?u.oCore.oRenderManager:sap.ui.getCore().createRenderManager();r.debug("Rerender Control '"+c.getId()+"'"+(u?"":" (using a temp. RenderManager)"));sap.ui.core.RenderManager.preserveContent(o,true,false);a.render(c,p)}else{var u=c.getUIArea();u&&u._onControlRendered(c);r.warning("Couldn't rerender '"+c.getId()+"', as its DOM location couldn't be determined")}};U.prototype._handleEvent=function(e){var o=null;o=q(e.target).control(0);q.sap.act.refresh();if(o===null){return}if(e.isMarked("delayedMouseEvent")){return}if(e.isMarked("handledByUIArea")){e.setMark("firstUIArea",false);return}e.setMarked("firstUIArea");e.srcControl=o;if(e.type==="contextmenu"&&e.shiftKey&&e.altKey&&!!(e.metaKey||e.ctrlKey)){q.sap.log.info("Suppressed forwarding the contextmenu event as control event because CTRL+SHIFT+ALT is pressed!");return}this.oCore._handleControlEvent(e,this.getId());if(this.bLocked||this.oCore.isLocked()){return}var a=[];if(e.getPseudoTypes){a=e.getPseudoTypes()}a.push(e.type);while(o&&o instanceof E&&o.isActive()&&!e.isPropagationStopped()){for(var i=0,b=a.length;i<b;i++){var t=a[i];e.type=t;e.currentTarget=o.getDomRef();o._handleEvent(e);if(e.isImmediatePropagationStopped()){break}}if(e.isPropagationStopped()){break}if(o.bStopEventBubbling){break}var c=o.getDomRef();if(!c){break}c=c.parentNode;o=null;if(e.isMarked("fromMouseout")&&q.sap.containsOrEquals(c,e.relatedTarget)){break}while(c&&c!==this.getRootNode()){if(c.id){o=q(c).control(0);if(o){break}}c=c.parentNode}}e.currentTarget=this.getRootNode();(e.originalEvent||e)._sapui_handledByUIArea=true;if(e.isPropagationStopped()){q.sap.log.debug("'"+e.type+"' propagation has been stopped")}var n=e.type;if(n!="mousemove"&&n!="mouseover"&&n!="scroll"&&n!="mouseout"){var g=q(e.target).control(0);if(g){q.sap.log.debug("Event fired: '"+e.type+"' on "+g,"","sap.ui.core.UIArea")}else{q.sap.log.debug("Event fired: '"+e.type+"'","","sap.ui.core.UIArea")}}};U.prototype._onattach=function(){var o=this.getRootNode();if(o==null){return}q(o).attr("data-sap-ui-area",o.id).bind(q.sap.ControlEvents.join(" "),q.proxy(this._handleEvent,this))};U.prototype._ondetach=function(){var o=this.getRootNode();if(o==null){return}q(o).removeAttr("data-sap-ui-area").unbind()};U.prototype.clone=function(){throw new Error("UIArea can't be cloned")};U._oRenderLog=r;return U},true)};sap.ui.define("sap/ui/core/Core",['jquery.sap.global','sap/ui/Device','sap/ui/Global','sap/ui/base/DataType','sap/ui/base/EventProvider','./Component','./Configuration','./Control','./Element','./ElementMetadata','./FocusHandler','./RenderManager','./ResizeHandler','./ThemeCheck','./UIArea','./tmpl/Template','jquery.sap.act','jquery.sap.dom','jquery.sap.events','jquery.sap.mobile','jquery.sap.properties','jquery.sap.resources','jquery.sap.script'],function(q,D,G,a,E,C,c,d,e,g,F,R,h,T,U,j){"use strict";var k=E.extend("sap.ui.core.Core",{constructor:function(){if(sap.ui.getCore&&sap.ui.getCore()){return sap.ui.getCore()}var t=this,l=q.sap.log,M="sap.ui.core.Core";E.apply(this);this.bBooted=false;this.bInitialized=false;this.bDomReady=false;this.aPlugins=[];this.mLibraries={};this.mResourceBundles={};this.mUIAreas={};this.oModels={};this.oEventBus=null;this.mElements={};this.mObjects={"component":{},"template":{}};this.oRootComponent=null;this.aInitListeners=[];this.bInitLegacyLib=false;l.info("Creating Core",null,M);this.oConfiguration=new c(this);if(this.oConfiguration["xx-bindingSyntax"]==="complex"){sap.ui.base.ManagedObject.bindingParser=sap.ui.base.BindingParser.complexParser}if(this.oConfiguration["xx-designMode"]==true){sap.ui.base.BindingParser._keepBindingStrings=true}g.prototype.register=function(K){t.registerElementClass(K)};e.prototype.register=function(){t.registerElement(this)};e.prototype.deregister=function(){t.deregisterElement(this)};C.prototype.register=function(){t.registerObject(this)};C.prototype.deregister=function(){t.deregisterObject(this)};j.prototype.register=function(){t.registerObject(this)};j.prototype.deregister=function(){t.deregisterObject(this)};var m=this.oConfiguration.modules;if(this.oConfiguration.getDebug()){m.unshift("sap-ui-debug")}var i=q.inArray("sap.ui.core.library",m);if(i!=0){if(i>0){m.splice(i,1)}m.unshift("sap.ui.core.library")}l.info("Declared modules: "+m,M);var o=window["sap-ui-config"];if(this.oConfiguration.themeRoot){o=o||{};o.themeroots=o.themeroots||{};o.themeroots[this.oConfiguration.getTheme()]=this.oConfiguration.themeRoot}if(o){if(o.themeroots){for(var f in o.themeroots){var n=o.themeroots[f];if(typeof n==="string"){this.setThemeRoot(f,n)}else{for(var p in n){if(p.length>0){this.setThemeRoot(f,[p],n[p])}else{this.setThemeRoot(f,n[p])}}}}}}this.sTheme=this.oConfiguration.getTheme();q(document.documentElement).addClass("sapUiTheme-"+this.sTheme);l.info("Declared theme "+this.sTheme,null,M);if(this.oConfiguration.getRTL()){q(document.documentElement).attr("dir","rtl");l.info("RTL mode activated",null,M)}var $=q("html");var b=D.browser;var s=b.name;if(s===b.BROWSER.CHROME){q.browser.safari=false;q.browser.chrome=true}else if(s===b.BROWSER.SAFARI){q.browser.safari=true;q.browser.chrome=false;if(b.mobile){s="m"+s}}if(s){q.browser.fVersion=b.version;q.browser.mobile=b.mobile;s=s+Math.floor(b.version);$.attr("data-sap-ui-browser",s);l.debug("Browser-Id: "+s,null,M)}$.attr("data-sap-ui-os",D.os.name+D.os.versionStr);var u=null;switch(D.os.name){case D.os.OS.IOS:u="sap-ios";break;case D.os.OS.ANDROID:u="sap-android";break;case D.os.OS.BLACKBERRY:u="sap-bb";break;case D.os.OS.WINDOWS_PHONE:u="sap-winphone";break}if(u){$.addClass(u)}if(this.oConfiguration.getWeinreId()){l.info("Starting WEINRE Remote Web Inspector");var w="<script src=\"";w+=this.oConfiguration.getWeinreServer();w+="/target/target-script-min.js#";w+=q.sap.encodeURL(this.oConfiguration.getWeinreId());w+="\"></script>";document.write(w)}sap.ui.getCore=q.sap.getter(this.getInterface());R.initHTML5Support();this.oRenderManager=new R();var S=q.sap.syncPoint("UI5 Document Ready",function(O,K){t.handleLoad()});var v=S.startTask("document.ready");var x=S.startTask("preload and boot");q(function(){l.trace("document is ready");S.finishTask(v)});var y=q.sap.syncPoint("UI5 Core Preloads and Bootstrap Script",function(O,K){l.trace("Core loaded: open="+O+", failures="+K);t._boot();S.finishTask(x)});var z=this.oConfiguration["xx-bootTask"];if(z){var A=y.startTask("custom boot task");z(function(K){y.finishTask(A,typeof K==="undefined"||K===true)})}var B=new q.sap.Version(this.oConfiguration.getCompatibilityVersion("flexBoxPolyfill"));if(B.compareTo("1.16")>=0){q.support.useFlexBoxPolyfill=false}else if(!q.support.flexBoxLayout&&!q.support.newFlexBoxLayout&&!q.support.ie10FlexBoxLayout){q.support.useFlexBoxPolyfill=true}else{q.support.useFlexBoxPolyfill=false}var H=y.startTask("bootstrap script");this.boot=function(){if(this.bBooted){return}this.bBooted=true;y.finishTask(H)};var P=this.oConfiguration.preload;if(window["sap-ui-debug"]){P=""}if(P==="auto"){P=(window["sap-ui-optimized"]&&!this.oConfiguration['xx-loadAllMode'])?"sync":""}this.oConfiguration.preload=P;if(P==="sync"||P==="async"){var I=P!=="sync";q.each(m,function(i,K){if(K.match(/\.library$/)){q.sap.preloadModules(K+"-preload",I,y)}})}var J=this.oConfiguration.getAppCacheBuster();if(J&&J.length>0){q.sap.require("sap.ui.core.AppCacheBuster");sap.ui.core.AppCacheBuster.boot(y)}},metadata:{publicMethods:["boot","isInitialized","isThemeApplied","attachInitEvent","attachInit","getRenderManager","createRenderManager","getConfiguration","setRoot","createUIArea","getUIArea","getUIDirty","getElementById","getCurrentFocusedControlId","getControl","getComponent","getTemplate","lock","unlock","isLocked","attachEvent","detachEvent","applyChanges","getEventBus","applyTheme","setThemeRoot","attachThemeChanged","detachThemeChanged","getStaticAreaRef","registerPlugin","unregisterPlugin","getLibraryResourceBundle","byId","getLoadedLibraries","loadLibrary","initLibrary","includeLibraryTheme","setModel","getModel","hasModel","isMobile","attachControlEvent","detachControlEvent","attachIntervalTimer","detachIntervalTimer","attachParseError","detachParseError","fireParseError","attachValidationError","detachValidationError","fireValidationError","attachFormatError","detachFormatError","fireFormatError","attachValidationSuccess","detachValidationSuccess","fireValidationSuccess","attachLocalizationChanged","detachLocalizationChanged","attachLibraryChanged","detachLibraryChanged","isStaticAreaRef","createComponent","getRootComponent","getApplication"]}});k.M_EVENTS={ControlEvent:"ControlEvent",UIUpdated:"UIUpdated",ThemeChanged:"ThemeChanged",LocalizationChanged:"localizationChanged",LibraryChanged:"libraryChanged",ValidationError:"validationError",ParseError:"parseError",FormatError:"formatError",ValidationSuccess:"validationSuccess"};k.prototype._boot=function(){this.lock();var b=this.oConfiguration['xx-preloadLibCss'];if(b.length>0){var A=b[0].slice(0,1)==="!";if(A){b[0]=b[0].slice(1)}if(b[0]==="*"){b.splice(0,1);var p=0;q.each(this.oConfiguration.modules,function(i,f){var m=f.match(/^(.*)\.library$/);if(m){b.splice(p,0,m[1])}})}if(!A){this.includeLibraryTheme("sap-ui-merged",undefined,"?l="+b.join(","))}}var t=this;q.each(this.oConfiguration.modules,function(i,f){var m=f.match(/^(.*)\.library$/);if(m){t.loadLibrary(m[1])}else{q.sap.require(f)}});this.unlock()};k.prototype.applyTheme=function(t,s){t=this.oConfiguration._normalizeTheme(t,s);if(s){this.setThemeRoot(t,s)}if(t&&this.sTheme!=t){var b=this.sTheme;this._updateThemeUrls(t);this.sTheme=t;this.oConfiguration._setTheme(t);q(document.documentElement).removeClass("sapUiTheme-"+b).addClass("sapUiTheme-"+t);if(this.oThemeCheck){this.oThemeCheck.fireThemeChangedEvent(false,true)}}};k.prototype._updateThemeUrls=function(t){var b=this,s=this.oConfiguration.getRTL()?"-RTL":"";q("link[id^=sap-ui-theme-]").each(function(){var l=this.id.slice(13),L=this.href.slice(this.href.lastIndexOf("/")+1),S="library",H,p,$=q(this);if((p=l.indexOf("-["))>0){S+=l.slice(p+2,-1);l=l.slice(0,p)}if(L===(S+".css")||L===(S+"-RTL.css")){L=S+s+".css"}if($.attr("sap-ui-css-count")){$.remove()}H=b._getThemePath(l,t)+L;if(H!=this.href){this.href=H;$.removeAttr("sap-ui-ready")}})};k.prototype._getThemePath=function(l,t){if(this._mThemeRoots){var p=this._mThemeRoots[t+" "+l]||this._mThemeRoots[t];if(p){p=p+l.replace(/\./g,"/")+"/themes/"+t+"/";q.sap.registerModulePath(l+".themes."+t,p);return p}}return q.sap.getModulePath(l+".themes."+t,"/")};k.prototype.setThemeRoot=function(t,l,s){if(!this._mThemeRoots){this._mThemeRoots={}}if(s===undefined){s=l;l=undefined}s=s+(s.slice(-1)=="/"?"":"/");if(l){for(var i=0;i<l.length;i++){var b=l[i];this._mThemeRoots[t+" "+b]=s}}else{this._mThemeRoots[t]=s}return this};k.prototype.init=function(){if(this.bInitialized){return}var b=q.sap.log,M="sap.ui.core.Core.init()";this.boot();b.info("Initializing",null,M);this.oFocusHandler=new F(document.body,this);this.oResizeHandler=new h(this);this.oThemeCheck=new T(this);b.info("Initialized",null,M);this.bInitialized=true;b.info("Starting Plugins",null,M);this.startPlugins();b.info("Plugins started",null,M);var o=this.oConfiguration;if(o.areas){for(var i=0,l=o.areas.length;i<l;i++){this.createUIArea(o.areas[i])}o.areas=undefined}if(o.onInit){if(typeof o.onInit==="function"){o.onInit()}else{q.sap.globalEval(o.onInit)}o.onInit=undefined}this.oThemeCheck.fireThemeChangedEvent(true);var s=o.getRootComponent();if(s){b.info("Loading Root Component: "+s,null,M);var m=sap.ui.component({name:s});this.oRootComponent=m;var n=o["xx-rootComponentNode"];if(n&&m instanceof sap.ui.core.UIComponent){var p=q.sap.domById(n);if(p){b.info("Creating ComponentContainer for Root Component: "+s,null,M);var t=new sap.ui.core.ComponentContainer({component:m,propagateModel:true});t.placeAt(p)}}}else{var A=o.getApplication();if(A){b.warning("The configuration 'application' is deprecated. Please use the configuration 'component' instead! Please migrate from sap.ui.app.Application to sap.ui.core.Component.");b.info("Loading Application: "+A,null,M);q.sap.require(A);var u=q.sap.getObject(A);var v=new u();}}var w=this.aInitListeners;this.aInitListeners=undefined;if(w&&w.length>0){b.info("Fire Loaded Event",null,M);q.each(w,function(i,f){f()})}this.renderPendingUIUpdates()};k.prototype.handleLoad=function(){this.bDomReady=true;var w=this.isLocked();if(!w){this.lock()}this.init();if(!w){this.unlock()}};k.prototype.isInitialized=function(){return this.bInitialized};k.prototype.isThemeApplied=function(){return T.themeLoaded};k.prototype.attachInitEvent=function(f){if(this.aInitListeners){this.aInitListeners.push(f)}};k.prototype.attachInit=function(f){if(this.aInitListeners){this.aInitListeners.push(f)}else{f()}};k.prototype.lock=function(){this.bLocked=true};k.prototype.unlock=function(){this.bLocked=false};k.prototype.isLocked=function(){return this.bLocked};k.prototype.getConfiguration=function(){return this.oConfiguration};k.prototype.getRenderManager=function(){return this.createRenderManager()};k.prototype.createRenderManager=function(){return(new R()).getInterface()};k.prototype.getCurrentFocusedControlId=function(){if(!this.isInitialized()){throw new Error("Core must be initialized")}return this.oFocusHandler.getCurrentFocusedControlId()};k.prototype.loadLibrary=function(l,u){if(!this.mLibraries[l]){var m=l+".library",A;if(u){q.sap.registerModulePath(l,u)}if(this.oConfiguration['xx-loadAllMode']&&!q.sap.isDeclared(m)){A=m+"-all";q.sap.log.debug("load all-in-one file "+A);q.sap.require(A)}else if(this.oConfiguration.preload==='sync'||this.oConfiguration.preload==='async'){q.sap.preloadModules(m+"-preload",false)}q.sap.require(m);if(!this.mLibraries[l]){q.sap.log.warning("library "+l+" didn't initialize itself");this.initLibrary(l)}if(this.oThemeCheck&&this.isInitialized()){this.oThemeCheck.fireThemeChangedEvent(true)}}return this.mLibraries[l]};k.prototype.createComponent=function(v,u,i,s){if(typeof v==="string"){v={name:v,url:u};if(typeof i==="object"){v.settings=i}else{v.id=i;v.settings=s}}return sap.ui.component(v)};k.prototype.getRootComponent=function(){return this.oRootComponent};k.prototype.initLibrary=function(l){var L=typeof l==="string",o=L?{name:l}:l,s=o.name,b=q.sap.log,M="sap.ui.core.Core.initLibrary()";if(L){b.warning("[Deprecated] library "+s+" uses old fashioned initLibrary() call (rebuild with newest generator)")}if(!s||this.mLibraries[s]){return}b.debug("Analyzing Library "+s,null,M);this.mLibraries[s]=o=q.extend({dependencies:[],types:[],interfaces:[],controls:[],elements:[]},o);function f(){var p=q.sap.properties({url:sap.ui.resource(s,"library.properties")});o.version=p.getProperty(s+"[version]");var t=p.getProperty(s+"[dependencies]");b.debug("Required Libraries: "+t,null,M);o.dependencies=(t&&t.split(/[,;| ]/))||[];var K=p.getKeys(),u=/(.+)\.(type|interface|control|element)$/,v;for(var i=0;i<K.length;i++){var w=p.getProperty(K[i]);if(v=w.match(u)){o[v[2]+"s"].push(K[i])}}}if(L){f()}for(var i=0;i<o.dependencies.length;i++){var m=o.dependencies[i];b.debug("resolve Dependencies to "+m,null,M);if(!this.mLibraries[m]){b.warning("Dependency from "+s+" to "+m+" has not been resolved by library itself",null,M);this.loadLibrary(m)}}a.registerInterfaceTypes(o.interfaces);var n=o.controls.concat(o.elements);for(var i=0;i<n.length;i++){sap.ui.lazyRequire(n[i],"new extend getMetadata")}if(!o.noLibraryCSS&&q.inArray(s,this.oConfiguration['xx-preloadLibCss'])<0){this.includeLibraryTheme(s)}o.sName=o.name;o.aControls=o.controls;if(!q.sap.isDeclared(s+".library")){b.warning("Library Module "+s+".library"+" not loaded automatically",null,M);q.sap.require(s+".library")}this.fireLibraryChanged({name:s,stereotype:"library",operation:"add",metadata:o})};k.prototype.includeLibraryTheme=function(l,v,Q){if((l!="sap.ui.legacy")&&(l!="sap.ui.classic")){if(!v){v=""}var s=(this.oConfiguration.getRTL()?"-RTL":"");var L,b=l+(v.length>0?"-["+v+"]":v);if(l&&l.indexOf(":")==-1){L="library"+v+s}else{L=l.substring(l.indexOf(":")+1)+v;l=l.substring(0,l.indexOf(":"))}var f=this._getThemePath(l,this.sTheme)+L+".css"+(Q?Q:"");q.sap.log.info("Including "+f+" -  sap.ui.core.Core.includeLibraryTheme()");q.sap.includeStyleSheet(f,"sap-ui-theme-"+b);if(sap.ui.core.theming&&sap.ui.core.theming.Parameters){sap.ui.core.theming.Parameters._addLibraryTheme(b)}}};k.prototype.getLoadedLibraries=function(){return q.extend({},this.mLibraries)};k.prototype.getLibraryResourceBundle=function(l,L){l=l||"sap.ui.core";L=L||this.getConfiguration().getLanguage();var K=l+"/"+L;if(!this.mResourceBundles[K]){var u=sap.ui.resource(l,'messagebundle.properties');this.mResourceBundles[K]=q.sap.resources({url:u,locale:L})}return this.mResourceBundles[K]};k.prototype.setRoot=function(o,b){if(b){b.placeAt(o,"only")}};k.prototype.createUIArea=function(o){var t=this;if(!o){throw new Error("oDomRef must not be null")}if(typeof(o)==="string"){var i=o;o=q.sap.domById(o);if(!o){throw new Error("DOM element with ID '"+i+"' not found in page, but application tries to insert content.")}}if(!o.id||o.id.length==0){o.id=q.sap.uid()}var I=o.id;if(!this.mUIAreas[I]){this.mUIAreas[I]=new U(this,o);q.each(this.oModels,function(n,m){t.mUIAreas[I].oPropagatedProperties.oModels[n]=m});this.mUIAreas[I].propagateProperties(true)}else{this.mUIAreas[I].setRootNode(o)}return this.mUIAreas[I]};k.prototype.getUIArea=function(o){var i="";if(typeof(o)=="string"){i=o}else{i=o.id}if(i){return this.mUIAreas[i]}return null};var r=U._oRenderLog;k.prototype.addInvalidatedUIArea=function(u){if(!this._sRerenderTimer){r.debug("Registering timer for delayed re-rendering");this._sRerenderTimer=q.sap.delayedCall(0,this,"renderPendingUIUpdates")}};k.MAX_RENDERING_ITERATIONS=20;k.prototype.renderPendingUIUpdates=function(){r.debug("Render pending UI updates: start");q.sap.measure.start("renderPendingUIUpdates","Render pending UI updates in all UIAreas");var u=false,l=k.MAX_RENDERING_ITERATIONS>0,L=0;this._bRendering=true;do{if(l){L++;if(L>k.MAX_RENDERING_ITERATIONS){this._bRendering=false;throw new Error("Rendering has been re-started too many times ("+L+"). Add URL parameter sap-ui-xx-debugRendering=true for a detailed analysis.")}if(L>1){r.debug("Render pending UI updates: iteration "+L)}}if(this._sRerenderTimer){q.sap.clearDelayedCall(this._sRerenderTimer);this._sRerenderTimer=undefined}var m=this.mUIAreas;for(var i in m){u=m[i].rerender()||u}}while(l&&this._sRerenderTimer);this._bRendering=false;if(u){this.fireUIUpdated()}r.debug("Render pending UI updates: finished");q.sap.measure.end("renderPendingUIUpdates")};k.prototype.getUIDirty=function(){return!!(this._sRerenderTimer||this._bRendering)};k.prototype.attachUIUpdated=function(f,l){this.attachEvent(k.M_EVENTS.UIUpdated,f,l)};k.prototype.detachUIUpdated=function(f,l){this.detachEvent(k.M_EVENTS.UIUpdated,f,l)};k.prototype.fireUIUpdated=function(p){this.fireEvent(k.M_EVENTS.UIUpdated,p)};k.prototype.attachThemeChanged=function(f,l){this.attachEvent(k.M_EVENTS.ThemeChanged,f,l)};k.prototype.detachThemeChanged=function(f,l){this.detachEvent(k.M_EVENTS.ThemeChanged,f,l)};k.prototype.fireThemeChanged=function(p){q.sap.scrollbarSize(true);if(sap.ui.core.theming&&sap.ui.core.theming.Parameters){sap.ui.core.theming.Parameters.reset(true)}var s=k.M_EVENTS.ThemeChanged;var o=q.Event(s);o.theme=p?p.theme:null;q.each(this.mElements,function(i,b){b._handleEvent(o)});q.sap.act.refresh();this.fireEvent(s,p)};k.prototype.attachLocalizationChanged=function(f,l){this.attachEvent(k.M_EVENTS.LocalizationChanged,f,l)};k.prototype.detachLocalizationChanged=function(f,l){this.detachEvent(k.M_EVENTS.LocalizationChanged,f,l)};k.prototype.fireLocalizationChanged=function(m){var t=this,s=k.M_EVENTS.LocalizationChanged,b=q.Event(s,{changes:m}),A=sap.ui.base.ManagedObject._handleLocalizationChange,f=[];q.each(m,function(i,v){f.push(i)});q.sap.log.info("localization settings changed: "+f.join(","),null,"sap.ui.core.Core");q.each(this.oModels,function(N,M){if(M&&M._handleLocalizationChange){M._handleLocalizationChange()}});function n(p){q.each(this.mUIAreas,function(){A.call(this,p)});q.each(this.mObjects["component"],function(){A.call(this,p)});q.each(this.mElements,function(){A.call(this,p)})}n.call(this,1);n.call(this,2);if(m.rtl!=undefined){q(document.documentElement).attr("dir",m.rtl?"rtl":"ltr");this._updateThemeUrls(this.sTheme);q.each(this.mUIAreas,function(){this.invalidate()});q.sap.log.info("RTL mode "+m.rtl?"activated":"deactivated")}q.each(this.mElements,function(i,o){this._handleEvent(b)});this.fireEvent(s,{changes:m})};k.prototype.attachLibraryChanged=function(f,l){this.attachEvent(k.M_EVENTS.LibraryChanged,f,l)};k.prototype.detachLibraryChanged=function(f,l){this.detachEvent(k.M_EVENTS.LibraryChanged,f,l)};k.prototype.fireLibraryChanged=function(p){this.fireEvent(k.M_EVENTS.LibraryChanged,p)};k.prototype.applyChanges=function(){this.renderPendingUIUpdates()};k.prototype.registerElementClass=function(m){var n=m.getName(),l=m.getLibraryName()||"",L=this.mLibraries[l],b=d.prototype.isPrototypeOf(m.getClass().prototype),f=false;if(!L){L=this.mLibraries[l]={dependencies:[],types:[],interfaces:[],controls:[],elements:[]}}if(b){if(q.inArray(n,L.controls)<0){L.controls.push(n);f=true}}else{if(q.inArray(n,L.elements)<0){L.elements.push(n);f=true}}if(f){q.sap.log.debug("Class "+m.getName()+" registered for library "+m.getLibraryName());this.fireLibraryChanged({name:m.getName(),stereotype:m.getStereotype(),operation:"add",metadata:m})}};k.prototype.registerElement=function(o){var b=this.byId(o.getId());if(b&&b!==o){if(this.oConfiguration.getNoDuplicateIds()){q.sap.log.error("adding element with duplicate id '"+o.getId()+"'");throw new Error("Error: adding element with duplicate id '"+o.getId()+"'")}else{q.sap.log.warning("adding element with duplicate id '"+o.getId()+"'")}}this.mElements[o.getId()]=o};k.prototype.deregisterElement=function(o){delete this.mElements[o.getId()]};k.prototype.registerObject=function(o){var i=o.getId(),t=o.getMetadata().getStereotype(),b=this.getObject(t,i);if(b&&b!==o){q.sap.log.error("adding object \""+t+"\" with duplicate id '"+i+"'");throw new Error("Error: adding object \""+t+"\" with duplicate id '"+i+"'")}this.mObjects[t][i]=o};k.prototype.deregisterObject=function(o){var i=o.getId(),t=o.getMetadata().getStereotype();delete this.mObjects[t][i]};k.prototype.byId=function(i){return i==null?undefined:this.mElements[i]};k.prototype.getControl=k.prototype.byId;k.prototype.getElementById=k.prototype.byId;k.prototype.getObject=function(t,i){return i==null?undefined:this.mObjects[t]&&this.mObjects[t][i]};k.prototype.getComponent=function(i){return this.getObject("component",i)};k.prototype.getTemplate=function(i){return this.getObject("template",i)};k.prototype.getStaticAreaRef=function(){var s="sap-ui-static";var S=q.sap.domById(s);if(!S){if(!this.bDomReady){throw new Error("DOM is not ready yet. Static UIArea cannot be created.")}var l=this.getConfiguration().getRTL()?"right":"left";S=q("<DIV/>",{id:s}).css({"height":"0","width":"0","overflow":"hidden","float":l}).prependTo(document.body)[0];this.createUIArea(S).bInitial=false}return S};k.prototype.isStaticAreaRef=function(o){return o&&(o.id==="sap-ui-static")};k._I_INTERVAL=200;h.prototype.I_INTERVAL=k._I_INTERVAL;k.prototype.attachIntervalTimer=function(f,l){if(!this.oTimedTrigger){q.sap.require("sap.ui.core.IntervalTrigger");this.oTimedTrigger=new sap.ui.core.IntervalTrigger(k._I_INTERVAL)}this.oTimedTrigger.addListener(f,l)};k.prototype.detachIntervalTimer=function(f,l){if(this.oTimedTrigger){this.oTimedTrigger.removeListener(f,l)}};k.prototype.attachControlEvent=function(f,l){this.attachEvent(k.M_EVENTS.ControlEvent,f,l)};k.prototype.detachControlEvent=function(f,l){this.detachEvent(k.M_EVENTS.ControlEvent,f,l)};k.prototype.fireControlEvent=function(p){this.fireEvent(k.M_EVENTS.ControlEvent,p)};k.prototype._handleControlEvent=function(o,u){var b=q.Event(o.type);q.extend(b,o);b.originalEvent=undefined;this.fireControlEvent({"browserEvent":b,"uiArea":u})};k.prototype.getApplication=function(){return sap.ui.getApplication&&sap.ui.getApplication()};k.prototype.registerPlugin=function(p){if(!p){return}for(var i=0,l=this.aPlugins.length;i<l;i++){if(this.aPlugins[i]===p){return}}this.aPlugins.push(p);if(this.bInitialized&&p&&p.startPlugin){p.startPlugin(this)}};k.prototype.unregisterPlugin=function(p){if(!p){return}var P=-1;for(var i=this.aPlugins.length;i--;i>=0){if(this.aPlugins[i]===p){P=i;break}}if(P==-1){return}if(this.bInitialized&&p&&p.stopPlugin){p.stopPlugin(this)}this.aPlugins.splice(P,1)};k.prototype.startPlugins=function(){for(var i=0,l=this.aPlugins.length;i<l;i++){var p=this.aPlugins[i];if(p&&p.startPlugin){p.startPlugin(this,true)}}};k.prototype.stopPlugins=function(){for(var i=0,l=this.aPlugins.length;i<l;i++){var p=this.aPlugins[i];if(p&&p.stopPlugin){p.stopPlugin(this)}}};k.prototype.setModel=function(m,n){if(!m&&this.oModels[n]){delete this.oModels[n];q.each(this.mUIAreas,function(i,u){delete u.oPropagatedProperties.oModels[n];u.propagateProperties(n)})}else if(m&&m!==this.oModels[n]){this.oModels[n]=m;q.each(this.mUIAreas,function(i,u){u.oPropagatedProperties.oModels[n]=m;u.propagateProperties(n)})}else{}return this};k.prototype.getModel=function(n){return this.oModels[n]};k.prototype.hasModel=function(){return!q.isEmptyObject(this.oModels)};k.prototype.getEventBus=function(){if(!this.oEventBus){q.sap.require("sap.ui.core.EventBus");this.oEventBus=new sap.ui.core.EventBus()}return this.oEventBus};k.prototype.attachValidationError=function(f,l){this.attachEvent(k.M_EVENTS.ValidationError,f,l);return this};k.prototype.detachValidationError=function(f,l){this.detachEvent(k.M_EVENTS.ValidationError,f,l);return this};k.prototype.attachParseError=function(f,l){this.attachEvent(k.M_EVENTS.ParseError,f,l);return this};k.prototype.detachParseError=function(f,l){this.detachEvent(k.M_EVENTS.ParseError,f,l);return this};k.prototype.attachFormatError=function(f,l){this.attachEvent(k.M_EVENTS.FormatError,f,l);return this};k.prototype.detachFormatError=function(f,l){this.detachEvent(k.M_EVENTS.FormatError,f,l);return this};k.prototype.attachValidationSuccess=function(f,l){this.attachEvent(k.M_EVENTS.ValidationSuccess,f,l);return this};k.prototype.detachValidationSuccess=function(f,l){this.detachEvent(k.M_EVENTS.ValidationSuccess,f,l);return this};k.prototype.fireParseError=function(A){this.fireEvent(k.M_EVENTS.ParseError,A);return this};k.prototype.fireValidationError=function(A){this.fireEvent(k.M_EVENTS.ValidationError,A);return this};k.prototype.fireFormatError=function(A){this.fireEvent(k.M_EVENTS.FormatError,A);return this};k.prototype.fireValidationSuccess=function(A){this.fireEvent(k.M_EVENTS.ValidationSuccess,A);return this};k.prototype.isMobile=function(){return D.browser.mobile};if(!window.sap.ui.getCore){(function(){new k()}())}sap.ui.setRoot=function(o,b){sap.ui.getCore().setRoot(o,b)};return k},true)};if(!jQuery.sap.isDeclared('sap.ui.app.Application')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.app.Application');sap.ui.define("sap/ui/app/Application",['jquery.sap.global','./ApplicationMetadata','sap/ui/core/Component'],function(q,A,C){"use strict";var a=C.extend("sap.ui.app.Application",{metadata:{"abstract":true,properties:{root:"string",config:"any"},aggregations:{rootComponent:{type:"sap.ui.core.UIComponent",multiple:false}},publicMethods:["getView"],deprecated:true},constructor:function(i,s){if(this.onError){this.onWindowError=this.onError}if(this.onBeforeExit){this.onWindowBeforeUnload=this.onBeforeExit}if(this.onExit){this.onWindowUnload=this.onExit}C.apply(this,arguments);if(sap.ui.getApplication){throw new Error("Only one instance of sap.ui.app.Application is allowed")}sap.ui.getApplication=q.proxy(this._getInstance,this);sap.ui.getCore().attachInit(q.proxy(function(){this._initRootComponent();this.main()},this))},_initRootComponent:function(){var r=this.createRootComponent();if(r){this.setRootComponent(r);var c=new sap.ui.core.ComponentContainer({component:r});c.placeAt(this.getRoot()||document.body)}},createRootComponent:function(){var r=this.getMetadata().getRootComponent();var R;if(r){R=sap.ui.component({name:r})}return R},getView:function(){return this.getRootComponent()},_getInstance:function(){return this},main:function(){},onBeforeExit:function(){},onExit:function(){},onError:null,setConfig:function(c){if(typeof c==="string"){var u=c;var c=new sap.ui.model.json.JSONModel();var r=q.sap.sjax({url:u,dataType:'json'});if(r.success){c.setData(r.data)}else{throw new Error("Could not load config file: "+u)}}if(typeof c==="object"&&!c instanceof sap.ui.model.Model){c=new sap.ui.model.JSONModel(c)}this.setProperty("config",c)},destroy:function(s){delete sap.ui.getApplication;C.prototype.destroy.apply(this,arguments)}},A);return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.AppCacheBuster')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.AppCacheBuster');sap.ui.define("sap/ui/core/AppCacheBuster",['jquery.sap.global','./Core','sap/ui/thirdparty/URI'],function(q,C,U){"use strict";var c=sap.ui.getCore().getConfiguration();var l=c.getLanguage();var s=c.getAppCacheBusterMode()==="sync";var b=c.getAppCacheBusterMode()==="batch";var i={};var a=q.ajax;var I=q.sap.includeScript;var f=q.sap.includeStyleSheet;var v=sap.ui.base.ManagedObject.prototype.validateProperty;var L=document.location.href.replace(/\?.*|#.*/g,"");var B=URI("./").absoluteTo(L);var A=B.toString();var u=URI(q.sap.getModulePath("","/../"));var o=u.toString();if(u.is("relative")){u=u.absoluteTo(L)}var d=u.normalize().toString();var r=URI("resources").absoluteTo(d).toString();var F=new RegExp("^"+q.sap.escapeRegExp(r));var E=function(e){if(e.length>0&&e.slice(-1)!=="/"){e+="/"}return e};var R=function(d,S){var e;if(q.isArray(d)&&!b){q.each(d,function(x,y){R(y,S)})}else if(q.isArray(d)&&b){var h=E(d[0]);var j=[];q.sap.log.debug("sap.ui.core.AppCacheBuster.register(\""+h+"\"); // BATCH MODE!");var k=g.normalizeURL(h);q.sap.log.debug("  --> normalized to: \""+k+"\"");q.each(d,function(x,y){var m=E(y);var z=g.normalizeURL(m);if(!i[n]){j.push(z)}});if(j.length>0){var m=k+"sap-ui-cachebuster-info.json?sap-ui-language="+l;e={url:m,type:"POST",async:!s&&!!S,dataType:"json",contentType:"text/plain",data:j.join("\n"),success:function(x){q.extend(i,x)},error:function(){q.sap.log.error("Failed to batch load AppCacheBuster index file from: \""+m+"\".")}}}}else{d=E(d);q.sap.log.debug("sap.ui.core.AppCacheBuster.register(\""+d+"\");");var n=g.normalizeURL(d);q.sap.log.debug("  --> normalized to: \""+n+"\"");if(!i[n]){var m=n+"sap-ui-cachebuster-info.json?sap-ui-language="+l;e={url:m,async:!s&&!!S,dataType:"json",success:function(x){i[n]=x},error:function(){q.sap.log.error("Failed to load AppCacheBuster index file from: \""+m+"\".")}}}}if(e){if(e.async){var p=S.startTask("load "+m);var t=e.success,w=e.error;q.extend(e,{success:function(x){t.apply(this,arguments);S.finishTask(p)},error:function(){w.apply(this,arguments);S.finishTask(p,false)}})}q.sap.log.info("Loading AppCacheBuster index file from: \""+m+"\".");q.ajax(e)}};var g={boot:function(S){var e=c.getAppCacheBuster();if(e&&e.length>0){e=e.slice();var h=true;var V=String(e[0]).toLowerCase();if(e.length===1){if(V==="true"||V==="x"){var u=URI(o);e=u.is("relative")?[u.toString()]:[]}else if(V==="false"){h=false}}if(h){g.init();R(e,S)}}},init:function(){var h=g.convertURL;var n=g.normalizeURL;var j=function(e){if(e&&typeof(e)==="string"){e=n(e);return!e.match(F)}return false};q.ajax=function(e,k){if(e&&e.url&&j(e.url)){e.url=h(e.url)}return a.apply(this,arguments)};q.sap.includeScript=function(e,k){var m=Array.prototype.slice.apply(arguments);if(j(m[0])){m[0]=h(m[0])}return I.apply(this,m)};q.sap.includeStyleSheet=function(e,k){var m=Array.prototype.slice.apply(arguments);if(j(m[0])){m[0]=h(m[0])}return f.apply(this,m)};sap.ui.base.ManagedObject.prototype.validateProperty=function(p,V){var m=this.getMetadata(),P=m.getAllProperties()[p],k;if(P&&P.type==="sap.ui.core.URI"){k=Array.prototype.slice.apply(arguments);try{if(j(k[1])){k[1]=h(k[1])}}catch(e){}}return v.apply(this,k||arguments)}},exit:function(){q.ajax=a;q.sap.includeScript=I;q.sap.includeStyleSheet=f;sap.ui.base.ManagedObject.prototype.validateProperty=v;i={}},register:function(d){R(d)},convertURL:function(e){q.sap.log.debug("sap.ui.core.AppCacheBuster.convertURL(\""+e+"\");");if(i&&e){var n=g.normalizeURL(e);q.sap.log.debug("  --> normalized to: \""+n+"\"");if(n&&g.handleURL(n)){q.each(i,function(d,m){var h;if(d&&n.length>=d.length&&n.slice(0,d.length)===d){h=n.slice(d.length);if(m[h]){e=d+"~"+m[h]+"~/"+h;q.sap.log.debug("  ==> return \""+e+"\";");return false}}})}}return e},normalizeURL:function(e){var u=URI(e||"./");if(u.is("relative")){u=u.absoluteTo(L)}return u.normalizeProtocol().normalizeHostname().normalizePort().normalizePath().toString()},handleURL:function(e){return true}};return g},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CustomizingConfiguration')){jQuery.sap.declare('sap.ui.core.CustomizingConfiguration');sap.ui.define("sap/ui/core/CustomizingConfiguration",['jquery.sap.global','./Core'],function(q,C){"use strict";var a="sap.ui.viewReplacements",b="sap.ui.viewExtensions",c="sap.ui.viewModifications",d="sap.ui.controllerExtensions";var m={};function f(t,g){q.each(m,function(n,o){if(o&&o[t]){if(g(o[t])){return false}}})};var e={log:function(){if(window.console){window.console.log(m)}},activateForComponent:function(s){q.sap.log.info("CustomizingConfiguration: activateForComponent('"+s+"')");var F=s+".Component";q.sap.require(F);var o=q.sap.getObject(F).getMetadata().getCustomizing();m[s]=o;q.sap.log.debug("CustomizingConfiguration: customizing configuration for component '"+s+"' loaded: "+JSON.stringify(o))},deactivateForComponent:function(s){q.sap.log.info("CustomizingConfiguration: deactivateForComponent('"+s+"')");delete m[s]},getViewReplacement:function(v){var r=undefined;f(a,function(o){r=o[v];return!!r});return r},getViewExtension:function(v,E){var r=undefined;f(b,function(o){r=o[v]&&o[v][E];return!!r});return r},getControllerExtension:function(s){var r=undefined;f(d,function(o){r=o[s];return!!r});return r},getCustomProperties:function(v,s){var S=undefined;f(c,function(o){var g=o[v]&&o[v][s];var u={};var V=false;if(g){q.each(g,function(n,h){if(n==="visible"){V=true;u[n]=h;q.sap.log.info("Customizing: custom value for property '"+n+"' of control '"+s+"' in View '"+v+"' applied: "+h)}else{q.sap.log.warning("Customizing: custom value for property '"+n+"' of control '"+s+"' in View '"+v+"' ignored: only the 'visible' property can be customized.")}});if(V){S=S||{};q.extend(S,u)}}});return S}};if(sap.ui.getCore().getConfiguration().getDisableCustomizing()){q.sap.log.info("CustomizingConfiguration: disabling Customizing now");q.each(e,function(n,A){if(typeof A==="function"){e[n]=function(){}}})}return e},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicatorSupport')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicatorSupport');sap.ui.define("sap/ui/core/LocalBusyIndicatorSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var L=function(){if(this===sap.ui.core.Control.prototype){this.setDelay=function(d){this.setBusyIndicatorDelay(d)}}else{q.sap.log.error("Only controls can use the LocalBusyIndicator",this)}};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.PopupSupport')){jQuery.sap.declare('sap.ui.core.PopupSupport');sap.ui.define("sap/ui/core/PopupSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var P=function(){this.getMetadata().addPublicMethods(["getParentPopup","isInPopup","getParentPopupId","addToPopup","removeFromPopup"]);this.isInPopup=function(t){var p=this.getParentPopup(t);return p&&p.length>0};this.getParentPopup=function(t){var T=t?t:this;var $=q(T instanceof sap.ui.core.Element?T.getDomRef():T);return $.closest("[data-sap-ui-popup]")};this.getParentPopupId=function(t){var p=this.getParentPopup(t);return p.attr("data-sap-ui-popup")};this.addChildToPopup=function(p,c){var e="sap.ui.core.Popup.addFocusableContent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{id:c})};this.removeChildFromPopup=function(p){if(!p){p=this.getPopupId()}var e="sap.ui.core.Popup.removeFocusableContent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{id:this.getId()})};this.closePopup=function(p){var e="sap.ui.core.Popup.closePopup-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e)};this.increaseZIndex=function(p,i){var e="sap.ui.core.Popup.increaseZIndex-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{isFromParentPopup:i?i:false})}};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.core.library')){jQuery.sap.declare('sap.ui.core.library');sap.ui.define("sap/ui/core/library",['./Core'],function(){sap.ui.getCore().initLibrary({name:"sap.ui.core",types:["sap.ui.core.AccessibleRole","sap.ui.core.BarColor","sap.ui.core.CSSColor","sap.ui.core.CSSSize","sap.ui.core.CSSSizeShortHand","sap.ui.core.Collision","sap.ui.core.Design","sap.ui.core.Dock","sap.ui.core.HorizontalAlign","sap.ui.core.ID","sap.ui.core.IconColor","sap.ui.core.ImeMode","sap.ui.core.MessageType","sap.ui.core.OpenState","sap.ui.core.Orientation","sap.ui.core.Percentage","sap.ui.core.ScrollBarAction","sap.ui.core.Scrolling","sap.ui.core.TextAlign","sap.ui.core.TextDirection","sap.ui.core.TitleLevel","sap.ui.core.URI","sap.ui.core.ValueState","sap.ui.core.VerticalAlign","sap.ui.core.Wrapping","any","boolean","float","int","sap.ui.core.mvc.ViewType","object","sap.ui.core.routing.HistoryDirection","string","void"],interfaces:["sap.ui.core.Label","sap.ui.core.PopupInterface","sap.ui.core.Toolbar"],controls:["sap.ui.core.ComponentContainer","sap.ui.core.Control","sap.ui.core.HTML","sap.ui.core.Icon","sap.ui.core.LocalBusyIndicator","sap.ui.core.ScrollBar","sap.ui.core.TooltipBase","sap.ui.core.UIComponent","sap.ui.core.mvc.HTMLView","sap.ui.core.mvc.JSONView","sap.ui.core.mvc.JSView","sap.ui.core.mvc.TemplateView","sap.ui.core.mvc.View","sap.ui.core.mvc.XMLView","sap.ui.core.tmpl.DOMElement","sap.ui.core.tmpl.Template","sap.ui.core.tmpl.TemplateControl"],elements:["sap.ui.core.CustomData","sap.ui.core.Element","sap.ui.core.Item","sap.ui.core.LayoutData","sap.ui.core.ListItem","sap.ui.core.Message","sap.ui.core.SeparatorItem","sap.ui.core.Title","sap.ui.core.VariantLayoutData","sap.ui.core.search.OpenSearchProvider","sap.ui.core.search.SearchProvider","sap.ui.core.tmpl.DOMAttribute"],version:"1.24.2"});sap.ui.define("sap/ui/core/AccessibleRole",function(){"use strict";sap.ui.core.AccessibleRole={None:"None",Alert:"Alert",AlertDialog:"AlertDialog",Application:"Application",Banner:"Banner",Button:"Button",Checkbox:"Checkbox",ColumnHeader:"ColumnHeader",Combobox:"Combobox",
/**
	 * Information about the content on the page. Examples are footnotes, copyrights, or links to privacy statements.
	 * 
	 * @public
	 */
ContentInfo:"ContentInfo",Definition:"Definition",Description:"Description",Dialog:"Dialog",Directory:"Directory",Document:"Document",Grid:"Grid",GridCell:"GridCell",Group:"Group",Heading:"Heading",Img:"Img",Link:"Link",List:"List",Listbox:"Listbox",ListItem:"ListItem",Log:"Log",Main:"Main",Marquee:"Marquee",Menu:"Menu",Menubar:"Menubar",MenuItem:"MenuItem",MenuItemCheckbox:"MenuItemCheckbox",MenuItemRadio:"MenuItemRadio",Navigation:"Navigation",Note:"Note",Option:"Option",Presentation:"Presentation",ProgressBar:"ProgressBar",Radio:"Radio",RadioGroup:"RadioGroup",Region:"Region",Row:"Row",RowHeader:"RowHeader",Search:"Search",Secondary:"Secondary",SeeAlso:"SeeAlso",Separator:"Separator",Slider:"Slider",SpinButton:"SpinButton",Status:"Status",Tab:"Tab",Tablist:"Tablist",Tabpanel:"Tabpanel",Textbox:"Textbox",Timer:"Timer",Toolbar:"Toolbar",Tooltip:"Tooltip",Tree:"Tree",TreeGrid:"TreeGrid",TreeItem:"TreeItem"};return sap.ui.core.AccessibleRole},true);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define("sap/ui/core/BarColor",function(){"use strict";sap.ui.core.BarColor={NEUTRAL:"NEUTRAL",POSITIVE:"POSITIVE",CRITICAL:"CRITICAL",NEGATIVE:"NEGATIVE"};return sap.ui.core.BarColor},true);sap.ui.define('sap/ui/core/CSSColor',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSColor=D.createType('sap.ui.core.CSSColor',{isValid:function(v){return/^(#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})|rgb\(\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*(,\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*){2}\)|rgba\((\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*,){3}\s*(0(\.[0-9]+)?|1(\.0+)?)\s*\)|hsl\(\s*([0-2]?[0-9]?[0-9]|3([0-5][0-9]|60))\s*(,\s*(([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*){2}\)|hsla\(\s*([0-2]?[0-9]?[0-9]|3([0-5][0-9]|60))\s*,(\s*(([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*,){2}\s*(0(\.[0-9]+)?|1(\.0+)?)\s*\)|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coralcornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silverskyblue|slateblue|slategray|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|transparent|inherit|)$/.test(v)}},D.getType('string'));return sap.ui.core.CSSColor},true);sap.ui.define('sap/ui/core/CSSSize',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSSize=D.createType('sap.ui.core.CSSSize',{isValid:function(v){return/^(auto|inherit|[-+]?(0*|([0-9]+|[0-9]*\.[0-9]+)([rR][eE][mM]|[eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%)))$/.test(v)}},D.getType('string'));return sap.ui.core.CSSSize},true);sap.ui.define('sap/ui/core/CSSSizeShortHand',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSSizeShortHand=D.createType('sap.ui.core.CSSSizeShortHand',{isValid:function(v){return/^(inherit|(auto|[-+]?(0*|(\d+|\d*\.\d+)([eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%))){1}(\s(auto|[-+]?(0*|(\d+|\d*\.\d+)([eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%)))){0,3})$/.test(v)}},D.getType('string'));return sap.ui.core.CSSSizeShortHand},true);sap.ui.define('sap/ui/core/Collision',['sap/ui/base/DataType'],function(D){sap.ui.core.Collision=D.createType('sap.ui.core.Collision',{isValid:function(v){return/^((flip|fit|none)( (flip|fit|none))?)$/.test(v)}},D.getType('string'));return sap.ui.core.Collision},true);sap.ui.define("sap/ui/core/Design",function(){"use strict";sap.ui.core.Design={Standard:"Standard",Monospace:"Monospace"};return sap.ui.core.Design},true);sap.ui.define('sap/ui/core/Dock',['sap/ui/base/DataType'],function(D){sap.ui.core.Dock=D.createType('sap.ui.core.Dock',{isValid:function(v){return/^((begin|left|center|right|end) (top|center|bottom))$/.test(v)}},D.getType('string'));return sap.ui.core.Dock},true);sap.ui.define("sap/ui/core/HorizontalAlign",function(){"use strict";sap.ui.core.HorizontalAlign={Begin:"Begin",End:"End",Left:"Left",Right:"Right",Center:"Center"};return sap.ui.core.HorizontalAlign},true);sap.ui.define('sap/ui/core/ID',['sap/ui/base/DataType'],function(D){sap.ui.core.ID=D.createType('sap.ui.core.ID',{isValid:function(v){return/^([A-Za-z_][-A-Za-z0-9_.:]*)$/.test(v)}},D.getType('string'));return sap.ui.core.ID},true);sap.ui.define("sap/ui/core/IconColor",function(){"use strict";sap.ui.core.IconColor={Default:"Default",Positive:"Positive",Negative:"Negative",Critical:"Critical",Neutral:"Neutral"};return sap.ui.core.IconColor},true);sap.ui.define("sap/ui/core/ImeMode",function(){"use strict";sap.ui.core.ImeMode={Auto:"Auto",Active:"Active",Inactive:"Inactive",Disabled:"Disabled"};return sap.ui.core.ImeMode},true);sap.ui.define("sap/ui/core/MessageType",function(){"use strict";sap.ui.core.MessageType={Information:"Information",Warning:"Warning",Error:"Error",None:"None",Success:"Success"};return sap.ui.core.MessageType},true);sap.ui.define("sap/ui/core/OpenState",function(){"use strict";sap.ui.core.OpenState={OPEN:"OPEN",CLOSED:"CLOSED",OPENING:"OPENING",CLOSING:"CLOSING"};return sap.ui.core.OpenState},true);sap.ui.define("sap/ui/core/Orientation",function(){"use strict";sap.ui.core.Orientation={Horizontal:"Horizontal",Vertical:"Vertical"};return sap.ui.core.Orientation},true);sap.ui.define('sap/ui/core/Percentage',['sap/ui/base/DataType'],function(D){sap.ui.core.Percentage=D.createType('sap.ui.core.Percentage',{isValid:function(v){return/^([0-9][0-9]*(\.[0-9]+)?%)$/.test(v)}},D.getType('string'));return sap.ui.core.Percentage},true);sap.ui.define("sap/ui/core/ScrollBarAction",function(){"use strict";sap.ui.core.ScrollBarAction={Step:"Step",Page:"Page",MouseWheel:"MouseWheel",Drag:"Drag"};return sap.ui.core.ScrollBarAction},true);sap.ui.define("sap/ui/core/Scrolling",function(){"use strict";sap.ui.core.Scrolling={None:"None",Auto:"Auto",Scroll:"Scroll",Hidden:"Hidden"};return sap.ui.core.Scrolling},true);sap.ui.define("sap/ui/core/TextAlign",function(){"use strict";sap.ui.core.TextAlign={Begin:"Begin",End:"End",Left:"Left",Right:"Right",Center:"Center"};return sap.ui.core.TextAlign},true);sap.ui.define("sap/ui/core/TextDirection",function(){"use strict";sap.ui.core.TextDirection={LTR:"LTR",RTL:"RTL",Inherit:"Inherit"};return sap.ui.core.TextDirection},true);sap.ui.define("sap/ui/core/TitleLevel",function(){"use strict";sap.ui.core.TitleLevel={Auto:"Auto",H1:"H1",H2:"H2",H3:"H3",H4:"H4",H5:"H5",H6:"H6"};return sap.ui.core.TitleLevel},true);sap.ui.define('sap/ui/core/URI',['sap/ui/base/DataType'],function(D){sap.ui.core.URI=D.createType('sap.ui.core.URI',{isValid:function(v){return/^((([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?)$/.test(v)}},D.getType('string'));return sap.ui.core.URI},true);sap.ui.define("sap/ui/core/ValueState",function(){"use strict";sap.ui.core.ValueState={Error:"Error",Warning:"Warning",Success:"Success",None:"None"};return sap.ui.core.ValueState},true);sap.ui.define("sap/ui/core/VerticalAlign",function(){"use strict";sap.ui.core.VerticalAlign={Bottom:"Bottom",Middle:"Middle",Top:"Top",Inherit:"Inherit"};return sap.ui.core.VerticalAlign},true);sap.ui.define("sap/ui/core/Wrapping",function(){"use strict";sap.ui.core.Wrapping={None:"None",Soft:"Soft",Hard:"Hard",Off:"Off"};return sap.ui.core.Wrapping},true);sap.ui.define("sap/ui/core/mvc/ViewType",function(){"use strict";sap.ui.core.mvc.ViewType={JSON:"JSON",XML:"XML",HTML:"HTML",JS:"JS",Template:"Template"};return sap.ui.core.mvc.ViewType},true);sap.ui.define("sap/ui/core/routing/HistoryDirection",function(){"use strict";sap.ui.core.routing.HistoryDirection={Forwards:"Forwards",Backwards:"Backwards",NewEntry:"NewEntry",Unknown:"Unknown"};return sap.ui.core.routing.HistoryDirection},true);(function(){var l=sap.ui.lazyRequire;function e(p,c,s){for(var i=0;i<c.length;i++){if(s){l(s,c[i].toLowerCase(),p+c[i])}else{l(p+c[i],"new extend getMetadata")}}}l("sap.ui.core.BusyIndicator","show hide attachOpen detachOpen attachClose detachClose");l("sap.ui.core.tmpl.Template","registerType unregisterType");l("sap.ui.core.Fragment","registerType");l("sap.ui","xmlfragment","sap.ui.core.Fragment");l("sap.ui","jsfragment","sap.ui.core.Fragment");l("sap.ui","htmlfragment","sap.ui.core.Fragment");e("sap.ui.model.",["Filter","Sorter","json.JSONModel","resource.ResourceModel","odata.ODataModel","xml.XMLModel"]);e("sap.ui.model.type.",["Boolean","Integer","Float","String","Date","Time","DateTime"]);e("sap.ui.core.",["Locale","LocaleData","mvc.Controller"]);e("sap.ui.core.mvc.",["Controller","View","JSView","JSONView","XMLView","HTMLView","TemplateView"],"sap.ui");e("sap.ui.core.",["Component"],"sap.ui");e("sap.ui.core.tmpl.",["Template"],"sap.ui")}())},false)};if(!jQuery.sap.isDeclared('sap.ui.core.plugin.TemplatingSupport')){jQuery.sap.declare('sap.ui.core.plugin.TemplatingSupport');sap.ui.define("sap/ui/core/plugin/TemplatingSupport",['jquery.sap.global','sap/ui/core/Core','sap/ui/core/tmpl/Template'],function(q,C,T){"use strict";var a=function(){};a.prototype.startPlugin=function(c,o){q.sap.log.info("Starting TemplatingSupport plugin.");this.oCore=c;sap.ui.template()};a.prototype.stopPlugin=function(){q.sap.log.info("Stopping TemplatingSupport plugin.");this.oCore=null};(function(){var t=new a();sap.ui.getCore().registerPlugin(t)}());return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.search.SearchProvider')){jQuery.sap.declare('sap.ui.core.search.SearchProvider');sap.ui.define("sap/ui/core/search/SearchProvider",['sap/ui/core/library','sap/ui/core/Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.search.SearchProvider",{metadata:{publicMethods:["suggest"],library:"sap.ui.core",properties:{"icon":{type:"string",group:"Misc",defaultValue:null}}}});sap.ui.core.search.SearchProvider.prototype.suggest=function(v,c){jQuery.sap.log.warning("sap.ui.core.search.SearchProvider is the abstract base class for all SearchProviders. Do not create instances of this class, but use a concrete sub class instead.")};return sap.ui.core.search.SearchProvider},true)};if(!jQuery.sap.isDeclared('sap.ui.core.theming.Parameters')){jQuery.sap.declare('sap.ui.core.theming.Parameters');sap.ui.define("sap/ui/core/theming/Parameters",['jquery.sap.global','sap/ui/core/Core'],function(q,C){"use strict";var P={};var p=null;var t=null;function r(){p=null}function l(){var u=q(this).css("background-image");var a=/\(["']data:text\/plain;utf-8,(.*)["']\)$/i.exec(u);if(a&&a.length>=2){var s=a[1];if(s.charAt(0)!=="{"&&s.charAt(s.length-1)!=="}"){try{s=decodeURI(s)}catch(e){q.sap.log.warning("Could not decode theme parameters URI from library.css.")}}try{var o=q.parseJSON(s);q.extend(p,o);return}catch(e){q.sap.log.warning("Could not parse theme parameters from library.css. Loading library-parameters.json as fallback solution.")}}var u=this.href,R,b;u=u.replace(/\/library([^\/.]*)\.(?:css|less)($|[?#])/,function($,c,d){return"/library-parameters.json"+(d?d:"")});R=q.sap.sjax({url:u,dataType:'json'});if(R.success){b=(typeof R.data=="string")?q.parseJSON(R.data):R.data;if(q.isArray(b)){for(var j=0;j<b.length;j++){q.extend(p,b[j])}}else{q.extend(p,b)}}else{q.sap.log.warning("Could not load theme parameters from: "+u)}}function g(){if(!p){p={};t=sap.ui.getCore().getConfiguration().getTheme();q("link[id^=sap-ui-theme-]").each(l)}return p}P._addLibraryTheme=function(L){if(p){var o=q.sap.domById("sap-ui-theme-"+L);l.apply(o)}};P.get=function(n){if(arguments.length==1){var s=g()[n];if(typeof s==="undefined"&&typeof n==="string"){var i=n.indexOf(":");if(i!==-1){n=n.substr(i+1)}s=g()[n]}return s}else if(arguments.length==0){return q.extend({},g())}else{return undefined}};P._setOrLoadParameters=function(L){p={};t=sap.ui.getCore().getConfiguration().getTheme();q("link[id^=sap-ui-theme-]").each(function(){var $=q(this);var s=$.attr("id").substr(13);if(L[s]){q.extend(p,L[s])}else{l.apply(this)}})};P.reset=function(){var o=arguments[0]===true;if(!o||sap.ui.getCore().getConfiguration().getTheme()!==t){r()}};P._getThemeImage=function(s,f){s=s||"sapUiGlobalLogo";var a=sap.ui.core.theming.Parameters.get(s);if(a){var m=/url[\s]*\('?"?([^\'")]*)'?"?\)/.exec(a);if(m){a=m[1]}else if(a==="''"||a==="none"){a=null}}if(!!f&&!a){return sap.ui.resource('sap.ui.core','themes/base/img/1x1.gif')}return a};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMAttribute')){jQuery.sap.declare('sap.ui.core.tmpl.DOMAttribute');sap.ui.define("sap/ui/core/tmpl/DOMAttribute",['sap/ui/core/library','sap/ui/core/Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.tmpl.DOMAttribute",{metadata:{library:"sap.ui.core",properties:{"name":{type:"string",group:"Data",defaultValue:null},"value":{type:"string",group:"Data",defaultValue:null}}}});sap.ui.core.tmpl.DOMAttribute.prototype.setValue=function(v){this.setProperty("value",v,true);var p=this.getParent(),$=p&&p.$();if($&&$.length>0){$.attr(this.getName(),this.getProperty("value"))}return this};return sap.ui.core.tmpl.DOMAttribute},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportCell')){jQuery.sap.declare('sap.ui.core.util.ExportCell');sap.ui.define("sap/ui/core/util/ExportCell",['jquery.sap.global','sap/ui/core/Element'],function(q,E){'use strict';var a=E.extend('sap.ui.core.util.ExportCell',{metadata:{properties:{content:'string'}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportColumn')){jQuery.sap.declare('sap.ui.core.util.ExportColumn');sap.ui.define("sap/ui/core/util/ExportColumn",['jquery.sap.global','sap/ui/base/ManagedObject','./ExportCell'],function(q,M,E){'use strict';var a=M.extend("sap.ui.core.util.ExportColumn",{metadata:{properties:{name:"string"},aggregations:{template:{type:"sap.ui.core.util.ExportCell",multiple:false}}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportRow')){jQuery.sap.declare('sap.ui.core.util.ExportRow');sap.ui.define("sap/ui/core/util/ExportRow",['jquery.sap.global','sap/ui/base/ManagedObject','./ExportCell'],function(q,M,E){'use strict';var a=M.extend("sap.ui.core.util.ExportRow",{metadata:{aggregations:{cells:{type:"sap.ui.core.util.ExportCell",multiple:true}}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CustomData')){jQuery.sap.declare('sap.ui.core.CustomData');sap.ui.define("sap/ui/core/CustomData",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.CustomData",{metadata:{library:"sap.ui.core",properties:{"key":{type:"string",group:"Data",defaultValue:null},"value":{type:"any",group:"Data",defaultValue:null},"writeToDom":{type:"boolean",group:"Data",defaultValue:false}}}});sap.ui.core.CustomData.prototype.setValue=function(v){this.setProperty("value",v,true);var c=this.getParent();if(c&&c.getDomRef()&&this.getWriteToDom()){var k=this.getKey();if(typeof v==="string"){if((sap.ui.core.ID.isValid(k))&&(k.indexOf(":")==-1)&&(k.indexOf("sap-ui")!==0)){c.$().attr("data-"+k,v)}else{jQuery.sap.log.error("CustomData with key "+k+" should be written to HTML of "+c+" but the key is not valid (must be a valid sap.ui.core.ID without any colon and may not start with 'sap-ui').")}}else{jQuery.sap.log.error("CustomData with key "+k+" should be written to HTML of "+c+" but the value is not a string.")}}return this};return sap.ui.core.CustomData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.EnabledPropagator')){jQuery.sap.declare('sap.ui.core.EnabledPropagator');sap.ui.define("sap/ui/core/EnabledPropagator",['jquery.sap.global','./Control'],function(q,C){"use strict";var E=function(d,l){if(!(this instanceof C)){throw new Error("EnabledPropagator only supports subclasses of Control")}if(d===undefined){d=true}function f(c){var p=c.getParent();while(p&&!p.getEnabled&&p.getParent){p=p.getParent()}return p}if(this.getEnabled===undefined){this.getEnabled=function(){var p=f(this);return(p&&p.getEnabled&&!p.getEnabled())?false:this.getProperty("enabled")};if(l){this.getMetadata().addProperty("Enabled",{type:"boolean",group:"Behavior",defaultValue:!!d})}this.getMetadata().addProperty("enabled",{type:"boolean",group:"Behavior",defaultValue:!!d});this.getMetadata().addPublicMethods('getEnabled')}else{var o=this.getEnabled;this.getEnabled=function(){var p=f(this);return(p&&p.getEnabled&&!p.getEnabled())?false:o.apply(this)}}if(this.setEnabled===undefined){this.setEnabled=function(e){this.setProperty("enabled",e)};this.getMetadata().addPublicMethods('setEnabled')}};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.HTML')){jQuery.sap.declare('sap.ui.core.HTML');sap.ui.define("sap/ui/core/HTML",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.HTML",{metadata:{library:"sap.ui.core",properties:{"content":{type:"string",group:"Misc",defaultValue:null},"preferDOM":{type:"boolean",group:"Misc",defaultValue:true},"sanitizeContent":{type:"boolean",group:"Misc",defaultValue:false}},events:{"afterRendering":{}}}});sap.ui.core.HTML.M_EVENTS={'afterRendering':'afterRendering'};sap.ui.core.HTML.prototype.getDomRef=function(s){var i=s?this.getId()+"-"+s:this.getId();return jQuery.sap.domById("sap-ui-dummy-"+i)||jQuery.sap.domById(i)};sap.ui.core.HTML.prototype.setContent=function(c){function p(s){if(jQuery.parseHTML){var a=jQuery.parseHTML(s);if(a){var b=0,e=a.length;while(b<e&&a[b].nodeType!=1){b++}while(b<e&&a[e-1].nodeType!=1){e--}if(b>0||e<a.length){a=a.slice(b,e)}return jQuery(a)}}return jQuery(s)}if(this.getSanitizeContent()){c=jQuery.sap._sanitizeHTML(c)}this.setProperty("content",c,true);if(this.getDomRef()){var $=p(this.getContent());jQuery(this.getDomRef()).replaceWith($);this._postprocessNewContent($)}else{this.invalidate()}return this};sap.ui.core.HTML.prototype.onBeforeRendering=function(){if(this.getPreferDOM()&&this.getDomRef()&&!sap.ui.core.RenderManager.isPreservedContent(this.getDomRef())){sap.ui.core.RenderManager.preserveContent(this.getDomRef(),true,false)}};sap.ui.core.HTML.prototype.onAfterRendering=function(){var $=jQuery(jQuery.sap.domById("sap-ui-dummy-"+this.getId()));var a=sap.ui.core.RenderManager.findPreservedContent(this.getId());var b=undefined;var i=false;if((!this.getPreferDOM()||a.size()==0)){a.remove();b=new jQuery(this.getContent());$.replaceWith(b)}else if(a.size()>0){$.replaceWith(a);b=a;i=true}else{$.remove()}this._postprocessNewContent(b);this.fireAfterRendering({isPreservedDOM:i})};sap.ui.core.HTML.prototype._postprocessNewContent=function($){if($&&$.size()>0){if($.length>1){jQuery.sap.log.warning("[Unsupported Feature]: "+this+" has rendered "+$.length+" root nodes!")}else{var c=$.attr("id");if(c&&c!=this.getId()){jQuery.sap.log.warning("[Unsupported Feature]: Id of HTML Control '"+this.getId()+"' does not match with content id '"+c+"'!")}}sap.ui.core.RenderManager.markPreservableContent($,this.getId());if($.find("#"+this.getId().replace(/(:|\.)/g,'\\$1')).length===0){$.filter(":not([id])").first().attr("id",this.getId())}}else{jQuery.sap.log.debug(""+this+" is empty after rendering, setting bOutput to false");this.bOutput=false}};sap.ui.core.HTML.prototype.setDOMContent=function(d){var $=jQuery(d);if(this.getDomRef()){jQuery(this.getDomRef()).replaceWith($);this._postprocessNewContent($)}else{$.appendTo(sap.ui.core.RenderManager.getPreserveAreaRef());if(this.getUIArea()){this.getUIArea().invalidate()}this._postprocessNewContent($)}return this};sap.ui.core.HTML.prototype.setTooltip=function(t){jQuery.sap.log.warning("The sap.ui.core.HTML control doesn't support tooltips. Add the tooltip to the HTML content instead.");return sap.ui.core.Control.prototype.setTooltip.apply(this,arguments)};return sap.ui.core.HTML},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Icon')){jQuery.sap.declare('sap.ui.core.Icon');sap.ui.define("sap/ui/core/Icon",['./library','./Control','./IconPool'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.Icon",{metadata:{library:"sap.ui.core",properties:{"src":{type:"sap.ui.core.URI",group:"Data",defaultValue:null},"size":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"color":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"hoverColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"activeColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"backgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"hoverBackgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"activeBackgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"visible":{type:"boolean",group:"Appearance",defaultValue:true},"decorative":{type:"boolean",group:"Accessibility",defaultValue:true}},events:{"press":{}}}});sap.ui.core.Icon.M_EVENTS={'press':'press'};sap.ui.core.Icon.prototype.onAfterRendering=function(){var i=this.$();if(this.hasListeners("press")){i.css("cursor","pointer")}if(i.css("cursor")==="auto"){i.css("cursor","default")}};sap.ui.core.Icon.prototype.onmousedown=function(e){this._bPressFired=false;if(this.hasListeners("press")||this.hasListeners("tap")){e.setMarked()}var a=this.getActiveColor(),A=this.getActiveBackgroundColor(),i;if(a||A){if(!e.targetTouches||(e.targetTouches&&e.targetTouches.length===1)){i=this.$();i.addClass("sapUiIconActive");if(a){i.css("color",a)}if(A){i.css("background-color",A)}}}};sap.ui.core.Icon.prototype.ontouchstart=sap.ui.core.Icon.prototype.onmousedown;sap.ui.core.Icon.prototype.onmouseup=function(e){if(!e.targetTouches||(e.targetTouches&&e.targetTouches.length===0)){this.$().removeClass("sapUiIconActive");this._restoreColors()}};sap.ui.core.Icon.prototype.ontouchend=sap.ui.core.Icon.prototype.onmouseup;sap.ui.core.Icon.prototype.ontouchcancel=sap.ui.core.Icon.prototype.onmouseup;sap.ui.core.Icon.prototype.onmouseover=function(){var h=this.getHoverColor(),H=this.getHoverBackgroundColor(),i=this.$();if(h){i.css("color",h)}if(H){i.css("background-color",H)}};sap.ui.core.Icon.prototype.onmouseout=function(){this._restoreColors()};sap.ui.core.Icon.prototype.onclick=function(){if(this._bPressFired){return}this.firePress({});this._bPressFired=true};sap.ui.core.Icon.prototype.ontap=sap.ui.core.Icon.prototype.onclick;sap.ui.core.Icon.prototype.onkeydown=function(e){if(e.which===jQuery.sap.KeyCodes.SPACE||e.which===jQuery.sap.KeyCodes.ENTER){e.preventDefault();var i=this.$(),a=this.getActiveColor(),A=this.getActiveBackgroundColor();i.addClass("sapUiIconActive");if(a){i.css("color",a)}if(A){i.css("background-color",A)}}};sap.ui.core.Icon.prototype.onkeyup=function(e){if(e.which===jQuery.sap.KeyCodes.SPACE||e.which===jQuery.sap.KeyCodes.ENTER){this.$().removeClass("sapUiIconActive");this._restoreColors();this.firePress({})}};sap.ui.core.Icon.prototype._restoreColors=function(){this.$().css({"color":this.getColor()||"","background-color":this.getBackgroundColor()||""})};sap.ui.core.Icon.prototype.setSrc=function(s){var i=sap.ui.core.IconPool.getIconInfo(s),t=sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9,I=this.$();if(i){I.css("font-family",i.fontFamily);if(t){I.text(i.content)}else{I.attr("data-sap-ui-icon-content",i.content)}I.toggleClass("sapUiIconMirrorInRTL",!i.suppressMirroring)}this.setProperty("src",s,!!i);return this};sap.ui.core.Icon.prototype.setWidth=function(w){this.setProperty("width",w,true);this.$().css("width",w);return this};sap.ui.core.Icon.prototype.setHeight=function(h){this.setProperty("height",h,true);this.$().css({"height":h,"line-height":h});return this};sap.ui.core.Icon.prototype.setSize=function(s){this.setProperty("size",s,true);this.$().css("font-size",s);return this};sap.ui.core.Icon.prototype.setColor=function(c){this.setProperty("color",c,true);this.$().css("color",c);return this};sap.ui.core.Icon.prototype.setActiveColor=function(c){return this.setProperty("activeColor",c,true)};sap.ui.core.Icon.prototype.setHoverColor=function(c){return this.setProperty("hoverColor",c,true)};sap.ui.core.Icon.prototype.setBackgroundColor=function(c){this.setProperty("backgroundColor",c,true);this.$().css("background-color",c);return this};sap.ui.core.Icon.prototype.setActiveBackgroundColor=function(c){return this.setProperty("activeBackgroundColor",c,true)};sap.ui.core.Icon.prototype.setHoverBackgroundColor=function(c){return this.setProperty("hoverBackgroundColor",c,true)};sap.ui.core.Icon.prototype.attachPress=function(){var m=Array.prototype.slice.apply(arguments);m.splice(0,0,"press");this.$().css("cursor","pointer");return sap.ui.core.Control.prototype.attachEvent.apply(this,m)};sap.ui.core.Icon.prototype.detachPress=function(){var m=Array.prototype.slice.apply(arguments);m.splice(0,0,"press");sap.ui.core.Control.prototype.detachEvent.apply(this,m);if(!this.hasListeners("press")){this.$().css("cursor","default")}return this};return sap.ui.core.Icon},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Item')){jQuery.sap.declare('sap.ui.core.Item');sap.ui.define("sap/ui/core/Item",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Item",{metadata:{library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:""},"enabled":{type:"boolean",group:"Misc",defaultValue:true},"textDirection":{type:"sap.ui.core.TextDirection",group:"Misc",defaultValue:sap.ui.core.TextDirection.Inherit},"key":{type:"string",group:"Data",defaultValue:null}}}});return sap.ui.core.Item},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LayoutData')){jQuery.sap.declare('sap.ui.core.LayoutData');sap.ui.define("sap/ui/core/LayoutData",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.LayoutData",{metadata:{"abstract":true,library:"sap.ui.core"}});sap.ui.core.LayoutData.prototype.invalidate=function(){var p=this.getParent();if(p&&p.getMetadata().getName()=="sap.ui.core.VariantLayoutData"){p=p.getParent()}if(p){var l=p.getParent();if(l){var e=jQuery.Event("LayoutDataChange");e.srcControl=p;l._handleEvent(e)}}};sap.ui.core.LayoutData.prototype.setLayoutData=function(l){return this};return sap.ui.core.LayoutData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ListItem')){jQuery.sap.declare('sap.ui.core.ListItem');sap.ui.define("sap/ui/core/ListItem",['./library','./Item'],function(){"use strict";sap.ui.core.Item.extend("sap.ui.core.ListItem",{metadata:{library:"sap.ui.core",properties:{"icon":{type:"string",group:"Appearance",defaultValue:null},"additionalText":{type:"string",group:"Data",defaultValue:null}}}});return sap.ui.core.ListItem},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicator')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicator');sap.ui.define("sap/ui/core/LocalBusyIndicator",['./library','./Control','./theming/Parameters','./LocalBusyIndicatorRenderer'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.LocalBusyIndicator",{metadata:{deprecated:true,library:"sap.ui.core",properties:{"width":{type:"sap.ui.core.CSSSize",group:"Misc",defaultValue:'100px'},"height":{type:"sap.ui.core.CSSSize",group:"Misc",defaultValue:'100px'}}}});(function(){sap.ui.core.LocalBusyIndicator.prototype.init=function(){var r="sap.ui.core.LocalBusyIndicator:";var p="sapUiLocalBusyIndicatorBoxSize";p=sap.ui.core.theming.Parameters.get(r+p);this._iBoxSize=8;p="sapUiLocalBusyIndicatorBoxColor";this._sBoxColor=sap.ui.core.theming.Parameters.get(r+p);p="sapUiLocalBusyIndicatorBoxColorActive";this._sBoxColorActive=sap.ui.core.theming.Parameters.get(r+p);this._animateProxy=jQuery.proxy(a,this)};sap.ui.core.LocalBusyIndicator.prototype.exit=function(){jQuery.sap.clearDelayedCall(this._delayedCallId);delete this._delayedCallId};sap.ui.core.LocalBusyIndicator.prototype.onThemeChanged=function(e){if(this.getDomRef()){this.invalidate()}};sap.ui.core.LocalBusyIndicator.prototype.onAfterRendering=function(){var w=parseInt(this.getWidth(),10);var h=parseInt(this.getHeight(),10);var $=this.$();$.css("width",w+"px");$.css("height",h+"px");var b=this.$("animation");var l=Math.floor(w/2);l-=Math.floor((5*this._iBoxSize)/2);var t=Math.floor(h/2)-Math.floor(this._iBoxSize/2);b.css("left",l+"px");b.css("top",t+"px");if(!this._$left){this._$left=this.$("leftBox")}if(!this._$middle){this._$middle=this.$("middleBox")}if(!this._$right){this._$right=this.$("rightBox")}this._delayedCallId=jQuery.sap.delayedCall(0,this,this._animateProxy)};var a=function(){if(this.getDomRef()){var t=this;var $,b,c;var d="",e="";if(t._$left){$=t._$left}else{return}if(t._$middle){b=t._$middle}else{return}if(t._$right){c=t._$right}else{return}if(t._sBoxColor){d=t._sBoxColor}else{return}if(t._sBoxColorActive){e=t._sBoxColorActive}else{return}$.css("background-color",e);setTimeout(function(){$.css("background-color",d);b.css("background-color",e);setTimeout(function(){b.css("background-color",d);c.css("background-color",e);setTimeout(function(){c.css("background-color",d)},150)},150)},150);this._delayedCallId=jQuery.sap.delayedCall(1200,this,this._animateProxy)}}}());return sap.ui.core.LocalBusyIndicator},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Message')){jQuery.sap.declare('sap.ui.core.Message');sap.ui.define("sap/ui/core/Message",['./library','./Element','./theming/Parameters'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Message",{metadata:{publicMethods:["getDefaultIcon"],library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:null},"timestamp":{type:"string",group:"Misc",defaultValue:null},"icon":{type:"sap.ui.core.URI",group:"Misc",defaultValue:null},"level":{type:"sap.ui.core.MessageType",group:"Misc",defaultValue:sap.ui.core.MessageType.None},"readOnly":{type:"boolean",group:"Misc",defaultValue:false}}}});sap.ui.core.Message.prototype.getDefaultIcon=function(s){var m=jQuery.sap.getModulePath("sap.ui.core",'/');var t="themes/"+sap.ui.getCore().getConfiguration().getTheme();var i="/img/message/";if(s&&s=="32x32"){i+="32x32/"}else{i+="16x16/"}var u="";switch(this.getProperty("level")){case sap.ui.core.MessageType.Error:u=m+t+i+"Message_Icon_Error.png";break;case sap.ui.core.MessageType.Information:u=m+t+i+"Message_Icon_Information.png";break;case sap.ui.core.MessageType.Warning:u=m+t+i+"Message_Icon_Warning.png";break;case sap.ui.core.MessageType.Success:u=m+t+i+"Message_Icon_Success.png";break;case sap.ui.core.MessageType.None:default:u=this.getProperty("icon");break}return u};sap.ui.core.Message.prototype.compareByType=function(o){sap.ui.core.Message.compareByType(this,o)};sap.ui.core.Message.compareByType=function(m,M){if(!m&&!M){return 0}if(m&&!M){return 1}if(!m&&M){return-1}var l=m.getLevel();var L=M.getLevel();var t=sap.ui.core.MessageType;if(l===L){return 0}switch(l){case t.Error:return 1;case t.Warning:return L===t.Error?-1:1;case t.Success:return L===t.Error||L===t.Warning?-1:1;case t.Information:return L===t.None?1:-1;case t.None:return-1;default:jQuery.sap.log.error("Comparison error",this);return 0}};return sap.ui.core.Message},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Popup')){jQuery.sap.declare('sap.ui.core.Popup');sap.ui.define("sap/ui/core/Popup",['jquery.sap.global','sap/ui/base/ManagedObject','sap/ui/base/Object','./Control','./IntervalTrigger','./RenderManager','./UIArea','./PopupSupport','jquery.sap.script'],function(q,M,B,C,I,R,U,P){"use strict";var a=M.extend("sap.ui.core.Popup",{constructor:function(c,m,s,A){M.apply(this);P.apply(this);this._popupUID=q.sap.uid();this.bOpen=false;this.eOpenState=sap.ui.core.OpenState.CLOSED;this._mFocusEvents={};this._mFocusEvents["sap.ui.core.Popup.addFocusableContent-"+this._popupUID]=this._addFocusableArea;this._mFocusEvents["sap.ui.core.Popup.removeFocusableContent-"+this._popupUID]=this._removeFocusableArea;this._mFocusEvents["sap.ui.core.Popup.closePopup-"+this._popupUID]=this._closePopup;this._mFocusEvents["sap.ui.core.Popup.onFocusEvent-"+this._popupUID]=this.onFocusEvent;this._mFocusEvents["sap.ui.core.Popup.increaseZIndex-"+this._popupUID]=this._increaseMyZIndex;if(c){this.setContent(c)}this._oDefaultPosition={my:a.Dock.CenterCenter,at:a.Dock.CenterCenter,of:document,offset:"0 0",collision:"flip"};this._oPosition=q.extend({},this._oDefaultPosition);this._bModal=!!m;this._oPreviousFocus=null;this._sInitialFocusId=null;this._bShadow=typeof(s)==="boolean"?s:true;this._bAutoClose=!!A;this._animations={open:null,close:null};this._durations={open:"fast",close:"fast"};this._iZIndex=-1;this._oBlindLayer=null;if(this.touchEnabled){this._fAutoCloseHandler=function(e){if(e.isMarked("delayedMouseEvent")||e.isMarked("cancelAutoClose")){return}if(this.eOpenState===sap.ui.core.OpenState.CLOSING||this.eOpenState===sap.ui.core.OpenState.CLOSED){return}var d=e.target,p=this._$().get(0),b=q.contains(p,d);if(!b){var f=this.getChildPopups();for(var i=0,l=f.length;i<l;i++){var D=q.sap.domById(f[i]);if(q.sap.containsOrEquals(D,d)){b=true;break}}}if(!b){this.close()}}}},metadata:{library:"sap.ui.core",publicMethods:["open","close","setContent","getContent","setPosition","setShadow","setModal","getModal","setAutoClose","setAutoCloseAreas","isOpen","getAutoClose","getOpenState","setAnimations","setDurations","attachOpened","attachClosed","detachOpened","detachClosed"],associations:{"childPopups":{type:"sap.ui.core.Popup",multiple:true,visibility:"hidden"}},events:{"opened":{},"closed":{}}}});a._activateBlindLayer=true;a.blStack=[];a.Dock={BeginTop:"begin top",BeginCenter:"begin center",BeginBottom:"begin bottom",LeftTop:"left top",LeftCenter:"left center",LeftBottom:"left bottom",CenterTop:"center top",CenterCenter:"center center",CenterBottom:"center bottom",RightTop:"right top",RightCenter:"right center",RightBottom:"right bottom",EndTop:"end top",EndCenter:"end center",EndBottom:"end bottom"};a.prototype.touchEnabled=sap.ui.Device.support.touch||q.sap.simulateMobileOnDesktop;a.prototype.restoreFocus=!sap.ui.Device.support.touch&&!q.sap.simulateMobileOnDesktop;B.extend("sap.ui.core.Popup.Layer",{constructor:function(){var d=this.getDomString();this._$Ref=q(d).appendTo(sap.ui.getCore().getStaticAreaRef())}});a.Layer.prototype.init=function(o,z){this._$Ref.css({"visibility":"visible","z-index":z});this.update(o,z);this._$Ref.insertAfter(o).show()};a.Layer.prototype.update=function(o,z){var b=o.rect();this._$Ref.css({"left":b.left,"top":b.top});if(o.css("right")!="auto"&&o.css("right")!="inherit"){this._$Ref.css({"right":o.css("right"),"width":"auto"})}else{this._$Ref.css({"width":b.width,"right":"auto"})}if(o.css("bottom")!="auto"&&o.css("bottom")!="inherit"){this._$Ref.css({"bottom":o.css("bottom"),"height":"auto"})}else{this._$Ref.css({"height":b.height,"bottom":"auto"})}if(typeof(z)==="number"){this._$Ref.css("z-index",z)}};a.Layer.prototype.reset=function(){this._$Ref.hide().css("visibility","hidden").appendTo(sap.ui.getCore().getStaticAreaRef())};a.Layer.prototype.getDomString=function(){q.sap.log.error("sap.ui.core.Popup.Layer: getDomString function must be overwritten!");return""};a.Layer.extend("sap.ui.core.Popup.BlindLayer",{constructor:function(){a.Layer.apply(this)}});a.BlindLayer.prototype.getDomString=function(){return"<div class=\"sapUiBliLy\" id=\"sap-ui-blindlayer-"+q.sap.uid()+"\"><iframe scrolling=\"no\" src=\"javascript:''\"	tabIndex=\"-1\"></iframe></div>"};a.prototype.oBlindLayerPool=new sap.ui.base.ObjectPool(a.BlindLayer);a.Layer.extend("sap.ui.core.Popup.ShieldLayer",{constructor:function(){a.Layer.apply(this)}});a.ShieldLayer.prototype.getDomString=function(){return"<div class=\"sapUiPopupShield\" id=\"sap-ui-shieldlayer-"+q.sap.uid()+"\"></div>"};a.prototype.oShieldLayerPool=new sap.ui.base.ObjectPool(a.ShieldLayer);(function(){var l=0;a.getLastZIndex=function(){return l};a.prototype.getLastZIndex=function(){return a.getLastZIndex()};a.getNextZIndex=function(){return(l+=10)};a.prototype.getNextZIndex=function(){return a.getNextZIndex()}}());a.prototype.open=function(d,m,b,o,c,f,g){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){return}this.eOpenState=sap.ui.core.OpenState.OPENING;var s;try{s=sap.ui.getCore().getStaticAreaRef();s=sap.ui.getCore().getUIArea(s)}catch(e){q.sap.log.error(e);throw new Error("Popup cannot be opened because static UIArea cannot be determined.")}this._bContentAddedToStatic=false;if(this.oContent instanceof C&&!this.oContent.getParent()){s.addContent(this.oContent,true);this._bContentAddedToStatic=true}if(this.oContent.getUIArea){var A=this.oContent.getUIArea();if(A===null){q.sap.log.warning("The Popup content is NOT connected with an UIArea and may not work properly!")}else if(a._bEnableUIAreaCheck&&A.getRootNode().id!==s.getRootNode().id){q.sap.log.warning("The Popup content is NOT connected with the static-UIArea and may not work properly!")}}if(typeof(d)=="string"){g=f;f=c;c=o;o=b;b=m;m=d;d=-1}if(d===undefined){d=-1}if(this.restoreFocus){this._oPreviousFocus=a.getCurrentFocusInfo()}var $=this._$(true);var i="fast";if((d===0)||(d>0)){i=d}else if((this._durations.open===0)||(this._durations.open>0)){i=this._durations.open}var _;if(m||b||o||c||f){_=this._createPosition(m,b,o,c,f)}else{_=this._oPosition}if(!_.of){_.of=this._oPosition.of||document}this._iZIndex=this._iZIndex===this.getLastZIndex()?this._iZIndex:this.getNextZIndex();var S=sap.ui.getCore().getStaticAreaRef();$.css({"position":"absolute","visibility":"hidden"});if(!($[0].parentNode==S)){$.appendTo(S)}$.css("z-index",this._iZIndex);q.sap.log.debug("position popup content "+$.attr("id")+" at "+(window.JSON?JSON.stringify(_.at):String(_.at)));this._applyPosition(_);if(g!==undefined){this.setFollowOf(g)}var t=this;if(sap.ui.Device.os.ios&&sap.ui.Device.support.touch){if(this._oTopShieldLayer){q.sap.clearDelayedCall(this._iTopShieldRemoveTimer);this._iTopShieldRemoveTimer=null}else{this._oTopShieldLayer=this.oShieldLayerPool.borrowObject($,this._iZIndex+1)}this._iTopShieldRemoveTimer=q.sap.delayedCall(500,this,function(){this.oShieldLayerPool.returnObject(this._oTopShieldLayer);this._oTopShieldLayer=null;this._iTopShieldRemoveTimer=null})}var O=function(){$.css("display","block");if(t._bModal||t._bAutoClose||t._sInitialFocusId){var k=null;if(t._sInitialFocusId){var l=sap.ui.getCore().byId(t._sInitialFocusId);if(l){k=l.getFocusDomRef()}k=k||q.sap.domById(t._sInitialFocusId)}q.sap.focus(k||$.firstFocusableDomRef())}t.eOpenState=sap.ui.core.OpenState.OPEN;if(t.getFollowOf()){a.DockTrigger.addListener(a.checkDocking,t)}t._updateBlindLayer();if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version==9){q.sap.delayedCall(0,t,function(){t.fireOpened()})}else{t.fireOpened()}};$.toggleClass("sapUiShd",this._bShadow).hide().css("visibility","visible");if(i==0){this.bOpen=true;O.apply()}else{if(this._animations.open){this._animations.open.call(null,$,i,O)}else{$.fadeIn(i,O)}}if(!!sap.ui.Device.browser.internet_explorer&&a._activateBlindLayer){this._oBlindLayer=this.oBlindLayerPool.borrowObject($,this._iZIndex-1)}if(this._bModal){this._showBlockLayer()}if(this.oContent instanceof sap.ui.core.Element){this.oContent.addDelegate(this)}this.bOpen=true;if(this.isInPopup(o)||this.isInPopup(this._oPosition.of)){var p=this.getParentPopupId(o)||this.getParentPopupId(this._oPosition.of);var h="";var j=this.getContent();if(j instanceof sap.ui.core.Element){h=j.getId()}else if(typeof j==="object"){h=j.id}this.addChildToPopup(p,h);this.addChildToPopup(p,this._popupUID)}if(this._bModal||this._bAutoClose){this._addFocusEventListeners()}if(this.touchEnabled&&!this._bModal&&this._bAutoClose){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}if(this._oBlindLayer){this._resizeListenerId=sap.ui.core.ResizeHandler.register(this._$().get(0),q.proxy(this.onresize,this))}};a.prototype.onFocusEvent=function(b){var e=q.event.fix(b);if(arguments.length>1&&arguments[1]==="sap.ui.core.Popup.onFocusEvent-"+this._popupUID){e=q.event.fix(arguments[2])}var t=(e.type=="focus"||e.type=="activate")?"focus":"blur";var c=false;if(t=="focus"){var d=this._$().get(0);if(d){c=d==e.target||q.contains(d,e.target);var f=this.getChildPopups();if(!c){for(var i=0,l=f.length;i<l;i++){var o=q.sap.domById(f[i]);if(o){c=o==e.target||q.contains(o,e.target);if(c){break}}}}q.sap.log.debug("focus event on "+e.target.id+", contains: "+c);if(this._bModal&&!c){var T=(a.getLastZIndex()==this._iZIndex);if(T){if(!sap.ui.Device.support.touch||q(e.target).is(":input")){var D=this.oLastBlurredElement?this.oLastBlurredElement:d;q.sap.focus(D)}}}else if(this._bAutoClose&&c&&this._sTimeoutId){if(this._sTimeoutId){q.sap.clearDelayedCall(this._sTimeoutId);this._sTimeoutId=null}}}}else if(t=="blur"){q.sap.log.debug("blur event on "+e.target.id);if(this._bModal){this.oLastBlurredElement=e.target}else if(this._bAutoClose){if(!this.touchEnabled&&!this._sTimeoutId){this._sTimeoutId=q.sap.delayedCall(0,this,"close")}}}};a.prototype.setInitialFocusId=function(i){this._sInitialFocusId=i};a.prototype.close=function(d){if(this.eOpenState==sap.ui.core.OpenState.CLOSED||this.eOpenState==sap.ui.core.OpenState.CLOSING){return}var i="fast";if((d===0)||(d>0)){i=d}else if((this._durations.close===0)||(this._durations.close>0)){i=this._durations.close}if(i===0&&this.eOpenState==sap.ui.core.OpenState.OPENING){return}this.eOpenState=sap.ui.core.OpenState.CLOSING;if(this.getFollowOf()){a.DockTrigger.removeListener(a.checkDocking,this)}if(this.oContent&&this._bContentAddedToStatic){sap.ui.getCore().getEventBus().publish("sap.ui","__beforePopupClose",{domNode:this._$().get(0)});var s=sap.ui.getCore().getStaticAreaRef();s=sap.ui.getCore().getUIArea(s);s.removeContent(s.indexOfContent(this.oContent),true)}this._bContentAddedToStatic=false;this._sTimeoutId=null;if(this.fEventHandler){this._removeFocusEventListeners()}if(this.touchEnabled){if(!this._bModal&&this._bAutoClose){q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}if(this.oContent instanceof sap.ui.core.Element){this.oContent.removeDelegate(this)}var $=this._$();if(this._bEventBusEventsRegistered){this._unregisterEventBusEvents()}if(this._oBlindLayer){this.oBlindLayerPool.returnObject(this._oBlindLayer)}this._oBlindLayer=null;var t=this;if(sap.ui.Device.os.ios&&sap.ui.Device.support.touch){if(this._oBottomShieldLayer){q.sap.clearDelayedCall(this._iBottomShieldRemoveTimer);this._iBottomShieldRemoveTimer=null}else{this._oBottomShieldLayer=this.oShieldLayerPool.borrowObject($,this._iZIndex-3)}this._iBottomShieldRemoveTimer=q.sap.delayedCall(500,this,function(){this.oShieldLayerPool.returnObject(this._oBottomShieldLayer);this._oBottomShieldLayer=null;this._iBottomShieldRemoveTimer=null})}var c=function(){q($).hide().css({"visibility":"hidden","left":"0px","top":"0px","right":""});if(t.restoreFocus){if(t._bModal){a.applyFocusInfo(t._oPreviousFocus);t._oPreviousFocus=null;t.oLastBlurredElement=null}}t.bOpen=false;t.eOpenState=sap.ui.core.OpenState.CLOSED;t.fireClosed();var b=t.getChildPopups();for(var j=0,l=b.length;j<l;j++){t.closePopup(b[j])}};if(i==0){c.apply()}else{if(this._animations.close){this._animations.close.call(null,$,i,c)}else{$.fadeOut(i,c)}}if(this._bModal){this._hideBlockLayer()}if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}};a.getCurrentFocusInfo=function(){var _=null;var f=sap.ui.getCore().getCurrentFocusedControlId();if(f){var F=sap.ui.getCore().getControl(f);_={'sFocusId':f,'oFocusInfo':F?F.getFocusInfo():{}}}else{try{var e=document.activeElement;if(e){_={'sFocusId':e.id,'oFocusedElement':e,'oFocusInfo':{}}}}catch(b){_=null}}return _};a.applyFocusInfo=function(p){if(p){var f=sap.ui.getCore().getControl(p.sFocusId);if(f){f.applyFocusInfo(p.oFocusInfo)}else{var e=q.sap.domById(p.sFocusId)||p.oFocusedElement;q.sap.focus(e)}}};a.prototype.setContent=function(c){this.oContent=c;return this};a.prototype.getContent=function(){return this.oContent};a.prototype.setPosition=function(m,b,o,c,d){this._oPosition=this._createPosition(m,b,o,c,d);if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){this._applyPosition(this._oPosition);this._oBlindLayer&&this._oBlindLayer.update(this._$())}return this};a.prototype._createPosition=function(m,b,o,c,d){var n=false;if(m&&(m.indexOf("+")>=0||m.indexOf("-")>=0)){n=true;if(c&&c!="0 0"){q.sap.log.warning("offset used in my and in offset, the offset value will be ignored","sap.ui.core.Popup","setPosition")}c=null}var p=q.extend({},this._oDefaultPosition,{"my":m||this._oDefaultPosition.my,"at":b||this._oDefaultPosition.at,"of":o,"offset":c,"collision":d});if(!q.ui.version){if(a._bNewOffset==null){a._bNewOffset=true;if(!(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version==8&&q.sap.Version(q().jquery).compareTo("1.8.1")<0)){var D=q(document.createElement("div"));D.position({of:window,using:function(f,g){a._bNewOffset=(g!==undefined)}})}}}if(a._bNewOffset||q.sap.Version(q.ui.version).compareTo("1.8.23")>0){if(c&&c!="0 0"){var e=p.my.split(" ");var O=c.split(" ");var s=[parseInt(O[0])<0?"":"+",parseInt(O[1])<0?"":"+"];p.my=e[0]+s[0]+O[0]+" "+e[1]+s[1]+O[1];p.offset=null}}else if(n){var e=p.my.split(" ");var O=["",""];var i=e[0].indexOf("+");if(i<0){i=e[0].indexOf("-")}if(i>=0){O[0]=e[0].slice(i);e[0]=e[0].slice(0,i)}i=e[1].indexOf("+");if(i<0){i=e[1].indexOf("-")}if(i>=0){O[1]=e[1].slice(i);e[1]=e[1].slice(0,i)}p.my=e[0]+" "+e[1];p.offset=O[0]+" "+O[1]}return p};a.prototype._getPositionOffset=function(){var o=[];if(this._oPosition.my&&(this._oPosition.my.indexOf("+")>=0||this._oPosition.my.indexOf("-")>=0)){var m=this._oPosition.my.split(" ");var i=m[0].indexOf("+");if(i<0){i=m[0].indexOf("-")}if(i>=0){o[0]=m[0].slice(i)}i=m[1].indexOf("+");if(i<0){i=m[1].indexOf("-")}if(i>=0){o[1]=m[1].slice(i)}}else if(this._oPosition.offset){o=this._oPosition.offset.split(" ")}return o};a.prototype._applyPosition=function(p){var b=sap.ui.getCore().getConfiguration().getRTL();var $=this._$();var A=p.at;if(typeof(A)==="string"){$.css("display","block").position(this._resolveReference(this._convertPositionRTL(p,b)));this._fixPositioning(p,b)}else if(sap.ui.core.CSSSize.isValid(A.left)&&sap.ui.core.CSSSize.isValid(A.top)){$.css({"left":A.left,"top":A.top})}else if(sap.ui.core.CSSSize.isValid(A.right)&&sap.ui.core.CSSSize.isValid(A.top)){$.css({"right":A.right,"top":A.top})}else if(typeof(A.left)==="number"&&typeof(A.top)==="number"){var d=$[0];if(d&&d.style.right){var w=$.outerWidth();$.css({"right":(document.documentElement.clientWidth-(A.left+w))+"px","top":A.top+"px"})}else{$.css({"left":A.left+"px","top":A.top+"px"})}}this._oLastPosition=p;this._oLastOfRect=this._calcOfRect(p.of)};a.prototype._calcOfRect=function(o){var O=this._getOfDom(o);if(O){return q(O).rect()}return null};a.prototype._getOfDom=function(o){if((o instanceof Event)||(o instanceof q.Event)){return null}var O;if(typeof(o)==="string"){O=q.sap.byId(o)}else if(o instanceof q){O=o}else{O=q(o instanceof sap.ui.core.Element?o.getDomRef():o)}return O[0]};a.prototype._convertPositionRTL=function(p,b){var f=q.extend({},p);if(b){var n=false;if(f.my&&(f.my.indexOf("+")>=0||f.my.indexOf("-")>=0)){n=true}if((f.offset||n)&&((f.my.indexOf("begin")>-1)||(f.my.indexOf("end")>-1))&&((f.at.indexOf("begin")>-1)||(f.at.indexOf("end")>-1))){if(n){var m=f.my.split(" ");if(m.length==2){f.my="";if(m[0]){if(m[0].indexOf("begin")>-1||m[0].indexOf("end")>-1){if(m[0].indexOf("+")>-1){m[0]=m[0].replace("+","-")}else if(m[0].indexOf("-")>-1){m[0]=m[0].replace("-","+")}}f.my=m[0]}if(m[1]){if(m[1].indexOf("begin")>-1||m[1].indexOf("end")>-1){if(m[1].indexOf("+")>-1){m[1]=m[1].replace("+","-")}else if(m[1].indexOf("-")>-1){m[1]=m[1].replace("-","+")}}if(m[0]){f.my=f.my+" "}f.my=f.my+m[1]}}}else{f.offset=this._mirrorOffset(f.offset)}}f.my=f.my.replace("begin","right").replace("end","left");f.at=f.at.replace("begin","right").replace("end","left")}else{f.my=f.my.replace("end","right").replace("begin","left");f.at=f.at.replace("end","right").replace("begin","left")}return f};a.prototype._mirrorOffset=function(o){var O=q.trim(o).split(/\s/);var p=parseInt(O[0],10);return(-p)+" "+O[O.length-1]};a.prototype._fixPositioning=function(p,b){var m=p.my;if(typeof(m)==="string"){if(b&&((m.indexOf("right")>-1)||(m.indexOf("begin")>-1)||(m.indexOf("center")>-1))){var $=this._$();var c=q(window).width()-$.outerWidth()-$.offset().left;$.css({"right":c+"px","left":""})}else if((m.indexOf("right")>-1)||(m.indexOf("end")>-1)){var $=this._$();var c=q(window).width()-$.outerWidth()-$.offset().left;$.css({"right":c+"px","left":""})}}};a.prototype._resolveReference=function(p){var o=p;if(p.of instanceof sap.ui.core.Element){o=q.extend({},p,{of:p.of.getDomRef()})}return o};a.prototype.setShadow=function(s){this._bShadow=s;if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){this._$().toggleClass("sapUiShd",s)}return this};a.prototype.setModal=function(m,s){var o=this._bModal;this._bModal=m;this._sModalCSSClass=s;if(this.isOpen()){if(o!==m){if(m){this._showBlockLayer()}else{this._hideBlockLayer()}if(this.touchEnabled&&this._bAutoClose){if(!m){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}else{q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}}}return this};a.prototype.getModal=function(){return this._bModal};a.prototype.setAutoClose=function(A){if(this.touchEnabled&&this.isOpen()&&this._bAutoClose!==A){if(!this._bModal){if(A){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}else{q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}}this._bAutoClose=A;return this};a.prototype.setAutoCloseAreas=function(A){for(var i=0,l=A.length;i<l;i++){var s="";if(A[i]instanceof sap.ui.core.Element){s=A[i].getId()}else if(typeof A[i]==="object"){s=A[i].id}else if(typeof A[i]==="string"){s=A[i]}if(q.inArray(s,this.getChildPopups())===-1){this.addChildPopup(s)}}return this};a.prototype.setAnimations=function(o,c){if(o&&(typeof(o)=="function")){this._animations.open=o}if(c&&(typeof(c)=="function")){this._animations.close=c}return this};a.prototype.setDurations=function(o,c){if((o>0)||(o===0)){this._durations.open=o}if((c>0)||(c===0)){this._durations.close=c}return this};a.prototype.setFollowOf=function(f){var u=false;a.DockTrigger.removeListener(a.checkDocking,this);if(typeof(f)==="function"){this._bFollowOf=true;this._followOfHandler=f;u=true}else if(typeof(f)==="boolean"){this._bFollowOf=f;if(!this._bFollowOf){this._followOfHandler=null}u=f}else{this._bFollowOf=false;this._followOfHandler=null;if(f!=null){q.sap.log.error("Trying to set an invalid type to 'followOf: "+f)}}if(u&&this._oLastPosition){this._oLastOfRect=this._calcOfRect(this._oLastPosition.of)}if(this._bFollowOf&&this.getOpenState()===sap.ui.core.OpenState.OPEN){a.DockTrigger.addListener(a.checkDocking,this)}};a.prototype.getAutoClose=function(){return this._bAutoClose};a.prototype.getFollowOf=function(){if(this._bFollowOf){return typeof(this._followOfHandler)==="function"?this._followOfHandler:true}return false};a.prototype.isOpen=function(){return this.bOpen};a.prototype.getOpenState=function(){return this.eOpenState};a.prototype.destroy=function(){if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}this.close();this.oContent=null;if(this._bFollowOf){this.setFollowOf(null)}if(this._bEventBusEventsRegistered){this._unregisterEventBusEvents()}};a.prototype.exit=function(){delete this._mFocusEvents};a.prototype._addFocusEventListeners=function(c,e,E){if(!this.fEventHandler){this.fEventHandler=q.proxy(this.onFocusEvent,this)}var p=this._$();var b=this.getChildPopups();if(document.addEventListener&&!sap.ui.Device.browser.internet_explorer){document.addEventListener("focus",this.fEventHandler,true);p.get(0).addEventListener("blur",this.fEventHandler,true);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){d.addEventListener("blur",this.fEventHandler,true)}}}else{q(document).bind("activate."+this._popupUID,this.fEventHandler);p.bind("deactivate."+this._popupUID,this.fEventHandler);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){q(d).bind("deactivate."+this._popupUID,this.fEventHandler)}}}};a.prototype._removeFocusEventListeners=function(c,e,E){var p=this._$(false,true);if(!p.length){return}var b=this.getChildPopups();if(document.removeEventListener&&!sap.ui.Device.browser.internet_explorer){document.removeEventListener("focus",this.fEventHandler,true);p.get(0).removeEventListener("blur",this.fEventHandler,true);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){d.removeEventListener("blur",this.fEventHandler,true)}this.closePopup(b[i])}}else{q(document).unbind("activate."+this._popupUID,this.fEventHandler);p.unbind("deactivate."+this._popupUID,this.fEventHandler);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){q(d).unbind("deactivate."+this._popupUID,this.fEventHandler)}}}this.fEventHandler=null};a.prototype._registerEventBusEvents=function(c,e,E){var t=this;q.each(t._mFocusEvents,function(s,l){sap.ui.getCore().getEventBus().subscribe("sap.ui",s,l,t)});this._bEventBusEventsRegistered=true};a.prototype._unregisterEventBusEvents=function(c,e,E){var t=this;q.each(t._mFocusEvents,function(s,l){sap.ui.getCore().getEventBus().unsubscribe("sap.ui",s,l,t)});delete this._bEventBusEventsRegistered};a.prototype._addFocusableArea=function(c,e,E){var p=this._popupUID;if(q.inArray(E.id,this.getChildPopups())===-1){this.addChildPopup(E.id)}var $=q('[data-sap-ui-popup="'+E.id+'"]');if($.length>0){var o=function(b){$.off("blur",o);var s="sap.ui.core.Popup.onFocusEvent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",s,b)};$.on("blur",o)}};a.prototype._removeFocusableArea=function(c,e,E){this.removeChildPopup(E.id)};a.prototype._closePopup=function(c,e,E){this.close(typeof this._durations.close==="string"?0:this._durations.close)};a.prototype._setIdentity=function($){if(typeof $==="object"){$.attr("data-sap-ui-popup",this._popupUID)}else{q.sap.log.warning("Incorrect DomRef-type for 'setIdentity': "+$,this);return}if(!this._bEventBusEventsRegistered){this._registerEventBusEvents()}};a.prototype._$=function(f,g){var c;if(this.oContent instanceof C){c=this.oContent.$();if(f||(c.length===0&&!g)){q.sap.log.info("Rendering of popup content: "+this.oContent.getId());if(c.length>0){R.preserveContent(c[0],true,false)}sap.ui.getCore().getRenderManager().render(this.oContent,sap.ui.getCore().getStaticAreaRef());c=this.oContent.$()}}else if(this.oContent instanceof sap.ui.core.Element){c=this.oContent.$()}else{c=q(this.oContent)}this._setIdentity(c);return c};a.prototype._showBlockLayer=function(){var b=q("#sap-ui-blocklayer-popup"),c="sapUiBLy"+(this._sModalCSSClass?" "+this._sModalCSSClass:"");if(b.length===0){b=q('<div id="sap-ui-blocklayer-popup" tabindex="0" class="'+c+'"></div>');b.appendTo(sap.ui.getCore().getStaticAreaRef())}else{b.removeClass().addClass(c)}a.blStack.push(this._iZIndex-2);b.css({"z-index":this._iZIndex-2,"visibility":"visible"}).show();q("html").addClass("sapUiBLyBack")};a.prototype._hideBlockLayer=function(){a.blStack.pop();if(a.blStack.length>0){q("#sap-ui-blocklayer-popup").css({"z-index":a.blStack[a.blStack.length-1],"visibility":"visible"}).show()}else{q("#sap-ui-blocklayer-popup").css("visibility","hidden").hide();q("html").removeClass("sapUiBLyBack")}};a.DockTrigger=new I(200);var r=function(o,b){if(o.left!=b.left||o.top!=b.top||o.width!=b.width||o.height!=b.height){return false}return true};a.checkDocking=function(){if(this.getOpenState()===sap.ui.core.OpenState.OPEN){var c=this._getOfDom(this._oLastPosition.of),o=q(c).rect();if(!o){this.close();return}if(!q.sap.containsOrEquals(document.documentElement,c)){if(c.id&&c.id!==""){var n=q.sap.domById(c.id);var N=q(n).rect();if(N&&!r(o,N)){o=N;delete this._oLastPosition.of;this._oLastPosition.of=n}}}if(this._oLastOfRect){if(!r(this._oLastOfRect,o)){if(this._followOfHandler){var l=q.extend(true,{},this._oLastPosition),L=q.extend(true,{},this._oLastOfRect);this._followOfHandler({lastPosition:l,lastOfRect:L,currentOfRect:o})}else{this._applyPosition(this._oLastPosition)}}}}};a.prototype.ontouchstart=function(e){this.onmousedown(e,true);this._bMousedownCalled=true};a.prototype.onmousedown=function(e,s){if(this._bMousedownCalled&&!s){this._bMousedownCalled=false;return}if(this._iZIndex===this.getLastZIndex()||this.getModal()){return}this._increaseMyZIndex("","mousedown",e)};a.prototype._increaseMyZIndex=function(c,e,E){var p=this.getParentPopup(this._oLastPosition.of);if(E.type&&E.type==="mousedown"||E.isFromParentPopup||p.length===0){this._iZIndex=this.getNextZIndex();var $=this._$();$.css("z-index",this._iZIndex);if(this._oBlindLayer){this._oBlindLayer.update($,this._iZIndex-1)}if(!E.type||E.type!="mousedown"){var b=this.getChildPopups();for(var i=0,l=b.length;i<l;i++){this.increaseZIndex(b[i],true)}}}else if(p.length>0){this.increaseZIndex(q(p.get(0)).attr("data-sap-ui-popup"),false)}};a.prototype.onAfterRendering=function(e){var $=this.getContent().$();$.toggleClass("sapUiShd",this._bShadow);$.css("position","absolute");this._setIdentity($);var b=$[0];var l=b.style.left;var c=b.style.right;var t=b.style.top;var d=b.style.bottom;if(!(l&&l!="auto"||c&&c!="auto"||t&&t!="auto"||d&&d!="auto")){q.sap.log.debug("reposition popup content "+$.attr("id")+" at "+(window.JSON?JSON.stringify(this._oLastPosition.at):String(this._oLastPosition.at)));this._applyPosition(this._oLastPosition)}$.show().css({"visibility":"visible","z-index":this._iZIndex});if(this._oBlindLayer){this._resizeListenerId=sap.ui.core.ResizeHandler.register(this._$().get(0),q.proxy(this.onresize,this))}if(this.isOpen()&&(this.getModal()||this.getAutoClose())){this._addFocusEventListeners()}};a.prototype.onBeforeRendering=function(e){if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}if(this.isOpen()&&(this.getModal()||this.getAutoClose())){this._removeFocusEventListeners()}};a.prototype.onresize=function(e){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED&&this._oBlindLayer){var t=this;setTimeout(function(){t._updateBlindLayer()},0)}};a.prototype._updateBlindLayer=function(){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED&&this._oBlindLayer){this._oBlindLayer.update(this._$())}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ScrollBar')){jQuery.sap.declare('sap.ui.core.ScrollBar');sap.ui.define("sap/ui/core/ScrollBar",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.ScrollBar",{metadata:{publicMethods:["bind","unbind","pageUp","pageDown"],library:"sap.ui.core",properties:{"vertical":{type:"boolean",group:"Behavior",defaultValue:true},"scrollPosition":{type:"int",group:"Behavior",defaultValue:null},"size":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"contentSize":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"steps":{type:"int",group:"Dimension",defaultValue:null}},events:{"scroll":{}}}});sap.ui.core.ScrollBar.M_EVENTS={'scroll':'scroll'};sap.ui.core.ScrollBar.prototype.init=function(){this._$ScrollDomRef=null;this._iOldScrollPos=0;this._iOldStep=0;this._bScrollPosIsChecked=false;this._bRTL=sap.ui.getCore().getConfiguration().getRTL();this._bSuppressScroll=false;this._iMaxContentDivSize=1000000;if(jQuery.sap.touchEventMode==="ON"){jQuery.sap.require("sap.ui.thirdparty.zyngascroll");this._iLastTouchScrollerPosition=null;this._iTouchStepTreshold=24;this._bSkipTouchHandling=false;this._oTouchScroller=new window.Scroller(jQuery.proxy(this._handleTouchScroll,this),{bouncing:false})}};sap.ui.core.ScrollBar.prototype.onBeforeRendering=function(){this.$("sb").unbind("scroll",this.onscroll)};sap.ui.core.ScrollBar.prototype.onAfterRendering=function(){this._iSteps=this.getSteps();var c=this.getContentSize();this._bStepMode=!c;var s=this.getSize();if(jQuery.sap.endsWith(s,"px")){s=s.substr(0,s.length-2)}else{s=this.getVertical()?this.$().height():this.$().width()}var a=null;var $=this.$("ffsize");if(!!sap.ui.Device.browser.firefox){a=$.outerHeight()}$.remove();if(!!sap.ui.Device.browser.webkit){if(!document.width){a=Math.round(40/(window.outerWidth/jQuery(document).width()))}else{a=Math.round(40/(document.width/jQuery(document).width()))}}if(this.getVertical()){this._iFactor=!!sap.ui.Device.browser.firefox?a:!!sap.ui.Device.browser.webkit?a:Math.floor(s*0.125);this._iFactorPage=!!sap.ui.Device.browser.firefox?s-a:Math.floor(s*0.875)}else{this._iFactor=!!sap.ui.Device.browser.firefox?10:!!sap.ui.Device.browser.webkit?a:7;this._iFactorPage=!!sap.ui.Device.browser.firefox?Math.floor(s*0.8):!!sap.ui.Device.browser.webkit?Math.floor(s*0.875):s-14}this._$ScrollDomRef=this.$("sb");if(this._bStepMode){if(this.getVertical()){var S=this._iSteps*this._iFactor;if(S>this._iMaxContentDivSize){this._iFactor=Math.ceil(this._iFactor/Math.ceil(S/this._iMaxContentDivSize))}var C=this._$ScrollDomRef.height()+this._iSteps*this._iFactor;this._$ScrollDomRef.find("div").height(C)}else{var C=this._$ScrollDomRef.width()+this._iSteps*this._iFactor;this._$ScrollDomRef.find("div").width(C)}}this.setCheckedScrollPosition(this.getScrollPosition()?this.getScrollPosition():0,true);this._$ScrollDomRef.bind("scroll",jQuery.proxy(this.onscroll,this));if(jQuery.sap.touchEventMode==="ON"){this._bSkipTouchHandling=true;var o={width:0,height:0};o[this.getVertical()?"height":"width"]=this._bStepMode?(this.getSteps()*this._iTouchStepTreshold):parseInt(this.getContentSize(),10);this._oTouchScroller.setDimensions(0,0,o.width,o.height);var e=this._$ScrollDomRef.get(0);var r=e.getBoundingClientRect();this._oTouchScroller.setPosition(r.left+e.clientLeft,r.top+e.clientTop);this._bSkipTouchHandling=false}};sap.ui.core.ScrollBar.prototype.onmousewheel=function(e){if(this.$().is(":visible")){var o=e.originalEvent;var w=o.detail?o.detail:o.wheelDelta*(-1)/40;var f=w>0?true:false;if(jQuery.sap.containsOrEquals(this._$ScrollDomRef[0],e.target)){this._doScroll(sap.ui.core.ScrollBarAction.MouseWheel,f)}else{this._bMouseWheel=true;var p=null;if(this._bStepMode){p=w+this._iOldStep}else{p=w*this._iFactor+this._iOldScrollPos}this.setCheckedScrollPosition(p,true)}e.preventDefault();e.stopPropagation();return false}};sap.ui.core.ScrollBar.prototype.ontouchstart=function(e){var t=e.touches;var f=t[0];if(f&&f.target&&f.target.tagName.match(/input|textarea|select/i)){return}if(this._oTouchScroller){this._oTouchScroller.doTouchStart(t,e.timeStamp)}if(t.length==1){e.preventDefault()}};sap.ui.core.ScrollBar.prototype.ontouchmove=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchMove(e.touches,e.timeStamp,e.scale)}};sap.ui.core.ScrollBar.prototype.ontouchend=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchEnd(e.timeStamp)}};sap.ui.core.ScrollBar.prototype.ontouchcancel=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchEnd(e.timeStamp)}};sap.ui.core.ScrollBar.prototype.onscroll=function(e){if(this._bSuppressScroll){this._bSuppressScroll=false;e.preventDefault();e.stopPropagation();return false}var s=null;if(this._$ScrollDomRef){if(this.getVertical()){s=this._$ScrollDomRef.scrollTop()}else{s=this._$ScrollDomRef.scrollLeft();if(!!sap.ui.Device.browser.firefox&&this._bRTL){s=Math.abs(s)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var S=this._$ScrollDomRef.get(0);s=S.scrollWidth-S.clientWidth-S.scrollLeft}}}var d=s-this._iOldScrollPos;var f=d>0?true:false;if(d<0){d=d*(-1)}var a=sap.ui.core.ScrollBarAction.Drag;if(d==this._iFactor){a=sap.ui.core.ScrollBarAction.Step}else if(d==this._iFactorPage){a=sap.ui.core.ScrollBarAction.Page}else if(this._bMouseWheel){a=sap.ui.core.ScrollBarAction.MouseWheel}this._doScroll(a,f);e.preventDefault();e.stopPropagation();return false};sap.ui.core.ScrollBar.prototype._handleTouchScroll=function(l,t,z){if(this._bSkipTouchHandling){return}var v=this.getVertical()?t:l;if(this._bStepMode){var p=Math.max(Math.round(v/this._iTouchStepTreshold),0)}else{var p=Math.round(v)}if(this._iLastTouchScrollerPosition!==p){this._iLastTouchScrollerPosition=p;this.setCheckedScrollPosition(p,true);this.fireScroll()}};sap.ui.core.ScrollBar.prototype.unbind=function(o){if(o){this._$OwnerDomRef=jQuery(o);if(this.getVertical()){this._$OwnerDomRef.unbind(!!sap.ui.Device.browser.firefox?"DOMMouseScroll":"mousewheel",this.onmousewheel)}if(jQuery.sap.touchEventMode==="ON"){this._$OwnerDomRef.unbind(this._getTouchEventType("touchstart"),jQuery.proxy(this.ontouchstart,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchmove"),jQuery.proxy(this.ontouchmove,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchend"),jQuery.proxy(this.ontouchend,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchcancle"),jQuery.proxy(this.ontouchcancle,this))}}};sap.ui.core.ScrollBar.prototype.bind=function(o){if(o){this._$OwnerDomRef=jQuery(o);if(this.getVertical()){this._$OwnerDomRef.bind(!!sap.ui.Device.browser.firefox?"DOMMouseScroll":"mousewheel",jQuery.proxy(this.onmousewheel,this))}if(jQuery.sap.touchEventMode==="ON"){this._$OwnerDomRef.bind(this._getTouchEventType("touchstart"),jQuery.proxy(this.ontouchstart,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchmove"),jQuery.proxy(this.ontouchmove,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchend"),jQuery.proxy(this.ontouchend,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchcancle"),jQuery.proxy(this.ontouchcancle,this))}}};sap.ui.core.ScrollBar.prototype._getTouchEventType=function(t){return jQuery.sap.touchEventMode==="SIM"?("sap"+t):t};sap.ui.core.ScrollBar.prototype.pageUp=function(){this._doScroll(sap.ui.core.ScrollBarAction.Page,false)};sap.ui.core.ScrollBar.prototype.pageDown=function(){this._doScroll(sap.ui.core.ScrollBarAction.Page,true)};sap.ui.core.ScrollBar.prototype.setScrollPosition=function(s){if(this._$ScrollDomRef){this.setCheckedScrollPosition(s,true)}else{this.setProperty("scrollPosition",s)}return this};sap.ui.core.ScrollBar.prototype.setCheckedScrollPosition=function(s,c){var C=Math.max(s,0);if(this._bStepMode===undefined){this._bStepMode=!this.getContentSize()}var S=C;if(this._bStepMode){C=Math.min(C,this.getSteps());S=C*this._iFactor}C=Math.floor(C);this._bSuppressScroll=!c;this.setProperty("scrollPosition",C,true);if(this.getVertical()){this._$ScrollDomRef.scrollTop(S)}else{if(!!sap.ui.Device.browser.firefox&&this._bRTL){this._$ScrollDomRef.scrollLeft(-S)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var o=this._$ScrollDomRef.get(0);this._$ScrollDomRef.scrollLeft(o.scrollWidth-o.clientWidth-S)}else{this._$ScrollDomRef.scrollLeft(S)}}if(jQuery.sap.touchEventMode==="ON"){var v=C;if(this._bStepMode){v=Math.round(C*this._iTouchStepTreshold)}this._oTouchScroller.__scrollTop=this.getVertical()?v:0;this._oTouchScroller.__scrollLeft=this.getVertical()?0:v}};sap.ui.core.ScrollBar.prototype.setContentSize=function(c){this.setProperty("contentSize",c);this._bStepMode=false;var s=this.$("sbcnt");if(s){if(this.getVertical()){s.height(c)}else{s.width(c)}}return this};sap.ui.core.ScrollBar.prototype._doScroll=function(e,f){var s=null;if(this._$ScrollDomRef){if(this.getVertical()){s=this._$ScrollDomRef.scrollTop()}else{s=this._$ScrollDomRef.scrollLeft();if(!!sap.ui.Device.browser.firefox&&this._bRTL){s=Math.abs(s)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var S=this._$ScrollDomRef.get(0);s=S.scrollWidth-S.clientWidth-S.scrollLeft}}}if(this._bStepMode){var i=Math.round(s/this._iFactor);var o=this._iOldStep;if(o!==i){this.setCheckedScrollPosition(i,false);jQuery.sap.log.debug("-----STEPMODE-----: New Step: "+i+" --- Old Step: "+o+" --- Scroll Pos in px: "+s+" --- Action: "+e+" --- Direction is forward: "+f);this.fireScroll({action:e,forward:f,newScrollPos:i,oldScrollPos:o});this._iOldStep=i}}else{this.setProperty("scrollPosition",s,true);jQuery.sap.log.debug("-----PIXELMODE-----: New ScrollPos: "+s+" --- Old ScrollPos: "+this._iOldScrollPos+" --- Action: "+e+" --- Direction is forward: "+f);this.fireScroll({action:e,forward:f,newScrollPos:s,oldScrollPos:this._iOldScrollPos})}this._bSuppressScroll=false;this._iOldScrollPos=s;this._bMouseWheel=false};sap.ui.core.ScrollBar.prototype.onThemeChanged=function(){this.rerender()};sap.ui.core.ScrollBar.prototype.getNativeScrollPosition=function(){if(this._$ScrollDomRef){if(this.getVertical()){return this._$ScrollDomRef.scrollTop()}else{return this._$ScrollDomRef.scrollLeft()}}return 0};sap.ui.core.ScrollBar.prototype.setNativeScrollPosition=function(n){if(this._$ScrollDomRef){if(this.getVertical()){this._$ScrollDomRef.scrollTop(n)}else{this._$ScrollDomRef.scrollLeft(n)}}};return sap.ui.core.ScrollBar},true)};if(!jQuery.sap.isDeclared('sap.ui.core.SeparatorItem')){jQuery.sap.declare('sap.ui.core.SeparatorItem');sap.ui.define("sap/ui/core/SeparatorItem",['./library','./Item'],function(){"use strict";sap.ui.core.Item.extend("sap.ui.core.SeparatorItem",{metadata:{library:"sap.ui.core"}});return sap.ui.core.SeparatorItem},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Title')){jQuery.sap.declare('sap.ui.core.Title');sap.ui.define("sap/ui/core/Title",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Title",{metadata:{library:"sap.ui.core",properties:{"text":{type:"string",group:"Appearance",defaultValue:null},"icon":{type:"sap.ui.core.URI",group:"Appearance",defaultValue:null},"level":{type:"sap.ui.core.TitleLevel",group:"Appearance",defaultValue:sap.ui.core.TitleLevel.Auto},"emphasized":{type:"boolean",group:"Appearance",defaultValue:false}}}});return sap.ui.core.Title},true)};if(!jQuery.sap.isDeclared('sap.ui.core.TooltipBase')){jQuery.sap.declare('sap.ui.core.TooltipBase');sap.ui.define("sap/ui/core/TooltipBase",['./library','./Control','./Popup'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.TooltipBase",{metadata:{"abstract":true,library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:""},"openDuration":{type:"int",group:"Behavior",defaultValue:200},"closeDuration":{type:"int",group:"Behavior",defaultValue:200},"myPosition":{type:"sap.ui.core.Dock",group:"Behavior",defaultValue:'begin top'},"atPosition":{type:"sap.ui.core.Dock",group:"Behavior",defaultValue:'begin bottom'},"offset":{type:"string",group:"Behavior",defaultValue:'10 3'},"collision":{type:"sap.ui.core.Collision",group:"Behavior",defaultValue:'flip'},"openDelay":{type:"int",group:"Misc",defaultValue:500},"closeDelay":{type:"int",group:"Misc",defaultValue:100}},events:{"closed":{}}}});sap.ui.core.TooltipBase.M_EVENTS={'closed':'closed'};sap.ui.core.TooltipBase.prototype._getPopup=jQuery.sap.getter((function(){var p=new sap.ui.core.Popup();p.setShadow(true);return p}()));sap.ui.core.TooltipBase.prototype.onfocusin=function(e){var s=jQuery(e.target).control(0);if(s!=null){var d=s.getFocusDomRef();this.sStoredTooltip=null;if(d.title&&d.title!=""){this.sStoredTooltip=d.title;d.title=""}var p=this._getPopup();if(!(p.isOpen()&&p.getContent()==this)){sap.ui.getCore().getRenderManager().render(this,sap.ui.getCore().getStaticAreaRef(),true)}var v=d.getAttribute("aria-describedby");var i=this.getId()+"-title "+this.getId()+"-txt";if(v==null||v==""){d.setAttribute("aria-describedby",i)}else if(v.indexOf(i)==-1){d.setAttribute("aria-describedby",v+" "+i)}}};sap.ui.core.TooltipBase.prototype.onfocusout=function(e){var s=jQuery(e.target).control(0);if(s!=null){var d=s.getFocusDomRef();if(this.sStoredTooltip){d.title=this.sStoredTooltip}var v=d.getAttribute("aria-describedby");var i=this.getId()+"-title "+this.getId()+"-txt";if(v&&v.indexOf(i)>=0){if(jQuery.trim(v)==i){d.removeAttribute("aria-describedby")}else{v=v.replace(i,"");d.setAttribute("aria-describedby",v)}}}if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}this.sCloseNowTimeout=jQuery.sap.delayedCall(this.getCloseDelay(),this,"closePopup")};sap.ui.core.TooltipBase.prototype.isStandardTooltip=function(t){return(typeof t==="string"&&(jQuery.trim(t))!=="")};sap.ui.core.TooltipBase.prototype.onmouseover=function(e){var E=jQuery(e.target).control(0);if(E!=null){if(E===this){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null}e.stopPropagation();e.preventDefault();return}var c=jQuery(e.currentTarget).control(0);if(c!==E&&!this.isStandardTooltip(E.getTooltip())){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;e.stopPropagation();e.preventDefault();return}}var l=jQuery(e.relatedTarget).control(0);if(l){if(l.getParent()){if(l.getParent()===c&&c===E){var L=l.getTooltip();if(!this.isStandardTooltip(L)&&(!L||!(L instanceof sap.ui.core.TooltipBase))){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;e.stopPropagation();e.preventDefault();return}}}}}if(this._currentControl===E||!this.isStandardTooltip(E.getTooltip())){this.removeStandardTooltips(E);if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout)}sap.ui.core.TooltipBase.sOpenTimeout=jQuery.sap.delayedCall(this.getOpenDelay(),this,"openPopup",[this._currentControl]);e.stopPropagation();e.preventDefault()}}};sap.ui.core.TooltipBase.prototype.onmouseout=function(e){if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}if(!this.sCloseNowTimeout){this.sCloseNowTimeout=jQuery.sap.delayedCall(this.getCloseDelay(),this,"closePopup")}this.restoreStandardTooltips();e.stopPropagation();e.preventDefault()};sap.ui.core.TooltipBase.prototype.closePopup=function(){var p=this._getPopup();if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout)}this.sCloseNowTimeout=undefined;p.attachClosed(this.handleClosed,this);p.close();this.restoreStandardTooltips()};sap.ui.core.TooltipBase.prototype.handleClosed=function(){this._getPopup().detachClosed(jQuery.proxy(this.handleClosed,this));this.fireClosed()};sap.ui.core.TooltipBase.prototype.openPopup=function(s){if(s.getTooltip()!=null){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;return}var p=this._getPopup();if(p.isOpen()&&p.getContent()==this){return}sap.ui.getCore().getRenderManager().render(this,sap.ui.getCore().getStaticAreaRef(),true);var d=s.getDomRef();p.setContent(this);p.setPosition(this.getMyPosition(),this.getAtPosition(),d,this.getOffset(),this.getCollision());p.setDurations(this.getOpenDuration(),this.getCloseDuration());p.open();this.removeStandardTooltips(this._currentControl)}};sap.ui.core.TooltipBase.prototype.removeStandardTooltips=function(){var d=this._currentControl.getDomRef();if(!this.aStoredTooltips){this.aStoredTooltips=[]}else{return}var t="";while(d&&!(d===document)){t=d.title;if(t){this.aStoredTooltips.push({domref:d,tooltip:t});d.title=""}d=d.parentNode}if(this._currentControl.getTooltipDomRefs){var D=this._currentControl.getTooltipDomRefs();for(var i=0;i<D.length;i++){d=D[i];if(d){t=d.title;if(t){this.aStoredTooltips.push({domref:d,tooltip:t});d.title=""}}}}};sap.ui.core.TooltipBase.prototype.restoreStandardTooltips=function(){var p=this._getPopup();var e=p.getOpenState();if(e===sap.ui.core.OpenState.OPEN||e===sap.ui.core.OpenState.OPENING){return}if(sap.ui.core.TooltipBase.sOpenTimeout){return}if(this.aStoredTooltips){for(var i=0;i<this.aStoredTooltips.length;i++){var d=this.aStoredTooltips[i].domref;d.title=this.aStoredTooltips[i].tooltip}}this.aStoredTooltips=null};sap.ui.core.TooltipBase.prototype._setParent=sap.ui.core.TooltipBase.prototype.setParent;sap.ui.core.TooltipBase.prototype.setParent=function(p,a){var _=this._getPopup();if(_&&_.isOpen()){this.closePopup()}this._setParent.apply(this,arguments)};sap.ui.core.TooltipBase.prototype.onkeydown=function(e){if(e.ctrlKey&&e.which==jQuery.sap.KeyCodes.I){var E=jQuery(e.target).control(0);if(E!=null){if(this._currentControl===E||!this.isStandardTooltip(E.getTooltip())){this.removeStandardTooltips(E);this.openPopup(this._currentControl);e.preventDefault();e.stopPropagation()}}}else if(e.which==jQuery.sap.KeyCodes.ESCAPE){if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}var w=this.oPopup&&this.oPopup.isOpen();this.closePopup();if(w){e.preventDefault();e.stopPropagation()}}};sap.ui.core.TooltipBase.prototype._closeOrPreventOpen=function(){var p=this._getPopup();if(p.isOpen()){this.closePopup()}else if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}};return sap.ui.core.TooltipBase},true)};if(!jQuery.sap.isDeclared('sap.ui.core.VariantLayoutData')){jQuery.sap.declare('sap.ui.core.VariantLayoutData');sap.ui.define("sap/ui/core/VariantLayoutData",['./library','./LayoutData'],function(){"use strict";sap.ui.core.LayoutData.extend("sap.ui.core.VariantLayoutData",{metadata:{library:"sap.ui.core",aggregations:{"multipleLayoutData":{type:"sap.ui.core.LayoutData",multiple:true,singularName:"multipleLayoutData"}}}});return sap.ui.core.VariantLayoutData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.View')){jQuery.sap.declare('sap.ui.core.mvc.View');sap.ui.define("sap/ui/core/mvc/View",['sap/ui/core/library','sap/ui/core/Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.mvc.View",{metadata:{publicMethods:["getController"],library:"sap.ui.core",properties:{"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:'100%'},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"viewName":{type:"string",group:"Misc",defaultValue:null},"displayBlock":{type:"boolean",group:"Appearance",defaultValue:false}},aggregations:{"content":{type:"sap.ui.core.Control",multiple:true,singularName:"content"}},events:{"afterInit":{},"beforeExit":{},"afterRendering":{},"beforeRendering":{}}}});sap.ui.core.mvc.View.M_EVENTS={'afterInit':'afterInit','beforeExit':'beforeExit','afterRendering':'afterRendering','beforeRendering':'beforeRendering'};(function(){sap.ui.core.mvc.View.prototype._initCompositeSupport=function(s){this.oViewData=s.viewData;this.sViewName=s.viewName;if(this.initViewSettings){this.initViewSettings(s)}c(this,s);if(this.onControllerConnected){this.onControllerConnected(this.oController)}this.fireAfterInit()};sap.ui.core.mvc.View.prototype.getController=function(){return this.oController};sap.ui.core.mvc.View.prototype.byId=function(i){return sap.ui.getCore().byId(this.createId(i))};sap.ui.core.mvc.View.prototype.createId=function(i){if(!this.isPrefixedId(i)){i=this.getId()+"--"+i}return i};sap.ui.core.mvc.View.prototype.isPrefixedId=function(i){return(i&&i.indexOf(this.getId()+"--")===0)};var c=function(t,s){var C=s.controller;if(!C&&t.getControllerName){var d=t.getControllerName();if(d){C=sap.ui.controller(d)}}if(sap.ui.getCore().getConfiguration().getDesignMode()&&!sap.ui.getCore().getConfiguration().getSuppressDeactivationOfControllerCode()){for(var m in C){if(typeof C[m]==="function"&&!sap.ui.core.mvc.Controller.prototype[m]){C[m]=function(){}}}}if(C){t.oController=C;C.connectToView(t)}};sap.ui.core.mvc.View.prototype.getViewData=function(){return this.oViewData};sap.ui.core.mvc.View.prototype.exit=function(){this.fireBeforeExit();this.oController=null};sap.ui.core.mvc.View.prototype.onAfterRendering=function(){this.fireAfterRendering()};sap.ui.core.mvc.View.prototype.onBeforeRendering=function(){this.fireBeforeRendering()};sap.ui.core.mvc.View.prototype.clone=function(i,l){var s={},k,C;for(k in this.mProperties&&!(this.isBound&&this.isBound(k))){if(this.mProperties.hasOwnProperty(k)){s[k]=this.mProperties[k]}}C=sap.ui.core.Control.prototype.clone.call(this,i,l,{cloneChildren:false,cloneBindings:true});C.applySettings(s);return C};sap.ui.view=function(i,v,t){var a=null,V={};if(typeof i==="object"||typeof i==="string"&&v===undefined){v=i;i=undefined}if(v){if(typeof v==="string"){V.viewName=v}else{V=v}}if(i){V.id=i}if(t){V.type=t}if(sap.ui.core.CustomizingConfiguration){var b=sap.ui.core.CustomizingConfiguration.getViewReplacement(V.viewName);if(b){jQuery.sap.log.info("Customizing: View replacement for view '"+V.viewName+"' found and applied: "+b.viewName+" (type: "+b.type+")");jQuery.extend(V,b)}else{jQuery.sap.log.debug("Customizing: no View replacement found for view '"+V.viewName+"'.")}}if(!V.type){throw new Error("No view type specified.")}else if(V.type===sap.ui.core.mvc.ViewType.JS){a=new sap.ui.core.mvc.JSView(V)}else if(V.type===sap.ui.core.mvc.ViewType.JSON){a=new sap.ui.core.mvc.JSONView(V)}else if(V.type===sap.ui.core.mvc.ViewType.XML){a=new sap.ui.core.mvc.XMLView(V)}else if(V.type===sap.ui.core.mvc.ViewType.HTML){a=new sap.ui.core.mvc.HTMLView(V)}else if(V.type===sap.ui.core.mvc.ViewType.Template){a=new sap.ui.core.mvc.TemplateView(V)}else{throw new Error("Unknown view type "+V.type+" specified.")}return a}}());return sap.ui.core.mvc.View},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.XMLView')){jQuery.sap.declare('sap.ui.core.mvc.XMLView');sap.ui.define("sap/ui/core/mvc/XMLView",['sap/ui/core/library','./View','jquery.sap.xml','sap/ui/base/DataType','sap/ui/model/resource/ResourceModel','sap/ui/core/XMLTemplateProcessor'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.XMLView",{metadata:{library:"sap.ui.core"}});sap.ui.xmlview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.XML)};sap.ui.core.mvc.XMLView._sType=sap.ui.core.mvc.ViewType.XML;sap.ui.core.mvc.XMLView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if((s.viewName||s.viewContent)&&s.xmlNode){throw new Error("View name/content AND an XML node are given. There is no point in doing this, so please decide.")}else if(!(s.viewName||s.viewContent)&&!s.xmlNode){throw new Error("Neither view name/content nor an XML node is given. One of them is required.")}if(s.viewName){this._xContent=sap.ui.core.XMLTemplateProcessor.loadTemplate(s.viewName)}else if(s.viewContent){this.mProperties["viewContent"]=s.viewContent;this._xContent=jQuery.sap.parseXML(s.viewContent);if(this._xContent.parseError.errorCode!=0){var p=this._xContent.parseError;throw new Error("The following problem occurred: XML parse Error for "+p.url+" code: "+p.errorCode+" reason: "+p.reason+" src: "+p.srcText+" line: "+p.line+" linepos: "+p.linepos+" filepos: "+p.filepos)}else{this._xContent=this._xContent.documentElement}}else if(s.xmlNode){this._xContent=s.xmlNode}else{}this._oContainingView=s.containingView||this;if(!this.isSubView()){sap.ui.core.XMLTemplateProcessor.parseViewAttributes(this._xContent,this,s)}else{delete s.controller}if((this._resourceBundleName||this._resourceBundleUrl)&&(!s.models||!s.models[this._resourceBundleAlias])){var m=new sap.ui.model.resource.ResourceModel({bundleName:this._resourceBundleName,bundleUrl:this._resourceBundleUrl,bundleLocale:this._resourceBundleLocale});this.setModel(m,this._resourceBundleAlias)}var t=this;this.oAfterRenderingNotifier=new sap.ui.core.mvc.XMLAfterRenderingNotifier();this.oAfterRenderingNotifier.addDelegate({onAfterRendering:function(){t.onAfterRenderingBeforeChildren()}})};sap.ui.core.mvc.XMLView.prototype.exit=function(){this.oAfterRenderingNotifier.destroy();sap.ui.core.mvc.View.prototype.exit.apply(this,arguments)};sap.ui.core.mvc.XMLView.prototype.onControllerConnected=function(c){var t=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){t._aParsedContent=sap.ui.core.XMLTemplateProcessor.parseTemplate(t._xContent,t)})};sap.ui.core.mvc.XMLView.prototype.getControllerName=function(){return this._controllerName};sap.ui.core.mvc.XMLView.prototype.isSubView=function(){return this._oContainingView!=this};sap.ui.core.mvc.XMLView.prototype.onAfterRenderingBeforeChildren=function(){if(this._$oldContent.length!==0){var c=this.getAggregation("content");if(c){for(var i=0;i<c.length;i++){if(c[i].getDomRef()===null){continue}var $=c[i].$();jQuery.sap.byId("sap-ui-dummy-"+c[i].getId(),this._$oldContent).replaceWith($)}}jQuery.sap.byId("sap-ui-dummy-"+this.getId()).replaceWith(this._$oldContent)}this._$oldContent=undefined};sap.ui.core.mvc.XMLView.prototype._onChildRerenderedEmpty=function(c,e){jQuery(e).replaceWith('<div id="sap-ui-dummy-'+c.getId()+'" class="sapUiHidden"/>');return true};sap.ui.core.Control.extend("sap.ui.core.mvc.XMLAfterRenderingNotifier",{renderer:function(r,c){r.write("")}});return sap.ui.core.mvc.XMLView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.search.OpenSearchProvider')){jQuery.sap.declare('sap.ui.core.search.OpenSearchProvider');sap.ui.define("sap/ui/core/search/OpenSearchProvider",['sap/ui/core/library','./SearchProvider','jquery.sap.encoder'],function(){"use strict";sap.ui.core.search.SearchProvider.extend("sap.ui.core.search.OpenSearchProvider",{metadata:{library:"sap.ui.core",properties:{"suggestUrl":{type:"sap.ui.core.URI",group:"Misc",defaultValue:null},"suggestType":{type:"string",group:"Misc",defaultValue:'json'}}}});sap.ui.core.search.OpenSearchProvider.prototype.suggest=function(v,c){var u=this.getSuggestUrl();if(!u){return}u=u.replace("{searchTerms}",jQuery.sap.encodeURL(v));var t=this.getSuggestType();var s;if(t&&t.toLowerCase()==="xml"){t="xml";s=function(d){var x=jQuery(d);var i=x.find("Text");var S=[];i.each(function(){S.push(jQuery(this).text())});c(v,S)}}else{t="json";s=function(d){c(v,d[1])}}jQuery.ajax({url:u,dataType:t,success:s,error:function(X,a,e){jQuery.sap.log.fatal("The following problem occurred: "+a,X.responseText+","+X.status)}})};return sap.ui.core.search.OpenSearchProvider},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMElement')){jQuery.sap.declare('sap.ui.core.tmpl.DOMElement');sap.ui.define("sap/ui/core/tmpl/DOMElement",['sap/ui/core/library','sap/ui/core/Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.tmpl.DOMElement",{metadata:{publicMethods:["attr","removeAttr"],library:"sap.ui.core",properties:{"text":{type:"string",group:"Appearance",defaultValue:null},"tag":{type:"string",group:"Behavior",defaultValue:'span'}},aggregations:{"attributes":{type:"sap.ui.core.tmpl.DOMAttribute",multiple:true,singularName:"attribute"},"elements":{type:"sap.ui.core.tmpl.DOMElement",multiple:true,singularName:"element"}}}});sap.ui.core.tmpl.DOMElement.prototype.applySettings=function(s){sap.ui.core.Control.prototype.applySettings.apply(this,arguments);var t=this,m=this.getMetadata(),j=m.getJSONKeys();jQuery.each(s,function(k,v){if(k!=="id"&&k!=="text"&&!j[k]&&typeof v==="string"){t.attr(k,v)}})};sap.ui.core.tmpl.DOMElement.prototype.exit=sap.ui.core.tmpl.DOMElement.prototype.onBeforeRendering=function(){var t=this.getTag().toLowerCase();if(t==="input"||t==="textarea"||t==="select"){this.$().off("change")}};sap.ui.core.tmpl.DOMElement.prototype.onAfterRendering=function(){var t=this.getTag().toLowerCase();if(t==="input"||t==="textarea"||t==="select"){this.$().on("change",jQuery.proxy(this.oninputchange,this))}};sap.ui.core.tmpl.DOMElement.prototype.oninputchange=function(e){var t=this.getTag().toLowerCase();if(t==="input"){var v=this.$().val();jQuery.each(this.getAttributes(),function(i,a){if(a.getName().toLowerCase()==="value"){a.setValue(v)}})}else if(t==="textarea"){var T=this.$().val();this.setText(T)}else if(t==="select"){var T="";this.$().find("select option:selected").each(function(){T+=jQuery(this).text()+" "});this.setText(T)}};sap.ui.core.tmpl.DOMElement.prototype.attr=function(k,v){var a=this.getAttributes(),A;jQuery.each(a,function(i,V){var n=V.getName();if(n.toLowerCase()===k){A=V;return false}});if(v===undefined){return A&&A.getValue()}else{if(A){if(v===null){this.removeAttribute(A)}else{A.setValue(v)}}else{if(v!==null){this.addAttribute(new sap.ui.core.tmpl.DOMAttribute({name:k,value:v}))}}return this}};sap.ui.core.tmpl.DOMElement.prototype.removeAttr=function(k){this.attr(k,null);return this};sap.ui.core.tmpl.DOMElement.prototype.setText=function(t){this.setProperty("text",t,true);var $=this.$();if($.length>0){var T=this.getTag().toLowerCase();if(T==="textarea"){$.val(this.getProperty("text"))}else{$.text(this.getProperty("text"))}}};return sap.ui.core.tmpl.DOMElement},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.TemplateControl')){jQuery.sap.declare('sap.ui.core.tmpl.TemplateControl');sap.ui.define("sap/ui/core/tmpl/TemplateControl",['sap/ui/core/library','sap/ui/core/Control','./DOMElement','./DOMAttribute','sap/ui/core/DeclarativeSupport'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.tmpl.TemplateControl",{metadata:{library:"sap.ui.core",properties:{"context":{type:"object",group:"Data",defaultValue:null}},aggregations:{"controls":{type:"sap.ui.core.Control",multiple:true,singularName:"control",visibility:"hidden"}},associations:{"template":{type:"sap.ui.core.tmpl.Template",multiple:false}},events:{"afterRendering":{},"beforeRendering":{}}}});sap.ui.core.tmpl.TemplateControl.M_EVENTS={'afterRendering':'afterRendering','beforeRendering':'beforeRendering'};sap.ui.core.tmpl.TemplateControl.prototype.init=function(){this._aBindingInfos=[]};sap.ui.core.tmpl.TemplateControl.prototype.isInline=function(){var i=false;if(this.getParent()instanceof sap.ui.core.UIArea&&jQuery(this.getParent().getRootNode()).attr("id")===this.getId()){i=true}return i};sap.ui.core.tmpl.TemplateControl.prototype.placeAt=function(r,p){var i=this.isInline();var $=this.$(),u=this.getUIArea();sap.ui.core.Control.prototype.placeAt.apply(this,arguments);if(i&&$.length===1){$.remove();u.destroyContent()}};sap.ui.core.tmpl.TemplateControl.prototype.getTemplateRenderer=function(){return this.fnRenderer};sap.ui.core.tmpl.TemplateControl.prototype.setTemplateRenderer=function(r){this.fnRenderer=r;return this};sap.ui.core.tmpl.TemplateControl.prototype._cleanup=function(){this.destroyAggregation("controls");if(this._aBindingInfos){var t=this;jQuery.each(this._aBindingInfos,function(i,b){t.getModel(b.model).removeBinding(b.binding)});this._aBindingInfos=[]}};sap.ui.core.tmpl.TemplateControl.prototype._compile=function(){var t=sap.ui.getCore().byId(this.getTemplate()),d=t&&t.getDeclarativeSupport();if(d){var a=this;setTimeout(function(){sap.ui.core.DeclarativeSupport.compile(a.getDomRef())})}};sap.ui.core.tmpl.TemplateControl.prototype.exit=function(){this._cleanup()};sap.ui.core.tmpl.TemplateControl.prototype.onBeforeRendering=function(){this.fireBeforeRendering();this._cleanup()};sap.ui.core.tmpl.TemplateControl.prototype.onAfterRendering=function(){this.fireAfterRendering()};sap.ui.core.tmpl.TemplateControl.prototype.updateBindings=function(u,m){sap.ui.base.ManagedObject.prototype.updateBindings.apply(this,arguments);if(this.getDomRef()){this.invalidate()}};sap.ui.core.tmpl.TemplateControl.prototype.bind=function(p,t){var P=sap.ui.core.tmpl.Template.parsePath(p),m=this.getModel(P.model),p=P.path,M=t?"bind"+jQuery.sap.charToUpperCase(t):"bindProperty",b=m&&m[M](p),a=this;if(b){b.attachChange(function(){jQuery.sap.log.debug("TemplateControl#"+a.getId()+": "+t+" binding changed for path \""+p+"\"");a.invalidate()})}this._aBindingInfos.push({binding:b,path:P.path,model:P.model});return b};sap.ui.core.tmpl.TemplateControl.prototype.bindProp=function(p){var b=this.bind(p,"property");return b&&b.getExternalValue()};sap.ui.core.tmpl.TemplateControl.prototype.bindList=function(p){var b=this.bind(p,"list"),m=b&&b.getModel(),p=b&&b.getPath();return b&&m.getProperty(p)};sap.ui.core.tmpl.TemplateControl.prototype.createDOMElement=function(s,p,d){var e=new sap.ui.core.tmpl.DOMElement(s);if(p){e.bindElement(p)}if(!d){this.addAggregation("controls",e)}return e};sap.ui.core.tmpl.TemplateControl.prototype.createControl=function(s,p,d,v){var h={};jQuery.each(s,function(k,V){h["data-"+jQuery.sap.hyphen(k)]=V});var $=jQuery("<div/>",h);var c=sap.ui.core.DeclarativeSupport._createControl($.get(0),v);if(p){c.bindElement(p)}if(!d){this.addAggregation("controls",c)}return c};return sap.ui.core.tmpl.TemplateControl},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.Export')){jQuery.sap.declare('sap.ui.core.util.Export');sap.ui.define("sap/ui/core/util/Export",['jquery.sap.global','sap/ui/core/Control','./ExportColumn','./ExportRow','./ExportType','./File'],function(q,C,E,a,b,F){'use strict';function w(f,o){if(f){return function(){return f.apply(o,arguments)}}else{return f}}function p(m){q.sap.log.warning("Usage of deprecated jQuery Promise method: '"+m+"'. "+"Please use the standard Promise methods 'then' / 'catch' instead!","","sap.ui.core.util.Export")}function c(P,o){var O=new Promise(P);o=o||O;var r=false,R=false;O.then(function(v){r=true;return v},function(e){R=true;throw e});var m={then:O.then,"catch":O["catch"]};function f(e){e.then=function(s,g){var A=[w(s,o),w(g,o)];return f(m.then.apply(e,A),o)};e["catch"]=function(g){var A=[w(g,o)];return f(m["catch"].apply(e,A),o)};q.each([{jq:"done",es6:"then"},{jq:"fail",es6:"catch"},{jq:"always",es6:"then"}],function(i,g){e[g.jq]=function(){p(g.jq);var h=null;q.each(Array.prototype.concat.apply([],arguments),function(i,j){var W=w(j,o);var k=function(v){W.apply(this,arguments);return v};var A=[k];if(g.jq==="always"){A.push(k)}if(!h){h=m[g.es6].apply(e,A)}else{h=h[g.es6].apply(h,A)}});return f(h,o)}});e.pipe=function(D,g){p("pipe");return e.then(D,g)};e.state=function(){p("state");if(r){return"resolved"}else if(R){return"rejected"}else{return"pending"}};return e}return f(O)};var d=C.extend('sap.ui.core.util.Export',{metadata:{publicMethods:["generate","saveFile"],library:"sap.ui.core",aggregations:{exportType:{type:'sap.ui.core.util.ExportType',multiple:false},columns:{type:'sap.ui.core.util.ExportColumn',multiple:true,bindable:'bindable'},rows:{type:'sap.ui.core.util.ExportRow',multiple:true,bindable:'bindable'},_template:{type:'sap.ui.core.util.ExportRow',multiple:false,visibility:'hidden'}}}});d.getMetadata().getAllAggregations()["rows"]._doesNotRequireFactory=true;d.prototype.init=function(){this._oPromise=null;this._fnResolvePromise=null;this._oRowBindingInfo=null};d.prototype.exit=function(){delete this._oPromise;delete this._fnResolvePromise;delete this._oRowBindingInfo};d.prototype._createRowTemplate=function(){var t=new a(this.getId()+"-row"),e=this.getColumns();for(var i=0,l=e.length;i<l;i++){var o=e[i].getTemplate();if(o){t.addCell(o.clone("col"+i))}}return t};d.prototype.bindAggregation=function(n,B){if(n==='rows'){this._oRowBindingInfo=B;return this}return C.prototype.bindAggregation.apply(this,arguments)};d.prototype.updateRows=function(r){if(r==='change'&&this._fnResolvePromise){var s=this.getExportType()._generate(this);this.destroyAggregation('_template');this.unbindAggregation('rows');this._fnResolvePromise(s);this._oPromise=null;this._fnResolvePromise=null}};d.prototype.generate=function(){var e=this;if(!this._oPromise){this._oPromise=c(function(r,f){e._fnResolvePromise=r;if(!e.hasModel()){f("Generate is not possible beause no model was set.")}else{var t=e._createRowTemplate();e.setAggregation('_template',t,true);C.prototype.bindAggregation.call(e,'rows',e._oRowBindingInfo);if(e.getBinding("rows")){e.getBinding("rows").getContexts(0,e.getBinding("rows").getLength())}}},this)}return this._oPromise};d.prototype.saveFile=function(f){return this.generate().then(function(s){var e=this.getExportType();F.save(s,f||"data",e.getFileExtension(),e.getMimeType(),e.getCharset())})};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.core.BusyIndicator')){jQuery.sap.declare('sap.ui.core.BusyIndicator');sap.ui.define("sap/ui/core/BusyIndicator",['jquery.sap.global','./Popup'],function(q,P){"use strict";var B=q.extend(q.sap.newObject(sap.ui.base.EventProvider.prototype),{oPopup:null,oDomRef:null,bOpenRequested:false,iDEFAULT_DELAY_MS:1000,sDOM_ID:"sapUiBusyIndicator"});sap.ui.base.EventProvider.apply(B);B.M_EVENTS={Open:"Open",Close:"Close"};B._init=function(){var r=document.createElement("div");r.id=this.sDOM_ID;this._oResBundle=sap.ui.getCore().getLibraryResourceBundle("sap.ui.core");var t=this._oResBundle.getText("BUSY_TEXT");delete this._oResBundle;var i=sap.ui.getCore().getStaticAreaRef();i.appendChild(r);q(r).addClass("sapUiBusy").attr("tabindex",0).attr("role","progressbar").attr("alt","").attr("title",t);this.oDomRef=r;this.oPopup=new P(r);this.oPopup.setModal(true,"sapUiBlyBusy");this.oPopup.setShadow(false);if(sap.ui.Device.browser.msie&&sap.ui.Device.browser.version<=9){this._iBusyPageWidth=q(document.body).width();this._iBusyLeft=0;this._iBusyDelta=60;this._iBusyTimeStep=50;this._iBusyWidth=500;this.attachOpen(this._IEAnimation,this)}};B._IEAnimation=function(e){if(!this._$BusyIndicator&&e){this._$BusyIndicator=e.getParameter("$Busy")}q.sap.clearDelayedCall(this._iAnimationTimeout);this._iBusyLeft+=this._iBusyDelta;if(this._iBusyLeft>this._iBusyPageWidth){this._iBusyLeft=-this._iBusyWidth}if(!this._$BusyIndicator){q.sap.clearDelayedCall(this._iAnimationTimeout)}else{this._$BusyIndicator.css("background-position",this._iBusyLeft+"px 0px");this._iAnimationTimeout=q.sap.delayedCall(this._iBusyTimeStep,this,this._IEAnimation)}};B.show=function(d){q.sap.log.debug("sap.ui.core.BusyIndicator.show (delay: "+d+") at "+new Date().getTime());if((d===undefined)||((d!=0)&&(parseInt(d,10)==0))||(parseInt(d,10)<0)){d=this.iDEFAULT_DELAY_MS}this.bOpenRequested=true;if(d===0){this._showNowIfRequested()}else{q.sap.delayedCall(d,this,"_showNowIfRequested")}};B._showNowIfRequested=function(){q.sap.log.debug("sap.ui.core.BusyIndicator._showNowIfRequested (bOpenRequested: "+this.bOpenRequested+") at "+new Date().getTime());if(!this.bOpenRequested){return}if(!document.body||!sap.ui.getCore().isInitialized()){q.sap.delayedCall(100,this,"_showNowIfRequested");return}this.bOpenRequested=false;if(!this.oDomRef){this._init()}this.oPopup.open(0,P.Dock.CenterCenter,P.Dock.CenterCenter,document);this.fireOpen({$Busy:this.oPopup._$()});var d=q.sap.domById(B.sDOM_ID);q.sap.focus(d);q("body").attr("aria-busy",true)};B.hide=function(){q.sap.log.debug("sap.ui.core.BusyIndicator.hide at "+new Date().getTime());var t=B;t.bOpenRequested=false;if(t.oDomRef){q("body").removeAttr("aria-busy");this.fireClose({$Busy:this.oPopup._$()});t.oPopup.close(0)}delete this._$BusyIndicator};B.attachOpen=function(f,l){this.attachEvent(B.M_EVENTS.Open,f,l);return this};B.detachOpen=function(f,l){this.detachEvent(B.M_EVENTS.Open,f,l);return this};B.attachClose=function(f,l){this.attachEvent(B.M_EVENTS.Close,f,l);return this};B.detachClose=function(f,l){this.detachEvent(B.M_EVENTS.Close,f,l);return this};B.fireOpen=function(p){this.fireEvent(B.M_EVENTS.Open,p)};B.fireClose=function(p){this.fireEvent(B.M_EVENTS.Close,p)};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentContainer')){jQuery.sap.declare('sap.ui.core.ComponentContainer');sap.ui.define("sap/ui/core/ComponentContainer",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.ComponentContainer",{metadata:{library:"sap.ui.core",properties:{"name":{type:"string",group:"",defaultValue:null},"url":{type:"sap.ui.core.URI",group:"",defaultValue:null},"settings":{type:"object",group:"",defaultValue:null},"propagateModel":{type:"boolean",group:"",defaultValue:false},"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null}},associations:{"component":{type:"sap.ui.core.UIComponent",multiple:false}}}});sap.ui.core.ComponentContainer.prototype.getComponentInstance=function(){var c=this.getComponent();return sap.ui.getCore().getComponent(c)};sap.ui.core.ComponentContainer.prototype.setComponent=function(c,s){var o=this.getComponentInstance();if(o){o.setContainer(undefined)}this.setAssociation("component",c,s);c=this.getComponentInstance();if(c){c.setContainer(this);this.propagateProperties()}};sap.ui.core.ComponentContainer.prototype.onBeforeRendering=function(){var c=this.getComponentInstance();if(!c){var n=this.getName();if(n){c=sap.ui.component({name:n,url:this.getUrl(),settings:this.getSettings()});this.setComponent(c,true)}}if(c&&c.onBeforeRendering){c.onBeforeRendering()}};sap.ui.core.ComponentContainer.prototype.onAfterRendering=function(){var c=this.getComponentInstance();if(c&&c.onAfterRendering){c.onAfterRendering()}};sap.ui.core.ComponentContainer.prototype.exit=function(){var c=this.getComponentInstance();if(c){c.destroy()}};sap.ui.core.ComponentContainer.prototype.propagateProperties=function(n){var c=this.getComponentInstance();if(c&&this.getPropagateModel()){this._propagateProperties(n,c);sap.ui.core.Control.prototype.propagateProperties.apply(this,arguments)}};return sap.ui.core.ComponentContainer},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CompositeSupport')){jQuery.sap.declare('sap.ui.core.CompositeSupport');sap.ui.define("sap/ui/core/CompositeSupport",['jquery.sap.global','./Control','sap/ui/model/control/ControlModel'],function(q,C,a){"use strict";var b={};b.mixInto=function(c,f,m){if(arguments.length==2&&typeof f==="object"){m=f;f="ComponentFactory"}function _(){var M=c.getMetadata();do{M=M.getParent();if(M&&M.getComponentFactoryClass){return M.getComponentFactoryClass()}}while(M);return sap.ui.core.ComponentFactory}c[f]=(_()).subclass(m);c.getMetadata().getComponentFactoryClass=q.sap.getter(c[f]);if(!c.prototype._initCompositeSupport){c.prototype._initCompositeSupport=function(s){var F=new(this.getMetadata().getComponentFactoryClass())(this);if(s.componentFactory){F.customize(s.componentFactory);delete s.componentFactory}this.getComponentFactory=q.sap.getter(F)}}if(!c.prototype._exitCompositeSupport){c.prototype._exitCompositeSupport=function(){this.getComponentFactory().destroy();delete this.getComponentFactory}}};sap.ui.base.EventProvider.extend("sap.ui.core.ComponentFactory",{constructor:function(c){sap.ui.base.EventProvider.apply(this);this.oComposite=c;return this}});sap.ui.core.ComponentFactory.prototype.attachChange=function(f,o){this.getModel();this.attachEvent("change",f,o);return this};sap.ui.core.ComponentFactory.prototype.detachChange=function(f,o){this.getModel();this.detachEvent("change",f,o);return this};sap.ui.core.ComponentFactory.prototype.getModel=function(){if(!this.oModel){var t=this;this.oModel=new a(this.oComposite);this.oModel._onchange=function(e){t.fireEvent("change",e.getParameters&&e.getParameters())}}return this.oModel};sap.ui.core.ComponentFactory.prototype.addFacadeComponent=function(e){this.getModel().add(e)};sap.ui.core.ComponentFactory.prototype.removeFacadeComponent=function(e){this.getModel().remove(e)};(function(){function _(o,m,d){q.each(m,function(n,f){if(n.indexOf("default")!=0){o[n]=f}if(d&&n.indexOf("create")==0){o["defaultC"+n.substring(1)]=o[n]}})}function c(B){return function(m){var f=function(){B.apply(this,arguments)};f.prototype=q.sap.newObject(B.prototype);_(f.prototype,m,true);f.customize=function(m){_(f.prototype,m);return this};f.subclass=c(f);return f}}sap.ui.core.ComponentFactory.subclass=c(sap.ui.core.ComponentFactory);sap.ui.core.ComponentFactory.prototype.customize=function(m){_(this,m);if(this.oComposite&&this.oComposite._onComponentFactoryChanged){this.oComposite._onComponentFactoryChanged()}return this}}());return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIComponent')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.UIComponent');sap.ui.define("sap/ui/core/UIComponent",['jquery.sap.global','./Component','./UIComponentMetadata','./mvc/View'],function(q,C,U,V){"use strict";var a=C.extend("sap.ui.core.UIComponent",{constructor:function(i,s){try{C.apply(this,arguments)}catch(e){if(this._oRouter){this._oRouter.destroy()}throw e}},metadata:{"abstract":true,rootView:null,publicMethods:["render"],aggregations:{"rootControl":{type:"sap.ui.core.Control",multiple:false,visibility:"hidden"}},routing:{}}},U);a.prototype.init=function(){var t=this;var p={};if(this.getAutoPrefixId()){p.id=function(i){return t.createId(i)}}var m=this.getMetadata();var r=q.extend({},m.getRoutingConfig());var R=m.getRoutes();if(R){q.sap.require("sap.ui.core.routing.Router");var f=r.routerClass||sap.ui.core.routing.Router;if(typeof f==="string"){f=q.sap.getObject(f)}this._oRouter=new f(R,r,this)}sap.ui.base.ManagedObject.runWithOwner(function(){sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.setAggregation("rootControl",t.createContent())},p)},this);var o=this.getAggregation("rootControl");if(o instanceof V){if(r.targetParent===undefined){r.targetParent=o.getId()}}};a.prototype.destroy=function(){if(this._oRouter){this._oRouter.destroy();delete this._oRouter}C.prototype.destroy.apply(this,arguments)};a.getRouterFor=function(c){var v=c;if(v instanceof sap.ui.core.mvc.Controller){v=v.getView()}if(v instanceof V){var o=C.getOwnerIdFor(v),b=sap.ui.component(o);if(b){return b.getRouter()}else{return undefined}}};a.prototype.getRouter=function(){return this._oRouter};a.prototype.getAutoPrefixId=function(){return false};a.prototype.byId=function(i){return sap.ui.getCore().byId(this.createId(i))};a.prototype.createId=function(i){if(!this.isPrefixedId(i)){i=this.getId()+"---"+i}return i};a.prototype.isPrefixedId=function(i){return(i&&i.indexOf(this.getId()+"---")===0)};a.prototype.createContent=function(){var r=this.getMetadata().getRootView();if(r){return sap.ui.view(r)}return null};a.prototype.render=function(r){var c=this.getAggregation("rootControl");if(c&&r){r.renderControl(c)}};a.prototype.getUIArea=function(){return(this.oContainer?this.oContainer.getUIArea():null)};a.prototype.getEventingParent=function(){return this.getUIArea()};a.prototype.setContainer=function(c){this.oContainer=c;return this};a.prototype.onBeforeRendering=function(){};a.prototype.onAfterRendering=function(){};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.HTMLView')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.mvc.HTMLView');sap.ui.define("sap/ui/core/mvc/HTMLView",['sap/ui/core/library','./View','sap/ui/core/DeclarativeSupport','sap/ui/core/RenderManager'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.HTMLView",{metadata:{library:"sap.ui.core"}});sap.ui.htmlview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.HTML)};sap.ui.core.mvc.HTMLView._sType=sap.ui.core.mvc.ViewType.HTML;sap.ui.core.mvc.HTMLView._mTemplates={};sap.ui.core.mvc.HTMLView._mAllowedSettings={"viewName":true,"controller":true,"viewContent":true,"controllerName":true,"resourceBundleName":true,"resourceBundleUrl":true,"resourceBundleLocale":true,"resourceBundleAlias":true};sap.ui.core.mvc.HTMLView._getTemplate=function(t){var u=this._getViewUrl(t);var h=this._mTemplates[u];if(!h){h=this._loadTemplate(t);this._mTemplates[u]=h}return h};sap.ui.core.mvc.HTMLView.prototype.getControllerName=function(){return this._controllerName};sap.ui.core.mvc.HTMLView._getViewUrl=function(t){return jQuery.sap.getModulePath(t,".view.html")};sap.ui.core.mvc.HTMLView._loadTemplate=function(t){var r=jQuery.sap.getResourceName(t,".view.html");return jQuery.sap.loadResource(r)};sap.ui.core.mvc.HTMLView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if(!s.viewName&&!s.viewContent){throw new Error("Neither view name nor view content is given. One of them is required.")}var h=s.viewContent||sap.ui.core.mvc.HTMLView._getTemplate(s.viewName);this._oTemplate=document.createElement("div");var h=sap.ui.core.RenderManager.prepareHTML5(h);if(typeof h==="string"){this._oTemplate.innerHTML=h}else{var n=h;var f=document.createDocumentFragment();for(var i=0;i<n.length;i++){f.appendChild(n.item(i))}this._oTemplate.appendChild(f)}var m=this._oTemplate.getElementsByTagName("template")[0];var p=this.getMetadata().getAllProperties();if(m){var a=this;var D=sap.ui.core.DeclarativeSupport;jQuery.each(m.attributes,function(I,A){var N=D.convertAttributeToSettingName(A.name,a.getId());var v=A.value;var P=p[N];if(!s[N]){if(P){s[N]=D.convertValueToType(D.getPropertyDataType(P),v)}else if(sap.ui.core.mvc.HTMLView._mAllowedSettings[N]){s[N]=v}}});this._oTemplate=m}if(this._oTemplate.content){var f=this._oTemplate.content;this._oTemplate=document.createElement("div");this._oTemplate.appendChild(f)}if(s.controllerName){this._controllerName=s.controllerName}if((s.resourceBundleName||s.resourceBundleUrl)&&(!s.models||!s.models[s.resourceBundleAlias])){var b=new sap.ui.model.resource.ResourceModel({bundleName:s.resourceBundleName,bundleUrl:s.resourceBundleUrl,bundleLocale:s.resourceBundleLocale});this.setModel(b,s.resourceBundleAlias)}};sap.ui.core.mvc.HTMLView.prototype.onControllerConnected=function(c){var s=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){sap.ui.core.DeclarativeSupport.compile(s._oTemplate,s)})};sap.ui.core.mvc.HTMLView.prototype.exit=function(){this._oTemplate=null;sap.ui.core.mvc.View.prototype.exit.call(this);if(this._connectedControls){for(var i=0;i<this._connectedControls.length;i++){this._connectedControls[i].destroy()}this._connectedControls=null}};sap.ui.core.mvc.HTMLView.prototype.connectControl=function(c){this._connectedControls=this._connectedControls||[];this._connectedControls.push(c)};return sap.ui.core.mvc.HTMLView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSONView')){jQuery.sap.declare('sap.ui.core.mvc.JSONView');sap.ui.define("sap/ui/core/mvc/JSONView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.JSONView",{metadata:{library:"sap.ui.core"}});(function(){sap.ui.jsonview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.JSON)};sap.ui.core.mvc.JSONView._sType=sap.ui.core.mvc.ViewType.JSON;sap.ui.core.mvc.JSONView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if(!s.viewName&&!s.viewContent){throw new Error("Neither view name nor view content is given. One of them is required.")}if(s.viewName){this._loadTemplate(s.viewName)}else if(s.viewContent){this.mProperties["viewContent"]=s.viewContent;if(typeof s.viewContent==="string"){this._oJSONView=jQuery.parseJSON(s.viewContent);if(!this._oJSONView){throw new Error("error when parsing viewContent: "+s.viewContent)}}else if(typeof s.viewContent==="object"){this._oJSONView=s.viewContent}else{throw new Error("viewContent must be a JSON string or object, but is a "+(typeof s.viewContent))}}else{}if((this._oJSONView.resourceBundleName||this._oJSONView.resourceBundleUrl)&&(!s.models||!s.models[this._oJSONView.resourceBundleAlias])){var m=new sap.ui.model.resource.ResourceModel({bundleName:this._oJSONView.resourceBundleName,bundleUrl:this._oJSONView.resourceBundleUrl});this.setModel(m,this._oJSONView.resourceBundleAlias)}};sap.ui.core.mvc.JSONView.prototype.onControllerConnected=function(c){var t=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.applySettings({content:t._oJSONView.content})},{id:function(i){return t.createId(i)},settings:function(s){var m=this.getMetadata(),v=m.getJSONKeys(),k,V,K;for(k in s){if(K=v[k]){V=s[k];switch(K._iKind){case 3:s[k]=t.createId(V);break;case 5:if(typeof s[k]==="string"){s[k]=[c[s[k]],c]}break}}}}})};sap.ui.core.mvc.JSONView.prototype._loadTemplate=function(t){var r=jQuery.sap.getResourceName(t,".view.json");this._oJSONView=jQuery.sap.loadResource(r)};sap.ui.core.mvc.JSONView.prototype.getControllerName=function(){return this._oJSONView.controllerName}}());return sap.ui.core.mvc.JSONView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSView')){jQuery.sap.declare('sap.ui.core.mvc.JSView');sap.ui.define("sap/ui/core/mvc/JSView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.JSView",{metadata:{library:"sap.ui.core"}});(function(){var r={};sap.ui.jsview=function(i,v){var s={};if(v&&typeof(v)=="string"){s.viewName=v;s.controller=arguments[2];var V=new sap.ui.core.mvc.JSView(i,s);return V}else if(v&&typeof(v)=="object"){r[i]=v;jQuery.sap.declare({modName:i,type:"view"},false)}else if(arguments.length==1&&typeof(arguments[0])=="string"){s.viewName=i;s.controller=arguments[1];var V=s.id?new sap.ui.core.mvc.JSView(s.id,s):new sap.ui.core.mvc.JSView(s);return V}else{throw new Error("Wrong arguments! Either call sap.ui.jsview([sId,] sViewName) to instantiate a View or sap.ui.jsview(sViewName, oViewImpl) to define a View type.")}};sap.ui.core.mvc.JSView.prototype.initViewSettings=function(s){if(!r[s.viewName]){jQuery.sap.require({modName:s.viewName,type:"view"})}jQuery.extend(this,r[s.viewName])};sap.ui.core.mvc.JSView.prototype.onControllerConnected=function(c){var t=this;var p={};if(this.getAutoPrefixId()){p.id=function(i){return t.createId(i)}}sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.applySettings({content:t.createContent(c)})},p)};sap.ui.core.mvc.JSView.prototype.getAutoPrefixId=function(){return false}}());return sap.ui.core.mvc.JSView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.TemplateView')){jQuery.sap.declare('sap.ui.core.mvc.TemplateView');sap.ui.define("sap/ui/core/mvc/TemplateView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.TemplateView",{metadata:{library:"sap.ui.core"}});(function(){sap.ui.templateview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.Template)};sap.ui.core.mvc.TemplateView._sType=sap.ui.core.mvc.ViewType.Template;sap.ui.core.mvc.TemplateView.prototype.getControllerName=function(){return this._sControllerName};sap.ui.core.mvc.TemplateView._getViewUrl=function(t){return jQuery.sap.getModulePath(t,".view.tmpl")};sap.ui.core.mvc.TemplateView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(!s.viewName){throw new Error("No view name is given.")}this._oTemplate=sap.ui.template({id:this.getId(),src:sap.ui.core.mvc.TemplateView._getViewUrl(s.viewName)});this._sControllerName=this._oTemplate._sControllerName;this._oTemplate=this._oTemplate.createControl(undefined,undefined,this);this.addContent(this._oTemplate)}}());return sap.ui.core.mvc.TemplateView},true)};sap.ui.getCore().boot&&sap.ui.getCore().boot();
} catch(oError) {
if (oError.name != "Restart") { throw oError; }
}
",
                "body": "window["sap-ui-optimized"] = true;
try {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
if(window.jQuery&&window.jQuery.sap&&window.jQuery.sap.declare){window.jQuery.sap.declare("sap.ui.Device",false)}if(typeof window.sap!=="object"&&typeof window.sap!=="function"){window.sap={}}if(typeof window.sap.ui!=="object"){window.sap.ui={}}(function(){if(typeof window.sap.ui.Device==="object"||typeof window.sap.ui.Device==="function"){var c="1.24.2";window.sap.ui.Device._checkAPIVersion(c);return}var d={};function p(i,w){return("000"+String(i)).slice(-w)}var F=0,E=1,W=2,I=3,D=4,T=5;var g=function(){this.defaultComponent='DEVICE';this.sWindowName=(window.top==window)?"":"["+window.location.pathname.split('/').slice(-1)[0]+"] ";this.log=function(i,s,a){a=a||this.defaultComponent||'';var b=new Date(),e={time:p(b.getHours(),2)+":"+p(b.getMinutes(),2)+":"+p(b.getSeconds(),2),date:p(b.getFullYear(),4)+"-"+p(b.getMonth()+1,2)+"-"+p(b.getDate(),2),timestamp:b.getTime(),level:i,message:s||"",component:a||""};if(window.console){var f=e.date+" "+e.time+" "+this.sWindowName+e.message+" - "+e.component;switch(i){case F:case E:console.error(f);break;case W:console.warn(f);break;case I:console.info?console.info(f):console.log(f);break;case D:console.debug?console.debug(f):console.log(f);break;case T:console.trace?console.trace(f):console.log(f);break}}return e}};var l=new g();l.log(I,"Device API logging initialized");d._checkAPIVersion=function(s){var v="1.24.2";if(v!=s){l.log(W,"Device API version differs: "+v+" <-> "+s)}};var h={};function j(e,f,a){if(!h[e]){h[e]=[]}h[e].push({oListener:a,fFunction:f})};function k(e,f,a){var b=h[e];if(!b){return this}for(var i=0,q=b.length;i<q;i++){if(b[i].fFunction===f&&b[i].oListener===a){b.splice(i,1);break}}if(b.length==0){delete h[e]}};function n(e,a){var b=h[e],f;if(b){b=b.slice();for(var i=0,q=b.length;i<q;i++){f=b[i];f.fFunction.call(f.oListener||window,a)}}};var O={"WINDOWS":"win","MACINTOSH":"mac","LINUX":"linux","IOS":"iOS","ANDROID":"Android","BLACKBERRY":"bb","WINDOWS_PHONE":"winphone"};function o(a){function b(){var s=navigator.platform;if(s.indexOf("Win")!=-1){var t=/windows NT 6.(\d)/i;var f=a.match(t);var v="";if(f){if(f[1]==1){v="7"}else if(f[1]>1){v="8"}}return{"name":O.WINDOWS,"versionStr":v}}else if(s.indexOf("Mac")!=-1){return{"name":O.MACINTOSH,"versionStr":""}}else if(s.indexOf("Linux")!=-1){return{"name":O.LINUX,"versionStr":""}}l.log(I,"OS detection returned no result");return null}a=a||navigator.userAgent;var e=/\(([a-zA-Z ]+);\s(?:[U]?[;]?)([\D]+)((?:[\d._]*))(?:.*[\)][^\d]*)([\d.]*)\s/;var f=a.match(e);if(f){var i=/iPhone|iPad|iPod/;var q=/PlayBook|BlackBerry/;if(f[0].match(i)){f[3]=f[3].replace(/_/g,".");return({"name":O.IOS,"versionStr":f[3]})}else if(f[2].match(/Android/)){f[2]=f[2].replace(/\s/g,"");return({"name":O.ANDROID,"versionStr":f[3]})}else if(f[0].match(q)){return({"name":O.BLACKBERRY,"versionStr":f[4]})}else{return b()}}else if(a.indexOf("(BB10;")>0){e=/\sVersion\/([\d.]+)\s/;f=a.match(e);if(f){return{"name":O.BLACKBERRY,"versionStr":f[1]}}else{return{"name":O.BLACKBERRY,"versionStr":'10'}}}else{e=/Windows Phone (?:OS )?([\d.]*)/;f=a.match(e);if(f){return({"name":O.WINDOWS_PHONE,"versionStr":f[1]})}else{return b()}}};function r(){d.os=o()||{};d.os.OS=O;d.os.version=d.os.versionStr?parseFloat(d.os.versionStr):-1;if(d.os.name){for(var b in O){if(O[b]===d.os.name){d.os[b.toLowerCase()]=true}}}}r();var B={"INTERNET_EXPLORER":"ie","FIREFOX":"ff","CHROME":"cr","SAFARI":"sf","ANDROID":"an"};var u=navigator.userAgent;
/*!
	 * Taken from jQuery JavaScript Library v1.7.1
	 * http://jquery.com/
	 *
	 * Copyright 2011, John Resig
	 * Dual licensed under the MIT or GPL Version 2 licenses.
	 * http://jquery.org/license
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 * Copyright 2011, The Dojo Foundation
	 * Released under the MIT, BSD, and GPL Licenses.
	 *
	 * Date: Mon Nov 21 21:11:03 2011 -0500
	 */
function y(a){var b=(a||u).toLowerCase();var e=/(webkit)[ \/]([\w.]+)/;var f=/(opera)(?:.*version)?[ \/]([\w.]+)/;var i=/(msie) ([\w.]+)/;var q=/(trident)\/[\w.]+;.*rv:([\w.]+)/;var s=/(mozilla)(?:.*? rv:([\w.]+))?/;var V=e.exec(b)||f.exec(b)||i.exec(b)||q.exec(b)||b.indexOf("compatible")<0&&s.exec(b)||[];var t={browser:V[1]||"",version:V[2]||"0"};t[t.browser]=true;return t};function z(a){var b=y(a);var e=a||u;if(b.mozilla){if(e.match(/Firefox\/(\d+\.\d+)/)){var v=parseFloat(RegExp.$1);return{name:B.FIREFOX,versionStr:""+v,version:v,mozilla:true,mobile:false}}else{return{mobile:i.test(e),mozilla:true}}}else if(b.webkit){var f=e.toLowerCase().match(/webkit[\/]([\d.]+)/);if(f){var w=f[1]}var i=/Mobile/;if(e.match(/Chrome\/(\d+\.\d+).\d+/)){var v=parseFloat(RegExp.$1);return{name:B.CHROME,versionStr:""+v,version:v,mobile:i.test(e),webkit:true,webkitVersion:w}}else if(e.match(/Android .+ Version\/(\d+\.\d+)/)){var v=parseFloat(RegExp.$1);return{name:B.ANDROID,versionStr:""+v,version:v,mobile:i.test(e),webkit:true,webkitVersion:w}}else{var q=/Version\/(\d+\.\d+).*Safari/;if(q.test(e)){var v=parseFloat(q.exec(e)[1]);return{name:B.SAFARI,versionStr:""+v,version:v,mobile:i.test(e),webkit:true}}else{return{mobile:i.test(e),webkit:true,webkitVersion:w}}}}else if(b.msie||b.trident){var v;if(document.documentMode&&!a){if(document.documentMode===7){v=8.0}else{v=parseFloat(document.documentMode)}}else{v=parseFloat(b.version)}return{name:B.INTERNET_EXPLORER,versionStr:""+v,version:v,msie:true,mobile:false}}return{name:"",versionStr:"",version:-1,mobile:false}};d._testUserAgent=z;function A(){d.browser=z();d.browser.BROWSER=B;if(d.browser.name){for(var b in B){if(B[b]===d.browser.name){d.browser[b.toLowerCase()]=true}}}}A();d.support={};d.support.touch=!!(('ontouchstart'in window)||window.DocumentTouch&&document instanceof window.DocumentTouch);d.support.matchmedia=!!window.matchMedia;var m=d.support.matchmedia?window.matchMedia("screen and (max-width:0px)"):null;d.support.matchmedialistener=!!(m&&m.addListener);if(d.browser.safari&&d.browser.version<6){d.support.matchmedialistener=false}d.support.orientation=!!("orientation"in window&&"onorientationchange"in window);d.support.retina=(window.retina||window.devicePixelRatio>=2);d.support.websocket=('WebSocket'in window);d.support.input={};d.support.input.placeholder=('placeholder'in document.createElement("input"));d.media={};var R={"SAP_3STEPS":"3Step","SAP_4STEPS":"4Step","SAP_6STEPS":"6Step","SAP_STANDARD":"Std"};d.media.RANGESETS=R;d.media._predefinedRangeSets={};d.media._predefinedRangeSets[R.SAP_3STEPS]={points:[520,960],unit:"px",name:R.SAP_3STEPS,names:["S","M","L"]};d.media._predefinedRangeSets[R.SAP_4STEPS]={points:[520,760,960],unit:"px",name:R.SAP_4STEPS,names:["S","M","L","XL"]};d.media._predefinedRangeSets[R.SAP_6STEPS]={points:[241,400,541,768,960],unit:"px",name:R.SAP_6STEPS,names:["XS","S","M","L","XL","XXL"]};d.media._predefinedRangeSets[R.SAP_STANDARD]={points:[600,1024],unit:"px",name:R.SAP_STANDARD,names:["Phone","Tablet","Desktop"]};var _=R.SAP_STANDARD;var C=d.support.matchmedialistener?0:100;var G={};var H=null;function J(f,t,a){a=a||"px";var q="screen";if(f>0){q=q+" and (min-width:"+f+a+")"}if(t>0){q=q+" and (max-width:"+t+a+")"}return q};function K(a){if(!d.support.matchmedialistener&&H==Q()[0]){return}if(G[a].timer){clearTimeout(G[a].timer);G[a].timer=null}G[a].timer=setTimeout(function(){var b=M(a,false);if(b){n("media_"+a,b)}},C)};function L(s,i){var q=G[s].queries[i];var a={from:q.from,unit:G[s].unit};if(q.to>=0){a.to=q.to}if(G[s].names){a.name=G[s].names[i]}return a};function M(a,b){if(G[a]){var e=G[a].queries;var f=null;for(var i=0,s=e.length;i<s;i++){var q=e[i];if((q!=G[a].currentquery||b)&&d.media.matches(q.from,q.to,G[a].unit)){if(!b){G[a].currentquery=q}if(!G[a].noClasses&&G[a].names&&!b){N(a,G[a].names[i])}f=L(a,i)}}return f}l.log(W,"No queryset with name "+a+" found",'DEVICE.MEDIA');return null};function N(s,a,b){var e="sapUiMedia-"+s+"-";P(e+a,b,e)};function P(s,b,a){var e=document.documentElement;if(e.className.length==0){if(!b){e.className=s}}else{var f=e.className.split(" ");var q="";for(var i=0;i<f.length;i++){if((a&&f[i].indexOf(a)!=0)||(!a&&f[i]!=s)){q=q+f[i]+" "}}if(!b){q=q+s}e.className=q}};function Q(){return[document.documentElement.clientWidth,document.documentElement.clientHeight]};function S(v,a){if(a==="em"||a==="rem"){var s=window.getComputedStyle||function(e){return e.currentStyle};var x=s(document.documentElement).fontSize;var f=(x&&x.indexOf("px")>=0)?parseFloat(x,10):16;return v*f}return v};function U(f,t,e){f=S(f,e);t=S(t,e);var w=Q()[0];var a=f<0||f<=w;var b=t<0||w<=t;return a&&b};function V(f,t,a){var q=J(f,t,a);var m=window.matchMedia(q);return m&&m.matches};d.media.matches=d.support.matchmedia?V:U;d.media.attachHandler=function(f,a,s){var b=s||_;j("media_"+b,f,a)};d.media.detachHandler=function(f,a,s){var b=s||_;k("media_"+b,f,a)};d.media.initRangeSet=function(s,a,b,e,f){var t;if(!s){t=d.media._predefinedRangeSets[_]}else if(s&&d.media._predefinedRangeSets[s]){t=d.media._predefinedRangeSets[s]}else{t={name:s,unit:(b||"px").toLowerCase(),points:a||[],names:e,noClasses:!!f}}if(d.media.hasRangeSet(t.name)){return;l.log(I,"Range set "+t.name+" hase already been initialized",'DEVICE.MEDIA')}s=t.name;t.queries=[];t.timer=null;t.currentquery=null;t.listener=function(){return K(s)};var v,w,x;var x1=t.points;for(var i=0,y1=x1.length;i<=y1;i++){v=(i==0)?0:x1[i-1];w=(i==x1.length)?-1:x1[i];x=J(v,w,t.unit);t.queries.push({query:x,from:v,to:w})};if(t.names&&t.names.length!=t.queries.length){t.names=null}G[t.name]=t;if(d.support.matchmedialistener){var z1=t.queries;for(var i=0;i<z1.length;i++){var q=z1[i];q.media=window.matchMedia(q.query);q.media.addListener(t.listener)}}else{if(window.addEventListener){window.addEventListener("resize",t.listener,false);window.addEventListener("orientationchange",t.listener,false)}else{window.attachEvent("onresize",t.listener)}}t.listener()};d.media.getCurrentRange=function(s){if(!d.media.hasRangeSet(s)){return null}return M(s,true)};d.media.hasRangeSet=function(s){return s&&!!G[s]};d.media.removeRangeSet=function(s){if(!d.media.hasRangeSet(s)){l.log(I,"RangeSet "+s+" not found, thus could not be removed.",'DEVICE.MEDIA');return}for(var x in R){if(s===R[x]){l.log(W,"Cannot remove default rangeset - no action taken.",'DEVICE.MEDIA');return}}var a=G[s];if(d.support.matchmedialistener){var q=a.queries;for(var i=0;i<q.length;i++){q[i].media.removeListener(a.listener)}}else{if(window.removeEventListener){window.removeEventListener("resize",a.listener,false);window.removeEventListener("orientationchange",a.listener,false)}else{window.detachEvent("onresize",a.listener)}}N(s,"",true);delete h["media_"+s];delete G[s]};var X={"TABLET":"tablet","PHONE":"phone","DESKTOP":"desktop","COMBI":"combi"};var Y=d.os.windows&&d.os.version===8;var Z=d.os.windows&&d.os.version===7;d.system={};function $(a){var t=a1();var s={};s.tablet=((d.support.touch&&!Z)||!!a)&&t;s.phone=((d.support.touch&&!Z)||!!a)&&!t;s.desktop=(!s.tablet&&!s.phone)||Y||Z;s.combi=(s.desktop&&s.tablet);s.SYSTEMTYPE=X;for(var b in X){P("sap-"+X[b],!s[X[b]])}return s};function a1(){var a=(/(?=android)(?=.*mobile)/i.test(navigator.userAgent));var b=d.os.android&&(d.os.version>=4.4)&&/Version\/\d.\d/.test(navigator.userAgent);if(d.os.name===d.os.OS.IOS){return/ipad/i.test(navigator.userAgent)}else{if(d.support.touch){var e=window.devicePixelRatio?window.devicePixelRatio:1;if(!b&&(d.os.name===d.os.OS.ANDROID)&&d.browser.webkit&&(d.browser.webkitVersion>537.10)){e=1}var t=(Math.min(window.screen.width/e,window.screen.height/e)>=600);if(t1()&&(window.screen.height===552||window.screen.height===553)&&(/Nexus 7/i.test(navigator.userAgent))){t=true}return t}else{var f=(d.os.name===d.os.OS.ANDROID)&&!a;return f}}};function b1(a){d.system=$(a);if(d.system.tablet||d.system.phone){d.browser.mobile=true}}b1();d.orientation={};d.resize={};d.orientation.attachHandler=function(f,a){j("orientation",f,a)};d.resize.attachHandler=function(f,a){j("resize",f,a)};d.orientation.detachHandler=function(f,a){k("orientation",f,a)};d.resize.detachHandler=function(f,a){k("resize",f,a)};function c1(i){i.landscape=t1(true);i.portrait=!i.landscape};function d1(){c1(d.orientation);n("orientation",{landscape:d.orientation.landscape})};function e1(){f1(d.resize);n("resize",{height:d.resize.height,width:d.resize.width})};function f1(i){i.width=Q()[0];i.height=Q()[1]};function g1(){var w=d.orientation.landscape;var i=t1();if(w!=i){d1()}if(!l1){l1=window.setTimeout(h1,150)}};function h1(){e1();l1=null};var i1=false;var j1=false;var k1;var l1;var m1;var n1=Q()[1];var o1=Q()[0];var p1=false;var q1;var r1=/INPUT|TEXTAREA|SELECT/;var s1=d.os.ios&&d.browser.name==="sf"&&((d.system.phone&&d.os.version>=7&&d.os.version<7.1)||(d.system.tablet&&d.os.version>=7));function t1(f){if(d.support.touch&&d.support.orientation){if(p1&&f){return!d.orientation.landscape}if(p1){return d.orientation.landscape}}else{if(d.support.matchmedia&&d.support.orientation){return!!window.matchMedia("(orientation: landscape)").matches}}var s=Q();return s[0]>s[1]};function u1(e){if(e.type=="resize"){if(s1&&r1.test(document.activeElement.tagName)&&!i1){return}var w=Q()[1];var i=Q()[0];var t=new Date().getTime();if(w===n1&&i===o1){return}j1=true;if((n1!=w)&&(o1==i)){if(!q1||(t-q1>300)){p1=(w<n1)}e1()}else{o1=i}q1=t;n1=w;if(m1){window.clearTimeout(m1);m1=null}m1=window.setTimeout(w1,1200)}else if(e.type=="orientationchange"){i1=true}if(k1){clearTimeout(k1);k1=null}k1=window.setTimeout(v1,50)};function v1(){if(i1&&j1){d1();e1();i1=false;j1=false;if(m1){window.clearTimeout(m1);m1=null}}k1=null};function w1(){i1=false;j1=false;m1=null};d._update=function(a){u=navigator.userAgent;l.log(W,"Device API values manipulated: NOT PRODUCTIVE FEATURE!!! This should be only used for test purposes. Only use if you know what you are doing.");A();r();b1(a)};f1(d.resize);c1(d.orientation);window.sap.ui.Device=d;if(d.support.touch&&d.support.orientation){window.addEventListener("resize",u1,false);window.addEventListener("orientationchange",u1,false)}else{if(window.addEventListener){window.addEventListener("resize",g1,false)}else{window.attachEvent("onresize",g1)}}d.media.initRangeSet();if(sap.ui.define){sap.ui.define("sap/ui/Device",[],function(){return d})}}());
/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.11.2
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.com/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *   GPL v3 http://opensource.org/licenses/GPL-3.0
 *
 */
(function(r,f){if(typeof exports==='object'){module.exports=f()}else if(typeof define==='function'&&define.amd){define(f)}else{r.SecondLevelDomains=f(r)}}(this,function(r){"use strict";var _=r&&r.SecondLevelDomains;var h=Object.prototype.hasOwnProperty;var S={list:{"ac":"com|gov|mil|net|org","ae":"ac|co|gov|mil|name|net|org|pro|sch","af":"com|edu|gov|net|org","al":"com|edu|gov|mil|net|org","ao":"co|ed|gv|it|og|pb","ar":"com|edu|gob|gov|int|mil|net|org|tur","at":"ac|co|gv|or","au":"asn|com|csiro|edu|gov|id|net|org","ba":"co|com|edu|gov|mil|net|org|rs|unbi|unmo|unsa|untz|unze","bb":"biz|co|com|edu|gov|info|net|org|store|tv","bh":"biz|cc|com|edu|gov|info|net|org","bn":"com|edu|gov|net|org","bo":"com|edu|gob|gov|int|mil|net|org|tv","br":"adm|adv|agr|am|arq|art|ato|b|bio|blog|bmd|cim|cng|cnt|com|coop|ecn|edu|eng|esp|etc|eti|far|flog|fm|fnd|fot|fst|g12|ggf|gov|imb|ind|inf|jor|jus|lel|mat|med|mil|mus|net|nom|not|ntr|odo|org|ppg|pro|psc|psi|qsl|rec|slg|srv|tmp|trd|tur|tv|vet|vlog|wiki|zlg","bs":"com|edu|gov|net|org","bz":"du|et|om|ov|rg","ca":"ab|bc|mb|nb|nf|nl|ns|nt|nu|on|pe|qc|sk|yk","ck":"biz|co|edu|gen|gov|info|net|org","cn":"ac|ah|bj|com|cq|edu|fj|gd|gov|gs|gx|gz|ha|hb|he|hi|hl|hn|jl|js|jx|ln|mil|net|nm|nx|org|qh|sc|sd|sh|sn|sx|tj|tw|xj|xz|yn|zj","co":"com|edu|gov|mil|net|nom|org","cr":"ac|c|co|ed|fi|go|or|sa","cy":"ac|biz|com|ekloges|gov|ltd|name|net|org|parliament|press|pro|tm","do":"art|com|edu|gob|gov|mil|net|org|sld|web","dz":"art|asso|com|edu|gov|net|org|pol","ec":"com|edu|fin|gov|info|med|mil|net|org|pro","eg":"com|edu|eun|gov|mil|name|net|org|sci","er":"com|edu|gov|ind|mil|net|org|rochest|w","es":"com|edu|gob|nom|org","et":"biz|com|edu|gov|info|name|net|org","fj":"ac|biz|com|info|mil|name|net|org|pro","fk":"ac|co|gov|net|nom|org","fr":"asso|com|f|gouv|nom|prd|presse|tm","gg":"co|net|org","gh":"com|edu|gov|mil|org","gn":"ac|com|gov|net|org","gr":"com|edu|gov|mil|net|org","gt":"com|edu|gob|ind|mil|net|org","gu":"com|edu|gov|net|org","hk":"com|edu|gov|idv|net|org","id":"ac|co|go|mil|net|or|sch|web","il":"ac|co|gov|idf|k12|muni|net|org","in":"ac|co|edu|ernet|firm|gen|gov|i|ind|mil|net|nic|org|res","iq":"com|edu|gov|i|mil|net|org","ir":"ac|co|dnssec|gov|i|id|net|org|sch","it":"edu|gov","je":"co|net|org","jo":"com|edu|gov|mil|name|net|org|sch","jp":"ac|ad|co|ed|go|gr|lg|ne|or","ke":"ac|co|go|info|me|mobi|ne|or|sc","kh":"com|edu|gov|mil|net|org|per","ki":"biz|com|de|edu|gov|info|mob|net|org|tel","km":"asso|com|coop|edu|gouv|k|medecin|mil|nom|notaires|pharmaciens|presse|tm|veterinaire","kn":"edu|gov|net|org","kr":"ac|busan|chungbuk|chungnam|co|daegu|daejeon|es|gangwon|go|gwangju|gyeongbuk|gyeonggi|gyeongnam|hs|incheon|jeju|jeonbuk|jeonnam|k|kg|mil|ms|ne|or|pe|re|sc|seoul|ulsan","kw":"com|edu|gov|net|org","ky":"com|edu|gov|net|org","kz":"com|edu|gov|mil|net|org","lb":"com|edu|gov|net|org","lk":"assn|com|edu|gov|grp|hotel|int|ltd|net|ngo|org|sch|soc|web","lr":"com|edu|gov|net|org","lv":"asn|com|conf|edu|gov|id|mil|net|org","ly":"com|edu|gov|id|med|net|org|plc|sch","ma":"ac|co|gov|m|net|org|press","mc":"asso|tm","me":"ac|co|edu|gov|its|net|org|priv","mg":"com|edu|gov|mil|nom|org|prd|tm","mk":"com|edu|gov|inf|name|net|org|pro","ml":"com|edu|gov|net|org|presse","mn":"edu|gov|org","mo":"com|edu|gov|net|org","mt":"com|edu|gov|net|org","mv":"aero|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro","mw":"ac|co|com|coop|edu|gov|int|museum|net|org","mx":"com|edu|gob|net|org","my":"com|edu|gov|mil|name|net|org|sch","nf":"arts|com|firm|info|net|other|per|rec|store|web","ng":"biz|com|edu|gov|mil|mobi|name|net|org|sch","ni":"ac|co|com|edu|gob|mil|net|nom|org","np":"com|edu|gov|mil|net|org","nr":"biz|com|edu|gov|info|net|org","om":"ac|biz|co|com|edu|gov|med|mil|museum|net|org|pro|sch","pe":"com|edu|gob|mil|net|nom|org|sld","ph":"com|edu|gov|i|mil|net|ngo|org","pk":"biz|com|edu|fam|gob|gok|gon|gop|gos|gov|net|org|web","pl":"art|bialystok|biz|com|edu|gda|gdansk|gorzow|gov|info|katowice|krakow|lodz|lublin|mil|net|ngo|olsztyn|org|poznan|pwr|radom|slupsk|szczecin|torun|warszawa|waw|wroc|wroclaw|zgora","pr":"ac|biz|com|edu|est|gov|info|isla|name|net|org|pro|prof","ps":"com|edu|gov|net|org|plo|sec","pw":"belau|co|ed|go|ne|or","ro":"arts|com|firm|info|nom|nt|org|rec|store|tm|www","rs":"ac|co|edu|gov|in|org","sb":"com|edu|gov|net|org","sc":"com|edu|gov|net|org","sh":"co|com|edu|gov|net|nom|org","sl":"com|edu|gov|net|org","st":"co|com|consulado|edu|embaixada|gov|mil|net|org|principe|saotome|store","sv":"com|edu|gob|org|red","sz":"ac|co|org","tr":"av|bbs|bel|biz|com|dr|edu|gen|gov|info|k12|name|net|org|pol|tel|tsk|tv|web","tt":"aero|biz|cat|co|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel","tw":"club|com|ebiz|edu|game|gov|idv|mil|net|org","mu":"ac|co|com|gov|net|or|org","mz":"ac|co|edu|gov|org","na":"co|com","nz":"ac|co|cri|geek|gen|govt|health|iwi|maori|mil|net|org|parliament|school","pa":"abo|ac|com|edu|gob|ing|med|net|nom|org|sld","pt":"com|edu|gov|int|net|nome|org|publ","py":"com|edu|gov|mil|net|org","qa":"com|edu|gov|mil|net|org","re":"asso|com|nom","ru":"ac|adygeya|altai|amur|arkhangelsk|astrakhan|bashkiria|belgorod|bir|bryansk|buryatia|cbg|chel|chelyabinsk|chita|chukotka|chuvashia|com|dagestan|e-burg|edu|gov|grozny|int|irkutsk|ivanovo|izhevsk|jar|joshkar-ola|kalmykia|kaluga|kamchatka|karelia|kazan|kchr|kemerovo|khabarovsk|khakassia|khv|kirov|koenig|komi|kostroma|kranoyarsk|kuban|kurgan|kursk|lipetsk|magadan|mari|mari-el|marine|mil|mordovia|mosreg|msk|murmansk|nalchik|net|nnov|nov|novosibirsk|nsk|omsk|orenburg|org|oryol|penza|perm|pp|pskov|ptz|rnd|ryazan|sakhalin|samara|saratov|simbirsk|smolensk|spb|stavropol|stv|surgut|tambov|tatarstan|tom|tomsk|tsaritsyn|tsk|tula|tuva|tver|tyumen|udm|udmurtia|ulan-ude|vladikavkaz|vladimir|vladivostok|volgograd|vologda|voronezh|vrn|vyatka|yakutia|yamal|yekaterinburg|yuzhno-sakhalinsk","rw":"ac|co|com|edu|gouv|gov|int|mil|net","sa":"com|edu|gov|med|net|org|pub|sch","sd":"com|edu|gov|info|med|net|org|tv","se":"a|ac|b|bd|c|d|e|f|g|h|i|k|l|m|n|o|org|p|parti|pp|press|r|s|t|tm|u|w|x|y|z","sg":"com|edu|gov|idn|net|org|per","sn":"art|com|edu|gouv|org|perso|univ","sy":"com|edu|gov|mil|net|news|org","th":"ac|co|go|in|mi|net|or","tj":"ac|biz|co|com|edu|go|gov|info|int|mil|name|net|nic|org|test|web","tn":"agrinet|com|defense|edunet|ens|fin|gov|ind|info|intl|mincom|nat|net|org|perso|rnrt|rns|rnu|tourism","tz":"ac|co|go|ne|or","ua":"biz|cherkassy|chernigov|chernovtsy|ck|cn|co|com|crimea|cv|dn|dnepropetrovsk|donetsk|dp|edu|gov|if|in|ivano-frankivsk|kh|kharkov|kherson|khmelnitskiy|kiev|kirovograd|km|kr|ks|kv|lg|lugansk|lutsk|lviv|me|mk|net|nikolaev|od|odessa|org|pl|poltava|pp|rovno|rv|sebastopol|sumy|te|ternopil|uzhgorod|vinnica|vn|zaporizhzhe|zhitomir|zp|zt","ug":"ac|co|go|ne|or|org|sc","uk":"ac|bl|british-library|co|cym|gov|govt|icnet|jet|lea|ltd|me|mil|mod|national-library-scotland|nel|net|nhs|nic|nls|org|orgn|parliament|plc|police|sch|scot|soc","us":"dni|fed|isa|kids|nsn","uy":"com|edu|gub|mil|net|org","ve":"co|com|edu|gob|info|mil|net|org|web","vi":"co|com|k12|net|org","vn":"ac|biz|com|edu|gov|health|info|int|name|net|org|pro","ye":"co|com|gov|ltd|me|net|org|plc","yu":"ac|co|edu|gov|org","za":"ac|agric|alt|bourse|city|co|cybernet|db|edu|gov|grondar|iaccess|imt|inca|landesign|law|mil|net|ngo|nis|nom|olivetti|org|pix|school|tm|web","zm":"ac|co|com|edu|gov|net|org|sch"},has_expression:null,is_expression:null,has:function(d){return!!d.match(S.has_expression)},is:function(d){return!!d.match(S.is_expression)},get:function(d){var t=d.match(S.has_expression);return t&&t[1]||null},noConflict:function(){if(r.SecondLevelDomains===this){r.SecondLevelDomains=_}return this},init:function(){var t='';for(var a in S.list){if(!h.call(S.list,a)){continue}var e='('+S.list[a]+')\.'+a;t+='|('+e+')'}S.has_expression=new RegExp('\\.('+t.substr(1)+')$','i');S.is_expression=new RegExp('^('+t.substr(1)+')$','i')}};S.init();return S}));
/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.11.2
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.com/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *   GPL v3 http://opensource.org/licenses/GPL-3.0
 *
 */
(function(r,f){if(typeof exports==='object'){module.exports=f(require('./punycode'),require('./IPv6'),require('./SecondLevelDomains'))}else if(typeof define==='function'&&define.amd){r.URI=f(r.punycode,r.IPv6,r.SecondLevelDomains,r);define([],function(){return r.URI})}else{r.URI=f(r.punycode,r.IPv6,r.SecondLevelDomains,r)}}(this,function(a,I,S,r){"use strict";var _=r&&r.URI;function U(c,d){if(!(this instanceof U)){return new U(c,d)}if(c===undefined){if(typeof location!=='undefined'){c=location.href+""}else{c=""}}this.href(c);if(d!==undefined){return this.absoluteTo(d)}return this};var p=U.prototype;var h=Object.prototype.hasOwnProperty;function b(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1')}function g(v){if(v===undefined){return'Undefined'}return String(Object.prototype.toString.call(v)).slice(8,-1)}function f(c){return g(c)==="Array"}function j(d,v){var l={};var i,c;if(f(v)){for(i=0,c=v.length;i<c;i++){l[v[i]]=true}}else{l[v]=true}for(i=0,c=d.length;i<c;i++){if(l[d[i]]!==undefined){d.splice(i,1);c--;i--}}return d}function k(l,v){var i,c;if(f(v)){for(i=0,c=v.length;i<c;i++){if(!k(l,v[i])){return false}}return true}var d=g(v);for(i=0,c=l.length;i<c;i++){if(d==='RegExp'){if(typeof l[i]==='string'&&l[i].match(v)){return true}}else if(l[i]===v){return true}}return false}function m(c,t){if(!f(c)||!f(t)){return false}if(c.length!==t.length){return false}c.sort();t.sort();for(var i=0,l=c.length;i<l;i++){if(c[i]!==t[i]){return false}}return true}U._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,fragment:null,duplicateQueryParameters:U.duplicateQueryParameters,escapeQuerySpace:U.escapeQuerySpace}};U.duplicateQueryParameters=false;U.escapeQuerySpace=true;U.protocol_expression=/^[a-z][a-z0-9-+-]*$/i;U.idn_expression=/[^a-z0-9\.-]/i;U.punycode_expression=/(xn--)/i;U.ip4_expression=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;U.ip6_expression=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;U.find_uri_expression=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;U.defaultPorts={http:"80",https:"443",ftp:"21",gopher:"70",ws:"80",wss:"443"};U.invalid_hostname_characters=/[^a-zA-Z0-9\.-]/;U.domAttributes={'a':'href','blockquote':'cite','link':'href','base':'href','script':'src','form':'action','img':'src','area':'href','iframe':'src','embed':'src','source':'src','track':'src','input':'src'};U.getDomAttribute=function(c){if(!c||!c.nodeName){return undefined}var d=c.nodeName.toLowerCase();if(d==='input'&&c.type!=='image'){return undefined}return U.domAttributes[d]};function n(v){return escape(v)}function o(s){return encodeURIComponent(s).replace(/[!'()*]/g,n).replace(/\*/g,"%2A")}U.encode=o;U.decode=decodeURIComponent;U.iso8859=function(){U.encode=escape;U.decode=unescape};U.unicode=function(){U.encode=o;U.decode=decodeURIComponent};U.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/ig,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{expression:/[\/\?#]/g,map:{"/":"%2F","?":"%3F","#":"%23"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,map:{"%3A":":","%2F":"/","%3F":"?","%23":"#","%5B":"[","%5D":"]","%40":"@","%21":"!","%24":"$","%26":"&","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}}};U.encodeQuery=function(s,e){var c=U.encode(s+"");return e?c.replace(/%20/g,'+'):c};U.decodeQuery=function(s,c){s+="";try{return U.decode(c?s.replace(/\+/g,'%20'):s)}catch(e){return s}};U.recodePath=function(s){var c=(s+"").split('/');for(var i=0,l=c.length;i<l;i++){c[i]=U.encodePathSegment(U.decode(c[i]))}return c.join('/')};U.decodePath=function(s){var c=(s+"").split('/');for(var i=0,l=c.length;i<l;i++){c[i]=U.decodePathSegment(c[i])}return c.join('/')};var u={'encode':'encode','decode':'decode'};var w;var y=function(d,w){return function(s){return U[w](s+"").replace(U.characters[d][w].expression,function(c){return U.characters[d][w].map[c]})}};for(w in u){U[w+"PathSegment"]=y("pathname",u[w])}U.encodeReserved=y("reserved","encode");U.parse=function(s,c){var d;if(!c){c={}}d=s.indexOf('#');if(d>-1){c.fragment=s.substring(d+1)||null;s=s.substring(0,d)}d=s.indexOf('?');if(d>-1){c.query=s.substring(d+1)||null;s=s.substring(0,d)}if(s.substring(0,2)==='//'){c.protocol=null;s=s.substring(2);s=U.parseAuthority(s,c)}else{d=s.indexOf(':');if(d>-1){c.protocol=s.substring(0,d)||null;if(c.protocol&&!c.protocol.match(U.protocol_expression)){c.protocol=undefined}else if(c.protocol==='file'){s=s.substring(d+3)}else if(s.substring(d+1,d+3)==='//'){s=s.substring(d+3);s=U.parseAuthority(s,c)}else{s=s.substring(d+1);c.urn=true}}}c.path=s;return c};U.parseHost=function(s,c){var d=s.indexOf('/');var e;var t;if(d===-1){d=s.length}if(s.charAt(0)==="["){e=s.indexOf(']');c.hostname=s.substring(1,e)||null;c.port=s.substring(e+2,d)||null}else if(s.indexOf(':')!==s.lastIndexOf(':')){c.hostname=s.substring(0,d)||null;c.port=null}else{t=s.substring(0,d).split(':');c.hostname=t[0]||null;c.port=t[1]||null}if(c.hostname&&s.substring(d).charAt(0)!=='/'){d++;s="/"+s}return s.substring(d)||'/'};U.parseAuthority=function(s,c){s=U.parseUserinfo(s,c);return U.parseHost(s,c)};U.parseUserinfo=function(s,c){var d=s.indexOf('/');var e=d>-1?s.lastIndexOf('@',d):s.indexOf('@');var t;if(e>-1&&(d===-1||e<d)){t=s.substring(0,e).split(':');c.username=t[0]?U.decode(t[0]):null;t.shift();c.password=t[0]?U.decode(t.join(':')):null;s=s.substring(e+1)}else{c.username=null;c.password=null}return s};U.parseQuery=function(s,e){if(!s){return{}}s=s.replace(/&+/g,'&').replace(/^\?*&*|&+$/g,'');if(!s){return{}}var c={};var d=s.split('&');var l=d.length;var v,t,x;for(var i=0;i<l;i++){v=d[i].split('=');t=U.decodeQuery(v.shift(),e);x=v.length?U.decodeQuery(v.join('='),e):null;if(c[t]){if(typeof c[t]==="string"){c[t]=[c[t]]}c[t].push(x)}else{c[t]=x}}return c};U.build=function(c){var t="";if(c.protocol){t+=c.protocol+":"}if(!c.urn&&(t||c.hostname)){t+='//'}t+=(U.buildAuthority(c)||'');if(typeof c.path==="string"){if(c.path.charAt(0)!=='/'&&typeof c.hostname==="string"){t+='/'}t+=c.path}if(typeof c.query==="string"&&c.query){t+='?'+c.query}if(typeof c.fragment==="string"&&c.fragment){t+='#'+c.fragment}return t};U.buildHost=function(c){var t="";if(!c.hostname){return""}else if(U.ip6_expression.test(c.hostname)){if(c.port){t+="["+c.hostname+"]:"+c.port}else{t+=c.hostname}}else{t+=c.hostname;if(c.port){t+=':'+c.port}}return t};U.buildAuthority=function(c){return U.buildUserinfo(c)+U.buildHost(c)};U.buildUserinfo=function(c){var t="";if(c.username){t+=U.encode(c.username);if(c.password){t+=':'+U.encode(c.password)}t+="@"}return t};U.buildQuery=function(d,c,e){var t="";var l,s,i,v;for(s in d){if(h.call(d,s)&&s){if(f(d[s])){l={};for(i=0,v=d[s].length;i<v;i++){if(d[s][i]!==undefined&&l[d[s][i]+""]===undefined){t+="&"+U.buildQueryParameter(s,d[s][i],e);if(c!==true){l[d[s][i]+""]=true}}}}else if(d[s]!==undefined){t+='&'+U.buildQueryParameter(s,d[s],e)}}}return t.substring(1)};U.buildQueryParameter=function(c,v,e){return U.encodeQuery(c,e)+(v!==null?"="+U.encodeQuery(v,e):"")};U.addQuery=function(d,c,v){if(typeof c==="object"){for(var e in c){if(h.call(c,e)){U.addQuery(d,e,c[e])}}}else if(typeof c==="string"){if(d[c]===undefined){d[c]=v;return}else if(typeof d[c]==="string"){d[c]=[d[c]]}if(!f(v)){v=[v]}d[c]=d[c].concat(v)}else{throw new TypeError("URI.addQuery() accepts an object, string as the name parameter")}};U.removeQuery=function(d,c,v){var i,l,e;if(f(c)){for(i=0,l=c.length;i<l;i++){d[c[i]]=undefined}}else if(typeof c==="object"){for(e in c){if(h.call(c,e)){U.removeQuery(d,e,c[e])}}}else if(typeof c==="string"){if(v!==undefined){if(d[c]===v){d[c]=undefined}else if(f(d[c])){d[c]=j(d[c],v)}}else{d[c]=undefined}}else{throw new TypeError("URI.addQuery() accepts an object, string as the first parameter")}};U.hasQuery=function(d,c,v,e){if(typeof c==="object"){for(var i in c){if(h.call(c,i)){if(!U.hasQuery(d,i,c[i])){return false}}}return true}else if(typeof c!=="string"){throw new TypeError("URI.hasQuery() accepts an object, string as the name parameter")}switch(g(v)){case'Undefined':return c in d;case'Boolean':var l=Boolean(f(d[c])?d[c].length:d[c]);return v===l;case'Function':return!!v(d[c],c,d);case'Array':if(!f(d[c])){return false}var s=e?k:m;return s(d[c],v);case'RegExp':if(!f(d[c])){return Boolean(d[c]&&d[c].match(v))}if(!e){return false}return k(d[c],v);case'Number':v=String(v);case'String':if(!f(d[c])){return d[c]===v}if(!e){return false}return k(d[c],v);default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}};U.commonPath=function(c,t){var l=Math.min(c.length,t.length);var d;for(d=0;d<l;d++){if(c.charAt(d)!==t.charAt(d)){d--;break}}if(d<1){return c.charAt(0)===t.charAt(0)&&c.charAt(0)==='/'?'/':''}if(c.charAt(d)!=='/'||t.charAt(d)!=='/'){d=c.substring(0,d).lastIndexOf('/')}return c.substring(0,d+1)};U.withinString=function(s,c){return s.replace(U.find_uri_expression,c)};U.ensureValidHostname=function(v){if(v.match(U.invalid_hostname_characters)){if(!a){throw new TypeError("Hostname '"+v+"' contains characters other than [A-Z0-9.-] and Punycode.js is not available")}if(a.toASCII(v).match(U.invalid_hostname_characters)){throw new TypeError("Hostname '"+v+"' contains characters other than [A-Z0-9.-]")}}};U.noConflict=function(c){if(c){var d={URI:this.noConflict()};if(URITemplate&&typeof URITemplate.noConflict=="function"){d.URITemplate=URITemplate.noConflict()}if(I&&typeof I.noConflict=="function"){d.IPv6=I.noConflict()}if(SecondLevelDomains&&typeof SecondLevelDomains.noConflict=="function"){d.SecondLevelDomains=SecondLevelDomains.noConflict()}return d}else if(r.URI===this){r.URI=_}return this};p.build=function(d){if(d===true){this._deferred_build=true}else if(d===undefined||this._deferred_build){this._string=U.build(this._parts);this._deferred_build=false}return this};p.clone=function(){return new U(this)};p.valueOf=p.toString=function(){return this.build(false)._string};u={protocol:'protocol',username:'username',password:'password',hostname:'hostname',port:'port'};y=function(w){return function(v,c){if(v===undefined){return this._parts[w]||""}else{this._parts[w]=v||null;this.build(!c);return this}}};for(w in u){p[w]=y(u[w])}u={query:'?',fragment:'#'};y=function(w,c){return function(v,d){if(v===undefined){return this._parts[w]||""}else{if(v!==null){v=v+"";if(v.charAt(0)===c){v=v.substring(1)}}this._parts[w]=v;this.build(!d);return this}}};for(w in u){p[w]=y(w,u[w])}u={search:['?','query'],hash:['#','fragment']};y=function(w,c){return function(v,d){var t=this[w](v,d);return typeof t==="string"&&t.length?(c+t):t}};for(w in u){p[w]=y(u[w][1],u[w][0])}p.pathname=function(v,c){if(v===undefined||v===true){var d=this._parts.path||(this._parts.hostname?'/':'');return v?U.decodePath(d):d}else{this._parts.path=v?U.recodePath(v):"/";this.build(!c);return this}};p.path=p.pathname;p.href=function(c,d){var e;if(c===undefined){return this.toString()}this._string="";this._parts=U._parts();var _=c instanceof U;var i=typeof c==="object"&&(c.hostname||c.path||c.pathname);if(c.nodeName){var l=U.getDomAttribute(c);c=c[l]||"";i=false}if(!_&&i&&c.pathname!==undefined){c=c.toString()}if(typeof c==="string"){this._parts=U.parse(c,this._parts)}else if(_||i){var s=_?c._parts:c;for(e in s){if(h.call(this._parts,e)){this._parts[e]=s[e]}}}else{throw new TypeError("invalid input")}this.build(!d);return this};p.is=function(c){var i=false;var d=false;var e=false;var l=false;var s=false;var t=false;var a=false;var v=!this._parts.urn;if(this._parts.hostname){v=false;d=U.ip4_expression.test(this._parts.hostname);e=U.ip6_expression.test(this._parts.hostname);i=d||e;l=!i;s=l&&S&&S.has(this._parts.hostname);t=l&&U.idn_expression.test(this._parts.hostname);a=l&&U.punycode_expression.test(this._parts.hostname)}switch(c.toLowerCase()){case'relative':return v;case'absolute':return!v;case'domain':case'name':return l;case'sld':return s;case'ip':return i;case'ip4':case'ipv4':case'inet4':return d;case'ip6':case'ipv6':case'inet6':return e;case'idn':return t;case'url':return!this._parts.urn;case'urn':return!!this._parts.urn;case'punycode':return a}return null};var z=p.protocol;var A=p.port;var B=p.hostname;p.protocol=function(v,c){if(v!==undefined){if(v){v=v.replace(/:(\/\/)?$/,'');if(v.match(/[^a-zA-z0-9\.+-]/)){throw new TypeError("Protocol '"+v+"' contains characters other than [A-Z0-9.+-]")}}}return z.call(this,v,c)};p.scheme=p.protocol;p.port=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v!==undefined){if(v===0){v=null}if(v){v+="";if(v.charAt(0)===":"){v=v.substring(1)}if(v.match(/[^0-9]/)){throw new TypeError("Port '"+v+"' contains characters other than [0-9]")}}}return A.call(this,v,c)};p.hostname=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v!==undefined){var x={};U.parseHost(v,x);v=x.hostname}return B.call(this,v,c)};p.host=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){return this._parts.hostname?U.buildHost(this._parts):""}else{U.parseHost(v,this._parts);this.build(!c);return this}};p.authority=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){return this._parts.hostname?U.buildAuthority(this._parts):""}else{U.parseAuthority(v,this._parts);this.build(!c);return this}};p.userinfo=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){if(!this._parts.username){return""}var t=U.buildUserinfo(this._parts);return t.substring(0,t.length-1)}else{if(v[v.length-1]!=='@'){v+='@'}U.parseUserinfo(v,this._parts);this.build(!c);return this}};p.resource=function(v,c){var d;if(v===undefined){return this.path()+this.search()+this.hash()}d=U.parse(v);this._parts.path=d.path;this._parts.query=d.query;this._parts.fragment=d.fragment;this.build(!c);return this};p.subdomain=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var d=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,d)||""}else{var e=this._parts.hostname.length-this.domain().length;var s=this._parts.hostname.substring(0,e);var i=new RegExp('^'+b(s));if(v&&v.charAt(v.length-1)!=='.'){v+="."}if(v){U.ensureValidHostname(v)}this._parts.hostname=this._parts.hostname.replace(i,v);this.build(!c);return this}};p.domain=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(typeof v==='boolean'){c=v;v=undefined}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var t=this._parts.hostname.match(/\./g);if(t&&t.length<2){return this._parts.hostname}var e=this._parts.hostname.length-this.tld(c).length-1;e=this._parts.hostname.lastIndexOf('.',e-1)+1;return this._parts.hostname.substring(e)||""}else{if(!v){throw new TypeError("cannot set domain empty")}U.ensureValidHostname(v);if(!this._parts.hostname||this.is('IP')){this._parts.hostname=v}else{var d=new RegExp(b(this.domain())+"$");this._parts.hostname=this._parts.hostname.replace(d,v)}this.build(!c);return this}};p.tld=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(typeof v==='boolean'){c=v;v=undefined}if(v===undefined){if(!this._parts.hostname||this.is('IP')){return""}var d=this._parts.hostname.lastIndexOf('.');var t=this._parts.hostname.substring(d+1);if(c!==true&&S&&S.list[t.toLowerCase()]){return S.get(this._parts.hostname)||t}return t}else{var e;if(!v){throw new TypeError("cannot set TLD empty")}else if(v.match(/[^a-zA-Z0-9-]/)){if(S&&S.is(v)){e=new RegExp(b(this.tld())+"$");this._parts.hostname=this._parts.hostname.replace(e,v)}else{throw new TypeError("TLD '"+v+"' contains characters other than [A-Z0-9]")}}else if(!this._parts.hostname||this.is('IP')){throw new ReferenceError("cannot set TLD on non-domain host")}else{e=new RegExp(b(this.tld())+"$");this._parts.hostname=this._parts.hostname.replace(e,v)}this.build(!c);return this}};p.directory=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path&&!this._parts.hostname){return''}if(this._parts.path==='/'){return'/'}var d=this._parts.path.length-this.filename().length-1;var i=this._parts.path.substring(0,d)||(this._parts.hostname?"/":"");return v?U.decodePath(i):i}else{var e=this._parts.path.length-this.filename().length;var l=this._parts.path.substring(0,e);var s=new RegExp('^'+b(l));if(!this.is('relative')){if(!v){v='/'}if(v.charAt(0)!=='/'){v="/"+v}}if(v&&v.charAt(v.length-1)!=='/'){v+='/'}v=U.recodePath(v);this._parts.path=this._parts.path.replace(s,v);this.build(!c);return this}};p.filename=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path||this._parts.path==='/'){return""}var d=this._parts.path.lastIndexOf('/');var e=this._parts.path.substring(d+1);return v?U.decodePathSegment(e):e}else{var i=false;if(v.charAt(0)==='/'){v=v.substring(1)}if(v.match(/\.?\//)){i=true}var l=new RegExp(b(this.filename())+"$");v=U.recodePath(v);this._parts.path=this._parts.path.replace(l,v);if(i){this.normalizePath(c)}else{this.build(!c)}return this}};p.suffix=function(v,c){if(this._parts.urn){return v===undefined?'':this}if(v===undefined||v===true){if(!this._parts.path||this._parts.path==='/'){return""}var d=this.filename();var e=d.lastIndexOf('.');var s,i;if(e===-1){return""}s=d.substring(e+1);i=(/^[a-z0-9%]+$/i).test(s)?s:"";return v?U.decodePathSegment(i):i}else{if(v.charAt(0)==='.'){v=v.substring(1)}var l=this.suffix();var t;if(!l){if(!v){return this}this._parts.path+='.'+U.recodePath(v)}else if(!v){t=new RegExp(b("."+l)+"$")}else{t=new RegExp(b(l)+"$")}if(t){v=U.recodePath(v);this._parts.path=this._parts.path.replace(t,v)}this.build(!c);return this}};p.segment=function(s,v,c){var d=this._parts.urn?':':'/';var e=this.path();var t=e.substring(0,1)==='/';var x=e.split(d);if(s!==undefined&&typeof s!=='number'){c=v;v=s;s=undefined}if(s!==undefined&&typeof s!=='number'){throw new Error("Bad segment '"+s+"', must be 0-based integer")}if(t){x.shift()}if(s<0){s=Math.max(x.length+s,0)}if(v===undefined){return s===undefined?x:x[s]}else if(s===null||x[s]===undefined){if(f(v)){x=[];for(var i=0,l=v.length;i<l;i++){if(!v[i].length&&(!x.length||!x[x.length-1].length)){continue}if(x.length&&!x[x.length-1].length){x.pop()}x.push(v[i])}}else if(v||(typeof v==="string")){if(x[x.length-1]===""){x[x.length-1]=v}else{x.push(v)}}}else{if(v||(typeof v==="string"&&v.length)){x[s]=v}else{x.splice(s,1)}}if(t){x.unshift("")}return this.path(x.join(d),c)};p.segmentCoded=function(s,v,c){var d,i,l;if(typeof s!=='number'){c=v;v=s;s=undefined}if(v===undefined){d=this.segment(s,v,c);if(!f(d)){d=d!==undefined?U.decode(d):undefined}else{for(i=0,l=d.length;i<l;i++){d[i]=U.decode(d[i])}}return d}if(!f(v)){v=typeof v==='string'?U.encode(v):v}else{for(i=0,l=v.length;i<l;i++){v[i]=U.decode(v[i])}}return this.segment(s,v,c)};var q=p.query;p.query=function(v,c){if(v===true){return U.parseQuery(this._parts.query,this._parts.escapeQuerySpace)}else if(typeof v==="function"){var d=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);var e=v.call(this,d);this._parts.query=U.buildQuery(e||d,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);this.build(!c);return this}else if(v!==undefined&&typeof v!=="string"){this._parts.query=U.buildQuery(v,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);this.build(!c);return this}else{return q.call(this,v,c)}};p.setQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if(typeof c==="object"){for(var i in c){if(h.call(c,i)){e[i]=c[i]}}}else if(typeof c==="string"){e[c]=v!==undefined?v:null}else{throw new TypeError("URI.addQuery() accepts an object, string as the name parameter")}this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.addQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);U.addQuery(e,c,v===undefined?null:v);this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.removeQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);U.removeQuery(e,c,v);this._parts.query=U.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace);if(typeof c!=="string"){d=v}this.build(!d);return this};p.hasQuery=function(c,v,d){var e=U.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return U.hasQuery(e,c,v,d)};p.setSearch=p.setQuery;p.addSearch=p.addQuery;p.removeSearch=p.removeQuery;p.hasSearch=p.hasQuery;p.normalize=function(){if(this._parts.urn){return this.normalizeProtocol(false).normalizeQuery(false).normalizeFragment(false).build()}return this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build()};p.normalizeProtocol=function(c){if(typeof this._parts.protocol==="string"){this._parts.protocol=this._parts.protocol.toLowerCase();this.build(!c)}return this};p.normalizeHostname=function(c){if(this._parts.hostname){if(this.is('IDN')&&a){this._parts.hostname=a.toASCII(this._parts.hostname)}else if(this.is('IPv6')&&I){this._parts.hostname=I.best(this._parts.hostname)}this._parts.hostname=this._parts.hostname.toLowerCase();this.build(!c)}return this};p.normalizePort=function(c){if(typeof this._parts.protocol==="string"&&this._parts.port===U.defaultPorts[this._parts.protocol]){this._parts.port=null;this.build(!c)}return this};p.normalizePath=function(c){if(this._parts.urn){return this}if(!this._parts.path||this._parts.path==='/'){return this}var d;var e=this._parts.path;var i,l;if(e.charAt(0)!=='/'){d=true;e='/'+e}e=e.replace(/(\/(\.\/)+)|(\/\.$)/g,'/').replace(/\/{2,}/g,'/');while(true){i=e.indexOf('/../');if(i===-1){break}else if(i===0){e=e.substring(3);break}l=e.substring(0,i).lastIndexOf('/');if(l===-1){l=i}e=e.substring(0,l)+e.substring(i+3)}if(d&&this.is('relative')){e=e.substring(1)}e=U.recodePath(e);this._parts.path=e;this.build(!c);return this};p.normalizePathname=p.normalizePath;p.normalizeQuery=function(c){if(typeof this._parts.query==="string"){if(!this._parts.query.length){this._parts.query=null}else{this.query(U.parseQuery(this._parts.query,this._parts.escapeQuerySpace))}this.build(!c)}return this};p.normalizeFragment=function(c){if(!this._parts.fragment){this._parts.fragment=null;this.build(!c)}return this};p.normalizeSearch=p.normalizeQuery;p.normalizeHash=p.normalizeFragment;p.iso8859=function(){var e=U.encode;var d=U.decode;U.encode=escape;U.decode=decodeURIComponent;this.normalize();U.encode=e;U.decode=d;return this};p.unicode=function(){var e=U.encode;var d=U.decode;U.encode=o;U.decode=unescape;this.normalize();U.encode=e;U.decode=d;return this};p.readable=function(){var c=this.clone();c.username("").password("").normalize();var t='';if(c._parts.protocol){t+=c._parts.protocol+'://'}if(c._parts.hostname){if(c.is('punycode')&&a){t+=a.toUnicode(c._parts.hostname);if(c._parts.port){t+=":"+c._parts.port}}else{t+=c.host()}}if(c._parts.hostname&&c._parts.path&&c._parts.path.charAt(0)!=='/'){t+='/'}t+=c.path(true);if(c._parts.query){var q='';for(var i=0,d=c._parts.query.split('&'),l=d.length;i<l;i++){var e=(d[i]||"").split('=');q+='&'+U.decodeQuery(e[0],this._parts.escapeQuerySpace).replace(/&/g,'%26');if(e[1]!==undefined){q+="="+U.decodeQuery(e[1],this._parts.escapeQuerySpace).replace(/&/g,'%26')}}t+='?'+q.substring(1)}t+=U.decodeQuery(c.hash(),true);return t};p.absoluteTo=function(c){var d=this.clone();var e=['protocol','username','password','hostname','port'];var l,i,p;if(this._parts.urn){throw new Error('URNs do not have any generally defined hierarchical components')}if(!(c instanceof U)){c=new U(c)}if(!d._parts.protocol){d._parts.protocol=c._parts.protocol}if(this._parts.hostname){return d}for(i=0;p=e[i];i++){d._parts[p]=c._parts[p]}e=['query','path'];for(i=0;p=e[i];i++){if(!d._parts[p]&&c._parts[p]){d._parts[p]=c._parts[p]}}if(d.path().charAt(0)!=='/'){l=c.directory();d._parts.path=(l?(l+'/'):'')+d._parts.path;d.normalizePath()}d.build();return d};p.relativeTo=function(c){var d=this.clone().normalize();var e,i,l,s,t;if(d._parts.urn){throw new Error('URNs do not have any generally defined hierarchical components')}c=new U(c).normalize();e=d._parts;i=c._parts;s=d.path();t=c.path();if(s.charAt(0)!=='/'){throw new Error('URI is already relative')}if(t.charAt(0)!=='/'){throw new Error('Cannot calculate a URI relative to another relative URI')}if(e.protocol===i.protocol){e.protocol=null}if(e.username!==i.username||e.password!==i.password){return d.build()}if(e.protocol!==null||e.username!==null||e.password!==null){return d.build()}if(e.hostname===i.hostname&&e.port===i.port){e.hostname=null;e.port=null}else{return d.build()}if(s===t){e.path='';return d.build()}l=U.commonPath(d.path(),c.path());if(!l){return d.build()}var v=i.path.substring(l.length).replace(/[^\/]*$/,'').replace(/.*?\//g,'../');e.path=v+e.path.substring(l.length);return d.build()};p.equals=function(c){var d=this.clone();var t=new U(c);var e={};var i={};var l={};var s,v,x;d.normalize();t.normalize();if(d.toString()===t.toString()){return true}s=d.query();v=t.query();d.query("");t.query("");if(d.toString()!==t.toString()){return false}if(s.length!==v.length){return false}e=U.parseQuery(s,this._parts.escapeQuerySpace);i=U.parseQuery(v,this._parts.escapeQuerySpace);for(x in e){if(h.call(e,x)){if(!f(e[x])){if(e[x]!==i[x]){return false}}else if(!m(e[x],i[x])){return false}l[x]=true}}for(x in i){if(h.call(i,x)){if(!l[x]){return false}}}return true};p.duplicateQueryParameters=function(v){this._parts.duplicateQueryParameters=!!v;return this};p.escapeQuerySpace=function(v){this._parts.escapeQuerySpace=!!v;return this};return U}));
/* Copyright Google Inc.
 * Licensed under the Apache Licence Version 2.0
 * Autogenerated at Tue May 22 10:18:21 PDT 2012
 * \@overrides window
 * \@provides cssSchema, CSS_PROP_BIT_QUANTITY, CSS_PROP_BIT_HASH_VALUE, CSS_PROP_BIT_NEGATIVE_QUANTITY, CSS_PROP_BIT_QSTRING_CONTENT, CSS_PROP_BIT_QSTRING_URL, CSS_PROP_BIT_HISTORY_INSENSITIVE, CSS_PROP_BIT_Z_INDEX, CSS_PROP_BIT_ALLOWED_IN_LINK */
var CSS_PROP_BIT_QUANTITY=1;var CSS_PROP_BIT_HASH_VALUE=2;var CSS_PROP_BIT_NEGATIVE_QUANTITY=4;var CSS_PROP_BIT_QSTRING_CONTENT=8;var CSS_PROP_BIT_QSTRING_URL=16;var CSS_PROP_BIT_HISTORY_INSENSITIVE=32;var CSS_PROP_BIT_Z_INDEX=64;var CSS_PROP_BIT_ALLOWED_IN_LINK=128;var cssSchema=(function(){var s=['rgb(?:\\(\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)|a\\(\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0|\\d+(?:\\.\\d+)?%)\\s*,\\s*(?:\\d+|0(?:\\.\\d+)?|\\.\\d+|1(?:\\.0+)?|0|\\d+(?:\\.\\d+)?%)) *\\)'],c=[/^ *$/i,RegExp('^ *(?:\\s*'+s[0]+'|(?:\\s*'+s[0]+')?)+ *$','i'),RegExp('^ *\\s*'+s[0]+' *$','i'),RegExp('^ *\\s*'+s[0]+'\\s*'+s[0]+' *$','i')],L=[['aliceblue','antiquewhite','aqua','aquamarine','azure','beige','bisque','black','blanchedalmond','blue','blueviolet','brown','burlywood','cadetblue','chartreuse','chocolate','coral','cornflowerblue','cornsilk','crimson','cyan','darkblue','darkcyan','darkgoldenrod','darkgray','darkgreen','darkkhaki','darkmagenta','darkolivegreen','darkorange','darkorchid','darkred','darksalmon','darkseagreen','darkslateblue','darkslategray','darkturquoise','darkviolet','deeppink','deepskyblue','dimgray','dodgerblue','firebrick','floralwhite','forestgreen','fuchsia','gainsboro','ghostwhite','gold','goldenrod','gray','green','greenyellow','honeydew','hotpink','indianred','indigo','ivory','khaki','lavender','lavenderblush','lawngreen','lemonchiffon','lightblue','lightcoral','lightcyan','lightgoldenrodyellow','lightgreen','lightgrey','lightpink','lightsalmon','lightseagreen','lightskyblue','lightslategray','lightsteelblue','lightyellow','lime','limegreen','linen','magenta','maroon','mediumaquamarine','mediumblue','mediumorchid','mediumpurple','mediumseagreen','mediumslateblue','mediumspringgreen','mediumturquoise','mediumvioletred','midnightblue','mintcream','mistyrose','moccasin','navajowhite','navy','oldlace','olive','olivedrab','orange','orangered','orchid','palegoldenrod','palegreen','paleturquoise','palevioletred','papayawhip','peachpuff','peru','pink','plum','powderblue','purple','red','rosybrown','royalblue','saddlebrown','salmon','sandybrown','seagreen','seashell','sienna','silver','skyblue','slateblue','slategray','snow','springgreen','steelblue','tan','teal','thistle','tomato','turquoise','violet','wheat','white','whitesmoke','yellow','yellowgreen'],['all-scroll','col-resize','crosshair','default','e-resize','hand','help','move','n-resize','ne-resize','no-drop','not-allowed','nw-resize','pointer','progress','row-resize','s-resize','se-resize','sw-resize','text','vertical-text','w-resize','wait'],['-moz-inline-box','-moz-inline-stack','block','inline','inline-block','inline-table','list-item','run-in','table','table-caption','table-cell','table-column','table-column-group','table-footer-group','table-header-group','table-row','table-row-group'],['armenian','circle','decimal','decimal-leading-zero','disc','georgian','lower-alpha','lower-greek','lower-latin','lower-roman','square','upper-alpha','upper-latin','upper-roman'],['100','200','300','400','500','600','700','800','900','bold','bolder','lighter'],['condensed','expanded','extra-condensed','extra-expanded','narrower','semi-condensed','semi-expanded','ultra-condensed','ultra-expanded','wider'],['behind','center-left','center-right','far-left','far-right','left-side','leftwards','right-side','rightwards'],['large','larger','small','smaller','x-large','x-small','xx-large','xx-small'],['-moz-pre-wrap','-o-pre-wrap','-pre-wrap','nowrap','pre','pre-line','pre-wrap'],['dashed','dotted','double','groove','outset','ridge','solid'],['baseline','middle','sub','super','text-bottom','text-top'],['caption','icon','menu','message-box','small-caption','status-bar'],['fast','faster','slow','slower','x-fast','x-slow'],['above','below','higher','level','lower'],['border-box','contain','content-box','cover','padding-box'],['cursive','fantasy','monospace','sans-serif','serif'],['loud','silent','soft','x-loud','x-soft'],['no-repeat','repeat-x','repeat-y','round','space'],['blink','line-through','overline','underline'],['high','low','x-high','x-low'],['absolute','relative','static'],['capitalize','lowercase','uppercase'],['child','female','male'],['bidi-override','embed'],['bottom','top'],['clip','ellipsis'],['continuous','digits'],['hide','show'],['inside','outside'],['italic','oblique'],['left','right'],['ltr','rtl'],['no-content','no-display'],['suppress','unrestricted'],['thick','thin'],[','],['/'],['always'],['auto'],['avoid'],['both'],['break-word'],['center'],['code'],['collapse'],['fixed'],['hidden'],['inherit'],['inset'],['invert'],['justify'],['local'],['medium'],['mix'],['none'],['normal'],['once'],['repeat'],['scroll'],['separate'],['small-caps'],['spell-out'],['transparent'],['visible']];return{'-moz-border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'-moz-border-radius-bottomleft':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-bottomright':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-topleft':{'cssExtra':c[0],'cssPropBits':5},'-moz-border-radius-topright':{'cssExtra':c[0],'cssPropBits':5},'-moz-box-shadow':{'cssExtra':c[1],'cssAlternates':['boxShadow'],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'-moz-opacity':{'cssPropBits':1,'cssLitGroup':[L[47]]},'-moz-outline':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[49],L[52],L[54]]},'-moz-outline-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[49]]},'-moz-outline-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'-moz-outline-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'-o-text-overflow':{'cssPropBits':0,'cssLitGroup':[L[25]]},'-webkit-border-bottom-left-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-bottom-right-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'-webkit-border-radius-bottom-left':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-bottom-right':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-top-left':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-radius-top-right':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-top-left-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-border-top-right-radius':{'cssExtra':c[0],'cssPropBits':5},'-webkit-box-shadow':{'cssExtra':c[1],'cssAlternates':['boxShadow'],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'azimuth':{'cssPropBits':5,'cssLitGroup':[L[6],L[30],L[42],L[47]]},'background':{'cssExtra':RegExp('^ *(?:\\s*'+s[0]+'){0,2} *$','i'),'cssPropBits':23,'cssLitGroup':[L[0],L[14],L[17],L[24],L[30],L[35],L[36],L[38],L[42],L[45],L[47],L[51],L[54],L[57],L[58],L[62]]},'background-attachment':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[35],L[45],L[51],L[58]]},'background-color':{'cssExtra':c[2],'cssPropBits':130,'cssLitGroup':[L[0],L[47],L[62]]},'background-image':{'cssExtra':c[0],'cssPropBits':16,'cssLitGroup':[L[35],L[54]]},'background-position':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[24],L[30],L[35],L[42]]},'background-repeat':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[17],L[35],L[57]]},'border':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-bottom':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-bottom-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-bottom-left-radius':{'cssExtra':c[0],'cssPropBits':5},'border-bottom-right-radius':{'cssExtra':c[0],'cssPropBits':5},'border-bottom-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-bottom-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-collapse':{'cssPropBits':0,'cssLitGroup':[L[44],L[47],L[59]]},'border-color':{'cssExtra':RegExp('^ *(?:\\s*'+s[0]+'){1,4} *$','i'),'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-left':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-left-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-left-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-left-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-radius':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[36]]},'border-right':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-right-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-right-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-right-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-spacing':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47]]},'border-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-top':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[52],L[54],L[62]]},'border-top-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[62]]},'border-top-left-radius':{'cssExtra':c[0],'cssPropBits':5},'border-top-right-radius':{'cssExtra':c[0],'cssPropBits':5},'border-top-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'border-top-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'border-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'bottom':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'box-shadow':{'cssExtra':c[1],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'caption-side':{'cssPropBits':0,'cssLitGroup':[L[24],L[47]]},'clear':{'cssPropBits':0,'cssLitGroup':[L[30],L[40],L[47],L[54]]},'clip':{'cssExtra':/^ *\s*rect\(\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto)\s*,\s*(?:0|[+\-]?\d+(?:\.\d+)?(?:[cem]m|ex|in|p[ctx])|auto) *\) *$/i,'cssPropBits':0,'cssLitGroup':[L[38],L[47]]},'color':{'cssExtra':c[2],'cssPropBits':130,'cssLitGroup':[L[0],L[47]]},'content':{'cssPropBits':0},'counter-increment':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47],L[54]]},'counter-reset':{'cssExtra':c[0],'cssPropBits':5,'cssLitGroup':[L[47],L[54]]},'cue':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cue-after':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cue-before':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'cursor':{'cssExtra':c[0],'cssPropBits':144,'cssLitGroup':[L[1],L[35],L[38],L[47]]},'direction':{'cssPropBits':0,'cssLitGroup':[L[31],L[47]]},'display':{'cssPropBits':32,'cssLitGroup':[L[2],L[47],L[54]]},'elevation':{'cssPropBits':5,'cssLitGroup':[L[13],L[47]]},'empty-cells':{'cssPropBits':0,'cssLitGroup':[L[27],L[47]]},'filter':{'cssExtra':/^ *(?:\s*alpha\(\s*opacity\s*=\s*(?:0|\d+(?:\.\d+)?%|[+\-]?\d+(?:\.\d+)?) *\))+ *$/i,'cssPropBits':32},'float':{'cssAlternates':['cssFloat','styleFloat'],'cssPropBits':32,'cssLitGroup':[L[30],L[47],L[54]]},'font':{'cssExtra':c[0],'cssPropBits':9,'cssLitGroup':[L[4],L[7],L[11],L[15],L[29],L[35],L[36],L[47],L[52],L[55],L[60]]},'font-family':{'cssExtra':c[0],'cssPropBits':8,'cssLitGroup':[L[15],L[35],L[47]]},'font-size':{'cssPropBits':1,'cssLitGroup':[L[7],L[47],L[52]]},'font-stretch':{'cssPropBits':0,'cssLitGroup':[L[5],L[55]]},'font-style':{'cssPropBits':0,'cssLitGroup':[L[29],L[47],L[55]]},'font-variant':{'cssPropBits':0,'cssLitGroup':[L[47],L[55],L[60]]},'font-weight':{'cssPropBits':0,'cssLitGroup':[L[4],L[47],L[55]]},'height':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'left':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'letter-spacing':{'cssPropBits':5,'cssLitGroup':[L[47],L[55]]},'line-height':{'cssPropBits':1,'cssLitGroup':[L[47],L[55]]},'list-style':{'cssPropBits':16,'cssLitGroup':[L[3],L[28],L[47],L[54]]},'list-style-image':{'cssPropBits':16,'cssLitGroup':[L[47],L[54]]},'list-style-position':{'cssPropBits':0,'cssLitGroup':[L[28],L[47]]},'list-style-type':{'cssPropBits':0,'cssLitGroup':[L[3],L[47],L[54]]},'margin':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-bottom':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-left':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-right':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'margin-top':{'cssPropBits':5,'cssLitGroup':[L[38],L[47]]},'max-height':{'cssPropBits':1,'cssLitGroup':[L[38],L[47],L[54]]},'max-width':{'cssPropBits':1,'cssLitGroup':[L[38],L[47],L[54]]},'min-height':{'cssPropBits':1,'cssLitGroup':[L[38],L[47]]},'min-width':{'cssPropBits':1,'cssLitGroup':[L[38],L[47]]},'opacity':{'cssPropBits':33,'cssLitGroup':[L[47]]},'outline':{'cssExtra':c[3],'cssPropBits':7,'cssLitGroup':[L[0],L[9],L[34],L[46],L[47],L[48],L[49],L[52],L[54]]},'outline-color':{'cssExtra':c[2],'cssPropBits':2,'cssLitGroup':[L[0],L[47],L[49]]},'outline-style':{'cssPropBits':0,'cssLitGroup':[L[9],L[46],L[47],L[48],L[54]]},'outline-width':{'cssPropBits':5,'cssLitGroup':[L[34],L[47],L[52]]},'overflow':{'cssPropBits':32,'cssLitGroup':[L[38],L[46],L[47],L[58],L[63]]},'overflow-x':{'cssPropBits':0,'cssLitGroup':[L[32],L[38],L[46],L[58],L[63]]},'overflow-y':{'cssPropBits':0,'cssLitGroup':[L[32],L[38],L[46],L[58],L[63]]},'padding':{'cssPropBits':1,'cssLitGroup':[L[47]]},'padding-bottom':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-left':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-right':{'cssPropBits':33,'cssLitGroup':[L[47]]},'padding-top':{'cssPropBits':33,'cssLitGroup':[L[47]]},'page-break-after':{'cssPropBits':0,'cssLitGroup':[L[30],L[37],L[38],L[39],L[47]]},'page-break-before':{'cssPropBits':0,'cssLitGroup':[L[30],L[37],L[38],L[39],L[47]]},'page-break-inside':{'cssPropBits':0,'cssLitGroup':[L[38],L[39],L[47]]},'pause':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pause-after':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pause-before':{'cssPropBits':5,'cssLitGroup':[L[47]]},'pitch':{'cssPropBits':5,'cssLitGroup':[L[19],L[47],L[52]]},'pitch-range':{'cssPropBits':5,'cssLitGroup':[L[47]]},'play-during':{'cssExtra':c[0],'cssPropBits':16,'cssLitGroup':[L[38],L[47],L[53],L[54],L[57]]},'position':{'cssPropBits':32,'cssLitGroup':[L[20],L[47]]},'quotes':{'cssExtra':c[0],'cssPropBits':0,'cssLitGroup':[L[47],L[54]]},'richness':{'cssPropBits':5,'cssLitGroup':[L[47]]},'right':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'speak':{'cssPropBits':0,'cssLitGroup':[L[47],L[54],L[55],L[61]]},'speak-header':{'cssPropBits':0,'cssLitGroup':[L[37],L[47],L[56]]},'speak-numeral':{'cssPropBits':0,'cssLitGroup':[L[26],L[47]]},'speak-punctuation':{'cssPropBits':0,'cssLitGroup':[L[43],L[47],L[54]]},'speech-rate':{'cssPropBits':5,'cssLitGroup':[L[12],L[47],L[52]]},'stress':{'cssPropBits':5,'cssLitGroup':[L[47]]},'table-layout':{'cssPropBits':0,'cssLitGroup':[L[38],L[45],L[47]]},'text-align':{'cssPropBits':0,'cssLitGroup':[L[30],L[42],L[47],L[50]]},'text-decoration':{'cssPropBits':0,'cssLitGroup':[L[18],L[47],L[54]]},'text-indent':{'cssPropBits':5,'cssLitGroup':[L[47]]},'text-overflow':{'cssPropBits':0,'cssLitGroup':[L[25]]},'text-shadow':{'cssExtra':c[1],'cssPropBits':7,'cssLitGroup':[L[0],L[35],L[48],L[54]]},'text-transform':{'cssPropBits':0,'cssLitGroup':[L[21],L[47],L[54]]},'text-wrap':{'cssPropBits':0,'cssLitGroup':[L[33],L[54],L[55]]},'top':{'cssPropBits':37,'cssLitGroup':[L[38],L[47]]},'unicode-bidi':{'cssPropBits':0,'cssLitGroup':[L[23],L[47],L[55]]},'vertical-align':{'cssPropBits':5,'cssLitGroup':[L[10],L[24],L[47]]},'visibility':{'cssPropBits':32,'cssLitGroup':[L[44],L[46],L[47],L[63]]},'voice-family':{'cssExtra':c[0],'cssPropBits':8,'cssLitGroup':[L[22],L[35],L[47]]},'volume':{'cssPropBits':1,'cssLitGroup':[L[16],L[47],L[52]]},'white-space':{'cssPropBits':0,'cssLitGroup':[L[8],L[47],L[55]]},'width':{'cssPropBits':33,'cssLitGroup':[L[38],L[47]]},'word-spacing':{'cssPropBits':5,'cssLitGroup':[L[47],L[55]]},'word-wrap':{'cssPropBits':0,'cssLitGroup':[L[41],L[55]]},'z-index':{'cssPropBits':69,'cssLitGroup':[L[38],L[47]]},'zoom':{'cssPropBits':1,'cssLitGroup':[L[55]]}}})();if(typeof window!=='undefined'){window['cssSchema']=cssSchema}
// Copyright (C) 2011 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var lexCss;var decodeCss;(function(){function d(s){var i=parseInt(s.substring(1),16);if(i>0xffff){return i-=0x10000,String.fromCharCode(0xd800+(i>>10),0xdc00+(i&0x3FF))}else if(i==i){return String.fromCharCode(i)}else if(s[1]<' '){return''}else{return s[1]}}function e(s,i){return'"'+s.replace(/[\u0000-\u001f\\\"<>]/g,i)+'"'}function a(i){return c[i]||(c[i]='\\'+i.charCodeAt(0).toString(16)+' ')}function b(i){return f[i]||(f[i]=(i<'\x10'?'%0':'%')+i.charCodeAt(0).toString(16))}var c={'\\':'\\\\'};var f={'\\':'%5c'};var g='[\\t\\n\\f ]';var W=g+'*';var N='[\\n\\f]';var h='[\\ud800-\\udbff][\\udc00-\\udfff]';var k='[\\u0080-\\ud7ff\\ue000-\\ufffd]|'+h;var U='[0-9a-fA-F]{1,6}'+g+'?';var l='\\\\'+U;var E='(?:'+U+'|[\\u0020-\\u007e\\u0080-\\ud7ff\\ue000\\ufffd]|'+h+')';var m='\\\\'+E;var o='(?:[\\t\\x21\\x23-\\x26\\x28-\\x5b\\x5d-\\x7e]|'+k+'|'+m+')';var p='[^\'"\\n\\f\\\\]|\\\\[\\s\\S]';var q='"(?:\'|'+p+')*"'+'|\'(?:\"|'+p+')*\'';var r='[-+]?(?:[0-9]+(?:[.][0-9]+)?|[.][0-9]+)';var t='(?:[a-zA-Z_]|'+k+'|'+m+')';var u='(?:[a-zA-Z0-9_-]|'+k+'|'+m+')';var v=u+'+';var I='-?'+t+u+'*';var A='@'+I;var H='#'+v;var w=r;var x='(?:@?-?'+t+'|#)'+u+'*';var P=r+'%';var D=r+I;var y=r+'(?:%|'+I+')?';var z='url[(]'+W+'(?:'+q+'|'+o+'*)'+W+'[)]';var B='U[+][0-9A-F?]{1,6}(?:-[0-9A-F]{1,6})?';var C='<\!--';var F='-->';var S=g+'+';var G='/(?:[*][^*]*[*]+(?:[^/][^*]*[*]+)*/|/[^\\n\\f]*)';var J='(?!url[(])'+I+'[(]';var K='~=';var L='[|]=';var M='[^]=';var O='[$]=';var Q='[*]=';var R='[~|^$*]=';var T='[^"\'\\\\/]|/(?![/*])';var V='\\uFEFF';var X=new RegExp([V,B,z,J,x,q,y,C,F,S,G,R,T].join("|"),'gi');decodeCss=function(i){return i.replace(new RegExp('\\\\(?:'+E+'|'+N+')','g'),d)};lexCss=function(s){s=''+s;var Y=s.replace(/\r\n?/g,'\n').match(X)||[];var j=0;var Z=' ';for(var i=0,n=Y.length;i<n;++i){var $=decodeCss(Y[i]);var _=$.length;var cc=$.charCodeAt(0);$=(cc=='"'.charCodeAt(0)||cc=='\''.charCodeAt(0))?e($.substring(1,_-1),a):(cc=='/'.charCodeAt(0)&&_>1||$=='\\'||$==F||$==C||$=='\ufeff'||cc<=' '.charCodeAt(0))?' ':/url\(/i.test($)?'url('+e($.replace(new RegExp('^url\\('+W+'["\']?|["\']?'+W+'\\)$','gi'),''),b)+')':$;if(Z!=$||$!=' '){Y[j++]=Z=$}}Y.length=j;return Y}})();if(typeof window!=='undefined'){window['lexCss']=lexCss;window['decodeCss']=decodeCss}
// Copyright (C) 2011 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var sanitizeCssProperty=(function(){var N='url("about:blank")';var a=/[\n\f\r\"\'()*<>]/g;var b={'\n':'%0a','\f':'%0c','\r':'%0d','"':'%22','\'':'%27','(':'%28',')':'%29','*':'%2a','<':'%3c','>':'%3e'};function c(s){if('string'===typeof s){return'url("'+s.replace(a,d)+'")'}else{return N}}function d(h){return b[h]}var U=new RegExp('^'+'(?:'+'([^:\/?# ]+)'+':)?');var A=/^(?:https?|mailto)$/i;function e(h,p,n){if(!n){return null}var i=(''+h).match(U);if(i&&(!i[1]||A.test(i[1]))){return n(h,p)}else{return null}}function u(h){var m={};for(var i=h.length;--i>=0;){var k=h[i];for(var j=k.length;--j>=0;){m[k[j]]=g}}return m}function f(t,s){var p=1,h=s+1,n=t.length;while(h<n&&p){var i=t[h++];p+=(i==='('?1:i===')'?-1:0)}return h}var g={};return function(p,h,t,o){var j=h.cssPropBits;var q=j&(CSS_PROP_BIT_QSTRING_CONTENT|CSS_PROP_BIT_QSTRING_URL);var l=NaN;var i=0,k=0;for(;i<t.length;++i){var m=t[i].toLowerCase();var n=m.charCodeAt(0),r,s,v,w,x;var y,z;m=((n===' '.charCodeAt(0))?'':(n==='"'.charCodeAt(0))?((q===CSS_PROP_BIT_QSTRING_URL&&o)?(c(e(decodeCss(t[i].substring(1,m.length-1)),p,o))):(q===CSS_PROP_BIT_QSTRING_CONTENT)?m:''):(n==='#'.charCodeAt(0)&&/^#(?:[0-9a-f]{3}){1,2}$/.test(m))?(j&CSS_PROP_BIT_HASH_VALUE?m:''):('0'.charCodeAt(0)<=n&&n<='9'.charCodeAt(0))?((j&CSS_PROP_BIT_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\d{1,7}$/)?m:''):m):''):(r=m.charCodeAt(1),s=m.charCodeAt(2),v='0'.charCodeAt(0)<=r&&r<='9'.charCodeAt(0),w='0'.charCodeAt(0)<=s&&s<='9'.charCodeAt(0),(n==='+'.charCodeAt(0)&&(v||(r==='.'.charCodeAt(0)&&w))))?((j&CSS_PROP_BIT_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\+\d{1,7}$/)?m:''):((v?'':'0')+m.substring(1))):''):(n==='-'.charCodeAt(0)&&(v||(r==='.'.charCodeAt(0)&&w)))?((j&CSS_PROP_BIT_NEGATIVE_QUANTITY)?((j&CSS_PROP_BIT_Z_INDEX)?(m.match(/^\-\d{1,7}$/)?m:''):((v?'-':'-0')+m.substring(1))):((j&CSS_PROP_BIT_QUANTITY)?'0':'')):(n==='.'.charCodeAt(0)&&v)?((j&CSS_PROP_BIT_QUANTITY)?'0'+m:''):('url('===m.substring(0,4))?((o&&(q&CSS_PROP_BIT_QSTRING_URL))?c(e(t[i].substring(5,m.length-2),p,o)):''):((m.charAt(m.length-1)==='(')&&(x=f(t,i),t.splice(i,x-i,m=t.slice(i,x).join(' '))),y=h.cssLitGroup,z=(y?(h.cssLitMap||(h.cssLitMap=u(y))):g),(z[m]===g||h.cssExtra&&h.cssExtra.test(m)))?m:(/^\w+$/.test(m)&&(q===CSS_PROP_BIT_QSTRING_CONTENT))?(l+1===k?(t[l]=t[l].substring(0,t[l].length-1)+' '+m+'"',m=''):(l=k,'"'+m+'"')):'');if(m){t[k++]=m}}if(k===1&&t[0]===N){k=0}t.length=k}})();
function sanitizeCssSelectors(s,a){var h=[];var b=[];var k=0,i;for(i=0;i<s.length;++i){if(!(s[i]==' '&&(s[i-1]=='>'||s[i+1]=='>'))){s[k++]=s[i]}}s.length=k;var n=s.length,c=0;for(i=0;i<n;++i){if(s[i]==','){p(c,i);c=i+1}}p(c,n);function p(c,e){var d=false;if(s[c]===' '){++c}if(e-1!==c&&s[e]===' '){--e}var o=[];var l=c;var f='';for(var i=c;i<e;++i){var t=s[i];var g=(t==='>');if(g||t===' '){f=j(l,i,false);if(!f||(g&&/^html/i.test(f))){return}l=i+1;o.push(f,g?' > ':' ')}}f=j(l,e,true);if(!f){return}o.push(f);function j(c,e,q){var r=c,u=e;var v,w,x,t,y;v='';if(c<e){t=s[c].toLowerCase();if(t==='*'||(t==='body'&&c+1!==e&&!q)||('number'===typeof(y=html4.ELEMENTS[t])&&!(y&html4.eflags.UNSAFE))){++c;v=t}}w='';while(c<e){t=s[c];if(t.charAt(0)==='#'){if(/^#_|__$|[^#0-9A-Za-z:_\-]/.test(t)){return null}w+=t+'-'+a}else if(t==='.'){if(++c<e&&/^[0-9A-Za-z:_\-]+$/.test(t=s[c])&&!/^_|__$/.test(t)){w+='.'+t}else{return null}}else{break}++c}x='';if(c<e&&s[c]===':'){t=s[++c];if(t==='visited'||t==='link'){if(!/^[a*]?$/.test(v)){return null}d=true;x=':'+t;v='a';++c}}if(c===e){return v+w+x}return null}var m=o.join('');if(/^body\b/.test(m)){m='.vdoc-body___.'+a+m.substring(4)}else{m='.'+a+' '+m}(d?h:b).push(m)}return[b,h]}
var sanitizeStylesheet=(function(){var a={};var c={'braille':a,'embossed':a,'handheld':a,'print':a,'projection':a,'screen':a,'speech':a,'tty':a,'tv':a};function s(b){var e=false;for(var i=0,n=b.length;i<n-1;++i){var t=b[i];if(':'===b[i+1]){e=!(cssSchema[t].cssPropBits&CSS_PROP_BIT_ALLOWED_IN_LINK)}if(e){b[i]=''}if(';'===t){e=false}}return b.join('')}return function(b,d,o){var e=void 0;var f=[];var g=false;parseCssStylesheet(b,{startStylesheet:function(){e=[]},endStylesheet:function(){},startAtrule:function(i,j){if(g){i=null}else if(i==='@media'){j=j.filter(function(m){return c[m]==a});if(j.length){e.push(i,j.join(','),'{')}else{i=null}}else{if(i==='@import'){if(window.console){window.console.log('@import '+j.join(' ')+' elided')}}i=null}g=!i;f.push(i)},endAtrule:function(){var i=f.pop();if(!g){e.push(';')}h()},startBlock:function(){if(!g){e.push('{')}},endBlock:function(){if(!g){e.push('}');g=true}},startRuleset:function(i){var j=void 0;var r=false;if(!g){var k=sanitizeCssSelectors(i,d);var l=k[0];j=k[1];if(!l.length&&!j.length){g=true}else{var m=l.join(', ');if(!m){m='head > html';r=true}e.push(m,'{')}}f.push(g?null:{historySensitiveSelectors:j,endOfSelectors:e.length-1,removeHistoryInsensitiveSelectors:r})},endRuleset:function(){var r=f.pop();var p=e.length;if(!g){e.push('}');if(r){var i=r.historySensitiveSelectors;if(i.length){var j=e.slice(r.endOfSelectors);e.push(i.join(', '),s(j))}}}if(r&&r.removeHistoryInsensitiveSelectors){e.splice(r.endOfSelectors-1,p+1)}h()},declaration:function(p,v){if(!g){var i=cssSchema[p];if(i){sanitizeCssProperty(p,i,v,o);if(v.length){e.push(p,':',v.join(' '),';')}}}}});function h(){g=f.length!==0&&f[f.length-1]!==null}return e.join('')}})();if(typeof window!=='undefined'){window['sanitizeCssProperty']=sanitizeCssProperty;window['sanitizeCssSelectors']=sanitizeCssSelectors;window['sanitizeStylesheet']=sanitizeStylesheet}
// Copyright (C) 2010 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var parseCssStylesheet;var parseCssDeclarations;(function(){parseCssStylesheet=function(e,h){var t=lexCss(e);if(h.startStylesheet){h.startStylesheet()}for(var i=0,n=t.length;i<n;){i=t[i]===' '?i+1:a(t,i,n,h)}if(h.endStylesheet){h.endStylesheet()}};function a(t,i,n,h){if(i<n){var e=t[i];if(e.charAt(0)==='@'){return b(t,i,n,h,true)}else{return r(t,i,n,h)}}else{return i}}function b(t,i,n,h,j){var k=i++;while(i<n&&t[i]!=='{'&&t[i]!==';'){++i}if(i<n&&(j||t[i]===';')){var s=k+1,e=i;if(s<n&&t[s]===' '){++s}if(e>s&&t[e-1]===' '){--e}if(h.startAtrule){h.startAtrule(t[k].toLowerCase(),t.slice(s,e))}i=(t[i]==='{')?c(t,i,n,h):i+1;if(h.endAtrule){h.endAtrule()}}return i}function c(t,i,n,h){++i;if(h.startBlock){h.startBlock()}while(i<n){var e=t[i].charAt(0);if(e=='}'){++i;break}if(e===' '||e===';'){i=i+1}else if(e==='@'){i=b(t,i,n,h,false)}else if(e==='{'){i=c(t,i,n,h)}else{i=r(t,i,n,h)}}if(h.endBlock){h.endBlock()}return i}function r(t,i,n,h){var s=i,e=d(t,i,n,true);if(e<0){e=~e;return i===e?e+1:e}i=e;if(e>s&&t[e-1]===' '){--e}var j=t[i];++i;if(j!=='{'){return i}if(h.startRuleset){h.startRuleset(t.slice(s,e))}while(i<n){j=t[i];if(j==='}'){++i;break}if(j===' '){i=i+1}else{i=g(t,i,n,h)}}if(h.endRuleset){h.endRuleset()}return i<n?i+1:i}function d(t,i,n,e){var s=i;var h;var j=[],k=-1;for(;i<n;++i){h=t[i].charAt(0);if(h==='['||h==='('){j[++k]=h}else if((h===']'&&j[k]==='[')||(h===')'&&j[k]==='(')){--k}else if(h==='{'||h==='}'||h===';'||h==='@'||(h===':'&&!e)){break}}if(k>=0){i=~(i+1)}return i}var f=/^-?[a-z]/i;function g(t,i,n,h){var p=t[i++];if(!f.test(p)){return i+1}var k;if(i<n&&t[i]===' '){++i}if(i==n||t[i]!==':'){while(i<n&&(k=t[i])!==';'&&k!=='}'){++i}return i}++i;if(i<n&&t[i]===' '){++i}var s=i,e=d(t,i,n,false);if(e<0){e=~e}else{var v=[],l=0;for(var j=s;j<e;++j){k=t[j];if(k!==' '){v[l++]=k}}if(e<n){do{k=t[e];if(k===';'||k==='}'){break}l=0}while(++e<n);if(k===';'){++e}}if(l&&h.declaration){h.declaration(p.toLowerCase(),v)}}return e}parseCssDeclarations=function(e,h){var t=lexCss(e);for(var i=0,n=t.length;i<n;){i=t[i]!==' '?g(t,i,n,h):i+1}}})();if(typeof window!=='undefined'){window['parseCssStylesheet']=parseCssStylesheet;window['parseCssDeclarations']=parseCssDeclarations}
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var html4={};html4.atype={NONE:0,URI:1,URI_FRAGMENT:11,SCRIPT:2,STYLE:3,ID:4,IDREF:5,IDREFS:6,GLOBAL_NAME:7,LOCAL_NAME:8,CLASSES:9,FRAME_TARGET:10};html4.ATTRIBS={'*::accesskey':0,'*::class':9,'*::contenteditable':0,'*::contextmenu':0,'*::dir':0,'*::draggable':0,'*::dropzone':0,'*::hidden':0,'*::id':4,'*::lang':0,'*::onabort':2,'*::onblur':2,'*::oncanplay':2,'*::oncanplaythrough':2,'*::onchange':2,'*::onclick':2,'*::oncontextmenu':2,'*::oncuechange':2,'*::ondblclick':2,'*::ondrag':2,'*::ondragend':2,'*::ondragenter':2,'*::ondragleave':2,'*::ondragover':2,'*::ondragstart':2,'*::ondrop':2,'*::ondurationchange':2,'*::onemptied':2,'*::onended':2,'*::onerror':2,'*::onfocus':2,'*::oninput':2,'*::oninvalid':2,'*::onkeydown':2,'*::onkeypress':2,'*::onkeyup':2,'*::onload':2,'*::onloadeddata':2,'*::onloadedmetadata':2,'*::onloadstart':2,'*::onmousedown':2,'*::onmousemove':2,'*::onmouseout':2,'*::onmouseover':2,'*::onmouseup':2,'*::onmousewheel':2,'*::onpause':2,'*::onplay':2,'*::onplaying':2,'*::onprogress':2,'*::onratechange':2,'*::onreadystatechange':2,'*::onreset':2,'*::onscroll':2,'*::onseeked':2,'*::onseeking':2,'*::onselect':2,'*::onshow':2,'*::onstalled':2,'*::onsubmit':2,'*::onsuspend':2,'*::ontimeupdate':2,'*::onvolumechange':2,'*::onwaiting':2,'*::spellcheck':0,'*::style':3,'*::tabindex':0,'*::title':0,'a::href':1,'a::hreflang':0,'a::media':0,'a::rel':0,'a::target':0,'a::type':0,'area::alt':0,'area::coords':0,'area::href':1,'area::hreflang':0,'area::media':0,'area::rel':0,'area::shape':0,'area::target':10,'area::type':0,'audio::autoplay':0,'audio::controls':0,'audio::loop':0,'audio::mediagroup':0,'audio::preload':0,'audio::src':1,'base::href':1,'base::target':10,'blockquote::cite':1,'body::onafterprint':2,'body::onbeforeprint':2,'body::onbeforeunload':2,'body::onblur':2,'body::onerror':2,'body::onfocus':2,'body::onhashchange':2,'body::onload':2,'body::onmessage':2,'body::onoffline':2,'body::ononline':2,'body::onpagehide':2,'body::onpageshow':2,'body::onpopstate':2,'body::onredo':2,'body::onresize':2,'body::onscroll':2,'body::onstorage':2,'body::onundo':2,'body::onunload':2,'button::autofocus':0,'button::disabled':0,'button::form':0,'button::formaction':1,'button::formenctype':0,'button::formmethod':0,'button::formnovalidate':0,'button::formtarget':10,'button::name':8,'button::type':0,'button::value':0,'canvas::height':0,'canvas::width':0,'col::span':0,'colgroup::span':0,'command::checked':0,'command::disabled':0,'command::icon':1,'command::label':0,'command::radiogroup':0,'command::type':0,'del::cite':1,'del::datetime':0,'details::open':0,'embed::height':0,'embed::src':1,'embed::type':0,'embed::width':0,'fieldset::disabled':0,'fieldset::form':0,'fieldset::name':8,'form::accept-charset':0,'form::action':1,'form::autocomplete':0,'form::enctype':0,'form::method':0,'form::name':7,'form::novalidate':0,'form::target':10,'html:: manifest':1,'iframe::height':0,'iframe::name':7,'iframe::sandbox':0,'iframe::seamless':0,'iframe::src':1,'iframe::srcdoc':10,'iframe::width':0,'img::alt':0,'img::height':0,'img::ismap':0,'img::name':7,'img::src':1,'img::usemap':11,'img::width':0,'input::accept':0,'input::alt':0,'input::autocomplete':0,'input::autofocus':0,'input::checked':0,'input::dirname':0,'input::disabled':0,'input::form':0,'input::formaction':1,'input::formenctype':0,'input::formmethod':0,'input::formnovalidate':0,'input::formtarget':10,'input::height':0,'input::list':0,'input::max':0,'input::maxlength':0,'input::min':0,'input::multiple':0,'input::name':8,'input::pattern':0,'input::placeholder':0,'input::readonly':0,'input::required':0,'input::step':0,'input::size':0,'input::src':1,'input::type':0,'input::value':0,'input::width':0,'ins::cite':1,'ins::datetime':0,'keygen::autofocus':0,'keygen::challenge':0,'keygen::disabled':0,'keygen::form':0,'keygen::keytype':0,'keygen::name':8,'label::for':5,'label::form':0,'link::href':1,'link::hreflang':0,'link::media':0,'link::rel':0,'link::sizes':0,'link::type':0,'li::value':0,'map::name':7,'menu::label':0,'menu::type':0,'meta::charset':0,'meta::content':0,'meta::http-equiv':0,'meta::name':7,'meter::form':0,'meter::high':0,'meter::low':0,'meter::max':0,'meter::min':0,'meter::optimum':0,'meter::value':0,'object::data':1,'object::form':0,'object::height':0,'object::name':8,'object::type':0,'object::usemap':11,'object::width':0,'ol::reversed':0,'ol::start':0,'optgroup::disabled':0,'optgroup::label':0,'option::disabled':0,'option::label':0,'option::selected':0,'option::value':0,'output::for':5,'output::form':0,'output::name':8,'param::name':8,'param::value':0,'progress::form':0,'progress::max':0,'progress::value':0,'q::cite':1,'script::async':0,'script::charset':0,'script::defer':0,'script::src':1,'script::type':0,'select::autofocus':0,'select::disabled':0,'select::form':0,'select::multiple':0,'select::name':8,'select::required':0,'select::size':0,'source::media':0,'source::src':1,'source::type':0,'style::media':0,'style::scoped':0,'style::type':0,'table::border':0,'td::colspan':0,'td::headers':6,'td::rowspan':0,'textarea::autofocus':0,'textarea::cols':0,'textarea::disabled':0,'textarea::form':0,'textarea::maxlength':0,'textarea::name':8,'textarea::placeholder':0,'textarea::readonly':0,'textarea::required':0,'textarea::rows':0,'textarea::wrap':0,'th::colspan':0,'th::headers':6,'th::rowspan':0,'th::scope':0,'time::datetime':0,'time::pubdate':0,'track::default':0,'track::kind':0,'track::label':0,'track::src':1,'track::srclang':0,'video::autoplay':0,'video::controls':0,'video::height':0,'video::loop':0,'video::mediagroup':0,'video::poster':1,'video::preload':0,'video::src':1,'video::width':0};html4.eflags={OPTIONAL_ENDTAG:1,EMPTY:2,CDATA:4,RCDATA:8,UNSAFE:16,FOLDABLE:32,SCRIPT:64,STYLE:128};html4.ELEMENTS={'a':0,'abbr':0,'address':0,'area':2,'article':0,'aside':0,'audio':0,'b':0,'base':18,'bdi':0,'bdo':0,'blockquote':0,'body':49,'br':2,'button':0,'canvas':0,'caption':0,'cite':0,'code':0,'col':2,'colgroup':1,'command':2,'datalist':0,'dd':1,'del':0,'details':0,'dfn':0,'div':0,'dl':0,'dt':1,'em':0,'embed':18,'fieldset':0,'figcaption':0,'figure':0,'footer':0,'form':0,'h1':0,'h2':0,'h3':0,'h4':0,'h5':0,'h6':0,'head':49,'header':0,'hgroup':0,'hr':2,'html':49,'i':0,'iframe':4,'img':2,'input':2,'ins':0,'kbd':0,'keygen':2,'label':0,'legend':0,'li':1,'link':18,'map':0,'mark':0,'menu':0,'meta':18,'meter':0,'nav':0,'noscript':20,'object':16,'ol':0,'optgroup':1,'option':1,'output':0,'p':1,'param':18,'pre':0,'progress':0,'q':0,'rp':1,'rt':1,'ruby':0,'s':0,'samp':0,'script':84,'section':0,'select':0,'small':0,'source':2,'span':0,'strong':0,'style':148,'sub':0,'summary':0,'sup':0,'table':0,'tbody':1,'td':1,'textarea':8,'tfoot':1,'th':1,'thead':1,'time':0,'title':24,'tr':1,'track':2,'u':0,'ul':0,'var':0,'video':0,'wbr':2};html4.ueffects={NOT_LOADED:0,SAME_DOCUMENT:1,NEW_DOCUMENT:2};html4.URIEFFECTS={'a::href':2,'area::href':2,'audio::src':1,'base::href':2,'blockquote::cite':0,'button::formaction':2,'command::icon':1,'del::cite':0,'embed::src':1,'form::action':2,'html:: manifest':1,'iframe::src':1,'img::src':1,'input::formaction':2,'input::src':1,'ins::cite':0,'link::href':2,'object::data':1,'q::cite':0,'script::src':1,'source::src':1,'track::src':1,'video::poster':1,'video::src':1};html4.ltypes={UNSANDBOXED:2,SANDBOXED:1,DATA:0};html4.LOADERTYPES={'a::href':2,'area::href':2,'audio::src':1,'base::href':2,'blockquote::cite':2,'button::formaction':2,'command::icon':1,'del::cite':2,'embed::src':1,'form::action':2,'html:: manifest':1,'iframe::src':1,'img::src':1,'input::formaction':2,'input::src':1,'ins::cite':2,'link::href':2,'object::data':0,'q::cite':2,'script::src':1,'source::src':1,'track::src':1,'video::poster':1,'video::src':1};if(typeof window!=='undefined'){window['html4']=html4}
// Copyright (C) 2006 Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.
var html=(function(a){var b,c,d;if('undefined'!==typeof window){b=window['parseCssDeclarations'];c=window['sanitizeCssProperty'];d=window['cssSchema']}var l;if('script'==='SCRIPT'.toLowerCase()){l=function(s){return s.toLowerCase()}}else{l=function(s){return s.replace(/[A-Z]/g,function(e){return String.fromCharCode(e.charCodeAt(0)|32)})}}var E={'lt':'<','gt':'>','amp':'&','nbsp':'\240','quot':'"','apos':'\''};var f=/^#(\d+)$/;var g=/^#x([0-9A-Fa-f]+)$/;function j(n){n=l(n);if(E.hasOwnProperty(n)){return E[n]}var m=n.match(f);if(m){return String.fromCharCode(parseInt(m[1],10))}else if(!!(m=n.match(g))){return String.fromCharCode(parseInt(m[1],16))}return''}function k(_,n){return j(n)}var o=/\0/g;function r(s){return s.replace(o,'')}var t=/&(#\d+|#x[0-9A-Fa-f]+|\w+);/g;function u(s){return s.replace(t,k)}var w=/&/g;var x=/&([^a-z#]|#(?:[^0-9x]|x(?:[^0-9a-f]|$)|$)|$)/gi;var y=/[<]/g;var z=/>/g;var A=/\"/g;function B(s){return(''+s).replace(w,'&amp;').replace(y,'&lt;').replace(z,'&gt;').replace(A,'&#34;')}function C(e){return e.replace(x,'&amp;$1').replace(y,'&lt;').replace(z,'&gt;')}var D=new RegExp('^\\s*'+'([a-z][a-z-]*)'+'(?:'+('\\s*(=)\\s*'+'('+('(\")[^\"]*(\"|$)'+'|'+'(\')[^\']*(\'|$)'+'|'+'(?=[a-z][a-z-]*\\s*=)'+'|'+'[^\"\'\\s]*')+')')+')?','i');var F=/^(#[0-9]+|#x[0-9a-f]+|\w+);/i;var G=('a,b'.split(/(,)/).length===3);var H=a.eflags.CDATA|a.eflags.RCDATA;function I(h){return function(e,p){return K(e,h,p)}}var J={};function K(e,i,n){var h=i;var m,p,q;var s=N(e);var v={noMoreGT:false,noMoreEndComments:false};M(i,s,0,v,n)}function L(h,p,i,s,e){return function(){M(h,p,i,s,e)}}function M(h,i,n,s,q){try{if(h.startDoc&&n==0){h.startDoc(q)}var m,p,v;for(var _=n,b1=i.length;_<b1;){var c1=i[_++];var d1=i[_];switch(c1){case'&':if(F.test(d1)){if(h.pcdata){h.pcdata('&'+d1,q,J,L(h,i,_,s,q))}_++}else{if(h.pcdata){h.pcdata("&amp;",q,J,L(h,i,_,s,q))}}break;case'<\/':if(m=/^(\w+)[^\'\"]*/.exec(d1)){if(m[0].length===d1.length&&i[_+1]==='>'){_+=2;v=l(m[1]);if(a.ELEMENTS.hasOwnProperty(v)){if(h.endTag){h.endTag(v,q,J,L(h,i,_,s,q))}}}else{_=O(i,_,h,q,J,s)}}else{if(h.pcdata){h.pcdata('&lt;/',q,J,L(h,i,_,s,q))}}break;case'<':if(m=/^(\w+)\s*\/?/.exec(d1)){if(m[0].length===d1.length&&i[_+1]==='>'){_+=2;v=l(m[1]);if(a.ELEMENTS.hasOwnProperty(v)){if(h.startTag){h.startTag(v,[],q,J,L(h,i,_,s,q))}var e1=a.ELEMENTS[v];if(e1&H){var f1={name:v,next:_,eflags:e1};_=R(i,f1,h,q,J,s)}}}else{_=P(i,_,h,q,J,s)}}else{if(h.pcdata){h.pcdata('&lt;',q,J,L(h,i,_,s,q))}}break;case'<\!--':if(!s.noMoreEndComments){for(p=_+1;p<b1;p++){if(i[p]==='>'&&/--$/.test(i[p-1])){break}}if(p<b1){_=p+1}else{s.noMoreEndComments=true}}if(s.noMoreEndComments){if(h.pcdata){h.pcdata('&lt;!--',q,J,L(h,i,_,s,q))}}break;case'<\!':if(!/^\w/.test(d1)){if(h.pcdata){h.pcdata('&lt;!',q,J,L(h,i,_,s,q))}}else{if(!s.noMoreGT){for(p=_+1;p<b1;p++){if(i[p]==='>'){break}}if(p<b1){_=p+1}else{s.noMoreGT=true}}if(s.noMoreGT){if(h.pcdata){h.pcdata('&lt;!',q,J,L(h,i,_,s,q))}}}break;case'<?':if(!s.noMoreGT){for(p=_+1;p<b1;p++){if(i[p]==='>'){break}}if(p<b1){_=p+1}else{s.noMoreGT=true}}if(s.noMoreGT){if(h.pcdata){h.pcdata('&lt;?',q,J,L(h,i,_,s,q))}}break;case'>':if(h.pcdata){h.pcdata("&gt;",q,J,L(h,i,_,s,q))}break;case'':break;default:if(h.pcdata){h.pcdata(c1,q,J,L(h,i,_,s,q))}break}}if(h.endDoc){h.endDoc(q)}}catch(e){if(e!==J){throw e}}}function N(s){var e=/(<\/|<\!--|<[!?]|[&<>])/g;s+='';if(G){return s.split(e)}else{var p=[];var h=0;var m;while((m=e.exec(s))!==null){p.push(s.substring(h,m.index));p.push(m[0]);h=m.index+m[0].length}p.push(s.substring(h));return p}}function O(p,e,h,i,J,s){var m=S(p,e);if(!m){return p.length}if(m.eflags!==void 0){if(h.endTag){h.endTag(m.name,i,J,L(h,p,e,s,i))}}return m.next}function P(p,e,h,i,J,s){var m=S(p,e);if(!m){return p.length}if(m.eflags!==void 0){if(h.startTag){h.startTag(m.name,m.attrs,i,J,L(h,p,m.next,s,i))}if(m.eflags&H){return R(p,m,h,i,J,s)}}return m.next}var Q={};function R(e,i,h,m,J,s){var n=e.length;if(!Q.hasOwnProperty(i.name)){Q[i.name]=new RegExp('^'+i.name+'(?:[\\s\\/]|$)','i')}var q=Q[i.name];var v=i.next;var p=i.next+1;for(;p<n;p++){if(e[p-1]==='<\/'&&q.test(e[p])){break}}if(p<n){p-=1}var _=e.slice(v,p).join('');if(i.eflags&a.eflags.CDATA){if(h.cdata){h.cdata(_,m,J,L(h,e,p,s,m))}}else if(i.eflags&a.eflags.RCDATA){if(h.rcdata){h.rcdata(C(_),m,J,L(h,e,p,s,m))}}else{throw new Error('bug')}return p}function S(e,h){var m=/^(\w+)/.exec(e[h]);var i={name:l(m[1])};if(a.ELEMENTS.hasOwnProperty(i.name)){i.eflags=a.ELEMENTS[i.name]}else{i.eflags=void 0}var n=e[h].substr(m[0].length);var p=h+1;var q=e.length;for(;p<q;p++){if(e[p]==='>'){break}n+=e[p]}if(q<=p){return void 0}var s=[];while(n!==''){m=D.exec(n);if(!m){n=n.replace(/^[\s\S][^a-z\s]*/,'')}else if((m[4]&&!m[5])||(m[6]&&!m[7])){var v=m[4]||m[6];var _=false;var b1=[n,e[p++]];for(;p<q;p++){if(_){if(e[p]==='>'){break}}else if(0<=e[p].indexOf(v)){_=true}b1.push(e[p])}if(q<=p){break}n=b1.join('');continue}else{var c1=l(m[1]);var d1=m[2]?T(m[3]):c1;s.push(c1,d1);n=n.substr(m[0].length)}}i.attrs=s;i.next=p+1;return i}function T(v){var q=v.charCodeAt(0);if(q===0x22||q===0x27){v=v.substr(1,v.length-2)}return u(r(v))}function U(e){var s;var h;var m=function(i,n){if(!h){n.push(i)}};return I({startDoc:function(_){s=[];h=false},startTag:function(p,q,v){if(h){return}if(!a.ELEMENTS.hasOwnProperty(p)){return}var _=a.ELEMENTS[p];if(_&a.eflags.FOLDABLE){return}q=e(p,q);if(!q){h=!(_&a.eflags.EMPTY);return}if(!(_&a.eflags.EMPTY)){s.push(p)}v.push('<',p);for(var i=0,n=q.length;i<n;i+=2){var b1=q[i],c1=q[i+1];if(c1!==null&&c1!==void 0){v.push(' ',b1,'="',B(c1),'"')}}v.push('>')},endTag:function(n,p){if(h){h=false;return}if(!a.ELEMENTS.hasOwnProperty(n)){return}var q=a.ELEMENTS[n];if(!(q&(a.eflags.EMPTY|a.eflags.FOLDABLE))){var v;if(q&a.eflags.OPTIONAL_ENDTAG){for(v=s.length;--v>=0;){var _=s[v];if(_===n){break}if(!(a.ELEMENTS[_]&a.eflags.OPTIONAL_ENDTAG)){return}}}else{for(v=s.length;--v>=0;){if(s[v]===n){break}}}if(v<0){return}for(var i=s.length;--i>v;){var _=s[i];if(!(a.ELEMENTS[_]&a.eflags.OPTIONAL_ENDTAG)){p.push('<\/',_,'>')}}s.length=v;p.push('<\/',n,'>')}},pcdata:m,rcdata:m,cdata:m,endDoc:function(i){for(;s.length;s.length--){i.push('<\/',s[s.length-1],'>')}}})}var V=new RegExp('^'+'(?:'+'([^:\/?# ]+)'+':)?');var W=/^(?:https?|mailto)$/i;function X(e,n){if(!n){return null}var p=(''+e).match(V);if(p&&(!p[1]||W.test(p[1]))){return n(e)}else{return null}}function Y(e,h,m,n){for(var i=0;i<h.length;i+=2){var p=h[i];var v=h[i+1];var q=null,s;if((s=e+'::'+p,a.ATTRIBS.hasOwnProperty(s))||(s='*::'+p,a.ATTRIBS.hasOwnProperty(s))){q=a.ATTRIBS[s]}if(q!==null){switch(q){case a.atype.NONE:break;case a.atype.SCRIPT:v=null;break;case a.atype.STYLE:if('undefined'===typeof b){v=null;break}var _=[];b(v,{declaration:function(b1,c1){var d1=b1.toLowerCase();var e1=d[d1];if(!e1){return}c(d1,e1,c1,m);_.push(b1+': '+c1.join(' '))}});v=_.length>0?_.join(' ; '):null;break;case a.atype.ID:case a.atype.IDREF:case a.atype.IDREFS:case a.atype.GLOBAL_NAME:case a.atype.LOCAL_NAME:case a.atype.CLASSES:v=n?n(v):v;break;case a.atype.URI:v=X(v,m);break;case a.atype.URI_FRAGMENT:if(v&&'#'===v.charAt(0)){v=v.substring(1);v=n?n(v):v;if(v!==null&&v!==void 0){v='#'+v}}else{v=null}break;default:v=null;break}}else{v=null}h[i+1]=v}return h}function Z(e,h){return function(i,m){if(!(a.ELEMENTS[i]&a.eflags.UNSAFE)){return Y(i,m,e,h)}}}function $(i,e){var h=[];U(e)(i,h);return h.join('')}function a1(i,e,h){var m=Z(e,h);return $(i,m)}return{escapeAttrib:B,makeHtmlSanitizer:U,makeSaxParser:I,makeTagPolicy:Z,normalizeRCData:C,sanitize:a1,sanitizeAttribs:Y,sanitizeWithPolicy:$,unescapeEntities:u}})(html4);var html_sanitize=html.sanitize;if(typeof window!=='undefined'){window['html']=html;window['html_sanitize']=html_sanitize}
/*!
 * jQuery JavaScript Library v1.11.1
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-05-01T17:42Z
 */
(function(g,f){if(typeof module==="object"&&typeof module.exports==="object"){module.exports=g.document?f(g,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document")}return f(w)}}else{f(g)}}(typeof window!=="undefined"?window:this,function(w,c){var d=[];var f=d.slice;var g=d.concat;var h=d.push;var k=d.indexOf;var o={};var q=o.toString;var u=o.hasOwnProperty;var x={};var y="1.11.1",Q=function(s,a){return new Q.fn.init(s,a)},z=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,l){return l.toUpperCase()};Q.fn=Q.prototype={jquery:y,constructor:Q,selector:"",length:0,toArray:function(){return f.call(this)},get:function(n){return n!=null?(n<0?this[n+this.length]:this[n]):f.call(this)},pushStack:function(a){var r=Q.merge(this.constructor(),a);r.prevObject=this;r.context=this.context;return r},each:function(a,b){return Q.each(this,a,b)},map:function(a){return this.pushStack(Q.map(this,function(b,i){return a.call(b,i,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(i){var l=this.length,j=+i+(i<0?l:0);return this.pushStack(j>=0&&j<l?[this[j]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:d.sort,splice:d.splice};Q.extend=Q.fn.extend=function(){var s,a,b,n,j,l,t=arguments[0]||{},i=1,m=arguments.length,p=false;if(typeof t==="boolean"){p=t;t=arguments[i]||{};i++}if(typeof t!=="object"&&!Q.isFunction(t)){t={}}if(i===m){t=this;i--}for(;i<m;i++){if((j=arguments[i])!=null){for(n in j){s=t[n];b=j[n];if(t===b){continue}if(p&&b&&(Q.isPlainObject(b)||(a=Q.isArray(b)))){if(a){a=false;l=s&&Q.isArray(s)?s:[]}else{l=s&&Q.isPlainObject(s)?s:{}}t[n]=Q.extend(p,l,b)}else if(b!==undefined){t[n]=b}}}}return t};Q.extend({expando:"jQuery"+(y+Math.random()).replace(/\D/g,""),isReady:true,error:function(m){throw new Error(m)},noop:function(){},isFunction:function(a){return Q.type(a)==="function"},isArray:Array.isArray||function(a){return Q.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!Q.isArray(a)&&a-parseFloat(a)>=0},isEmptyObject:function(a){var n;for(n in a){return false}return true},isPlainObject:function(a){var b;if(!a||Q.type(a)!=="object"||a.nodeType||Q.isWindow(a)){return false}try{if(a.constructor&&!u.call(a,"constructor")&&!u.call(a.constructor.prototype,"isPrototypeOf")){return false}}catch(e){return false}if(x.ownLast){for(b in a){return u.call(a,b)}}for(b in a){}return b===undefined||u.call(a,b)},type:function(a){if(a==null){return a+""}return typeof a==="object"||typeof a==="function"?o[q.call(a)]||"object":typeof a},globalEval:function(a){if(a&&Q.trim(a)){(w.execScript||function(a){w["eval"].call(w,a)})(a)}},camelCase:function(s){return s.replace(A,"ms-").replace(B,C)},nodeName:function(a,n){return a.nodeName&&a.nodeName.toLowerCase()===n.toLowerCase()},each:function(a,b,j){var v,i=0,l=a.length,m=D(a);if(j){if(m){for(;i<l;i++){v=b.apply(a[i],j);if(v===false){break}}}else{for(i in a){v=b.apply(a[i],j);if(v===false){break}}}}else{if(m){for(;i<l;i++){v=b.call(a[i],i,a[i]);if(v===false){break}}}else{for(i in a){v=b.call(a[i],i,a[i]);if(v===false){break}}}}return a},trim:function(t){return t==null?"":(t+"").replace(z,"")},makeArray:function(a,r){var b=r||[];if(a!=null){if(D(Object(a))){Q.merge(b,typeof a==="string"?[a]:a)}else{h.call(b,a)}}return b},inArray:function(a,b,i){var l;if(b){if(k){return k.call(b,a,i)}l=b.length;i=i?i<0?Math.max(0,l+i):i:0;for(;i<l;i++){if(i in b&&b[i]===a){return i}}}return-1},merge:function(a,s){var l=+s.length,j=0,i=a.length;while(j<l){a[i++]=s[j++]}if(l!==l){while(s[j]!==undefined){a[i++]=s[j++]}}a.length=i;return a},grep:function(a,b,j){var l,m=[],i=0,n=a.length,p=!j;for(;i<n;i++){l=!b(a[i],i);if(l!==p){m.push(a[i])}}return m},map:function(a,b,j){var v,i=0,l=a.length,m=D(a),r=[];if(m){for(;i<l;i++){v=b(a[i],i,j);if(v!=null){r.push(v)}}}else{for(i in a){v=b(a[i],i,j);if(v!=null){r.push(v)}}}return g.apply([],r)},guid:1,proxy:function(a,b){var j,p,t;if(typeof b==="string"){t=a[b];b=a;a=t}if(!Q.isFunction(a)){return undefined}j=f.call(arguments,2);p=function(){return a.apply(b||this,j.concat(f.call(arguments)))};p.guid=a.guid=a.guid||Q.guid++;return p},now:function(){return+(new Date())},support:x});Q.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(i,n){o["[object "+n+"]"]=n.toLowerCase()});function D(a){var l=a.length,t=Q.type(a);if(t==="function"||Q.isWindow(a)){return false}if(a.nodeType===1&&l){return true}return t==="array"||l===0||typeof l==="number"&&l>0&&(l-1)in a}var S=
/*!
 * Sizzle CSS Selector Engine v1.10.19
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-04-18
 */
(function(w){var i,x,l,n,p,t,r,s,v,r3,s3,t3,J,o3,u3,v3,w3,x3,y3,z3="sizzle"+-(new Date()),A3=w.document,B3=0,C3=0,D3=c4(),E3=c4(),F3=c4(),G3=function(a,b){if(a===b){s3=true}return 0},X=typeof undefined,H3=1<<31,u=({}).hasOwnProperty,I3=[],J3=I3.pop,K3=I3.push,h=I3.push,f=I3.slice,k=I3.indexOf||function(a){var i=0,b=this.length;for(;i<b;i++){if(this[i]===a){return i}}return-1},L3="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M3="[\\x20\\t\\r\\n\\f]",N3="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O3=N3.replace("w","w#"),P3="\\["+M3+"*("+N3+")(?:"+M3+"*([*^$|!~]?=)"+M3+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O3+"))|)"+M3+"*\\]",Q3=":("+N3+")(?:\\(("+"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+"((?:\\\\.|[^\\\\()[\\]]|"+P3+")*)|"+".*"+")\\)|)",z=new RegExp("^"+M3+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M3+"+$","g"),R3=new RegExp("^"+M3+"*,"+M3+"*"),S3=new RegExp("^"+M3+"*([>+~]|"+M3+")"+M3+"*"),T3=new RegExp("="+M3+"*([^\\]'\"]*?)"+M3+"*\\]","g"),U3=new RegExp(Q3),V3=new RegExp("^"+O3+"$"),W3={"ID":new RegExp("^#("+N3+")"),"CLASS":new RegExp("^\\.("+N3+")"),"TAG":new RegExp("^("+N3.replace("w","w*")+")"),"ATTR":new RegExp("^"+P3),"PSEUDO":new RegExp("^"+Q3),"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M3+"*(even|odd|(([+-]|)(\\d*)n|)"+M3+"*(?:([+-]|)"+M3+"*(\\d+)|))"+M3+"*\\)|)","i"),"bool":new RegExp("^(?:"+L3+")$","i"),"needsContext":new RegExp("^"+M3+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M3+"*((?:-\\d)?\\d*)"+M3+"*\\)|)(?=[^-]|$)","i")},X3=/^(?:input|select|textarea|button)$/i,Y3=/^h\d$/i,Z3=/^[^{]+\{\s*\[native \w/,K=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$3=/[+~]/,_3=/'|\\/g,a4=new RegExp("\\\\([\\da-f]{1,6}"+M3+"?|("+M3+")|.)","ig"),b4=function(_,a,b){var j="0x"+a-0x10000;return j!==j||b?a:j<0?String.fromCharCode(j+0x10000):String.fromCharCode(j>>10|0xD800,j&0x3FF|0xDC00)};try{h.apply((I3=f.call(A3.childNodes)),A3.childNodes);I3[A3.childNodes.length].nodeType}catch(e){h={apply:I3.length?function(a,b){K3.apply(a,f.call(b))}:function(a,b){var j=a.length,i=0;while((a[j++]=b[i++])){}a.length=j-1}}}function S(a,b,j,_){var u4,v4,m,w4,i,x4,y4,z4,A4,B4;if((b?b.ownerDocument||b:A3)!==J){t3(b)}b=b||J;j=j||[];if(!a||typeof a!=="string"){return j}if((w4=b.nodeType)!==1&&w4!==9){return[]}if(u3&&!_){if((u4=K.exec(a))){if((m=u4[1])){if(w4===9){v4=b.getElementById(m);if(v4&&v4.parentNode){if(v4.id===m){j.push(v4);return j}}else{return j}}else{if(b.ownerDocument&&(v4=b.ownerDocument.getElementById(m))&&y3(b,v4)&&v4.id===m){j.push(v4);return j}}}else if(u4[2]){h.apply(j,b.getElementsByTagName(a));return j}else if((m=u4[3])&&x.getElementsByClassName&&b.getElementsByClassName){h.apply(j,b.getElementsByClassName(m));return j}}if(x.qsa&&(!v3||!v3.test(a))){z4=y4=z3;A4=b;B4=w4===9&&a;if(w4===1&&b.nodeName.toLowerCase()!=="object"){x4=t(a);if((y4=b.getAttribute("id"))){z4=y4.replace(_3,"\\$&")}else{b.setAttribute("id",z4)}z4="[id='"+z4+"'] ";i=x4.length;while(i--){x4[i]=z4+m4(x4[i])}A4=$3.test(a)&&k4(b.parentNode)||b;B4=x4.join(",")}if(B4){try{h.apply(j,A4.querySelectorAll(B4));return j}catch(C4){}finally{if(!y4){b.removeAttribute("id")}}}}}return s(a.replace(z,"$1"),b,j,_)}function c4(){var a=[];function b(j,m){if(a.push(j+" ")>l.cacheLength){delete b[a.shift()]}return(b[j+" "]=m)}return b}function d4(a){a[z3]=true;return a}function e4(a){var b=J.createElement("div");try{return!!a(b)}catch(e){return false}finally{if(b.parentNode){b.parentNode.removeChild(b)}b=null}}function f4(a,b){var I3=a.split("|"),i=a.length;while(i--){l.attrHandle[I3[i]]=b}}function g4(a,b){var j=b&&a,m=j&&a.nodeType===1&&b.nodeType===1&&(~b.sourceIndex||H3)-(~a.sourceIndex||H3);if(m){return m}if(j){while((j=j.nextSibling)){if(j===b){return-1}}}return a?1:-1}function h4(a){return function(b){var j=b.nodeName.toLowerCase();return j==="input"&&b.type===a}}function i4(a){return function(b){var j=b.nodeName.toLowerCase();return(j==="input"||j==="button")&&b.type===a}}function j4(a){return d4(function(b){b=+b;return d4(function(m,x3){var j,_=a([],m.length,b),i=_.length;while(i--){if(m[(j=_[i])]){m[j]=!(x3[j]=m[j])}}})})}function k4(a){return a&&typeof a.getElementsByTagName!==X&&a}x=S.support={};p=S.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":false};t3=S.setDocument=function(j){var _,u4=j?j.ownerDocument||j:A3,v4=u4.defaultView;if(u4===J||u4.nodeType!==9||!u4.documentElement){return J}J=u4;o3=u4.documentElement;u3=!p(u4);if(v4&&v4!==v4.top){if(v4.addEventListener){v4.addEventListener("unload",function(){t3()},false)}else if(v4.attachEvent){v4.attachEvent("onunload",function(){t3()})}}x.attributes=e4(function(a){a.className="i";return!a.getAttribute("className")});x.getElementsByTagName=e4(function(a){a.appendChild(u4.createComment(""));return!a.getElementsByTagName("*").length});x.getElementsByClassName=Z3.test(u4.getElementsByClassName)&&e4(function(a){a.innerHTML="<div class='a'></div><div class='a i'></div>";a.firstChild.className="i";return a.getElementsByClassName("i").length===2});x.getById=e4(function(a){o3.appendChild(a).id=z3;return!u4.getElementsByName||!u4.getElementsByName(z3).length});if(x.getById){l.find["ID"]=function(a,b){if(typeof b.getElementById!==X&&u3){var m=b.getElementById(a);return m&&m.parentNode?[m]:[]}};l.filter["ID"]=function(a){var b=a.replace(a4,b4);return function(m){return m.getAttribute("id")===b}}}else{delete l.find["ID"];l.filter["ID"]=function(a){var b=a.replace(a4,b4);return function(m){var j=typeof m.getAttributeNode!==X&&m.getAttributeNode("id");return j&&j.value===b}}}l.find["TAG"]=x.getElementsByTagName?function(a,b){if(typeof b.getElementsByTagName!==X){return b.getElementsByTagName(a)}}:function(a,b){var m,w4=[],i=0,x4=b.getElementsByTagName(a);if(a==="*"){while((m=x4[i++])){if(m.nodeType===1){w4.push(m)}}return w4}return x4};l.find["CLASS"]=x.getElementsByClassName&&function(a,b){if(typeof b.getElementsByClassName!==X&&u3){return b.getElementsByClassName(a)}};w3=[];v3=[];if((x.qsa=Z3.test(u4.querySelectorAll))){e4(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>";if(a.querySelectorAll("[msallowclip^='']").length){v3.push("[*^$]="+M3+"*(?:''|\"\")")}if(!a.querySelectorAll("[selected]").length){v3.push("\\["+M3+"*(?:value|"+L3+")")}if(!a.querySelectorAll(":checked").length){v3.push(":checked")}});e4(function(a){var b=u4.createElement("input");b.setAttribute("type","hidden");a.appendChild(b).setAttribute("name","D");if(a.querySelectorAll("[name=d]").length){v3.push("name"+M3+"*[*^$|!~]?=")}if(!a.querySelectorAll(":enabled").length){v3.push(":enabled",":disabled")}a.querySelectorAll("*,:x");v3.push(",.*:")})}if((x.matchesSelector=Z3.test((x3=o3.matches||o3.webkitMatchesSelector||o3.mozMatchesSelector||o3.oMatchesSelector||o3.msMatchesSelector)))){e4(function(a){x.disconnectedMatch=x3.call(a,"div");x3.call(a,"[s!='']:x");w3.push("!=",Q3)})}v3=v3.length&&new RegExp(v3.join("|"));w3=w3.length&&new RegExp(w3.join("|"));_=Z3.test(o3.compareDocumentPosition);y3=_||Z3.test(o3.contains)?function(a,b){var m=a.nodeType===9?a.documentElement:a,w4=b&&b.parentNode;return a===w4||!!(w4&&w4.nodeType===1&&(m.contains?m.contains(w4):a.compareDocumentPosition&&a.compareDocumentPosition(w4)&16))}:function(a,b){if(b){while((b=b.parentNode)){if(b===a){return true}}}return false};G3=_?function(a,b){if(a===b){s3=true;return 0}var m=!a.compareDocumentPosition-!b.compareDocumentPosition;if(m){return m}m=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(m&1||(!x.sortDetached&&b.compareDocumentPosition(a)===m)){if(a===u4||a.ownerDocument===A3&&y3(A3,a)){return-1}if(b===u4||b.ownerDocument===A3&&y3(A3,b)){return 1}return r3?(k.call(r3,a)-k.call(r3,b)):0}return m&4?-1:1}:function(a,b){if(a===b){s3=true;return 0}var m,i=0,w4=a.parentNode,x4=b.parentNode,ap=[a],bp=[b];if(!w4||!x4){return a===u4?-1:b===u4?1:w4?-1:x4?1:r3?(k.call(r3,a)-k.call(r3,b)):0}else if(w4===x4){return g4(a,b)}m=a;while((m=m.parentNode)){ap.unshift(m)}m=b;while((m=m.parentNode)){bp.unshift(m)}while(ap[i]===bp[i]){i++}return i?g4(ap[i],bp[i]):ap[i]===A3?-1:bp[i]===A3?1:0};return u4};S.matches=function(a,b){return S(a,null,null,b)};S.matchesSelector=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}b=b.replace(T3,"='$1']");if(x.matchesSelector&&u3&&(!w3||!w3.test(b))&&(!v3||!v3.test(b))){try{var j=x3.call(a,b);if(j||x.disconnectedMatch||a.document&&a.document.nodeType!==11){return j}}catch(e){}}return S(b,J,null,[a]).length>0};S.contains=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}return y3(a,b)};S.attr=function(a,b){if((a.ownerDocument||a)!==J){t3(a)}var j=l.attrHandle[b.toLowerCase()],m=j&&u.call(l.attrHandle,b.toLowerCase())?j(a,b,!u3):undefined;return m!==undefined?m:x.attributes||!u3?a.getAttribute(b):(m=a.getAttributeNode(b))&&m.specified?m.value:null};S.error=function(m){throw new Error("Syntax error, unrecognized expression: "+m)};S.uniqueSort=function(a){var b,m=[],j=0,i=0;s3=!x.detectDuplicates;r3=!x.sortStable&&a.slice(0);a.sort(G3);if(s3){while((b=a[i++])){if(b===a[i]){j=m.push(i)}}while(j--){a.splice(m[j],1)}}r3=null;return a};n=S.getText=function(a){var b,j="",i=0,m=a.nodeType;if(!m){while((b=a[i++])){j+=n(b)}}else if(m===1||m===9||m===11){if(typeof a.textContent==="string"){return a.textContent}else{for(a=a.firstChild;a;a=a.nextSibling){j+=n(a)}}}else if(m===3||m===4){return a.nodeValue}return j};l=S.selectors={cacheLength:50,createPseudo:d4,match:W3,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{"ATTR":function(m){m[1]=m[1].replace(a4,b4);m[3]=(m[3]||m[4]||m[5]||"").replace(a4,b4);if(m[2]==="~="){m[3]=" "+m[3]+" "}return m.slice(0,4)},"CHILD":function(m){m[1]=m[1].toLowerCase();if(m[1].slice(0,3)==="nth"){if(!m[3]){S.error(m[0])}m[4]=+(m[4]?m[5]+(m[6]||1):2*(m[3]==="even"||m[3]==="odd"));m[5]=+((m[7]+m[8])||m[3]==="odd")}else if(m[3]){S.error(m[0])}return m},"PSEUDO":function(m){var a,b=!m[6]&&m[2];if(W3["CHILD"].test(m[0])){return null}if(m[3]){m[2]=m[4]||m[5]||""}else if(b&&U3.test(b)&&(a=t(b,true))&&(a=b.indexOf(")",b.length-a)-b.length)){m[0]=m[0].slice(0,a);m[2]=b.slice(0,a)}return m.slice(0,3)}},filter:{"TAG":function(a){var b=a.replace(a4,b4).toLowerCase();return a==="*"?function(){return true}:function(j){return j.nodeName&&j.nodeName.toLowerCase()===b}},"CLASS":function(a){var b=D3[a+" "];return b||(b=new RegExp("(^|"+M3+")"+a+"("+M3+"|$)"))&&D3(a,function(j){return b.test(typeof j.className==="string"&&j.className||typeof j.getAttribute!==X&&j.getAttribute("class")||"")})},"ATTR":function(a,b,j){return function(m){var _=S.attr(m,a);if(_==null){return b==="!="}if(!b){return true}_+="";return b==="="?_===j:b==="!="?_!==j:b==="^="?j&&_.indexOf(j)===0:b==="*="?j&&_.indexOf(j)>-1:b==="$="?j&&_.slice(-j.length)===j:b==="~="?(" "+_+" ").indexOf(j)>-1:b==="|="?_===j||_.slice(0,j.length+1)===j+"-":false}},"CHILD":function(a,b,j,m,_){var u4=a.slice(0,3)!=="nth",v4=a.slice(-4)!=="last",w4=b==="of-type";return m===1&&_===0?function(x4){return!!x4.parentNode}:function(x4,y4,z4){var A4,B4,C4,D4,E4,F4,G4=u4!==v4?"nextSibling":"previousSibling",H4=x4.parentNode,I4=w4&&x4.nodeName.toLowerCase(),J4=!z4&&!w4;if(H4){if(u4){while(G4){C4=x4;while((C4=C4[G4])){if(w4?C4.nodeName.toLowerCase()===I4:C4.nodeType===1){return false}}F4=G4=a==="only"&&!F4&&"nextSibling"}return true}F4=[v4?H4.firstChild:H4.lastChild];if(v4&&J4){B4=H4[z3]||(H4[z3]={});A4=B4[a]||[];E4=A4[0]===B3&&A4[1];D4=A4[0]===B3&&A4[2];C4=E4&&H4.childNodes[E4];while((C4=++E4&&C4&&C4[G4]||(D4=E4=0)||F4.pop())){if(C4.nodeType===1&&++D4&&C4===x4){B4[a]=[B3,E4,D4];break}}}else if(J4&&(A4=(x4[z3]||(x4[z3]={}))[a])&&A4[0]===B3){D4=A4[1]}else{while((C4=++E4&&C4&&C4[G4]||(D4=E4=0)||F4.pop())){if((w4?C4.nodeName.toLowerCase()===I4:C4.nodeType===1)&&++D4){if(J4){(C4[z3]||(C4[z3]={}))[a]=[B3,D4]}if(C4===x4){break}}}}D4-=_;return D4===m||(D4%m===0&&D4/m>=0)}}},"PSEUDO":function(a,b){var j,m=l.pseudos[a]||l.setFilters[a.toLowerCase()]||S.error("unsupported pseudo: "+a);if(m[z3]){return m(b)}if(m.length>1){j=[a,a,"",b];return l.setFilters.hasOwnProperty(a.toLowerCase())?d4(function(_,x3){var u4,v4=m(_,b),i=v4.length;while(i--){u4=k.call(_,v4[i]);_[u4]=!(x3[u4]=v4[i])}}):function(_){return m(_,0,j)}}return m}},pseudos:{"not":d4(function(a){var b=[],j=[],m=r(a.replace(z,"$1"));return m[z3]?d4(function(_,x3,u4,v4){var w4,x4=m(_,null,v4,[]),i=_.length;while(i--){if((w4=x4[i])){_[i]=!(x3[i]=w4)}}}):function(_,u4,v4){b[0]=_;m(b,null,v4,j);return!j.pop()}}),"has":d4(function(a){return function(b){return S(a,b).length>0}}),"contains":d4(function(a){return function(b){return(b.textContent||b.innerText||n(b)).indexOf(a)>-1}}),"lang":d4(function(a){if(!V3.test(a||"")){S.error("unsupported lang: "+a)}a=a.replace(a4,b4).toLowerCase();return function(b){var j;do{if((j=u3?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))){j=j.toLowerCase();return j===a||j.indexOf(a+"-")===0}}while((b=b.parentNode)&&b.nodeType===1);return false}}),"target":function(a){var b=w.location&&w.location.hash;return b&&b.slice(1)===a.id},"root":function(a){return a===o3},"focus":function(a){return a===J.activeElement&&(!J.hasFocus||J.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},"enabled":function(a){return a.disabled===false},"disabled":function(a){return a.disabled===true},"checked":function(a){var b=a.nodeName.toLowerCase();return(b==="input"&&!!a.checked)||(b==="option"&&!!a.selected)},"selected":function(a){if(a.parentNode){a.parentNode.selectedIndex}return a.selected===true},"empty":function(a){for(a=a.firstChild;a;a=a.nextSibling){if(a.nodeType<6){return false}}return true},"parent":function(a){return!l.pseudos["empty"](a)},"header":function(a){return Y3.test(a.nodeName)},"input":function(a){return X3.test(a.nodeName)},"button":function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},"text":function(a){var b;return a.nodeName.toLowerCase()==="input"&&a.type==="text"&&((b=a.getAttribute("type"))==null||b.toLowerCase()==="text")},"first":j4(function(){return[0]}),"last":j4(function(m,a){return[a-1]}),"eq":j4(function(m,a,b){return[b<0?b+a:b]}),"even":j4(function(m,a){var i=0;for(;i<a;i+=2){m.push(i)}return m}),"odd":j4(function(m,a){var i=1;for(;i<a;i+=2){m.push(i)}return m}),"lt":j4(function(m,a,b){var i=b<0?b+a:b;for(;--i>=0;){m.push(i)}return m}),"gt":j4(function(m,a,b){var i=b<0?b+a:b;for(;++i<a;){m.push(i)}return m})}};l.pseudos["nth"]=l.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){l.pseudos[i]=h4(i)}for(i in{submit:true,reset:true}){l.pseudos[i]=i4(i)}function l4(){}l4.prototype=l.filters=l.pseudos;l.setFilters=new l4();t=S.tokenize=function(a,b){var m,j,_,u4,v4,w4,x4,y4=E3[a+" "];if(y4){return b?0:y4.slice(0)}v4=a;w4=[];x4=l.preFilter;while(v4){if(!m||(j=R3.exec(v4))){if(j){v4=v4.slice(j[0].length)||v4}w4.push((_=[]))}m=false;if((j=S3.exec(v4))){m=j.shift();_.push({value:m,type:j[0].replace(z," ")});v4=v4.slice(m.length)}for(u4 in l.filter){if((j=W3[u4].exec(v4))&&(!x4[u4]||(j=x4[u4](j)))){m=j.shift();_.push({value:m,type:u4,matches:j});v4=v4.slice(m.length)}}if(!m){break}}return b?v4.length:v4?S.error(a):E3(a,w4).slice(0)};function m4(a){var i=0,b=a.length,j="";for(;i<b;i++){j+=a[i].value}return j}function n4(m,a,b){var j=a.dir,_=b&&j==="parentNode",u4=C3++;return a.first?function(v4,w4,x4){while((v4=v4[j])){if(v4.nodeType===1||_){return m(v4,w4,x4)}}}:function(v4,w4,x4){var y4,z4,A4=[B3,u4];if(x4){while((v4=v4[j])){if(v4.nodeType===1||_){if(m(v4,w4,x4)){return true}}}}else{while((v4=v4[j])){if(v4.nodeType===1||_){z4=v4[z3]||(v4[z3]={});if((y4=z4[j])&&y4[0]===B3&&y4[1]===u4){return(A4[2]=y4[2])}else{z4[j]=A4;if((A4[2]=m(v4,w4,x4))){return true}}}}}}}function o4(m){return m.length>1?function(a,b,j){var i=m.length;while(i--){if(!m[i](a,b,j)){return false}}return true}:m[0]}function p4(a,b,j){var i=0,m=b.length;for(;i<m;i++){S(a,b[i],j)}return j}function q4(a,m,b,j,_){var u4,v4=[],i=0,w4=a.length,x4=m!=null;for(;i<w4;i++){if((u4=a[i])){if(!b||b(u4,j,_)){v4.push(u4);if(x4){m.push(i)}}}}return v4}function r4(a,b,m,j,_,u4){if(j&&!j[z3]){j=r4(j)}if(_&&!_[z3]){_=r4(_,u4)}return d4(function(v4,w4,x4,y4){var z4,i,A4,B4=[],C4=[],D4=w4.length,E4=v4||p4(b||"*",x4.nodeType?[x4]:x4,[]),F4=a&&(v4||!b)?q4(E4,B4,a,x4,y4):E4,G4=m?_||(v4?a:D4||j)?[]:w4:F4;if(m){m(F4,G4,x4,y4)}if(j){z4=q4(G4,C4);j(z4,[],x4,y4);i=z4.length;while(i--){if((A4=z4[i])){G4[C4[i]]=!(F4[C4[i]]=A4)}}}if(v4){if(_||a){if(_){z4=[];i=G4.length;while(i--){if((A4=G4[i])){z4.push((F4[i]=A4))}}_(null,(G4=[]),z4,y4)}i=G4.length;while(i--){if((A4=G4[i])&&(z4=_?k.call(v4,A4):B4[i])>-1){v4[z4]=!(w4[z4]=A4)}}}}else{G4=q4(G4===w4?G4.splice(D4,G4.length):G4);if(_){_(null,w4,G4,y4)}else{h.apply(w4,G4)}}})}function s4(a){var b,m,j,_=a.length,u4=l.relative[a[0].type],v4=u4||l.relative[" "],i=u4?1:0,w4=n4(function(z4){return z4===b},v4,true),x4=n4(function(z4){return k.call(b,z4)>-1},v4,true),y4=[function(z4,A4,B4){return(!u4&&(B4||A4!==v))||((b=A4).nodeType?w4(z4,A4,B4):x4(z4,A4,B4))}];for(;i<_;i++){if((m=l.relative[a[i].type])){y4=[n4(o4(y4),m)]}else{m=l.filter[a[i].type].apply(null,a[i].matches);if(m[z3]){j=++i;for(;j<_;j++){if(l.relative[a[j].type]){break}}return r4(i>1&&o4(y4),i>1&&m4(a.slice(0,i-1).concat({value:a[i-2].type===" "?"*":""})).replace(z,"$1"),m,i<j&&s4(a.slice(i,j)),j<_&&s4((a=a.slice(j))),j<_&&m4(a))}y4.push(m)}}return o4(y4)}function t4(a,b){var m=b.length>0,_=a.length>0,u4=function(v4,w4,x4,y4,z4){var A4,j,B4,C4=0,i="0",D4=v4&&[],E4=[],F4=v,G4=v4||_&&l.find["TAG"]("*",z4),H4=(B3+=F4==null?1:Math.random()||0.1),I4=G4.length;if(z4){v=w4!==J&&w4}for(;i!==I4&&(A4=G4[i])!=null;i++){if(_&&A4){j=0;while((B4=a[j++])){if(B4(A4,w4,x4)){y4.push(A4);break}}if(z4){B3=H4}}if(m){if((A4=!B4&&A4)){C4--}if(v4){D4.push(A4)}}}C4+=i;if(m&&i!==C4){j=0;while((B4=b[j++])){B4(D4,E4,w4,x4)}if(v4){if(C4>0){while(i--){if(!(D4[i]||E4[i])){E4[i]=J3.call(y4)}}}E4=q4(E4)}h.apply(y4,E4);if(z4&&!v4&&E4.length>0&&(C4+b.length)>1){S.uniqueSort(y4)}}if(z4){B3=H4;v=F4}return D4};return m?d4(u4):u4}r=S.compile=function(a,m){var i,b=[],j=[],_=F3[a+" "];if(!_){if(!m){m=t(a)}i=m.length;while(i--){_=s4(m[i]);if(_[z3]){b.push(_)}else{j.push(_)}}_=F3(a,t4(j,b));_.selector=a}return _};s=S.select=function(a,b,j,m){var i,_,u4,v4,w4,x4=typeof a==="function"&&a,y4=!m&&t((a=x4.selector||a));j=j||[];if(y4.length===1){_=y4[0]=y4[0].slice(0);if(_.length>2&&(u4=_[0]).type==="ID"&&x.getById&&b.nodeType===9&&u3&&l.relative[_[1].type]){b=(l.find["ID"](u4.matches[0].replace(a4,b4),b)||[])[0];if(!b){return j}else if(x4){b=b.parentNode}a=a.slice(_.shift().value.length)}i=W3["needsContext"].test(a)?0:_.length;while(i--){u4=_[i];if(l.relative[(v4=u4.type)]){break}if((w4=l.find[v4])){if((m=w4(u4.matches[0].replace(a4,b4),$3.test(_[0].type)&&k4(b.parentNode)||b))){_.splice(i,1);a=m.length&&m4(_);if(!a){h.apply(j,m);return j}break}}}}(x4||r(a,y4))(m,b,!u3,j,$3.test(a)&&k4(b.parentNode)||b);return j};x.sortStable=z3.split("").sort(G3).join("")===z3;x.detectDuplicates=!!s3;t3();x.sortDetached=e4(function(a){return a.compareDocumentPosition(J.createElement("div"))&1});if(!e4(function(a){a.innerHTML="<a href='#'></a>";return a.firstChild.getAttribute("href")==="#"})){f4("type|href|height|width",function(a,b,p){if(!p){return a.getAttribute(b,b.toLowerCase()==="type"?1:2)}})}if(!x.attributes||!e4(function(a){a.innerHTML="<input/>";a.firstChild.setAttribute("value","");return a.firstChild.getAttribute("value")===""})){f4("value",function(a,b,p){if(!p&&a.nodeName.toLowerCase()==="input"){return a.defaultValue}})}if(!e4(function(a){return a.getAttribute("disabled")==null})){f4(L3,function(a,b,p){var j;if(!p){return a[b]===true?b.toLowerCase():(j=a.getAttributeNode(b))&&j.specified?j.value:null}})}return S})(w);Q.find=S;Q.expr=S.selectors;Q.expr[":"]=Q.expr.pseudos;Q.unique=S.uniqueSort;Q.text=S.getText;Q.isXMLDoc=S.isXML;Q.contains=S.contains;var E=Q.expr.match.needsContext;var F=(/^<(\w+)\s*\/?>(?:<\/\1>|)$/);var G=/^.[^:#\[\.,]*$/;function H(a,b,n){if(Q.isFunction(b)){return Q.grep(a,function(j,i){return!!b.call(j,i,j)!==n})}if(b.nodeType){return Q.grep(a,function(j){return(j===b)!==n})}if(typeof b==="string"){if(G.test(b)){return Q.filter(b,a,n)}b=Q.filter(b,a)}return Q.grep(a,function(j){return(Q.inArray(j,b)>=0)!==n})}Q.filter=function(a,b,n){var j=b[0];if(n){a=":not("+a+")"}return b.length===1&&j.nodeType===1?Q.find.matchesSelector(j,a)?[j]:[]:Q.find.matches(a,Q.grep(b,function(j){return j.nodeType===1}))};Q.fn.extend({find:function(s){var i,r=[],a=this,l=a.length;if(typeof s!=="string"){return this.pushStack(Q(s).filter(function(){for(i=0;i<l;i++){if(Q.contains(a[i],this)){return true}}}))}for(i=0;i<l;i++){Q.find(s,a[i],r)}r=this.pushStack(l>1?Q.unique(r):r);r.selector=this.selector?this.selector+" "+s:s;return r},filter:function(s){return this.pushStack(H(this,s||[],false))},not:function(s){return this.pushStack(H(this,s||[],true))},is:function(s){return!!H(this,typeof s==="string"&&E.test(s)?Q(s):s||[],false).length}});var I,J=w.document,K=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,L=Q.fn.init=function(s,a){var m,b;if(!s){return this}if(typeof s==="string"){if(s.charAt(0)==="<"&&s.charAt(s.length-1)===">"&&s.length>=3){m=[null,s,null]}else{m=K.exec(s)}if(m&&(m[1]||!a)){if(m[1]){a=a instanceof Q?a[0]:a;Q.merge(this,Q.parseHTML(m[1],a&&a.nodeType?a.ownerDocument||a:J,true));if(F.test(m[1])&&Q.isPlainObject(a)){for(m in a){if(Q.isFunction(this[m])){this[m](a[m])}else{this.attr(m,a[m])}}}return this}else{b=J.getElementById(m[2]);if(b&&b.parentNode){if(b.id!==m[2]){return I.find(s)}this.length=1;this[0]=b}this.context=J;this.selector=s;return this}}else if(!a||a.jquery){return(a||I).find(s)}else{return this.constructor(a).find(s)}}else if(s.nodeType){this.context=this[0]=s;this.length=1;return this}else if(Q.isFunction(s)){return typeof I.ready!=="undefined"?I.ready(s):s(Q)}if(s.selector!==undefined){this.selector=s.selector;this.context=s.context}return Q.makeArray(s,this)};L.prototype=Q.fn;I=Q(J);var M=/^(?:parents|prev(?:Until|All))/,N={children:true,contents:true,next:true,prev:true};Q.extend({dir:function(a,b,j){var m=[],l=a[b];while(l&&l.nodeType!==9&&(j===undefined||l.nodeType!==1||!Q(l).is(j))){if(l.nodeType===1){m.push(l)}l=l[b]}return m},sibling:function(n,a){var r=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==a){r.push(n)}}return r}});Q.fn.extend({has:function(t){var i,a=Q(t,this),l=a.length;return this.filter(function(){for(i=0;i<l;i++){if(Q.contains(this,a[i])){return true}}})},closest:function(s,a){var b,i=0,l=this.length,m=[],p=E.test(s)||typeof s!=="string"?Q(s,a||this.context):0;for(;i<l;i++){for(b=this[i];b&&b!==a;b=b.parentNode){if(b.nodeType<11&&(p?p.index(b)>-1:b.nodeType===1&&Q.find.matchesSelector(b,s))){m.push(b);break}}}return this.pushStack(m.length>1?Q.unique(m):m)},index:function(a){if(!a){return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1}if(typeof a==="string"){return Q.inArray(this[0],Q(a))}return Q.inArray(a.jquery?a[0]:a,this)},add:function(s,a){return this.pushStack(Q.unique(Q.merge(this.get(),Q(s,a))))},addBack:function(s){return this.add(s==null?this.prevObject:this.prevObject.filter(s))}});function O(a,b){do{a=a[b]}while(a&&a.nodeType!==1);return a}Q.each({parent:function(a){var p=a.parentNode;return p&&p.nodeType!==11?p:null},parents:function(a){return Q.dir(a,"parentNode")},parentsUntil:function(a,i,b){return Q.dir(a,"parentNode",b)},next:function(a){return O(a,"nextSibling")},prev:function(a){return O(a,"previousSibling")},nextAll:function(a){return Q.dir(a,"nextSibling")},prevAll:function(a){return Q.dir(a,"previousSibling")},nextUntil:function(a,i,b){return Q.dir(a,"nextSibling",b)},prevUntil:function(a,i,b){return Q.dir(a,"previousSibling",b)},siblings:function(a){return Q.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return Q.sibling(a.firstChild)},contents:function(a){return Q.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:Q.merge([],a.childNodes)}},function(n,a){Q.fn[n]=function(b,s){var r=Q.map(this,a,b);if(n.slice(-5)!=="Until"){s=b}if(s&&typeof s==="string"){r=Q.filter(s,r)}if(this.length>1){if(!N[n]){r=Q.unique(r)}if(M.test(n)){r=r.reverse()}}return this.pushStack(r)}});var P=(/\S+/g);var R={};function T(a){var b=R[a]={};Q.each(a.match(P)||[],function(_,j){b[j]=true});return b}Q.Callbacks=function(a){a=typeof a==="string"?(R[a]||T(a)):Q.extend({},a);var b,m,j,l,n,p,r=[],s=!a.once&&[],t=function(_){m=a.memory&&_;j=true;n=p||0;p=0;l=r.length;b=true;for(;r&&n<l;n++){if(r[n].apply(_[0],_[1])===false&&a.stopOnFalse){m=false;break}}b=false;if(r){if(s){if(s.length){t(s.shift())}}else if(m){r=[]}else{v.disable()}}},v={add:function(){if(r){var r3=r.length;(function add(s3){Q.each(s3,function(_,t3){var u3=Q.type(t3);if(u3==="function"){if(!a.unique||!v.has(t3)){r.push(t3)}}else if(t3&&t3.length&&u3!=="string"){add(t3)}})})(arguments);if(b){l=r.length}else if(m){p=r3;t(m)}}return this},remove:function(){if(r){Q.each(arguments,function(_,r3){var s3;while((s3=Q.inArray(r3,r,s3))>-1){r.splice(s3,1);if(b){if(s3<=l){l--}if(s3<=n){n--}}}})}return this},has:function(_){return _?Q.inArray(_,r)>-1:!!(r&&r.length)},empty:function(){r=[];l=0;return this},disable:function(){r=s=m=undefined;return this},disabled:function(){return!r},lock:function(){s=undefined;if(!m){v.disable()}return this},locked:function(){return!s},fireWith:function(_,r3){if(r&&(!j||s)){r3=r3||[];r3=[_,r3.slice?r3.slice():r3];if(b){s.push(r3)}else{t(r3)}}return this},fire:function(){v.fireWith(this,arguments);return this},fired:function(){return!!j}};return v};Q.extend({Deferred:function(a){var t=[["resolve","done",Q.Callbacks("once memory"),"resolved"],["reject","fail",Q.Callbacks("once memory"),"rejected"],["notify","progress",Q.Callbacks("memory")]],s="pending",p={state:function(){return s},always:function(){b.done(arguments).fail(arguments);return this},then:function(){var j=arguments;return Q.Deferred(function(n){Q.each(t,function(i,l){var m=Q.isFunction(j[i])&&j[i];b[l[1]](function(){var r=m&&m.apply(this,arguments);if(r&&Q.isFunction(r.promise)){r.promise().done(n.resolve).fail(n.reject).progress(n.notify)}else{n[l[0]+"With"](this===p?n.promise():this,m?[r]:arguments)}})});j=null}).promise()},promise:function(j){return j!=null?Q.extend(j,p):p}},b={};p.pipe=p.then;Q.each(t,function(i,j){var l=j[2],m=j[3];p[j[1]]=l.add;if(m){l.add(function(){s=m},t[i^1][2].disable,t[2][2].lock)}b[j[0]]=function(){b[j[0]+"With"](this===b?p:this,arguments);return this};b[j[0]+"With"]=l.fireWith});p.promise(b);if(a){a.call(b,b)}return b},when:function(s){var i=0,r=f.call(arguments),l=r.length,a=l!==1||(s&&Q.isFunction(s.promise))?l:0,b=a===1?s:Q.Deferred(),j=function(i,t,v){return function(_){t[i]=this;v[i]=arguments.length>1?f.call(arguments):_;if(v===p){b.notifyWith(t,v)}else if(!(--a)){b.resolveWith(t,v)}}},p,m,n;if(l>1){p=new Array(l);m=new Array(l);n=new Array(l);for(;i<l;i++){if(r[i]&&Q.isFunction(r[i].promise)){r[i].promise().done(j(i,n,r)).fail(b.reject).progress(j(i,m,p))}else{--a}}}if(!a){b.resolveWith(n,r)}return b.promise()}});var U;Q.fn.ready=function(a){Q.ready.promise().done(a);return this};Q.extend({isReady:false,readyWait:1,holdReady:function(a){if(a){Q.readyWait++}else{Q.ready(true)}},ready:function(a){if(a===true?--Q.readyWait:Q.isReady){return}if(!J.body){return setTimeout(Q.ready)}Q.isReady=true;if(a!==true&&--Q.readyWait>0){return}U.resolveWith(J,[Q]);if(Q.fn.triggerHandler){Q(J).triggerHandler("ready");Q(J).off("ready")}}});function V(){if(J.addEventListener){J.removeEventListener("DOMContentLoaded",W,false);w.removeEventListener("load",W,false)}else{J.detachEvent("onreadystatechange",W);w.detachEvent("onload",W)}}function W(){if(J.addEventListener||event.type==="load"||J.readyState==="complete"){V();Q.ready()}}Q.ready.promise=function(a){if(!U){U=Q.Deferred();if(J.readyState==="complete"){setTimeout(Q.ready)}else if(J.addEventListener){J.addEventListener("DOMContentLoaded",W,false);w.addEventListener("load",W,false)}else{J.attachEvent("onreadystatechange",W);w.attachEvent("onload",W);var t=false;try{t=w.frameElement==null&&J.documentElement}catch(e){}if(t&&t.doScroll){(function doScrollCheck(){if(!Q.isReady){try{t.doScroll("left")}catch(e){return setTimeout(doScrollCheck,50)}V();Q.ready()}})()}}}return U.promise(a)};var X=typeof undefined;var i;for(i in Q(x)){break}x.ownLast=i!=="0";x.inlineBlockNeedsLayout=false;Q(function(){var v,a,b,j;b=J.getElementsByTagName("body")[0];if(!b||!b.style){return}a=J.createElement("div");j=J.createElement("div");j.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";b.appendChild(j).appendChild(a);if(typeof a.style.zoom!==X){a.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";x.inlineBlockNeedsLayout=v=a.offsetWidth===3;if(v){b.style.zoom=1}}b.removeChild(j)});(function(){var a=J.createElement("div");if(x.deleteExpando==null){x.deleteExpando=true;try{delete a.test}catch(e){x.deleteExpando=false}}a=null})();Q.acceptData=function(a){var n=Q.noData[(a.nodeName+" ").toLowerCase()],b=+a.nodeType||1;return b!==1&&b!==9?false:!n||n!==true&&a.getAttribute("classid")===n};var Y=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/([A-Z])/g;function $(a,b,j){if(j===undefined&&a.nodeType===1){var n="data-"+b.replace(Z,"-$1").toLowerCase();j=a.getAttribute(n);if(typeof j==="string"){try{j=j==="true"?true:j==="false"?false:j==="null"?null:+j+""===j?+j:Y.test(j)?Q.parseJSON(j):j}catch(e){}Q.data(a,b,j)}else{j=undefined}}return j}function a1(a){var n;for(n in a){if(n==="data"&&Q.isEmptyObject(a[n])){continue}if(n!=="toJSON"){return false}}return true}function b1(a,n,b,p){if(!Q.acceptData(a)){return}var r,t,j=Q.expando,l=a.nodeType,m=l?Q.cache:a,s=l?a[j]:a[j]&&j;if((!s||!m[s]||(!p&&!m[s].data))&&b===undefined&&typeof n==="string"){return}if(!s){if(l){s=a[j]=d.pop()||Q.guid++}else{s=j}}if(!m[s]){m[s]=l?{}:{toJSON:Q.noop}}if(typeof n==="object"||typeof n==="function"){if(p){m[s]=Q.extend(m[s],n)}else{m[s].data=Q.extend(m[s].data,n)}}t=m[s];if(!p){if(!t.data){t.data={}}t=t.data}if(b!==undefined){t[Q.camelCase(n)]=b}if(typeof n==="string"){r=t[n];if(r==null){r=t[Q.camelCase(n)]}}else{r=t}return r}function c1(a,n,p){if(!Q.acceptData(a)){return}var t,i,b=a.nodeType,j=b?Q.cache:a,l=b?a[Q.expando]:Q.expando;if(!j[l]){return}if(n){t=p?j[l]:j[l].data;if(t){if(!Q.isArray(n)){if(n in t){n=[n]}else{n=Q.camelCase(n);if(n in t){n=[n]}else{n=n.split(" ")}}}else{n=n.concat(Q.map(n,Q.camelCase))}i=n.length;while(i--){delete t[n[i]]}if(p?!a1(t):!Q.isEmptyObject(t)){return}}}if(!p){delete j[l].data;if(!a1(j[l])){return}}if(b){Q.cleanData([a],true)}else if(x.deleteExpando||j!=j.window){delete j[l]}else{j[l]=null}}Q.extend({cache:{},noData:{"applet ":true,"embed ":true,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){a=a.nodeType?Q.cache[a[Q.expando]]:a[Q.expando];return!!a&&!a1(a)},data:function(a,n,b){return b1(a,n,b)},removeData:function(a,n){return c1(a,n)},_data:function(a,n,b){return b1(a,n,b,true)},_removeData:function(a,n){return c1(a,n,true)}});Q.fn.extend({data:function(a,v){var i,n,b,j=this[0],l=j&&j.attributes;if(a===undefined){if(this.length){b=Q.data(j);if(j.nodeType===1&&!Q._data(j,"parsedAttrs")){i=l.length;while(i--){if(l[i]){n=l[i].name;if(n.indexOf("data-")===0){n=Q.camelCase(n.slice(5));$(j,n,b[n])}}}Q._data(j,"parsedAttrs",true)}}return b}if(typeof a==="object"){return this.each(function(){Q.data(this,a)})}return arguments.length>1?this.each(function(){Q.data(this,a,v)}):j?$(j,a,Q.data(j,a)):undefined},removeData:function(a){return this.each(function(){Q.removeData(this,a)})}});Q.extend({queue:function(a,t,b){var j;if(a){t=(t||"fx")+"queue";j=Q._data(a,t);if(b){if(!j||Q.isArray(b)){j=Q._data(a,t,Q.makeArray(b))}else{j.push(b)}}return j||[]}},dequeue:function(a,t){t=t||"fx";var b=Q.queue(a,t),s=b.length,j=b.shift(),l=Q._queueHooks(a,t),n=function(){Q.dequeue(a,t)};if(j==="inprogress"){j=b.shift();s--}if(j){if(t==="fx"){b.unshift("inprogress")}delete l.stop;j.call(a,n,l)}if(!s&&l){l.empty.fire()}},_queueHooks:function(a,t){var b=t+"queueHooks";return Q._data(a,b)||Q._data(a,b,{empty:Q.Callbacks("once memory").add(function(){Q._removeData(a,t+"queue");Q._removeData(a,b)})})}});Q.fn.extend({queue:function(t,a){var s=2;if(typeof t!=="string"){a=t;t="fx";s--}if(arguments.length<s){return Q.queue(this[0],t)}return a===undefined?this:this.each(function(){var b=Q.queue(this,t,a);Q._queueHooks(this,t);if(t==="fx"&&b[0]!=="inprogress"){Q.dequeue(this,t)}})},dequeue:function(t){return this.each(function(){Q.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,a){var b,j=1,l=Q.Deferred(),m=this,i=this.length,r=function(){if(!(--j)){l.resolveWith(m,[m])}};if(typeof t!=="string"){a=t;t=undefined}t=t||"fx";while(i--){b=Q._data(m[i],t+"queueHooks");if(b&&b.empty){j++;b.empty.add(r)}}r();return l.promise(a)}});var d1=(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var e1=["Top","Right","Bottom","Left"];var f1=function(a,b){a=b||a;return Q.css(a,"display")==="none"||!Q.contains(a.ownerDocument,a)};var g1=Q.access=function(a,b,j,v,l,m,r){var i=0,n=a.length,p=j==null;if(Q.type(j)==="object"){l=true;for(i in j){Q.access(a,b,i,j[i],true,m,r)}}else if(v!==undefined){l=true;if(!Q.isFunction(v)){r=true}if(p){if(r){b.call(a,v);b=null}else{p=b;b=function(s,j,v){return p.call(Q(s),v)}}}if(b){for(;i<n;i++){b(a[i],j,r?v:v.call(a[i],i,b(a[i],j)))}}}return l?a:p?b.call(a):n?b(a[0],j):m};var h1=(/^(?:checkbox|radio)$/i);(function(){var a=J.createElement("input"),b=J.createElement("div"),j=J.createDocumentFragment();b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";x.leadingWhitespace=b.firstChild.nodeType===3;x.tbody=!b.getElementsByTagName("tbody").length;x.htmlSerialize=!!b.getElementsByTagName("link").length;x.html5Clone=J.createElement("nav").cloneNode(true).outerHTML!=="<:nav></:nav>";a.type="checkbox";a.checked=true;j.appendChild(a);x.appendChecked=a.checked;b.innerHTML="<textarea>x</textarea>";x.noCloneChecked=!!b.cloneNode(true).lastChild.defaultValue;j.appendChild(b);b.innerHTML="<input type='radio' checked='checked' name='t'/>";x.checkClone=b.cloneNode(true).cloneNode(true).lastChild.checked;x.noCloneEvent=true;if(b.attachEvent){b.attachEvent("onclick",function(){x.noCloneEvent=false});b.cloneNode(true).click()}if(x.deleteExpando==null){x.deleteExpando=true;try{delete b.test}catch(e){x.deleteExpando=false}}})();(function(){var i,a,b=J.createElement("div");for(i in{submit:true,change:true,focusin:true}){a="on"+i;if(!(x[i+"Bubbles"]=a in w)){b.setAttribute(a,"t");x[i+"Bubbles"]=b.attributes[a].expando===false}}b=null})();var i1=/^(?:input|select|textarea)$/i,j1=/^key/,k1=/^(?:mouse|pointer|contextmenu)|click/,l1=/^(?:focusinfocus|focusoutblur)$/,m1=/^([^.]*)(?:\.(.+)|)$/;function n1(){return true}function o1(){return false}function p1(){try{return J.activeElement}catch(a){}}Q.event={global:{},add:function(a,b,j,l,s){var m,n,t,p,r,v,_,r3,s3,t3,u3,v3=Q._data(a);if(!v3){return}if(j.handler){p=j;j=p.handler;s=p.selector}if(!j.guid){j.guid=Q.guid++}if(!(n=v3.events)){n=v3.events={}}if(!(v=v3.handle)){v=v3.handle=function(e){return typeof Q!==X&&(!e||Q.event.triggered!==e.type)?Q.event.dispatch.apply(v.elem,arguments):undefined};v.elem=a}b=(b||"").match(P)||[""];t=b.length;while(t--){m=m1.exec(b[t])||[];s3=u3=m[1];t3=(m[2]||"").split(".").sort();if(!s3){continue}r=Q.event.special[s3]||{};s3=(s?r.delegateType:r.bindType)||s3;r=Q.event.special[s3]||{};_=Q.extend({type:s3,origType:u3,data:l,handler:j,guid:j.guid,selector:s,needsContext:s&&Q.expr.match.needsContext.test(s),namespace:t3.join(".")},p);if(!(r3=n[s3])){r3=n[s3]=[];r3.delegateCount=0;if(!r.setup||r.setup.call(a,l,t3,v)===false){if(a.addEventListener){a.addEventListener(s3,v,false)}else if(a.attachEvent){a.attachEvent("on"+s3,v)}}}if(r.add){r.add.call(a,_);if(!_.handler.guid){_.handler.guid=j.guid}}if(s){r3.splice(r3.delegateCount++,0,_)}else{r3.push(_)}Q.event.global[s3]=true}a=null},remove:function(a,b,l,s,m){var j,n,p,r,t,v,_,r3,s3,t3,u3,v3=Q.hasData(a)&&Q._data(a);if(!v3||!(v=v3.events)){return}b=(b||"").match(P)||[""];t=b.length;while(t--){p=m1.exec(b[t])||[];s3=u3=p[1];t3=(p[2]||"").split(".").sort();if(!s3){for(s3 in v){Q.event.remove(a,s3+b[t],l,s,true)}continue}_=Q.event.special[s3]||{};s3=(s?_.delegateType:_.bindType)||s3;r3=v[s3]||[];p=p[2]&&new RegExp("(^|\\.)"+t3.join("\\.(?:.*\\.|)")+"(\\.|$)");r=j=r3.length;while(j--){n=r3[j];if((m||u3===n.origType)&&(!l||l.guid===n.guid)&&(!p||p.test(n.namespace))&&(!s||s===n.selector||s==="**"&&n.selector)){r3.splice(j,1);if(n.selector){r3.delegateCount--}if(_.remove){_.remove.call(a,n)}}}if(r&&!r3.length){if(!_.teardown||_.teardown.call(a,t3,v3.handle)===false){Q.removeEvent(a,s3,v3.handle)}delete v[s3]}}if(Q.isEmptyObject(v)){delete v3.handle;Q._removeData(a,"events")}},trigger:function(a,b,j,l){var m,n,p,r,s,t,i,v=[j||J],_=u.call(a,"type")?a.type:a,r3=u.call(a,"namespace")?a.namespace.split("."):[];p=t=j=j||J;if(j.nodeType===3||j.nodeType===8){return}if(l1.test(_+Q.event.triggered)){return}if(_.indexOf(".")>=0){r3=_.split(".");_=r3.shift();r3.sort()}n=_.indexOf(":")<0&&"on"+_;a=a[Q.expando]?a:new Q.Event(_,typeof a==="object"&&a);a.isTrigger=l?2:3;a.namespace=r3.join(".");a.namespace_re=a.namespace?new RegExp("(^|\\.)"+r3.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;a.result=undefined;if(!a.target){a.target=j}b=b==null?[a]:Q.makeArray(b,[a]);s=Q.event.special[_]||{};if(!l&&s.trigger&&s.trigger.apply(j,b)===false){return}if(!l&&!s.noBubble&&!Q.isWindow(j)){r=s.delegateType||_;if(!l1.test(r+_)){p=p.parentNode}for(;p;p=p.parentNode){v.push(p);t=p}if(t===(j.ownerDocument||J)){v.push(t.defaultView||t.parentWindow||w)}}i=0;while((p=v[i++])&&!a.isPropagationStopped()){a.type=i>1?r:s.bindType||_;m=(Q._data(p,"events")||{})[a.type]&&Q._data(p,"handle");if(m){m.apply(p,b)}m=n&&p[n];if(m&&m.apply&&Q.acceptData(p)){a.result=m.apply(p,b);if(a.result===false){a.preventDefault()}}}a.type=_;if(!l&&!a.isDefaultPrevented()){if((!s._default||s._default.apply(v.pop(),b)===false)&&Q.acceptData(j)){if(n&&j[_]&&!Q.isWindow(j)){t=j[n];if(t){j[n]=null}Q.event.triggered=_;try{j[_]()}catch(e){}Q.event.triggered=undefined;if(t){j[n]=t}}}}return a.result},dispatch:function(a){a=Q.event.fix(a);var i,r,b,m,j,l=[],n=f.call(arguments),p=(Q._data(this,"events")||{})[a.type]||[],s=Q.event.special[a.type]||{};n[0]=a;a.delegateTarget=this;if(s.preDispatch&&s.preDispatch.call(this,a)===false){return}l=Q.event.handlers.call(this,a,p);i=0;while((m=l[i++])&&!a.isPropagationStopped()){a.currentTarget=m.elem;j=0;while((b=m.handlers[j++])&&!a.isImmediatePropagationStopped()){if(!a.namespace_re||a.namespace_re.test(b.namespace)){a.handleObj=b;a.data=b.data;r=((Q.event.special[b.origType]||{}).handle||b.handler).apply(m.elem,n);if(r!==undefined){if((a.result=r)===false){a.preventDefault();a.stopPropagation()}}}}}if(s.postDispatch){s.postDispatch.call(this,a)}return a.result},handlers:function(a,b){var s,j,m,i,l=[],n=b.delegateCount,p=a.target;if(n&&p.nodeType&&(!a.button||a.type!=="click")){for(;p!=this;p=p.parentNode||this){if(p.nodeType===1&&(p.disabled!==true||a.type!=="click")){m=[];for(i=0;i<n;i++){j=b[i];s=j.selector+" ";if(m[s]===undefined){m[s]=j.needsContext?Q(s,this).index(p)>=0:Q.find(s,this,null,[p]).length}if(m[s]){m.push(j)}}if(m.length){l.push({elem:p,handlers:m})}}}}if(n<b.length){l.push({elem:this,handlers:b.slice(n)})}return l},fix:function(a){if(a[Q.expando]){return a}var i,p,b,t=a.type,j=a,l=this.fixHooks[t];if(!l){this.fixHooks[t]=l=k1.test(t)?this.mouseHooks:j1.test(t)?this.keyHooks:{}}b=l.props?this.props.concat(l.props):this.props;a=new Q.Event(j);i=b.length;while(i--){p=b[i];a[p]=j[p]}if(!a.target){a.target=j.srcElement||J}if(a.target.nodeType===3){a.target=a.target.parentNode}a.metaKey=!!a.metaKey;return l.filter?l.filter(a,j):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){if(a.which==null){a.which=b.charCode!=null?b.charCode:b.keyCode}return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var j,l,m,n=b.button,p=b.fromElement;if(a.pageX==null&&b.clientX!=null){l=a.target.ownerDocument||J;m=l.documentElement;j=l.body;a.pageX=b.clientX+(m&&m.scrollLeft||j&&j.scrollLeft||0)-(m&&m.clientLeft||j&&j.clientLeft||0);a.pageY=b.clientY+(m&&m.scrollTop||j&&j.scrollTop||0)-(m&&m.clientTop||j&&j.clientTop||0)}if(!a.relatedTarget&&p){a.relatedTarget=p===a.target?b.toElement:p}if(!a.which&&n!==undefined){a.which=(n&1?1:(n&2?3:(n&4?2:0)))}return a}},special:{load:{noBubble:true},focus:{trigger:function(){if(this!==p1()&&this.focus){try{this.focus();return false}catch(e){}}},delegateType:"focusin"},blur:{trigger:function(){if(this===p1()&&this.blur){this.blur();return false}},delegateType:"focusout"},click:{trigger:function(){if(Q.nodeName(this,"input")&&this.type==="checkbox"&&this.click){this.click();return false}},_default:function(a){return Q.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){if(a.result!==undefined&&a.originalEvent){a.originalEvent.returnValue=a.result}}}},simulate:function(t,a,b,j){var e=Q.extend(new Q.Event(),b,{type:t,isSimulated:true,originalEvent:{}});if(j){Q.event.trigger(e,null,a)}else{Q.event.dispatch.call(a,e)}if(e.isDefaultPrevented()){b.preventDefault()}}};Q.removeEvent=J.removeEventListener?function(a,t,b){if(a.removeEventListener){a.removeEventListener(t,b,false)}}:function(a,t,b){var n="on"+t;if(a.detachEvent){if(typeof a[n]===X){a[n]=null}a.detachEvent(n,b)}};Q.Event=function(s,p){if(!(this instanceof Q.Event)){return new Q.Event(s,p)}if(s&&s.type){this.originalEvent=s;this.type=s.type;this.isDefaultPrevented=s.defaultPrevented||s.defaultPrevented===undefined&&s.returnValue===false?n1:o1}else{this.type=s}if(p){Q.extend(this,p)}this.timeStamp=s&&s.timeStamp||Q.now();this[Q.expando]=true};Q.Event.prototype={isDefaultPrevented:o1,isPropagationStopped:o1,isImmediatePropagationStopped:o1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=n1;if(!e){return}if(e.preventDefault){e.preventDefault()}else{e.returnValue=false}},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=n1;if(!e){return}if(e.stopPropagation){e.stopPropagation()}e.cancelBubble=true},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=n1;if(e&&e.stopImmediatePropagation){e.stopImmediatePropagation()}this.stopPropagation()}};Q.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){Q.event.special[a]={delegateType:b,bindType:b,handle:function(j){var r,t=this,l=j.relatedTarget,m=j.handleObj;if(!l||(l!==t&&!Q.contains(t,l))){j.type=m.origType;r=m.handler.apply(this,arguments);j.type=b}return r}}});if(!x.submitBubbles){Q.event.special.submit={setup:function(){if(Q.nodeName(this,"form")){return false}Q.event.add(this,"click._submit keypress._submit",function(e){var a=e.target,b=Q.nodeName(a,"input")||Q.nodeName(a,"button")?a.form:undefined;if(b&&!Q._data(b,"submitBubbles")){Q.event.add(b,"submit._submit",function(j){j._submit_bubble=true});Q._data(b,"submitBubbles",true)}})},postDispatch:function(a){if(a._submit_bubble){delete a._submit_bubble;if(this.parentNode&&!a.isTrigger){Q.event.simulate("submit",this.parentNode,a,true)}}},teardown:function(){if(Q.nodeName(this,"form")){return false}Q.event.remove(this,"._submit")}}}if(!x.changeBubbles){Q.event.special.change={setup:function(){if(i1.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio"){Q.event.add(this,"propertychange._change",function(a){if(a.originalEvent.propertyName==="checked"){this._just_changed=true}});Q.event.add(this,"click._change",function(a){if(this._just_changed&&!a.isTrigger){this._just_changed=false}Q.event.simulate("change",this,a,true)})}return false}Q.event.add(this,"beforeactivate._change",function(e){var a=e.target;if(i1.test(a.nodeName)&&!Q._data(a,"changeBubbles")){Q.event.add(a,"change._change",function(b){if(this.parentNode&&!b.isSimulated&&!b.isTrigger){Q.event.simulate("change",this.parentNode,b,true)}});Q._data(a,"changeBubbles",true)}})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||(b.type!=="radio"&&b.type!=="checkbox")){return a.handleObj.handler.apply(this,arguments)}},teardown:function(){Q.event.remove(this,"._change");return!i1.test(this.nodeName)}}}if(!x.focusinBubbles){Q.each({focus:"focusin",blur:"focusout"},function(a,b){var j=function(l){Q.event.simulate(b,l.target,Q.event.fix(l),true)};Q.event.special[b]={setup:function(){var l=this.ownerDocument||this,m=Q._data(l,b);if(!m){l.addEventListener(a,j,true)}Q._data(l,b,(m||0)+1)},teardown:function(){var l=this.ownerDocument||this,m=Q._data(l,b)-1;if(!m){l.removeEventListener(a,j,true);Q._removeData(l,b)}else{Q._data(l,b,m)}}}})}Q.fn.extend({on:function(t,s,a,b,j){var l,m;if(typeof t==="object"){if(typeof s!=="string"){a=a||s;s=undefined}for(l in t){this.on(l,s,a,t[l],j)}return this}if(a==null&&b==null){b=s;a=s=undefined}else if(b==null){if(typeof s==="string"){b=a;a=undefined}else{b=a;a=s;s=undefined}}if(b===false){b=o1}else if(!b){return this}if(j===1){m=b;b=function(n){Q().off(n);return m.apply(this,arguments)};b.guid=m.guid||(m.guid=Q.guid++)}return this.each(function(){Q.event.add(this,t,b,a,s)})},one:function(t,s,a,b){return this.on(t,s,a,b,1)},off:function(t,s,a){var b,j;if(t&&t.preventDefault&&t.handleObj){b=t.handleObj;Q(t.delegateTarget).off(b.namespace?b.origType+"."+b.namespace:b.origType,b.selector,b.handler);return this}if(typeof t==="object"){for(j in t){this.off(j,s,t[j])}return this}if(s===false||typeof s==="function"){a=s;s=undefined}if(a===false){a=o1}return this.each(function(){Q.event.remove(this,t,a,s)})},trigger:function(t,a){return this.each(function(){Q.event.trigger(t,a,this)})},triggerHandler:function(t,a){var b=this[0];if(b){return Q.event.trigger(t,a,b,true)}}});function q1(J){var l=r1.split("|"),s=J.createDocumentFragment();if(s.createElement){while(l.length){s.createElement(l.pop())}}return s}var r1="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|"+"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",s1=/ jQuery\d+="(?:null|\d+)"/g,t1=new RegExp("<(?:"+r1+")[\\s/>]","i"),u1=/^\s+/,v1=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,w1=/<([\w:]+)/,x1=/<tbody/i,y1=/<|&#?\w+;/,z1=/<(?:script|style|link)/i,A1=/checked\s*(?:[^=]|=\s*.checked.)/i,B1=/^$|\/(?:java|ecma)script/i,C1=/^true\/(.*)/,D1=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,E1={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:x.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},F1=q1(J),G1=F1.appendChild(J.createElement("div"));E1.optgroup=E1.option;E1.tbody=E1.tfoot=E1.colgroup=E1.caption=E1.thead;E1.th=E1.td;function H1(a,t){var b,j,i=0,l=typeof a.getElementsByTagName!==X?a.getElementsByTagName(t||"*"):typeof a.querySelectorAll!==X?a.querySelectorAll(t||"*"):undefined;if(!l){for(l=[],b=a.childNodes||a;(j=b[i])!=null;i++){if(!t||Q.nodeName(j,t)){l.push(j)}else{Q.merge(l,H1(j,t))}}}return t===undefined||t&&Q.nodeName(a,t)?Q.merge([a],l):l}function I1(a){if(h1.test(a.type)){a.defaultChecked=a.checked}}function J1(a,b){return Q.nodeName(a,"table")&&Q.nodeName(b.nodeType!==11?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function K1(a){a.type=(Q.find.attr(a,"type")!==null)+"/"+a.type;return a}function L1(a){var m=C1.exec(a.type);if(m){a.type=m[1]}else{a.removeAttribute("type")}return a}function M1(a,r){var b,i=0;for(;(b=a[i])!=null;i++){Q._data(b,"globalEval",!r||Q._data(r[i],"globalEval"))}}function N1(s,a){if(a.nodeType!==1||!Q.hasData(s)){return}var t,i,l,b=Q._data(s),j=Q._data(a,b),m=b.events;if(m){delete j.handle;j.events={};for(t in m){for(i=0,l=m[t].length;i<l;i++){Q.event.add(a,t,m[t][i])}}}if(j.data){j.data=Q.extend({},j.data)}}function O1(s,a){var n,e,b;if(a.nodeType!==1){return}n=a.nodeName.toLowerCase();if(!x.noCloneEvent&&a[Q.expando]){b=Q._data(a);for(e in b.events){Q.removeEvent(a,e,b.handle)}a.removeAttribute(Q.expando)}if(n==="script"&&a.text!==s.text){K1(a).text=s.text;L1(a)}else if(n==="object"){if(a.parentNode){a.outerHTML=s.outerHTML}if(x.html5Clone&&(s.innerHTML&&!Q.trim(a.innerHTML))){a.innerHTML=s.innerHTML}}else if(n==="input"&&h1.test(s.type)){a.defaultChecked=a.checked=s.checked;if(a.value!==s.value){a.value=s.value}}else if(n==="option"){a.defaultSelected=a.selected=s.defaultSelected}else if(n==="input"||n==="textarea"){a.defaultValue=s.defaultValue}}Q.extend({clone:function(a,b,j){var l,n,m,i,s,p=Q.contains(a.ownerDocument,a);if(x.html5Clone||Q.isXMLDoc(a)||!t1.test("<"+a.nodeName+">")){m=a.cloneNode(true)}else{G1.innerHTML=a.outerHTML;G1.removeChild(m=G1.firstChild)}if((!x.noCloneEvent||!x.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!Q.isXMLDoc(a)){l=H1(m);s=H1(a);for(i=0;(n=s[i])!=null;++i){if(l[i]){O1(n,l[i])}}}if(b){if(j){s=s||H1(a);l=l||H1(m);for(i=0;(n=s[i])!=null;i++){N1(n,l[i])}}else{N1(a,m)}}l=H1(m,"script");if(l.length>0){M1(l,!p&&H1(a,"script"))}l=s=n=null;return m},buildFragment:function(a,b,s,m){var j,n,p,t,r,v,_,l=a.length,r3=q1(b),s3=[],i=0;for(;i<l;i++){n=a[i];if(n||n===0){if(Q.type(n)==="object"){Q.merge(s3,n.nodeType?[n]:n)}else if(!y1.test(n)){s3.push(b.createTextNode(n))}else{t=t||r3.appendChild(b.createElement("div"));r=(w1.exec(n)||["",""])[1].toLowerCase();_=E1[r]||E1._default;t.innerHTML=_[1]+n.replace(v1,"<$1></$2>")+_[2];j=_[0];while(j--){t=t.lastChild}if(!x.leadingWhitespace&&u1.test(n)){s3.push(b.createTextNode(u1.exec(n)[0]))}if(!x.tbody){n=r==="table"&&!x1.test(n)?t.firstChild:_[1]==="<table>"&&!x1.test(n)?t:0;j=n&&n.childNodes.length;while(j--){if(Q.nodeName((v=n.childNodes[j]),"tbody")&&!v.childNodes.length){n.removeChild(v)}}}Q.merge(s3,t.childNodes);t.textContent="";while(t.firstChild){t.removeChild(t.firstChild)}t=r3.lastChild}}}if(t){r3.removeChild(t)}if(!x.appendChecked){Q.grep(H1(s3,"input"),I1)}i=0;while((n=s3[i++])){if(m&&Q.inArray(n,m)!==-1){continue}p=Q.contains(n.ownerDocument,n);t=H1(r3.appendChild(n),"script");if(p){M1(t)}if(s){j=0;while((n=t[j++])){if(B1.test(n.type||"")){s.push(n)}}}}t=null;return r3},cleanData:function(a,b){var j,t,l,m,i=0,n=Q.expando,p=Q.cache,r=x.deleteExpando,s=Q.event.special;for(;(j=a[i])!=null;i++){if(b||Q.acceptData(j)){l=j[n];m=l&&p[l];if(m){if(m.events){for(t in m.events){if(s[t]){Q.event.remove(j,t)}else{Q.removeEvent(j,t,m.handle)}}}if(p[l]){delete p[l];if(r){delete j[n]}else if(typeof j.removeAttribute!==X){j.removeAttribute(n)}else{j[n]=null}d.push(l)}}}}}});Q.fn.extend({text:function(v){return g1(this,function(v){return v===undefined?Q.text(this):this.empty().append((this[0]&&this[0].ownerDocument||J).createTextNode(v))},null,v,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var t=J1(this,a);t.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var t=J1(this,a);t.insertBefore(a,t.firstChild)}})},before:function(){return this.domManip(arguments,function(a){if(this.parentNode){this.parentNode.insertBefore(a,this)}})},after:function(){return this.domManip(arguments,function(a){if(this.parentNode){this.parentNode.insertBefore(a,this.nextSibling)}})},remove:function(s,a){var b,j=s?Q.filter(s,this):this,i=0;for(;(b=j[i])!=null;i++){if(!a&&b.nodeType===1){Q.cleanData(H1(b))}if(b.parentNode){if(a&&Q.contains(b.ownerDocument,b)){M1(H1(b,"script"))}b.parentNode.removeChild(b)}}return this},empty:function(){var a,i=0;for(;(a=this[i])!=null;i++){if(a.nodeType===1){Q.cleanData(H1(a,false))}while(a.firstChild){a.removeChild(a.firstChild)}if(a.options&&Q.nodeName(a,"select")){a.options.length=0}}return this},clone:function(a,b){a=a==null?false:a;b=b==null?a:b;return this.map(function(){return Q.clone(this,a,b)})},html:function(v){return g1(this,function(v){var a=this[0]||{},i=0,l=this.length;if(v===undefined){return a.nodeType===1?a.innerHTML.replace(s1,""):undefined}if(typeof v==="string"&&!z1.test(v)&&(x.htmlSerialize||!t1.test(v))&&(x.leadingWhitespace||!u1.test(v))&&!E1[(w1.exec(v)||["",""])[1].toLowerCase()]){v=v.replace(v1,"<$1></$2>");try{for(;i<l;i++){a=this[i]||{};if(a.nodeType===1){Q.cleanData(H1(a,false));a.innerHTML=v}}a=0}catch(e){}}if(a){this.empty().append(v)}},null,v,arguments.length)},replaceWith:function(){var a=arguments[0];this.domManip(arguments,function(b){a=this.parentNode;Q.cleanData(H1(this));if(a){a.replaceChild(b,this)}});return a&&(a.length||a.nodeType)?this:this.remove()},detach:function(s){return this.remove(s,true)},domManip:function(a,b){a=g.apply([],a);var j,n,m,s,p,r,i=0,l=this.length,t=this,v=l-1,_=a[0],r3=Q.isFunction(_);if(r3||(l>1&&typeof _==="string"&&!x.checkClone&&A1.test(_))){return this.each(function(s3){var t3=t.eq(s3);if(r3){a[0]=_.call(this,s3,t3.html())}t3.domManip(a,b)})}if(l){r=Q.buildFragment(a,this[0].ownerDocument,false,this);j=r.firstChild;if(r.childNodes.length===1){r=j}if(j){s=Q.map(H1(r,"script"),K1);m=s.length;for(;i<l;i++){n=r;if(i!==v){n=Q.clone(n,true,true);if(m){Q.merge(s,H1(n,"script"))}}b.call(this[i],n,i)}if(m){p=s[s.length-1].ownerDocument;Q.map(s,L1);for(i=0;i<m;i++){n=s[i];if(B1.test(n.type||"")&&!Q._data(n,"globalEval")&&Q.contains(p,n)){if(n.src){if(Q._evalUrl){Q._evalUrl(n.src)}}else{Q.globalEval((n.text||n.textContent||n.innerHTML||"").replace(D1,""))}}}}r=j=null}}return this}});Q.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(n,a){Q.fn[n]=function(s){var b,i=0,r=[],j=Q(s),l=j.length-1;for(;i<=l;i++){b=i===l?this:this.clone(true);Q(j[i])[a](b);h.apply(r,b.get())}return this.pushStack(r)}});var P1,Q1={};function R1(n,a){var s,b=Q(a.createElement(n)).appendTo(a.body),j=w.getDefaultComputedStyle&&(s=w.getDefaultComputedStyle(b[0]))?s.display:Q.css(b[0],"display");b.detach();return j}function S1(n){var a=J,b=Q1[n];if(!b){b=R1(n,a);if(b==="none"||!b){P1=(P1||Q("<iframe frameborder='0' width='0' height='0'/>")).appendTo(a.documentElement);a=(P1[0].contentWindow||P1[0].contentDocument).document;a.write();a.close();b=R1(n,a);P1.detach()}Q1[n]=b}return b}(function(){var s;x.shrinkWrapBlocks=function(){if(s!=null){return s}s=false;var a,b,j;b=J.getElementsByTagName("body")[0];if(!b||!b.style){return}a=J.createElement("div");j=J.createElement("div");j.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";b.appendChild(j).appendChild(a);if(typeof a.style.zoom!==X){a.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;"+"box-sizing:content-box;display:block;margin:0;border:0;"+"padding:1px;width:1px;zoom:1";a.appendChild(J.createElement("div")).style.width="5px";s=a.offsetWidth!==3}b.removeChild(j);return s}})();var T1=(/^margin/);var U1=new RegExp("^("+d1+")(?!px)[a-z%]+$","i");var V1,W1,X1=/^(top|right|bottom|left)$/;if(w.getComputedStyle){V1=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};W1=function(a,n,b){var j,m,l,r,s=a.style;b=b||V1(a);r=b?b.getPropertyValue(n)||b[n]:undefined;if(b){if(r===""&&!Q.contains(a.ownerDocument,a)){r=Q.style(a,n)}if(U1.test(r)&&T1.test(n)){j=s.width;m=s.minWidth;l=s.maxWidth;s.minWidth=s.maxWidth=s.width=r;r=b.width;s.width=j;s.minWidth=m;s.maxWidth=l}}return r===undefined?r:r+""}}else if(J.documentElement.currentStyle){V1=function(a){return a.currentStyle};W1=function(a,n,b){var l,r,j,m,s=a.style;b=b||V1(a);m=b?b[n]:undefined;if(m==null&&s&&s[n]){m=s[n]}if(U1.test(m)&&!X1.test(n)){l=s.left;r=a.runtimeStyle;j=r&&r.left;if(j){r.left=a.currentStyle.left}s.left=n==="fontSize"?"1em":m;m=s.pixelLeft+"px";s.left=l;if(j){r.left=j}}return m===undefined?m:m+""||"auto"}}function Y1(a,b){return{get:function(){var j=a();if(j==null){return}if(j){delete this.get;return}return(this.get=b).apply(this,arguments)}}}(function(){var b,s,a,p,j,r,l;b=J.createElement("div");b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";a=b.getElementsByTagName("a")[0];s=a&&a.style;if(!s){return}s.cssText="float:left;opacity:.5";x.opacity=s.opacity==="0.5";x.cssFloat=!!s.cssFloat;b.style.backgroundClip="content-box";b.cloneNode(true).style.backgroundClip="";x.clearCloneStyle=b.style.backgroundClip==="content-box";x.boxSizing=s.boxSizing===""||s.MozBoxSizing===""||s.WebkitBoxSizing==="";Q.extend(x,{reliableHiddenOffsets:function(){if(r==null){m()}return r},boxSizingReliable:function(){if(j==null){m()}return j},pixelPosition:function(){if(p==null){m()}return p},reliableMarginRight:function(){if(l==null){m()}return l}});function m(){var b,n,t,v;n=J.getElementsByTagName("body")[0];if(!n||!n.style){return}b=J.createElement("div");t=J.createElement("div");t.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px";n.appendChild(t).appendChild(b);b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;"+"box-sizing:border-box;display:block;margin-top:1%;top:1%;"+"border:1px;padding:1px;width:4px;position:absolute";p=j=false;l=true;if(w.getComputedStyle){p=(w.getComputedStyle(b,null)||{}).top!=="1%";j=(w.getComputedStyle(b,null)||{width:"4px"}).width==="4px";v=b.appendChild(J.createElement("div"));v.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;"+"box-sizing:content-box;display:block;margin:0;border:0;padding:0";v.style.marginRight=v.style.width="0";b.style.width="1px";l=!parseFloat((w.getComputedStyle(v,null)||{}).marginRight)}b.innerHTML="<table><tr><td></td><td>t</td></tr></table>";v=b.getElementsByTagName("td");v[0].style.cssText="margin:0;border:0;padding:0;display:none";r=v[0].offsetHeight===0;if(r){v[0].style.display="";v[1].style.display="none";r=v[0].offsetHeight===0}n.removeChild(t)}})();Q.swap=function(a,b,j,l){var r,n,m={};for(n in b){m[n]=a.style[n];a.style[n]=b[n]}r=j.apply(a,l||[]);for(n in b){a.style[n]=m[n]}return r};var Z1=/alpha\([^)]*\)/i,$1=/opacity\s*=\s*([^)]*)/,_1=/^(none|table(?!-c[ea]).+)/,a2=new RegExp("^("+d1+")(.*)$","i"),b2=new RegExp("^([+-])=("+d1+")","i"),c2={position:"absolute",visibility:"hidden",display:"block"},d2={letterSpacing:"0",fontWeight:"400"},e2=["Webkit","O","Moz","ms"];function f2(s,n){if(n in s){return n}var a=n.charAt(0).toUpperCase()+n.slice(1),b=n,i=e2.length;while(i--){n=e2[i]+a;if(n in s){return n}}return b}function g2(a,s){var b,j,l,v=[],m=0,n=a.length;for(;m<n;m++){j=a[m];if(!j.style){continue}v[m]=Q._data(j,"olddisplay");b=j.style.display;if(s){if(!v[m]&&b==="none"){j.style.display=""}if(j.style.display===""&&f1(j)){v[m]=Q._data(j,"olddisplay",S1(j.nodeName))}}else{l=f1(j);if(b&&b!=="none"||!l){Q._data(j,"olddisplay",l?b:Q.css(j,"display"))}}}for(m=0;m<n;m++){j=a[m];if(!j.style){continue}if(!s||j.style.display==="none"||j.style.display===""){j.style.display=s?v[m]||"":"none"}}return a}function h2(a,v,s){var m=a2.exec(v);return m?Math.max(0,m[1]-(s||0))+(m[2]||"px"):v}function i2(a,n,b,j,s){var i=b===(j?"border":"content")?4:n==="width"?1:0,v=0;for(;i<4;i+=2){if(b==="margin"){v+=Q.css(a,b+e1[i],true,s)}if(j){if(b==="content"){v-=Q.css(a,"padding"+e1[i],true,s)}if(b!=="margin"){v-=Q.css(a,"border"+e1[i]+"Width",true,s)}}else{v+=Q.css(a,"padding"+e1[i],true,s);if(b!=="padding"){v+=Q.css(a,"border"+e1[i]+"Width",true,s)}}}return v}function j2(a,n,b){var v=true,j=n==="width"?a.offsetWidth:a.offsetHeight,s=V1(a),l=x.boxSizing&&Q.css(a,"boxSizing",false,s)==="border-box";if(j<=0||j==null){j=W1(a,n,s);if(j<0||j==null){j=a.style[n]}if(U1.test(j)){return j}v=l&&(x.boxSizingReliable()||j===a.style[n]);j=parseFloat(j)||0}return(j+i2(a,n,b||(l?"border":"content"),v,s))+"px"}Q.extend({cssHooks:{opacity:{get:function(a,b){if(b){var r=W1(a,"opacity");return r===""?"1":r}}}},cssNumber:{"columnCount":true,"fillOpacity":true,"flexGrow":true,"flexShrink":true,"fontWeight":true,"lineHeight":true,"opacity":true,"order":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},cssProps:{"float":x.cssFloat?"cssFloat":"styleFloat"},style:function(a,n,v,b){if(!a||a.nodeType===3||a.nodeType===8||!a.style){return}var r,t,j,l=Q.camelCase(n),s=a.style;n=Q.cssProps[l]||(Q.cssProps[l]=f2(s,l));j=Q.cssHooks[n]||Q.cssHooks[l];if(v!==undefined){t=typeof v;if(t==="string"&&(r=b2.exec(v))){v=(r[1]+1)*r[2]+parseFloat(Q.css(a,n));t="number"}if(v==null||v!==v){return}if(t==="number"&&!Q.cssNumber[l]){v+="px"}if(!x.clearCloneStyle&&v===""&&n.indexOf("background")===0){s[n]="inherit"}if(!j||!("set"in j)||(v=j.set(a,v,b))!==undefined){try{s[n]=v}catch(e){}}}else{if(j&&"get"in j&&(r=j.get(a,false,b))!==undefined){return r}return s[n]}},css:function(a,n,b,s){var j,v,l,m=Q.camelCase(n);n=Q.cssProps[m]||(Q.cssProps[m]=f2(a.style,m));l=Q.cssHooks[n]||Q.cssHooks[m];if(l&&"get"in l){v=l.get(a,true,b)}if(v===undefined){v=W1(a,n,s)}if(v==="normal"&&n in d2){v=d2[n]}if(b===""||b){j=parseFloat(v);return b===true||Q.isNumeric(j)?j||0:v}return v}});Q.each(["height","width"],function(i,n){Q.cssHooks[n]={get:function(a,b,j){if(b){return _1.test(Q.css(a,"display"))&&a.offsetWidth===0?Q.swap(a,c2,function(){return j2(a,n,j)}):j2(a,n,j)}},set:function(a,v,b){var s=b&&V1(a);return h2(a,v,b?i2(a,n,b,x.boxSizing&&Q.css(a,"boxSizing",false,s)==="border-box",s):0)}}});if(!x.opacity){Q.cssHooks.opacity={get:function(a,b){return $1.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?(0.01*parseFloat(RegExp.$1))+"":b?"1":""},set:function(a,v){var s=a.style,b=a.currentStyle,j=Q.isNumeric(v)?"alpha(opacity="+v*100+")":"",l=b&&b.filter||s.filter||"";s.zoom=1;if((v>=1||v==="")&&Q.trim(l.replace(Z1,""))===""&&s.removeAttribute){s.removeAttribute("filter");if(v===""||b&&!b.filter){return}}s.filter=Z1.test(l)?l.replace(Z1,j):l+" "+j}}}Q.cssHooks.marginRight=Y1(x.reliableMarginRight,function(a,b){if(b){return Q.swap(a,{"display":"inline-block"},W1,[a,"marginRight"])}});Q.each({margin:"",padding:"",border:"Width"},function(p,s){Q.cssHooks[p+s]={expand:function(v){var i=0,a={},b=typeof v==="string"?v.split(" "):[v];for(;i<4;i++){a[p+e1[i]+s]=b[i]||b[i-2]||b[0]}return a}};if(!T1.test(p)){Q.cssHooks[p+s].set=h2}});Q.fn.extend({css:function(n,v){return g1(this,function(a,n,v){var s,l,m={},i=0;if(Q.isArray(n)){s=V1(a);l=n.length;for(;i<l;i++){m[n[i]]=Q.css(a,n[i],false,s)}return m}return v!==undefined?Q.style(a,n,v):Q.css(a,n)},n,v,arguments.length>1)},show:function(){return g2(this,true)},hide:function(){return g2(this)},toggle:function(s){if(typeof s==="boolean"){return s?this.show():this.hide()}return this.each(function(){if(f1(this)){Q(this).show()}else{Q(this).hide()}})}});function k2(a,b,p,j,l){return new k2.prototype.init(a,b,p,j,l)}Q.Tween=k2;k2.prototype={constructor:k2,init:function(a,b,p,j,l,m){this.elem=a;this.prop=p;this.easing=l||"swing";this.options=b;this.start=this.now=this.cur();this.end=j;this.unit=m||(Q.cssNumber[p]?"":"px")},cur:function(){var a=k2.propHooks[this.prop];return a&&a.get?a.get(this):k2.propHooks._default.get(this)},run:function(p){var a,b=k2.propHooks[this.prop];if(this.options.duration){this.pos=a=Q.easing[this.easing](p,this.options.duration*p,0,1,this.options.duration)}else{this.pos=a=p}this.now=(this.end-this.start)*a+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this)}if(b&&b.set){b.set(this)}else{k2.propHooks._default.set(this)}return this}};k2.prototype.init.prototype=k2.prototype;k2.propHooks={_default:{get:function(t){var r;if(t.elem[t.prop]!=null&&(!t.elem.style||t.elem.style[t.prop]==null)){return t.elem[t.prop]}r=Q.css(t.elem,t.prop,"");return!r||r==="auto"?0:r},set:function(t){if(Q.fx.step[t.prop]){Q.fx.step[t.prop](t)}else if(t.elem.style&&(t.elem.style[Q.cssProps[t.prop]]!=null||Q.cssHooks[t.prop])){Q.style(t.elem,t.prop,t.now+t.unit)}else{t.elem[t.prop]=t.now}}}};k2.propHooks.scrollTop=k2.propHooks.scrollLeft={set:function(t){if(t.elem.nodeType&&t.elem.parentNode){t.elem[t.prop]=t.now}}};Q.easing={linear:function(p){return p},swing:function(p){return 0.5-Math.cos(p*Math.PI)/2}};Q.fx=k2.prototype.init;Q.fx.step={};var l2,m2,n2=/^(?:toggle|show|hide)$/,o2=new RegExp("^(?:([+-])=|)("+d1+")([a-z%]*)$","i"),p2=/queueHooks$/,q2=[v2],r2={"*":[function(p,v){var t=this.createTween(p,v),a=t.cur(),b=o2.exec(v),j=b&&b[3]||(Q.cssNumber[p]?"":"px"),s=(Q.cssNumber[p]||j!=="px"&&+a)&&o2.exec(Q.css(t.elem,p)),l=1,m=20;if(s&&s[3]!==j){j=j||s[3];b=b||[];s=+a||1;do{l=l||".5";s=s/l;Q.style(t.elem,p,s+j)}while(l!==(l=t.cur()/a)&&l!==1&&--m)}if(b){s=t.start=+s||+a||0;t.unit=j;t.end=b[1]?s+(b[1]+1)*b[2]:+b[2]}return t}]};function s2(){setTimeout(function(){l2=undefined});return(l2=Q.now())}function t2(t,a){var b,j={height:t},i=0;a=a?1:0;for(;i<4;i+=2-a){b=e1[i];j["margin"+b]=j["padding"+b]=t}if(a){j.opacity=j.width=t}return j}function u2(v,p,a){var t,b=(r2[p]||[]).concat(r2["*"]),j=0,l=b.length;for(;j<l;j++){if((t=b[j].call(a,p,v))){return t}}}function v2(a,p,b){var j,v,t,l,m,n,r,s,_=this,r3={},s3=a.style,t3=a.nodeType&&f1(a),u3=Q._data(a,"fxshow");if(!b.queue){m=Q._queueHooks(a,"fx");if(m.unqueued==null){m.unqueued=0;n=m.empty.fire;m.empty.fire=function(){if(!m.unqueued){n()}}}m.unqueued++;_.always(function(){_.always(function(){m.unqueued--;if(!Q.queue(a,"fx").length){m.empty.fire()}})})}if(a.nodeType===1&&("height"in p||"width"in p)){b.overflow=[s3.overflow,s3.overflowX,s3.overflowY];r=Q.css(a,"display");s=r==="none"?Q._data(a,"olddisplay")||S1(a.nodeName):r;if(s==="inline"&&Q.css(a,"float")==="none"){if(!x.inlineBlockNeedsLayout||S1(a.nodeName)==="inline"){s3.display="inline-block"}else{s3.zoom=1}}}if(b.overflow){s3.overflow="hidden";if(!x.shrinkWrapBlocks()){_.always(function(){s3.overflow=b.overflow[0];s3.overflowX=b.overflow[1];s3.overflowY=b.overflow[2]})}}for(j in p){v=p[j];if(n2.exec(v)){delete p[j];t=t||v==="toggle";if(v===(t3?"hide":"show")){if(v==="show"&&u3&&u3[j]!==undefined){t3=true}else{continue}}r3[j]=u3&&u3[j]||Q.style(a,j)}else{r=undefined}}if(!Q.isEmptyObject(r3)){if(u3){if("hidden"in u3){t3=u3.hidden}}else{u3=Q._data(a,"fxshow",{})}if(t){u3.hidden=!t3}if(t3){Q(a).show()}else{_.done(function(){Q(a).hide()})}_.done(function(){var j;Q._removeData(a,"fxshow");for(j in r3){Q.style(a,j,r3[j])}});for(j in r3){l=u2(t3?u3[j]:0,j,_);if(!(j in u3)){u3[j]=l.start;if(t3){l.end=l.start;l.start=j==="width"||j==="height"?1:0}}}}else if((r==="none"?S1(a.nodeName):r)==="inline"){s3.display=r}}function w2(p,s){var a,n,b,v,j;for(a in p){n=Q.camelCase(a);b=s[n];v=p[a];if(Q.isArray(v)){b=v[1];v=p[a]=v[0]}if(a!==n){p[n]=v;delete p[a]}j=Q.cssHooks[n];if(j&&"expand"in j){v=j.expand(v);delete p[n];for(a in v){if(!(a in p)){p[a]=v[a];s[a]=b}}}else{s[n]=b}}}function x2(a,p,b){var r,s,j=0,l=q2.length,m=Q.Deferred().always(function(){delete t.elem}),t=function(){if(s){return false}var _=l2||s2(),r3=Math.max(0,n.startTime+n.duration-_),s3=r3/n.duration||0,t3=1-s3,j=0,l=n.tweens.length;for(;j<l;j++){n.tweens[j].run(t3)}m.notifyWith(a,[n,t3,r3]);if(t3<1&&l){return r3}else{m.resolveWith(a,[n]);return false}},n=m.promise({elem:a,props:Q.extend({},p),opts:Q.extend(true,{specialEasing:{}},b),originalProperties:p,originalOptions:b,startTime:l2||s2(),duration:b.duration,tweens:[],createTween:function(_,r3){var s3=Q.Tween(a,n.opts,_,r3,n.opts.specialEasing[_]||n.opts.easing);n.tweens.push(s3);return s3},stop:function(_){var j=0,l=_?n.tweens.length:0;if(s){return this}s=true;for(;j<l;j++){n.tweens[j].run(1)}if(_){m.resolveWith(a,[n,_])}else{m.rejectWith(a,[n,_])}return this}}),v=n.props;w2(v,n.opts.specialEasing);for(;j<l;j++){r=q2[j].call(n,a,v,n.opts);if(r){return r}}Q.map(v,u2,n);if(Q.isFunction(n.opts.start)){n.opts.start.call(a,n)}Q.fx.timer(Q.extend(t,{elem:a,anim:n,queue:n.opts.queue}));return n.progress(n.opts.progress).done(n.opts.done,n.opts.complete).fail(n.opts.fail).always(n.opts.always)}Q.Animation=Q.extend(x2,{tweener:function(p,a){if(Q.isFunction(p)){a=p;p=["*"]}else{p=p.split(" ")}var b,j=0,l=p.length;for(;j<l;j++){b=p[j];r2[b]=r2[b]||[];r2[b].unshift(a)}},prefilter:function(a,p){if(p){q2.unshift(a)}else{q2.push(a)}}});Q.speed=function(s,a,b){var j=s&&typeof s==="object"?Q.extend({},s):{complete:b||!b&&a||Q.isFunction(s)&&s,duration:s,easing:b&&a||a&&!Q.isFunction(a)&&a};j.duration=Q.fx.off?0:typeof j.duration==="number"?j.duration:j.duration in Q.fx.speeds?Q.fx.speeds[j.duration]:Q.fx.speeds._default;if(j.queue==null||j.queue===true){j.queue="fx"}j.old=j.complete;j.complete=function(){if(Q.isFunction(j.old)){j.old.call(this)}if(j.queue){Q.dequeue(this,j.queue)}};return j};Q.fn.extend({fadeTo:function(s,t,a,b){return this.filter(f1).css("opacity",0).show().end().animate({opacity:t},s,a,b)},animate:function(p,s,a,b){var j=Q.isEmptyObject(p),l=Q.speed(s,a,b),m=function(){var n=x2(this,Q.extend({},p),l);if(j||Q._data(this,"finish")){n.stop(true)}};m.finish=m;return j||l.queue===false?this.each(m):this.queue(l.queue,m)},stop:function(t,a,b){var s=function(j){var l=j.stop;delete j.stop;l(b)};if(typeof t!=="string"){b=a;a=t;t=undefined}if(a&&t!==false){this.queue(t||"fx",[])}return this.each(function(){var j=true,l=t!=null&&t+"queueHooks",m=Q.timers,n=Q._data(this);if(l){if(n[l]&&n[l].stop){s(n[l])}}else{for(l in n){if(n[l]&&n[l].stop&&p2.test(l)){s(n[l])}}}for(l=m.length;l--;){if(m[l].elem===this&&(t==null||m[l].queue===t)){m[l].anim.stop(b);j=false;m.splice(l,1)}}if(j||!b){Q.dequeue(this,t)}})},finish:function(t){if(t!==false){t=t||"fx"}return this.each(function(){var a,b=Q._data(this),j=b[t+"queue"],l=b[t+"queueHooks"],m=Q.timers,n=j?j.length:0;b.finish=true;Q.queue(this,t,[]);if(l&&l.stop){l.stop.call(this,true)}for(a=m.length;a--;){if(m[a].elem===this&&m[a].queue===t){m[a].anim.stop(true);m.splice(a,1)}}for(a=0;a<n;a++){if(j[a]&&j[a].finish){j[a].finish.call(this)}}delete b.finish})}});Q.each(["toggle","show","hide"],function(i,n){var a=Q.fn[n];Q.fn[n]=function(s,b,j){return s==null||typeof s==="boolean"?a.apply(this,arguments):this.animate(t2(n,true),s,b,j)}});Q.each({slideDown:t2("show"),slideUp:t2("hide"),slideToggle:t2("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(n,p){Q.fn[n]=function(s,a,b){return this.animate(p,s,a,b)}});Q.timers=[];Q.fx.tick=function(){var t,a=Q.timers,i=0;l2=Q.now();for(;i<a.length;i++){t=a[i];if(!t()&&a[i]===t){a.splice(i--,1)}}if(!a.length){Q.fx.stop()}l2=undefined};Q.fx.timer=function(t){Q.timers.push(t);if(t()){Q.fx.start()}else{Q.timers.pop()}};Q.fx.interval=13;Q.fx.start=function(){if(!m2){m2=setInterval(Q.fx.tick,Q.fx.interval)}};Q.fx.stop=function(){clearInterval(m2);m2=null};Q.fx.speeds={slow:600,fast:200,_default:400};Q.fn.delay=function(t,a){t=Q.fx?Q.fx.speeds[t]||t:t;a=a||"fx";return this.queue(a,function(n,b){var j=setTimeout(n,t);b.stop=function(){clearTimeout(j)}})};(function(){var b,j,s,a,l;j=J.createElement("div");j.setAttribute("className","t");j.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";a=j.getElementsByTagName("a")[0];s=J.createElement("select");l=s.appendChild(J.createElement("option"));b=j.getElementsByTagName("input")[0];a.style.cssText="top:1px";x.getSetAttribute=j.className!=="t";x.style=/top/.test(a.getAttribute("style"));x.hrefNormalized=a.getAttribute("href")==="/a";x.checkOn=!!b.value;x.optSelected=l.selected;x.enctype=!!J.createElement("form").enctype;s.disabled=true;x.optDisabled=!l.disabled;b=J.createElement("input");b.setAttribute("value","");x.input=b.getAttribute("value")==="";b.value="t";b.setAttribute("type","radio");x.radioValue=b.value==="t"})();var y2=/\r/g;Q.fn.extend({val:function(v){var a,r,b,j=this[0];if(!arguments.length){if(j){a=Q.valHooks[j.type]||Q.valHooks[j.nodeName.toLowerCase()];if(a&&"get"in a&&(r=a.get(j,"value"))!==undefined){return r}r=j.value;return typeof r==="string"?r.replace(y2,""):r==null?"":r}return}b=Q.isFunction(v);return this.each(function(i){var l;if(this.nodeType!==1){return}if(b){l=v.call(this,i,Q(this).val())}else{l=v}if(l==null){l=""}else if(typeof l==="number"){l+=""}else if(Q.isArray(l)){l=Q.map(l,function(v){return v==null?"":v+""})}a=Q.valHooks[this.type]||Q.valHooks[this.nodeName.toLowerCase()];if(!a||!("set"in a)||a.set(this,l,"value")===undefined){this.value=l}})}});Q.extend({valHooks:{option:{get:function(a){var v=Q.find.attr(a,"value");return v!=null?v:Q.trim(Q.text(a))}},select:{get:function(a){var v,b,j=a.options,l=a.selectedIndex,m=a.type==="select-one"||l<0,n=m?null:[],p=m?l+1:j.length,i=l<0?p:m?l:0;for(;i<p;i++){b=j[i];if((b.selected||i===l)&&(x.optDisabled?!b.disabled:b.getAttribute("disabled")===null)&&(!b.parentNode.disabled||!Q.nodeName(b.parentNode,"optgroup"))){v=Q(b).val();if(m){return v}n.push(v)}}return n},set:function(a,v){var b,j,l=a.options,m=Q.makeArray(v),i=l.length;while(i--){j=l[i];if(Q.inArray(Q.valHooks.option.get(j),m)>=0){try{j.selected=b=true}catch(_){j.scrollHeight}}else{j.selected=false}}if(!b){a.selectedIndex=-1}return l}}}});Q.each(["radio","checkbox"],function(){Q.valHooks[this]={set:function(a,v){if(Q.isArray(v)){return(a.checked=Q.inArray(Q(a).val(),v)>=0)}}};if(!x.checkOn){Q.valHooks[this].get=function(a){return a.getAttribute("value")===null?"on":a.value}}});var z2,A2,B2=Q.expr.attrHandle,C2=/^(?:checked|selected)$/i,D2=x.getSetAttribute,E2=x.input;Q.fn.extend({attr:function(n,v){return g1(this,Q.attr,n,v,arguments.length>1)},removeAttr:function(n){return this.each(function(){Q.removeAttr(this,n)})}});Q.extend({attr:function(a,n,v){var b,r,j=a.nodeType;if(!a||j===3||j===8||j===2){return}if(typeof a.getAttribute===X){return Q.prop(a,n,v)}if(j!==1||!Q.isXMLDoc(a)){n=n.toLowerCase();b=Q.attrHooks[n]||(Q.expr.match.bool.test(n)?A2:z2)}if(v!==undefined){if(v===null){Q.removeAttr(a,n)}else if(b&&"set"in b&&(r=b.set(a,v,n))!==undefined){return r}else{a.setAttribute(n,v+"");return v}}else if(b&&"get"in b&&(r=b.get(a,n))!==null){return r}else{r=Q.find.attr(a,n);return r==null?undefined:r}},removeAttr:function(a,v){var n,p,i=0,b=v&&v.match(P);if(b&&a.nodeType===1){while((n=b[i++])){p=Q.propFix[n]||n;if(Q.expr.match.bool.test(n)){if(E2&&D2||!C2.test(n)){a[p]=false}else{a[Q.camelCase("default-"+n)]=a[p]=false}}else{Q.attr(a,n,"")}a.removeAttribute(D2?n:p)}}},attrHooks:{type:{set:function(a,v){if(!x.radioValue&&v==="radio"&&Q.nodeName(a,"input")){var b=a.value;a.setAttribute("type",v);if(b){a.value=b}return v}}}}});A2={set:function(a,v,n){if(v===false){Q.removeAttr(a,n)}else if(E2&&D2||!C2.test(n)){a.setAttribute(!D2&&Q.propFix[n]||n,n)}else{a[Q.camelCase("default-"+n)]=a[n]=true}return n}};Q.each(Q.expr.match.bool.source.match(/\w+/g),function(i,n){var a=B2[n]||Q.find.attr;B2[n]=E2&&D2||!C2.test(n)?function(b,n,j){var r,l;if(!j){l=B2[n];B2[n]=r;r=a(b,n,j)!=null?n.toLowerCase():null;B2[n]=l}return r}:function(b,n,j){if(!j){return b[Q.camelCase("default-"+n)]?n.toLowerCase():null}}});if(!E2||!D2){Q.attrHooks.value={set:function(a,v,n){if(Q.nodeName(a,"input")){a.defaultValue=v}else{return z2&&z2.set(a,v,n)}}}}if(!D2){z2={set:function(a,v,n){var r=a.getAttributeNode(n);if(!r){a.setAttributeNode((r=a.ownerDocument.createAttribute(n)))}r.value=v+="";if(n==="value"||v===a.getAttribute(n)){return v}}};B2.id=B2.name=B2.coords=function(a,n,b){var r;if(!b){return(r=a.getAttributeNode(n))&&r.value!==""?r.value:null}};Q.valHooks.button={get:function(a,n){var r=a.getAttributeNode(n);if(r&&r.specified){return r.value}},set:z2.set};Q.attrHooks.contenteditable={set:function(a,v,n){z2.set(a,v===""?false:v,n)}};Q.each(["width","height"],function(i,n){Q.attrHooks[n]={set:function(a,v){if(v===""){a.setAttribute(n,"auto");return v}}}})}if(!x.style){Q.attrHooks.style={get:function(a){return a.style.cssText||undefined},set:function(a,v){return(a.style.cssText=v+"")}}}var F2=/^(?:input|select|textarea|button|object)$/i,G2=/^(?:a|area)$/i;Q.fn.extend({prop:function(n,v){return g1(this,Q.prop,n,v,arguments.length>1)},removeProp:function(n){n=Q.propFix[n]||n;return this.each(function(){try{this[n]=undefined;delete this[n]}catch(e){}})}});Q.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,n,v){var r,b,j,l=a.nodeType;if(!a||l===3||l===8||l===2){return}j=l!==1||!Q.isXMLDoc(a);if(j){n=Q.propFix[n]||n;b=Q.propHooks[n]}if(v!==undefined){return b&&"set"in b&&(r=b.set(a,v,n))!==undefined?r:(a[n]=v)}else{return b&&"get"in b&&(r=b.get(a,n))!==null?r:a[n]}},propHooks:{tabIndex:{get:function(a){var t=Q.find.attr(a,"tabindex");return t?parseInt(t,10):F2.test(a.nodeName)||G2.test(a.nodeName)&&a.href?0:-1}}}});if(!x.hrefNormalized){Q.each(["href","src"],function(i,n){Q.propHooks[n]={get:function(a){return a.getAttribute(n,4)}}})}if(!x.optSelected){Q.propHooks.selected={get:function(a){var p=a.parentNode;if(p){p.selectedIndex;if(p.parentNode){p.parentNode.selectedIndex}}return null}}}Q.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){Q.propFix[this.toLowerCase()]=this});if(!x.enctype){Q.propFix.enctype="encoding"}var H2=/[\t\r\n\f]/g;Q.fn.extend({addClass:function(v){var a,b,l,m,j,n,i=0,p=this.length,r=typeof v==="string"&&v;if(Q.isFunction(v)){return this.each(function(j){Q(this).addClass(v.call(this,j,this.className))})}if(r){a=(v||"").match(P)||[];for(;i<p;i++){b=this[i];l=b.nodeType===1&&(b.className?(" "+b.className+" ").replace(H2," "):" ");if(l){j=0;while((m=a[j++])){if(l.indexOf(" "+m+" ")<0){l+=m+" "}}n=Q.trim(l);if(b.className!==n){b.className=n}}}}return this},removeClass:function(v){var a,b,l,m,j,n,i=0,p=this.length,r=arguments.length===0||typeof v==="string"&&v;if(Q.isFunction(v)){return this.each(function(j){Q(this).removeClass(v.call(this,j,this.className))})}if(r){a=(v||"").match(P)||[];for(;i<p;i++){b=this[i];l=b.nodeType===1&&(b.className?(" "+b.className+" ").replace(H2," "):"");if(l){j=0;while((m=a[j++])){while(l.indexOf(" "+m+" ")>=0){l=l.replace(" "+m+" "," ")}}n=v?Q.trim(l):"";if(b.className!==n){b.className=n}}}}return this},toggleClass:function(v,s){var t=typeof v;if(typeof s==="boolean"&&t==="string"){return s?this.addClass(v):this.removeClass(v)}if(Q.isFunction(v)){return this.each(function(i){Q(this).toggleClass(v.call(this,i,this.className,s),s)})}return this.each(function(){if(t==="string"){var a,i=0,b=Q(this),j=v.match(P)||[];while((a=j[i++])){if(b.hasClass(a)){b.removeClass(a)}else{b.addClass(a)}}}else if(t===X||t==="boolean"){if(this.className){Q._data(this,"__className__",this.className)}this.className=this.className||v===false?"":Q._data(this,"__className__")||""}})},hasClass:function(s){var a=" "+s+" ",i=0,l=this.length;for(;i<l;i++){if(this[i].nodeType===1&&(" "+this[i].className+" ").replace(H2," ").indexOf(a)>=0){return true}}return false}});Q.each(("blur focus focusin focusout load resize scroll unload click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup error contextmenu").split(" "),function(i,n){Q.fn[n]=function(a,b){return arguments.length>0?this.on(n,null,a,b):this.trigger(n)}});Q.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(t,a,b){return this.on(t,null,a,b)},unbind:function(t,a){return this.off(t,null,a)},delegate:function(s,t,a,b){return this.on(t,s,a,b)},undelegate:function(s,t,a){return arguments.length===1?this.off(s,"**"):this.off(t,s||"**",a)}});var I2=Q.now();var J2=(/\?/);var K2=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;Q.parseJSON=function(a){if(w.JSON&&w.JSON.parse){return w.JSON.parse(a+"")}var r,b=null,s=Q.trim(a+"");return s&&!Q.trim(s.replace(K2,function(t,j,l,m){if(r&&j){b=0}if(b===0){return t}r=l||j;b+=!m-!l;return""}))?(Function("return "+s))():Q.error("Invalid JSON: "+a)};Q.parseXML=function(a){var b,t;if(!a||typeof a!=="string"){return null}try{if(w.DOMParser){t=new DOMParser();b=t.parseFromString(a,"text/xml")}else{b=new ActiveXObject("Microsoft.XMLDOM");b.async="false";b.loadXML(a)}}catch(e){b=undefined}if(!b||!b.documentElement||b.getElementsByTagName("parsererror").length){Q.error("Invalid XML: "+a)}return b};var L2,M2,N2=/#.*$/,O2=/([?&])_=[^&]*/,P2=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,Q2=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,R2=/^(?:GET|HEAD)$/,S2=/^\/\//,T2=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,U2={},V2={},W2="*/".concat("*");try{M2=location.href}catch(e){M2=J.createElement("a");M2.href="";M2=M2.href}L2=T2.exec(M2.toLowerCase())||[];function X2(s){return function(a,b){if(typeof a!=="string"){b=a;a="*"}var j,i=0,l=a.toLowerCase().match(P)||[];if(Q.isFunction(b)){while((j=l[i++])){if(j.charAt(0)==="+"){j=j.slice(1)||"*";(s[j]=s[j]||[]).unshift(b)}else{(s[j]=s[j]||[]).push(b)}}}}}function Y2(s,a,b,j){var l={},m=(s===V2);function n(p){var r;l[p]=true;Q.each(s[p]||[],function(_,t){var v=t(a,b,j);if(typeof v==="string"&&!m&&!l[v]){a.dataTypes.unshift(v);n(v);return false}else if(m){return!(r=v)}});return r}return n(a.dataTypes[0])||!l["*"]&&n("*")}function Z2(t,s){var a,b,j=Q.ajaxSettings.flatOptions||{};for(b in s){if(s[b]!==undefined){(j[b]?t:(a||(a={})))[b]=s[b]}}if(a){Q.extend(true,t,a)}return t}function $2(s,j,r){var a,b,l,t,m=s.contents,n=s.dataTypes;while(n[0]==="*"){n.shift();if(b===undefined){b=s.mimeType||j.getResponseHeader("Content-Type")}}if(b){for(t in m){if(m[t]&&m[t].test(b)){n.unshift(t);break}}}if(n[0]in r){l=n[0]}else{for(t in r){if(!n[0]||s.converters[t+" "+n[0]]){l=t;break}if(!a){a=t}}l=l||a}if(l){if(l!==n[0]){n.unshift(l)}return r[l]}}function _2(s,r,j,a){var b,l,m,t,p,n={},v=s.dataTypes.slice();if(v[1]){for(m in s.converters){n[m.toLowerCase()]=s.converters[m]}}l=v.shift();while(l){if(s.responseFields[l]){j[s.responseFields[l]]=r}if(!p&&a&&s.dataFilter){r=s.dataFilter(r,s.dataType)}p=l;l=v.shift();if(l){if(l==="*"){l=p}else if(p!=="*"&&p!==l){m=n[p+" "+l]||n["* "+l];if(!m){for(b in n){t=b.split(" ");if(t[1]===l){m=n[p+" "+t[0]]||n["* "+t[0]];if(m){if(m===true){m=n[b]}else if(n[b]!==true){l=t[0];v.unshift(t[1])}break}}}}if(m!==true){if(m&&s["throws"]){r=m(r)}else{try{r=m(r)}catch(e){return{state:"parsererror",error:m?e:"No conversion from "+p+" to "+l}}}}}}}return{state:"success",data:r}}Q.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:M2,type:"GET",isLocal:Q2.test(L2[1]),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":W2,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":true,"text json":Q.parseJSON,"text xml":Q.parseXML},flatOptions:{url:true,context:true}},ajaxSetup:function(t,s){return s?Z2(Z2(t,Q.ajaxSettings),s):Z2(Q.ajaxSettings,t)},ajaxPrefilter:X2(U2),ajaxTransport:X2(V2),ajax:function(a,b){if(typeof a==="object"){b=a;a=undefined}b=b||{};var p,i,j,r,t,l,m,n,s=Q.ajaxSetup({},b),v=s.context||s,_=s.context&&(v.nodeType||v.jquery)?Q(v):Q.event,r3=Q.Deferred(),s3=Q.Callbacks("once memory"),t3=s.statusCode||{},u3={},v3={},w3=0,x3="canceled",y3={readyState:0,getResponseHeader:function(A3){var B3;if(w3===2){if(!n){n={};while((B3=P2.exec(r))){n[B3[1].toLowerCase()]=B3[2]}}B3=n[A3.toLowerCase()]}return B3==null?null:B3},getAllResponseHeaders:function(){return w3===2?r:null},setRequestHeader:function(A3,B3){var C3=A3.toLowerCase();if(!w3){A3=v3[C3]=v3[C3]||A3;u3[A3]=B3}return this},overrideMimeType:function(A3){if(!w3){s.mimeType=A3}return this},statusCode:function(A3){var B3;if(A3){if(w3<2){for(B3 in A3){t3[B3]=[t3[B3],A3[B3]]}}else{y3.always(A3[y3.status])}}return this},abort:function(A3){var B3=A3||x3;if(m){m.abort(B3)}z3(0,B3);return this}};r3.promise(y3).complete=s3.add;y3.success=y3.done;y3.error=y3.fail;s.url=((a||s.url||M2)+"").replace(N2,"").replace(S2,L2[1]+"//");s.type=b.method||b.type||s.method||s.type;s.dataTypes=Q.trim(s.dataType||"*").toLowerCase().match(P)||[""];if(s.crossDomain==null){p=T2.exec(s.url.toLowerCase());s.crossDomain=!!(p&&(p[1]!==L2[1]||p[2]!==L2[2]||(p[3]||(p[1]==="http:"?"80":"443"))!==(L2[3]||(L2[1]==="http:"?"80":"443"))))}if(s.data&&s.processData&&typeof s.data!=="string"){s.data=Q.param(s.data,s.traditional)}Y2(U2,s,b,y3);if(w3===2){return y3}l=s.global;if(l&&Q.active++===0){Q.event.trigger("ajaxStart")}s.type=s.type.toUpperCase();s.hasContent=!R2.test(s.type);j=s.url;if(!s.hasContent){if(s.data){j=(s.url+=(J2.test(j)?"&":"?")+s.data);delete s.data}if(s.cache===false){s.url=O2.test(j)?j.replace(O2,"$1_="+I2++):j+(J2.test(j)?"&":"?")+"_="+I2++}}if(s.ifModified){if(Q.lastModified[j]){y3.setRequestHeader("If-Modified-Since",Q.lastModified[j])}if(Q.etag[j]){y3.setRequestHeader("If-None-Match",Q.etag[j])}}if(s.data&&s.hasContent&&s.contentType!==false||b.contentType){y3.setRequestHeader("Content-Type",s.contentType)}y3.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", "+W2+"; q=0.01":""):s.accepts["*"]);for(i in s.headers){y3.setRequestHeader(i,s.headers[i])}if(s.beforeSend&&(s.beforeSend.call(v,y3,s)===false||w3===2)){return y3.abort()}x3="abort";for(i in{success:1,error:1,complete:1}){y3[i](s[i])}m=Y2(V2,s,b,y3);if(!m){z3(-1,"No Transport")}else{y3.readyState=1;if(l){_.trigger("ajaxSend",[y3,s])}if(s.async&&s.timeout>0){t=setTimeout(function(){y3.abort("timeout")},s.timeout)}try{w3=1;m.send(u3,z3)}catch(e){if(w3<2){z3(-1,e)}else{throw e}}}function z3(A3,B3,C3,D3){var E3,F3,G3,H3,I3,J3=B3;if(w3===2){return}w3=2;if(t){clearTimeout(t)}m=undefined;r=D3||"";y3.readyState=A3>0?4:0;E3=A3>=200&&A3<300||A3===304;if(C3){H3=$2(s,y3,C3)}H3=_2(s,H3,y3,E3);if(E3){if(s.ifModified){I3=y3.getResponseHeader("Last-Modified");if(I3){Q.lastModified[j]=I3}I3=y3.getResponseHeader("etag");if(I3){Q.etag[j]=I3}}if(A3===204||s.type==="HEAD"){J3="nocontent"}else if(A3===304){J3="notmodified"}else{J3=H3.state;F3=H3.data;G3=H3.error;E3=!G3}}else{G3=J3;if(A3||!J3){J3="error";if(A3<0){A3=0}}}y3.status=A3;y3.statusText=(B3||J3)+"";if(E3){r3.resolveWith(v,[F3,J3,y3])}else{r3.rejectWith(v,[y3,J3,G3])}y3.statusCode(t3);t3=undefined;if(l){_.trigger(E3?"ajaxSuccess":"ajaxError",[y3,s,E3?F3:G3])}s3.fireWith(v,[y3,J3]);if(l){_.trigger("ajaxComplete",[y3,s]);if(!(--Q.active)){Q.event.trigger("ajaxStop")}}}return y3},getJSON:function(a,b,j){return Q.get(a,b,j,"json")},getScript:function(a,b){return Q.get(a,undefined,b,"script")}});Q.each(["get","post"],function(i,m){Q[m]=function(a,b,j,t){if(Q.isFunction(b)){t=t||j;j=b;b=undefined}return Q.ajax({url:a,type:m,dataType:t,data:b,success:j})}});Q.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(i,t){Q.fn[t]=function(a){return this.on(t,a)}});Q._evalUrl=function(a){return Q.ajax({url:a,type:"GET",dataType:"script",async:false,global:false,"throws":true})};Q.fn.extend({wrapAll:function(a){if(Q.isFunction(a)){return this.each(function(i){Q(this).wrapAll(a.call(this,i))})}if(this[0]){var b=Q(a,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){b.insertBefore(this[0])}b.map(function(){var j=this;while(j.firstChild&&j.firstChild.nodeType===1){j=j.firstChild}return j}).append(this)}return this},wrapInner:function(a){if(Q.isFunction(a)){return this.each(function(i){Q(this).wrapInner(a.call(this,i))})}return this.each(function(){var s=Q(this),b=s.contents();if(b.length){b.wrapAll(a)}else{s.append(a)}})},wrap:function(a){var b=Q.isFunction(a);return this.each(function(i){Q(this).wrapAll(b?a.call(this,i):a)})},unwrap:function(){return this.parent().each(function(){if(!Q.nodeName(this,"body")){Q(this).replaceWith(this.childNodes)}}).end()}});Q.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||(!x.reliableHiddenOffsets()&&((a.style&&a.style.display)||Q.css(a,"display"))==="none")};Q.expr.filters.visible=function(a){return!Q.expr.filters.hidden(a)};var a3=/%20/g,b3=/\[\]$/,c3=/\r?\n/g,d3=/^(?:submit|button|image|reset|file)$/i,e3=/^(?:input|select|textarea|keygen)/i;function f3(p,a,t,b){var n;if(Q.isArray(a)){Q.each(a,function(i,v){if(t||b3.test(p)){b(p,v)}else{f3(p+"["+(typeof v==="object"?i:"")+"]",v,t,b)}})}else if(!t&&Q.type(a)==="object"){for(n in a){f3(p+"["+n+"]",a[n],t,b)}}else{b(p,a)}}Q.param=function(a,t){var p,s=[],b=function(j,v){v=Q.isFunction(v)?v():(v==null?"":v);s[s.length]=encodeURIComponent(j)+"="+encodeURIComponent(v)};if(t===undefined){t=Q.ajaxSettings&&Q.ajaxSettings.traditional}if(Q.isArray(a)||(a.jquery&&!Q.isPlainObject(a))){Q.each(a,function(){b(this.name,this.value)})}else{for(p in a){f3(p,a[p],t,b)}}return s.join("&").replace(a3,"+")};Q.fn.extend({serialize:function(){return Q.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=Q.prop(this,"elements");return a?Q.makeArray(a):this}).filter(function(){var t=this.type;return this.name&&!Q(this).is(":disabled")&&e3.test(this.nodeName)&&!d3.test(t)&&(this.checked||!h1.test(t))}).map(function(i,a){var v=Q(this).val();return v==null?null:Q.isArray(v)?Q.map(v,function(v){return{name:a.name,value:v.replace(c3,"\r\n")}}):{name:a.name,value:v.replace(c3,"\r\n")}}).get()}});Q.ajaxSettings.xhr=w.ActiveXObject!==undefined?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&j3()||k3()}:j3;var g3=0,h3={},i3=Q.ajaxSettings.xhr();if(w.ActiveXObject){Q(w).on("unload",function(){for(var a in h3){h3[a](undefined,true)}})}x.cors=!!i3&&("withCredentials"in i3);i3=x.ajax=!!i3;if(i3){Q.ajaxTransport(function(a){if(!a.crossDomain||x.cors){var b;return{send:function(j,l){var i,m=a.xhr(),n=++g3;m.open(a.type,a.url,a.async,a.username,a.password);if(a.xhrFields){for(i in a.xhrFields){m[i]=a.xhrFields[i]}}if(a.mimeType&&m.overrideMimeType){m.overrideMimeType(a.mimeType)}if(!a.crossDomain&&!j["X-Requested-With"]){j["X-Requested-With"]="XMLHttpRequest"}for(i in j){if(j[i]!==undefined){m.setRequestHeader(i,j[i]+"")}}m.send((a.hasContent&&a.data)||null);b=function(_,p){var s,r,t;if(b&&(p||m.readyState===4)){delete h3[n];b=undefined;m.onreadystatechange=Q.noop;if(p){if(m.readyState!==4){m.abort()}}else{t={};s=m.status;if(typeof m.responseText==="string"){t.text=m.responseText}try{r=m.statusText}catch(e){r=""}if(!s&&a.isLocal&&!a.crossDomain){s=t.text?200:404}else if(s===1223){s=204}}}if(t){l(s,r,t,m.getAllResponseHeaders())}};if(!a.async){b()}else if(m.readyState===4){setTimeout(b)}else{m.onreadystatechange=h3[n]=b}},abort:function(){if(b){b(undefined,true)}}}}})}function j3(){try{return new w.XMLHttpRequest()}catch(e){}}function k3(){try{return new w.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}Q.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(t){Q.globalEval(t);return t}}});Q.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false}if(s.crossDomain){s.type="GET";s.global=false}});Q.ajaxTransport("script",function(s){if(s.crossDomain){var a,b=J.head||Q("head")[0]||J.documentElement;return{send:function(_,j){a=J.createElement("script");a.async=true;if(s.scriptCharset){a.charset=s.scriptCharset}a.src=s.url;a.onload=a.onreadystatechange=function(_,l){if(l||!a.readyState||/loaded|complete/.test(a.readyState)){a.onload=a.onreadystatechange=null;if(a.parentNode){a.parentNode.removeChild(a)}a=null;if(!l){j(200,"success")}}};b.insertBefore(a,b.firstChild)},abort:function(){if(a){a.onload(undefined,true)}}}}});var l3=[],m3=/(=)\?(?=&|$)|\?\?/;Q.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=l3.pop()||(Q.expando+"_"+(I2++));this[a]=true;return a}});Q.ajaxPrefilter("json jsonp",function(s,a,j){var b,l,r,m=s.jsonp!==false&&(m3.test(s.url)?"url":typeof s.data==="string"&&!(s.contentType||"").indexOf("application/x-www-form-urlencoded")&&m3.test(s.data)&&"data");if(m||s.dataTypes[0]==="jsonp"){b=s.jsonpCallback=Q.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;if(m){s[m]=s[m].replace(m3,"$1"+b)}else if(s.jsonp!==false){s.url+=(J2.test(s.url)?"&":"?")+s.jsonp+"="+b}s.converters["script json"]=function(){if(!r){Q.error(b+" was not called")}return r[0]};s.dataTypes[0]="json";l=w[b];w[b]=function(){r=arguments};j.always(function(){w[b]=l;if(s[b]){s.jsonpCallback=a.jsonpCallback;l3.push(b)}if(r&&Q.isFunction(l)){l(r[0])}r=l=undefined});return"script"}});Q.parseHTML=function(a,b,j){if(!a||typeof a!=="string"){return null}if(typeof b==="boolean"){j=b;b=false}b=b||J;var p=F.exec(a),s=!j&&[];if(p){return[b.createElement(p[1])]}p=Q.buildFragment([a],b,s);if(s&&s.length){Q(s).remove()}return Q.merge([],p.childNodes)};var n3=Q.fn.load;Q.fn.load=function(a,p,b){if(typeof a!=="string"&&n3){return n3.apply(this,arguments)}var s,r,t,j=this,l=a.indexOf(" ");if(l>=0){s=Q.trim(a.slice(l,a.length));a=a.slice(0,l)}if(Q.isFunction(p)){b=p;p=undefined}else if(p&&typeof p==="object"){t="POST"}if(j.length>0){Q.ajax({url:a,type:t,dataType:"html",data:p}).done(function(m){r=arguments;j.html(s?Q("<div>").append(Q.parseHTML(m)).find(s):m)}).complete(b&&function(m,n){j.each(b,r||[m.responseText,n,m])})}return this};Q.expr.filters.animated=function(a){return Q.grep(Q.timers,function(b){return a===b.elem}).length};var o3=w.document.documentElement;function p3(a){return Q.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:false}Q.offset={setOffset:function(a,b,i){var j,l,m,n,p,r,s,t=Q.css(a,"position"),v=Q(a),_={};if(t==="static"){a.style.position="relative"}p=v.offset();m=Q.css(a,"top");r=Q.css(a,"left");s=(t==="absolute"||t==="fixed")&&Q.inArray("auto",[m,r])>-1;if(s){j=v.position();n=j.top;l=j.left}else{n=parseFloat(m)||0;l=parseFloat(r)||0}if(Q.isFunction(b)){b=b.call(a,i,p)}if(b.top!=null){_.top=(b.top-p.top)+n}if(b.left!=null){_.left=(b.left-p.left)+l}if("using"in b){b.using.call(a,_)}else{v.css(_)}}};Q.fn.extend({offset:function(a){if(arguments.length){return a===undefined?this:this.each(function(i){Q.offset.setOffset(this,a,i)})}var o3,b,j={top:0,left:0},l=this[0],m=l&&l.ownerDocument;if(!m){return}o3=m.documentElement;if(!Q.contains(o3,l)){return j}if(typeof l.getBoundingClientRect!==X){j=l.getBoundingClientRect()}b=p3(m);return{top:j.top+(b.pageYOffset||o3.scrollTop)-(o3.clientTop||0),left:j.left+(b.pageXOffset||o3.scrollLeft)-(o3.clientLeft||0)}},position:function(){if(!this[0]){return}var a,b,p={top:0,left:0},j=this[0];if(Q.css(j,"position")==="fixed"){b=j.getBoundingClientRect()}else{a=this.offsetParent();b=this.offset();if(!Q.nodeName(a[0],"html")){p=a.offset()}p.top+=Q.css(a[0],"borderTopWidth",true);p.left+=Q.css(a[0],"borderLeftWidth",true)}return{top:b.top-p.top-Q.css(j,"marginTop",true),left:b.left-p.left-Q.css(j,"marginLeft",true)}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||o3;while(a&&(!Q.nodeName(a,"html")&&Q.css(a,"position")==="static")){a=a.offsetParent}return a||o3})}});Q.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(m,p){var t=/Y/.test(p);Q.fn[m]=function(v){return g1(this,function(a,m,v){var b=p3(a);if(v===undefined){return b?(p in b)?b[p]:b.document.documentElement[m]:a[m]}if(b){b.scrollTo(!t?v:Q(b).scrollLeft(),t?v:Q(b).scrollTop())}else{a[m]=v}},m,v,arguments.length,null)}});Q.each(["top","left"],function(i,p){Q.cssHooks[p]=Y1(x.pixelPosition,function(a,b){if(b){b=W1(a,p);return U1.test(b)?Q(a).position()[p]+"px":b}})});Q.each({Height:"height",Width:"width"},function(n,t){Q.each({padding:"inner"+n,content:t,"":"outer"+n},function(a,b){Q.fn[b]=function(m,v){var j=arguments.length&&(a||typeof m!=="boolean"),l=a||(m===true||v===true?"margin":"border");return g1(this,function(p,t,v){var r;if(Q.isWindow(p)){return p.document.documentElement["client"+n]}if(p.nodeType===9){r=p.documentElement;return Math.max(p.body["scroll"+n],r["scroll"+n],p.body["offset"+n],r["offset"+n],r["client"+n])}return v===undefined?Q.css(p,t,l):Q.style(p,t,v,l)},t,j?m:undefined,j,null)}})});Q.fn.size=function(){return this.length};Q.fn.andSelf=Q.fn.addBack;if(typeof define==="function"&&define.amd){define("jquery",[],function(){return Q})}var q3=w.jQuery,_$=w.$;Q.noConflict=function(a){if(w.$===Q){w.$=_$}if(a&&w.jQuery===Q){w.jQuery=q3}return Q};if(typeof c===X){w.jQuery=w.$=Q}return Q}));
/*!
 * jQuery UI Core 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
(function($,u){var b=0,r=/^ui-id-\d+$/;$.ui=$.ui||{};$.extend($.ui,{version:"1.10.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}});$.fn.extend({focus:(function(o){return function(d,a){return typeof d==="number"?this.each(function(){var e=this;setTimeout(function(){$(e).focus();if(a){a.call(e)}},d)}):o.apply(this,arguments)}})($.fn.focus),scrollParent:function(){var s;if(($.ui.ie&&(/(static|relative)/).test(this.css("position")))||(/absolute/).test(this.css("position"))){s=this.parents().filter(function(){return(/(relative|absolute|fixed)/).test($.css(this,"position"))&&(/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"))}).eq(0)}else{s=this.parents().filter(function(){return(/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"))}).eq(0)}return(/fixed/).test(this.css("position"))||!s.length?$(document):s},zIndex:function(z){if(z!==u){return this.css("zIndex",z)}if(this.length){var e=$(this[0]),p,a;while(e.length&&e[0]!==document){p=e.css("position");if(p==="absolute"||p==="relative"||p==="fixed"){a=parseInt(e.css("zIndex"),10);if(!isNaN(a)&&a!==0){return a}}e=e.parent()}}return 0},uniqueId:function(){return this.each(function(){if(!this.id){this.id="ui-id-"+(++b)}})},removeUniqueId:function(){return this.each(function(){if(r.test(this.id)){$(this).removeAttr("id")}})}});function f(e,i){var m,a,c,n=e.nodeName.toLowerCase();if("area"===n){m=e.parentNode;a=m.name;if(!e.href||!a||m.nodeName.toLowerCase()!=="map"){return false}c=$("img[usemap=#"+a+"]")[0];return!!c&&v(c)}return(/input|select|textarea|button|object/.test(n)?!e.disabled:"a"===n?e.href||i:i)&&v(e)}function v(e){return $.expr.filters.visible(e)&&!$(e).parents().addBack().filter(function(){return $.css(this,"visibility")==="hidden"}).length}$.extend($.expr[":"],{data:$.expr.createPseudo?$.expr.createPseudo(function(d){return function(e){return!!$.data(e,d)}}):function(e,i,m){return!!$.data(e,m[3])},focusable:function(e){return f(e,!isNaN($.attr(e,"tabindex")))},tabbable:function(e){var t=$.attr(e,"tabindex"),i=isNaN(t);return(i||t>=0)&&f(e,!i)}});if(!$("<a>").outerWidth(1).jquery){$.each(["Width","Height"],function(i,n){var s=n==="Width"?["Left","Right"]:["Top","Bottom"],t=n.toLowerCase(),o={innerWidth:$.fn.innerWidth,innerHeight:$.fn.innerHeight,outerWidth:$.fn.outerWidth,outerHeight:$.fn.outerHeight};function a(e,c,d,m){$.each(s,function(){c-=parseFloat($.css(e,"padding"+this))||0;if(d){c-=parseFloat($.css(e,"border"+this+"Width"))||0}if(m){c-=parseFloat($.css(e,"margin"+this))||0}});return c}$.fn["inner"+n]=function(c){if(c===u){return o["inner"+n].call(this)}return this.each(function(){$(this).css(t,a(this,c)+"px")})};$.fn["outer"+n]=function(c,m){if(typeof c!=="number"){return o["outer"+n].call(this,c)}return this.each(function(){$(this).css(t,a(this,c,true,m)+"px")})}})}if(!$.fn.addBack){$.fn.addBack=function(s){return this.add(s==null?this.prevObject:this.prevObject.filter(s))}}if($("<a>").data("a-b","a").removeData("a-b").data("a-b")){$.fn.removeData=(function(a){return function(k){if(arguments.length){return a.call(this,$.camelCase(k))}else{return a.call(this)}}})($.fn.removeData)}$.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());$.support.selectstart="onselectstart"in document.createElement("div");$.fn.extend({disableSelection:function(){return this.bind(($.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});$.extend($.ui,{plugin:{add:function(m,o,s){var i,p=$.ui[m].prototype;for(i in s){p.plugins[i]=p.plugins[i]||[];p.plugins[i].push([o,s[i]])}},call:function(a,n,c){var i,s=a.plugins[n];if(!s||!a.element[0].parentNode||a.element[0].parentNode.nodeType===11){return}for(i=0;i<s.length;i++){if(a.options[s[i][0]]){s[i][1].apply(a.element,c)}}}},hasScroll:function(e,a){if($(e).css("overflow")==="hidden"){return false}var s=(a&&a==="left")?"scrollLeft":"scrollTop",h=false;if(e[s]>0){return true}e[s]=1;h=(e[s]>0);e[s]=0;return h}})})(jQuery);
/*!
 * jQuery UI Datepicker 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/datepicker/
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function($,u){$.extend($.ui,{datepicker:{version:"1.10.4"}});var P="datepicker",c;function D(){this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._datepickerShowing=false;this._inDialog=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};$.extend(this._defaults,this.regional[""]);this.dpDiv=d($("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}$.extend(D.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(s){f(this._defaults,s||{});return this},_attachDatepicker:function(t,s){var n,i,a;n=t.nodeName.toLowerCase();i=(n==="div"||n==="span");if(!t.id){this.uuid+=1;t.id="dp"+this.uuid}a=this._newInst($(t),i);a.settings=$.extend({},s||{});if(n==="input"){this._connectDatepicker(t,a)}else if(i){this._inlineDatepicker(t,a)}},_newInst:function(t,i){var a=t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:a,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:(!i?this.dpDiv:d($("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))}},_connectDatepicker:function(t,i){var a=$(t);i.append=$([]);i.trigger=$([]);if(a.hasClass(this.markerClassName)){return}this._attachments(a,i);a.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);this._autoSize(i);$.data(t,P,i);if(i.settings.disabled){this._disableDatepicker(t)}},_attachments:function(i,a){var s,b,e,g=this._get(a,"appendText"),h=this._get(a,"isRTL");if(a.append){a.append.remove()}if(g){a.append=$("<span class='"+this._appendClass+"'>"+g+"</span>");i[h?"before":"after"](a.append)}i.unbind("focus",this._showDatepicker);if(a.trigger){a.trigger.remove()}s=this._get(a,"showOn");if(s==="focus"||s==="both"){i.focus(this._showDatepicker)}if(s==="button"||s==="both"){b=this._get(a,"buttonText");e=this._get(a,"buttonImage");a.trigger=$(this._get(a,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:e,alt:b,title:b}):$("<button type='button'></button>").addClass(this._triggerClass).html(!e?b:$("<img/>").attr({src:e,alt:b,title:b})));i[h?"before":"after"](a.trigger);a.trigger.click(function(){if($.datepicker._datepickerShowing&&$.datepicker._lastInput===i[0]){$.datepicker._hideDatepicker()}else if($.datepicker._datepickerShowing&&$.datepicker._lastInput!==i[0]){$.datepicker._hideDatepicker();$.datepicker._showDatepicker(i[0])}else{$.datepicker._showDatepicker(i[0])}return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b,m,e,i,g=new Date(2009,12-1,20),h=this._get(a,"dateFormat");if(h.match(/[DM]/)){b=function(n){m=0;e=0;for(i=0;i<n.length;i++){if(n[i].length>m){m=n[i].length;e=i}}return e};g.setMonth(b(this._get(a,(h.match(/MM/)?"monthNames":"monthNamesShort"))));g.setDate(b(this._get(a,(h.match(/DD/)?"dayNames":"dayNamesShort")))+20-g.getDay())}a.input.attr("size",this._formatDate(a,g).length)}},_inlineDatepicker:function(t,i){var a=$(t);if(a.hasClass(this.markerClassName)){return}a.addClass(this.markerClassName).append(i.dpDiv);$.data(t,P,i);this._setDate(i,this._getDefaultDate(i),true);this._updateDatepicker(i);this._updateAlternate(i);if(i.settings.disabled){this._disableDatepicker(t)}i.dpDiv.css("display","block")},_dialogDatepicker:function(i,a,o,s,p){var b,e,g,h,j,k=this._dialogInst;if(!k){this.uuid+=1;b="dp"+this.uuid;this._dialogInput=$("<input type='text' id='"+b+"' style='position: absolute; top: -100px; width: 0px;'/>");this._dialogInput.keydown(this._doKeyDown);$("body").append(this._dialogInput);k=this._dialogInst=this._newInst(this._dialogInput,false);k.settings={};$.data(this._dialogInput[0],P,k)}f(k.settings,s||{});a=(a&&a.constructor===Date?this._formatDate(k,a):a);this._dialogInput.val(a);this._pos=(p?(p.length?p:[p.pageX,p.pageY]):null);if(!this._pos){e=document.documentElement.clientWidth;g=document.documentElement.clientHeight;h=document.documentElement.scrollLeft||document.body.scrollLeft;j=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[(e/2)-100+h,(g/2)-150+j]}this._dialogInput.css("left",(this._pos[0]+20)+"px").css("top",this._pos[1]+"px");k.settings.onSelect=o;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);if($.blockUI){$.blockUI(this.dpDiv)}$.data(this._dialogInput[0],P,k);return this},_destroyDatepicker:function(t){var n,a=$(t),i=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();$.removeData(t,P);if(n==="input"){i.append.remove();i.trigger.remove();a.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else if(n==="div"||n==="span"){a.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(t){var n,i,a=$(t),b=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();if(n==="input"){t.disabled=false;b.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else if(n==="div"||n==="span"){i=a.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled");i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",false)}this._disabledInputs=$.map(this._disabledInputs,function(v){return(v===t?null:v)})},_disableDatepicker:function(t){var n,i,a=$(t),b=$.data(t,P);if(!a.hasClass(this.markerClassName)){return}n=t.nodeName.toLowerCase();if(n==="input"){t.disabled=true;b.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else if(n==="div"||n==="span"){i=a.children("."+this._inlineClass);i.children().addClass("ui-state-disabled");i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",true)}this._disabledInputs=$.map(this._disabledInputs,function(v){return(v===t?null:v)});this._disabledInputs[this._disabledInputs.length]=t},_isDisabledDatepicker:function(t){if(!t){return false}for(var i=0;i<this._disabledInputs.length;i++){if(this._disabledInputs[i]===t){return true}}return false},_getInst:function(t){try{return $.data(t,P)}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,n,v){var s,a,m,b,i=this._getInst(t);if(arguments.length===2&&typeof n==="string"){return(n==="defaults"?$.extend({},$.datepicker._defaults):(i?(n==="all"?$.extend({},i.settings):this._get(i,n)):null))}s=n||{};if(typeof n==="string"){s={};s[n]=v}if(i){if(this._curInst===i){this._hideDatepicker()}a=this._getDateDatepicker(t,true);m=this._getMinMaxDate(i,"min");b=this._getMinMaxDate(i,"max");f(i.settings,s);if(m!==null&&s.dateFormat!==u&&s.minDate===u){i.settings.minDate=this._formatDate(i,m)}if(b!==null&&s.dateFormat!==u&&s.maxDate===u){i.settings.maxDate=this._formatDate(i,b)}if("disabled"in s){if(s.disabled){this._disableDatepicker(t)}else{this._enableDatepicker(t)}}this._attachments($(t),i);this._autoSize(i);this._setDate(i,a);this._updateAlternate(i);this._updateDatepicker(i)}},_changeDatepicker:function(t,n,v){this._optionDatepicker(t,n,v)},_refreshDatepicker:function(t){var i=this._getInst(t);if(i){this._updateDatepicker(i)}},_setDateDatepicker:function(t,a){var i=this._getInst(t);if(i){this._setDate(i,a);this._updateDatepicker(i);this._updateAlternate(i)}},_getDateDatepicker:function(t,n){var i=this._getInst(t);if(i&&!i.inline){this._setDateFromField(i,n)}return(i?this._getDate(i):null)},_doKeyDown:function(e){var o,a,s,i=$.datepicker._getInst(e.target),h=true,b=i.dpDiv.is(".ui-datepicker-rtl");i._keyEvent=true;if($.datepicker._datepickerShowing){switch(e.keyCode){case 9:$.datepicker._hideDatepicker();h=false;break;case 13:s=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",i.dpDiv);if(s[0]){$.datepicker._selectDay(e.target,i.selectedMonth,i.selectedYear,s[0])}o=$.datepicker._get(i,"onSelect");if(o){a=$.datepicker._formatDate(i);o.apply((i.input?i.input[0]:null),[a,i])}else{$.datepicker._hideDatepicker()}return false;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,(e.ctrlKey?-$.datepicker._get(i,"stepBigMonths"):-$.datepicker._get(i,"stepMonths")),"M");break;case 34:$.datepicker._adjustDate(e.target,(e.ctrlKey?+$.datepicker._get(i,"stepBigMonths"):+$.datepicker._get(i,"stepMonths")),"M");break;case 35:if(e.ctrlKey||e.metaKey){$.datepicker._clearDate(e.target)}h=e.ctrlKey||e.metaKey;break;case 36:if(e.ctrlKey||e.metaKey){$.datepicker._gotoToday(e.target)}h=e.ctrlKey||e.metaKey;break;case 37:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,(b?+1:-1),"D")}h=e.ctrlKey||e.metaKey;if(e.originalEvent.altKey){$.datepicker._adjustDate(e.target,(e.ctrlKey?-$.datepicker._get(i,"stepBigMonths"):-$.datepicker._get(i,"stepMonths")),"M")}break;case 38:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,-7,"D")}h=e.ctrlKey||e.metaKey;break;case 39:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,(b?-1:+1),"D")}h=e.ctrlKey||e.metaKey;if(e.originalEvent.altKey){$.datepicker._adjustDate(e.target,(e.ctrlKey?+$.datepicker._get(i,"stepBigMonths"):+$.datepicker._get(i,"stepMonths")),"M")}break;case 40:if(e.ctrlKey||e.metaKey){$.datepicker._adjustDate(e.target,+7,"D")}h=e.ctrlKey||e.metaKey;break;default:h=false}}else if(e.keyCode===36&&e.ctrlKey){$.datepicker._showDatepicker(this)}else{h=false}if(h){e.preventDefault();e.stopPropagation()}},_doKeyPress:function(e){var a,b,i=$.datepicker._getInst(e.target);if($.datepicker._get(i,"constrainInput")){a=$.datepicker._possibleChars($.datepicker._get(i,"dateFormat"));b=String.fromCharCode(e.charCode==null?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||(b<" "||!a||a.indexOf(b)>-1)}},_doKeyUp:function(e){var a,i=$.datepicker._getInst(e.target);if(i.input.val()!==i.lastVal){try{a=$.datepicker.parseDate($.datepicker._get(i,"dateFormat"),(i.input?i.input.val():null),$.datepicker._getFormatConfig(i));if(a){$.datepicker._setDateFromField(i);$.datepicker._updateAlternate(i);$.datepicker._updateDatepicker(i)}}catch(b){}}return true},_showDatepicker:function(i){i=i.target||i;if(i.nodeName.toLowerCase()!=="input"){i=$("input",i.parentNode)[0]}if($.datepicker._isDisabledDatepicker(i)||$.datepicker._lastInput===i){return}var a,b,e,g,o,s,h;a=$.datepicker._getInst(i);if($.datepicker._curInst&&$.datepicker._curInst!==a){$.datepicker._curInst.dpDiv.stop(true,true);if(a&&$.datepicker._datepickerShowing){$.datepicker._hideDatepicker($.datepicker._curInst.input[0])}}b=$.datepicker._get(a,"beforeShow");e=b?b.apply(i,[i,a]):{};if(e===false){return}f(a.settings,e);a.lastVal=null;$.datepicker._lastInput=i;$.datepicker._setDateFromField(a);if($.datepicker._inDialog){i.value=""}if(!$.datepicker._pos){$.datepicker._pos=$.datepicker._findPos(i);$.datepicker._pos[1]+=i.offsetHeight}g=false;$(i).parents().each(function(){g|=$(this).css("position")==="fixed";return!g});o={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null;a.dpDiv.empty();a.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});$.datepicker._updateDatepicker(a);o=$.datepicker._checkOffset(a,o,g);a.dpDiv.css({position:($.datepicker._inDialog&&$.blockUI?"static":(g?"fixed":"absolute")),display:"none",left:o.left+"px",top:o.top+"px"});if(!a.inline){s=$.datepicker._get(a,"showAnim");h=$.datepicker._get(a,"duration");a.dpDiv.zIndex($(i).zIndex()+1);$.datepicker._datepickerShowing=true;if($.effects&&$.effects.effect[s]){a.dpDiv.show(s,$.datepicker._get(a,"showOptions"),h)}else{a.dpDiv[s||"show"](s?h:null)}if($.datepicker._shouldFocusInput(a)){a.input.focus()}$.datepicker._curInst=a}},_updateDatepicker:function(i){this.maxRows=4;c=i;i.dpDiv.empty().append(this._generateHTML(i));this._attachHandlers(i);i.dpDiv.find("."+this._dayOverClass+" a").mouseover();var o,n=this._getNumberOfMonths(i),a=n[1],w=17;i.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");if(a>1){i.dpDiv.addClass("ui-datepicker-multi-"+a).css("width",(w*a)+"em")}i.dpDiv[(n[0]!==1||n[1]!==1?"add":"remove")+"Class"]("ui-datepicker-multi");i.dpDiv[(this._get(i,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");if(i===$.datepicker._curInst&&$.datepicker._datepickerShowing&&$.datepicker._shouldFocusInput(i)){i.input.focus()}if(i.yearshtml){o=i.yearshtml;setTimeout(function(){if(o===i.yearshtml&&i.yearshtml){i.dpDiv.find("select.ui-datepicker-year:first").replaceWith(i.yearshtml)}o=i.yearshtml=null},0)}},_shouldFocusInput:function(i){return i.input&&i.input.is(":visible")&&!i.input.is(":disabled")&&!i.input.is(":focus")},_checkOffset:function(i,o,a){var b=i.dpDiv.outerWidth(),e=i.dpDiv.outerHeight(),g=i.input?i.input.outerWidth():0,h=i.input?i.input.outerHeight():0,v=document.documentElement.clientWidth+(a?0:$(document).scrollLeft()),j=document.documentElement.clientHeight+(a?0:$(document).scrollTop());o.left-=(this._get(i,"isRTL")?(b-g):0);o.left-=(a&&o.left===i.input.offset().left)?$(document).scrollLeft():0;o.top-=(a&&o.top===(i.input.offset().top+h))?$(document).scrollTop():0;o.left-=Math.min(o.left,(o.left+b>v&&v>b)?Math.abs(o.left+b-v):0);o.top-=Math.min(o.top,(o.top+e>j&&j>e)?Math.abs(e+h):0);return o},_findPos:function(o){var p,i=this._getInst(o),a=this._get(i,"isRTL");while(o&&(o.type==="hidden"||o.nodeType!==1||$.expr.filters.hidden(o))){o=o[a?"previousSibling":"nextSibling"]}p=$(o).offset();return[p.left,p.top]},_hideDatepicker:function(i){var s,a,p,o,b=this._curInst;if(!b||(i&&b!==$.data(i,P))){return}if(this._datepickerShowing){s=this._get(b,"showAnim");a=this._get(b,"duration");p=function(){$.datepicker._tidyDialog(b)};if($.effects&&($.effects.effect[s]||$.effects[s])){b.dpDiv.hide(s,$.datepicker._get(b,"showOptions"),a,p)}else{b.dpDiv[(s==="slideDown"?"slideUp":(s==="fadeIn"?"fadeOut":"hide"))]((s?a:null),p)}if(!s){p()}this._datepickerShowing=false;o=this._get(b,"onClose");if(o){o.apply((b.input?b.input[0]:null),[(b.input?b.input.val():""),b])}this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if($.blockUI){$.unblockUI();$("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(i){i.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst){return}var a=$(e.target),i=$.datepicker._getInst(a[0]);if(((a[0].id!==$.datepicker._mainDivId&&a.parents("#"+$.datepicker._mainDivId).length===0&&!a.hasClass($.datepicker.markerClassName)&&!a.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&!($.datepicker._inDialog&&$.blockUI)))||(a.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!==i)){$.datepicker._hideDatepicker()}},_adjustDate:function(i,o,p){var t=$(i),a=this._getInst(t[0]);if(this._isDisabledDatepicker(t[0])){return}this._adjustInstDate(a,o+(p==="M"?this._get(a,"showCurrentAtPos"):0),p);this._updateDatepicker(a)},_gotoToday:function(i){var a,t=$(i),b=this._getInst(t[0]);if(this._get(b,"gotoCurrent")&&b.currentDay){b.selectedDay=b.currentDay;b.drawMonth=b.selectedMonth=b.currentMonth;b.drawYear=b.selectedYear=b.currentYear}else{a=new Date();b.selectedDay=a.getDate();b.drawMonth=b.selectedMonth=a.getMonth();b.drawYear=b.selectedYear=a.getFullYear()}this._notifyChange(b);this._adjustDate(t)},_selectMonthYear:function(i,s,p){var t=$(i),a=this._getInst(t[0]);a["selected"+(p==="M"?"Month":"Year")]=a["draw"+(p==="M"?"Month":"Year")]=parseInt(s.options[s.selectedIndex].value,10);this._notifyChange(a);this._adjustDate(t)},_selectDay:function(i,m,y,t){var a,b=$(i);if($(t).hasClass(this._unselectableClass)||this._isDisabledDatepicker(b[0])){return}a=this._getInst(b[0]);a.selectedDay=a.currentDay=$("a",t).html();a.selectedMonth=a.currentMonth=m;a.selectedYear=a.currentYear=y;this._selectDate(i,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear))},_clearDate:function(i){var t=$(i);this._selectDate(t,"")},_selectDate:function(i,a){var o,t=$(i),b=this._getInst(t[0]);a=(a!=null?a:this._formatDate(b));if(b.input){b.input.val(a)}this._updateAlternate(b);o=this._get(b,"onSelect");if(o){o.apply((b.input?b.input[0]:null),[a,b])}else if(b.input){b.input.trigger("change")}if(b.inline){this._updateDatepicker(b)}else{this._hideDatepicker();this._lastInput=b.input[0];if(typeof(b.input[0])!=="object"){b.input.focus()}this._lastInput=null}},_updateAlternate:function(i){var a,b,e,g=this._get(i,"altField");if(g){a=this._get(i,"altFormat")||this._get(i,"dateFormat");b=this._getDate(i);e=this.formatDate(a,b,this._getFormatConfig(i));$(g).each(function(){$(this).val(e)})}},noWeekends:function(a){var b=a.getDay();return[(b>0&&b<6),""]},iso8601Week:function(a){var t,b=new Date(a.getTime());b.setDate(b.getDate()+4-(b.getDay()||7));t=b.getTime();b.setMonth(0);b.setDate(1);return Math.floor(Math.round((t-b)/86400000)/7)+1},parseDate:function(e,g,s){if(e==null||g==null){throw"Invalid arguments"}g=(typeof g==="object"?g.toString():g+"");if(g===""){return null}var F,h,j,V=0,l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,m=(typeof l!=="string"?l:new Date().getFullYear()%100+parseInt(l,10)),n=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,o=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,q=(s?s.monthNames:null)||this._defaults.monthNames,y=-1,r=-1,t=-1,w=-1,x=false,z,A=function(a){var b=(F+1<e.length&&e.charAt(F+1)===a);if(b){F++}return b},B=function(a){var i=A(a),b=(a==="@"?14:(a==="!"?20:(a==="y"&&i?4:(a==="o"?3:2)))),k=new RegExp("^\\d{1,"+b+"}"),v=g.substring(V).match(k);if(!v){throw"Missing number at position "+V}V+=v[0].length;return parseInt(v[0],10)},C=function(G,H,I){var J=-1,K=$.map(A(G)?I:H,function(v,k){return[[k,v]]}).sort(function(a,b){return-(a[1].length-b[1].length)});$.each(K,function(i,a){var b=a[1];if(g.substr(V,b.length).toLowerCase()===b.toLowerCase()){J=a[0];V+=b.length;return false}});if(J!==-1){return J+1}else{throw"Unknown name at position "+V}},E=function(){if(g.charAt(V)!==e.charAt(F)){throw"Unexpected literal at position "+V}V++};for(F=0;F<e.length;F++){if(x){if(e.charAt(F)==="'"&&!A("'")){x=false}else{E()}}else{switch(e.charAt(F)){case"d":t=B("d");break;case"D":C("D",n,o);break;case"o":w=B("o");break;case"m":r=B("m");break;case"M":r=C("M",p,q);break;case"y":y=B("y");break;case"@":z=new Date(B("@"));y=z.getFullYear();r=z.getMonth()+1;t=z.getDate();break;case"!":z=new Date((B("!")-this._ticksTo1970)/10000);y=z.getFullYear();r=z.getMonth()+1;t=z.getDate();break;case"'":if(A("'")){E()}else{x=true}break;default:E()}}}if(V<g.length){j=g.substr(V);if(!/^\s+/.test(j)){throw"Extra/unparsed characters found in date: "+j}}if(y===-1){y=new Date().getFullYear()}else if(y<100){y+=new Date().getFullYear()-new Date().getFullYear()%100+(y<=m?0:-100)}if(w>-1){r=1;t=w;do{h=this._getDaysInMonth(y,r-1);if(t<=h){break}r++;t-=h}while(true)}z=this._daylightSavingAdjust(new Date(y,r-1,t));if(z.getFullYear()!==y||z.getMonth()+1!==r||z.getDate()!==t){throw"Invalid date"}return z},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(((1970-1)*365+Math.floor(1970/4)-Math.floor(1970/100)+Math.floor(1970/400))*24*60*60*10000000),formatDate:function(a,b,s){if(!b){return""}var F,e=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,g=(s?s.dayNames:null)||this._defaults.dayNames,m=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,h=(s?s.monthNames:null)||this._defaults.monthNames,l=function(n){var p=(F+1<a.length&&a.charAt(F+1)===n);if(p){F++}return p},i=function(n,v,p){var q=""+v;if(l(n)){while(q.length<p){q="0"+q}}return q},j=function(n,v,p,q){return(l(n)?q[v]:p[v])},o="",k=false;if(b){for(F=0;F<a.length;F++){if(k){if(a.charAt(F)==="'"&&!l("'")){k=false}else{o+=a.charAt(F)}}else{switch(a.charAt(F)){case"d":o+=i("d",b.getDate(),2);break;case"D":o+=j("D",b.getDay(),e,g);break;case"o":o+=i("o",Math.round((new Date(b.getFullYear(),b.getMonth(),b.getDate()).getTime()-new Date(b.getFullYear(),0,0).getTime())/86400000),3);break;case"m":o+=i("m",b.getMonth()+1,2);break;case"M":o+=j("M",b.getMonth(),m,h);break;case"y":o+=(l("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100);break;case"@":o+=b.getTime();break;case"!":o+=b.getTime()*10000+this._ticksTo1970;break;case"'":if(l("'")){o+="'"}else{k=true}break;default:o+=a.charAt(F)}}}}return o},_possibleChars:function(a){var F,b="",l=false,e=function(m){var g=(F+1<a.length&&a.charAt(F+1)===m);if(g){F++}return g};for(F=0;F<a.length;F++){if(l){if(a.charAt(F)==="'"&&!e("'")){l=false}else{b+=a.charAt(F)}}else{switch(a.charAt(F)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":if(e("'")){b+="'"}else{l=true}break;default:b+=a.charAt(F)}}}return b},_get:function(i,n){return i.settings[n]!==u?i.settings[n]:this._defaults[n]},_setDateFromField:function(i,n){if(i.input.val()===i.lastVal){return}var a=this._get(i,"dateFormat"),b=i.lastVal=i.input?i.input.val():null,e=this._getDefaultDate(i),g=e,s=this._getFormatConfig(i);try{g=this.parseDate(a,b,s)||e}catch(h){b=(n?"":b)}i.selectedDay=g.getDate();i.drawMonth=i.selectedMonth=g.getMonth();i.drawYear=i.selectedYear=g.getFullYear();i.currentDay=(b?g.getDate():0);i.currentMonth=(b?g.getMonth():0);i.currentYear=(b?g.getFullYear():0);this._adjustInstDate(i)},_getDefaultDate:function(i){return this._restrictMinMax(i,this._determineDate(i,this._get(i,"defaultDate"),new Date()))},_determineDate:function(i,a,b){var o=function(e){var a=new Date();a.setDate(a.getDate()+e);return a},g=function(h){try{return $.datepicker.parseDate($.datepicker._get(i,"dateFormat"),h,$.datepicker._getFormatConfig(i))}catch(e){}var a=(h.toLowerCase().match(/^c/)?$.datepicker._getDate(i):null)||new Date(),y=a.getFullYear(),m=a.getMonth(),j=a.getDate(),p=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,k=p.exec(h);while(k){switch(k[2]||"d"){case"d":case"D":j+=parseInt(k[1],10);break;case"w":case"W":j+=parseInt(k[1],10)*7;break;case"m":case"M":m+=parseInt(k[1],10);j=Math.min(j,$.datepicker._getDaysInMonth(y,m));break;case"y":case"Y":y+=parseInt(k[1],10);j=Math.min(j,$.datepicker._getDaysInMonth(y,m));break}k=p.exec(h)}return new Date(y,m,j)},n=(a==null||a===""?b:(typeof a==="string"?g(a):(typeof a==="number"?(isNaN(a)?b:o(a)):new Date(a.getTime()))));n=(n&&n.toString()==="Invalid Date"?b:n);if(n){n.setHours(0);n.setMinutes(0);n.setSeconds(0);n.setMilliseconds(0)}return this._daylightSavingAdjust(n)},_daylightSavingAdjust:function(a){if(!a){return null}a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_setDate:function(i,a,n){var b=!a,o=i.selectedMonth,e=i.selectedYear,g=this._restrictMinMax(i,this._determineDate(i,a,new Date()));i.selectedDay=i.currentDay=g.getDate();i.drawMonth=i.selectedMonth=i.currentMonth=g.getMonth();i.drawYear=i.selectedYear=i.currentYear=g.getFullYear();if((o!==i.selectedMonth||e!==i.selectedYear)&&!n){this._notifyChange(i)}this._adjustInstDate(i);if(i.input){i.input.val(b?"":this._formatDate(i))}},_getDate:function(i){var s=(!i.currentYear||(i.input&&i.input.val()==="")?null:this._daylightSavingAdjust(new Date(i.currentYear,i.currentMonth,i.currentDay)));return s},_attachHandlers:function(i){var s=this._get(i,"stepMonths"),a="#"+i.id.replace(/\\\\/g,"\\");i.dpDiv.find("[data-handler]").map(function(){var h={prev:function(){$.datepicker._adjustDate(a,-s,"M")},next:function(){$.datepicker._adjustDate(a,+s,"M")},hide:function(){$.datepicker._hideDatepicker()},today:function(){$.datepicker._gotoToday(a)},selectDay:function(){$.datepicker._selectDay(a,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return false},selectMonth:function(){$.datepicker._selectMonthYear(a,this,"M");return false},selectYear:function(){$.datepicker._selectMonthYear(a,this,"Y");return false}};$(this).bind(this.getAttribute("data-event"),h[this.getAttribute("data-handler")])})},_generateHTML:function(i){var m,p,a,n,b,e,g,h,j,k,s,l,o,q,r,t,v,w,x,y,z,A,B,C,E,F,G,H,I,J,K,L,M,N,R,O,Q,S,T,U=new Date(),V=this._daylightSavingAdjust(new Date(U.getFullYear(),U.getMonth(),U.getDate())),W=this._get(i,"isRTL"),X=this._get(i,"showButtonPanel"),Y=this._get(i,"hideIfNoPrevNext"),Z=this._get(i,"navigationAsDateFormat"),_=this._getNumberOfMonths(i),a1=this._get(i,"showCurrentAtPos"),b1=this._get(i,"stepMonths"),c1=(_[0]!==1||_[1]!==1),d1=this._daylightSavingAdjust((!i.currentDay?new Date(9999,9,9):new Date(i.currentYear,i.currentMonth,i.currentDay))),e1=this._getMinMaxDate(i,"min"),f1=this._getMinMaxDate(i,"max"),g1=i.drawMonth-a1,h1=i.drawYear;if(g1<0){g1+=12;h1--}if(f1){m=this._daylightSavingAdjust(new Date(f1.getFullYear(),f1.getMonth()-(_[0]*_[1])+1,f1.getDate()));m=(e1&&m<e1?e1:m);while(this._daylightSavingAdjust(new Date(h1,g1,1))>m){g1--;if(g1<0){g1=11;h1--}}}i.drawMonth=g1;i.drawYear=h1;p=this._get(i,"prevText");p=(!Z?p:this.formatDate(p,this._daylightSavingAdjust(new Date(h1,g1-b1,1)),this._getFormatConfig(i)));a=(this._canAdjustMonth(i,-1,h1,g1)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'"+" title='"+p+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+p+"</span></a>":(Y?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+p+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+p+"</span></a>"));n=this._get(i,"nextText");n=(!Z?n:this.formatDate(n,this._daylightSavingAdjust(new Date(h1,g1+b1,1)),this._getFormatConfig(i)));b=(this._canAdjustMonth(i,+1,h1,g1)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'"+" title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+n+"</span></a>":(Y?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+n+"</span></a>"));e=this._get(i,"currentText");g=(this._get(i,"gotoCurrent")&&i.currentDay?d1:V);e=(!Z?e:this.formatDate(e,g,this._getFormatConfig(i)));h=(!i.inline?"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(i,"closeText")+"</button>":"");j=(X)?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(W?h:"")+(this._isInRange(i,g)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'"+">"+e+"</button>":"")+(W?"":h)+"</div>":"";k=parseInt(this._get(i,"firstDay"),10);k=(isNaN(k)?0:k);s=this._get(i,"showWeek");l=this._get(i,"dayNames");o=this._get(i,"dayNamesMin");q=this._get(i,"monthNames");r=this._get(i,"monthNamesShort");t=this._get(i,"beforeShowDay");v=this._get(i,"showOtherMonths");w=this._get(i,"selectOtherMonths");x=this._getDefaultDate(i);y="";z;for(A=0;A<_[0];A++){B="";this.maxRows=4;for(C=0;C<_[1];C++){E=this._daylightSavingAdjust(new Date(h1,g1,i.selectedDay));F=" ui-corner-all";G="";if(c1){G+="<div class='ui-datepicker-group";if(_[1]>1){switch(C){case 0:G+=" ui-datepicker-group-first";F=" ui-corner-"+(W?"right":"left");break;case _[1]-1:G+=" ui-datepicker-group-last";F=" ui-corner-"+(W?"left":"right");break;default:G+=" ui-datepicker-group-middle";F="";break}}G+="'>"}G+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+F+"'>"+(/all|left/.test(F)&&A===0?(W?b:a):"")+(/all|right/.test(F)&&A===0?(W?a:b):"")+this._generateMonthYearHeader(i,g1,h1,e1,f1,A>0||C>0,q,r)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>";H=(s?"<th class='ui-datepicker-week-col'>"+this._get(i,"weekHeader")+"</th>":"");for(z=0;z<7;z++){I=(z+k)%7;H+="<th"+((z+k+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+l[I]+"'>"+o[I]+"</span></th>"}G+=H+"</tr></thead><tbody>";J=this._getDaysInMonth(h1,g1);if(h1===i.selectedYear&&g1===i.selectedMonth){i.selectedDay=Math.min(i.selectedDay,J)}K=(this._getFirstDayOfMonth(h1,g1)-k+7)%7;L=Math.ceil((K+J)/7);M=(c1?this.maxRows>L?this.maxRows:L:L);this.maxRows=M;N=this._daylightSavingAdjust(new Date(h1,g1,1-K));for(R=0;R<M;R++){G+="<tr>";O=(!s?"":"<td class='ui-datepicker-week-col'>"+this._get(i,"calculateWeek")(N)+"</td>");for(z=0;z<7;z++){Q=(t?t.apply((i.input?i.input[0]:null),[N]):[true,""]);S=(N.getMonth()!==g1);T=(S&&!w)||!Q[0]||(e1&&N<e1)||(f1&&N>f1);O+="<td class='"+((z+k+6)%7>=5?" ui-datepicker-week-end":"")+(S?" ui-datepicker-other-month":"")+((N.getTime()===E.getTime()&&g1===i.selectedMonth&&i._keyEvent)||(x.getTime()===N.getTime()&&x.getTime()===E.getTime())?" "+this._dayOverClass:"")+(T?" "+this._unselectableClass+" ui-state-disabled":"")+(S&&!v?"":" "+Q[1]+(N.getTime()===d1.getTime()?" "+this._currentClass:"")+(N.getTime()===V.getTime()?" ui-datepicker-today":""))+"'"+((!S||v)&&Q[2]?" title='"+Q[2].replace(/'/g,"&#39;")+"'":"")+(T?"":" data-handler='selectDay' data-event='click' data-month='"+N.getMonth()+"' data-year='"+N.getFullYear()+"'")+">"+(S&&!v?"&#xa0;":(T?"<span class='ui-state-default'>"+N.getDate()+"</span>":"<a class='ui-state-default"+(N.getTime()===V.getTime()?" ui-state-highlight":"")+(N.getTime()===d1.getTime()?" ui-state-active":"")+(S?" ui-priority-secondary":"")+"' href='#'>"+N.getDate()+"</a>"))+"</td>";N.setDate(N.getDate()+1);N=this._daylightSavingAdjust(N)}G+=O+"</tr>"}g1++;if(g1>11){g1=0;h1++}G+="</tbody></table>"+(c1?"</div>"+((_[0]>0&&C===_[1]-1)?"<div class='ui-datepicker-row-break'></div>":""):"");B+=G}y+=B}y+=j;i._keyEvent=false;return y},_generateMonthYearHeader:function(i,a,b,m,e,s,g,h){var j,k,l,y,t,n,o,p,q=this._get(i,"changeMonth"),r=this._get(i,"changeYear"),v=this._get(i,"showMonthAfterYear"),w="<div class='ui-datepicker-title'>",x="";if(s||!q){x+="<span class='ui-datepicker-month'>"+g[a]+"</span>"}else{j=(m&&m.getFullYear()===b);k=(e&&e.getFullYear()===b);x+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";for(l=0;l<12;l++){if((!j||l>=m.getMonth())&&(!k||l<=e.getMonth())){x+="<option value='"+l+"'"+(l===a?" selected='selected'":"")+">"+h[l]+"</option>"}}x+="</select>"}if(!v){w+=x+(s||!(q&&r)?"&#xa0;":"")}if(!i.yearshtml){i.yearshtml="";if(s||!r){w+="<span class='ui-datepicker-year'>"+b+"</span>"}else{y=this._get(i,"yearRange").split(":");t=new Date().getFullYear();n=function(z){var o=(z.match(/c[+\-].*/)?b+parseInt(z.substring(1),10):(z.match(/[+\-].*/)?t+parseInt(z,10):parseInt(z,10)));return(isNaN(o)?t:o)};o=n(y[0]);p=Math.max(o,n(y[1]||""));o=(m?Math.max(o,m.getFullYear()):o);p=(e?Math.min(p,e.getFullYear()):p);i.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";for(;o<=p;o++){i.yearshtml+="<option value='"+o+"'"+(o===b?" selected='selected'":"")+">"+o+"</option>"}i.yearshtml+="</select>";w+=i.yearshtml;i.yearshtml=null}}w+=this._get(i,"yearSuffix");if(v){w+=(s||!(q&&r)?"&#xa0;":"")+x}w+="</div>";return w},_adjustInstDate:function(i,o,p){var y=i.drawYear+(p==="Y"?o:0),m=i.drawMonth+(p==="M"?o:0),a=Math.min(i.selectedDay,this._getDaysInMonth(y,m))+(p==="D"?o:0),b=this._restrictMinMax(i,this._daylightSavingAdjust(new Date(y,m,a)));i.selectedDay=b.getDate();i.drawMonth=i.selectedMonth=b.getMonth();i.drawYear=i.selectedYear=b.getFullYear();if(p==="M"||p==="Y"){this._notifyChange(i)}},_restrictMinMax:function(i,a){var m=this._getMinMaxDate(i,"min"),b=this._getMinMaxDate(i,"max"),n=(m&&a<m?m:a);return(b&&n>b?b:n)},_notifyChange:function(i){var o=this._get(i,"onChangeMonthYear");if(o){o.apply((i.input?i.input[0]:null),[i.selectedYear,i.selectedMonth+1,i])}},_getNumberOfMonths:function(i){var n=this._get(i,"numberOfMonths");return(n==null?[1,1]:(typeof n==="number"?[1,n]:n))},_getMinMaxDate:function(i,m){return this._determineDate(i,this._get(i,m+"Date"),null)},_getDaysInMonth:function(y,m){return 32-this._daylightSavingAdjust(new Date(y,m,32)).getDate()},_getFirstDayOfMonth:function(y,m){return new Date(y,m,1).getDay()},_canAdjustMonth:function(i,o,a,b){var n=this._getNumberOfMonths(i),e=this._daylightSavingAdjust(new Date(a,b+(o<0?o:n[0]*n[1]),1));if(o<0){e.setDate(this._getDaysInMonth(e.getFullYear(),e.getMonth()))}return this._isInRange(i,e)},_isInRange:function(i,a){var y,b,m=this._getMinMaxDate(i,"min"),e=this._getMinMaxDate(i,"max"),g=null,h=null,j=this._get(i,"yearRange");if(j){y=j.split(":");b=new Date().getFullYear();g=parseInt(y[0],10);h=parseInt(y[1],10);if(y[0].match(/[+\-].*/)){g+=b}if(y[1].match(/[+\-].*/)){h+=b}}return((!m||a.getTime()>=m.getTime())&&(!e||a.getTime()<=e.getTime())&&(!g||a.getFullYear()>=g)&&(!h||a.getFullYear()<=h))},_getFormatConfig:function(i){var s=this._get(i,"shortYearCutoff");s=(typeof s!=="string"?s:new Date().getFullYear()%100+parseInt(s,10));return{shortYearCutoff:s,dayNamesShort:this._get(i,"dayNamesShort"),dayNames:this._get(i,"dayNames"),monthNamesShort:this._get(i,"monthNamesShort"),monthNames:this._get(i,"monthNames")}},_formatDate:function(i,a,m,y){if(!a){i.currentDay=i.selectedDay;i.currentMonth=i.selectedMonth;i.currentYear=i.selectedYear}var b=(a?(typeof a==="object"?a:this._daylightSavingAdjust(new Date(y,m,a))):this._daylightSavingAdjust(new Date(i.currentYear,i.currentMonth,i.currentDay)));return this.formatDate(this._get(i,"dateFormat"),b,this._getFormatConfig(i))}});function d(a){var s="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return a.delegate(s,"mouseout",function(){$(this).removeClass("ui-state-hover");if(this.className.indexOf("ui-datepicker-prev")!==-1){$(this).removeClass("ui-datepicker-prev-hover")}if(this.className.indexOf("ui-datepicker-next")!==-1){$(this).removeClass("ui-datepicker-next-hover")}}).delegate(s,"mouseover",function(){if(!$.datepicker._isDisabledDatepicker(c.inline?a.parent()[0]:c.input[0])){$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");$(this).addClass("ui-state-hover");if(this.className.indexOf("ui-datepicker-prev")!==-1){$(this).addClass("ui-datepicker-prev-hover")}if(this.className.indexOf("ui-datepicker-next")!==-1){$(this).addClass("ui-datepicker-next-hover")}}})}function f(t,p){$.extend(t,p);for(var n in p){if(p[n]==null){t[n]=p[n]}}return t}$.fn.datepicker=function(o){if(!this.length){return this}if(!$.datepicker.initialized){$(document).mousedown($.datepicker._checkExternalClick);$.datepicker.initialized=true}if($("#"+$.datepicker._mainDivId).length===0){$("body").append($.datepicker.dpDiv)}var a=Array.prototype.slice.call(arguments,1);if(typeof o==="string"&&(o==="isDisabled"||o==="getDate"||o==="widget")){return $.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this[0]].concat(a))}if(o==="option"&&arguments.length===2&&typeof arguments[1]==="string"){return $.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this[0]].concat(a))}return this.each(function(){typeof o==="string"?$.datepicker["_"+o+"Datepicker"].apply($.datepicker,[this].concat(a)):$.datepicker._attachDatepicker(this,o)})};$.datepicker=new D();$.datepicker.initialized=false;$.datepicker.uuid=new Date().getTime();$.datepicker.version="1.10.4"})(jQuery);
/*!
 * jQuery UI Position 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */
(function($,u){$.ui=$.ui||{};var c,m=Math.max,a=Math.abs,r=Math.round,b=/left|center|right/,d=/top|center|bottom/,e=/[\+\-]\d+(\.[\d]+)?%?/,f=/^\w+/,g=/%$/,_=$.fn.position;function h(o,w,i){return[parseFloat(o[0])*(g.test(o[0])?w/100:1),parseFloat(o[1])*(g.test(o[1])?i/100:1)]}function p(i,k){return parseInt($.css(i,k),10)||0}function j(i){var k=i[0];if(k.nodeType===9){return{width:i.width(),height:i.height(),offset:{top:0,left:0}}}if($.isWindow(k)){return{width:i.width(),height:i.height(),offset:{top:i.scrollTop(),left:i.scrollLeft()}}}if(k.preventDefault){return{width:0,height:0,offset:{top:k.pageY,left:k.pageX}}}return{width:i.outerWidth(),height:i.outerHeight(),offset:i.offset()}}$.position={scrollbarWidth:function(){if(c!==u){return c}var w,i,k=$("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),l=k.children()[0];$("body").append(k);w=l.offsetWidth;k.css("overflow","scroll");i=l.offsetWidth;if(w===i){i=k[0].clientWidth}k.remove();return(c=w-i)},getScrollInfo:function(w){var o=w.isWindow||w.isDocument?"":w.element.css("overflow-x"),i=w.isWindow||w.isDocument?"":w.element.css("overflow-y"),k=o==="scroll"||(o==="auto"&&w.width<w.element[0].scrollWidth),l=i==="scroll"||(i==="auto"&&w.height<w.element[0].scrollHeight);return{width:l?$.position.scrollbarWidth():0,height:k?$.position.scrollbarWidth():0}},getWithinInfo:function(i){var w=$(i||window),k=$.isWindow(w[0]),l=!!w[0]&&w[0].nodeType===9;return{element:w,isWindow:k,isDocument:l,offset:w.offset()||{left:0,top:0},scrollLeft:w.scrollLeft(),scrollTop:w.scrollTop(),width:k?w.width():w.outerWidth(),height:k?w.height():w.outerHeight()}}};$.fn.position=function(o){if(!o||!o.of){return _.apply(this,arguments)}o=$.extend({},o);var k,t,l,n,q,s,v=$(o.of),w=$.position.getWithinInfo(o.within),x=$.position.getScrollInfo(w),y=(o.collision||"flip").split(" "),z={};s=j(v);if(v[0].preventDefault){o.at="left top"}t=s.width;l=s.height;n=s.offset;q=$.extend({},n);$.each(["my","at"],function(){var i=(o[this]||"").split(" "),A,B;if(i.length===1){i=b.test(i[0])?i.concat(["center"]):d.test(i[0])?["center"].concat(i):["center","center"]}i[0]=b.test(i[0])?i[0]:"center";i[1]=d.test(i[1])?i[1]:"center";A=e.exec(i[0]);B=e.exec(i[1]);z[this]=[A?A[0]:0,B?B[0]:0];o[this]=[f.exec(i[0])[0],f.exec(i[1])[0]]});if(y.length===1){y[1]=y[0]}if(o.at[0]==="right"){q.left+=t}else if(o.at[0]==="center"){q.left+=t/2}if(o.at[1]==="bottom"){q.top+=l}else if(o.at[1]==="center"){q.top+=l/2}k=h(z.at,t,l);q.left+=k[0];q.top+=k[1];return this.each(function(){var A,B,C=$(this),D=C.outerWidth(),E=C.outerHeight(),F=p(this,"marginLeft"),G=p(this,"marginTop"),H=D+F+p(this,"marginRight")+x.width,I=E+G+p(this,"marginBottom")+x.height,J=$.extend({},q),K=h(z.my,C.outerWidth(),C.outerHeight());if(o.my[0]==="right"){J.left-=D}else if(o.my[0]==="center"){J.left-=D/2}if(o.my[1]==="bottom"){J.top-=E}else if(o.my[1]==="center"){J.top-=E/2}J.left+=K[0];J.top+=K[1];if(!$.support.offsetFractions){J.left=r(J.left);J.top=r(J.top)}A={marginLeft:F,marginTop:G};$.each(["left","top"],function(i,L){if($.ui.position[y[i]]){$.ui.position[y[i]][L](J,{targetWidth:t,targetHeight:l,elemWidth:D,elemHeight:E,collisionPosition:A,collisionWidth:H,collisionHeight:I,offset:[k[0]+K[0],k[1]+K[1]],my:o.my,at:o.at,within:w,elem:C})}});if(o.using){B=function(i){var L=n.left-J.left,M=L+t-D,N=n.top-J.top,O=N+l-E,P={target:{element:v,left:n.left,top:n.top,width:t,height:l},element:{element:C,left:J.left,top:J.top,width:D,height:E},horizontal:M<0?"left":L>0?"right":"center",vertical:O<0?"top":N>0?"bottom":"middle"};if(t<D&&a(L+M)<t){P.horizontal="center"}if(l<E&&a(N+O)<l){P.vertical="middle"}if(m(a(L),a(M))>m(a(N),a(O))){P.important="horizontal"}else{P.important="vertical"}o.using.call(this,i,P)}}C.offset($.extend(J,{using:B}))})};$.ui.position={fit:{left:function(i,k){var w=k.within,l=w.isWindow?w.scrollLeft:w.offset.left,o=w.width,n=i.left-k.collisionPosition.marginLeft,q=l-n,s=n+k.collisionWidth-o-l,t;if(k.collisionWidth>o){if(q>0&&s<=0){t=i.left+q+k.collisionWidth-o-l;i.left+=q-t}else if(s>0&&q<=0){i.left=l}else{if(q>s){i.left=l+o-k.collisionWidth}else{i.left=l}}}else if(q>0){i.left+=q}else if(s>0){i.left-=s}else{i.left=m(i.left-n,i.left)}},top:function(i,k){var w=k.within,l=w.isWindow?w.scrollTop:w.offset.top,o=k.within.height,n=i.top-k.collisionPosition.marginTop,q=l-n,s=n+k.collisionHeight-o-l,t;if(k.collisionHeight>o){if(q>0&&s<=0){t=i.top+q+k.collisionHeight-o-l;i.top+=q-t}else if(s>0&&q<=0){i.top=l}else{if(q>s){i.top=l+o-k.collisionHeight}else{i.top=l}}}else if(q>0){i.top+=q}else if(s>0){i.top-=s}else{i.top=m(i.top-n,i.top)}}},flip:{left:function(i,k){var w=k.within,l=w.offset.left+w.scrollLeft,o=w.width,n=w.isWindow?w.scrollLeft:w.offset.left,q=i.left-k.collisionPosition.marginLeft,s=q-n,t=q+k.collisionWidth-o-n,v=k.my[0]==="left"?-k.elemWidth:k.my[0]==="right"?k.elemWidth:0,x=k.at[0]==="left"?k.targetWidth:k.at[0]==="right"?-k.targetWidth:0,y=-2*k.offset[0],z,A;if(s<0){z=i.left+v+x+y+k.collisionWidth-o-l;if(z<0||z<a(s)){i.left+=v+x+y}}else if(t>0){A=i.left-k.collisionPosition.marginLeft+v+x+y-n;if(A>0||a(A)<t){i.left+=v+x+y}}},top:function(i,k){var w=k.within,l=w.offset.top+w.scrollTop,o=w.height,n=w.isWindow?w.scrollTop:w.offset.top,q=i.top-k.collisionPosition.marginTop,s=q-n,t=q+k.collisionHeight-o-n,v=k.my[1]==="top",x=v?-k.elemHeight:k.my[1]==="bottom"?k.elemHeight:0,y=k.at[1]==="top"?k.targetHeight:k.at[1]==="bottom"?-k.targetHeight:0,z=-2*k.offset[1],A,B;if(s<0){B=i.top+x+y+z+k.collisionHeight-o-l;if((i.top+x+y+z)>s&&(B<0||B<a(s))){i.top+=x+y+z}}else if(t>0){A=i.top-k.collisionPosition.marginTop+x+y+z-n;if((i.top+x+y+z)>t&&(A>0||a(A)<t)){i.top+=x+y+z}}}},flipfit:{left:function(){$.ui.position.flip.left.apply(this,arguments);$.ui.position.fit.left.apply(this,arguments)},top:function(){$.ui.position.flip.top.apply(this,arguments);$.ui.position.fit.top.apply(this,arguments)}}};(function(){var t,k,l,o,i,n=document.getElementsByTagName("body")[0],q=document.createElement("div");t=document.createElement(n?"div":"body");l={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};if(n){$.extend(l,{position:"absolute",left:"-1000px",top:"-1000px"})}for(i in l){t.style[i]=l[i]}t.appendChild(q);k=n||document.documentElement;k.insertBefore(t,k.firstChild);q.style.cssText="position: absolute; left: 10.7432222px;";o=$(q).offset().left;$.support.offsetFractions=o>10&&o<11;t.innerHTML="";k.removeChild(t)})()}(jQuery));
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
(function(q){"use strict";var P=function(A){if(typeof(A)!="function"){throw new TypeError("Argument is not a function")}this._deferred=new q.Deferred();try{var t=this;A(function(v){b(t,v,true)},function(v){b(t,v,false)})}catch(e){b(this,e,false)}};P.prototype.then=function(o,O){var f=new P(_);this._deferred.then(d(o,f,true),d(O,f,false));return f};P.prototype["catch"]=function(o){return this.then(undefined,o)};P.all=function(p){return new P(function(r,R){if(!q.isArray(p)){R({});return}if(p.length==0){r([]);return}var f=false,v=new Array(p.length),C=0;function e(I){P.resolve(p[I]).then(function(o){if(!f){C++;v[I]=o;if(C==p.length){r(v)}}},function(o){if(!f){f=true;R(o)}})};for(var i=0;i<p.length;i++){e(i)}})};P.race=function(p){return new P(function(r,R){if(!q.isArray(p)){R({})}var f=false;for(var i=0;i<p.length;i++){P.resolve(p[i]).then(function(o){if(!f){f=true;r(o)}},function(o){if(!f){f=true;R(o)}})}})};P.resolve=function(o){return o instanceof P?o:c(new P(_),o)};P.reject=function(o){return b(new P(_),o,false)};function _(){};function a(o){return o&&o.then&&typeof(o.then)=="function"};function b(p,o,r){setTimeout(function(){if(a(o)&&r){c(p,o)}else{p._deferred[r?"resolve":"reject"](o)}},0);return p};function c(p,o){if(a(o)){var f=false;try{o.then(function(v){b(p,v,true);f=true},function(v){b(p,v,false);f=true})}catch(e){if(!f){b(p,e,false)}else{q.sap.log.debug("Promise: Error in then: "+e)}}}else{b(p,o,true)}return p};function d(A,p,r){return function(o){if(!A){b(p,o,r)}else{try{c(p,A(o))}catch(e){b(p,e,false)}}}};if(!window.Promise){window.Promise=P}if(window.sap&&window.sap.__ui5PublishPromisePolyfill){window._UI5Promise=P}})(jQuery);
/*
* jQuery Mobile v1.3.1
* http://jquerymobile.com
*
* Copyright 2010, 2013 jQuery Foundation, Inc. and other contributors
* Released under the MIT license.
* http://jquery.org/license
*
*/
(function(r,d,f){if(typeof define==="function"&&define.amd){define(["jquery"],function($){f($,r,d);return $.mobile})}else{f(r.jQuery,r,d)}}(this,document,function(Q,d,f,u){
// About: License
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
(function($,d,u){var s='hashchange',a=f,b,c=$.event.special,g=a.documentMode,h='on'+s in d&&(g===u||g>7);function i(e){e=e||location.href;return'#'+e.replace(/^[^#]*#?(.*)$/,'$1')};$.fn[s]=function(e){return e?this.bind(s,e):this.trigger(s)};$.fn[s].delay=50;c[s]=$.extend(c[s],{setup:function(){if(h){return false}$(b.start)},teardown:function(){if(h){return false}$(b.stop)}});b=(function(){var j={},t,l=i(),k=function(v){return v},m=k,n=k;j.start=function(){t||p()};j.stop=function(){t&&clearTimeout(t);t=u};function p(){var e=i(),o=n(l);if(e!==l){m(l=e,o);$(d).trigger(s)}else if(o!==l){location.href=location.href.replace(/#.*/,'')+o}t=setTimeout(p,$.fn[s].delay)};d.attachEvent&&!d.addEventListener&&!h&&(function(){var o,q;j.start=function(){if(!o){q=$.fn[s].src;q=q&&q+i();o=$('<iframe tabindex="-1" title="empty"/>').hide().one('load',function(){q||m(i());p()}).attr('src',q||'javascript:0').insertAfter('body')[0].contentWindow;a.onpropertychange=function(){try{if(event.propertyName==='title'){o.document.title=a.title}}catch(e){}}}};j.stop=k;n=function(){return i(o.location.href)};m=function(e,r){var v=o.document,w=$.fn[s].domain;if(e!==r){v.title=a.title;v.open();w&&v.write('<script>document.domain="'+w+'"</script>');v.close();o.location.hash=e}}})();return j})()})(Q,this);(function($){$.mobile={};Q.mobile.orientationChangeEnabled=true}(Q));(function($,d,u){var n={};$.mobile=$.extend($.mobile,{version:"1.3.1",ns:"",subPageUrlKey:"ui-page",activePageClass:"ui-page-active",activeBtnClass:"ui-btn-active",focusClass:"ui-focus",ajaxEnabled:true,hashListeningEnabled:true,linkBindingEnabled:true,defaultPageTransition:"fade",maxTransitionWidth:false,minScrollBack:250,touchOverflowEnabled:false,defaultDialogTransition:"pop",pageLoadErrorMessage:"Error Loading Page",pageLoadErrorMessageTheme:"e",phonegapNavigationEnabled:false,autoInitializePage:true,pushStateEnabled:true,ignoreContentEnabled:false,orientationChangeEnabled:true,buttonMarkup:{hoverDelay:200},window:$(d),document:$(f),keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91},behaviors:{},silentScroll:function(y){if($.type(y)!=="number"){y=$.mobile.defaultHomeScroll}$.event.special.scrollstart.enabled=false;setTimeout(function(){d.scrollTo(0,y);$.mobile.document.trigger("silentscroll",{x:0,y:y})},20);setTimeout(function(){$.event.special.scrollstart.enabled=true},150)},nsNormalizeDict:n,nsNormalize:function(p){if(!p){return}return n[p]||(n[p]=$.camelCase($.mobile.ns+p))},getInheritedTheme:function(a,b){var e=a[0],l="",r=/ui-(bar|body|overlay)-([a-z])\b/,c,m;while(e){c=e.className||"";if(c&&(m=r.exec(c))&&(l=m[2])){break}e=e.parentNode}return l||b||"a"},closestPageData:function(a){return a.closest(':jqmData(role="page"), :jqmData(role="dialog")').data("mobile-page")},enhanceable:function(a){return this.haveParents(a,"enhance")},hijackable:function(a){return this.haveParents(a,"ajax")},haveParents:function(a,b){if(!$.mobile.ignoreContentEnabled){return a}var g=a.length,h=$(),e,k,l;for(var i=0;i<g;i++){k=a.eq(i);l=false;e=a[i];while(e){var c=e.getAttribute?e.getAttribute("data-"+$.mobile.ns+b):"";if(c==="false"){l=true;break}e=e.parentNode}if(!l){h=h.add(k)}}return h},getScreenHeight:function(){return d.innerHeight||$.mobile.window.height()}},$.mobile);$.fn.jqmData=function(p,v){var r;if(typeof p!=="undefined"){if(p){p=$.mobile.nsNormalize(p)}if(arguments.length<2||v===u){r=this.data(p)}else{r=this.data(p,v)}}return r};$.jqmData=function(e,p,v){var r;if(typeof p!=="undefined"){r=$.data(e,p?$.mobile.nsNormalize(p):p,v)}return r};$.fn.jqmRemoveData=function(p){return this.removeData($.mobile.nsNormalize(p))};$.jqmRemoveData=function(e,p){return $.removeData(e,$.mobile.nsNormalize(p))};$.fn.removeWithDependents=function(){$.removeWithDependents(this)};$.removeWithDependents=function(e){var a=$(e);(a.jqmData('dependents')||$()).remove();a.remove()};$.fn.addDependents=function(a){$.addDependents($(this),a)};$.addDependents=function(e,a){var b=$(e).jqmData('dependents')||$();$(e).jqmData('dependents',$.merge(b,a))};$.fn.getEncodedText=function(){return $("<div/>").text($(this).text()).html()};$.fn.jqmEnhanceable=function(){return $.mobile.enhanceable(this)};$.fn.jqmHijackable=function(){return $.mobile.hijackable(this)};var o=$.find,j=/:jqmData\(([^)]*)\)/g;$.find=function(s,c,r,e){s=s.replace(j,"[data-"+($.mobile.ns||"")+"$1]");return o.call(this,s,c,r,e)};$.extend($.find,o);$.find.matches=function(e,s){return $.find(e,null,null,s)};$.find.matchesSelector=function(a,e){return $.find(e,null,null,[a]).length>0}})(Q,this);(function($,u){
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */
d.matchMedia=d.matchMedia||(function(a,u){var b,c=a.documentElement,r=c.firstElementChild||c.firstChild,e=a.createElement("body"),g=a.createElement("div");g.id="mq-test-1";g.style.cssText="position:absolute;top:-100em";e.style.background="none";e.appendChild(g);return function(q){g.innerHTML="&shy;<style media=\""+q+"\"> #mq-test-1 { width: 42px; }</style>";c.insertBefore(e,r);b=g.offsetWidth===42;c.removeChild(e);return{matches:b,media:q}}}(f));$.mobile.media=function(q){return d.matchMedia(q).matches}})(Q);(function($,u){var s={touch:"ontouchend"in f};$.mobile.support=$.mobile.support||{};$.extend($.support,s);$.extend($.mobile.support,s)}(Q));(function($,u){$.extend($.support,{orientation:"orientation"in d&&"onorientationchange"in d})}(Q));(function($,u){function p(a){var i=a.charAt(0).toUpperCase()+a.substr(1),t=(a+" "+e.join(i+" ")+i).split(" ");for(var v in t){if(c[t[v]]!==u){return true}}}var b=$("<body>").prependTo("html"),c=b[0].style,e=["Webkit","Moz","O"],g="palmGetResource"in d,o=d.opera,h=d.operamini&&({}).toString.call(d.operamini)==="[object OperaMini]",j=d.blackberry&&!p("-webkit-transform");function k(a,v,t){var w=f.createElement('div'),x=function(C){return C.charAt(0).toUpperCase()+C.substr(1)},y=function(C){if(C===""){return""}else{return"-"+C.charAt(0).toLowerCase()+C.substr(1)+"-"}},z=function(C){var D=y(C)+a+": "+v+";",E=x(C),F=E+(E===""?a:x(a));w.setAttribute("style",D);if(!!w.style[F]){B=true}},A=t?t:e,B;for(var i=0;i<A.length;i++){z(A[i])}return!!B}function l(){var a="transform-3d",i=$.mobile.media("(-"+e.join("-"+a+"),(-")+"-"+a+"),("+a+")");if(i){return!!i}var v=f.createElement("div"),w={'MozTransform':'-moz-transform','transform':'transform'};b.append(v);for(var t in w){if(v.style[t]!==u){v.style[t]='translate3d( 100px, 1px, 1px )';i=d.getComputedStyle(v).getPropertyValue(w[t])}}return(!!i&&i!=="none")}function m(){var a=location.protocol+"//"+location.host+location.pathname+"ui-dir/",i=$("head base"),t=null,v="",w,x;if(!i.length){i=t=$("<base>",{"href":a}).appendTo("head")}else{v=i.attr("href")}w=$("<a href='testurl' />").prependTo(b);x=w[0].href;i[0].href=v||location.pathname;if(t){t.remove()}return x.indexOf(a)===0}function n(){var a=f.createElement('x'),i=f.documentElement,t=d.getComputedStyle,v;if(!('pointerEvents'in a.style)){return false}a.style.pointerEvents='auto';a.style.pointerEvents='x';i.appendChild(a);v=t&&t(a,'').pointerEvents==='auto';i.removeChild(a);return!!v}function q(){var a=f.createElement("div");return typeof a.getBoundingClientRect!=="undefined"}$.extend($.mobile,{browser:{}});$.mobile.browser.oldIE=(function(){var v=3,i=f.createElement("div"),a=i.all||[];do{i.innerHTML="<!--[if gt IE "+(++v)+"]><br><![endif]-->"}while(a[0]);return v>4?v:!v})();function r(){var w=d,a=navigator.userAgent,i=navigator.platform,t=a.match(/AppleWebKit\/([0-9]+)/),v=!!t&&t[1],x=a.match(/Fennec\/([0-9]+)/),y=!!x&&x[1],z=a.match(/Opera Mobi\/([0-9]+)/),A=!!z&&z[1];if(((i.indexOf("iPhone")>-1||i.indexOf("iPad")>-1||i.indexOf("iPod")>-1)&&v&&v<534)||(w.operamini&&({}).toString.call(w.operamini)==="[object OperaMini]")||(z&&A<7458)||(a.indexOf("Android")>-1&&v&&v<533)||(y&&y<6)||("palmGetResource"in d&&v&&v<534)||(a.indexOf("MeeGo")>-1&&a.indexOf("NokiaBrowser/8.5.0")>-1)){return false}return true}$.extend($.support,{cssTransitions:"WebKitTransitionEvent"in d||k('transition','height 100ms linear',["Webkit","Moz",""])&&!$.mobile.browser.oldIE&&!o,pushState:"pushState"in history&&"replaceState"in history&&!(d.navigator.userAgent.indexOf("Firefox")>=0&&d.top!==d)&&(d.navigator.userAgent.search(/CriOS/)===-1),mediaquery:$.mobile.media("only all"),cssPseudoElement:!!p("content"),touchOverflow:!!p("overflowScrolling"),cssTransform3d:l(),boxShadow:!!p("boxShadow")&&!j,fixedPosition:r(),scrollTop:("pageXOffset"in d||"scrollTop"in f.documentElement||"scrollTop"in b[0])&&!g&&!h,dynamicBaseTag:m(),cssPointerEvents:n(),boundingRect:q()});b.remove();var s=(function(){var a=d.navigator.userAgent;return a.indexOf("Nokia")>-1&&(a.indexOf("Symbian/3")>-1||a.indexOf("Series60/5")>-1)&&a.indexOf("AppleWebKit")>-1&&a.match(/(BrowserNG|NokiaBrowser)\/7\.[0-3]/)})();$.mobile.gradeA=function(){return($.support.mediaquery||$.mobile.browser.oldIE&&$.mobile.browser.oldIE>=7)&&($.support.boundingRect||$.fn.jquery.match(/1\.[0-7+]\.[0-9+]?/)!==null)};$.mobile.ajaxBlacklist=d.blackberry&&!d.WebKitPoint||h||s;if(s){$(function(){$("head link[rel='stylesheet']").attr("rel","alternate stylesheet").attr("rel","stylesheet")})}if(!$.support.boxShadow){$("html").addClass("ui-mobile-nosupport-boxshadow")}})(Q);(function($,u){var a=$.mobile.window,s,h;$.event.special.navigate=s={bound:false,pushStateEnabled:true,originalEventName:u,isPushStateEnabled:function(){return $.support.pushState&&$.mobile.pushStateEnabled===true&&this.isHashChangeEnabled()},isHashChangeEnabled:function(){return $.mobile.hashListeningEnabled===true},popstate:function(e){var n=new $.Event("navigate"),b=new $.Event("beforenavigate"),c=e.originalEvent.state||{},g=location.href;a.trigger(b);if(b.isDefaultPrevented()){return}if(e.historyState){$.extend(c,e.historyState)}n.originalEvent=e;setTimeout(function(){a.trigger(n,{state:c})},0)},hashchange:function(e,b){var n=new $.Event("navigate"),c=new $.Event("beforenavigate");a.trigger(c);if(c.isDefaultPrevented()){return}n.originalEvent=e;a.trigger(n,{state:e.hashchangeState||{}})},setup:function(b,n){if(s.bound){return}s.bound=true;if(s.isPushStateEnabled()){s.originalEventName="popstate";a.bind("popstate.navigate",s.popstate)}else if(s.isHashChangeEnabled()){s.originalEventName="hashchange";a.bind("hashchange.navigate",s.hashchange)}}}})(Q);(function($){$.event.special.throttledresize={setup:function(){$(this).bind("resize",h)},teardown:function(){$(this).unbind("resize",h)}};var t=250,h=function(){c=(new Date()).getTime();b=c-l;if(b>=t){l=c;$(this).trigger("throttledresize")}else{if(a){clearTimeout(a)}a=setTimeout(h,t-b)}},l=0,a,c,b})(Q);(function($,d){var w=$(d),e="orientationchange",s,g,l,i,a,p={"0":true,"180":true};if($.support.orientation){var b=d.innerWidth||w.width(),c=d.innerHeight||w.height(),h=50;i=b>c&&(b-c)>h;a=p[d.orientation];if((i&&a)||(!i&&!a)){p={"-90":true,"90":true}}}$.event.special.orientationchange=$.extend({},$.event.special.orientationchange,{setup:function(){if($.support.orientation&&!$.event.special.orientationchange.disabled){return false}l=g();w.bind("throttledresize",j)},teardown:function(){if($.support.orientation&&!$.event.special.orientationchange.disabled){return false}w.unbind("throttledresize",j)},add:function(k){var o=k.handler;k.handler=function(m){m.orientation=g();return o.apply(this,arguments)}}});function j(){var o=g();if(o!==l){l=o;w.trigger(e)}}$.event.special.orientationchange.orientation=g=function(){var k=true,m=f.documentElement;if($.support.orientation){k=p[d.orientation]}else{k=m&&m.clientWidth/m.clientHeight<1.1}return k?"portrait":"landscape"};$.fn[e]=function(k){return k?this.bind(e,k):this.trigger(e)};if($.attrFn){$.attrFn[e]=true}}(Q,this));(function($,d,f,u){var a="virtualMouseBindings",c="virtualTouchID",v="vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" "),g="clientX clientY pageX pageY screenX screenY".split(" "),m=$.event.mouseHooks?$.event.mouseHooks.props:[],h=$.event.props.concat(m),l={},r=0,s=0,n=0,p=false,q=[],w=false,z=false,A="addEventListener"in f,B=$(f),C=1,D=0,E;$.vmouse={moveDistanceThreshold:10,clickDistanceThreshold:10,resetTimerDuration:1500};function F(e){while(e&&typeof e.originalEvent!=="undefined"){e=e.originalEvent}return e}function G(e,b){var t=e.type,o,k,x,y,_,a1,i,j,b1;e=$.Event(e);e.type=b;o=e.originalEvent;k=$.event.props;if(t.search(/^(mouse|click)/)>-1){k=h}if(o){for(i=k.length,y;i;){y=k[--i];e[y]=o[y]}}if(t.search(/mouse(down|up)|click/)>-1&&!e.which){e.which=1}if(t.search(/^touch/)!==-1){x=F(o);t=x.touches;_=x.changedTouches;a1=(t&&t.length)?t[0]:((_&&_.length)?_[0]:u);if(a1){for(j=0,b1=g.length;j<b1;j++){y=g[j];e[y]=a1[y]}}}return e}function H(e){var j={},b,k;while(e){b=$.data(e,a);for(k in b){if(b[k]){j[k]=j.hasVirtualBinding=true}}e=e.parentNode}return j}function I(e,j){var b;while(e){b=$.data(e,a);if(b&&(!j||b[j])){return e}e=e.parentNode}return null}function J(){z=false}function K(){z=true}function L(){D=0;q.length=0;w=false;K()}function M(){J()}function N(){O();r=setTimeout(function(){r=0;L()},$.vmouse.resetTimerDuration)}function O(){if(r){clearTimeout(r);r=0}}function P(e,b,j){var k;if((j&&j[e])||(!j&&I(b.target,e))){k=G(b,e);$(b.target).trigger(k)}return k}function R(e){var t=$.data(e.target,c);if(!w&&(!D||D!==t)){var b=P("v"+e.type,e);if(b){if(b.isDefaultPrevented()){e.preventDefault()}if(b.isPropagationStopped()){e.stopPropagation()}if(b.isImmediatePropagationStopped()){e.stopImmediatePropagation()}}}}function S(e){var b=F(e).touches,j,k;if(b&&b.length===1){j=e.target;k=H(j);if(k.hasVirtualBinding){D=C++;$.data(j,c,D);O();M();p=false;var t=F(e).touches[0];s=t.pageX;n=t.pageY;P("vmouseover",e,k);P("vmousedown",e,k)}}}function T(e){if(z){return}if(!p){P("vmousecancel",e,H(e.target))}p=true;N()}function U(e){if(z){return}var t=F(e).touches[0],b=p,j=$.vmouse.moveDistanceThreshold,k=H(e.target);p=p||(Math.abs(t.pageX-s)>j||Math.abs(t.pageY-n)>j);if(p&&!b){P("vmousecancel",e,k)}P("vmousemove",e,k);N()}function V(e){if(z){return}K();var b=H(e.target),t;P("vmouseup",e,b);if(!p){var j=P("vclick",e,b);if(j&&$.support.touch){t=F(e).changedTouches[0];q.push({touchID:D,x:t.clientX,y:t.clientY,target:e.target});w=true}}P("vmouseout",e,b);p=false;N()}function W(e){var b=$.data(e,a),k;if(b){for(k in b){if(b[k]){return true}}}return false}function X(){}function Y(e){var b=e.substr(1);return{setup:function(j,k){if(!W(this)){$.data(this,a,{})}var o=$.data(this,a);o[e]=true;l[e]=(l[e]||0)+1;if(l[e]===1){B.bind(b,R)}$(this).bind(b,X);if(A){l["touchstart"]=(l["touchstart"]||0)+1;if(l["touchstart"]===1){B.bind("touchstart",S).bind("touchend",V).bind("touchmove",U)}}},teardown:function(j,k){--l[e];if(!l[e]){B.unbind(b,R)}if(A){--l["touchstart"];if(!l["touchstart"]){B.unbind("touchstart",S).unbind("touchmove",U).unbind("touchend",V).unbind("scroll",T)}}var o=$(this),t=$.data(this,a);if(t){t[e]=false}o.unbind(b,X);if(!W(this)){o.removeData(a)}}}}for(var i=0;i<v.length;i++){$.event.special[v[i]]=Y(v[i])}if(A){function Z(e){var b=q.length,t=e.target,x,y,j,i,o,k;if(b){x=e.clientX;y=e.clientY;E=$.vmouse.clickDistanceThreshold;j=t;while(j){for(i=0;i<b;i++){o=q[i];k=0;if((j===t&&Math.abs(o.x-x)<E&&Math.abs(o.y-y)<E)||$.data(j,c)===o.touchID){if(!e.isSynthetic){e._sapui_delayedMouseEvent=true}if(t===o.target){return}e.preventDefault();e.stopPropagation();return}}j=j.parentNode}}};f.addEventListener("mousedown",Z,true);f.addEventListener("mouseup",Z,true);f.addEventListener("click",Z,true)}})(Q,d,f);(function($,d,u){var a=$(f);$.each(("touchstart touchmove touchend "+"tap taphold "+"swipe swipeleft swiperight "+"scrollstart scrollstop").split(" "),function(i,n){$.fn[n]=function(h){return h?this.bind(n,h):this.trigger(n)};if($.attrFn){$.attrFn[n]=true}});var s=$.mobile.support.touch,b="touchmove scroll",t=s?"touchstart":"mousedown",c=s?"touchend touchcancel":"mouseup",e=s?"touchmove":"mousemove";function g(o,h,i){var j=i.type;i.type=h;$.event.dispatch.call(o,i);i.type=j}$.event.special.scrollstart={enabled:true,setup:function(){var h=this,i=$(h),j,k;function l(m,n){j=n;g(h,j?"scrollstart":"scrollstop",m)}i.bind(b,function(m){if(!$.event.special.scrollstart.enabled){return}if(!j){l(m,true)}clearTimeout(k);k=setTimeout(function(){l(m,false)},50)})}};$.event.special.tap={tapholdThreshold:750,setup:function(){var h=this,i=$(h);i.bind("vmousedown",function(j){if(j.which&&j.which!==1){return false}var o=j.target,k=j.originalEvent,l;function m(){clearTimeout(l)}function n(){m();i.unbind("vclick",p).unbind("vmouseup",m);a.unbind("vmousecancel",n)}function p(j){n();if(o===j.target){g(h,"tap",j)}}i.bind("vmouseup",m).bind("vclick",p);a.bind("vmousecancel",n);l=setTimeout(function(){g(h,"taphold",$.Event("taphold",{target:o}))},$.event.special.tap.tapholdThreshold)})}};$.event.special.swipe={scrollSupressionThreshold:30,durationThreshold:1000,horizontalDistanceThreshold:30,verticalDistanceThreshold:75,start:function(h){var i=h.originalEvent.touches?h.originalEvent.touches[0]:h;return{time:(new Date()).getTime(),coords:[i.pageX,i.pageY],origin:$(h.target)}},stop:function(h){var i=h.originalEvent.touches?h.originalEvent.touches[0]:h;return{time:(new Date()).getTime(),coords:[i.pageX,i.pageY]}},handleSwipe:function(h,i){if(i.time-h.time<$.event.special.swipe.durationThreshold&&Math.abs(h.coords[0]-i.coords[0])>$.event.special.swipe.horizontalDistanceThreshold&&Math.abs(h.coords[1]-i.coords[1])<$.event.special.swipe.verticalDistanceThreshold){h.origin.trigger("swipe").trigger(h.coords[0]>i.coords[0]?"swipeleft":"swiperight")}},setup:function(){var h=this,i=$(h);i.bind(t,function(j){if(j.isMarked("swipestartHandled")){return}j.setMarked("swipestartHandled");var k=$.event.special.swipe.start(j),l;function m(j){if(!k){return}l=$.event.special.swipe.stop(j);if(!sap.ui.Device.system.desktop||sap.ui.Device.browser.name!=="cr"){if(Math.abs(k.coords[0]-l.coords[0])>$.event.special.swipe.scrollSupressionThreshold){j.preventDefault()}}}function n(j){i.unbind(e,m).unbind(c,n);if(k&&l){$.event.special.swipe.handleSwipe(k,l)}k=l=u}i.bind(e,m).bind(c,n)})}};$.each({scrollstop:"scrollstart",taphold:"tap",swipeleft:"swipe",swiperight:"swipe"},function(h,i){$.event.special[h]={setup:function(){$(this).bind(i,$.noop)}}})})(Q,this)}));
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
(function(){if(!window.jQuery){throw new Error("SAPUI5 requires jQuery as a prerequisite (>= version 1.7)")}if(jQuery.sap){return}var _=window;var a=[];function b(l,m){a.push({level:l,message:m})}var c=undefined;var r=/^[0-9]+(?:\.([0-9]+)(?:\.([0-9]+))?)?(.*)$/;function V(M,i,d,s){if(M instanceof V){return M}if(!(this instanceof V)){return new V(M,i,d,s)}var m=(typeof M==="string"?r.exec(M):(jQuery.isArray(M)?M:arguments))||[];function n(v){v=parseInt(v,10);return isNaN(v)?0:v}M=n(m[0]);i=n(m[1]);d=n(m[2]);s=String(m[3]||"");this.toString=function(){return M+"."+i+"."+d+s};this.getMajor=function(){return M};this.getMinor=function(){return i};this.getPatch=function(){return d};this.getSuffix=function(){return s};this.compareTo=function(){var o=V.apply(window,arguments);return M-o.getMajor()||i-o.getMinor()||d-o.getPatch()||((s<o.getSuffix())?-1:(s===o.getSuffix())?0:1)}}V.prototype.inRange=function(m,M){return this.compareTo(m)>=0&&this.compareTo(M)<0};var j=V(jQuery.fn.jquery);if(!j.inRange("1.7.0","2.0.0")){b("error","SAPUI5 requires a jQuery version of 1.7 or higher, but lower than 2.0; current version is "+jQuery.fn.jquery)}if(!jQuery.browser){jQuery.browser=(function(u){var d=/(webkit)[ \/]([\w.]+)/,i=/(opera)(?:.*version)?[ \/]([\w.]+)/,l=/(msie) ([\w.]+)/,m=/(mozilla)(?:.*? rv:([\w.]+))?/,u=u.toLowerCase(),n=d.exec(u)||i.exec(u)||l.exec(u)||u.indexOf("compatible")<0&&m.exec(u)||[],o={};if(n[1]){o[n[1]]=true;o.version=n[2]||"0";if(o.webkit){o.safari=true}}return o}(window.navigator.userAgent))}if(!!sap.ui.Device.browser.internet_explorer){jQuery.support.cors=true}var f=(function(){var t,u,R,d=/^(.*\/)?download\/configurator[\/\?]/,i=/^(.*\/)?(sap-ui-(core|custom|boot|merged)(-.*)?)\.js([?#]|$)/,l=/^(.*\/)?resources\//;jQuery("script[src]").each(function(){var s=this.getAttribute("src"),m;if(m=s.match(d)){t=this;u=s;R=(m[1]||"")+"resources/";return false}else if(m=s.match(i)){t=this;u=s;R=m[1]||"";return false}else if(this.id=='sap-ui-bootstrap'&&(m=s.match(l))){t=this;u=s;R=m[0];return false}});return{tag:t,url:u,resourceRoot:R}})();(function(){if(/sap-bootstrap-debug=(true|x|X)/.test(location.search)){window["sap-ui-bRestart"]=false;window["sap-ui-sRestartUrl"]="http://localhost:8080/sapui5/resources/sap-ui-core.js";var d=function(){var s=f.tag,l="<script src=\""+window["sap-ui-sRestartUrl"]+"\"";jQuery.each(s.attributes,function(i,A){if(A.nodeName.indexOf("data-sap-ui-")==0){l+=" "+A.nodeName+"=\""+A.nodeValue+"\""}});l+="></script>";s.parentNode.removeChild(s);jQuery("#sap-ui-bootstrap-cachebusted").remove();window["sap-ui-config"]&&window["sap-ui-config"].resourceRoots&&(window["sap-ui-config"].resourceRoots[""]=undefined);document.write(l);var R=new Error("Aborting UI5 bootstrap and restarting from: "+window["sap-ui-sRestartUrl"]);R.name="Restart";delete window["sap-ui-bRestart"];delete window["sap-ui-sRestartUrl"];throw R};debugger;if(window["sap-ui-bRestart"]){d()}}})();(function(){var d=/sap-ui-debug=(true|x|X)/.test(location.search),i=window["sap-ui-optimized"];try{d=d||(window.localStorage.getItem("sap-ui-debug")=="X")}catch(e){}window["sap-ui-debug"]=d;if(/-dbg\.js([?#]|$)/.test(f.url)){window["sap-ui-loaddbg"]=true;window["sap-ui-debug"]=true}if(i&&d){var D=f.url.replace(/\/(?:sap-ui-cachebuster\/)?([^\/]+)\.js/,"/$1-dbg.js");window["sap-ui-optimized"]=false;window["sap-ui-loaddbg"]=true;document.write("<script type=\"text/javascript\" src=\""+D+"\"></script>");var R=new Error("Aborting UI5 bootstrap and restarting from: "+D);R.name="Restart";throw R}})();var C=_["sap-ui-config"]=(function(){function n(o){jQuery.each(o,function(i,v){var m=i.toLowerCase();if(!o.hasOwnProperty(m)){o[m]=v;delete o[i]}});return o}var s=f.tag,d=_["sap-ui-config"],l="sap-ui-config.json";if(typeof d==="string"){b("warning","Loading external bootstrap configuration from \""+d+"\". This is a design time feature and not for productive usage!");if(d!==l){b("warning","The external bootstrap configuration file should be named \""+l+"\"!")}jQuery.ajax({url:d,dataType:'json',async:false,success:function(D,T,i){d=D},error:function(i,T,o){b("error","Loading externalized bootstrap configuration from \""+d+"\" failed! Reason: "+o+"!");d=undefined}})}d=n(d||{});d.resourceroots=d.resourceroots||{};d.themeroots=d.themeroots||{};d.resourceroots['']=d.resourceroots['']||f.resourceRoot;d['xx-loadallmode']=/(^|\/)(sap-?ui5|[^\/]+-all).js([?#]|$)/.test(f.url);if(s){var t=s.getAttribute("data-sap-ui-config");if(t){try{jQuery.extend(d,n((new Function("return {"+t+"};"))()))}catch(e){b("error","failed to parse data-sap-ui-config attribute: "+(e.message||e))}}jQuery.each(s.attributes,function(i,o){var m=o.name.match(/^data-sap-ui-(.*)$/);if(m){m=m[1].toLowerCase();if(m==='resourceroots'){jQuery.extend(d[m],jQuery.parseJSON(o.value))}else if(m==='theme-roots'){jQuery.extend(d.themeroots,jQuery.parseJSON(o.value))}else if(m!=='config'){d[m]=o.value}}})}return d}());if(C.noconflict===true||C.noconflict==="true"||C.noconflict==="x"){jQuery.noConflict()}jQuery.sap={};jQuery.sap.Version=V;jQuery.sap.debug=function(d){if(!window.localStorage){return null}function i(u){alert("Usage of debug sources is "+(u?"on":"off")+" now.\nFor the change to take effect, you need to reload the page.")};if(d===true){window.localStorage.setItem("sap-ui-debug","X");i(true)}else if(d===false){window.localStorage.removeItem("sap-ui-debug");i(false)}return window.localStorage.getItem("sap-ui-debug")=="X"};jQuery.sap.statistics=function(d){if(!window.localStorage){return null}function i(u){alert("Usage of Gateway statistics "+(u?"on":"off")+" now.\nFor the change to take effect, you need to reload the page.")};if(d===true){window.localStorage.setItem("sap-ui-statistics","X");i(true)}else if(d===false){window.localStorage.removeItem("sap-ui-statistics");i(false)}return window.localStorage.getItem("sap-ui-statistics")=="X"};(function(){var F=0,d=1,W=2,I=3,D=4,T=5,s=(window.top==window)?"":"["+window.location.pathname.split('/').slice(-1)[0]+"] ",l=[],M={'':d},L=null;function n(i,w){return("000"+String(i)).slice(-w)}function o(i){return(!i||isNaN(M[i]))?M['']:M[i]}function t(){if(!L){L={listeners:[],onLogEntry:function(m){for(var i=0;i<L.listeners.length;i++){if(L.listeners[i].onLogEntry){L.listeners[i].onLogEntry(m)}}},attach:function(i,m){if(m){L.listeners.push(m);if(m.onAttachToLog){m.onAttachToLog(i)}}},detach:function(m,v){for(var i=0;i<L.listeners.length;i++){if(L.listeners[i]===v){if(v.onDetachFromLog){v.onDetachFromLog(m)}L.listeners.splice(i,1);return}}}}}return L}function u(i,m,v,w){if(i<=o(w)){var N=new Date(),y={time:n(N.getHours(),2)+":"+n(N.getMinutes(),2)+":"+n(N.getSeconds(),2),date:n(N.getFullYear(),4)+"-"+n(N.getMonth()+1,2)+"-"+n(N.getDate(),2),timestamp:N.getTime(),level:i,message:String(m||""),details:String(v||""),component:String(w||"")};l.push(y);if(L){L.onLogEntry(y)}if(window.console){var z=y.date+" "+y.time+" "+s+y.message+" - "+y.details+" "+y.component;switch(i){case F:case d:console.error(z);break;case W:console.warn(z);break;case I:console.info?console.info(z):console.log(z);break;case D:console.debug?console.debug(z):console.log(z);break;case T:console.trace?console.trace(z):console.log(z);break}}return y}}function x(i){this.fatal=function(m,v,w){u(F,m,v,w||i);return this};this.error=function error(m,v,w){u(d,m,v,w||i);return this};this.warning=function warning(m,v,w){u(W,m,v,w||i);return this};this.info=function info(m,v,w){u(I,m,v,w||i);return this};this.debug=function debug(m,v,w){u(D,m,v,w||i);return this};this.trace=function trace(m,v,w){u(T,m,v,w||i);return this};this.setLevel=function setLevel(m,w){w=w||i||'';M[w]=m;var B=[];jQuery.each(jQuery.sap.log.LogLevel,function(y,v){B[v]=y});u(I,"Changing log level "+(w?"for '"+w+"' ":"")+"to "+B[m],"","jQuery.sap.log");return this};this.getLevel=function getLevel(m){return o(m||i)};this.isLoggable=function(m,v){return(m==null?D:m)<=o(v||i)}}jQuery.sap.log=jQuery.extend(new x(),{Level:{NONE:F-1,FATAL:F,ERROR:d,WARNING:W,INFO:I,DEBUG:D,TRACE:T,ALL:(T+1)},getLogger:function(i,m){if(!isNaN(m)&&M[i]==null){M[i]=m}return new x(i)},getLogEntries:function(){return l.slice()},addLogListener:function(L){t().attach(this,L);return this},removeLogListener:function(L){t().detach(this,L);return this}});jQuery.sap.log.LogLevel=jQuery.sap.log.Level;jQuery.sap.log.getLog=jQuery.sap.log.getLogEntries;jQuery.sap.assert=function(R,m){if(!R){if(window.console&&console.assert){console.assert(R,s+m)}else{jQuery.sap.log.debug("[Assertions] "+m)}}};C.loglevel=(function(){var m=/(?:\?|&)sap-ui-log(?:L|-l)evel=([^&]*)/.exec(window.location.search);return m&&m[1]}())||C.loglevel;if(C.loglevel){jQuery.sap.log.setLevel(jQuery.sap.log.Level[C.loglevel.toUpperCase()]||parseInt(C.loglevel,10))}jQuery.sap.log.info("SAP Logger started.");jQuery.each(a,function(i,e){jQuery.sap.log[e.level](e.message)});a=null}());jQuery.sap.factory=function factory(o){function F(){}F.prototype=o;return F};jQuery.sap.newObject=function newObject(o){return new(jQuery.sap.factory(o))()};jQuery.sap.getter=function getter(v){return function(){return v}};jQuery.sap.getObject=function getObject(n,N,o){var O=o||_,d=(n||"").split("."),l=d.length,m=isNaN(N)?0:l-N,i;for(i=0;O&&i<l;i++){if(!O[d[i]]&&i<m){O[d[i]]={}}O=O[d[i]]}return O};jQuery.sap.setObject=function(n,v,o){var O=o||_,N=(n||"").split("."),l=N.length,i;if(l>0){for(i=0;O&&i<l-1;i++){if(!O[N[i]]){O[N[i]]={}}O=O[N[i]]}O[N[l-1]]=v}};function S(n,d,t){var T=[],o=0,F=0,s;this.startTask=function(l){var I=T.length;T[I]={name:l,finished:false};o++;return I};this.finishTask=function(I,l){if(!T[I]||T[I].finished){throw new Error("trying to finish non existing or already finished task")}T[I].finished=true;o--;if(l===false){F++}if(o===0){jQuery.sap.log.info("Sync point '"+n+"' finished (tasks:"+T.length+", open:"+o+", failures:"+F+")");if(s){clearTimeout(s);s=null};i()}};function i(){d&&d(o,F);d=null}if(!isNaN(t)){s=setTimeout(function(){jQuery.sap.log.info("Sync point '"+n+"' timed out (tasks:"+T.length+", open:"+o+", failures:"+F+")");i()},t)};jQuery.sap.log.info("Sync point '"+n+"' created"+(t?"(timeout after "+t+" ms)":""))}jQuery.sap.syncPoint=function(n,d,t){return new S(n,d,t)};var g=(function(){var o=jQuery.sap.log.getLogger("sap.ui.ModuleSystem",(/sap-ui-xx-debug(M|-m)odule(L|-l)oading=(true|x|X)/.test(location.search)||C["xx-debugModuleLoading"])?jQuery.sap.log.Level.DEBUG:jQuery.sap.log.Level.INFO),u={'':'resources/'},I=0,t=-1,L=1,v=2,w=3,R=4,F=5,M={"sap/ui/thirdparty/URI.js":{state:R,url:c,content:URI},"sap/ui/Device.js":{state:R,url:c,content:sap.ui.Device},"jquery.sap.global.js":{state:R,url:c,content:jQuery}},x={},A={'sap/ui/thirdparty/crossroads.js':true,'sap/ui/thirdparty/datajs.js':true,'sap/ui/thirdparty/hasher.js':true,'sap/ui/thirdparty/IPv6.js':true,'sap/ui/thirdparty/jquery/jquery-1.11.1.js':true,'sap/ui/thirdparty/jquery/jquery-1.10.2.js':true,'sap/ui/thirdparty/jquery/jquery-1.10.1.js':true,'sap/ui/thirdparty/jquery/jquery.1.7.1.js':true,'sap/ui/thirdparty/jquery/jquery.1.8.1.js':true,'sap/ui/thirdparty/jquery-mobile-custom.js':true,'sap/ui/thirdparty/less.js':true,'sap/ui/thirdparty/punycode.js':true,'sap/ui/thirdparty/require.js':true,'sap/ui/thirdparty/SecondLevelDomains.js':true,'sap/ui/thirdparty/signals.js':true,'sap/ui/thirdparty/URI.js':true},y=[],z="",B=512*1024,D=document.location.href.replace(/\?.*|#.*/g,""),G="fragment",H="view",K={js:[H,G,"controller"],xml:[H,G],json:[H,G],html:[H,G]},J=new RegExp("(\\.(?:"+K.js.join("|")+"))?\\.js$"),N,O;(function(){var s="",d="";jQuery.each(K,function(i,l){s=(s?s+"|":"")+i;d=(d?d+"|":"")+"(?:(?:"+l.join("\\.|")+"\\.)?"+i+")"});s="\\.("+s+")$";d="\\.(?:"+d+"|[^./]+)$";o.debug("constructed regexp for file types :"+s);o.debug("constructed regexp for file sub-types :"+d);N=new RegExp(s);O=new RegExp(d)}());function Q(s){if(/^sap\.ui\.thirdparty\.jquery\.jquery-/.test(s)){return"sap/ui/thirdparty/jquery/jquery-"+s.slice("sap.ui.thirdparty.jquery.jquery-".length)}else if(/^jquery\.sap\./.test(s)){return s}return s.replace(/\./g,"/")}function T(s){var d;if(!/\.js$/.test(s)){return}s=s.slice(0,-3);if(/^sap\/ui\/thirdparty\/jquery\/jquery-/.test(s)){return"sap.ui.thirdparty.jquery.jquery-"+s.slice("sap/ui/thirdparty/jquery/jquery-".length)}else if(/^jquery\.sap\./.test(s)){return s}return s.replace(/\//g,".")}function U(s,d){var i=s.split(/\//),l,a1,b1,m;if(arguments.length===1&&i.length>0){m=O.exec(i[i.length-1]);if(m){d=m[0];i[i.length-1]=i[i.length-1].slice(0,m.index)}else{d=""}}for(l=i.length;l>=0;l--){a1=i.slice(0,l).join('/');if(u[a1]){b1=u[a1];if(l<i.length){b1+=i.slice(l).join('/')}if(b1.slice(-1)==='/'){b1=b1.slice(0,-1)}return b1+(d||'')}}}function W(s){var d,i,l;for(d in u){if(u.hasOwnProperty(d)){i=u[d].slice(0,-1);if(s.indexOf(i)===0){l=d+s.slice(i.length);if(l.charAt(0)==='/'){l=l.slice(1)}if(M[l]&&M[l].data){return l}}}}}function X(m){var d;d=M[m]||(M[m]={state:I});if(d.state>I){return d}if(o.isLoggable()){o.debug(z+"declare module '"+m+"'")}d.state=R;if(y.length===0){y.push(m);d.url=d.url||c}return d}function Y(s){var m=J.exec(s),d,l,a1,b1,i;if(!m){o.error("can only require Javascript module, not "+s);a1.state=F;return}d=s.slice(0,m.index);l=m[0];a1=M[s]||(M[s]={state:I});if(o.isLoggable()){o.debug(z+"require '"+s+"' of type '"+l+"'")}if(a1.state!==I){if(a1.state===t){a1.state=v;if(A[s]&&typeof window.define==="function"&&window.define.amd){var c1=window.define.amd;try{delete window.define.amd;Z(s)}finally{window.define.amd=c1}}else{Z(s)}}if(a1.state===R){if(o.isLoggable()){o.debug(z+"module '"+s+"' has already been loaded (skipped).")}return this}else if(a1.state===F){throw new Error("found in negative cache: '"+s+"' from "+a1.url+": "+a1.error)}else{return this}}a1.state=L;b1=window["sap-ui-loaddbg"]?["-dbg",""]:[""];for(i=0;i<b1.length&&a1.state!==v;i++){a1.url=U(d,b1[i]+l);if(o.isLoggable()){o.debug(z+"loading "+(b1[i]?b1[i]+" version of ":"")+"'"+s+"' from '"+a1.url+"'")}jQuery.ajax({url:a1.url,dataType:'text',async:false,success:function(d1,e1,f1){a1.state=v;a1.data=d1},error:function(d1,e1,f1){a1.state=F;a1.error=d1?d1.status+" - "+d1.statusText:e1}})}if(a1.state===v){if(A[s]&&typeof window.define==="function"&&window.define.amd){var c1=window.define.amd;try{delete window.define.amd;Z(s)}finally{window.define.amd=c1}}else{Z(s)}}if(a1.state!==R){throw new Error("failed to load '"+s+"' from "+a1.url+": "+a1.error)}}function Z(m){var d=M[m],s,i;if(d&&d.state===v&&typeof d.data!=="undefined"){try{if(o.isLoggable()){o.debug(z+"executing '"+m+"'");s=z;z=z+": "}d.state=w;y.push(m);if(typeof d.data==="function"){d.data.apply(window)}else{i=d.data;if(i&&!i.match(/\/\/[#@] source(Mapping)?URL=.*$/)){i+="\n//# sourceURL="+URI(d.url).absoluteTo(D)}if(_.execScript&&(!d.data||d.data.length<B)){try{d.data&&_.execScript(i)}catch(e){y.pop();jQuery.sap.globalEval(d.data);throw e}}else{_.eval(i)}}y.pop();d.state=R;d.data=undefined;d.content=d.content||jQuery.sap.getObject(T(m));if(o.isLoggable()){z=s;o.debug(z+"finished executing '"+m+"'")}}catch(l){d.state=F;d.error=((l.toString&&l.toString())||l.message)+(l.line?"(line "+l.line+")":"");d.data=undefined;if(window["sap-ui-debug"]&&(/sap-ui-xx-show(L|-l)oad(E|-e)rrors=(true|x|X)/.test(location.search)||C["xx-showloaderrors"])){o.error("error while evaluating "+m+", embedding again via script tag to enforce a stack trace (see below)");jQuery.sap.includeScript(d.url);return}}}}function $(d,l){var s=[],i,a1,b1,m;for(i=0;i<d.length;i++){a1=d[i];o.debug(z+"require '"+a1+"'");Y(a1+".js");s[i]=M[a1+".js"].content||jQuery.sap.getObject(T(a1+".js"));o.debug(z+"require '"+a1+"': done.")}l.apply(this,s)}jQuery.sap.getModulePath=function(m,s){return U(Q(m),s)};jQuery.sap.getResourcePath=U;jQuery.sap.registerModulePath=function registerModulePath(m,s){m=m.replace(/\./g,"/");s=s||'.';jQuery.sap.registerResourcePath(m,s)};jQuery.sap.registerResourcePath=function(s,d){s=String(s||"");if(d==null){delete u[s]}else{d=String(d);if(d.slice(-1)!='/'){d+='/'}u[s]=d}o.info("registerResourcePath ('"+s+"', '"+d+"')")};jQuery.sap.isDeclared=function isDeclared(m,i){m=Q(m)+".js";return M[m]&&(i||M[m].state!==t)};jQuery.sap.getAllDeclaredModules=function(){var m=[];jQuery.each(M,function(s,d){if(d&&d.state!==t){var i=T(s);if(i){m.push(i)}}});return m};if(C.resourceroots){jQuery.each(C.resourceroots,jQuery.sap.registerModulePath)}o.info("URL prefixes set to:");for(var n in u){o.info("  "+(n?"'"+n+"'":"(default)")+" : "+u[n])}jQuery.sap.declare=function(m,d){var s=m;if(typeof(m)==="object"){s=m.modName;m=Q(m.modName)+(m.type?"."+m.type:"")+".js"}else{m=Q(m)+".js"}X(m);if(d!==false){jQuery.sap.getObject(s,1)}return this};jQuery.sap.require=function(m,d){if(jQuery.isArray(m)&&typeof d==="function"){$(m,d)}else if(arguments.length>1){for(var i=0;i<arguments.length;i++){jQuery.sap.require(arguments[i])}return this}if(typeof(m)==="object"){m=Q(m.modName)+(m.type?"."+m.type:"")+".js"}else{m=Q(m)+".js"}Y(m);return this};jQuery.sap._requirePath=function(m){Y(m+".js")};window.sap=window.sap||{};sap.ui=sap.ui||{};sap.ui.define=function(s,d,l,m){var a1=[],b1,c1,i;if(typeof s==="string"){b1=s+".js"}else{m=l;l=d;d=s;b1=y[y.length-1]}s=T(b1);if(!jQuery.isArray(d)){m=l;l=d;d=[]}else{var d1=b1.slice(0,1+b1.lastIndexOf('/'));for(i=0;i<d.length;i++){if(/^\.\//.test(d[i])){d[i]=d1+d[i].slice(2)}}}if(o.isLoggable()){o.debug("define("+b1+", "+"['"+d.join("','")+"']"+")")}var e1=X(b1);$(d,function(){if(o.isLoggable()){o.debug("define("+b1+"): calling factory "+typeof l)}if(m){jQuery.sap.getObject(s,1)}if(typeof l==="function"){e1.content=l.apply(window,arguments)}else{e1.content=l}if(m){if(e1.content==null){o.error("module '"+b1+"' returned no content, but should be exported")}else{if(o.isLoggable()){o.debug("exporting content of '"+b1+"': as global object")}jQuery.sap.setObject(s,e1.content)}}})};jQuery.sap.preloadModules=function(s,d,i){var l,m;if(x[s])return;x[s]=true;l=jQuery.sap.getModulePath(s,".json");o.debug("preload file "+s);m=i&&i.startTask("load "+s);jQuery.ajax({dataType:"json",async:d,url:l,success:function(a1){if(a1){a1.url=l}jQuery.sap.registerPreloadedModules(a1,d,i);i&&i.finishTask(m)},error:function(a1,b1,c1){o.error("failed to preload '"+s+"': "+(c1||b1));i&&i.finishTask(m,false)}})};jQuery.sap.registerPreloadedModules=function(d,i,s){var l=V(d.version||"1.0").compareTo("2.0")<0;if(o.isLoggable()){o.debug(z+"adding preloaded modules from '"+d.url+"'")}if(d.name){x[d.name]=true}jQuery.each(d.modules,function(m,a1){m=l?Q(m)+".js":m;if(!M[m]){M[m]={state:t,url:d.url+"/"+m,data:a1,group:d.name}}if(m.match(/\/library\.js$/)){x[T(m)+"-preload"]=true}});if(d.dependencies){jQuery.each(d.dependencies,function(m,a1){jQuery.sap.preloadModules(a1,i,s)})}};jQuery.sap.unloadResources=function(s,d,l,m){var a1=[];if(d==null){d=true}if(d){jQuery.each(M,function(i,b1){if(b1&&b1.group===s){a1.push(i)}});delete x[s]}else{if(M[s]){a1.push(s)}}jQuery.each(a1,function(i,b1){var c1=M[b1];if(c1&&m&&b1.match(/\.js$/)){jQuery.sap.setObject(T(b1),undefined)}if(c1&&(l||c1.state===t)){delete M[b1]}})};jQuery.sap.getResourceName=function(m,s){return Q(m)+(s||".js")};jQuery.sap.loadResource=function(s,m){var i,l,a1,b1,c1;if(typeof s==="string"){m=m||{}}else{m=s||{};s=m.name;if(!s&&m.url){s=W(m.url)}}m=jQuery.extend({failOnError:true,async:false},m);i=m.dataType;if(i==null&&s){i=(i=N.exec(s))&&i[1]}c1=m.async?new jQuery.Deferred():null;function d1(d,e){if(d==null&&m.failOnError){e=e||new Error("no data returned for "+s);if(m.async){c1.reject(e);jQuery.sap.log.error(e);return d}throw e}if(m.async){c1.resolve(d)}return d}function e1(d){var f1=jQuery.ajaxSettings.converters["text "+i];if(typeof f1==="function"){d=f1(d)}return d1(d)}l=s&&M[s]&&M[s].data;if(l!=null){if(m.async){setTimeout(function(){e1(l)},0)}else{l=e1(l)}}else{jQuery.ajax({url:a1=m.url||U(s),async:m.async,dataType:i,headers:m.headers,success:function(d,f1,g1){l=d1(d)},error:function(d,f1,g1){b1=new Error("resource "+s+" could not be loaded from "+a1+". Check for 'file not found' or parse errors.");b1.status=f1;b1.error=g1;b1.statusCode=d.status;l=d1(null,b1)}})}return m.async?window.Promise.resolve(c1):l};return function(){return{modules:M,prefixes:u}}}());function h(o){var d=window.document.getElementsByTagName("head")[0];if(d){d.appendChild(o)}}jQuery.sap.includeScript=function includeScript(u,i,l,d){var s=window.document.createElement("script");s.src=u;s.type="text/javascript";if(i){s.id=i}if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9){if(l){s.onreadystatechange=function(){if(s.readyState==="loaded"||s.readyState==="complete"){l();s.onreadystatechange=null}}}}else{if(l){jQuery(s).load(l)}if(d){jQuery(s).error(d)}}var o;if((i&&(o=jQuery.sap.domById(i))&&o.tagName==="SCRIPT")){jQuery(o).remove()}h(s)};jQuery.sap.includeStyleSheet=function includeStyleSheet(u,I,l,d){var m=function(u,I,l,d){var L=document.createElement("link");L.type="text/css";L.rel="stylesheet";L.href=u;if(I){L.id=I}jQuery(L).load(function(){jQuery(L).attr("sap-ui-ready","true");if(l){l()}});jQuery(L).error(function(){jQuery(L).attr("sap-ui-ready","false");if(d){d()}});return L};var n=function(u,I,l,d){if(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<=9&&document.styleSheets.length>=28){var s=URI.parse(document.URL).path;jQuery.sap.log.warning("StlyeSheet "+I+" not added as LINK because of IE limits",u,"jQuery.sap.includeStyleSheet");if(!this._oIEStyleSheet){this._oIEStyleSheet=document.createStyleSheet();this._oIEStyleSheet.addImport(URI(u).absoluteTo(s))}else{var A=false;for(var i=0;i<this._oIEStyleSheet.imports.length;i++){var t=this._oIEStyleSheet.imports[i];if(t.imports.length<30){t.addImport(URI(u).absoluteTo(s));A=true;break}}if(!A){this._oIEStyleSheet.addImport(URI(u).absoluteTo(s))}}var v=document.getElementById('sap-ui-core-customcss');if(!jQuery.isEmptyObject(v)){h(v)}}else{var L=m(u,I,l,d);if(jQuery('#sap-ui-core-customcss').length>0){jQuery('#sap-ui-core-customcss').first().before(jQuery(L))}else{h(L)}}};var o,R;if((I&&(o=jQuery.sap.domById(I))&&(R=o.tagName==="LINK"&&o.rel==="stylesheet"))||window.document.body){if(R){if(o.getAttribute("href")!==u||l||d){jQuery(o).replaceWith(m(u,I,l,d))}}else{n(u,I,l,d)}}else{n(u,I,l,d)}};if(!(C.productive===true||C.productive==="true"||C.productive==="x")){jQuery(function(){jQuery(document.body).keydown(function(e){if(e.keyCode==80&&e.shiftKey&&e.altKey&&e.ctrlKey){try{jQuery.sap.require("sap.ui.debug.TechnicalInfo")}catch(e){return}sap.ui.debug.TechnicalInfo.open(function(){var i=g();return{modules:i.modules,prefixes:i.urlPrefixes,config:C}})}})});jQuery(function(){jQuery(document.body).keydown(function(e){if(e.keyCode==83&&e.shiftKey&&e.altKey&&e.ctrlKey){try{jQuery.sap.require("sap.ui.core.support.Support");var s=sap.ui.core.support.Support.getStub();if(s.getType()!=sap.ui.core.support.Support.StubType.APPLICATION){return}s.openSupportTool()}catch(e){}}})})}if(/sap-ui-xx-e2e-trace=(true|x|X)/.test(location.search)){jQuery.sap.require("sap.ui.core.support.trace.E2eTraceLib"+"")}if(!jQuery.support){jQuery.support={}}jQuery.extend(jQuery.support,{touch:"ontouchend"in document});var p=["Webkit","ms","Moz"];var k=document.documentElement.style;var q=function(d,l){if(jQuery.support[d]===undefined){if(k[l]!==undefined){jQuery.support[d]=true;if(l==="boxFlex"||l==="flexOrder"||l==="flexGrow"){if(!sap.ui.Device.browser.chrome||sap.ui.Device.browser.version>28){jQuery.support.flexBoxPrefixed=false}}return}else{l=l.charAt(0).toUpperCase()+l.slice(1);for(var i in p){if(k[p[i]+l]!==undefined){jQuery.support[d]=true;return}}}jQuery.support[d]=false}};q("cssTransforms","transform");q("cssTransforms3d","perspective");q("cssTransitions","transition");q("cssAnimations","animationName");if(jQuery.support.cssGradients===undefined){var E=document.createElement('div'),k=E.style;try{k.backgroundImage="linear-gradient(left top, red, white)";k.backgroundImage="-moz-linear-gradient(left top, red, white)";k.backgroundImage="-webkit-linear-gradient(left top, red, white)";k.backgroundImage="-ms-linear-gradient(left top, red, white)";k.backgroundImage="-webkit-gradient(linear, left top, right bottom, from(red), to(white))"}catch(e){}jQuery.support.cssGradients=(k.backgroundImage&&k.backgroundImage.indexOf("gradient")>-1);E=null}jQuery.support.flexBoxPrefixed=true;q("flexBoxLayout","boxFlex");if(k.msFlexOrder!==undefined){jQuery.support.ie10FlexBoxLayout=true}q("newFlexBoxLayout","flexGrow");if(jQuery.support.flexBoxLayout||jQuery.support.newFlexBoxLayout||jQuery.support.ie10FlexBoxLayout){jQuery.support.hasFlexBoxSupport=true}else{jQuery.support.hasFlexBoxSupport=false}if(!jQuery.support.opacity){(function(){var o=jQuery.cssHooks.opacity.set;jQuery.cssHooks.opacity.set=function(d,v){o.apply(this,arguments);if(!jQuery.trim(d.style.filter)){d.style.removeAttribute("filter")}}}())}function P(){function M(i,I,s,l){this.id=i;this.info=I;this.start=s;this.end=l;this.pause=0;this.resume=0;this.duration=0;this.time=0}var A=false;var d=jQuery.ajax;this.getActive=function(){return A};this.setActive=function(o){if(A==o){return A}A=o;if(A){jQuery.ajax=function(u,i){jQuery.sap.measure.start(u.url,"Request for "+u.url);d.apply(this,arguments);jQuery.sap.measure.end(u.url)}}else if(d){jQuery.ajax=d}return A};this.setActive(/sap-ui-measure=(true|x|X)/.test(location.search));this.mMeasurements={};this.start=function(i,I){if(!A){return}var t=new Date().getTime();var m=new M(i,I,t,0);if(m){this.mMeasurements[i]=m;return({id:m.id,info:m.info,start:m.start})}else{return false}};this.pause=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&m.end>0){return false}if(m&&m.pause==0){m.pause=t;if(m.pause>=m.resume&&m.resume>0){m.duration=m.duration+m.pause-m.resume;m.resume=0}else if(m.pause>=m.start){m.duration=m.pause-m.start}}if(m){return({id:m.id,info:m.info,start:m.start,pause:m.pause})}else{return false}};this.resume=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&m.pause>0){m.pause=0;m.resume=t}if(m){return({id:m.id,info:m.info,start:m.start,resume:m.resume})}else{return false}};this.end=function(i){if(!A){return}var t=new Date().getTime();var m=this.mMeasurements[i];if(m&&!m.end){m.end=t;if(m.end>=m.resume&&m.resume>0){m.duration=m.duration+m.end-m.resume;m.resume=0}else if(m.pause>0){m.pause=0}else if(m.end>=m.start){m.duration=m.end-m.start}if(m.end>=m.start){m.time=m.end-m.start}}if(m){return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}};this.getMeasurement=function(i){if(!A){return}var m=this.mMeasurements[i];if(m){return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}};this.clear=function(){if(!A){return}this.mMeasurements={}};this.remove=function(i){if(!A){return}delete this.mMeasurements[i]};this.getAllMeasurements=function(){if(!A){return}var m=new Array();jQuery.each(this.mMeasurements,function(i,o){m.push({id:o.id,info:o.info,start:o.start,end:o.end,duration:o.duration,time:o.time})});return m};this.add=function(i,I,s,l,t,D){if(!A){return}var m=new M(i,I,s,l);m.time=t;m.duration=D;if(m){this.mMeasurements[i]=m;return({id:m.id,info:m.info,start:m.start,end:m.end,time:m.time,duration:m.duration})}else{return false}}}jQuery.sap.measure=new P()}());
jQuery.sap.globalEval=function(){eval(arguments[0])};
jQuery.sap.declare('sap-ui-core-all');jQuery.sap.declare('sap.ui.Device');jQuery.sap.declare('sap.ui.thirdparty.SecondLevelDomains');jQuery.sap.declare('sap.ui.thirdparty.URI');jQuery.sap.declare('sap.ui.thirdparty.caja-html-sanitizer');jQuery.sap.declare('sap.ui.thirdparty.jquery.jquery-1.11.1');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-core');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-datepicker');jQuery.sap.declare('sap.ui.thirdparty.jqueryui.jquery-ui-position');jQuery.sap.declare('jquery.sap.promise');jQuery.sap.declare('sap.ui.thirdparty.jquery-mobile-custom');jQuery.sap.declare('jquery.sap.global');if(!jQuery.sap.isDeclared('jquery.sap.keycodes')){jQuery.sap.declare('jquery.sap.keycodes');sap.ui.define("jquery.sap.keycodes",['jquery.sap.global'],function(q){"use strict";q.sap.KeyCodes={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CONTROL:17,ALT:18,BREAK:19,CAPS_LOCK:20,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40,PRINT:44,INSERT:45,DELETE:46,DIGIT_0:48,DIGIT_1:49,DIGIT_2:50,DIGIT_3:51,DIGIT_4:52,DIGIT_5:53,DIGIT_6:54,DIGIT_7:55,DIGIT_8:56,DIGIT_9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,WINDOWS:91,CONTEXT_MENU:93,TURN_OFF:94,SLEEP:95,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105,NUMPAD_ASTERISK:106,NUMPAD_PLUS:107,NUMPAD_MINUS:109,NUMPAD_COMMA:110,NUMPAD_SLASH:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUM_LOCK:144,SCROLL_LOCK:145,OPEN_BRACKET:186,PLUS:187,COMMA:188,SLASH:189,DOT:190,PIPE:191,SEMICOLON:192,MINUS:219,GREAT_ACCENT:220,EQUALS:221,SINGLE_QUOTE:222,BACKSLASH:226};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.logger')){jQuery.sap.declare("jquery.sap.logger",false)};if(!jQuery.sap.isDeclared('jquery.sap.script')){jQuery.sap.declare('jquery.sap.script');sap.ui.define("jquery.sap.script",['jquery.sap.global'],function(q){"use strict";var I=0;q.sap.uid=function uid(){return"id-"+new Date().valueOf()+"-"+I++};q.sap.delayedCall=function delayedCall(d,o,m,p){return setTimeout(function(){if(q.type(m)=="string"){m=o[m]}m.apply(o,p||[])},d)};q.sap.clearDelayedCall=function clearDelayedCall(d){clearTimeout(d);return this};q.sap.intervalCall=function intervalCall(i,o,m,p){return setInterval(function(){if(q.type(m)=="string"){m=o[m]}m.apply(o,p||[])},i)};q.sap.clearIntervalCall=function clearIntervalCall(i){clearInterval(i);return this};var U=function(u){this.mParams={};var Q=u||window.location.href;if(Q.indexOf('#')>=0){Q=Q.slice(0,Q.indexOf('#'))}if(Q.indexOf("?")>=0){Q=Q.slice(Q.indexOf("?")+1);var p=Q.split("&"),P={},a,n,v;for(var i=0;i<p.length;i++){a=p[i].split("=");n=decodeURIComponent(a[0]);v=a.length>1?decodeURIComponent(a[1].replace(/\+/g,' ')):"";if(n){if(!Object.prototype.hasOwnProperty.call(P,n)){P[n]=[]}P[n].push(v)}}this.mParams=P}};U.prototype={};U.prototype.get=function(n,a){var v=Object.prototype.hasOwnProperty.call(this.mParams,n)?this.mParams[n]:[];return a===true?v:(v[0]||null)};q.sap.getUriParameters=function getUriParameters(u){return new U(u)};q.sap.unique=function(a){var l=a.length;if(l>1){a.sort();for(var i=1,j=0;i<l;i++){if(a[i]!==a[j]){a[++j]=a[i]}}if(++j<l){a.splice(j,l-j)}}return a};q.sap.equal=function(a,b,m,c,d){if(typeof m=="boolean"){c=m;m=undefined}if(!d)d=0;if(!m)m=10;if(d>m)return false;if(a===b)return true;if(q.isArray(a)&&q.isArray(b)){if(!c){if(a.length!=b.length){return false}}else{if(a.length>b.length){return false}}for(var i=0;i<a.length;i++){if(!q.sap.equal(a[i],b[i],m,c,d+1)){return false}}return true}if(typeof a=="object"&&typeof b=="object"){if(!a||!b){return false}if(a.constructor!=b.constructor){return false}if(a.nodeName&&b.nodeName&&a.namespaceURI&&b.namespaceURI){return q.sap.isEqualNode(a,b)}if(a instanceof Date){return a.valueOf()==b.valueOf()}for(var i in a){if(!q.sap.equal(a[i],b[i],m,c,d+1)){return false}}if(!c){for(var i in b){if(a[i]===undefined){return false}}}return true}return false};q.sap.each=function(o,c){var a=q.isArray(o),l,i;if(a){for(i=0,l=o.length;i<l;i++){if(c.call(o[i],i,o[i])===false){break}}}else{for(i in o){if(c.call(o[i],i,o[i])===false){break}}}return o};q.sap.forIn={toString:null}.propertyIsEnumerable("toString")?function(o,c){for(var n in o){if(c(n,o[n])===false){return}}}:(function(){var D=["toString","valueOf","toLocaleString","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],a=D.length,o=Object.prototype,h=o.hasOwnProperty;return function(O,c){var n,i;for(n in O){if(c(n,O[n])===false){return}}for(var i=0;i<a;i++){n=D[i];if(h.call(O,n)||O[n]!==o[n]){if(c(n,O[n])===false){return}}}}}());q.sap.arrayDiff=function(o,n,c){c=c||function(v,V){return q.sap.equal(v,V)};var O=[];var N=[];var m=[];for(var i=0;i<n.length;i++){var a=n[i];var f=0;var t;for(var j=0;j<o.length;j++){if(c(o[j],a)){f++;t=j;if(f>1){break}}}if(f==1){var M={oldIndex:t,newIndex:i};if(m[t]){delete O[t];delete N[m[t].newIndex]}else{N[i]={data:n[i],row:t};O[t]={data:o[t],row:i};m[t]=M}}}for(var i=0;i<n.length-1;i++){if(N[i]&&!N[i+1]&&N[i].row+1<o.length&&!O[N[i].row+1]&&c(o[N[i].row+1],n[i+1])){N[i+1]={data:n[i+1],row:N[i].row+1};O[N[i].row+1]={data:O[N[i].row+1],row:i+1}}}for(var i=n.length-1;i>0;i--){if(N[i]&&!N[i-1]&&N[i].row>0&&!O[N[i].row-1]&&c(o[N[i].row-1],n[i-1])){N[i-1]={data:n[i-1],row:N[i].row-1};O[N[i].row-1]={data:O[N[i].row-1],row:i-1}}}var d=[];if(n.length==0){for(var i=0;i<o.length;i++){d.push({index:0,type:'delete'})}}else{var b=0;if(!O[0]){for(var i=0;i<o.length&&!O[i];i++){d.push({index:0,type:'delete'});b=i+1}}for(var i=0;i<n.length;i++){if(!N[i]||N[i].row>b){d.push({index:i,type:'insert'})}else{b=N[i].row+1;for(var j=N[i].row+1;j<o.length&&(!O[j]||O[j].row<i);j++){d.push({index:i+1,type:'delete'});b=j+1}}}}return d};q.sap.parseJS=(function(){var a,b,e={'"':'"','\'':'\'','\\':'\\','/':'/',b:'\b',f:'\f',n:'\n',r:'\r',t:'\t'},t,d=function(m){throw{name:'SyntaxError',message:m,at:a,text:t}},n=function(c){if(c&&c!==b){d("Expected '"+c+"' instead of '"+b+"'")}b=t.charAt(a);a+=1;return b},f=function(){var f,s='';if(b==='-'){s='-';n('-')}while(b>='0'&&b<='9'){s+=b;n()}if(b==='.'){s+='.';while(n()&&b>='0'&&b<='9'){s+=b}}if(b==='e'||b==='E'){s+=b;n();if(b==='-'||b==='+'){s+=b;n()}while(b>='0'&&b<='9'){s+=b;n()}}f=+s;if(!isFinite(f)){d("Bad number")}else{return f}},s=function(){var c,i,s='',k,u;if(b==='"'||b==='\''){k=b;while(n()){if(b===k){n();return s}if(b==='\\'){n();if(b==='u'){u=0;for(i=0;i<4;i+=1){c=parseInt(n(),16);if(!isFinite(c)){break}u=u*16+c}s+=String.fromCharCode(u)}else if(typeof e[b]==='string'){s+=e[b]}else{break}}else{s+=b}}}d("Bad string")},g=function(){var g='',c,i=function(b){return b==="_"||(b>="0"&&b<="9")||(b>="a"&&b<="z")||(b>="A"&&b<="Z")};if(i(b)){g+=b}else{d("Bad name")}while(n()){if(b===' '){n();return g}if(b===':'){return g}if(i(b)){g+=b}else{d("Bad name")}}d("Bad name")},w=function(){while(b&&b<=' '){n()}},h=function(){switch(b){case't':n('t');n('r');n('u');n('e');return true;case'f':n('f');n('a');n('l');n('s');n('e');return false;case'n':n('n');n('u');n('l');n('l');return null}d("Unexpected '"+b+"'")},v,j=function(){var j=[];if(b==='['){n('[');w();if(b===']'){n(']');return j}while(b){j.push(v());w();if(b===']'){n(']');return j}n(',');w()}}d("Bad array")},o=function(){var k,o={};if(b==='{'){n('{');w();if(b==='}'){n('}');return o}while(b){if(b>="0"&&b<="9"){k=f()}else if(b==='"'||b==='\''){k=s()}else{k=g()}w();n(':');if(Object.hasOwnProperty.call(o,k)){d('Duplicate key "'+k+'"')}o[k]=v();w();if(b==='}'){n('}');return o}n(',');w()}}d("Bad object")};v=function(){w();switch(b){case'{':return o();case'[':return j();case'"':case'\'':return s();case'-':return f();default:return b>='0'&&b<='9'?f():h()}};return function(c,i){var r;t=c;a=i||0;b=' ';r=v();if(isNaN(i)){w();if(b){d("Syntax error")}return r}else{return{result:r,at:a-1}}}}());return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.sjax')){jQuery.sap.declare('jquery.sap.sjax');sap.ui.define("jquery.sap.sjax",['jquery.sap.global'],function(q){"use strict";q.sap.sjaxSettings={complexResult:true,fallback:undefined};q.sap.sjax=function sjax(o){var s=q.extend(true,{},q.sap.sjaxSettings,o,{async:false,success:function(d,t,x){r={success:true,data:d,status:t,statusCode:x&&x.status}},error:function(x,t,e){r={success:false,data:undefined,status:t,error:e,statusCode:x.status}}});var r=undefined;q.ajax(s);if(!s.complexResult){return r.success?r.data:s.fallback}return r};q.sap.syncHead=function(u){return q.sap.sjax({type:'HEAD',url:u}).success};q.sap.syncGet=function syncGet(u,d,D){return q.sap.sjax({url:u,data:d,type:'GET',dataType:D||'text'})};q.sap.syncPost=function syncPost(u,d,D){return q.sap.sjax({url:u,data:d,type:'POST',dataType:D||'text'})};q.sap.syncGetText=function syncGetText(u,d,f){return q.sap.sjax({url:u,data:d,type:'GET',dataType:'text',fallback:f,complexResult:(arguments.length<3)})};q.sap.syncGetJSON=function syncGetJSON(u,d,f){return q.sap.sjax({url:u,data:d||null,type:'GET',dataType:'json',fallback:f,complexResult:(arguments.length<3)})};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.storage')){jQuery.sap.declare('jquery.sap.storage');sap.ui.define("jquery.sap.storage",['jquery.sap.global'],function(q){"use strict";var s=!!(window.JSON&&JSON.parse&&JSON.stringify);var S="state.key_";var f=function(a,b){var t="unknown",P=b||S;P+="-";var T=P+"___sapui5TEST___",c=true,o;if(!a||typeof(a)==="string"){t=a||"session";try{o=window[t+"Storage"]}catch(e){o=null}try{if(o){o.setItem(T,"1");o.removeItem(T)}}catch(e){c=false;o=null}}else if(typeof(a)==="object"){t=a.getType?a.getType():"unknown";o=a}var d=!!o;this.isSupported=function(){if(!d){return false}if(typeof(o.isSupported)=="function"){return o.isSupported()}return true};this.put=function(i,g){if(this.isSupported()&&i){try{o.setItem(P+i,s?JSON.stringify(g):g);return true}catch(e){return false}}else{return false}};this.get=function(i){if(this.isSupported()&&i){try{var I=o.getItem(P+i);return s?JSON.parse(I):I}catch(e){return null}}else{return null}};this.remove=function(i){if(this.isSupported()&&i){try{o.removeItem(P+i);return true}catch(e){return false}}else{return false}};this.removeAll=function(I){if(this.isSupported()&&o.length&&(document.addEventListener?/function/:/function|object/).test(typeof(o.key))){try{var l=o.length;var k=[];var g,i;var p=P+(I||"");for(i=0;i<l;i++){g=o.key(i);if(g&&g.indexOf(p)==0){k.push(g)}}for(i=0;i<k.length;i++){o.removeItem(k[i])}return true}catch(e){return false}}else{return false}};this.clear=function(){if(this.isSupported()){try{o.clear();return true}catch(e){return false}}else{return false}};this.getType=function(){return t}};var m={};q.sap.storage=function(o,i){if(!o){o=q.sap.storage.Type.session}if(typeof(o)==="string"&&q.sap.storage.Type[o]){var k=o;if(i&&i!=S){k=o+"_"+i}return m[k]||(m[k]=new f(o,i))}return new f(o,i)};q.sap.storage.Type={local:"local",session:"session",global:"global"};f.apply(q.sap.storage);m[q.sap.storage.Type.session]=q.sap.storage;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.strings')){jQuery.sap.declare('jquery.sap.strings');sap.ui.define("jquery.sap.strings",['jquery.sap.global'],function(q){"use strict";q.sap.endsWith=function endsWith(s,e){if(typeof(e)!="string"||e==""){return false}var p=s.lastIndexOf(e);return p>=0&&p==s.length-e.length};q.sap.endsWithIgnoreCase=function endsWithIgnoreCase(s,e){if(typeof(e)!="string"||e==""){return false}s=s.toUpperCase();e=e.toUpperCase();return q.sap.endsWith(s,e)};q.sap.startsWith=function startsWith(s,S){if(typeof(S)!="string"||S==""){return false}if(s==S){return true}return s.indexOf(S)==0};q.sap.startsWithIgnoreCase=function startsWithIgnoreCase(s,S){if(typeof(S)!="string"||S==""){return false}s=s.toUpperCase();S=S.toUpperCase();return q.sap.startsWith(s,S)};q.sap.charToUpperCase=function charToUpperCase(s,p){if(!s){return s}if(!p||isNaN(p)||p<=0||p>=s.length){p=0}var C=s.charAt(p).toUpperCase();if(p>0){return s.substring(0,p)+C+s.substring(p+1)}return C+s.substring(p+1)};q.sap.padLeft=function padLeft(s,p,l){if(!s){s=""}while(s.length<l){s=p+s}return s};q.sap.padRight=function padRight(s,p,l){if(!s){s=""}while(s.length<l){s=s+p}return s};var r=/-(.)/ig;q.sap.camelCase=function camelCase(s){return s.replace(r,function(m,C){return C.toUpperCase()})};var a=/([A-Z])/g;q.sap.hyphen=function hyphen(s){return s.replace(a,function(m,C){return"-"+C.toLowerCase()})};var b=/[-[\]{}()*+?.,\\^$|#\s]/g;q.sap.escapeRegExp=function escapeRegExp(s){return s.replace(b,"\\$&")};q.sap.formatMessage=function formatMessage(p,v){if(arguments.length>2||(v!=null&&!q.isArray(v))){v=Array.prototype.slice.call(arguments,1)}v=v||[];return p.replace(c,function($,d,e,f,o){if(d){return"'"}else if(e){return e.replace(/''/g,"'")}else if(f){return String(v[parseInt(f,10)])}throw new Error("formatMessage: pattern syntax error at pos. "+o)})};var c=/('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.xml')){jQuery.sap.declare('jquery.sap.xml');sap.ui.define("jquery.sap.xml",['jquery.sap.global','sap/ui/Device'],function(q,D){"use strict";q.sap.parseXML=function parseXML(x){var X;if(window.DOMParser){var p=new DOMParser();try{X=p.parseFromString(x,"text/xml")}catch(e){var P=q.sap.getParseError(X);X={};P.reason=e.message;X.parseError=P;return X}}else{X=new ActiveXObject("Microsoft.XMLDOM");X.async=false;X.loadXML(x)}var P=q.sap.getParseError(X);if(P){if(!X.parseError){X.parseError=P}}return X};q.sap.serializeXML=function serializeXML(x){var X="";if(window.ActiveXObject){X=x.xml;if(X){return X}}if(window.XMLSerializer){var s=new XMLSerializer();X=s.serializeToString(x)}return X};q.sap.isEqualNode=function(n,N){if(n===N)return true;if(!n||!N)return false;if(n.isEqualNode){return n.isEqualNode(N)}if(n.nodeType!=N.nodeType)return false;if(n.nodeValue!=N.nodeValue)return false;if(n.baseName!=N.baseName)return false;if(n.nodeName!=N.nodeName)return false;if(n.nameSpaceURI!=N.nameSpaceURI)return false;if(n.prefix!=N.prefix)return false;if(n.nodeType!=1)return true;if(n.attributes.length!=N.attributes.length)return false;for(var i=0;i<n.attributes.length;i++){if(!q.sap.isEqualNode(n.attributes[i],N.attributes[i])){return false}}if(n.childNodes.length!=N.childNodes.length)return false;for(var i=0;i<n.childNodes.length;i++){if(!q.sap.isEqualNode(n.childNodes[i],N.childNodes[i])){return false}}return true};q.sap.getParseError=function getParseError(d){var p={errorCode:-1,url:"",reason:"unknown error",srcText:"",line:-1,linepos:-1,filepos:-1};if(!!D.browser.internet_explorer&&d&&d.parseError&&d.parseError.errorCode!=0){return d.parseError}if(!!D.browser.firefox&&d&&d.documentElement&&d.documentElement.tagName=="parsererror"){var e=d.documentElement.firstChild.nodeValue,r=/XML Parsing Error: (.*)\nLocation: (.*)\nLine Number (\d+), Column (\d+):(.*)/;if(r.test(e)){p.reason=RegExp.$1;p.url=RegExp.$2;p.line=parseInt(RegExp.$3,10);p.linepos=parseInt(RegExp.$4,10);p.srcText=RegExp.$5}return p}if(!!D.browser.webkit&&d&&d.documentElement&&d.documentElement.tagName=="html"&&d.getElementsByTagName("parsererror").length>0){var e=q.sap.serializeXML(d),r=/error on line (\d+) at column (\d+): ([^<]*)/;if(r.test(e)){p.reason=RegExp.$3;p.url="";p.line=parseInt(RegExp.$1,10);p.linepos=parseInt(RegExp.$2,10);p.srcText=""}return p}if(!d||!d.documentElement){return p}return{errorCode:0}};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.base.BindingParser')){jQuery.sap.declare('sap.ui.base.BindingParser');sap.ui.define("sap/ui/base/BindingParser",['jquery.sap.global','jquery.sap.script'],function(q){"use strict";var r=/^\{\s*[a-zA-Z_][a-zA-Z0-9_]*\s*:/;var a=/(\\[\\\{\}])|(\{)/g;var b=/([\\\{\}])/g;function c(f){var F=function(v){var R=[],l=f.length,i;for(i=0;i<l;i++){if(typeof f[i]==="number"){R.push(arguments[f[i]])}else{R.push(f[i])}}return R.join('')};F.textFragments=f;return F}function d(p){var P=p.indexOf(">"),o={path:p};if(P>0){o.model=p.slice(0,P);o.path=p.slice(P+1)}return o}var B={};B._keepBindingStrings=false;B.simpleParser=function(s,C){if(q.sap.startsWith(s,"{")&&q.sap.endsWith(s,"}")){return d(s.slice(1,-1))}};B.simpleParser.escape=function(v){return v};B.complexParser=function(s,C,u){var e=q.sap.parseJS,f={parts:[]},F=[],U,P,p=0,m,g;function h(o,k){if(typeof o[k]==="string"){var n=o[k];if(q.sap.startsWith(o[k],".")){o[k]=q.proxy(q.sap.getObject(o[k].slice(1),undefined,C),C)}else{o[k]=q.sap.getObject(o[k])}if(typeof(o[k])!=="function"){q.sap.log.error(k+" function "+n+" not found!")}}}function i(o,k){var l;if(typeof o[k]==="string"){if(q.sap.startsWith(o[k],".")){l=q.sap.getObject(o[k].slice(1),undefined,C)}else{l=q.sap.getObject(o[k])}if(typeof l==="function"){o[k]=new l(o.formatOptions,o.constraints)}else{o[k]=l}delete o.formatOptions;delete o.constraints}}function j(o,k,l){var n;if(!(typeof o[k]==="object"||q.isArray(o[k]))){return}if(q.isArray(o[k])){q.each(o[k],function(I,O){j(o[k],I,k)})}else{if(k==="filters"||l==="filters"){n=q.sap.getObject("sap.ui.model.Filter")}else if(k==="sorter"||l==="sorter"){n=q.sap.getObject("sap.ui.model.Sorter");h(o[k],"group")}if(n){o[k]=new n(o[k])}}}while(m=a.exec(s)){if(p<m.index){F.push(s.slice(p,m.index))}if(m[1]){F.push(m[1].slice(1));U=true}else{if(r.test(s.slice(m.index))){P=e(s,m.index);i(P.result,'type');j(P.result,'filters');j(P.result,'sorter');h(P.result,'formatter');h(P.result,'factory');h(P.result,'groupHeaderFactory');F.push(f.parts.length);f.parts.push(P.result);a.lastIndex=P.at}else{g=s.indexOf('}',m.index);if(g<m.index){throw new SyntaxError("no closing braces found in '"+s+"' after pos:"+m.index)}F.push(f.parts.length);f.parts.push(d(s.slice(m.index+1,g)));a.lastIndex=g+1}}p=a.lastIndex}if(p<s.length){F.push(s.slice(p))}if(f.parts.length>0){if(F.length===1){f=f.parts[0]}else{f.formatter=c(F)}if(B._keepBindingStrings){f.bindingString=s}return f}else if(u&&U){return F.join('')}};B.complexParser.escape=function(v){return v.replace(b,"\\$1")};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.base.DataType')){jQuery.sap.declare('sap.ui.base.DataType');sap.ui.define("sap/ui/base/DataType",['jquery.sap.global'],function(q){"use strict";var D=function(){throw new Error()};D.prototype.getName=function(){return undefined};D.prototype.getBaseType=function(){return undefined};D.prototype.getComponentType=function(){return undefined};D.prototype.getDefaultValue=function(){return undefined};D.prototype.isArrayType=function(){return undefined};D.prototype.parseValue=function(v){var t=this.getName();if(t=="string"){return v}else if(t=="boolean"){return v=="true"}else if(t=="int"){return parseInt(v,10)}else if(t=="float"){return parseFloat(v)}else if(t=="object"){return v?q.parseJSON(v):null}else{return v}};D.prototype.isValid=undefined;D.prototype.setNormalizer=function(n){this._fnNormalizer=n};D.prototype.normalize=function(v){if(typeof this._fnNormalizer==="function"){return this._fnNormalizer(v)}else{return v}};(function(){function c(n,s,b){s=s||{};b=b||D.prototype;var t=q.sap.newObject(b);t.getName=function(){return n};if(s.hasOwnProperty("defaultValue")){var d=s.defaultValue;t.getDefaultValue=function(){return d}}if(s.hasOwnProperty("isValid")){var i=s.isValid;t.isValid=b.isValid?function(v){if(!b.isValid(v)){return false}return i(v)}:i};t.isArrayType=function(){return false};return t}function a(b){var t=q.sap.newObject(D.prototype);t.getName=function(){return b.getName()+"[]"};t.getComponentType=function(){return b};t.isValid=function(v){if(v===null){return true}if(q.isArray(v)){for(var i=0;i<v.length;i++){if(!b.isValid(v[i])){return false}}return true}return false};t.parseValue=function(v){var V=v.split(",");for(var i=0;i<V.length;i++){V[i]=b.parseValue(V[i])}return V};t.isArrayType=function(){return true};return t}var P={"any":c("any",{defaultValue:null,isValid:function(v){return true}}),"boolean":c("boolean",{defaultValue:false,isValid:function(v){return typeof v==="boolean"}}),"int":c("int",{defaultValue:0,isValid:function(v){return typeof v==="number"&&Math.floor(v)==v}}),"float":c("float",{defaultValue:0.0,isValid:function(v){return typeof v==="number"}}),"string":c("string",{defaultValue:"",isValid:function(v){return typeof v==="string"||v instanceof String}}),"object":c("object",{defaultValue:null,isValid:function(v){return typeof v==="object"||typeof v==="function"}})};D.getType=function(t){if(t.indexOf("[]")>0){var C=t.substr(0,t.length-2),o=this.getType(C);return o&&a(o)}else{return P[t]||q.sap.getObject(t)}};D.createType=c;var I={};D.registerInterfaceTypes=function(t){for(var i=0;i<t.length;i++){q.sap.setObject(t[i],I[t[i]]=new String(t[i]))}};D.isInterfaceType=function(t){return I.hasOwnProperty(t)&&q.sap.getObject(t)===I[t]}}());return D},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Exception')){jQuery.sap.declare('sap.ui.base.Exception');sap.ui.define("sap/ui/base/Exception",['jquery.sap.global'],function(q){"use strict";var E=function(m){this.name="Exception";this.message=m};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Interface')){jQuery.sap.declare('sap.ui.base.Interface');sap.ui.define("sap/ui/base/Interface",['jquery.sap.global'],function(q){"use strict";var I=function(o,m){if(!o){return o}function c(o,M){return function(){var t=o[M].apply(o,arguments);return(t instanceof sap.ui.base.Object)?t.getInterface():t}}if(!m){return{}}var M;for(var i=0,a=m.length;i<a;i++){M=m[i];this[M]=c(o,M)}};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Metadata')){jQuery.sap.declare('sap.ui.base.Metadata');sap.ui.define("sap/ui/base/Metadata",['jquery.sap.global','jquery.sap.script'],function(q){"use strict";var M=function(c,C){if(!C||typeof C.metadata!=="object"){C={metadata:C||{},constructor:q.sap.getObject(c)};C.metadata.__version=1.0}C.metadata.__version=C.metadata.__version||2.0;if(typeof C.constructor!=="function"){throw Error("constructor for class "+c+" must have been declared before creating metadata for it")}this._sClassName=c;this._oClass=C.constructor;this.extend(C)};M.prototype.extend=function(c){this.applySettings(c);this.afterApplySettings()};M.prototype.applySettings=function(c){var t=this,s=c.metadata,p,n;if(s.baseType){var P=q.sap.getObject(s.baseType);if(typeof P!=="function"){q.sap.log.fatal("base class '"+s.baseType+"' does not exist")}if(P.getMetadata){this._oParent=P.getMetadata();}else{this._oParent=new M(s.baseType,{})}}else{this._oParent=undefined}this._bAbstract=!!s["abstract"];this._bFinal=!!s["final"];this._sStereotype=s.stereotype||(this._oParent?this._oParent._sStereotype:"object");this._aInterfaces=q.sap.unique(s.interfaces||[]);this._aPublicMethods=q.sap.unique(s.publicMethods||[]);p=this._oClass.prototype;q.sap.forIn(c,function(n,v){if(n!=="metadata"&&n!=="constructor"){p[n]=v;if(!n.match(/^_|^on|^init$|^exit$/)){t._aPublicMethods.push(n)}}})};M.prototype.afterApplySettings=function(){if(this._oParent){this._aAllPublicMethods=q.sap.unique(this._oParent._aAllPublicMethods.concat(this._aPublicMethods))}else{this._aAllPublicMethods=this._aPublicMethods}};M.prototype.getStereotype=function(){return this._sStereotype};M.prototype.getName=function(){return this._sClassName};M.prototype.getClass=function(){return this._oClass};M.prototype.getParent=function(){return this._oParent};M.prototype.getPublicMethods=function(){return this._aPublicMethods};M.prototype.getAllPublicMethods=function(){return this._aAllPublicMethods};M.prototype.getInterfaces=function(){return this._aInterfaces};M.prototype.isInstanceOf=function(I){if(this._oParent){if(this._oParent.isInstanceOf(I)){return true}};var a=this._aInterfaces;for(var i=0,l=a.length;i<l;i++){if(a[i]===I){return true}}return false};M.prototype.isAbstract=function(){return this._bAbstract};M.prototype.isFinal=function(){return this._bFinal};M.prototype.addPublicMethods=function(m){var n=(m instanceof Array)?m:arguments;function u(a,v){Array.prototype.push.apply(a,v);q.sap.unique(a)}u(this._aPublicMethods,n);u(this._aAllPublicMethods,n)};M.createClass=function(b,c,C,F){if(typeof b==="string"){F=C;C=c;c=b;b=null}F=F||M;if(typeof F.preprocessClassInfo==="function"){C=F.preprocessClassInfo(C)}C=C||{};C.metadata=C.metadata||{};if(!C.hasOwnProperty('constructor')){C.constructor=undefined}var f=C.constructor;if(b){if(!f){if(C.metadata.deprecated){f=function(){q.sap.log.warning("Usage of deprecated class: "+c);b.apply(this,arguments)}}else{f=function(){b.apply(this,arguments)}}}f.prototype=q.sap.newObject(b.prototype);f.prototype.constructor=f;C.metadata.baseType=b.getMetadata().getName()}else{f=f||function(){};delete C.metadata.baseType}C.constructor=f;q.sap.setObject(c,f);var m=new F(c,C);f.getMetadata=f.prototype.getMetadata=q.sap.getter(m);if(!f.getMetadata().isFinal()){f.extend=function(s,S,a){return M.createClass(f,s,S,a||F)}}return f};return M},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Object')){jQuery.sap.declare('sap.ui.base.Object');sap.ui.define("sap/ui/base/Object",['jquery.sap.global','./Interface','./Metadata'],function(q,I,M){"use strict";var B=M.createClass("sap.ui.base.Object",{constructor:function(){if(!(this instanceof B)){throw Error("Cannot instantiate object: \"new\" is missing!")}}});B.prototype.destroy=function(){};B.prototype.getInterface=function(){var i=new I(this,this.getMetadata().getAllPublicMethods());this.getInterface=q.sap.getter(i);return i};B.defineClass=function(c,s,F){var m=new(F||M)(c,s);var C=m.getClass();C.getMetadata=C.prototype.getMetadata=q.sap.getter(m);if(!m.isFinal()){C.extend=function(S,o,f){return M.createClass(C,S,o,f||F)}}q.sap.log.debug("defined class '"+c+"'"+(m.getParent()?" as subclass of "+m.getParent().getName():""));return m};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ObjectPool')){jQuery.sap.declare('sap.ui.base.ObjectPool');sap.ui.define("sap/ui/base/ObjectPool",['jquery.sap.global','./Object'],function(q,B){"use strict";var O=B.extend("sap.ui.base.ObjectPool",{constructor:function(o){B.apply(this);this.oObjectClass=o;this.aFreeObjects=[]}});O.prototype.borrowObject=function(){var o=this.aFreeObjects.length==0?new this.oObjectClass():this.aFreeObjects.pop();o.init.apply(o,arguments);return o};O.prototype.returnObject=function(o){o.reset();this.aFreeObjects.push(o)};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentContainerRenderer')){jQuery.sap.declare('sap.ui.core.ComponentContainerRenderer');sap.ui.define("sap/ui/core/ComponentContainerRenderer",['jquery.sap.global'],function(q){"use strict";var C={};C.render=function(r,c){var R=r;var b=sap.ui.getCore().getConfiguration().getRTL();var o=c.getComponentInstance();var w=c.getWidth();var h=c.getHeight();R.write("<div");R.writeControlData(c);if(w){R.addStyle("width",w)}if(h){R.addStyle("height",h)}R.writeStyles();R.addClass("sapUiComponentContainer");R.writeClasses();R.write(">");R.write("<div id=\""+c.getId()+"-uiarea\"");if(w&&w!=="auto"){R.addStyle("width","100%")}if(h&&h!=="auto"){R.addStyle("height","100%")}R.writeStyles();R.write(">");if(o){o.render(R)}R.write("</div></div>")};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.DeclarativeSupport')){jQuery.sap.declare('sap.ui.core.DeclarativeSupport');sap.ui.define("sap/ui/core/DeclarativeSupport",['jquery.sap.global'],function(q){"use strict";var D={};D.attributes={"data-sap-ui-type":true,"data-sap-ui-aggregation":true,"data-sap-ui-default-aggregation":true,"data-sap-ui-binding":function(v,s){var b=sap.ui.base.ManagedObject.bindingParser(v);s.objectBindings=s.objectBindings||{};s.objectBindings[b.model||undefined]=b},"data-tooltip":function(v,s){s["tooltip"]=v},"tooltip":function(v,s,c){s["tooltip"]=v;q.sap.log.warning('[Deprecated] Control "'+s.id+'": The attribute "tooltip" is not prefixed with "data-*". Future version of declarative support will only suppport attributes with "data-*" prefix.')},"class":true,"style":true,"id":true};D.compile=function(e,v,i){var s=this;q(e).find("[data-sap-ui-type]").filter(function(){return q(this).parents("[data-sap-ui-type]").length===0}).each(function(){s._compile(this,v,i)})};D._compile=function(e,v,i){var $=q(e);var t=$.attr("data-sap-ui-type");var c=[];var I=t==="sap.ui.core.UIArea";if(I){var s=this;$.children().each(function(){var C=s._createControl(this,v);if(C){c.push(C)}})}else{var C=this._createControl(e,v);if(C){c.push(C)}}$.empty();var a=[];q.each(e.attributes,function(b,A){var n=A.name;if(!I||I&&/^data-/g.test(n.toLowerCase())){a.push(n)}});if(a.length>0){$.removeAttr(a.join(" "))}q.each(c,function(k,C){if(C instanceof sap.ui.core.Control){if(v&&!i){v.addContent(C)}else{C.placeAt(e);if(v){v.connectControl(C)}}}})};D._createControl=function(e,v){var $=q(e);var c=null;var t=$.attr("data-sap-ui-type");if(t){q.sap.require(t);var C=q.sap.getObject(t);var s={};var i=s.id=this._getId($,v);this._addSettingsForAttributes(s,C,e,v);this._addSettingsForAggregations(s,C,e,v);var c;if(sap.ui.core.mvc.View.prototype.isPrototypeOf(C.prototype)&&typeof C._sType==="string"){c=sap.ui.view(s,undefined,C._sType)}else{c=new C(s)}if(e.className){c.addStyleClass(e.className)}$.removeAttr("data-sap-ui-type")}else{c=this._createHtmlControl(e,v)}return c};D._createHtmlControl=function(e,v){var h=new sap.ui.core.HTML();h.setDOMContent(e);this.compile(e,v,true);return h};D._addSettingsForAttributes=function(s,c,e,v){var a=this;var S=D.attributes;var b=sap.ui.base.ManagedObject.bindingParser;var C=[];var r=/^data-custom-data:(.+)/i;q.each(e.attributes,function(i,A){var n=A.name;var V=A.value;if(!r.test(n)){if(typeof S[n]==="undefined"){n=a.convertAttributeToSettingName(n,s.id);var p=a._getProperty(c,n);if(p){var B=b(V,v&&v.getController(),true);if(B&&typeof B==="object"){s[n]=B}else{s[n]=a.convertValueToType(a.getPropertyDataType(p),B||V)}}else if(a._getAssociation(c,n)){var o=a._getAssociation(c,n);if(o.multiple){V=V.replace(/\s*,\s*|\s+/g,",");var I=V.split(",");q.each(I,function(i,g){I[i]=v?v.createId(g):g});s[n]=I}else{s[n]=v?v.createId(V):V}}else if(a._getAggregation(c,n)){var d=a._getAggregation(c,n);if(d.multiple){var B=b(V,v&&v.getController());if(B){s[n]=B}else{throw new Error("Aggregation "+n+" with cardinality 0..n only allows binding paths as attribute value")}}else if(d.altTypes){var B=b(V,v&&v.getController(),true);if(B&&typeof B==="object"){s[n]=B}else{s[n]=a.convertValueToType(d.altTypes[0],B||V)}}else{throw new Error("Aggregation "+n+" not supported")}}else if(a._getEvent(c,n)){var h=q.sap.getObject(V);if(v&&typeof h==="undefined"){var f=(v._oContainingView||v).getController();h=f[V];if(typeof h==="function"){h=q.proxy(h,f);h._sapui_handlerName=V}}if(typeof h==="function"){s[n]=h}else{throw new Error('Control "'+s.id+'": The function "'+V+'" for the event "'+n+'" is not defined')}}}else if(typeof S[n]==="function"){S[n](V,s,c)}}else{n=q.sap.camelCase(r.exec(n)[1]);var B=b(V,v&&v.getController());C.push(new sap.ui.core.CustomData({key:n,value:B||V}))}});if(C.length>0){s.customData=C}return s};D._addSettingsForAggregations=function(s,c,e,v){var $=q(e);var d=this._getDefaultAggregation(c,e);var a=this;var A=c.getMetadata().getAllAggregations();$.children().each(function(){var b=q(this);var f=b.attr("data-sap-ui-aggregation");var t=b.attr("data-sap-ui-type");var u=false;if(!f){u=true;f=d}if(f&&A[f]){var m=A[f].multiple;var g=function(C){var o=a._createControl(C,v);if(o){if(m){if(!s[f]){s[f]=[]}if(typeof s[f].path==="string"){s[f].template=o}else{s[f].push(o)}}else{s[f]=o}}};if(u||(t&&!u)){g(this)}else{b.children().each(function(){g(this)})}}b.removeAttr("data-sap-ui-aggregation");b.removeAttr("data-sap-ui-type")});return s};D._getId=function(e,v){var $=q(e);var i=$.attr("id");if(i){if(v){i=v.createId(i);$.attr("data-sap-ui-id",i)}$.attr("id","")}return i};D._getProperty=function(c,n){return c.getMetadata().getAllProperties()[n]};D.convertValueToType=function(t,v){if(t instanceof sap.ui.base.DataType){v=t.parseValue(v)}return typeof v==="string"?sap.ui.base.ManagedObject.bindingParser.escape(v):v};D.getPropertyDataType=function(p){var t=sap.ui.base.DataType.getType(p.type);if(!t){throw new Error("Property "+p.name+" has no known type")}return t};D.convertAttributeToSettingName=function(a,i,d){if(a.indexOf("data-")===0){a=a.substr(5)}else if(d){q.sap.log.warning('[Deprecated] Control "'+i+'": The attribute "'+a+'" is not prefixed with "data-*". Future version of declarative support will only suppport attributes with "data-*" prefix.')}else{throw new Error('Control "'+i+'": The attribute "'+a+'" is not prefixed with "data-*".')}return q.sap.camelCase(a)};D._getAssociation=function(c,n){return c.getMetadata().getAllAssociations()[n]};D._getAggregation=function(c,n){return c.getMetadata().getAllAggregations()[n]};D._getEvent=function(c,n){return c.getMetadata().getAllEvents()[n]};D._getDefaultAggregation=function(c,e){var $=q(e);var d=$.attr("data-sap-ui-default-aggregation")||c.getMetadata().getDefaultAggregationName();$.removeAttr("data-sap-ui-default-aggregation");return d};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.HTMLRenderer')){jQuery.sap.declare('sap.ui.core.HTMLRenderer');sap.ui.define("sap/ui/core/HTMLRenderer",['jquery.sap.global'],function(q){"use strict";var H={render:function(r,c){var u=c.getUIArea();r.write("<div id=\"sap-ui-dummy-"+c.getId()+"\" style=\"display:none\">");r.write("</div>")}};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.History')){jQuery.sap.declare('sap.ui.core.History');sap.ui.define("sap/ui/core/History",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var H=B.extend("sap.ui.core.History",{constructor:function(i,s){B.apply(this);if(!s){s={}}var h=s.prefix?s.prefix:document.location.pathname;this._iMaxHistory=s.max?s.max:100;this._sHistoryId=h+i;q.sap.require("jquery.sap.storage");this._oStorage=q.sap.storage(q.sap.storage.Type.local);this._fFilter=s.filter?s.filter:function(a,v){return a&&(!v||(v&&q.sap.startsWithIgnoreCase(a,v)))};this._fCheckHistory=s.checkHistory?s.checkHistory:function(a){return a}},_initHistory:function(){if(!this._aHistory){var h=this._oStorage.get(this._sHistoryId);if(typeof(h)==="string"){h=h.split(",")}else if(!h){h=[]}this._aHistory=this._fCheckHistory(h)}return this._aHistory},get:function(v){var h=this._initHistory();var r=[];for(var i=0;i<h.length;i++){if(this._fFilter(h[i],v)){r.push(h[i])}}return r},remove:function(v){var h=this._initHistory();for(var i=0;i<h.length;i++){if(h[i]==v){h.splice(i,1);break}}},add:function(v){var h=this._initHistory();for(var i=0;i<h.length;i++){if(h[i]===v){h.splice(i,1);break}}h.unshift(v);if(h.length>this._iMaxHistory){h.splice(this._iMaxHistory)}this._oStorage.put(this._sHistoryId,h)},clear:function(){this._oStorage.remove(this._sHistoryId);this._aHistory=null}});return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IconPool')){jQuery.sap.declare('sap.ui.core.IconPool');sap.ui.define("sap/ui/core/IconPool",['jquery.sap.global','sap/ui/thirdparty/URI'],function(q,U){"use strict";if(b){return}var I=["accidental-leave","account","wrench","windows-doors","washing-machine","visits","video","travel-expense","temperature","task","synchronize","survey","settings","search","sales-document","retail-store","refresh","product","present","ppt-attachment","pool","pie-chart","picture","photo-voltaic","phone","pending","pdf-attachment","past","outgoing-call","opportunity","opportunities","notes","money-bills","map","log","line-charts","lightbulb","leads","lead","laptop","kpi-managing-my-area","kpi-corporate-performance","incoming-call","inbox","horizontal-bar-chart","history","heating-cooling","gantt-bars","future","fridge","fallback","expense-report","excel-attachment","energy-saving-lightbulb","employee","email","edit","duplicate","download","doc-attachment","dishwasher","delete","decline","complete","competitor","collections-management","chalkboard","cart","card","camera","calendar","begin","basket","bar-chart","attachment","arrow-top","arrow-right","arrow-left","arrow-bottom","approvals","appointment","alphabetical-order","along-stacked-chart","alert","addresses","address-book","add-filter","add-favorite","add","activities","action","accept","hint","group","check-availability","weather-proofing","payment-approval","batch-payments","bed","arobase","family-care","favorite","navigation-right-arrow","navigation-left-arrow","e-care","less","lateness","lab","internet-browser","instance","inspection","image-viewer","home","grid","goalseek","general-leave-request","create-leave-request","flight","filter","favorite-list","factory","endoscopy","employee-pane","employee-approvals","email-read","electrocardiogram","documents","decision","database","customer-history","customer","credit-card","create-entry-time","contacts","compare","clinical-order","chain-link","pull-down","cargo-train","car-rental","business-card","bar-code","folder-blank","passenger-train","question-mark","world","iphone","ipad","warning","sort","course-book","course-program","add-coursebook","print","save","play","pause","record","response","pushpin-on","pushpin-off","unfavorite","learning-assistant","timesheet","time-entry-request","list","action-settings","share","feed","role","flag","post","inspect","inspect-down","appointment-2","target-group","marketing-campaign","notification","comment","shipping-status","collaborate","shortcut","lead-outdated","tools-opportunity","permission","supplier","table-view","table-chart","switch-views","e-learning","manager","switch-classes","simple-payment","signature","sales-order-item","sales-order","request","receipt","puzzle","process","private","popup-window","person-placeholder","per-diem","paper-plane","paid-leave","pdf-reader","overview-chart","overlay","org-chart","number-sign","notification-2","my-sales-order","meal","loan","order-status","customer-order-entry","performance","menu","employee-lookup","education","customer-briefing","customer-and-contacts","my-view","accelerated","to-be-reviewed","warning2","feeder-arrow","quality-issue","workflow-tasks","create","home-share","globe","tags","work-history","x-ray","wounds-doc","web-cam","waiver","vertical-bar-chart","upstacked-chart","trip-report","microphone","unpaid-leave","tree","toaster-up","toaster-top","toaster-down","time-account","theater","taxi","subway-train","study-leave","stethoscope","step","sonography","soccor","physical-activity","pharmacy","official-service","offsite-work","nutrition-activity","newspaper","monitor-payments","map-2","machine","mri-scan","end-user-experience-monitoring","unwired","customer-financial-fact-sheet","retail-store-manager","Netweaver-business-client","electronic-medical-record","eam-work-order","customer-view","crm-service-manager","crm-sales","widgets","commission-check","collections-insight","clinical-tast-tracker","citizen-connect","cart-approval","capital-projects","bo-strategy-management","business-objects-mobile","business-objects-explorer","business-objects-experience","bbyd-dashboard","bbyd-active-sales","business-by-design","business-one","sap-box","manager-insight","accounting-document-verification","hr-approval","idea-wall","Chart-Tree-Map","cart-5","cart-4","wallet","vehicle-repair","upload","unlocked","umbrella","travel-request","travel-expense-report","travel-itinerary","time-overtime","thing-type","technical-object","tag","syringe","syntax","suitcase","simulate","shield","share-2","sales-quote","repost","provision","projector","add-product","pipeline-analysis","add-photo","palette","nurse","sales-notification","mileage","meeting-room","media-forward","media-play","media-pause","media-reverse","media-rewind","measurement-document","measuring-point","measure","map-3","locked","letter","journey-arrive","journey-change","journey-depart","it-system","it-instance","it-host","iphone-2","ipad-2","inventory","insurance-house","insurance-life","insurance-car","initiative","incident","group-2","goal","functional-location","full-screen","form","fob-watch","blank-tag","family-protection","folder","fax-machine","example","eraser","employee-rejections","drop-down-list","draw-rectangle","document","doctor","discussion-2","discussion","dimension","customer-and-supplier","crop","add-contact","compare-2","color-fill","collision","curriculum","chart-axis","full-stacked-chart","full-stacked-column-chart","vertical-bar-chart-2","horizontal-bar-chart-2","horizontal-stacked-chart","vertical-stacked-chart","choropleth-chart","geographic-bubble-chart","multiple-radar-chart","radar-chart","crossed-line-chart","multiple-line-chart","multiple-bar-chart","line-chart","line-chart-dual-axis","bubble-chart","scatter-chart","multiple-pie-chart","column-chart-dual-axis","tag-cloud-chart","area-chart","cause","cart-3","cart-2","bus-public-transport","burglary","building","border","bookmark","badge","attachment-audio","attachment-video","attachment-html","attachment-photo","attachment-e-pub","attachment-zip-file","attachment-text-file","add-equipment","add-activity","activity-individual","activity-2","add-activity-2","activity-items","activity-assigned-to-goal","status-completed","status-error","status-inactive","status-in-process","blank-tag-2","cart-full","locate-me","paging","company-view","document-text","explorer","personnel-view","sorting-ranking","drill-down","drill-up","vds-file","sap-logo-shape","folder-full","system-exit","system-exit-2","close-command-field","open-command-field","sys-enter-2","sys-enter","sys-help-2","sys-help","sys-back","sys-back-2","sys-cancel","sys-cancel-2","open-folder","sys-find-next","sys-find","sys-monitor","sys-prev-page","sys-first-page","sys-next-page","sys-last-page","generate-shortcut","create-session","display-more","enter-more","zoom-in","zoom-out","header","detail-view","collapse","expand","positive","negative","display","menu2","redo","undo","navigation-up-arrow","navigation-down-arrow","down","up","shelf","background","resize","move","show","hide","nav-back","error","slim-arrow-right","slim-arrow-left","slim-arrow-down","slim-arrow-up","forward","overflow","value-help","multi-select","exit-full-screen","sys-add","sys-minus","dropdown","expand-group","collapse-group","vertical-grip","horizontal-grip","sort-descending","sort-ascending","arrow-down"];var a=["e000","e001","e002","e003","e004","e005","e006","e007","e008","e009","e00a","e00b","e00c","e00d","e00e","e00f","e010","e011","e012","e013","e014","e015","e016","e017","e018","e019","e01a","e01b","e01c","e01d","e01e","e01f","e020","e021","e022","e023","e024","e025","e026","e027","e028","e029","e02a","e02b","e02c","e02d","e02e","e02f","e030","e031","e032","e033","e034","e035","e036","e037","e038","e039","e03a","e03b","e03c","e03d","e03e","e03f","e040","e041","e042","e043","e044","e045","e046","e047","e048","e049","e04a","e04b","e04c","e04d","e04e","e04f","e050","e051","e052","e053","e054","e055","e056","e057","e058","e059","e05a","e05b","e05c","e05d","e05e","e05f","e060","e061","e062","e063","e064","e065","e066","e067","e068","e069","e06a","e06b","e06c","e06d","e06e","e06f","e070","e071","e072","e073","e074","e075","e076","e077","e078","e079","e07a","e07b","e07c","e07d","e07e","e07f","e080","e081","e082","e083","e084","e085","e086","e087","e088","e089","e08a","e08b","e08c","e08d","e08e","e08f","e090","e091","e092","e093","e094","e095","e096","e097","e098","e099","e09a","e09b","e09c","e09d","e09e","e09f","e0a0","e0a1","e0a2","e0a3","e0a4","e0a5","e0a6","e0a7","e0a8","e0a9","e0aa","e0ab","e0ac","e0ad","e0ae","e0af","e0b0","e0b1","e0b2","e0b3","e0b4","e0b5","e0b6","e0b7","e0b8","e0b9","e0ba","e0bb","e0bc","e0bd","e0be","e0bf","e0c0","e0c1","e0c2","e0c3","e0c4","e0c5","e0c6","e0c7","e0c8","e0c9","e0ca","e0cb","e0cc","e0cd","e0ce","e0cf","e0d0","e0d1","e0d2","e0d3","e0d4","e0d5","e0d6","e0d7","e0d8","e0d9","e0da","e0db","e0dc","e0dd","e0de","e0df","e0e0","e0e1","e0e2","e0e3","e0e4","e0e5","e0e6","e0e7","e0e8","e0e9","e0ea","e0eb","e0ec","e0ed","e0ee","e0ef","e0f0","e0f1","e0f2","e0f3","e0f4","e0f5","e0f6","e0f7","e0f8","e0f9","e0fa","e0fb","e0fc","e0fd","e0fe","e0ff","e100","e101","e102","e103","e104","e105","e106","e107","e108","e109","e10a","e10b","e10c","e10d","e10e","e10f","e110","e111","e112","e113","e114","e115","e116","e117","e118","e119","e11a","e11b","e11c","e11d","e11e","e11f","e120","e121","e122","e123","e124","e125","e126","e127","e128","e129","e12a","e12b","e12c","e12d","e12e","e12f","e130","e131","e132","e133","e134","e135","e136","e137","e138","e139","e13a","e13b","e13c","e13d","e13e","e13f","e140","e141","e142","e143","e144","e145","e146","e147","e148","e149","e14a","e14b","e14c","e14d","e14e","e14f","e150","e151","e152","e153","e154","e155","e156","e157","e158","e159","e15a","e15b","e15c","e15d","e15e","e15f","e160","e161","e162","e163","e164","e165","e166","e167","e168","e169","e16a","e16b","e16c","e16d","e16e","e16f","e170","e171","e172","e173","e174","e175","e176","e177","e178","e179","e17a","e17b","e17c","e17d","e17e","e17f","e180","e181","e182","e183","e184","e185","e186","e187","e188","e189","e18a","e18b","e18c","e18d","e18e","e18f","e190","e191","e192","e193","e194","e195","e196","e197","e198","e199","e19a","e19b","e19c","e19d","e19e","e19f","e1a0","e1a1","e1a2","e1a3","e1a4","e1a5","e1a6","e1a7","e1a8","e1a9","e1aa","e1ab","e1ac","e1ad","e1ae","e1af","e1b0","e1b1","e1b2","e1b3","e1b4","e1b5","e1b6","e1b7","e1b8","e1b9","e1ba","e1bb","e1bc","e1bd","e1be","e1bf","e1c0","e1c1","e1c2","e1c3","e1c4","e1c5","e1c6","e1c7","e1c8","e1c9","e1ca","e1cb","e1cc","e1cd","e1ce","e1cf","e1d0","e1d1","e1d2","e1d3","e1d4","e1d5","e1d6","e1d7","e1d8","e1d9","e1da","e1db","e1dc","e1dd","e1de","e1df","e1e0","e1e1","e1e2","e1e3","e1e4","e1e5","e1e6","e1e7","e1e8","e1e9","e1ea","e1eb","e1ec","e1ed","e1ee","e1ef","e1f0","e1f1","e1f2","e1f3","e1f4","e1f5","e1f6","e1f7","e1f8","e1f9","e200","e1fa","e1fb","e1fc","e1fd","e1fe"];var m={"chalkboard":true,"calendar":true,"alphabetical-order":true,"address-book":true,"hint":true,"payment-approval":true,"batch-payments":true,"arobase":true,"question-mark":true,"lead":true,"lead-outdated":true,"simple-payment":true,"sales-order-item":true,"sales-order":true,"per-diem":true,"paid-leave":true,"pdf-reader":true,"my-sales-order":true,"loan":true,"globe":true,"waiver":true,"unpaid-leave":true,"customer-financial-fact-sheet":true,"crm-sales":true,"commission-check":true,"collections-insight":true,"capital-projects":true,"business-one":true,"travel-expense":true,"travel-expense-report":true,"travel-request":true,"time-overtime":true,"sales-quote":true,"sales-notification":true,"incident":true,"money-bills":true,"sales-document":true,"opportunities":true,"expense-report":true,"monitor-payments":true,"widgets":true,"sys-help-2":true,"sys-help":true,"accept":true,"accounting-document-verification":true,"activities":true,"activity-2":true,"add-activity":true,"add-activity-2":true,"approvals":true,"bbyd-active-sales":true,"business-by-design":true,"cart-approval":true,"complete":true,"customer-order-entry":true,"employee-approvals":true,"hr-approval":true,"kpi-corporate-performance":true,"kpi-managing-my-area":true,"survey":true,"sys-enter":true,"sys-enter-2":true,"task":true};var s="SAP-icons";var p="sap-icon";var r={};var f=false;var b=function(){throw new Error()};b.createControlByURI=function(c,d){if(typeof c==="string"){c={src:c}}if(c&&c.src){var S=c.src,C=d;if(b.isIconURI(S)){if(!sap.ui.core.Icon){q.sap.require("sap.ui.core.Icon")}C=sap.ui.core.Icon;if(c.tap){c.press=c.tap;delete c.tap}}if(typeof C==="function"){return new C(c)}}};b.addIcon=function(i,c,d){if(typeof d==="string"){d={fontFamily:arguments[2],content:arguments[3],overWrite:!!arguments[4],suppressMirroring:!!arguments[5]}}if(!r[c]){r[c]={}}var e=r[c],g,o=e[i],h;if(o&&(c===undefined||!d.overWrite)){q.sap.log.warning("icon with the same iconName in the collection already exists, specify the last parameter to true in order to overwrite");return}h={protocol:p,hostname:c||i,path:c?i:undefined};g={name:i,collection:c,uri:window.URI.build(h),fontFamily:d.fontFamily,content:String.fromCharCode(parseInt(d.content,16)),suppressMirroring:d.suppressMirroring,skipMirroring:d.suppressMirroring};e[i]=g;return g};b.getIconURI=function(i,c){var d=r[c];if(d&&d[i]){return d[i].uri}};b.getIconInfo=function(i,c){b.insertFontFaceStyle();var P=i,d=c,e,g;if(this.isIconURI(i)){e=window.URI.parse(i);if(e.path.length===1){P=e.hostname;d=undefined}else{d=e.hostname;P=e.path.substr(1,e.path.length)}}g=r[d];return g&&g[P]};b.isIconURI=function(u){if(!u){return false}var c=window.URI.parse(u);return(c.protocol===p)&&!!c.hostname};b.getIconCollectionNames=function(){var n=[];q.map(r,function(v,k){n.push(k)});return n};b.getIconNames=function(c){var d=r[c],n=[];q.map(d,function(v,k){n.push(k)});return n};b.insertFontFaceStyle=function(){if(f){return}var F=q.sap.getModulePath("sap.ui.core",'/')+"themes/base/fonts/",w,c,d,i;if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<10&&window.self!==window.top){F=b._calcAbsPath(F,window.location.href)}d="@font-face {"+"font-family: 'SAP-icons';"+"src: url('"+F+"SAP-icons.eot');"+"src: url('"+F+"SAP-icons.eot?#iefix') format('embedded-opentype'),"+"url('"+F+"SAP-icons.ttf') format('truetype');"+"font-weight: normal;"+"font-style: normal;"+"}";q('head').append('<style type="text/css">'+d+'</style>');f=true};b._calcAbsPath=function(R,B){B=B&&B.replace(/\?.*|#.*/g,"");var u=new window.URI(R),A=u.absoluteTo(B);return A.href()};b._isMirroringSkipped=function(i){return!!m[i]};q.each(I,function(i,n){b.addIcon(n,undefined,{fontFamily:s,content:a[i],suppressMirroring:b._isMirroringSkipped(n)})});return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IconRenderer')){jQuery.sap.declare('sap.ui.core.IconRenderer');sap.ui.define("sap/ui/core/IconRenderer",["jquery.sap.global"],function(q){"use strict";var I={};I.render=function(r,c){if(!c.getVisible()){return}var i=sap.ui.core.IconPool.getIconInfo(c.getSrc()),w=c.getWidth(),h=c.getHeight(),C=c.getColor(),b=c.getBackgroundColor(),s=c.getSize(),t=c.getTooltip_AsString(),T=(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9);r.write("<span");r.writeControlData(c);if(!c.getDecorative()){r.writeAttribute("tabindex",0)}if(t){r.writeAttributeEscaped("title",t)}if(i){if(!T){r.writeAttribute("data-sap-ui-icon-content",i.content)}r.addStyle("font-family","'"+i.fontFamily+"'")}if(w){r.addStyle("width",w)}if(h){r.addStyle("height",h);r.addStyle("line-height",h)}if(C){r.addStyle("color",C)}if(b){r.addStyle("background-color",b)}if(s){r.addStyle("font-size",s)}r.addClass("sapUiIcon");if(i&&!i.suppressMirroring){r.addClass("sapUiIconMirrorInRTL")}r.writeClasses();r.writeStyles();r.write(">");if(i&&T){r.write(i.content)}r.write("</span>")};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicatorRenderer')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicatorRenderer');sap.ui.define("sap/ui/core/LocalBusyIndicatorRenderer",['jquery.sap.global'],function(q){"use strict";var L={};(function(){L.render=function(R,c){R.write("<div");R.writeControlData(c);R.addClass("sapUiLocalBusyIndicator");R.writeClasses();R.write(">");r(R,c);R.write("</div>")};var r=function(R,c){var I=c.getId();var s=I+"-animation";var b=["-leftBox","-middleBox","-rightBox"];R.write('<div');R.writeAttribute('id',s);R.addClass("sapUiLocalBusyIndicatorAnimation");R.writeClasses();R.write(">");for(var i=0;i<b.length;i++){R.write('<div');R.addClass("sapUiLocalBusyIndicatorBox");R.writeClasses();R.writeAttribute("id",I+b[i]);R.write(">");R.write("</div>")}R.write("</div>")}}());return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Locale')){jQuery.sap.declare('sap.ui.core.Locale');sap.ui.define("sap/ui/core/Locale",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var a=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?(-[0-9A-Z]{5,8}|(?:[0-9][0-9A-Z]{3}))*(?:-([0-9A-WYZ](?:-[0-9A-Z]{2,8})+))*(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;var L=B.extend("sap.ui.core.Locale",{constructor:function(l){B.apply(this);var r=a.exec(l.replace(/_/g,"-"));if(r===null){throw"The given language does not adhere to BCP-47."}this.sLocaleId=l;this.sLanguage=r[1]||null;this.sScript=r[2]||null;this.sRegion=r[3]||null;this.sVariant=(r[4]&&r[4].slice(1))||null;this.sExtension=r[5]||null;this.sPrivateUse=r[6]||null;if(this.sLanguage){this.sLanguage=this.sLanguage.toLowerCase()}if(this.sScript){this.sScript=this.sScript.toLowerCase().replace(/^[a-z]/,function($){return $.toUpperCase()})}if(this.sRegion){this.sRegion=this.sRegion.toUpperCase()}},getLanguage:function(){return this.sLanguage},getScript:function(){return this.sScript},getRegion:function(){return this.sRegion},getVariant:function(){return this.sVariant},getVariantSubtags:function(){return this.sVariant?this.sVariant.split('-'):[]},getExtension:function(){return this.sExtension},getExtensionSubtags:function(){return this.sExtension?this.sExtension.slice(2).split('-'):[]},getPrivateUse:function(){return this.sPrivateUse},getPrivateUseSubtags:function(){return this.sPrivateUse?this.sPrivateUse.slice(2).split('-'):[]},hasPrivateUseSubtag:function(s){return q.inArray(s,this.getPrivateUseSubtags())>=0},toString:function(){var r=[this.sLanguage];if(this.sScript){r.push(this.sScript)}if(this.sRegion){r.push(this.sRegion)}if(this.sVariant){r.push(this.sVariant)}if(this.sExtension){r.push(this.sExtension)}if(this.sPrivateUse){r.push(this.sPrivateUse)}return r.join("-")},getSAPLogonLanguage:function(){var l=this.sLanguage||"",m;if(l.indexOf("-")>=0){l=l.slice(0,l.indexOf("-"))}l=M[l]||l;if(l==="zh"){if(this.sScript==="Hant"||(!this.sScript&&this.sRegion==="TW")){l="zf"}}if(this.sPrivateUse&&(m=/-(saptrc|sappsd)(?:-|$)/i.exec(this.sPrivateUse))){l=(m[1].toLowerCase()==="saptrc")?"1Q":"2Q"}return l.toUpperCase()}});var M={"iw":"he","ji":"yi","in":"id","sh":"sr"};function g(v){var m=/\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(v);return(m&&m[2])?m[2].split(/,/):null}var A=g("$cldr-rtl-locales:ar,fa,he$")||[];L._cldrLocales=g("$cldr-locales:ar,ar_EG,ar_SA,bg,br,ca,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,ko,lt,lv,nb,nl,nl_BE,nn,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW$");L._coreI18nLocales=g("$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,ko,lt,lv,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$");L._impliesRTL=function(l){var o=new L(l);l=o.getLanguage()||"";l=(l&&M[l])||l;var r=o.getRegion()||"";if(r&&q.inArray(l+"_"+r,A)>=0){return true}return q.inArray(l,A)>=0};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Renderer')){jQuery.sap.declare('sap.ui.core.Renderer');sap.ui.define("sap/ui/core/Renderer",['jquery.sap.global'],function(q){"use strict";var R={};R.extend=function(p){var c={_super:p};for(var f in p){if(typeof(p[f])=="function"){c[f]=(function(){var m=f,t=c;return function(){return t._super[m].apply(this,arguments)}}())}}return c};R.getTextAlign=function(t,T){var s="";var c=sap.ui.getCore().getConfiguration();switch(t){case sap.ui.core.TextAlign.End:switch(T){case"LTR":s="right";break;case"RTL":s="left";break;default:if(c.getRTL()){s="left"}else{s="right"}break}break;case sap.ui.core.TextAlign.Begin:switch(T){case"LTR":s="left";break;case"RTL":s="right";break;default:if(c.getRTL()){s="right"}else{s="left"}break}break;case sap.ui.core.TextAlign.Right:if(c.getRTL()){if(T=="LTR"){s="right"}}else{s="right"}break;case sap.ui.core.TextAlign.Center:s="center";break;case sap.ui.core.TextAlign.Left:if(c.getRTL()){s="left"}else{if(T=="RTL"){s="left"}}break}return s};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ScrollBarRenderer')){jQuery.sap.declare('sap.ui.core.ScrollBarRenderer');sap.ui.define("sap/ui/core/ScrollBarRenderer",['jquery.sap.global'],function(q){"use strict";var S={};S.render=function(r,s){var a=r;var R=sap.ui.getCore().getConfiguration().getRTL();a.addClass("sapUiScrollBar");var b;if(sap.ui.Device.support.touch){b="sapUiScrollBarTouch";a.addClass(b)}var v=s.getVertical();var c=s.getSize();var C=s.getContentSize();var B=q.sap.scrollbarSize(b);var w=B.width;var h=B.height;if(v){a.write("<div");a.writeControlData(s);a.write(" style=\"overflow:hidden;width:"+w+"px");if(c){a.write(";height:"+c)}a.write("\"");a.writeClasses();a.write(">");a.write("<div ");a.writeAttribute("id",s.getId()+"-sb");a.write(" style=\"width:"+w*2+"px;height:100%;overflow-y:scroll;overflow-x:hidden");if(R){if((!(!!sap.ui.Device.browser.firefox&&sap.ui.Device.browser.version==3.6))&&(!!!sap.ui.Device.browser.safari)){a.write(";margin-right:-"+w+"px")}}else{a.write(";margin-left:-"+w+"px;")}a.write("\">");a.write("<div");a.writeAttribute("id",s.getId()+"-sbcnt");a.write(" style=\"width:"+w+"px");if(C){a.write(";height:"+C)}a.write("\"");a.write(">");a.write("</div>");a.write("</div>");a.write("<div> <span id="+s.getId()+"-ffsize"+" style='position: absolute; top: -9000px; left: -9000px; visibility: hidden; line-height: normal;'> FF Size</span></div>");a.write("</div>")}else{a.write("<div");a.writeControlData(s);a.write(" style=\"overflow:hidden;height:"+h+"px");if(c){a.write(";width:"+c)}a.write("\"");a.writeClasses();a.write(">");a.write("<div ");a.writeAttribute("id",s.getId()+"-sb");a.write(" style=\"height:"+h*2+"px;margin-top:-"+h+"px;overflow-x:scroll;overflow-y:hidden\">");a.write("<div");a.writeAttribute("id",s.getId()+"-sbcnt");a.write(" style=\"height:"+h+"px");if(C){a.write(";width:"+C)}a.write("\"");a.write(">");a.write("</div>");a.write("</div>");a.write("</div>")}};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ThemeCheck')){jQuery.sap.declare('sap.ui.core.ThemeCheck');sap.ui.define("sap/ui/core/ThemeCheck",['jquery.sap.global','sap/ui/Device','sap/ui/base/Object','jquery.sap.script'],function(q,D,B){"use strict";sap.ui._maxThemeCheckCycles=100;var T=B.extend("sap.ui.core.ThemeCheck",{constructor:function(C){this._oCore=C;this._iCount=0;this._CUSTOMCSSCHECK=/\.sapUiThemeDesignerCustomCss/i;this._CUSTOMID="sap-ui-core-customcss";this._customCSSAdded=false;this._themeCheckedForCustom=null;this._mAdditionalLibCss={}},getInterface:function(){return this},fireThemeChangedEvent:function(o,f){c(this);var u=sap.ui._maxThemeCheckCycles>0;if(u||f){d.apply(this,[true])}else{T.themeLoaded=true}if(!o&&!this._sThemeCheckId){this._oCore.fireThemeChanged({theme:this._oCore.getConfiguration().getTheme()})}}});T.themeLoaded=false;T.checkStyle=function(s,l){if(typeof(s)==="string"){s=q.sap.domById(s)}var S=q(s);try{var r=!s||!!((s.sheet&&s.sheet.cssRules.length>0)||!!(s.styleSheet&&s.styleSheet.cssText.length>0)||!!(s.innerHTML&&s.innerHTML.length>0));var f=S.attr("sap-ui-ready");f=!!(f==="true"||f==="false");if(l){q.sap.log.debug("ThemeCheck: Check styles '"+S.attr("id")+"': "+r+"/"+f+"/"+!!s)}return r||f}catch(e){}if(l){q.sap.log.debug("ThemeCheck: Error during check styles '"+S.attr("id")+"': false/false/"+!!s)}return false};function c(t){T.themeLoaded=false;if(t._sThemeCheckId){q.sap.clearDelayedCall(t._sThemeCheckId);t._sThemeCheckId=null;t._iCount=0;t._mAdditionalLibCss={}}}function a(t){var l=t._oCore.getLoadedLibraries();var s=t._oCore.getConfiguration().getTheme();var p=t._oCore._getThemePath("sap.ui.core",s)+"custom.css";var r=true;if(!!t._customCSSAdded&&t._themeCheckedForCustom===s){l[t._CUSTOMID]={}}function e(f){r=r&&T.checkStyle("sap-ui-theme-"+f,true);if(!!r){if(D.browser.msie&&D.browser.version<=9){var S=q.sap.domById("sap-ui-theme-"+f);var R=S&&S.sheet&&S.sheet.rules&&S.sheet.rules.length?S.sheet.rules.length:0;if(R===4095){var n=parseInt(q(S).attr("sap-ui-css-count"),10);if(isNaN(n)){n=1}else{n+=1}var A="ie9_"+n;var g=this.name+"-"+A;var L="sap-ui-theme-"+g;if(!t._mAdditionalLibCss[g]&&!q.sap.domById(L)){t._mAdditionalLibCss[g]={name:this.name};var o;if(f!==this.name){o=q.sap.domById("sap-ui-theme-"+this.name)}else{o=S}var h=new URI(o.getAttribute("href"));var i=h.suffix();var F=h.filename();if(i.length>0){i="."+i;F=F.slice(0,-i.length)}h.filename(F+"_"+A+i);var H=h.toString();var j=document.createElement("link");j.type="text/css";j.rel="stylesheet";j.href=H;j.id=L;q(j).attr("sap-ui-css-count",n).load(function(){q(j).attr("sap-ui-ready","true")}).error(function(){q(j).attr("sap-ui-ready","false")});S.parentNode.insertBefore(j,S.nextSibling)}}}if(t._themeCheckedForCustom!=s){if(b(t,f)){q.sap.includeStyleSheet(p,t._CUSTOMID);t._customCSSAdded=true;q.sap.log.warning("ThemeCheck delivered custom CSS needs to be loaded, Theme not yet applied");t._themeCheckedForCustom=s;r=false;return false}else{var k=q("LINK[id='"+t._CUSTOMID+"']");if(k.length>0){k.remove();q.sap.log.debug("Custom CSS removed")}t._customCSSAdded=false}}}}q.each(l,e);q.each(t._mAdditionalLibCss,e);if(!r){q.sap.log.warning("ThemeCheck: Theme not yet applied.")}else{t._themeCheckedForCustom=s}return r}function b(t,l){var r=2,s=false,R=Array();if(q.sap.domById("sap-ui-theme-"+l)){var e=q.sap.domById("sap-ui-theme-"+l);if(e.sheet){R=e.sheet.cssRules}else if(e.styleSheet){R=e.styleSheet.rules}}if(R.length==0){q.sap.log.warning("Custom check: Failed retrieving a CSS rule from stylesheet "+l);return false}for(var i=0;(i<r&&i<R.length);i++){if(t._CUSTOMCSSCHECK.test(R[i].selectorText)){s=true}}return s}function d(f){this._iCount++;var e=this._iCount>sap.ui._maxThemeCheckCycles;if(!a(this)&&!e){this._sThemeCheckId=q.sap.delayedCall(2,this,d)}else if(!f){c(this);T.themeLoaded=true;this._oCore.fireThemeChanged({theme:this._oCore.getConfiguration().getTheme()});if(e){q.sap.log.warning("ThemeCheck: max. check cycles reached.")}}else{T.themeLoaded=true}}return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ValueStateSupport')){jQuery.sap.declare('sap.ui.core.ValueStateSupport');sap.ui.define("sap/ui/core/ValueStateSupport",['jquery.sap.global'],function(q){"use strict";var V={};var t=null;var e=function(){if(!t){t={};var r=sap.ui.getCore().getLibraryResourceBundle("sap.ui.core");t[sap.ui.core.ValueState.Error]=r.getText("VALUE_STATE_ERROR");t[sap.ui.core.ValueState.Warning]=r.getText("VALUE_STATE_WARNING");t[sap.ui.core.ValueState.Success]=r.getText("VALUE_STATE_SUCCESS")}};V.enrichTooltip=function(E,T){if(!T&&E.getTooltip()){return undefined}if(E.getValueState){var s=E.getValueState();if(s&&(s!=sap.ui.core.ValueState.None)){e();return(T?T+" - ":"")+t[s]}}return T};V.getAdditionalText=function(E){var r=null;if(E.getValueState){var s=E.getValueState();if(s&&(s!=sap.ui.core.ValueState.None)){e();r=t[s]}}return r};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.core.XMLTemplateProcessor')){jQuery.sap.declare('sap.ui.core.XMLTemplateProcessor');sap.ui.define("sap/ui/core/XMLTemplateProcessor",['jquery.sap.global'],function(q){"use strict";function p(t,v,n,c){var b=sap.ui.base.ManagedObject.bindingParser(v,c,true);if(b&&typeof b==="object"){return b}var V=v=b||v;var T=sap.ui.base.DataType.getType(t);if(T){if(T instanceof sap.ui.base.DataType){V=T.parseValue(v)}}else{throw new Error("Property "+n+" has unknown type "+t)}return typeof V==="string"?sap.ui.base.ManagedObject.bindingParser.escape(V):V}function l(x){return x.localName||x.baseName||x.nodeName}var X={};X.loadTemplate=function(t,e){var r=q.sap.getResourceName(t,"."+(e||"view")+".xml");return q.sap.loadResource(r).documentElement};X.parseViewAttributes=function(x,v,s){var a=v.getMetadata().getAllProperties();for(var i=0;i<x.attributes.length;i++){var b=x.attributes[i];if(b.name==='controllerName'){v._controllerName=b.value}else if(b.name==='resourceBundleName'){v._resourceBundleName=b.value}else if(b.name==='resourceBundleUrl'){v._resourceBundleUrl=b.value}else if(b.name==='resourceBundleLocale'){v._resourceBundleLocale=b.value}else if(b.name==='resourceBundleAlias'){v._resourceBundleAlias=b.value}else if(b.name==='class'){v.addStyleClass(b.value)}else if(!s[b.name]&&a[b.name]){s[b.name]=p(a[b.name].type,b.value,b.name,v._oContainingView.oController)}}};X.parseTemplate=function(x,v){var r=[];var c=undefined;var C=v.sViewName||v._sFragmentName;if(!C){var t=v;var L=0;while(++L<1000&&t&&t!==t._oContainingView){t=t._oContainingView}C=t.sViewName}if(v.isSubView()){a(x,true)}else{b(x)}return r;function a(x,R,I){if(x.nodeType===1){var s=l(x);if(x.namespaceURI==="http://www.w3.org/1999/xhtml"||x.namespaceURI==="http://www.w3.org/2000/svg"){r.push("<"+s+" ");var j;for(var i=0;i<x.attributes.length;i++){var k=x.attributes[i];var m=k.value;if(k.name==="id"){m=v._oContainingView.createId(m)}r.push(k.name+"=\""+q.sap.encodeHTML(m)+"\" ")}if(R===true){r.push("data-sap-ui-preserve"+"=\""+v.getId()+"\" ")}r.push(">");b(x);r.push("</"+s+">")}else if(s==="FragmentDefinition"&&x.namespaceURI==="sap.ui.core"){b(x,false,true)}else{var n=e(x);for(var i=0;i<n.length;i++){var o=n[i];if(v.getMetadata().hasAggregation("content")){v.addAggregation("content",o)}else if(v.getMetadata().hasAssociation(("content"))){v.addAssociation("content",o)}r.push(o)}}}else if(x.nodeType===3&&!I){var u=x.textContent||x.text,w=l(x.parentNode);if(u){if(w!="style"){u=q.sap.encodeHTML(u)}r.push(u)}}}function b(x,R,I){var j=x.childNodes;for(var i=0;i<j.length;i++){a(j[i],R,I)}}function f(n,s){var i;var m=sap.ui.getCore().getLoadedLibraries();q.each(m,function(j,k){if(n===k.namespace||n===k.name){i=k.name+"."+((k.tagNames&&k.tagNames[s])||s)}});i=i||n+"."+s;q.sap.require(i);var o=q.sap.getObject(i);if(o){return o}else{q.sap.log.error("Can't find object class '"+i+"' for XML-view","","XMLTemplateProcessor.js")}}function d(n){if(n.namespaceURI==="http://www.w3.org/1999/xhtml"||n.namespaceURI==="http://www.w3.org/2000/svg"){var i=n.attributes['id']?n.attributes['id'].textContent||n.attributes['id'].text:null;return[new sap.ui.core.mvc.XMLView({id:i?v._oContainingView.createId(i):undefined,xmlNode:n,containingView:v._oContainingView})]}else{return e(n)}}function e(n){if(l(n)==="ExtensionPoint"&&n.namespaceURI==="sap.ui.core"){return g(n,v)}else{return h(n)}}function g(n,v){var R=undefined;if(sap.ui.core.CustomizingConfiguration){var j=sap.ui.core.CustomizingConfiguration.getViewExtension(C,n.getAttribute("name"));if(j){if(j.className){q.sap.require(j.className);var o=q.sap.getObject(j.className);q.sap.log.info("Customizing: View extension found for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className+": "+(j.viewName||j.fragmentName));if(j.className==="sap.ui.core.Fragment"){var F=new o({type:j.type,fragmentName:j.fragmentName,containingView:v});R=(q.isArray(F)?F:[F])}else if(j.className==="sap.ui.core.mvc.View"){var v=sap.ui.view({type:j.type,viewName:j.viewName});R=[v]}else{q.sap.log.warning("Customizing: Unknown extension className configured (and ignored) in Component.js for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className)}}else{q.sap.log.warning("Customizing: no extension className configured in Component.js for extension point '"+n.getAttribute("name")+"' in View '"+C+"': "+j.className)}}else{q.sap.log.debug("Customizing: no View extension found for ExtensionPoint '"+n.getAttribute("name")+"' in View '"+C+"'.")}}if(!R){R=[];var k=n.childNodes;for(var i=0;i<k.length;i++){var m=k[i];if(m.nodeType===1){R=q.merge(R,d(m))}}}return R||[]}function h(n){var j=n.namespaceURI,o=f(j,l(n)),s={},S="",k=[],O;if(!o){return[]}var m=o.getMetadata();var J=m.getJSONKeys();for(var i=0;i<n.attributes.length;i++){var u=n.attributes[i];var N=u.name;var V=u.value;var I=J[N];if(N==="id"){s[N]=v._oContainingView.createId(V);O=V}else if(N==="class"){S+=V}else if(N==="viewName"){s[N]=V}else if(N==="fragmentName"){s[N]=V;s['containingView']=v._oContainingView}else if(N==="binding"){var B=sap.ui.base.ManagedObject.bindingParser(V,v._oContainingView.oController);s.objectBindings=s.objectBindings||{};s.objectBindings[B.model||undefined]=B}else if(N.indexOf(":")>-1){if(u.namespaceURI==="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"){var w=l(u);k.push(new sap.ui.core.CustomData({key:w,value:p("any",V,w,v._oContainingView.oController)}))}else if(N.indexOf("xmlns:")!==0){q.sap.log.warning(v+": XMLView parser encountered and ignored attribute '"+N+"' (value: '"+V+"') with unknown namespace")}}else if(I&&I._iKind===0){s[N]=p(I.type,V,N,v._oContainingView.oController)}else if(I&&I._iKind===1&&I.altTypes){s[N]=p(I.altTypes[0],V,N,v._oContainingView.oController)}else if(I&&I._iKind===2){var B=sap.ui.base.ManagedObject.bindingParser(V,v._oContainingView.oController);if(B){s[N]=B}else{q.sap.log.error(v+": aggregations with cardinality 0..n only allow binding paths as attribute value (wrong value: "+N+"='"+V+"')")}}else if(I&&I._iKind===3){s[N]=v._oContainingView.createId(V)}else if(I&&I._iKind===4){s[N]=q.map(V.split(/[\s,]+/g),function(G){return G?v._oContainingView.createId(G):null})}else if(I&&I._iKind===5){var E=v._oContainingView.oController[V];if(typeof(E)!=="function"){q.sap.log.warning(v+": event handler function \""+V+"\" is not a function or does not exist in the controller.")}if(E){E["_sapui_handlerName"]=V;s[N]=[E,v._oContainingView.oController]}}else if(N!=="xmlns"){q.sap.log.warning(v+": XMLTemplateProcessor encountered and ignored unknown attribute '"+N+"' (value: '"+V+"')")}}if(k.length>0){s.customData=k}function y(n,A,z){var G,H;for(G=n.firstChild;G;G=G.nextSibling){if(G.nodeType===1){H=G.namespaceURI===j&&z&&z[l(G)];if(H){y(G,H)}else if(A){var K=d(G);for(var i=0;i<K.length;i++){var M=K[i];var P=A._sName;if(A.multiple){if(!s[P]){s[P]=[]}if(typeof s[P].path==="string"){s[P].template=M}else{s[P].push(M)}}else{s[P]=M}}}else if(l(n)!=="FragmentDefinition"||n.namespaceURI!=="sap.ui.core"){throw new Error("Cannot add direct child without default aggregation defined for control "+m.getElementName())}}else if(G.nodeType===3){if(q.trim(G.textContent||G.text)){throw new Error("Cannot add text nodes as direct child of an aggregation. For adding text to an aggregation, a surrounding html tag is needed")}}}}var A=m.getDefaultAggregation();var z=m.getAllAggregations();y(n,A,z);if(sap.ui.core.CustomizingConfiguration&&O){var D=sap.ui.core.CustomizingConfiguration.getCustomProperties(C,O);if(D){s=q.extend(s,D);q.sap.log.info("Customizing: Control modification found for Control '"+O+"' in View '"+C+"': "+JSON.stringify(D))}else{if(document.location.search.indexOf("sap-ui-xx-debugCustomizing")>-1){q.sap.log.debug("Customizing: no Control modification found for Control '"+O+"' in View '"+C+"'.")}}}var F;if(sap.ui.core.mvc.View.prototype.isPrototypeOf(o.prototype)&&typeof o._sType==="string"){F=sap.ui.view(s,undefined,o._sType)}else{F=new o(s)}if(S&&F.addStyleClass){F.addStyleClass(S)}if(!F){F=[]}else if(!q.isArray(F)){F=[F]}return F}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.delegate.ScrollEnablement')){jQuery.sap.declare('sap.ui.core.delegate.ScrollEnablement');sap.ui.define("sap/ui/core/delegate/ScrollEnablement",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var $=q;var S=B.extend("sap.ui.core.delegate.ScrollEnablement",{constructor:function(c,s,C){B.apply(this);this._oControl=c;this._oControl.addDelegate(this);this._sContentId=s;this._bHorizontal=!!C.horizontal;this._bVertical=!!C.vertical;this._scrollX=0;this._scrollY=0;this._scroller=null;this._scrollbarClass=C.scrollbarClass||false;this._bounce=C.bounce;a(this,C);if(this._init){this._init.apply(this,arguments)}},setHorizontal:function(h){this._bHorizontal=!!h;if(this._scroller){if(this._zynga){this._scroller.options.scrollingX=this._bHorizontal}else{this._scroller.hScroll=this._scroller.hScrollbar=this._bHorizontal;this._scroller._scrollbar('h')}}else if(this._setOverflow){this._setOverflow()}},setVertical:function(v){this._bVertical=!!v;if(this._scroller){if(this._zynga){this._scroller.options.scrollingY=this._bVertical}else{this._scroller.vScroll=this._scroller.vScrollbar=this._bVertical;this._scroller._scrollbar('v')}}else if(this._setOverflow){this._setOverflow()}},getHorizontal:function(){return this._bHorizontal},getVertical:function(){return this._bVertical},setBounce:function(b){this._bounce=!!b},setPullDown:function(c){this._oPullDown=c;return this},setGrowingList:function(g,s){this._oGrowingList=g;this._fnScrollLoadCallback=q.proxy(s,g);return this},setIconTabBar:function(I,s,f){this._oIconTabBar=I;this._fnScrollEndCallback=q.proxy(s,I);this._fnScrollStartCallback=q.proxy(f,I);return this},scrollTo:function(x,y,t){this._scrollX=x;this._scrollY=y;this._scrollTo(x,y,t);return this},destroy:function(){if(this._exit){this._exit()}if(this._oControl){this._oControl.removeDelegate(this);this._oControl=undefined}},refresh:function(){if(this._refresh){this._refresh()}}});var i={getScrollTop:function(){return this._scrollY},getScrollLeft:function(){return this._scrollX},getMaxScrollTop:function(){return this._scroller?-this._scroller.maxScrollY:0},_scrollTo:function(x,y,t){this._scroller&&this._scroller.scrollTo(-x,-y,t,false)},_refresh:function(){if(this._scroller&&this._sScrollerId){var s=$.sap.domById(this._sScrollerId);if(s&&(s.offsetHeight>0)){this._bIgnoreScrollEnd=true;this._scroller.refresh();this._bIgnoreScrollEnd=false;if(-this._scrollX!=this._scroller.x||-this._scrollY!=this._scroller.y){this._scroller.scrollTo(-this._scrollX,-this._scrollY,0)}if(this._scroller.wrapper&&this._scroller.wrapper.scrollTop){this._scroller.wrapper.scrollTop=0}}}},_cleanup:function(){this._toggleResizeListeners(false);if(this._scroller){this._scroller.stop();this._scrollX=-this._scroller.x;var s=$.sap.domById(this._sScrollerId);if(s&&(s.offsetHeight>0)){this._scrollY=-this._scroller.y}this._scroller.destroy();this._scroller=null}},_toggleResizeListeners:function(t){if(this._sScrollerResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sScrollerResizeListenerId);this._sScrollerResizeListenerId=null}if(this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}if(t&&this._sContentId&&$.sap.domById(this._sContentId)){var b=$.proxy(this._refresh,this);this._sScrollerResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sScrollerId),b);this._sContentResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sContentId),b)}},onBeforeRendering:function(){this._cleanup()},onfocusin:function(e){if(S._bScrollToInput&&sap.ui.Device.os.android){var b=e.srcElement;this._sTimerId&&q.sap.clearDelayedCall(this._sTimerId);if(b&&b.nodeName&&(b.nodeName.toUpperCase()==="INPUT"||b.nodeName.toUpperCase()==="TEXTAREA")){this._sTimerId=q.sap.delayedCall(400,this,function(){var o=this._scroller._offset(b);o.top+=48;this._scroller.scrollTo(o.left,o.top)})}}},onAfterRendering:function(){var t=this,b=(this._bounce!==undefined)?this._bounce:sap.ui.Device.os.ios;var c=$.sap.byId(this._sContentId);this._sScrollerId=c.parent().attr("id");var d=(!!sap.ui.Device.os.android&&!sap.ui.Device.browser.chrome&&(sap.ui.Device.os.version==4||!sap.ui.Device.os.versionStr.indexOf("2.3.4"))&&c.find("input,textarea").length);this._iTopOffset=this._oPullDown&&this._oPullDown.getDomRef&&this._oPullDown.getDomRef().offsetHeight||0;var x=this._scrollX||0,y=this._scrollY||0;if(sap.ui.getCore().getConfiguration().getRTL()){c.attr("dir","rtl");var p=c.parent();p.attr("dir","ltr");if(!this._bScrollPosInitialized){x=this._scrollX=c.width()-p.width();this._bScrollPosInitialized=true}}this._scroller=new window.iScroll(this._sScrollerId,{useTransition:true,useTransform:!d,hideScrollbar:true,fadeScrollbar:true,bounce:!!b,momentum:true,handleClick:false,hScroll:this._bHorizontal,vScroll:this._bVertical,x:-x,y:-y,topOffset:this._iTopOffset,scrollbarClass:this._scrollbarClass,onBeforeScrollStart:function(e){if(t._isScrolling){e.stopPropagation();e.preventDefault()}},onScrollEnd:function(){if(!t._bIgnoreScrollEnd&&t._scroller){t._scrollX=-t._scroller.x;t._scrollY=-t._scroller.y}if(t._oPullDown){t._oPullDown.doScrollEnd()}if(t._oGrowingList&&t._fnScrollLoadCallback){var e=Math.floor(this.wrapperH/4);var I=-this.maxScrollY+this.y<e;if(this.dirY>0&&I){t._fnScrollLoadCallback()}}if(t._oIconTabBar&&t._fnScrollEndCallback){t._fnScrollEndCallback()}t._isScrolling=false},onRefresh:function(){if(t._oPullDown){t._oPullDown.doRefresh()}t._toggleResizeListeners(true)},onScrollMove:function(e){if(!t._isScrolling){var r=/(INPUT|TEXTAREA)/i,A=document.activeElement;if(r.test(A.tagName)&&e.target!==A){A.blur()}}t._isScrolling=true;if(t._oPullDown){t._oPullDown.doScrollMove()}if(t._oIconTabBar&&t._fnScrollStartCallback){t._fnScrollStartCallback()}}});for(var P=this._oControl;P=P.oParent;){var s=P.getScrollDelegate?P.getScrollDelegate():null;if(s&&(s.getVertical()&&this.getVertical()||s.getHorizontal()&&this.getHorizontal())){this._scroller._sapui_isNested=true;break}}this._scroller._move=function(e){if(e._sapui_handledByControl&&!e._sapui_scroll){return}if(this._sapui_isNested){e._sapui_handledByControl=!(this.dirY<0&&this.y>=0)&&!(this.dirY>0&&this.y<=this.maxScrollY)&&!(this.dirX<0&&this.x>=0)&&!(this.dirX>0&&this.x<=this.maxScrollX)}window.iScroll.prototype._move.call(this,e)};var o=c.parent()[0];if(o&&(o.offsetHeight>0)){if(this._scrollX!=-this._scroller.x||this._scrollY!=-this._scroller.y){this._scroller.scrollTo(-this._scrollX,-this._scrollY,0)}}this._toggleResizeListeners(true)},ontouchmove:function(e){if(this._preventTouchMoveDefault){e.preventDefault()}}};var z={_refresh:function(){if(this._scroller&&this._sContentId&&$.sap.domById(this._sContentId)){var c=$.sap.byId(this._sContentId);var C=c.parent();this._scroller.setDimensions(C.width(),C.height(),c.width(),c.height())}},_cleanup:function(){if(this._sScrollerResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sScrollerResizeListenerId);this._sScrollerResizeListenerId=null}if(this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}if(this._scroller){var v=this._scroller.getValues();this._scrollX=v.left;this._scrollY=v.top}},_scrollTo:function(x,y,t){if(this._scroller){if(!isNaN(t)){this._scroller.options.animationDuration=t}this._scroller.scrollTo(x,y,!!t)}},onBeforeRendering:function(){this._cleanup()},onAfterRendering:function(){this._refresh();this._scroller.scrollTo(this._scrollX,this._scrollY,false);this._sContentResizeListenerId=sap.ui.core.ResizeHandler.register($.sap.domById(this._sContentId),$.proxy(function(){if((!this._sContentId||!$.sap.domById(this._sContentId))&&this._sContentResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sContentResizeListenerId);this._sContentResizeListenerId=null}else{this._refresh()}},this))},ontouchstart:function(e){if(e.target.tagName.match(/input|textarea|select/i)){return}this._scroller.doTouchStart(e.touches,e.timeStamp)},ontouchend:function(e){this._scroller.doTouchEnd(e.timeStamp)},ontouchmove:function(e){this._scroller.doTouchMove(e.touches,e.timeStamp);if(this._preventTouchMoveDefault){e.preventDefault()}else{e.stopPropagation()}}};var n={getScrollTop:function(){return this._scrollY||0},getScrollLeft:function(){return this._scrollX||0},getMaxScrollTop:function(){return(this._$Container&&this._$Container.length)?this._$Container[0].scrollHeight-this._$Container.height():-1},_setOverflow:function(){var c=this._$Container;if(!c||!c[0])return;c.css("z-index","0");if(sap.ui.Device.os.ios){c.css("overflow-x",this._bHorizontal?"scroll":"hidden").css("overflow-y",this._bVertical?"scroll":"hidden").css("-webkit-overflow-scrolling","touch")}else{c.css("overflow-x",this._bHorizontal&&!this._bDragScroll?"auto":"hidden").css("overflow-y",this._bVertical&&!this._bDragScroll?"auto":"hidden")}},_refresh:function(){var c=this._$Container;if(!c||!c.height())return;var C=$.sap.byId(this._sContentId);if(this._oPullDown&&this._oPullDown._bTouchMode){var d=this._oPullDown.getDomRef();if(d){d.style.marginTop=this._oPullDown._iState==2?"":"-"+d.offsetHeight+"px"}}if(c.scrollTop()!=this._scrollY){c.scrollTop(this._scrollY)}if(!(this._oPullDown&&this._oPullDown._bTouchMode)&&!this._fnScrollLoadCallback&&!!!sap.ui.Device.browser.internet_explorer){sap.ui.core.ResizeHandler.deregister(this._sResizeListenerId);this._sResizeListenerId=null}},_onScroll:function(e){var c=this._$Container;if(this._oIOSScroll&&this._oIOSScroll.bMomentum){var y=Math.abs(this._scrollY-c.scrollTop());if(y>0&&y<10||e.timeStamp-this._oIOSScroll.iTimeStamp>120){q.sap.log.debug("IOS Momentum Scrolling is OFF");this._oIOSScroll.bMomentum=false}}this._scrollX=c.scrollLeft();this._scrollY=c.scrollTop();if(this._fnScrollLoadCallback&&c[0].scrollHeight-c.scrollTop()-c.height()<100){this._fnScrollLoadCallback()}if(this._oIconTabBar&&this._fnScrollEndCallback){this._fnScrollEndCallback()}},_onStart:function(e){var c=this._$Container[0];if(!c)return;this._bDoDrag=this._bDragScroll;if(!this._scrollable){this._scrollable={}}this._scrollable.vertical=this._bVertical&&c.scrollHeight>c.clientHeight;this._scrollable.horizontal=this._bHorizontal&&c.scrollWidth>c.clientWidth;if(this._oIOSScroll&&this._oIOSScroll.bMomentum){q.sap.log.debug("IOS Momentum Scrolling: prevent tap event");e.stopPropagation();this._oIOSScroll.bMomentum=false}var p=e.touches?e.touches[0]:e;this._iX=p.pageX;this._iY=p.pageY;if(this._oIOSScroll){if(!this._scrollable.vertical){this._oIOSScroll.iTopDown=0}else if(c.scrollTop===0){this._oIOSScroll.iTopDown=1}else if(c.scrollTop===c.scrollHeight-c.clientHeight){this._oIOSScroll.iTopDown=-1}else{this._oIOSScroll.iTopDown=0}}this._bPullDown=false;this._iDirection=""},_onTouchMove:function(e){var c=this._$Container[0];var p=e.touches[0];var d=p.pageX-this._iX;var b=p.pageY-this._iY;if(this._iDirection==""){if(d!=0||b!=0){this._iDirection=Math.abs(b)>Math.abs(d)?"v":"h"}if(this._oPullDown&&this._oPullDown._bTouchMode&&this._iDirection=="v"&&c.scrollTop<=1){if(b>Math.abs(d)){this._bPullDown=true}}}if(this._oIOSScroll&&this._oIOSScroll.iTopDown&&b!=0){if(b*this._oIOSScroll.iTopDown>0){this._bDoDrag=true}}if(this._bPullDown===true){var f=this._oPullDown.getDomRef();var t=e.touches[0].pageY-this._iY-f.offsetHeight;if(t>20)t=20;f.style.marginTop=t+"px";this._oPullDown.doPull(t);e.preventDefault();this._bDoDrag=false}if(this._bDoDrag){c.scrollLeft=c.scrollLeft+this._iX-p.pageX;c.scrollTop=c.scrollTop+this._iY-p.pageY;this._iX=p.pageX;this._iY=p.pageY;e.setMarked();e.preventDefault();return}if(this._oIOSScroll&&!this._bDoDrag&&this._iDirection=="v"&&Math.abs(e.touches[0].pageY-this._iY)>=10){this._oIOSScroll.bMomentum=true;this._oIOSScroll.iTimeStamp=e.timeStamp}if(!this._oIOSScroll||this._scrollable.vertical||this._scrollable.horizontal&&this._iDirection=="h"){e.setMarked()}if(window.iScroll){e.setMarked("scroll")}},_onEnd:function(e){if(this._oIOSScroll&&this._oIOSScroll.bMomentum){this._oIOSScroll.iTimeStamp=e.timeStamp}if(this._oPullDown&&this._oPullDown._bTouchMode){this._oPullDown.doScrollEnd();this._refresh()}if(this._bDragScroll&&this._iDirection){e.setMarked()}},_onMouseDown:function(e){if(e.button==0){this._bScrolling=true;this._onStart(e)}},_onMouseMove:function(E){if(this._bScrolling){var e=E.originalEvent;var b=e.buttons||e.which;if(b==1){var c=this._$Container[0];c.scrollLeft=c.scrollLeft+this._iX-E.pageX;c.scrollTop=c.scrollTop+this._iY-E.pageY;this._iX=E.pageX;this._iY=E.pageY}}},_onMouseUp:function(e){this._bScrolling=false;this._onEnd()},onBeforeRendering:function(){if(this._sResizeListenerId){sap.ui.core.ResizeHandler.deregister(this._sResizeListenerId);this._sResizeListenerId=null}var c=this._$Container;if(c){if(c.height()>0){this._scrollX=c.scrollLeft();this._scrollY=c.scrollTop()}c.off()}},onAfterRendering:function(){var c=this._$Container=$.sap.byId(this._sContentId).parent();var _=q.proxy(this._refresh,this);this._setOverflow();this._scrollTo(this._scrollX,this._scrollY);this._refresh();if(!c.is(":visible")||!!sap.ui.Device.browser.internet_explorer||this._oPullDown||this._fnScrollLoadCallback){this._sResizeListenerId=sap.ui.core.ResizeHandler.register(c[0],_)}c.scroll(q.proxy(this._onScroll,this));if(sap.ui.Device.support.touch){c.on("touchcancel touchend",q.proxy(this._onEnd,this)).on("touchstart",q.proxy(this._onStart,this)).on("touchmove",q.proxy(this._onTouchMove,this))}else if(this._bDragScroll){c.on("mouseup mouseleave",q.proxy(this._onMouseUp,this)).mousedown(q.proxy(this._onMouseDown,this)).mousemove(q.proxy(this._onMouseMove,this))}},_readActualScrollPosition:function(){if(this._$Container.width()>0){this._scrollX=this._$Container.scrollLeft()}if(this._$Container.height()>0){this._scrollY=this._$Container.scrollTop()}},_scrollTo:function(x,y,t){if(this._$Container.length>0){if(t>0){this._$Container.animate({scrollTop:y,scrollLeft:x},t,q.proxy(this._readActualScrollPosition,this))}else{this._$Container.scrollTop(y);this._$Container.scrollLeft(x);this._readActualScrollPosition()}}}};function a(s,c){var d;if(!sap.ui.Device.support.touch&&!$.sap.simulateMobileOnDesktop&&!c.nonTouchScrolling){return}if(sap.ui.Device.support.touch||$.sap.simulateMobileOnDesktop){$.sap.require("jquery.sap.mobile")}d={_init:function(C,b,c){function e(f,h,v){var o=new window.Scroller(function(j,t,k){var m=$.sap.byId(f).parent();m.scrollLeft(j);m.scrollTop(t)},{scrollingX:h,scrollingY:v,bouncing:false});return o}function g(){if(c.zynga){return"z"}if(sap.ui.Device.os.android&&sap.ui.Device.os.version<4.1||sap.ui.Device.os.blackberry||sap.ui.Device.os.ios&&sap.ui.Device.os.version<6){return"i"}if(!sap.ui.Device.support.touch&&$.sap.simulateMobileOnDesktop){return"i"}if(c.iscroll=="force"||(sap.ui.Device.support.touch&&(c.iscroll||sap.ui.getCore().getConfiguration().getNoNativeScroll()))){return"i"}return"n"}var l=g();this._preventTouchMoveDefault=!!c.preventDefault;this._scroller=null;switch(l){case"z":$.sap.require("sap.ui.thirdparty.zyngascroll");$.extend(this,z);this._zynga=true;this._scroller=e(this._sContentId,this._bHorizontal,this._bVertical);break;case"i":$.sap.require("sap.ui.thirdparty.iscroll");$.extend(this,i);this._bIScroll=true;break;default:if($.mobile&&$.event.special.swipe&&$.event.special.swipe.scrollSupressionThreshold<120){$.event.special.swipe.scrollSupressionThreshold=120}$.extend(this,n);if(c.nonTouchScrolling===true){this._bDragScroll=true}if(sap.ui.getCore().getConfiguration().getRTL()){this._scrollX=9999}if(sap.ui.Device.os.ios){this._oIOSScroll={iTimeStamp:0,bMomentum:false}}break}},_exit:function(){if(this._cleanup){this._cleanup()}this._scroller=null}};$.extend(s,d)}return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.ViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.ViewRenderer');sap.ui.define("sap/ui/core/mvc/ViewRenderer",['jquery.sap.global'],function(q){"use strict";var V={};V.addDisplayClass=function(r,c){if(c.getDisplayBlock()||(c.getWidth()==="100%"&&c.getHeight()==="100%")){r.addClass("sapUiViewDisplayBlock")}};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.XMLViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.XMLViewRenderer');sap.ui.define("sap/ui/core/mvc/XMLViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var X={};X.render=function(r,c){var $=c._$oldContent=sap.ui.core.RenderManager.findPreservedContent(c.getId());if($.length===0){var s=c.isSubView();if(!s){r.write("<div");r.writeControlData(c);r.addClass("sapUiView");r.addClass("sapUiXMLView");V.addDisplayClass(r,c);r.writeAttribute("data-sap-ui-preserve",c.getId());if(c.getWidth()){r.addStyle("width",c.getWidth())}if(c.getHeight()){r.addStyle("height",c.getHeight())}r.writeStyles();r.writeClasses();r.write(">")}for(var i=0;i<c._aParsedContent.length;i++){var f=c._aParsedContent[i];if(f&&typeof(f)==="string"){r.write(f)}else{r.renderControl(f);if(!f.bOutput){r.write('<div id="sap-ui-dummy-'+f.getId()+'" class="sapUiHidden"/>')}}}if(!s){r.write("</div>")}}else{r.renderControl(c.oAfterRenderingNotifier);r.write('<div id="sap-ui-dummy-'+c.getId()+'" class="sapUiHidden">');for(var i=0;i<c._aParsedContent.length;i++){var f=c._aParsedContent[i];if(typeof(f)!=="string"){q.sap.byId(f.getId(),$).replaceWith('<div id="sap-ui-dummy-'+f.getId()+'" class="sapUiHidden"/>');r.renderControl(f)}}r.write('</div>')}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMElementRenderer')){jQuery.sap.declare('sap.ui.core.tmpl.DOMElementRenderer');sap.ui.define("sap/ui/core/tmpl/DOMElementRenderer",['jquery.sap.global'],function(q){"use strict";var D={};D.render=function(r,e){r.write("<");r.write(e.getTag());r.writeControlData(e);q.each(e.getAttributes(),function(i,a){var n=a.getName().toLowerCase();if(n==="class"){var c=a.getValue().split(" ");q.each(c,function(i,C){var C=C.trim();if(C){r.addClass(C)}})}else if(n==="style"){var s=a.getValue().split(";");q.each(s,function(i,S){var i=S.indexOf(":");if(i!=-1){var k=S.substring(0,i).trim();var v=S.substring(i+1).trim();r.addStyle(k,v)}})}else{r.writeAttributeEscaped(a.getName(),a.getValue())}});r.writeClasses();r.writeStyles();var E=e.getElements(),h=!!e.getText()||E.length>0;if(!h){r.write("/>")}else{r.write(">");if(e.getText()){r.writeEscaped(e.getText())}q.each(E,function(i,c){r.renderControl(c)});r.write("</");r.write(e.getTag());r.write(">")}};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.TemplateControlRenderer')){jQuery.sap.declare('sap.ui.core.tmpl.TemplateControlRenderer');sap.ui.define("sap/ui/core/tmpl/TemplateControlRenderer",['jquery.sap.global'],function(q){"use strict";var T={};T.render=function(r,c){var s=c.isInline()||this.hasControlData;if(!s){r.write("<div");r.writeControlData(c);r.writeStyles();r.writeClasses();r.write(">")}var R=this.renderTemplate||c.getTemplateRenderer();if(R){R.apply(this,arguments)}if(!s){r.write("</div>")}};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.File')){jQuery.sap.declare('sap.ui.core.util.File');sap.ui.define("sap/ui/core/util/File",['jquery.sap.global','sap/ui/Device'],function(q,D){'use strict';var F={save:function(d,f,s,m,c){var a=f+'.'+s;if(c==='utf-8'&&s==='csv'){d='\ufeff'+d}if(window.Blob){var t='data:'+m;if(c){t+=';charset='+c}var b=new window.Blob([d],{type:t});if(window.navigator.msSaveOrOpenBlob){window.navigator.msSaveOrOpenBlob(b,a)}else{var u=window.URL||window.webkitURL;var B=u.createObjectURL(b);var l=window.document.createElement('a');if('download'in l){var $=q(document.body);var e=q(l).attr({download:a,href:B,style:'display:none'});$.append(e);e.get(0).click();e.remove()}else{if(d&&c==='utf-8'&&s==='csv'){d=d.substr(1)}window.open(t+";base64,"+window.btoa(d))}}}else if(D.browser.internet_explorer&&D.browser.version<=9){var $=q(document.body);var g=q('<iframe/>',{style:'display:none'});$.append(g);var o=g.get(0).contentWindow.document;o.open(m,'replace');if(c){o.charset=c}o.write(d);o.close();var T=new Date();var S=o.execCommand('SaveAs',false,a);if(!S&&new Date()-T<10){o.execCommand('SaveAs',false,a+'.txt')}g.remove()}}};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.LibraryInfo')){jQuery.sap.declare('sap.ui.core.util.LibraryInfo');sap.ui.define("sap/ui/core/util/LibraryInfo",['jquery.sap.global','sap/ui/base/Object','jquery.sap.script'],function(q,B){"use strict";var L=B.extend("sap.ui.core.util.LibraryInfo",{constructor:function(){B.apply(this);this._oLibInfos={}},destroy:function(){B.prototype.destroy.apply(this,arguments);this._oLibInfos={}},getInterface:function(){return this}});L.prototype._loadLibraryMetadata=function(l,c){l=l.replace(/\//g,".");if(this._oLibInfos[l]){q.sap.delayedCall(0,window,c,[this._oLibInfos[l]]);return}var u=q.sap.getModulePath(l,'/'),t=this;q.ajax({url:u+".library",dataType:"xml",error:function(x,s,e){q.sap.log.error("failed to load library details from '"+u+".library': "+s+", "+e);t._oLibInfos[l]={name:l,data:null,url:u};c(t._oLibInfos[l])},success:function(d,s,x){t._oLibInfos[l]={name:l,data:d,url:u};c(t._oLibInfos[l])}})};L.prototype._getLibraryInfo=function(l,c){this._loadLibraryMetadata(l,function(d){var r={libs:[],library:d.name,libraryUrl:d.url};if(d.data){var $=q(d.data);r.vendor=$.find("vendor").text();r.copyright=$.find("copyright").text();r.version=$.find("version").text();r.documentation=$.find("documentation").text()}c(r)})};L.prototype._getThirdPartyInfo=function(l,c){this._loadLibraryMetadata(l,function(d){var r={libs:[],library:d.name,libraryUrl:d.url};if(d.data){var $=q(d.data).find("appData").find("thirdparty").children();$.each(function(i,o){if(o.nodeName==="lib"){var a=q(o);var b=a.children("license");r.libs.push({displayName:a.attr("displayName"),homepage:a.attr("homepage"),version:a.attr("version"),license:{url:b.attr("url"),type:b.attr("type"),file:d.url+b.attr("file")}})}})}c(r)})};L.prototype._getDocuIndex=function(l,c){this._loadLibraryMetadata(l,function(d){var a=d.name,b=d.url,r={"docu":{},library:a,libraryUrl:b};if(!d.data){c(r);return}var D=q(d.data).find("appData").find("documentation");var u=D.attr("indexUrl");if(!u){c(r);return}if(D.attr("resolve")=="lib"){u=d.url+u}q.ajax({url:u,dataType:"json",error:function(x,s,e){q.sap.log.error("failed to load library docu from '"+u+"': "+s+", "+e);c(r)},success:function(d,s,x){d.library=a;d.libraryUrl=b;c(d)}})})};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.ReadyState')){jQuery.sap.declare('sap.ui.core.ws.ReadyState');sap.ui.define("sap/ui/core/ws/ReadyState",['jquery.sap.global'],function(q){"use strict";var R={CONNECTING:0,OPEN:1,CLOSING:2,CLOSED:3};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.model.BindingMode')){jQuery.sap.declare('sap.ui.model.BindingMode');sap.ui.define("sap/ui/model/BindingMode",['jquery.sap.global'],function(q){"use strict";var B={Default:"Default",OneTime:"OneTime",OneWay:"OneWay",TwoWay:"TwoWay"};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ChangeReason')){jQuery.sap.declare('sap.ui.model.ChangeReason');sap.ui.define("sap/ui/model/ChangeReason",['jquery.sap.global'],function(q){"use strict";var C={Sort:"sort",Filter:"filter",Change:"change",Context:"context",Refresh:"refresh"};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FilterOperator')){jQuery.sap.declare('sap.ui.model.FilterOperator');sap.ui.define("sap/ui/model/FilterOperator",['jquery.sap.global'],function(q){"use strict";var F={EQ:"EQ",NE:"NE",LT:"LT",LE:"LE",GT:"GT",GE:"GE",BT:"BT",Contains:"Contains",StartsWith:"StartsWith",EndsWith:"EndsWith"};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FilterType')){jQuery.sap.declare('sap.ui.model.FilterType');sap.ui.define("sap/ui/model/FilterType",['jquery.sap.global'],function(q){"use strict";var F={Application:"Application",Control:"Control"};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.FormatException')){jQuery.sap.declare('sap.ui.model.FormatException');sap.ui.define("sap/ui/model/FormatException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var F=function(m){this.name="FormatException";this.message=m};F.prototype=q.sap.newObject(E.prototype);return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ParseException')){jQuery.sap.declare('sap.ui.model.ParseException');sap.ui.define("sap/ui/model/ParseException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var P=function(m){this.name="ParseException";this.message=m};P.prototype=q.sap.newObject(E.prototype);return P},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Sorter')){jQuery.sap.declare('sap.ui.model.Sorter');sap.ui.define("sap/ui/model/Sorter",['jquery.sap.global'],function(q){"use strict";var S=sap.ui.base.Object.extend("sap.ui.model.Sorter",{constructor:function(p,d,g){if(typeof p==="object"){var s=p;p=s.path;d=s.descending;g=s.group}this.sPath=p;var i=this.sPath.indexOf(">");if(i>0){this.sPath=this.sPath.substr(i+1)}this.bDescending=d;this.vGroup=g;if(typeof g=="boolean"&&g){this.fnGroup=function(c){return c.getProperty(this.sPath)}}if(typeof g=="function"){this.fnGroup=g}}});return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Type')){jQuery.sap.declare('sap.ui.model.Type');sap.ui.define("sap/ui/model/Type",['jquery.sap.global','sap/ui/base/Object'],function(q,B){"use strict";var T=B.extend("sap.ui.model.Type",{constructor:function(){B.apply(this,arguments);this.sName="Type"},metadata:{"abstract":true,publicMethods:["getName"]}});T.prototype.getName=function(){return this.sName};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ValidateException')){jQuery.sap.declare('sap.ui.model.ValidateException');sap.ui.define("sap/ui/model/ValidateException",['jquery.sap.global','sap/ui/base/Exception'],function(q,E){"use strict";var V=function(m,v){this.name="ValidateException";this.message=m;this.violatedConstraints=v};V.prototype=q.sap.newObject(E.prototype);return V},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.odata4analytics')){jQuery.sap.declare('sap.ui.model.analytics.odata4analytics');sap.ui.define("sap/ui/model/analytics/odata4analytics",['jquery.sap.global'],function(q){"use strict";var o=o||{};o.constants={};o.constants["SAP_NAMESPACE"]="http://www.sap.com/Protocols/SAPData";o.constants["VERSION"]="0.7";o.helper={tokenizeNametoLabelText:function(n){var l="";l=n.replace(/^P_(.*)/,"$1");l=l.replace(/([^A-Z0-9_]+)([A-Z0-9_])/g,"$1 $2");l=l.replace(/([A-Z0-9_]{2,})([A-Z0-9_])([^A-Z0-9_]+)/g,"$1 $2$3");l=l.replace(/(.*) _E$/,"$1");l=l.replace(/(.*) _(.*)/g,"$1 $2");return l}};o.Model=function(m,p){this._init(m,p)};o.Model.ReferenceByURI=function(u){return{sServiceURI:u}};o.Model.ReferenceByModel=function(m){return{oModel:m}};o.Model.ReferenceWithWorkaround=function(m,w){return{oModelReference:m,aWorkaroundID:w}};o.Model.prototype={_init:function(m,p){if(typeof p=="string"){throw"Deprecated second argument: Adjust your invocation by passing an object with a property sAnnotationJSONDoc as a second argument instead"}this._mParameter=p;this._oActivatedWorkarounds=new Object();if(m&&m.aWorkaroundID){for(var i=-1,I;I=m.aWorkaroundID[++i];){this._oActivatedWorkarounds[I]=true}m=m.oModelReference}if(!m||(!m.sServiceURI&&!m.oModel)){throw"Usage with oModelReference being an instance of Model.ReferenceByURI or Model.ReferenceByModel"}if(m.oModel)this._oModel=m.oModel;else this._oModel=new sap.ui.model.odata.ODataModel(m.sServiceURI);if(this._oModel.getServiceMetadata().dataServices==undefined){throw"Model could not be loaded"}if(p&&p.sAnnotationJSONDoc)this.mergeV2Annotations(p.sAnnotationJSONDoc);this._oQueryResultSet=new Object();this._oParameterizationSet=new Object();this._oEntityTypeSet=new Object();this._oEntitySetSet=new Object();this._oEntityTypeNameToEntitySetMap=new Object();var s=this._oModel.getServiceMetadata().dataServices.schema[0];for(var i=-1,c;c=s.entityContainer[++i];){if(c.isDefaultEntityContainer=="true"){this._oDefaultEntityContainer=c;break}}var e=s.entityType;var Q=[],P=[],u=[];for(var i=-1,t;t=e[++i];){var b=false;if(t.extensions!=undefined){for(var j=-1,E;E=t.extensions[++j];){if(E.namespace==o.constants.SAP_NAMESPACE&&E.name=="semantics"){b=true;switch(E.value){case"aggregate":Q.push(t);break;case"parameters":P.push(t);break;default:u.push(t)}}if(b)continue}if(!b)u.push(t)}else u.push(t)}for(var i=-1,t;t=u[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var d=this._getEntitySetsOfType(s,a.getQName());if(d.length==0)throw"Invalid consumption model: No entity set for entity type "+a.getQName()+" found";if(d.length>1)throw"Unsupported consumption model: More than one entity set for entity type "+a.getQName()+" found";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f}var g={};for(var i=-1,t;t=P[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var d=this._getEntitySetsOfType(s,a.getQName());if(d.length==0)throw"Invalid consumption model: No entity set for parameter entity type "+a.getQName()+" found";if(d.length>1)throw"Unsupported consumption model: More than one entity set for parameter entity type "+a.getQName()+" found";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f;var h=new o.Parameterization(a,f);this._oParameterizationSet[h.getName()]=h;g[a.getQName()]=h;var k=a.getQName();if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){if(A.referentialConstraint==undefined)continue;var l=null;if(A.end[0].type==k&&A.end[0].multiplicity=="*"&&A.end[1].multiplicity=="1"){l=A.end[1].type}else if(A.end[1].type==k&&A.end[1].multiplicity=="*"&&A.end[0].multiplicity=="1"){l=A.end[0].type}if(!l)continue;if(A.referentialConstraint.dependent.propertyRef.length!=1)continue;var n=h.findParameterByName(A.referentialConstraint.dependent.propertyRef[0].name);if(n==null)continue;var v=this._oEntityTypeSet[l];var V=this._oEntityTypeNameToEntitySetMap[l];n.setValueSetEntity(v,V)}}}for(var i=-1,t;t=Q[++i];){var a=new o.EntityType(this._oModel.getServiceMetadata(),s,t);this._oEntityTypeSet[a.getQName()]=a;var r=a.getQName();var h=null;var w=null;if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){var x=null;if(A.end[0].type==r)x=A.end[1].type;else if(A.end[1].type==r)x=A.end[0].type;else continue;var M=null;M=g[x];if(M!=null)if(h!=null){throw"LIMITATION: Unable to handle multiple parameter entity types of query entity "+a.name}else{h=M;w=A}}}var d=this._getEntitySetsOfType(s,a.getQName());if(d.length!=1)throw"Invalid consumption model: There must be exactly one entity set for an entity type annotated with aggregating semantics";var f=new o.EntitySet(this._oModel.getServiceMetadata(),s,d[0][0],d[0][1],a);this._oEntitySetSet[f.getQName()]=f;this._oEntityTypeNameToEntitySetMap[a.getQName()]=f;var y=new o.QueryResult(this,a,f,h);this._oQueryResultSet[y.getName()]=y;if(h)h.setTargetQueryResult(y,w);if(s.association!=undefined){for(var j=-1,A;A=s.association[++j];){if(A.referentialConstraint==undefined)continue;var D=null;if(A.end[0].type==r&&A.end[0].multiplicity=="*"&&A.end[1].multiplicity=="1"){D=A.end[1].type}else if(A.end[1].type==r&&A.end[1].multiplicity=="*"&&A.end[0].multiplicity=="1"){D=A.end[0].type}if(!D)continue;if(A.referentialConstraint.dependent.propertyRef.length!=1)continue;var z=y.findDimensionByName(A.referentialConstraint.dependent.propertyRef[0].name);if(z==null)continue;var B=this._oEntityTypeNameToEntitySetMap[D];z.setMembersEntitySet(B)}}}},oUI5ODataModelAnnotatableObject:{objectName:"schema",keyPropName:"namespace",extensions:true,aSubObject:[{objectName:"entityType",keyPropName:"name",extensions:true,aSubObject:[{objectName:"property",keyPropName:"name",aSubObject:[],extensions:true}]},{objectName:"entityContainer",keyPropName:"name",extensions:false,aSubObject:[{objectName:"entitySet",keyPropName:"name",extensions:true,aSubObject:[]}]}]},mergeV2Annotations:function(a){var A=null;try{A=JSON.parse(a)}catch(e){return}var m;try{m=this._oModel.getServiceMetadata().dataServices}catch(e){return}for(var p in A){if(!(this.oUI5ODataModelAnnotatableObject.objectName==p))continue;if(!(A[p]instanceof Array)){continue}this.mergeV2AnnotationLevel(m[this.oUI5ODataModelAnnotatableObject.objectName],A[this.oUI5ODataModelAnnotatableObject.objectName],this.oUI5ODataModelAnnotatableObject);break}return},mergeV2AnnotationLevel:function(M,a,u){for(var i=-1,A;A=a[++i];){for(var j=-1,b;b=M[++j];){if(!(A[u.keyPropName]==b[u.keyPropName]))continue;if(A["extensions"]!=undefined){if(b["extensions"]==undefined)b["extensions"]=new Array();for(var l=-1,c;c=A["extensions"][++l];){var f=false;for(var m=-1,d;d=b["extensions"][++m];){if(c.name==d.name&&c.namespace==d.namespace){d.value=c.value;f=true;break}}if(!f)b["extensions"].push(c)}}for(var k=-1,U;U=u.aSubObject[++k];){for(var p in A){if(!(U.objectName==p))continue;if(!(A[U.objectName]instanceof Array))continue;if((b[U.objectName]==undefined)||(!(b[U.objectName]instanceof Array)))continue;this.mergeV2AnnotationLevel(b[U.objectName],A[U.objectName],U);break}}}}return},findQueryResultByName:function(n){var Q=this._oQueryResultSet[n];if(!Q&&this._oDefaultEntityContainer){var s=this._oDefaultEntityContainer.name+"."+n;Q=this._oQueryResultSet[s]}return Q},getAllQueryResultNames:function(){if(this._aQueryResultNames)return this._aQueryResultNames;this._aQueryResultNames=new Array(0);for(var n in this._oQueryResultSet)this._aQueryResultNames.push(this._oQueryResultSet[n].getName());return this._aQueryResultNames},getAllQueryResults:function(){return this._oQueryResultSet},getODataModel:function(){return this._oModel},_getEntitySetsOfType:function(s,Q){var e=[];for(var i=-1,E;E=s.entityContainer[++i];){for(var j=-1,a;a=E.entitySet[++j];){if(a.entityType==Q)e.push([E,a])}}return e},_mParameter:null,_oModel:null,_oDefaultEntityContainer:null,_aQueryResultNames:null,_oQueryResultSet:null,_oParameterizationSet:null,_oEntityTypeSet:null,_oEntitySetSet:null,_oEntityTypeNameToEntitySetMap:null,_oActivatedWorkarounds:null};o.QueryResult=function(m,e,E,p){this._init(m,e,E,p)};o.QueryResult.prototype={_init:function(m,e,E,p,a){this._oModel=m;this._oEntityType=e;this._oEntitySet=E;this._oParameterization=p;this._oDimensionSet=new Object();this._oMeasureSet=new Object();var P=e.getTypeDescription().property;var A={};for(var i=-1,b;b=P[++i];){if(b.extensions==undefined)continue;for(var j=-1,c;c=b.extensions[++j];){if(!c.namespace==o.constants.SAP_NAMESPACE)continue;switch(c.name){case"aggregation-role":switch(c.value){case"dimension":var d=new o.Dimension(this,b);this._oDimensionSet[d.getName()]=d;break;case"measure":var M=new o.Measure(this,b);this._oMeasureSet[M.getName()]=M;break;case"totaled-properties-list":this._oTotaledPropertyListProperty=b;break}break;case"attribute-for":var D=new o.DimensionAttribute(this,b);A[D.getKeyProperty()]=D;break}}}for(var s in A){var D=A[s];D.getDimension().addAttribute(D)}if(m._oActivatedWorkarounds.IdentifyTextPropertiesByName){var f=new Array();for(var g in this._oDimensionSet){var d=this._oDimensionSet[g];if(!d.getTextProperty()){var t=null;t=e.findPropertyByName(g+"Name");if(!t)t=e.findPropertyByName(g+"Text");if(!t)t=e.findPropertyByName(g+"Desc");if(!t)t=e.findPropertyByName(g+"Description");if(t){d.setTextProperty(t);f.push(t.name)}}}for(var i=-1,h;h=f[++i];){delete this._oDimensionSet[h]}}},getName:function(){return this.getEntitySet().getQName()},getParameterization:function(){return this._oParameterization},getAllDimensionNames:function(){if(this._aDimensionNames)return this._aDimensionNames;this._aDimensionNames=[];for(var n in this._oDimensionSet)this._aDimensionNames.push(this._oDimensionSet[n].getName());return this._aDimensionNames},getAllDimensions:function(){return this._oDimensionSet},getAllMeasureNames:function(){if(this._aMeasureNames)return this._aMeasureNames;this._aMeasureNames=[];for(var n in this._oMeasureSet)this._aMeasureNames.push(this._oMeasureSet[n].getName());return this._aMeasureNames},getAllMeasures:function(){return this._oMeasureSet},findDimensionByName:function(n){return this._oDimensionSet[n]},findDimensionByPropertyName:function(n){if(this._oDimensionSet[n])return this._oDimensionSet[n];for(var d in this._oDimensionSet){var D=this._oDimensionSet[d];var t=D.getTextProperty();if(t&&t.name==n)return D;if(D.findAttributeByName(n))return D}return null},getTotaledPropertiesListProperty:function(){return this._oTotaledPropertyListProperty},findMeasureByName:function(n){return this._oMeasureSet[n]},findMeasureByPropertyName:function(n){if(this._oMeasureSet[n])return this._oMeasureSet[n];for(var m in this._oMeasureSet){var M=this._oMeasureSet[m];var f=M.getFormattedValueProperty();if(f&&f.name==n)return M}return null},getModel:function(){return this._oModel},getEntityType:function(){return this._oEntityType},getEntitySet:function(){return this._oEntitySet},_oModel:null,_oEntityType:null,_oEntitySet:null,_oParameterization:null,_aDimensionNames:null,_oDimensionSet:null,_aMeasureNames:null,_oMeasureSet:null,_oTotaledPropertyListProperty:null};o.Parameterization=function(e,E){this._init(e,E)};o.Parameterization.prototype={_init:function(e,E){this._oEntityType=e;this._oEntitySet=E;this._oParameterSet=new Object();var p=e.getTypeDescription().property;for(var i=-1,P;P=p[++i];){if(P.extensions==undefined)continue;for(var j=-1,a;a=P.extensions[++j];){if(!a.namespace==o.constants.SAP_NAMESPACE)continue;switch(a.name){case"parameter":var b=new o.Parameter(this,P);this._oParameterSet[b.getName()]=b;break}}}},setTargetQueryResult:function(Q,a){this._oQueryResult=Q;var s=this._oEntityType.getSchema().namespace+"."+a.name;var n=this._oEntityType.getTypeDescription().navigationProperty;if(!n)throw"Invalid consumption model: Parameters entity type lacks navigation property for association to query result entity type";for(var i=-1,N;N=n[++i];){if(N.relationship==s)this._oNavPropToQueryResult=N.name}if(!this._oNavPropToQueryResult)throw"Invalid consumption model: Parameters entity type lacks navigation property for association to query result entity type"},getTargetQueryResult:function(){if(!this._oQueryResult)throw"No target query result set";return this._oQueryResult},getName:function(){return this.getEntitySet().getQName()},getAllParameterNames:function(){if(this._aParameterNames)return this._aParameterNames;this._aParameterNames=[];for(var n in this._oParameterSet)this._aParameterNames.push(this._oParameterSet[n].getName());return this._aParameterNames},getAllParameters:function(){return this._oParameterSet},findParameterByName:function(n){return this._oParameterSet[n]},getNavigationPropertyToQueryResult:function(){return this._oNavPropToQueryResult},getEntityType:function(){return this._oEntityType},getEntitySet:function(){return this._oEntitySet},_oEntityType:null,_oEntitySet:null,_oQueryResult:null,_oNavPropToQueryResult:null,_aParameterNames:null,_oParameterSet:null};o.Parameter=function(p,P){this._init(p,P)};o.Parameter.prototype={_init:function(p,P){this._oParameterization=p;this._oProperty=P;var e=p.getEntityType();if(P.extensions!=undefined){for(var i=-1,E;E=P.extensions[++i];){if(!E.namespace==o.constants.SAP_NAMESPACE)continue;switch(E.name){case"parameter":switch(E.value){case"mandatory":this._bRequired=true;break;case"optional":this._bRequired=false;break;default:throw"Invalid annotation value for parameter property"}break;case"label":this._sLabelText=E.value;break;case"text":this._oTextProperty=e.findPropertyByName(E.value);break;case"upper-boundary":this._bIntervalBoundaryParameter=true;this._oUpperIntervalBoundaryParameterProperty=e.findPropertyByName(E.value);break;case"lower-boundary":this._bIntervalBoundaryParameter=true;this._oLowerIntervalBoundaryParameterProperty=e.findPropertyByName(E.value);break}}}if(!this._sLabelText)this._sLabelText=""},setValueSetEntity:function(e,E){this._oValueSetEntityType=e;this._oValueSetEntitySet=E},getTextProperty:function(){return this._oTextProperty},getLabelText:function(){if(!this._sLabelText&&this._oParameterization._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},isOptional:function(){return(!this._bRequired)},isIntervalBoundary:function(){return this._bIntervalBoundaryParameter},isLowerIntervalBoundary:function(){return(this._oUpperIntervalBoundaryParameterProperty?true:false)},getPeerIntervalBoundaryParameter:function(){var p=null;if(this._oLowerIntervalBoundaryParameterProperty)p=this._oLowerIntervalBoundaryParameterProperty.name;else p=this._oUpperIntervalBoundaryParameterProperty.name;if(!p)throw"Parameter is not an interval boundary";return this._oParameterization.findParameterByName(p)},isValueSetAvailable:function(){return(this._oValueSetEntityType?true:false)},getName:function(){return this._oProperty.name},getProperty:function(){return this._oProperty},getContainingParameterization:function(){return this._oParameterization},getURIToValueEntitySet:function(s){var u=null;u=(s?s:"")+"/"+this._oValueSetEntitySet.getQName();return u},_oParameterization:null,_oProperty:null,_sLabelText:null,_oTextProperty:null,_bRequired:false,_bIntervalBoundaryParameter:false,_oLowerIntervalBoundaryParameterProperty:null,_oUpperIntervalBoundaryParameterProperty:null,_oValueSetEntityType:null,_oValueSetEntitySet:null};o.Dimension=function(Q,p){this._init(Q,p)};o.Dimension.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;this._oAttributeSet=new Object()},setMembersEntitySet:function(e){this._oMembersEntitySet=e},getName:function(){return this._oProperty.name},getKeyProperty:function(){return this._oProperty},getTextProperty:function(){if(!this._oTextProperty)this._oTextProperty=this._oQueryResult.getEntityType().getTextPropertyOfProperty(this.getName());return this._oTextProperty},setTextProperty:function(t){this._oTextProperty=t},getLabelText:function(){if(!this._sLabelText)this._sLabelText=this._oQueryResult.getEntityType().getLabelOfProperty(this.getName());if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return(this._sLabelText==null?"":this._sLabelText)},getSuperOrdinateDimension:function(){if(!this._sSuperOrdinateDimension){var s=this._oQueryResult.getEntityType().getSuperOrdinatePropertyOfProperty(this.getName()).name;this._sSuperOrdinateDimension=this._oQueryResult.findDimensionByName(s)}return this._sSuperOrdinateDimension},getHierarchy:function(){if(!this._oHierarchy)this._oHierarchy=this._oQueryResult.getEntityType().getHierarchy(this._oProperty.name);return this._oHierarchy},getAllAttributeNames:function(){if(this._aAttributeNames)return this._aAttributeNames;this._aAttributeNames=[];for(var n in this._oAttributeSet)this._aAttributeNames.push(this._oAttributeSet[n].getName());return this._aAttributeNames},getAllAttributes:function(){return this._oAttributeSet},findAttributeByName:function(n){return this._oAttributeSet[n]},addAttribute:function(d){this._oAttributeSet[d.getName()]=d},getContainingQueryResult:function(){return this._oQueryResult},hasMasterData:function(){return this._oMembersEntitySet!=null?true:false},getMasterDataEntitySet:function(){return this._oMembersEntitySet},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_sSuperOrdinateDimension:null,_aAttributeNames:null,_oAttributeSet:null,_oMembersEntitySet:null,_oHierarchy:null};o.DimensionAttribute=function(Q,p){this._init(Q,p)};o.DimensionAttribute.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;if(p.extensions!=undefined){for(var i=-1,e;e=p.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;switch(e.name){case"attribute-for":this._sDimensionName=e.value;break;case"label":this._sLabelText=e.value;break;case"text":this._oTextProperty=Q.getEntityType().findPropertyByName(e.value);break}}}},getName:function(){return this._oProperty.name},getKeyProperty:function(){return this._oProperty},getTextProperty:function(){return this._oTextProperty},getLabelText:function(){if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},getDimension:function(){return this._oQueryResult.findDimensionByName(this._sDimensionName)},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_sDimensionName:null};o.Measure=function(Q,p){this._init(Q,p)};o.Measure.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oProperty=p;if(p.extensions!=undefined){for(var i=-1,e;e=p.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;switch(e.name){case"label":this._sLabelText=e.value;break;case"text":this._oTextProperty=Q.getEntityType().findPropertyByName(e.value);break;case"unit":this._oUnitProperty=Q.getEntityType().findPropertyByName(e.value);break}}}if(!this._sLabelText)this._sLabelText=""},getName:function(){return this._oProperty.name},getRawValueProperty:function(){return this._oProperty},getFormattedValueProperty:function(){return this._oTextProperty},getUnitProperty:function(){return this._oUnitProperty},getLabelText:function(){if(!this._sLabelText&&this._oQueryResult._oModel._oActivatedWorkarounds.CreateLabelsFromTechnicalNames)this._sLabelText=o.helper.tokenizeNametoLabelText(this.getName());return this._sLabelText},isUpdatable:function(){if(this._bIsUpdatable!=null)return this._bIsUpdatable;var u=this._oQueryResult.getEntitySet().getUpdatablePropertyNameSet();return(u[this.getName()]!=undefined)},_oQueryResult:null,_oProperty:null,_oTextProperty:null,_sLabelText:null,_oUnitProperty:null,_bIsUpdatable:null};o.EntitySet=function(m,s,c,e,E){this._init(m,s,c,e,E)};o.EntitySet.prototype={_init:function(m,s,c,e,E){this._oEntityType=E;this._oEntitySet=e;this._oContainer=c;this._oSchema=s;this._oModel=m;if(s.entityContainer.length>1)this._sQName=c.name+"."+e.name;else this._sQName=e.name},getQName:function(){return this._sQName},getSetDescription:function(){return this._oEntitySet},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},getUpdatablePropertyNameSet:function(){if(this._oUpdatablePropertyNames)return this._oUpdatablePropertyNames;this._oUpdatablePropertyNames=new Object();var s=true;if(this._oEntitySet.extensions!=undefined){for(var j=-1,e;e=this._oEntitySet.extensions[++j];){if(e.namespace==o.constants.SAP_NAMESPACE&&e.name=="updatable"){if(e.value=="false"){s=false;break}}}}if(!s){return this._oUpdatablePropertyNames}var p=this._oEntityType.getTypeDescription().property;for(var i=-1,P;P=p[++i];){var b=true;if(P.extensions==undefined)continue;for(var j=-1,e;e=P.extensions[++j];){if(e.namespace!=o.constants.SAP_NAMESPACE)continue;if(e.name=="updatable"){if(e.value=="false"){b=false;break}}}if(b)this._oUpdatablePropertyNames[P.name]=true}return this._oUpdatablePropertyNames},_oEntityType:null,_oEntitySet:null,_oContainer:null,_oSchema:null,_oModel:null,_sQName:null,_oUpdatablePropertyNames:null};o.EntityType=function(m,s,e){this._init(m,s,e)};o.EntityType.propertyFilterRestriction={SINGLE_VALUE:"single-value",MULTI_VALUE:"multi-value",INTERVAL:"interval"};o.EntityType.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aKeyProperties=[];this._oPropertySet=new Object();this._aFilterablePropertyNames=[];this._aSortablePropertyNames=[];this._aRequiredFilterPropertyNames=[];this._oPropertyFilterRestrictionSet=new Object();this._oPropertyHeadingsSet={};this._oPropertyQuickInfosSet={};this._sQName=s.namespace+"."+e.name;var r={};var R=null;for(var i=-1,p;p=e.key.propertyRef[++i];){this._aKeyProperties.push(p.name)}for(var i=-1,P;P=e.property[++i];){this._oPropertySet[P.name]=P;this._aFilterablePropertyNames.push(P.name);this._aSortablePropertyNames.push(P.name);if(P.extensions==undefined)continue;for(var j=-1,E;E=P.extensions[++j];){if(!E.namespace==o.constants.SAP_NAMESPACE)continue;switch(E.name){case"filterable":if(E.value=="false")this._aFilterablePropertyNames.pop(P.name);break;case"sortable":if(E.value=="false")this._aSortablePropertyNames.pop(P.name);break;case"required-in-filter":if(E.value=="true")this._aRequiredFilterPropertyNames.push(P.name);break;case"filter-restriction":if(E.value==o.EntityType.propertyFilterRestriction.SINGLE_VALUE||E.value==o.EntityType.propertyFilterRestriction.MULTI_VALUE||E.value==o.EntityType.propertyFilterRestriction.INTERVAL)this._oPropertyFilterRestrictionSet[P.name]=E.value;break;case"hierarchy-node-for":if(!(R=r[P.name]))R=r[P.name]=new Object();R.dimensionName=E.value;break;case"hierarchy-parent-node-for":case"hierarchy-parent-nod":if(!(R=r[E.value]))R=r[E.value]=new Object();R.parentNodeIDProperty=P;break;case"hierarchy-level-for":if(!(R=r[E.value]))R=r[E.value]=new Object();R.levelProperty=P;break;case"hierarchy-drill-state-for":case"hierarchy-drill-stat":if(!(R=r[E.value]))R=r[E.value]=new Object();R.drillStateProperty=P;break}}}this._oRecursiveHierarchySet=new Object();for(var h in r){var H=r[h];var a=this._oPropertySet[h];var d=this._oPropertySet[H.dimensionName];if(d==null){d=a}this._oRecursiveHierarchySet[d.name]=new o.RecursiveHierarchy(e,a,H.parentNodeIDProperty,H.levelProperty,d)}},getProperties:function(){return this._oPropertySet},findPropertyByName:function(p){return this._oPropertySet[p]},getKeyProperties:function(){return this._aKeyProperties},getLabelOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="label")return e.value}}return null},getHeadingOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){var s=null;for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="heading")return e.value;if(e.name=="label")s=e.value}}return s},getQuickInfoOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){var s=null;for(var i=-1,e;e=P.extensions[++i];){if(!e.namespace==o.constants.SAP_NAMESPACE)continue;if(e.name=="quickinfo")return e.value;if(e.name=="label")s=e.value}}return s},getTextPropertyOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(e.name=="text")return this.findPropertyByName(e.value)}}return null},getSuperOrdinatePropertyOfProperty:function(p){var P=this._oPropertySet[p];if(P==null)throw"no such property with name "+p;if(P.extensions!=undefined){for(var i=-1,e;e=P.extensions[++i];){if(e.name=="super-ordinate")return this.findPropertyByName(e.value)}}return null},getFilterablePropertyNames:function(){return this._aFilterablePropertyNames},getSortablePropertyNames:function(){return this._aSortablePropertyNames},getRequiredFilterPropertyNames:function(){return this._aRequiredFilterPropertyNames},getPropertiesWithFilterRestrictions:function(){return this._oPropertyFilterRestrictionSet},getAllHierarchyPropertyNames:function(){if(this._aHierarchyPropertyNames)return this._aHierarchyPropertyNames;this._aHierarchyPropertyNames=[];for(var n in this._oRecursiveHierarchySet)this._aHierarchyPropertyNames.push(this._oRecursiveHierarchySet[n].getNodeValueProperty().name);return this._aHierarchyPropertyNames},getHierarchy:function(n){if(this._oRecursiveHierarchySet[n]==undefined)return null;return this._oRecursiveHierarchySet[n]},getQName:function(){return this._sQName},getTypeDescription:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_sQName:null,_aKeyProperties:null,_oPropertySet:null,_aFilterablePropertyNames:null,_aRequiredFilterPropertyNames:null,_oPropertyFilterRestrictionSet:null,_aHierarchyPropertyNames:null,_oRecursiveHierarchySet:null};o.RecursiveHierarchy=function(e,n,p,N,a){this._init(e,n,p,N,a)};o.RecursiveHierarchy.prototype={_init:function(e,n,p,N,a){this._oEntityType=e;this._oNodeIDProperty=n;this._oParentNodeIDProperty=p;this._oNodeLevelProperty=N;this._oNodeValueProperty=a},isRecursiveHierarchy:function(){return true},isLeveledHierarchy:function(){return false},getNodeIDProperty:function(){return this._oNodeIDProperty},getParentNodeIDProperty:function(){return this._oParentNodeIDProperty},getNodeLevelProperty:function(){return this._oNodeLevelProperty},getNodeValueProperty:function(){return this._oNodeValueProperty},_oNodeIDProperty:null,_oParentNodeIDProperty:null,_oNodeLevelProperty:null,_oNodeValueProperty:null};o.FilterExpression=function(m,s,e){this._init(m,s,e)};o.FilterExpression.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aConditionUI5Filter=new Array();this._aUI5FilterArray=new Array()},_renderPropertyFilterValue:function(f,p){return q.sap.encodeURL(this._oModel.getODataModel().formatValue(f,p))},clear:function(){this._aConditionUI5Filter=new Array();this._aUI5FilterArray=new Array()},_addCondition:function(p,O,v,V){for(var i=-1,u;u=this._aConditionUI5Filter[++i];){if(u.sPath==p&&u.sOperator==O&&u.oValue1==v&&u.oValue2==V)return}this._aConditionUI5Filter.push(new sap.ui.model.Filter(p,O,v,V))},_addUI5FilterArray:function(u){this._aUI5FilterArray.push(u)},addCondition:function(p,O,v,V){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add filter condition for unknown property name "+p}var f=this._oEntityType.getFilterablePropertyNames();if(f.indexOf(p)===-1){throw"Cannot add filter condition for not filterable property name "+p}this._addCondition(p,O,v,V);return this},addSetCondition:function(p,v){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add filter condition for unknown property name "+p}var f=this._oEntityType.getFilterablePropertyNames();if(f.indexOf(p)===-1){throw"Cannot add filter condition for not filterable property name "+p}for(var i=-1,V;V=v[++i];)this._addCondition(p,sap.ui.model.FilterOperator.EQ,V);return this},addUI5FilterConditions:function(u){if(!Array.isArray(u))throw"Argument is not an array";if(u.length==0)return this;var h=false;for(var i=0;i<u.length;i++){if(u[i].aFilters!=undefined){h=true;break}}if(h)this._addUI5FilterArray(u);else{for(var i=0;i<u.length;i++){this.addCondition(u[i].sPath,u[i].sOperator,u[i].oValue1,u[i].oValue2)}}return this},getExpressionAsUI5FilterArray:function(){var f=this._aConditionUI5Filter.concat([]);for(var i=-1,F;F=this._aUI5FilterArray[++i];){for(var j=-1,a;a=F[++j];){f.push(a)}}return f},getPropertiesReferencedByUI5FilterArray:function(u,r){for(var i=-1,U;U=u[++i];){if(U.aFilters!=undefined)this.getPropertiesReferencedByUI5FilterArray(U.aFilters,r);else{if(r[U.sPath]==undefined)r[U.sPath]=[];r[U.sPath].push(U)}}},getReferencedProperties:function(){var r=new Object();for(var i=-1,u;u=this._aConditionUI5Filter[++i];){if(r[u.sPath]==undefined)r[u.sPath]=[];r[u.sPath].push(u)}for(var i=-1,U;U=this._aUI5FilterArray[++i];){this.getPropertiesReferencedByUI5FilterArray(U,r)}return r},renderUI5Filter:function(u){var p=this._oEntityType.findPropertyByName(u.sPath);if(p==null){throw"Cannot add filter condition for unknown property name "+u.sPath}var f=null;switch(u.sOperator){case sap.ui.model.FilterOperator.BT:f="("+u.sPath+" "+sap.ui.model.FilterOperator.GE.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue1,p.type)+" and "+u.sPath+" "+sap.ui.model.FilterOperator.LE.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue2,p.type)+")";break;case sap.ui.model.FilterOperator.Contains:f="substringof("+this._renderPropertyFilterValue(u.oValue1,"Edm.String")+","+u.sPath+")";break;case sap.ui.model.FilterOperator.StartsWith:case sap.ui.model.FilterOperator.EndsWith:f=u.sOperator.toLowerCase()+"("+u.sPath+","+this._renderPropertyFilterValue(u.oValue1,"Edm.String")+")";break;default:f=u.sPath+" "+u.sOperator.toLowerCase()+" "+this._renderPropertyFilterValue(u.oValue1,p.type)}return f},renderUI5MultiFilter:function(u){var U=new Array();var O="";var l=u.bAnd==true?" and ":" or ";for(var i=-1,a;a=u.aFilters[++i];){if(a.aFilters!=undefined){U.push(a);continue}O+=(O==""?"":l)+"("+this.renderUI5Filter(a)+")"}if(U.length>0){for(var i=-1,m;m=U[++i];){O+=(O==""?"":l)+"("+this.renderUI5MultiFilter(m)+")"}}return O},renderUI5FilterArray:function(u){if(u.length==0)return"";var O="";u.sort(function(a,b){if(a.sPath==b.sPath)return 0;if(a.sPath>b.sPath)return 1;else return-1});var p=u[0].sPath;var s="";var n=new Array(),U=new Array();for(var i=-1,c;c=u[++i];){if(c.aFilters!=undefined){U.push(c);continue}if(p!=c.sPath){if(s!="")O+=(O==""?"":" and ")+"("+s+")";s="";if(n.length>0){for(var j=-1,N;N=n[++j];){s+=(s==""?"":" and ")+this.renderUI5Filter(N)}O+=(O==""?"":" and ")+"("+s+")";s=""}p=c.sPath;n=new Array()}if(c.sOperator==sap.ui.model.FilterOperator.NE){n.push(c);continue}s+=(s==""?"":" or ")+this.renderUI5Filter(c)}if(s!="")O+=(O==""?"":" and ")+"("+s+")";if(n.length>0){s="";for(var j=-1,N;N=n[++j];){s+=(s==""?"":" and ")+this.renderUI5Filter(N)}O+=(O==""?"":" and ")+"("+s+")"}if(U.length>0){for(var j=-1,m;m=U[++j];){O+=(O==""?"":" and ")+"("+this.renderUI5MultiFilter(m)+")"}}return O},getURIFilterOptionValue:function(){var O=this.renderUI5FilterArray(this._aConditionUI5Filter);for(var i=-1,u;u=this._aUI5FilterArray[++i];){O+=(O==""?"":" and ")+"("+this.renderUI5FilterArray(u)+")"}return O},isValid:function(){var r=this._oEntityType.getRequiredFilterPropertyNames();var p=this.getReferencedProperties();for(var i=-1,P;P=r[++i];){if(p[P]==undefined)throw"filter expression does not contain required property "+P}var a=this._oEntityType.getPropertiesWithFilterRestrictions();for(var P in a){var f=a[P];var c=0;if(f==o.EntityType.propertyFilterRestriction.SINGLE_VALUE){if(p[P]!=undefined){if(p[P].length>1||p[P][0].sOperator!=sap.ui.model.FilterOperator.EQ)throw"filter expression may use "+P+" only with a single EQ condition"}}}return true},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_aFilterCondition:null};o.SortOrder={Ascending:"asc",Descending:"desc"};o.SortExpression=function(m,s,e){this._init(m,s,e)};o.SortExpression.prototype={_init:function(m,s,e){this._oEntityType=e;this._oSchema=s;this._oModel=m;this._aSortCondition=[]},_containsSorter:function(p){var r=null;for(var i=-1,c;c=this._aSortCondition[++i];){if(c.property.name===p){r={sorter:c,index:i};break}}return r},_removeFromArray:function(a,f,t){var r=a.slice((t||f)+1||a.length);a.length=f<0?a.length+f:f;return a.push.apply(a,r)},clear:function(){this._aSortCondition=[]},addSorter:function(p,s){var P=this._oEntityType.findPropertyByName(p);if(P==null){throw"Cannot add sort condition for unknown property name "+p}var e=this._containsSorter(p);if(e!=null){e.sorter.order=s;return this}var S=this._oEntityType.getSortablePropertyNames();if(S.indexOf(p)===-1){throw"Cannot add sort condition for not sortable property name "+p}this._aSortCondition.push({property:P,order:s});return this},removeSorter:function(p){if(!p)return;var s=this._containsSorter(p);if(s){this._removeFromArray(this._aSortCondition,s.index)}},getExpressionsAsUI5SorterArray:function(){var s=[];for(var i=-1,c;c=this._aSortCondition[++i];){s.push(new sap.ui.model.Sorter(c.property.name,c.order==o.SortOrder.Descending))}return s},getExpressionAsUI5Sorter:function(){var s=this.getExpressionsAsUI5SorterArray();if(s.length==0){return null}else{return s[0]}},getURIOrderByOptionValue:function(s){if(this._aSortCondition.length==0)return"";var O="";for(var i=-1,c;c=this._aSortCondition[++i];){if(!s[c.property.name])continue;O+=(O==""?"":",")+c.property.name+" "+c.order}return O},getEntityType:function(){return this._oEntityType},getSchema:function(){return this._oSchema},getModel:function(){return this._oModel},_oEntityType:null,_oSchema:null,_oModel:null,_aSortCondition:null};o.ParameterizationRequest=function(p){this._init(p)};o.ParameterizationRequest.prototype={_init:function(p){if(!p)throw"No parameterization given";this._oParameterization=p;this._oParameterValueAssignment=new Array()},_renderParameterKeyValue:function(k,p){return q.sap.encodeURL(this._oParameterization.getTargetQueryResult().getModel().getODataModel().formatValue(k,p))},getParameterization:function(){return this._oParameterization},setParameterValue:function(p,v,t){var P=this._oParameterization.findParameterByName(p);if(!P)throw"Invalid parameter name "+p;if(t!=null){if(!P.isIntervalBoundary())throw"Range value cannot be applied to parameter "+p+" accepting only single values";if(!P.isLowerIntervalBoundary())throw"Range value given, but parameter "+p+" does not hold the lower boundary"}if(!P.isIntervalBoundary()){if(v==null)delete this._oParameterValueAssignment[p];else this._oParameterValueAssignment[p]=v}else{if(v==null&&t!=null)throw"Parameter "+p+": An upper boundary cannot be given without the lower boundary";if(v==null){delete this._oParameterValueAssignment[p];t=null}else this._oParameterValueAssignment[p]=v;var u=P.getPeerIntervalBoundaryParameter();if(t==null)t=v;if(v==null)delete this._oParameterValueAssignment[u.getName()];else this._oParameterValueAssignment[u.getName()]=t}return},getURIToParameterizationEntitySet:function(s){return(s?s:"")+"/"+this._oParameterization.getEntitySet().getQName()},getURIToParameterizationEntry:function(s){var d=this._oParameterization.getAllParameters();for(var D in d){if(this._oParameterValueAssignment[D]==undefined)throw"Parameter "+D+" has no value assigned"}var k="",f=true;for(var p in this._oParameterValueAssignment){k+=(f?"":",")+p+"="+this._renderParameterKeyValue(this._oParameterValueAssignment[p],d[p].getProperty().type);f=false}return(s?s:"")+"/"+this._oParameterization.getEntitySet().getQName()+"("+k+")"},_oParameterization:null,_oParameterValueAssignment:null};o.QueryResultRequest=function(Q,p){this._init(Q)};o.QueryResultRequest.prototype={_init:function(Q,p){this._oQueryResult=Q;this._oParameterizationRequest=p;this._oAggregationLevel=new Object();this._oMeasures=new Object();this._bIncludeEntityKey=false;this._oFilterExpression=null;this._oSortExpression=null;this._oSelectedPropertyNames=null},setParameterizationRequest:function(p){this._oParameterizationRequest=p},setResourcePath:function(r){this._sResourcePath=r;if(this._sResourcePath.indexOf("/")!=0)throw"Missing leading / (slash) for resource path";if(this._oQueryResult.getParameterization()){var l=r.lastIndexOf("/");if(l==-1)throw"Missing navigation from parameter entity set to query result in resource path";var n=r.substring(l+1);if(n!=this._oQueryResult.getParameterization().getNavigationPropertyToQueryResult())throw"Invalid navigation property from parameter entity set to query result in resource path"}},getParameterizationRequest:function(){return this._oParameterizationRequest},getQueryResult:function(){return this._oQueryResult},setAggregationLevel:function(d){this._oAggregationLevel=new Object();if(!d){d=this._oQueryResult.getAllDimensionNames()}this.addToAggregationLevel(d);this._oSelectedPropertyNames=null},addToAggregationLevel:function(d){if(!d)return;this._oSelectedPropertyNames=null;for(var i=-1,D;D=d[++i];){if(!this._oQueryResult.findDimensionByName(D))throw D+" is not a valid dimension name";this._oAggregationLevel[D]={key:true,text:false,attributes:null}}},removeFromAggregationLevel:function(d){if(!d){return}this._oSelectedPropertyNames=null;for(var i=-1,D;D=d[++i];){if(!this._oQueryResult.findDimensionByName(D)){throw D+" is not a valid dimension name"}if(this._oAggregationLevel[D]!=undefined){delete this._oAggregationLevel[D];this.getSortExpression().removeSorter(D)}}},getAggregationLevel:function(){var d=new Array();for(var D in this._oAggregationLevel){d.push(D)}return d},getAggregationLevelDetails:function(d){if(this._oAggregationLevel[d]==undefined)throw"Aggregation level does not include dimension "+d;return this._oAggregationLevel[d]},setMeasures:function(m){if(!m){m=this._oQueryResult.getAllMeasureNames()}this._oSelectedPropertyNames=null;this._oMeasures=new Object();for(var i=-1,M;M=m[++i];){if(!this._oQueryResult.findMeasureByName(M))throw M+" is not a valid measure name";this._oMeasures[M]={value:true,text:false,unit:false}}},getMeasureNames:function(){var m=new Array();for(var M in this._oMeasures){m.push(M)}return m},includeDimensionKeyTextAttributes:function(d,I,b,a){this._oSelectedPropertyNames=null;var D=new Array();if(d){if(this._oAggregationLevel[d]==undefined)throw d+" is not included in the aggregation level";D.push(d)}else{for(var n in this._oAggregationLevel){D.push(n)}a=null}for(var i=-1,s;s=D[++i];){if(I!=null)this._oAggregationLevel[s].key=I;if(b!=null)this._oAggregationLevel[s].text=b;if(a!=null)this._oAggregationLevel[s].attributes=a}},includeMeasureRawFormattedValueUnit:function(m,I,b,a){this._oSelectedPropertyNames=null;var M=new Array();if(m){if(this._oMeasures[m]==undefined)throw m+" is not part of the query result";M.push(m)}else{for(var n in this._oMeasures){M.push(n)}}for(var i=-1,s;s=M[++i];){if(I!=null)this._oMeasures[s].value=I;if(b!=null)this._oMeasures[s].text=b;if(a!=null)this._oMeasures[s].unit=a}},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oQueryResult.getEntityType();this._oFilterExpression=new o.FilterExpression(this._oQueryResult.getModel(),e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){var e=this._oQueryResult.getEntityType();this._oSortExpression=new o.SortExpression(e.getModel(),e.getSchema(),e)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},setRequestOptions:function(i,I){if(i!=null)this._bIncludeEntityKey=i;if(I!=null)this._bIncludeCount=I},setResultPageBoundaries:function(s,e){if(s!=null&&typeof s!=="number"){throw"Start value must be null or numeric"}if(e!==null&&typeof e!=="number"){throw"End value must be null or numeric"}if(s==null)s=1;if(s<1||s>(e==null?s:e)){throw"Invalid values for requested page boundaries"}this._iSkipRequestOption=(s>1)?s-1:null;this._iTopRequestOption=(e!=null)?(e-s+1):null},getResultPageBoundaries:function(){return{start:(this._iSkipRequestOption==null)?1:this._iSkipRequestOption,end:(this._iTopRequestOption!=null)?(this._iSkipRequestOption==null)?1:this._iSkipRequestOption+this._iTopRequestOption:null}},getURIToQueryResultEntitySet:function(s){var u=null;if(this._sResourcePath!=null){u=(s?s:"")+this._sResourcePath}else{if(this._oQueryResult.getParameterization()){if(!this._oParameterizationRequest)throw"Missing parameterization request";else u=this._oParameterizationRequest.getURIToParameterizationEntry(s)+"/"+this._oQueryResult.getParameterization().getNavigationPropertyToQueryResult()}else u=(s?s:"")+"/"+this._oQueryResult.getEntitySet().getQName()}return u},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";this._oSelectedPropertyNames=new Object();var d=null;for(var D in this._oAggregationLevel){var a=this._oQueryResult.findDimensionByName(D);var b=this._oAggregationLevel[D];if(b.key==true){d=a.getKeyProperty().name;if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}if(b.text==true&&a.getTextProperty()){d=a.getTextProperty().name;if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}if(b.attributes){for(var i=-1,A;A=b.attributes[++i];){d=a.findAttributeByName(A).getName();if(this._oSelectedPropertyNames[d]==undefined){S+=(S==""?"":",")+d;this._oSelectedPropertyNames[d]=true}}}}var m;for(var M in this._oMeasures){var c=this._oQueryResult.findMeasureByName(M);var e=this._oMeasures[M];if(e.value==true){m=c.getRawValueProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}if(e.text==true&&c.getFormattedValueProperty()){m=c.getFormattedValueProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}if(e.unit==true&&c.getUnitProperty()){m=c.getUnitProperty().name;if(this._oSelectedPropertyNames[m]==undefined){S+=(S==""?"":",")+m;this._oSelectedPropertyNames[m]=true}}}if(this._bIncludeEntityKey){var k=this._oQueryResult.getEntityType().getTypeDescription().key.propertyRef;for(var i=-1,K;K=k[++i];){S+=(S==""?"":",")+K.name}}s=(S?S:null);break}case"$filter":{var f=null;if(this._oFilterExpression)f=this._oFilterExpression.getURIFilterOptionValue();s=(f?f:null);break}case"$orderby":{var g=null;if(this._oSortExpression)g=this._oSortExpression.getURIOrderByOptionValue(this._oSelectedPropertyNames);s=(g?g:null);break}case"$top":{if(this._iTopRequestOption!==null){s=this._iTopRequestOption}break}case"$skip":{s=this._iSkipRequestOption;break}case"$inlinecount":{s=(this._bIncludeCount==true?"allpages":null);break}default:break}return s},getURIToQueryResultEntries:function(s,r){var r=this.getURIToQueryResultEntitySet(s);this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var t=this.getURIQueryOptionValue("$top");var b=this.getURIQueryOptionValue("$skip");var i=this.getURIQueryOptionValue("$inlinecount");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else{u+="&"}u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else{u+="&"}u+="$orderby="+a}if(this._iTopRequestOption&&t){if(!Q){u+="?";Q=true}else{u+="&"}u+="$top="+t}if(this._iSkipRequestOption&&b){if(!Q){u+="?";Q=true}else{u+="&"}u+="$skip="+b}if(this._bIncludeCount&&i){if(!Q){u+="?";Q=true}else{u+="&"}u+="$inlinecount="+i}return u},_oQueryResult:null,_oParameterizationRequest:null,_sResourcePath:null,_oAggregationLevel:null,_oMeasures:null,_bIncludeEntityKey:null,_bIncludeCount:null,_oFilterExpression:null,_oSortExpression:null,_iSkipRequestOption:0,_iTopRequestOption:null};o.ParameterValueSetRequest=function(p){this._init(p)};o.ParameterValueSetRequest.prototype={_init:function(p){this._oParameter=p;this._oValueSetResult=new Object();this._oFilterExpression=null;this._oSortExpression=null},includeParameterText:function(i){if(i!=null)this._oValueSetResult.text=i},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oParameter.getContainingParameterization().getEntityType();var m=this._oParameter.getContainingParameterization().getTargetQueryResult().getModel();this._oFilterExpression=new o.FilterExpression(m,e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){var e=this._oParameter.getContainingParameterization().getEntityType();this._oSortExpression=new o.SortExpression(e.getModel(),e.getSchema(),e)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";S+=(S==""?"":",")+this._oParameter.getProperty().name;if(this._oValueSetResult.text==true&&this._oParameter.getTextProperty())S+=(S==""?"":",")+this._oParameter.getTextProperty().name;s=(S?S:null);break}case"$filter":{var f=null;if(this._oFilterExpression)f=this._oFilterExpression.getURIFilterOptionValue();s=(f?f:null);break}case"$orderby":{var a=null;if(this._oSortExpression)a=this._oSortExpression.getURIOrderByOptionValue();s=(a?a:null);break}default:break}return s},getURIToParameterValueSetEntries:function(s){var r=null;r=(s?s:"")+"/"+this._oParameter.getContainingParameterization().getEntitySet().getQName();this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else u+="&";u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else u+="&";u+="$orderby="+a}return u},_oParameter:null,_oFilterExpression:null,_oSortExpression:null,_oValueSetResult:null};o.DimensionMemberSetRequest=function(d,p,u){this._init(d,p,u)};o.DimensionMemberSetRequest.prototype={_init:function(d,p,u){this._oDimension=d;this._oParameterizationRequest=p;this._bUseMasterData=u;this._oValueSetResult=new Object();this._oFilterExpression=null;this._oSortExpression=null;if(this._oParameterizationRequest!=null&&this._bUseMasterData==true)throw"LIMITATION: parameterized master data entity sets are not yet implemented";if(this._bUseMasterData){this._oEntitySet=this._oDimension.getMasterDataEntitySet()}else{this._oEntitySet=this._oDimension.getContainingQueryResult().getEntitySet();if(this._oDimension.getContainingQueryResult().getParameterization()&&!this._oParameterizationRequest)throw"Missing parameterization request"}},setParameterizationRequest:function(p){this._oParameterizationRequest=p},includeDimensionTextAttributes:function(i,I){this._oValueSetResult.text={text:false,attributes:false};if(i==true)this._oValueSetResult.text=true;if(I==true)this._oValueSetResult.attributes=true},getFilterExpression:function(){if(this._oFilterExpression==null){var e=this._oEntitySet.getEntityType();var m=this._oDimension.getContainingQueryResult().getModel();this._oFilterExpression=new o.FilterExpression(m,e.getSchema(),e)}return this._oFilterExpression},setFilterExpression:function(f){this._oFilterExpression=f},getSortExpression:function(){if(this._oSortExpression==null){this._oSortExpression=new o.SortExpression(this._oEntityType.getModel(),this._oEntityType.getSchema(),this._oEntityType)}return this._oSortExpression},setSortExpression:function(s){this._oSortExpression=s},setRequestOptions:function(i){if(i!=null)this._bIncludeCount=i},setResultPageBoundaries:function(s,e){if(s!=null&&typeof s!=="number"){throw"Start value must be null or numeric"}if(e!==null&&typeof e!=="number"){throw"End value must be null or numeric"}if(s==null)s=1;if(s<1||s>(e==null?s:e)){throw"Invalid values for requested page boundaries"}this._iSkipRequestOption=(s>1)?s-1:null;this._iTopRequestOption=(e!=null)?(e-s+1):null},getResultPageBoundaries:function(){return{start:(this._iSkipRequestOption==null)?1:this._iSkipRequestOption,end:(this._iTopRequestOption!=null)?(this._iSkipRequestOption==null)?1:this._iSkipRequestOption+this._iTopRequestOption:null}},getURIQueryOptionValue:function(Q){var s=null;switch(Q){case"$select":{var S="";var e=this._oEntitySet.getEntityType();var k=e.getKeyProperties();var K=[];if(this._bUseMasterData){for(var i=-1,a;a=k[++i];){S+=(S==""?"":",")+a;var b=e.getTextPropertyOfProperty(a);if(b){if(this._oValueSetResult.text==true)S+=","+b.name;K.push(b.name)}}}else{S+=(S==""?"":",")+this._oDimension.getKeyProperty().name;if(this._oValueSetResult.text==true&&this._oDimension.getTextProperty())S+=(S==""?"":",")+this._oDimension.getTextProperty().name}if(this._oValueSetResult.attributes){if(this._bUseMasterData){var A=e.getProperties();for(var p in A){var I=false;for(var i=-1,a;a=k[++i];){if(p==a){I=true;break}}if(I)continue;for(var i=-1,c;c=K[++i];){if(p==c){I=true;break}}if(!I)S+=","+p}}else{var d=this._oDimension.getAllAttributeNames();for(var i=-1,f;f=d[++i];){S+=(S==""?"":",")+this._oDimension.findAttributeByName(f).getName()}}}s=(S?S:null);break}case"$filter":{var F=null;if(this._oFilterExpression)F=this._oFilterExpression.getURIFilterOptionValue();s=(F?F:null);break}case"$orderby":{var g=null;if(this._oSortExpression)g=this._oSortExpression.getURIOrderByOptionValue();s=(g?g:null);break}case"$top":{if(this._iTopRequestOption!==null){s=this._iTopRequestOption}break}case"$skip":{s=this._iSkipRequestOption;break}case"$inlinecount":{s=(this._bIncludeCount==true?"allpages":null);break}default:break}return s},getURIToDimensionMemberEntitySet:function(s){var r=null;if(!this._bUseMasterData&&this._oParameterizationRequest){r=this._oParameterizationRequest.getURIToParameterizationEntry(s)+"/"+this._oDimension.getContainingQueryResult().getParameterization().getNavigationPropertyToQueryResult()}else{r=(s?s:"")+"/"+this._oEntitySet.getQName()}return r},getURIToDimensionMemberEntries:function(s){var r=this.getURIToDimensionMemberEntitySet(s);this.getFilterExpression().isValid();var S=this.getURIQueryOptionValue("$select");var f=this.getURIQueryOptionValue("$filter");var a=this.getURIQueryOptionValue("$orderby");var t=this.getURIQueryOptionValue("$top");var b=this.getURIQueryOptionValue("$skip");var i=this.getURIQueryOptionValue("$inlinecount");var u=r;var Q=false;if(S){u+="?$select="+S;Q=true}if(this._oFilterExpression&&f){if(!Q){u+="?";Q=true}else u+="&";u+="$filter="+f}if(this._oSortExpression&&a){if(!Q){u+="?";Q=true}else u+="&";u+="$orderby="+a}if(this._iTopRequestOption&&t){if(!Q){u+="?";Q=true}else{u+="&"}u+="$top="+t}if(this._iSkipRequestOption&&b){if(!Q){u+="?";Q=true}else{u+="&"}u+="$skip="+b}if(this._bIncludeCount&&i){if(!Q){u+="?";Q=true}else{u+="&"}u+="$inlinecount="+i}return u},_oDimension:null,_oParameterizationRequest:null,_oEntitySet:null,_bUseMasterData:false,_oFilterExpression:null,_oSortExpression:null,_oValueSetResult:null,_bIncludeCount:null,_iSkipRequestOption:0,_iTopRequestOption:null};return o},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.CountMode')){jQuery.sap.declare('sap.ui.model.odata.CountMode');sap.ui.define("sap/ui/model/odata/CountMode",['jquery.sap.global'],function(q){"use strict";var C={Request:"Request",Inline:"Inline",Both:"Both",None:"None"};return C},true)};if(!jQuery.sap.isDeclared('jquery.sap.act')){jQuery.sap.declare('jquery.sap.act');sap.ui.define("jquery.sap.act",['jquery.sap.global'],function(q){"use strict";if(typeof window.jQuery.sap.act==="object"||typeof window.jQuery.sap.act==="function"){return}var _={},a=true,b=null,c=10000,d=!!window.addEventListener,e=[],f=[],g=false,h=null;function j(){b=null;if(g){k();return}a=false;h.observe(document.documentElement,{childList:true,attributes:true,subtree:true,characterData:true})};function k(){if(!a){a=true;l(e);h.disconnect()}if(b){g=true}else{b=setTimeout(j,c);g=false}};function l(L){if(L.length==0){return}var m=L.slice();setTimeout(function(){var I;for(var i=0,n=m.length;i<n;i++){I=m[i];I.fFunction.call(I.oListener||window)}},0)};_.attachActivate=function(F,L){e.push({oListener:L,fFunction:F})};_.detachActivate=function(F,L){for(var i=0,m=e.length;i<m;i++){if(e[i].fFunction===F&&e[i].oListener===L){e.splice(i,1);break}}};_.isActive=!d?function(){return true}:function(){return a};_.refresh=!d?function(){}:k;if(d){var E=["resize","orientationchange","mousemove","mousedown","mouseup","touchstart","touchmove","touchend","touchcancel","paste","cut","keydown","keyup","DOMMouseScroll","mousewheel"];for(var i=0;i<E.length;i++){window.addEventListener(E[i],_.refresh,true)}if(window.MutationObserver){h=new window.MutationObserver(_.refresh)}else if(window.WebKitMutationObserver){h=new window.WebKitMutationObserver(_.refresh)}else{h={observe:function(){document.documentElement.addEventListener("DOMSubtreeModified",_.refresh)},disconnect:function(){document.documentElement.removeEventListener("DOMSubtreeModified",_.refresh)}}}k()}q.sap.act=_;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.dom')){jQuery.sap.declare('jquery.sap.dom');sap.ui.define("jquery.sap.dom",['jquery.sap.global','sap/ui/Device'],function(q,D){"use strict";var d=function(I,w){if(!w){w=window}if(!I||I==""){return null}var o=w.document.getElementById(I);if(o&&o.id==I){return o}var r=w.document.getElementsByName(I);for(var i=0;i<r.length;i++){o=r[i];if(o&&o.id==I){return o}}return null};q.sap.domById=!!D.browser.internet_explorer&&D.browser.version<8?d:function domById(i,w){return i?(w||window).document.getElementById(i):null};q.sap.byId=function byId(i,c){var e="";if(i){e="#"+i.replace(/(:|\.)/g,'\\$1')}return q(e,c)};q.sap.focus=function focus(o){if(!o){return}try{o.focus()}catch(e){var i=(o&&o.id)?" (ID: '"+o.id+"')":"";q.sap.log.warning("Error when trying to focus a DOM element"+i+": "+e.message);return false}return true};q.fn.cursorPos=function cursorPos(p){var l=arguments.length,t,L,T,s;T=this.prop("tagName");s=this.prop("type");if(this.length===1&&((T=="INPUT"&&(s=="text"||s=="password"||s=="search"))||T=="TEXTAREA")){var o=this.get(0);if(l>0){if(typeof(o.selectionStart)=="number"){o.focus();o.selectionStart=p;o.selectionEnd=p}else if(o.createTextRange){t=o.createTextRange();var m=o.value.length;if(p<0||p>m){p=m}if(t){t.collapse();t.moveEnd("character",p);t.moveStart("character",p);t.select()}}return this}else{if(typeof(o.selectionStart)=="number"){return o.selectionStart}else if(o.createTextRange){t=window.document.selection.createRange();var c=t.duplicate();if(o.tagName=="TEXTAREA"){c.moveToElementText(o);var C=c.duplicate();L=c.text.length;C.moveStart("character",L);if(C.inRange(t)){S=L}else{var i=L;var S=0;while(L>1){i=Math.round(L/2);S=S+i;C=c.duplicate();C.moveStart("character",S);if(C.inRange(t)){L=L-i}else{S=S-i;L=i}}}return S}else if(c.parentElement()===o){c.collapse();var L=o.value.length;c.moveStart('character',-L);return c.text.length}}return-1}}else{return this}};q.fn.selectText=function selectText(s,E){var o=this.get(0);if(!o){return this}try{if(typeof(o.selectionStart)==="number"){if(s<0){s=0}if(E>o.value.length){E=o.value.length}if(!E||s>E){s=0;E=0}o.selectionStart=s;o.selectionEnd=E}else if(o.createTextRange){var t=o.createTextRange();t.collapse();t.moveStart('character',s);t.moveEnd('character',E-s);t.select()}}catch(e){}return this};q.fn.outerHTML=function outerHTML(){var o=this.get(0);if(o&&o.outerHTML){return q.trim(o.outerHTML)}else{var a=this[0]?this[0].ownerDocument:document;var b=a.createElement("div");b.appendChild(o.cloneNode(true));return b.innerHTML}};q.sap.containsOrEquals=function containsOrEquals(o,a){if(a&&o&&a!=document&&a!=window){return(o===a)||q.contains(o,a)}return false};q.fn.rect=function rect(){var o=this.get(0);if(o){if(o.getBoundingClientRect){var c=o.getBoundingClientRect();var r={top:c.top,left:c.left,width:c.right-c.left,height:c.bottom-c.top};var w=q.sap.ownerWindow(o);r.left+=q(w).scrollLeft();r.top+=q(w).scrollTop();return r}else{return{top:10,left:10,width:o.offsetWidth,height:o.offsetWidth}}}return null};q.fn.rectContains=function rectContains(p,P){var r=this.rect();if(r){return p>=r.left&&p<=r.left+r.width&&P>=r.top&&P<=r.top+r.height}return false};q.fn.hasTabIndex=function hasTabIndex(){var t=this.prop("tabIndex");if(this.attr("disabled")&&!this.attr("tabindex")){t=-1}return!isNaN(t)&&t>=0};q.fn.firstFocusableDomRef=function firstFocusableDomRef(){var c=this.get(0);var a=function(i){return q(this).css("visibility")=="hidden"};if(!c||q(c).is(':hidden')||q(c).filter(a).length==1){return null}var C=c.firstChild,o=null;while(C){if(C.nodeType==1&&q(C).is(':visible')){if(q(C).hasTabIndex()){return C}if(C.childNodes){o=q(C).firstFocusableDomRef();if(o){return o}}}C=C.nextSibling}return null};q.fn.lastFocusableDomRef=function lastFocusableDomRef(){var c=this.get(0);var a=function(i){return q(this).css("visibility")=="hidden"};if(!c||q(c).is(':hidden')||q(c).filter(a).length==1){return null}var C=c.lastChild,o=null;while(C){if(C.nodeType==1&&q(C).is(':visible')){if(C.childNodes){o=q(C).lastFocusableDomRef();if(o){return o}}if(q(C).hasTabIndex()){return C}}C=C.previousSibling}return null};q.fn.scrollLeftRTL=function scrollLeftRTL(p){var o=this.get(0);if(o){if(p===undefined){if(!!D.browser.internet_explorer){return o.scrollWidth-o.scrollLeft-o.clientWidth}else if(!!D.browser.webkit){return o.scrollLeft}else if(!!D.browser.firefox){return o.scrollWidth+o.scrollLeft-o.clientWidth}else{return o.scrollLeft}}else{o.scrollLeft=q.sap.denormalizeScrollLeftRTL(p,o);return this}}};
/*
	 * The following methods are taken from jQuery UI core but modified.
	 *
	 * jQuery UI Core
	 * http://jqueryui.com
	 *
	 * Copyright 2014 jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/category/ui-core/
	 */
q.support.selectstart="onselectstart"in document.createElement("div");q.fn.extend({disableSelection:function(){return this.on((q.support.selectstart?"selectstart":"mousedown")+".sapui5-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.off(".sapui5-disableSelection")}});q.fn.scrollRightRTL=function scrollRightRTL(){var o=this.get(0);if(o){if(!!D.browser.internet_explorer){return o.scrollLeft}else if(!!D.browser.webkit){return o.scrollWidth-o.scrollLeft-o.clientWidth}else if(!!D.browser.firefox){return(-o.scrollLeft)}else{return o.scrollLeft}}};q.sap.denormalizeScrollLeftRTL=function(n,o){if(o){if(!!D.browser.internet_explorer){return o.scrollWidth-o.clientWidth-n}else if(!!D.browser.webkit){return n}else if(!!D.browser.firefox){return o.clientWidth+n-o.scrollWidth}else{return n}}};
/*!
	 * The following functions are taken from jQuery UI 1.8.17 but modified
	 *
	 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
	 * Dual licensed under the MIT or GPL Version 2 licenses.
	 * http://jquery.org/license
	 *
	 * http://docs.jquery.com/UI
	 */
function v(e){var o=q(e).offsetParent();var O=false;var $=q(e).parents().filter(function(){if(this===o){O=true}return O});return!q(e).add($).filter(function(){return q.css(this,"visibility")==="hidden"||q.expr.filters.hidden(this)}).length}function f(e,i){var n=e.nodeName.toLowerCase();if("area"===n){var m=e.parentNode,a=m.name,b;if(!e.href||!a||m.nodeName.toLowerCase()!=="map"){return false}b=q("img[usemap=#"+a+"]")[0];return!!b&&v(b)}return(/input|select|textarea|button|object/.test(n)?!e.disabled:"a"==n?e.href||i:i)&&v(e)}if(!q.expr[":"].focusable){
/*!
		 * The following function is taken from jQuery UI 1.8.17
		 *
		 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
		 * Dual licensed under the MIT or GPL Version 2 licenses.
		 * http://jquery.org/license
		 *
		 * http://docs.jquery.com/UI
		 *
		 * But since visible is modified, focusable is different too the jQuery UI version too.
		 */
q.extend(q.expr[":"],{focusable:function(e){return f(e,!isNaN(q.attr(e,"tabindex")))}})}if(!q.expr[":"].sapTabbable){
/*!
		 * The following function is taken from
		 * jQuery UI Core 1.10.4
		 * http://jqueryui.com
		 *
		 * Copyright 2014 jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/category/ui-core/
		 */
q.extend(q.expr[":"],{sapTabbable:function(e){var t=q.attr(e,"tabindex"),i=isNaN(t);return(i||t>=0)&&f(e,!i)}})}if(!q.expr[":"].sapFocusable){q.extend(q.expr[":"],{sapFocusable:function(e){return f(e,!isNaN(q.attr(e,"tabindex")))}})}if(!q.fn.zIndex){q.fn.zIndex=function(z){if(z!==undefined){return this.css("zIndex",z)}if(this.length){var e=q(this[0]),p,a;while(e.length&&e[0]!==document){p=e.css("position");if(p==="absolute"||p==="relative"||p==="fixed"){a=parseInt(e.css("zIndex"),10);if(!isNaN(a)&&a!==0){return a}}e=e.parent()}}return 0}}q.fn.parentByAttribute=function parentByAttribute(a,V){if(this.length>0){if(V){return this.first().parents("["+a+"='"+V+"']").get(0)}else{return this.first().parents("["+a+"]").get(0)}}};q.sap.ownerWindow=function ownerWindow(o){if(o.ownerDocument.parentWindow){return o.ownerDocument.parentWindow}return o.ownerDocument.defaultView};var _={};q.sap.scrollbarSize=function(c,F){if(typeof c==="boolean"){F=c;c=null}var k=c||"#DEFAULT";if(F){if(c){delete _[c]}else{_={}}}if(_[k]){return _[k]}if(!document.body){return{width:0,height:0}}var a=q("<DIV/>").css("visibility","hidden").css("height","0").css("width","0").css("overflow","hidden");if(c){a.addClass(c)}a.prependTo(document.body);var $=q("<div style=\"visibility:visible;position:absolute;height:100px;width:100px;overflow:scroll;opacity:0;\"></div>");a.append($);var o=$.get(0);var w=o.offsetWidth-o.scrollWidth;var h=o.offsetHeight-o.scrollHeight;a.remove();if(w===0||h===0){return{width:w,height:h}}_[k]={width:w,height:h};return _[k]};q.sap.syncStyleClass=function(s,S,a){if(!s)return a;if(S instanceof sap.ui.core.Control){S=S.$()}else if(typeof S==="string"){S=q.sap.byId(S)}else if(!(S instanceof q)){return a}var c=!!S.closest("."+s).length;if(a instanceof q){a.toggleClass(s,c)}else if(a instanceof sap.ui.core.Control){a.toggleStyleClass(s,c)}else{}return a};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.encoder')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('jquery.sap.encoder');sap.ui.define("jquery.sap.encoder",['jquery.sap.global'],function(q){"use strict";function h(i,l){var g=i.toString(16);if(l){while(l>g.length){g="0"+g}}return g}var r=/[\x00-\x2b\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g,a=/[\x00-\x08\x0b\x0c\x0e-\x1f\x7f-\x9f]/,H={"<":"&lt;",">":"&gt;","&":"&amp;","\"":"&quot;"};var f=function(g){var E=H[g];if(!E){if(a.test(g)){E="&#xfffd;"}else{E="&#x"+h(g.charCodeAt(0))+";"}H[g]=E}return E};q.sap.encodeHTML=function(S){return S.replace(r,f)};q.sap.encodeXML=function(S){return S.replace(r,f)};q.sap.escapeHTML=function(S){return S.replace(r,f)};var b=/[\x00-\x2b\x2d\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g,j={};var J=function(g){var E=j[g];if(!E){var i=g.charCodeAt(0);if(i<256){E="\\x"+h(i,2)}else{E="\\u"+h(i,4)}j[g]=E}return E};q.sap.encodeJS=function(S){return S.replace(b,J)};q.sap.escapeJS=function(S){return S.replace(b,J)};var c=/[\x00-\x2c\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\uffff]/g,u={};var U=function(g){var E=u[g];if(!E){var i=g.charCodeAt(0);if(i<128){E="%"+h(i,2)}else if(i<2048){E="%"+h((i>>6)|192,2)+"%"+h((i&63)|128,2)}else{E="%"+h((i>>12)|224,2)+"%"+h(((i>>6)&63)|128,2)+"%"+h((i&63)|128,2)}u[g]=E}return E};q.sap.encodeURL=function(S){return S.replace(c,U)};q.sap.encodeURLParameters=function(p){if(!p){return""}var g=[];q.each(p,function(n,v){if(q.type(v)==="string"){v=q.sap.encodeURL(v)}g.push(q.sap.encodeURL(n)+"="+v)});return g.join("&")};var d=/[\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xff\u2028\u2029][0-9A-Fa-f]?/g;var C=function(g){var i=g.charCodeAt(0);if(g.length==1){return"\\"+h(i)}else{return"\\"+h(i)+" "+g.substr(1)}};q.sap.encodeCSS=function(S){return S.replace(d,C)};function W(p,g,i,k){if(p){this.protocol=p.toUpperCase()}if(g){this.host=g.toUpperCase()}this.port=i;this.path=k}var w=new Array();q.sap.clearUrlWhitelist=function(){w.splice(0,w.length)};q.sap.addUrlWhitelist=function(p,g,i,k){var E=new W(p,g,i,k);var I=w.length;w[I]=E};q.sap.removeUrlWhitelist=function(i){w.splice(i,1)};q.sap.getUrlWhitelist=function(){return w.slice()};q.sap.validateUrl=function(g){var k=/(?:([^:\/?#]+):)?(?:\/\/([^\/?#:]*)(?::([0-9]+))?)?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/.exec(g);if(!k){return k}var p=k[1],l=k[2],P=k[3],m=k[4],Q=k[5],n=k[6];var o=/[\x00-\x24\x26-\x29\x2b\x2c\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\x7d\x7f-\uffff]/;var t=/[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;if(p){p=p.toUpperCase();if(w.length<=0){if(!/^(https?|ftp)/i.test(p)){return false}}}if(l){l=l.toUpperCase()}if(m){if(p==="MAILTO"){var v=t.test(m);if(!v){return false}}else{var x=m.split("/");for(var i=0;i<x.length;i++){var v=o.test(x[i]);if(v){return false}}}}if(Q){var x=Q.split("&");for(var i=0;i<x.length;i++){var y=x[i].search("=");if(y!=-1){var z=x[i].substring(0,y);var A=x[i].substring(y+1);var B=o.test(z);var D=o.test(A);if(B||D){return false}}}}if(n){if(o.test(n)){return false}}if(w.length>0){var F=false;for(var i=0;i<w.length;i++){if(!p||!w[i].protocol||p==w[i].protocol){var O=false;if(l&&w[i].host&&/^\*/.test(w[i].host)){var E=w[i].host.slice(1).replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");var G=RegExp(E+"$");if(G.test(l)){O=true}}else if(!l||!w[i].host||l==w[i].host){O=true}if(O){if((!l&&!P)||!w[i].port||P==w[i].port){if(w[i].path&&/\*$/.test(w[i].path)){var I=w[i].path.slice(0,-1).replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");var G=RegExp("^"+I);if(G.test(m)){F=true}}else if(!w[i].path||m==w[i].path){F=true}}}}if(F){break}}if(!F){return false}}return true};q.sap._sanitizeHTML=function(g,o){return s(g,o||{uriRewriter:function(i){if(q.sap.validateUrl(i)){return i}}})};q.sap._setHTMLSanitizer=function(s){s=s||e};function e(g,o){if(!window.html||!window.html.sanitize){q.sap.require("sap.ui.thirdparty.caja-html-sanitizer");}var t=o.tagPolicy||window.html.makeTagPolicy(o.uriRewriter,o.tokenPolicy);return window.html.sanitizeWithPolicy(g,t)}var s=e;return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.events')){jQuery.sap.declare('jquery.sap.events');sap.ui.define("jquery.sap.events",['jquery.sap.global','jquery.sap.keycodes'],function(q){"use strict";q.sap._touchToMouseEvent=true;var o,a,b,c,d,m,I=false;if(sap.ui.Device.browser.webkit&&/Mobile/.test(navigator.userAgent)&&sap.ui.Device.support.touch){I=true;var s=(function(){var e=window.document,H=false,t=null,j=false,r,u,i=0;m=["mousedown","mouseover","mouseup","mouseout","click"];var v=function(T,E){if(!H){return}var M=E.type=="touchend"?E.changedTouches[0]:E.touches[0];var x=e.createEvent('MouseEvent');x.initMouseEvent(T,true,true,window,E.detail,M.screenX,M.screenY,M.clientX,M.clientY,E.ctrlKey,E.shiftKey,E.altKey,E.metaKey,E.button,E.relatedTarget);x.isSynthetic=true;window.setTimeout(function(){t.dispatchEvent(x)},0)};var w=function(E){return E.target.tagName.match(/input|textarea|select/i)};d=function(E){if(!E.isSynthetic&&!w(E)){E.stopPropagation();E.preventDefault()}};o=function(E){var T=E.touches,x;H=(T.length==1&&!w(E));j=false;if(H){x=T[0];t=x.target;if(t.nodeType===3){t=t.parentNode}r=x.clientX;u=x.clientY;v("mousedown",E)}};a=function(E){var T;if(H){T=E.touches[0];if(Math.abs(T.clientX-r)>10||Math.abs(T.clientY-u)>10){j=true}if(j){v("mousemove",E)}}};b=function(E){v("mouseup",E);if(!j){v("click",E)}};c=function(E){v("mouseup",E)};for(;i<m.length;i++){e.addEventListener(m[i],d,true)}e.addEventListener('touchstart',o,true);e.addEventListener('touchmove',a,true);e.addEventListener('touchend',b,true);e.addEventListener('touchcancel',c,true)}())}q.sap.disableTouchToMouseHandling=function(){var i=0;if(!I){return}document.removeEventListener('touchstart',o,true);document.removeEventListener('touchmove',a,true);document.removeEventListener('touchend',b,true);document.removeEventListener('touchcancel',c,true);for(;i<m.length;i++){document.removeEventListener(m[i],d,true)}};q.sap.ControlEvents=["click","dblclick","contextmenu","focusin","focusout","keydown","keypress","keyup","mousedown","mouseout","mouseover","mouseup","select","selectstart","dragstart","dragenter","dragover","dragleave","dragend","drop","paste","cut","input"];if(sap.ui.Device.support.touch){q.sap.ControlEvents.push("touchstart","touchend","touchmove","touchcancel")}q.sap.PseudoEvents={sapdown:{sName:"sapdown",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&!k(e)}},sapdownmodifiers:{sName:"sapdownmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&k(e)}},sapshow:{sName:"sapshow",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.F4&&!k(e))||(e.keyCode==q.sap.KeyCodes.ARROW_DOWN&&h(e,false,true,false))}},sapup:{sName:"sapup",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&!k(e)}},sapupmodifiers:{sName:"sapupmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&k(e)}},saphide:{sName:"saphide",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_UP&&h(e,false,true,false)}},sapleft:{sName:"sapleft",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_LEFT&&!k(e)}},sapleftmodifiers:{sName:"sapleftmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_LEFT&&k(e)}},sapright:{sName:"sapright",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_RIGHT&&!k(e)}},saprightmodifiers:{sName:"saprightmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ARROW_RIGHT&&k(e)}},saphome:{sName:"saphome",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&!k(e)}},saphomemodifiers:{sName:"saphomemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&k(e)}},saptop:{sName:"saptop",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.HOME&&h(e,true,false,false)}},sapend:{sName:"sapend",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&!k(e)}},sapendmodifiers:{sName:"sapendmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&k(e)}},sapbottom:{sName:"sapbottom",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.END&&h(e,true,false,false)}},sappageup:{sName:"sappageup",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_UP&&!k(e)}},sappageupmodifiers:{sName:"sappageupmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_UP&&k(e)}},sappagedown:{sName:"sappagedown",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_DOWN&&!k(e)}},sappagedownmodifiers:{sName:"sappagedownmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.PAGE_DOWN&&k(e)}},sapselect:{sName:"sapselect",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.ENTER||e.keyCode==q.sap.KeyCodes.SPACE)&&!k(e)}},sapselectmodifiers:{sName:"sapselectmodifiers",aTypes:["keydown"],fnCheck:function(e){return(e.keyCode==q.sap.KeyCodes.ENTER||e.keyCode==q.sap.KeyCodes.SPACE)&&k(e)}},sapspace:{sName:"sapspace",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.SPACE&&!k(e)}},sapspacemodifiers:{sName:"sapspacemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.SPACE&&k(e)}},sapenter:{sName:"sapenter",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ENTER&&!k(e)}},sapentermodifiers:{sName:"sapentermodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ENTER&&k(e)}},sapbackspace:{sName:"sapbackspace",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.BACKSPACE&&!k(e)}},sapbackspacemodifiers:{sName:"sapbackspacemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.BACKSPACE&&k(e)}},sapdelete:{sName:"sapdelete",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.DELETE&&!k(e)}},sapdeletemodifiers:{sName:"sapdeletemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.DELETE&&k(e)}},sapexpand:{sName:"sapexpand",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_PLUS&&!k(e)}},sapexpandmodifiers:{sName:"sapexpandmodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_PLUS&&k(e)}},sapcollapse:{sName:"sapcollapse",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_MINUS&&!k(e)}},sapcollapsemodifiers:{sName:"sapcollapsemodifiers",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_MINUS&&k(e)}},sapcollapseall:{sName:"sapcollapseall",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.NUMPAD_ASTERISK&&!k(e)}},sapescape:{sName:"sapescape",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.ESCAPE&&!k(e)}},saptabnext:{sName:"saptabnext",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.TAB&&!k(e)}},saptabprevious:{sName:"saptabprevious",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.TAB&&h(e,false,false,true)}},sapskipforward:{sName:"sapskipforward",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.F6&&!k(e)}},sapskipback:{sName:"sapskipback",aTypes:["keydown"],fnCheck:function(e){return e.keyCode==q.sap.KeyCodes.F6&&h(e,false,false,true)}},sapdecrease:{sName:"sapdecrease",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&!k(e)}},sapdecreasemodifiers:{sName:"sapdecreasemodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&k(e)}},sapincrease:{sName:"sapincrease",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&!k(e)}},sapincreasemodifiers:{sName:"sapincreasemodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&k(e)}},sapprevious:{sName:"sapprevious",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&!k(e)}},sappreviousmodifiers:{sName:"sappreviousmodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var i=r?q.sap.KeyCodes.ARROW_RIGHT:q.sap.KeyCodes.ARROW_LEFT;return(e.keyCode==i||e.keyCode==q.sap.KeyCodes.ARROW_UP)&&k(e)}},sapnext:{sName:"sapnext",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&!k(e)}},sapnextmodifiers:{sName:"sapnextmodifiers",aTypes:["keydown"],fnCheck:function(e){var r=sap.ui.getCore().getConfiguration().getRTL();var N=r?q.sap.KeyCodes.ARROW_LEFT:q.sap.KeyCodes.ARROW_RIGHT;return(e.keyCode==N||e.keyCode==q.sap.KeyCodes.ARROW_DOWN)&&k(e)}},sapdelayeddoubleclick:{sName:"sapdelayeddoubleclick",aTypes:["click"],fnCheck:function(e){var i=q(e.target);var j=e.timeStamp;var r=i.data("sapdelayeddoubleclick_lastClickTimestamp");var t=r||0;i.data("sapdelayeddoubleclick_lastClickTimestamp",j);var u=j-t;return(u>=300&&u<=1300)}}};var P=["sapdown","sapdownmodifiers","sapshow","sapup","sapupmodifiers","saphide","sapleft","sapleftmodifiers","sapright","saprightmodifiers","saphome","saphomemodifiers","saptop","sapend","sapendmodifiers","sapbottom","sappageup","sappageupmodifiers","sappagedown","sappagedownmodifiers","sapselect","sapselectmodifiers","sapspace","sapspacemodifiers","sapenter","sapentermodifiers","sapexpand","sapbackspace","sapbackspacemodifiers","sapdelete","sapdeletemodifiers","sapexpandmodifiers","sapcollapse","sapcollapsemodifiers","sapcollapseall","sapescape","saptabnext","saptabprevious","sapskipforward","sapskipback","sapprevious","sappreviousmodifiers","sapnext","sapnextmodifiers","sapdecrease","sapdecreasemodifiers","sapincrease","sapincreasemodifiers","sapdelayeddoubleclick"];(function initTouchEventSupport(){q.sap.touchEventMode="SIM";var A=[];var e=[];if(sap.ui.Device.support.touch){q.sap.touchEventMode="ON";q.event.props.push("touches","targetTouches","changedTouches")}var j=function(x,y,H){var z="__"+x+"Handler";var B="sap"+x;A.push(B);e.push({sName:x,aTypes:[B],fnCheck:function(E){return true}});q.event.special[B]={add:function(C){var D=this,$=q(this),E={domRef:D,eventName:x,sapEventName:B,eventHandle:C};var G=function(J){H(J,E)};C.__sapSimulatedEventHandler=G;for(var i=0;i<y.length;i++){$.on(y[i],G)}},remove:function(C){var $=q(this);var H=C.__sapSimulatedEventHandler;$.removeData(z+C.guid);for(var i=0;i<y.length;i++){q.event.remove(this,y[i],H)}}}};var M=function(E,C){var D=q(C.domRef);if(E.isMarked("delayedMouseEvent")){return}if(!(E.type!="mouseout"||(E.type==="mouseout"&&q.sap.checkMouseEnterOrLeave(E,C.domRef)))){var x=true;var y=D.data("__touchstart_control");if(y){var z=q.sap.domById(y);if(z&&q.sap.checkMouseEnterOrLeave(E,z)){x=false}}if(x){return}}var N=q.event.fix(E.originalEvent||E);N.type=C.sapEventName;if(N.isMarked("firstUIArea")){N.setMark("handledByUIArea",false)}var B=[{identifier:1,pageX:N.pageX,pageY:N.pageY,clientX:N.clientX,clientY:N.clientY,screenX:N.screenX,screenY:N.screenY,target:N.target,radiusX:1,radiusY:1,rotationAngle:0}];switch(C.eventName){case"touchstart":case"touchmove":N.touches=N.changedTouches=N.targetTouches=B;break;case"touchend":N.changedTouches=B;N.touches=N.targetTouches=[];break}if(C.eventName==="touchstart"||D.data("__touch_in_progress")){D.data("__touch_in_progress","X");var G=q.fn.control?q(E.target).control(0):null;if(G){D.data("__touchstart_control",G.getId())}if(E.type==="mouseout"){N.setMarked("fromMouseout")}C.eventHandle.handler.call(C.domRef,N);if(C.eventName==="touchend"&&!N.isMarked("fromMouseout")){D.removeData("__touch_in_progress");D.removeData("__touchstart_control")}}};j("touchstart",["mousedown"],M);j("touchend",["mouseup","mouseout"],M);j("touchmove",["mousemove"],M);function r(){var C=window["sap-ui-config"]||{},L=C.libs||"";function x(K){return document.location.search.indexOf("sap-ui-"+K)>-1||!!C[K.toLowerCase()]}return sap.ui.Device.support.touch||x("xx-test-mobile")||x("xx-fakeOS")||L.match(/sap.m\b/)}if(r()){q.sap.require("sap.ui.thirdparty.jquery-mobile-custom");if(sap.ui.Device.support.touch){var F=false,t=q.vmouse.moveDistanceThreshold,u,v,O,w;var T=function(E,C){var x=E.originalEvent.touches[0],y;if(E.type==="touchstart"){F=false;u=x.pageX;v=x.pageY;O=Math.round(x.pageX-q(E.target).offset().left);w=Math.round(x.pageY-q(E.target).offset().top)}else if(E.type==="touchmove"){F=F||(Math.abs(x.pageX-u)>t||Math.abs(x.pageY-v)>t)}var N=q.event.fix(E.originalEvent||E);N.type=C.sapEventName;if(N.isMarked("firstUIArea")){N.setMark("handledByUIArea",false)}delete N.touches;delete N.changedTouches;delete N.targetTouches;var z=(C.eventName==="mouseup"?E.changedTouches[0]:E.touches[0]);N.screenX=z.screenX;N.screenY=z.screenY;N.clientX=z.clientX;N.clientY=z.clientY;N.ctrlKey=z.ctrlKey;N.altKey=z.altKey;N.shiftKey=z.shiftKey;N.button=(sap.ui.Device.browser.msie&&sap.ui.Device.browser.version<=8?1:0);y=N.isMarked("handledByUIArea");C.eventHandle.handler.call(C.domRef,N);if(E.type==="touchend"&&!y&&!F){N.type="click";N.setMark("handledByUIArea",false);N.offsetX=O;N.offsetY=w;C.eventHandle.handler.call(C.domRef,N)}};q.sap.disableTouchToMouseHandling();q.sap._touchToMouseEvent=false;j("mousedown",["touchstart"],T);j("mousemove",["touchmove"],T);j("mouseup",["touchend","touchcancel"],T)}A.push("swipe","tap","swipeleft","swiperight","scrollstart","scrollstop");e.push({sName:"swipebegin",aTypes:["swipeleft","swiperight"],fnCheck:function(E){var R=sap.ui.getCore().getConfiguration().getRTL();return(R&&E.type==="swiperight")||(!R&&E.type==="swipeleft")}});e.push({sName:"swipeend",aTypes:["swipeleft","swiperight"],fnCheck:function(E){var R=sap.ui.getCore().getConfiguration().getRTL();return(!R&&E.type==="swiperight")||(R&&E.type==="swipeleft")}})}if(q.sap.Version(q.fn.jquery).compareTo("1.9.1")<0){q.sap.ControlEvents=q.sap.ControlEvents.concat(A)}else{q.sap.ControlEvents=A.concat(q.sap.ControlEvents)}for(var i=0;i<e.length;i++){q.sap.PseudoEvents[e[i].sName]=e[i];P.push(e[i].sName)}}());function f(){var e=q.sap.PseudoEvents,r=[];for(var N in e){if(e[N].aTypes){for(var j=0,i=e[N].aTypes.length;j<i;j++){var t=e[N].aTypes[j];if(q.inArray(t,r)==-1){r.push(t)}}}}return r}var g=f();function h(e,C,A,i){return e.shiftKey==i&&e.altKey==A&&l(e)==C}function k(e){return e.shiftKey||e.altKey||l(e)}function l(e){return!!(e.metaKey||e.ctrlKey)}q.Event.prototype.getPseudoTypes=function(){var e=[];if(q.inArray(this.type,g)!=-1){var j=P;var r=j.length;var t=null;for(var i=0;i<r;i++){t=q.sap.PseudoEvents[j[i]];if(t.aTypes&&q.inArray(this.type,t.aTypes)>-1&&t.fnCheck&&t.fnCheck(this)){e.push(t.sName)}}}this.getPseudoTypes=function(){return e.slice()};return e.slice()};q.Event.prototype.isPseudoType=function(t){var e=this.getPseudoTypes();if(t){return q.inArray(t,e)>-1}else{return e.length>0}};var _=q.Event.prototype.preventDefault;q.Event.prototype.preventDefault=function(){_.apply(this,arguments);var e=this.originalEvent;if(!e){return}if(e.keyCode!=0){try{if(!sap.ui.Device.browser.firefox){e.keyCode=0}}catch(i){}}};q.sap.bindAnyEvent=function bindAnyEvent(C){if(C){q(document).bind(q.sap.ControlEvents.join(" "),C)}};q.sap.unbindAnyEvent=function unbindAnyEvent(C){if(C){q(document).unbind(q.sap.ControlEvents.join(" "),C)}};q.sap.checkMouseEnterOrLeave=function checkMouseEnterOrLeave(E,D){if(E.type!="mouseover"&&E.type!="mouseout"){return false}var i=false;var j=D;var r=E.relatedTarget;try{while(r&&r!==j){r=r.parentNode}if(r!==j){i=true}}catch(e){}return i};q.sap.isSpecialKey=function(e){var K=q.sap.KeyCodes,i=e.which,j=n(e)||p(e)||(i>=33&&i<=36)||(i>=44&&i<=46)||(i>=112&&i<=123)||(i===K.BREAK)||(i===K.BACKSPACE)||(i===K.TAB)||(i===K.ENTER)||(i===K.ESCAPE)||(i===K.SCROLL_LOCK);switch(e.type){case"keydown":case"keyup":return j;case"keypress":return(i===0||i===K.BACKSPACE||i===K.ESCAPE||i===K.ENTER)||false;default:return false}};function n(e){var K=q.sap.KeyCodes,i=e.which;return(i===K.SHIFT)||(i===K.CONTROL)||(i===K.ALT)||(i===K.CAPS_LOCK)||(i===K.NUM_LOCK)}function p(e){var K=e.which,A=(K>=37&&K<=40);switch(e.type){case"keydown":case"keyup":return A;case"keypress":return K===0;default:return false}}q.Event.prototype.getOffsetX=function(){if(this.type=='click'){if(this.offsetX){return this.offsetX}if(this.layerX){return this.layerX}if(this.originalEvent.layerX){return this.originalEvent.layerX}}return 0};q.Event.prototype.getOffsetY=function(){if(this.type=='click'){if(this.offsetY){return this.offsetY}if(this.layerY){return this.layerY}if(this.originalEvent.layerY){return this.originalEvent.layerY}}return 0};var S=q.Event.prototype.stopImmediatePropagation;q.Event.prototype.stopImmediatePropagation=function(e){S.apply(this,arguments);if(e){this._bIsStopHandlers=true}};q.Event.prototype.isImmediateHandlerPropagationStopped=function(){return!!this._bIsStopHandlers};q.Event.prototype.setMark=function(K,v){K=K||"handledByControl";v=arguments.length<2?true:v;(this.originalEvent||this)["_sapui_"+K]=v};q.Event.prototype.setMarked=q.Event.prototype.setMark;q.Event.prototype.isMarked=function(K){K=K||"handledByControl";return!!(this.originalEvent||this)["_sapui_"+K]};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.history')){jQuery.sap.declare('jquery.sap.history');sap.ui.define("jquery.sap.history",['jquery.sap.global','jquery.sap.strings'],function(q){"use strict";(function($,w){var s="_skip",r=/\|id-[0-9]+-[0-9]+/,a=new RegExp(s+"[0-9]*$"),b=[],h=[],S={},c=0,d=undefined,I="|",H=[],e=false,f,g=false;$.sap.history=function(A){if(!q.isPlainObject(A)){return}if(!g){var W=$(w),B=(w.location.href.split("#")[1]||"");W.bind('hashchange',k);if($.isArray(A.routes)){var i,C;for(i=0;i<A.routes.length;i++){C=A.routes[i];if(C.path&&C.handler){$.sap.history.addRoute(C.path,C.handler)}}}if(q.isFunction(A.defaultHandler)){f=A.defaultHandler}h.push(B);if(B.length>1){W.trigger("hashchange",[true])}else{d=B}g=true}};$.sap.history.addHistory=function(i,A,B,V){var C,D;if(B===undefined){B=true}if(!V){D=n(i,A);C=o(D);if(C){D+=(I+C)}D+=(I+(B?"1":"0"))}else{D=m(d)}H.push(D);S[D]=true;w.location.hash=D;return D};$.sap.history.addVirtualHistory=function(){$.sap.history.addHistory("",undefined,false,true)};$.sap.history.addRoute=function(i,A,T){if(T){A=q.proxy(A,T)}var R={};R.sIdentifier=i;R['action']=A;b.push(R);return this};$.sap.history.setDefaultHandler=function(i){f=i};$.sap.history.getDefaultHandler=function(){return f};$.sap.history.backToHash=function(i){i=i||"";var A;if(h.length===1){if($.isFunction(f)){f()}}else{A=j(d,i);if(A<0){w.history.go(A)}else{q.sap.log.error("jQuery.sap.history.backToHash: "+i+"is not in the history stack or it's after the current hash")}}};$.sap.history.backThroughPath=function(P){P=P||"";P=w.encodeURIComponent(P);var i;if(h.length===1){if($.isFunction(f)){f()}}else{i=j(d,P,true);if(i<0){w.history.go(i)}else{q.sap.log.error("jQuery.sap.history.backThroughPath: there's no history state which has the "+P+" identifier in the history stack before the current hash")}}};$.sap.history.back=function(i){if(h.length===1){if($.isFunction(f)){f($.sap.history.NavType.Back)}}else{if(!i){i=1}w.history.go(-1*i)}};$.sap.history.NavType={};$.sap.history.NavType.Back="_back";$.sap.history.NavType.Forward="_forward";$.sap.history.NavType.Bookmark="_bookmark";$.sap.history.NavType.Unknown="_unknown";function j(C,T,P){var A=$.inArray(C,h),B,i,D;if(A>0){if(P){for(i=A-1;i>=0;i--){D=h[i];if(D.indexOf(T)===0&&!u(D)){return i-A}}}else{B=$.inArray(T,h);if((B===-1)&&T.length===0){return-1*A}if((B>-1)&&(B<A)){return B-A}}}return 0}function k(E,M){var i=(w.location.href.split("#")[1]||"");i=l(i);if(M||!S[i]){H.push(i)}if(!e){e=true;if(H.length>0){var A=H.shift();if(S[A]){t(A);delete S[A]}else{x(A)}d=A}e=false}}function p(U){var i=U.indexOf("#");if(i===-1){return""}else if(i>0&&i!==U.length-1){return U.slice(i+1)}}function l(i,R){var A=i,B=i?i.indexOf("#"):-1,C,D;if(B===0){A=A.slice(B+1)}if(R){A=A.replace(r,"")}return A}function m(i){var P=i?i:"";if(u(P)){var A=P.lastIndexOf(s);P=P.slice(0,A)}return P+s+c++}function n(i,A){var E=w.encodeURIComponent(i);var B=w.encodeURIComponent(w.JSON.stringify(A));return E+I+B}function o(A){var B=$.inArray(d,h),T,i,C;if(B>-1){for(i=0;i<B+1;i++){C=h[i];if(C.slice(0,C.length-2)===A){return q.sap.uid()}}}return""}function t(i){var A=$.inArray(d,h);if(!(A===-1||A===h.length-1)){h.splice(A+1,h.length-1-A)}h.push(i)}function u(i){return a.test(i)}function v(C,F){var A=$.inArray(C,h),i;if(A!==-1){if(F){for(i=A;i<h.length;i++){if(!u(h[i])){return i-A}}}else{for(i=A;i>=0;i--){if(!u(h[i])){return i-A}}return-1*(A+1)}}}function x(A){var R,B,i,P=A,C,D,N,E;if(d===undefined){D=z(A);if(!D||!D.bBookmarkable){if(q.isFunction(f)){f($.sap.history.NavType.Bookmark)}return}}if(A.length===0){if(q.isFunction(f)){f($.sap.history.NavType.Back)}}else{N=q.inArray(A,h);if(N===0){D=z(A);if(!D||!D.bBookmarkable){if(q.isFunction(f)){f($.sap.history.NavType.Back)}return}}if(u(A)){if(u(d)){B=v(A,false);w.history.go(B)}else{var F=new RegExp(q.sap.escapeRegExp(d+s)+"[0-9]*$");if(F.test(A)){B=v(A,true);if(B){w.history.go(B)}else{w.history.back()}}else{B=v(A,false);w.history.go(B)}}}else{if(N===-1){E=$.sap.history.NavType.Unknown;h.push(A)}else{if(q.inArray(d,h,N+1)===-1){E=$.sap.history.NavType.Forward}else{E=$.sap.history.NavType.Back}}D=z(A);if(D){R=y(D.sIdentifier);if(R){R.action.apply(null,[D.oStateData,E])}}else{q.sap.log.error("hash format error! The current Hash: "+A)}}}}function y(A){var i;for(i=0;i<b.length;i++){if(b[i].sIdentifier===A){return b[i]}}}function z(A){if(u(A)){var i=A.lastIndexOf(s);A=A.slice(0,i)}var P=A.split(I),R={};if(P.length===4||P.length===3){R.sIdentifier=w.decodeURIComponent(P[0]);R.oStateData=w.JSON.parse(w.decodeURIComponent(P[1]));if(P.length===4){R.uid=P[2]}R.bBookmarkable=P[P.length-1]==="0"?false:true;return R}else{return null}}})(q,this);return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.mobile')){jQuery.sap.declare('jquery.sap.mobile');sap.ui.define("jquery.sap.mobile",['jquery.sap.global','sap/ui/Device','jquery.sap.dom','jquery.sap.events'],function(q,D){"use strict";(function($){var F=/(?:\?|&)sap-ui-xx-fakeOS=([^&]+)/;$.sap.simulateMobileOnDesktop=false;if((D.browser.webkit||(D.browser.msie&&D.browser.version>=10))&&!q.support.touch){var r=document.location.search.match(F);var a=r&&r[1]||q.sap.byId("sap-ui-bootstrap").attr("data-sap-ui-xx-fakeOS");if(a){$.sap.simulateMobileOnDesktop=true;var u={ios:"Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.48 (KHTML, like Gecko) Version/5.1 Mobile/9A406 Safari/7534.48.3",iphone:"Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X) AppleWebKit/534.48 (KHTML, like Gecko) Version/5.1 Mobile/9A406 Safari/7534.48.3",ipad:"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B206",android:"Mozilla/5.0 (Linux; U; Android 4.0.3; en-us; GT-I9100 Build/IML74K) AppleWebKit/534.46 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.46",android_phone:"Mozilla/5.0 (Linux; U; Android 4.0.3; en-us; GT-I9100 Build/IML74K) AppleWebKit/534.46 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.46",android_tablet:"Mozilla/5.0 (Linux; Android 4.1.2; Nexus 7 Build/JZ054K) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19",blackberry:"Mozilla/5.0 (BB10; Touch) AppleWebKit/537.10+ (KHTML, like Gecko) Version/10.0.9.2372 Mobile Safari/537.10+",winphone:"Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)"}[a];if(u&&(D.browser.webkit&&a!=="winphone"||D.browser.msie&&a==="winphone")){if(D.browser.safari){var _=window.navigator;window.navigator=new Object();window.navigator.__proto__=_;window.navigator.__defineGetter__('userAgent',function(){return u})}else{Object.defineProperty(navigator,"userAgent",{get:function(){return u}})}if(D.browser.webkit){q.browser.msie=q.browser.opera=q.browser.mozilla=false;q.browser.webkit=true;q.browser.version="534.46"}else{}D._update($.sap.simulateMobileOnDesktop)}}}$.os=$.extend({os:D.os.name,version:D.os.versionStr,fVersion:D.os.version},$.os);$.os[D.os.name]=true;$.extend($.support,{retina:window.devicePixelRatio>=2});$.device=$.extend({},$.device);$.device.is=$.extend({standalone:window.navigator.standalone,landscape:D.orientation.landscape,portrait:D.orientation.portrait,iphone:D.os.ios&&D.system.phone,ipad:D.os.ios&&D.system.tablet,android_phone:D.system.phone&&D.os.android,android_tablet:D.system.tablet&&D.os.android,tablet:D.system.tablet,phone:D.system.phone,desktop:D.system.desktop},$.device.is);var b=false;$.sap.initMobile=function(o){var c=$("head");if(!b){b=true;o=$.extend({},{viewport:true,statusBar:"default",hideBrowser:true,preventScroll:true,preventPhoneNumberDetection:true,useFullScreenHeight:true,homeIconPrecomposed:false},o);if(D.os.ios&&o.preventPhoneNumberDetection){c.append($('<meta name="format-detection" content="telephone=no">'))}else if(D.browser.msie){c.append($('<meta http-equiv="cleartype" content="on">'));c.append($('<meta name="msapplication-tap-highlight" content="no"/>'))}var i=D.os.ios&&D.os.version>=7&&D.os.version<8&&D.browser.name==="sf";if(o.viewport){var m;if(i&&D.system.phone){m='minimal-ui, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'}else if(i&&D.system.tablet){m='initial-scale=1.0, maximum-scale=1.0, user-scalable=no'}else if($.device.is.iphone&&(Math.max(window.screen.height,window.screen.width)===568)){m="user-scalable=0, initial-scale=1.0"}else if(D.os.android&&D.os.version<3){m="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}else if(D.os.winphone){m="width=320, user-scalable=no"}else{m="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}c.append($('<meta name="viewport" content="'+m+'">'))}if(D.os.ios){c.append($('<meta name="apple-mobile-web-app-capable" content="yes">'));c.append($('<meta name="apple-mobile-web-app-status-bar-style" content="'+o.statusBar+'">'))}if(o.preventScroll){$(window).bind("touchmove",function sapInitMobileTouchMoveHandle(e){if(!e.isMarked()){e.preventDefault()}})}if(o.useFullScreenHeight){$(function(){document.documentElement.style.height="100%"})}}if(o.homeIcon){var I;if(typeof o.homeIcon==="string"){I={phone:o.homeIcon}}else{I=$.extend({},o.homeIcon)}I.precomposed=o.homeIconPrecomposed||I.precomposed;I.favicon=o.homeIcon.icon||I.favicon;I.icon=undefined;$.sap.setIcons(I)}};$.sap.setIcons=function(i){if(!i||(typeof i!=="object")){$.sap.log.warning("Call to jQuery.sap.setIcons() has been ignored because there were no icons given or the argument was not an object.");return}var c=$("head"),p=i.precomposed?"-precomposed":"",g=function(h){return i[h]||i['tablet@2']||i['phone@2']||i['phone']||i['tablet']},s={"phone":"","tablet":"72x72","phone@2":"114x114","tablet@2":"144x144"};if(i["favicon"]){var d=c.find("[rel^=shortcut]");d.each(function(){if(this.rel==="shortcut icon"){$(this).remove()}});c.append($('<link rel="shortcut icon" href="'+i["favicon"]+'" />'))}if(g("phone")){c.find("[rel=apple-touch-icon]").remove();c.find("[rel=apple-touch-icon-precomposed]").remove()}for(var e in s){i[e]=i[e]||g(e);if(i[e]){var f=s[e];c.append($('<link rel="apple-touch-icon'+p+'" '+(f?'sizes="'+f+'"':"")+' href="'+i[e]+'" />'))}}}})(q);return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.properties')){jQuery.sap.declare('jquery.sap.properties');sap.ui.define("jquery.sap.properties",['jquery.sap.global','jquery.sap.sjax'],function(q){"use strict";var P=function(){this.mProperties={};this.aKeys=[]};P.prototype.getProperty=function(k,d){var v=this.mProperties[k];if(typeof(v)=="string"){return v}else if(d){return d}return null};P.prototype.getKeys=function(){return this.aKeys};P.prototype.setProperty=function(k,v){if(typeof(v)!="string"){return}if(typeof(this.mProperties[k])!="string"){this.aKeys.push(k)}this.mProperties[k]=v};P.prototype.clone=function(){var c=new P();c.mProperties=q.extend({},this.mProperties);c.aKeys=q.merge([],this.aKeys);return c};var r=/(?:^|\r\n|\r|\n)[ \t\f]*/;var a=/(\\u[0-9a-fA-F]{0,4})|(\\.)|(\\$)|([ \t\f]*[ \t\f:=][ \t\f]*)/g;var E={'\\f':'\f','\\n':'\n','\\r':'\r','\\t':'\t'};function p(t,o){var l=t.split(r),L,k,v,K,i,m,b;o.mProperties={};o.aKeys=[];for(i=0;i<l.length;i++){L=l[i];if(L===""||L.charAt(0)==="#"||L.charAt(0)==="!"){continue}a.lastIndex=b=0;v="";K=true;while(m=a.exec(L)){if(b<m.index){v+=L.slice(b,m.index)}b=a.lastIndex;if(m[1]){if(m[1].length!==6){throw new Error("Incomplete Unicode Escape '"+m[1]+"'")}v+=String.fromCharCode(parseInt(m[1].slice(2),16))}else if(m[2]){v+=E[m[2]]||m[2].slice(1)}else if(m[3]){L=l[++i];a.lastIndex=b=0}else if(m[4]){if(K){K=false;k=v;v=""}else{v+=m[4]}}}if(b<L.length){v+=L.slice(b)}if(K){k=v;v=""}o.aKeys.push(k);o.mProperties[k]=v}q.sap.unique(o.aKeys)}q.sap.properties=function properties(m){m=q.extend({url:undefined,headers:{}},m);var A=!!m.async,o=new P();function _(t){if(typeof(t)=="string"){p(t,o)}};function b(){var R;if(typeof(m.url)=="string"){R=q.sap.loadResource({url:m.url,dataType:'text',headers:m.headers,failOnError:false,async:A})}return R};if(A){return new window.Promise(function(c,d){var R=b();if(!R){c(o);return}R.then(function(v){try{_(v);c(o)}catch(e){d(e)}},function(v){d(v instanceof Error?v:new Error("Problem during loading of property file '"+m.url+"': "+v))})})}else{_(b());return o}};return q},false)};if(!jQuery.sap.isDeclared('jquery.sap.resources')){jQuery.sap.declare('jquery.sap.resources');sap.ui.define("jquery.sap.resources",['jquery.sap.global','jquery.sap.properties','jquery.sap.strings'],function(q){"use strict";var r=/^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?(-[0-9A-Z]{5,8}|(?:[0-9][0-9A-Z]{3}))*(?:-([0-9A-WYZ](?:-[0-9A-Z]{2,8})+))*(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;var M={"he":"iw","yi":"ji","id":"in","sr":"sh"};var a={"iw":"he","ji":"yi","in":"id","sn":"sr"};var b=/-(saptrc|sappsd)(?:-|$)/i;function n(L){var m;if(typeof L==='string'&&(m=r.exec(L.replace(/_/g,'-')))){var g=m[1].toLowerCase();g=M[g]||g;var S=m[2]?m[2].toLowerCase():undefined;var R=m[3]?m[3].toUpperCase():undefined;var V=m[4];var p=m[6];if((p&&(m=b.exec(p)))||(V&&(m=b.exec(V)))){return"en_US_"+m[1].toLowerCase()}if(g==="zh"&&!R){if(S==="hans"){R="CN"}else if(S==="hant"){R="TW"}}return g+(R?"_"+R+(V?"_"+V.slice(1).replace("-","_"):""):"")}}function d(){var L;if(window.sap&&sap.ui&&sap.ui.getCore){L=sap.ui.getCore().getConfiguration().getLanguage();L=n(L)}return L||"en"}function c(L){var m;if(typeof L==='string'&&(m=r.exec(L.replace(/_/g,'-')))){var g=m[1].toLowerCase();g=a[g]||g;return g+(m[3]?"-"+m[3].toUpperCase()+(m[4]?"-"+m[4].slice(1).replace("_","-"):""):"")}}var e=/^((?:[^?#]*\/)?[^\/?#]*)(\.[^.\/?#]+)((?:\?([^#]*))?(?:#(.*))?)$/;var v=[".properties",".hdbtextbundle"];function s(u){var m=e.exec(u);return m&&{url:u,prefix:m[1],ext:m[2],query:m[4],hash:(m[5]||""),suffix:m[2]+(m[3]||"")}}var B=function(u,L,i,A){this.sLocale=n(L)||d();this.oUrlInfo=s(u);if(!this.oUrlInfo||q.inArray(this.oUrlInfo.ext,v)<0){throw new Error("resource URL '"+u+"' has unknown type (should be one of "+v.join(",")+")")}this.bIncludeInfo=i;this.aCustomBundles=[];this.aPropertyFiles=[];this.aLocales=[];var p=l(this,this.sLocale,A);if(A){this._promise=p}};B.prototype={};B.prototype._enhance=function(C){if(C&&C instanceof B){this.aCustomBundles.push(C)}else{q.sap.log.error("Custom ResourceBundle is either undefined or not an instanceof jQuery.sap.util.ResourceBundle. Therefore this custom ResourceBundle will be ignored!")}};B.prototype.getText=function(k,A,C){var V=null;for(var i=this.aCustomBundles.length-1;i>=0;i--){V=this.aCustomBundles[i].getText(k,A,true);if(V!=null){return V}}for(var i=0;i<this.aPropertyFiles.length;i++){V=this.aPropertyFiles[i].getProperty(k);if(typeof(V)==="string"){break}}if(typeof(V)!=="string"){var t=this.aLocales[0];while(t.length>0){if(t=="zh_HK"){t="zh_TW"}else{var p=t.lastIndexOf('_');if(p>=0){t=t.substring(0,p)}else if(t!="en"){t="en"}else{t=""}}var P=l(this,t);if(P==null){continue}V=P.getProperty(k);if(typeof(V)==="string"){break}}}if(!C&&typeof(V)!=="string"){V=k}if(typeof(V)==="string"){if(A){V=q.sap.formatMessage(V,A)}if(this.bIncludeInfo){V=new String(V);V.originInfo={source:"Resource Bundle",url:this.oUrlInfo.url,locale:this.sLocale,key:k}}}return V};function l(o,L,A){var u=o.oUrlInfo,R,p,P;if(q.inArray(L,o.aLocales)==-1){if(f(L)){switch(u.ext){case'.hdbtextbundle':R={url:u.url,headers:{"Accept-Language":c(L)||""}};break;default:R={url:u.prefix+(L?"_"+L:"")+u.suffix};break}if(A){R.async=true;P=window.Promise.resolve(q.sap.properties(R))}else{p=q.sap.properties(R)}}else{p={getProperty:function(){return undefined}};if(A){P=window.Promise.resolve(p)}}if(A){P.then(function(g){o.aPropertyFiles.push(g);o.aLocales.push(L)});return P}else{o.aPropertyFiles.push(p);o.aLocales.push(L);return p}}return A?window.Promise.resolve(null):null}function f(L){var g=window.sap&&sap.ui&&sap.ui.getCore&&sap.ui.getCore().getConfiguration().getSupportedLanguages();if(g&&g.length>0){return q.inArray(L,g)>=0}return true}q.sap.resources=function resources(p){p=q.extend({url:"",locale:undefined,includeInfo:false},p);var A=!!p.async;var o=new B(p.url,p.locale,p.includeInfo,A);if(A){return new window.Promise(function(g,h){function _(){g(o);delete o._promise}o._promise.then(_,_)})}else{return o}};q.sap.resources._getFallbackLocales=function(L,S){var t=n(L),g=[];function h(L){return!S||S.length===0||q.inArray(L,S)>=0}while(t){if(h(t)){g.push(t)}if(t==="zh_HK"){t="zh_TW"}else{var p=t.lastIndexOf('_');if(p>0){t=t.slice(0,p)}else if(t!=="en"){t="en"}else{t=""}}}if(h("")){g.push("")}return g};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.Global')){if(window.OpenAjax&&window.OpenAjax.hub){OpenAjax.hub.registerLibrary("sap","http://www.sap.com/","0.1",{})}jQuery.sap.declare('sap.ui.Global');sap.ui.define("sap/ui/Global",['jquery.sap.global','jquery.sap.dom'],function(q){"use strict";if(typeof window.sap!=="object"&&typeof window.sap!=="function"){window.sap={}}if(typeof window.sap.ui!=="object"){window.sap.ui={}}sap.ui=q.extend(sap.ui,{version:"1.24.2",buildinfo:{lastchange:"${ldi.scm.revision}",buildtime:"201410141426"}});sap.ui.getVersionInfo=function(L){if(!sap.ui.versioninfo){sap.ui.versioninfo=q.sap.loadResource("sap-ui-version.json")}if(L!==undefined){var a=sap.ui.versioninfo.libraries;for(var i=0,l=a.length;i<l;i++){if(a[i].name===L){return a[i]}}}else{return sap.ui.versioninfo}};sap.ui.namespace=function(n){return q.sap.getObject(n,0)};sap.ui.lazyRequire=function(c,m,M){var f=c.replace(/\//gi,"\."),l=f.lastIndexOf("."),p=f.substr(0,l),C=f.substr(l+1),P=q.sap.getObject(p,0),o=P[C],a=(m||"new").split(" "),b=q.inArray("new",a);M=M||f;if(!o){if(b>=0){o=function(){q.sap.log.debug("lazy stub for '"+f+"' (constructor) called.");q.sap.require(M);var r=P[C];if(r._sapUiLazyLoader){throw new Error("lazyRequire: stub '"+f+"'has not been replaced by module '"+M+"'")}var i=q.sap.newObject(r.prototype);var R=r.apply(i,arguments);if(R&&(typeof R==="function"||typeof R==="object")){i=R}return i};o._sapUiLazyLoader=true;a.splice(b,1)}else{o={}}P[C]=o}q.each(a,function(i,s){if(!o[s]){o[s]=function(){q.sap.log.debug("lazy stub for '"+f+"."+s+"' called.");q.sap.require(M);var r=P[C];if(r[s]._sapUiLazyLoader){throw new Error("lazyRequire: stub '"+f+"."+s+"' has not been replaced by loaded module '"+M+"'")}return r[s].apply(r,arguments)};o[s]._sapUiLazyLoader=true}})};sap.ui.resource=function(l,r){var m=r.match(/^themes\/([^\/]+)\//);if(m){l+=".themes."+m[1];r=r.substr(m[0].length)}return q.sap.getModulePath(l,'/')+r};sap.ui.localResources=function(n){q.sap.registerModulePath(n,"./"+n.replace(/\./g,"/"))};return sap.ui},true)};if(!jQuery.sap.isDeclared('sap.ui.base.Event')){jQuery.sap.declare('sap.ui.base.Event');sap.ui.define("sap/ui/base/Event",['jquery.sap.global','./Object'],function(q,B){"use strict";var E=B.extend("sap.ui.base.Event",{constructor:function(i,s,p){B.apply(this);if(arguments.length>0){this.init(i,s,p)}}});E.prototype.init=function(i,s,p){this.sId=i;this.oSource=s;this.mParameters=p||{};this.bCancelBubble=false;this.bPreventDefault=false};E.prototype.reset=function(){this.sId="";this.oSource=null;this.mParameters=null;this.bCancelBubble=false;this.bPreventDefault=false};E.prototype.getId=function(){return this.sId};E.prototype.getSource=function(){return this.oSource};E.prototype.getParameters=function(){return this.mParameters};E.prototype.getParameter=function(n){return this.mParameters[n]};E.prototype.cancelBubble=function(){this.bCancelBubble=true};E.prototype.preventDefault=function(){this.bPreventDefault=true};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.base.EventProvider')){jQuery.sap.declare('sap.ui.base.EventProvider');sap.ui.define("sap/ui/base/EventProvider",['jquery.sap.global','./Event','./Object','./ObjectPool'],function(q,E,B,O){"use strict";var a=B.extend("sap.ui.base.EventProvider",{constructor:function(){B.apply(this);this.mEventRegistry={}}});a.M_EVENTS={EventHandlerChange:"EventHandlerChange"};a.prototype.oEventPool=new O(E);a.prototype.attachEvent=function(e,d,f,l){if(typeof(d)==="function"){l=f;f=d;d=undefined}if(!this.mEventRegistry[e]){this.mEventRegistry[e]=[]}this.mEventRegistry[e].push({oListener:l,fFunction:f,oData:d});this.fireEvent(a.M_EVENTS.EventHandlerChange,{EventId:e,type:'listenerAttached'});return this};a.prototype.attachEventOnce=function(e,d,f,l){if(typeof(d)==="function"){l=f;f=d;d=undefined}function o(){this.detachEvent(e,o);f.apply(l||this,arguments)}this.attachEvent(e,d,o,undefined);return this};a.prototype.detachEvent=function(e,f,l){var b=this.mEventRegistry[e];if(!b){return this}var L=false;for(var i=0,c=b.length;i<c;i++){if(b[i].fFunction===f&&b[i].oListener===l){b.splice(i,1);L=true;break}}if(b.length==0){delete this.mEventRegistry[e]}if(L){this.fireEvent(a.M_EVENTS.EventHandlerChange,{EventId:e,type:'listenerDetached'})}return this};a.prototype.fireEvent=function(e,p,A,b){if(typeof p=="boolean"){b=A;A=p}var c=this.mEventRegistry[e],P=false,o,d,I;if(b||(c&&q.isArray(c))){c=c?c.slice():[];o=this.oEventPool.borrowObject(e,this,p);for(var i=0,l=c.length;i<l;i++){I=c[i];I.fFunction.call(I.oListener||this,o,I.oData)}if(b){d=this.getEventingParent();while(d&&!o.bCancelBubble){c=d.mEventRegistry[e];if(c&&c instanceof Array){c=c.slice();for(var i=0,l=c.length;i<l;i++){I=c[i];I.fFunction.call(I.oListener||d,o,I.oData)}}d=d.getEventingParent()}}P=o.bPreventDefault;this.oEventPool.returnObject(o)}if(A){return!P}else{return this}};a.prototype.hasListeners=function(e){return!!this.mEventRegistry[e]};a.getEventList=function(e){return e.mEventRegistry};a.prototype.getEventingParent=function(){return null};a.prototype.toString=function(){if(this.getMetadata){return"EventProvider "+this.getMetadata().getName()}else{return"EventProvider"}};a.prototype.destroy=function(){this.mEventRegistry={};B.prototype.destroy.apply(this,arguments)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ManagedObjectMetadata')){jQuery.sap.declare('sap.ui.base.ManagedObjectMetadata');sap.ui.define("sap/ui/base/ManagedObjectMetadata",['jquery.sap.global','./DataType','./Metadata'],function(q,D,M){"use strict";var b=function(c,C){M.apply(this,arguments)};b.prototype=q.sap.newObject(M.prototype);b.prototype.applySettings=function(c){var s=c.metadata;M.prototype.applySettings.call(this,c);var r=/(children|ies|ves|oes|ses|ches|shes|xes|s)$/i;var S={'children':-3,'ies':'y','ves':'f','oes':-2,'ses':-2,'ches':-2,'shes':-2,'xes':-2,'s':-1};function n(i,e,o){var N,I;i=i||{};for(N in i){I=i[N];if(e&&typeof I!=="object"){I={};I[e]=i[N]}I=q.extend({},o,I);I.name=N;if(I.multiple===true&&!I.singularName){I.singularName=N.replace(r,function($,p){var R=S[p.toLowerCase()];return typeof R==="string"?R:p.slice(0,R)})}i[N]=I}return i}function f(i,p){var R={},N;for(N in i){if(p===(i[N].visibility==='public')){R[N]=i[N]}}return R}var a=/([a-z][^.]*(?:\.[a-z][^.]*)*)\./;function d(N){var m=a.exec(N);return(m&&m[1])||""}this._sLibraryName=s.library||d(this.getName());this._mProperties=n(s.properties,"type",{type:"string",group:"Misc"});var A=n(s.aggregations,"type",{type:"sap.ui.core.Control",multiple:true,visibility:'public'});this._mAggregations=f(A,true);this._mPrivateAggregations=f(A,false);this._sDefaultAggregation=s.defaultAggregation||null;this._mAssociations=n(s.associations,"type",{type:"sap.ui.core.Control",multiple:false});this._mEvents=n(s.events,null,{allowPreventDefault:false});this._bEnriched=false;if(c.metadata.__version>1.0){this.generateAccessors()}};b.prototype.afterApplySettings=function(){M.prototype.afterApplySettings.call(this);var p=this.getParent();if(p&&p instanceof b){this._mAllEvents=q.extend({},p._mAllEvents,this._mEvents);this._mAllProperties=q.extend({},p._mAllProperties,this._mProperties);this._mAllPrivateAggregations=q.extend({},p._mAllPrivateAggregations,this._mPrivateAggregations);this._mAllAggregations=q.extend({},p._mAllAggregations,this._mAggregations);this._mAllAssociations=q.extend({},p._mAllAssociations,this._mAssociations);this._sDefaultAggregation=this._sDefaultAggregation||p._sDefaultAggregation;if(p._mHiddenAggregations){this._mHiddenAggregations=q.extend({},p._mHiddenAggregations)}}else{this._mAllEvents=this._mEvents;this._mAllProperties=this._mProperties;this._mAllPrivateAggregations=this._mPrivateAggregations;this._mAllAggregations=this._mAggregations;this._mAllAssociations=this._mAssociations}};b.Kind={PROPERTY:0,SINGLE_AGGREGATION:1,MULTIPLE_AGGREGATION:2,SINGLE_ASSOCIATION:3,MULTIPLE_ASSOCIATION:4,EVENT:5};b.prototype.getLibraryName=function(){return this._sLibraryName};b.prototype.isAbstract=function(){return this._bAbstract};b.prototype.addProperty=function(n,i){i.name=n;this._mProperties[n]=i;if(!this._mAllProperties[n]){this._mAllProperties[n]=i}if(this._bEnriched){this._enrichChildInfos()}};b.prototype.hasProperty=function(n){return!!this._mAllProperties[n]};b.prototype.getProperties=function(){return this._mProperties};b.prototype.getAllProperties=function(){return this._mAllProperties};b.prototype.getAggregations=function(){return this._mAggregations};b.prototype.hasAggregation=function(n){return!!this._mAllAggregations[n]};b.prototype.getAllAggregations=function(){return this._mAllAggregations};b.prototype.getAllPrivateAggregations=function(){return this._mAllPrivateAggregations};b.prototype.getManagedAggregation=function(a){return this._mAllAggregations[a]||this._mAllPrivateAggregations[a]};b.prototype.getDefaultAggregationName=function(){return this._sDefaultAggregation};b.prototype.getDefaultAggregation=function(){return this._sDefaultAggregation&&this.getAllAggregations()[this._sDefaultAggregation]};b.prototype.getAssociations=function(){return this._mAssociations};b.prototype.hasAssociation=function(n){return!!this._mAllAssociations[n]};b.prototype.getAllAssociations=function(){return this._mAllAssociations};b.prototype.getEvents=function(){return this._mEvents};b.prototype.hasEvent=function(n){return!!this._mAllEvents[n]};b.prototype.getAllEvents=function(){return this._mAllEvents};b.prototype.getPropertyDefaults=function(){var d=this._mDefaults,t;if(d){return d}if(this.getParent()instanceof b){d=q.sap.newObject(this.getParent().getPropertyDefaults())}else{d={}}for(var s in this._mProperties){if(this._mProperties[s].defaultValue!==null){d[s]=this._mProperties[s].defaultValue}else{t=D.getType(this._mProperties[s].type);if(t instanceof D){d[s]=t.getDefaultValue()}else{for(var i in t){d[s]=t[i];break}}}}return(this._mDefaults=d)};b.prototype.createPropertyBag=function(){if(!this._fnPropertyBagFactory){this._fnPropertyBagFactory=q.sap.factory(this.getPropertyDefaults())}return new(this._fnPropertyBagFactory)()};b.prototype._enrichChildInfos=function(){if(this._bEnriched){return}if(this.getParent()instanceof b){this.getParent()._enrichChildInfos()}var m,n,i;function a(p,n){return p+n.substring(0,1).toUpperCase()+n.substring(1)}m=this._mProperties;for(n in m){i=m[n];i._sName=n;i._sUID=n;i._oParent=this;i._iKind=b.Kind.PROPERTY;i._sMutator=a("set",n);i._sGetter=a("get",n)}m=this._mAggregations;for(n in m){i=m[n];i._sName=n;i._sUID="aggregation:"+n;i._oParent=this;i._sDestructor=a("destroy",n);i._sGetter=a("get",n);if(i.multiple){i._iKind=b.Kind.MULTIPLE_AGGREGATION;i._sMutator=a("add",i.singularName);i._sRemoveMutator=a("remove",i.singularName);i._sRemoveAllMutator=a("removeAll",n)}else{i._iKind=b.Kind.SINGLE_AGGREGATION;i._sMutator=a("set",n)}}m=this._mAssociations;for(n in m){i=m[n];i._sName=n;i._sUID="association:"+n;i._oParent=this;i._sGetter=a("get",n);if(i.multiple){i._iKind=b.Kind.MULTIPLE_ASSOCIATION;i._sMutator=a("add",i.singularName)}else{i._iKind=b.Kind.SINGLE_ASSOCIATION;i._sMutator=a("set",n)}}m=this._mEvents;for(n in m){i=m[n];i._sName=n;i._sUID="event:"+n;i._oParent=this;i._iKind=b.Kind.EVENT;i._sMutator=a("attach",n)}this._bEnriched=true};b.prototype.getJSONKeys=function(){if(this._mJSONKeys){return this._mJSONKeys}this._enrichChildInfos();var j={};function a(m){var n,i;for(n in m){i=m[n];if(!j[n]||i._iKind<j[n]._iKind){j[n]=i};j[i._sUID]=i}}a(this.getAllProperties());a(this.getAllAggregations());a(this.getAllAssociations());a(this.getAllEvents());return(this._mJSONKeys=j)};b.prototype.generateAccessors=function(){var c=this;var e=this.getClass().prototype;function g(p,n,f,d){var n=p+n.substring(0,1).toUpperCase()+n.substring(1);if(!e[n]){e[n]=d?function(){q.sap.log.warning("Usage of deprecated feature: "+c.getName()+"."+n);return f.apply(this,arguments)}:f;c._aPublicMethods.push(n)}}q.each(this._mProperties,function(n,i){g("get",n,function(){return this.getProperty(n)});g("set",n,function(v){this.setProperty(n,v);return this},i.deprecated);if(i.bindable){g("bind",n,function(p,f,m){this.bindProperty(n,p,f,m);return this},i.deprecated);g("unbind",n,function(p){this.unbindProperty(n,p);return this})}});q.each(this._mAggregations,function(n,d){if(!d.multiple){g("get",n,function(){return this.getAggregation(n)});g("set",n,function(v){this.setAggregation(n,v);return this},d.deprecated)}else{var h=d.singularName;g("get",n,function(){return this.getAggregation(n,[])});g("add",h,function(a){this.addAggregation(n,a);return this},d.deprecated);g("insert",h,function(i,a){this.insertAggregation(n,i,a);return this},d.deprecated);g("remove",h,function(a){return this.removeAggregation(n,a)});g("removeAll",n,function(){return this.removeAllAggregation(n)});g("indexOf",h,function(a){return this.indexOfAggregation(n,a)})}g("destroy",n,function(){this.destroyAggregation(n);return this});if(d.bindable){g("bind",n,function(p,t,s,f){this.bindAggregation(n,p,t,s,f);return this},d.deprecated);g("unbind",n,function(p){this.unbindAggregation(n,p);return this})}});q.each(this._mAssociations,function(n,i){if(!i.multiple){g("get",n,function(){return this.getAssociation(n)});g("set",n,function(v){this.setAssociation(n,v);return this},i.deprecated)}else{var d=i.singularName;g("get",n,function(){return this.getAssociation(n,[])});g("add",d,function(a){this.addAssociation(n,a);return this},i.deprecated);g("remove",d,function(a){return this.removeAssociation(n,a)});g("removeAll",n,function(){return this.removeAllAssociation(n)})}});q.each(this._mEvents,function(n,i){g("attach",n,function(d,f,o){this.attachEvent(n,d,f,o);return this},i.deprecated);g("detach",n,function(f,o){this.detachEvent(n,f,o);return this});var a=!!i.allowPreventDefault;var h=!!i.enableEventBubbling;g("fire",n,function(p){return this.fireEvent(n,p,a,h)})})};(function(){var u={};function a(i){i=sap.ui.getCore().getConfiguration().getUIDPrefix()+i;u[i]=u[i]||0;return(i+u[i]++)}b.uid=a;b.prototype.uid=function(){var i=this._sUIDToken;if(typeof i!=="string"){i=this.getName();i=i.slice(i.lastIndexOf('.')+1);i=i.replace(/([a-z])([A-Z])/g,"$1 $2").split(" ").slice(-1)[0];i=this._sUIDToken=i.replace(/([^A-Za-z0-9-_.:])|([0-9]+$)/g,"").toLowerCase()}return a(i)}}());return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentMetadata')){jQuery.sap.declare('sap.ui.core.ComponentMetadata');sap.ui.define("sap/ui/core/ComponentMetadata",['jquery.sap.global','sap/ui/base/ManagedObjectMetadata'],function(q,M){"use strict";var C=function(c,o){M.apply(this,arguments)};C.prototype=q.sap.newObject(M.prototype);C.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};C.prototype.applySettings=function(c){var s=c.metadata;var n=this.getName(),p=n.replace(/\.\w+?$/,"");if(s._src){if(s._src=="component.json"){q.sap.log.warning("Usage of declacation \"metadata: 'component.json'\" is deprecated (component "+n+"). Use \"metadata: 'json'\" instead.")}else if(s._src!="json"){throw new Error("Invalid metadata declaration for component "+n+": \""+s._src+"\"! Use \"metadata: 'json'\" to load metadata from component.json.")}var r=p.replace(/\./g,"/")+"/component.json";q.sap.log.info("The metadata of the component "+n+" is loaded from file "+r+".");try{var R=q.sap.loadResource(r,{dataType:"json",failOnError:false});q.extend(s,R)}catch(e){q.sap.log.error("Failed to load component metadata from \""+r+"\" (component "+n+")! Reason: "+e)}}M.prototype.applySettings.call(this,c);this._sComponentName=p;this._bInitialized=false;this._iInstanceCount=0;this._sVersion=s.version;this._mDependencies=s.dependencies;this._aIncludes=s.includes;this._mConfig=s.config;this._mCustomizing=s.customizing;this._mModels=s.models||{};this._mServices=s.services||{};var P=this.getParent();if(P instanceof C){this._mConfig=q.extend(true,{},P._mConfig,this._mConfig);this._mCustomizing=q.extend(true,{},P._mCustomizing,this._mCustomizing);this._mModels=q.extend(true,{},P._mModels,this._mModels);this._mServices=q.extend(true,{},P._mServices,this._mServices)}this._oStaticInfo=s};C.prototype.init=function(){if(!this._bInitialized){var p=this.getParent();if(p instanceof C){p.init()}this._loadDependencies();this._loadIncludes();this._bInitialized=true}};C.prototype.exit=function(){if(this._bInitialized){var p=this.getParent();if(p instanceof C){p.exit()}this._bInitialized=false}};C.prototype.onInitComponent=function(){if(this._iInstanceCount===0&&!q.isEmptyObject(this._mCustomizing)){q.sap.require("sap.ui.core.CustomizingConfiguration");sap.ui.core.CustomizingConfiguration.activateForComponent(this._sComponentName)}this._iInstanceCount++};C.prototype.onExitComponent=function(){this._iInstanceCount--;if(this._iInstanceCount===0&&!q.isEmptyObject(this._mCustomizing)){if(sap.ui.core.CustomizingConfiguration){sap.ui.core.CustomizingConfiguration.deactivateForComponent(this._sComponentName)}}};C.prototype.getCustomEntry=function(k,m){if(!k||k.indexOf(".")<=0){q.sap.log.warning("Component Metadata entries with keys without namespace prefix can not be read via getCustomEntry. Key: "+k+", Component: "+this.getName());return null}var d=this._oStaticInfo[k]||{};if(!q.isPlainObject(d)){q.sap.log.warning("Custom Component Metadata entry with key '"+k+"' must be an object. Component: "+this.getName());return null}var p=this.getParent();if(m&&p instanceof C){return q.extend(true,{},p.getCustomEntry(k,m),d)}return q.extend(true,{},d)};C.prototype.getDependencies=function(){return this._mDependencies};C.prototype.getIncludes=function(){return(this._aIncludes&&this._aIncludes.length>0)?this._aIncludes:null};C.prototype.getUI5Version=function(){return this._mDependencies?this._mDependencies.ui5version:null};C.prototype.getComponents=function(){var c=null;if(this._mDependencies){if(this._mDependencies.components&&(this._mDependencies.components.length>0)){c=this._mDependencies.components}}return c};C.prototype.getLibs=function(){var l=null;if(this._mDependencies){if(this._mDependencies.libs&&(this._mDependencies.libs.length>0)){l=this._mDependencies.libs}}return l};C.prototype.getVersion=function(){return this._sVersion};C.prototype.getConfig=function(k){return this._mConfig?q.extend({},k?this._mConfig[k]:this._mConfig):undefined};C.prototype.getCustomizing=function(){return this._mCustomizing?q.extend({},this._mCustomizing):undefined};C.prototype.getModels=function(){return this._mModels};C.prototype.getServices=function(){return this._mServices};C.prototype._loadIncludes=function(){var I=this.getIncludes();if(I&&I.length>0){var t=this;var l=this.getLibraryName();q.each(I,function(i,f){if(f.match(/\.css$/i)){var c=sap.ui.resource(l,f);q.sap.log.info("Component \""+t.getName()+"\" is loading CSS: \""+c+"\"");q.sap.includeStyleSheet(c)}else{var m=f.match(/\.js$/i);if(m){var p=l.replace(/\./g,'/')+(f.slice(0,1)==='/'?'':'/')+f.slice(0,m.index);q.sap.log.info("Component \""+t.getName()+"\" is loading JS: \""+p+"\"");q.sap._requirePath(p)}}})}};C.prototype._loadDependencies=function(){var t=this,d=this.getDependencies();if(d){var l=d.libs;if(l){q.each(l,function(i,L){q.sap.log.info("Component \""+t.getName()+"\" is loading library: \""+L+"\"");sap.ui.getCore().loadLibrary(L)})}var c=d.components;if(c){q.each(c,function(i,n){q.sap.log.info("Component \""+t.getName()+"\" is loading component: \""+n+".Component\"");sap.ui.component.load({name:n})})}}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Configuration')){jQuery.sap.declare('sap.ui.core.Configuration');sap.ui.define("sap/ui/core/Configuration",['jquery.sap.global','sap/ui/base/Object','./Locale','sap/ui/thirdparty/URI'],function(q,B,L,U){"use strict";var C=B.extend("sap.ui.core.Configuration",{constructor:function(o){this._oCore=o;function f(){var e;if(!!sap.ui.Device.os.android){e=navigator.userAgent.match(/\s([a-z]{2}-[a-z]{2})[;)]/i);if(e){return e[1]}}return navigator.language||navigator.userLanguage||navigator.browserLanguage}var g={"theme":{type:"string",defaultValue:"base"},"language":{type:"string",defaultValue:f()},"formatLocale":{type:"string",defaultValue:null},"accessibility":{type:"boolean",defaultValue:true},"animation":{type:"boolean",defaultValue:true},"rtl":{type:"boolean",defaultValue:null},"debug":{type:"boolean",defaultValue:false},"inspect":{type:"boolean",defaultValue:false},"originInfo":{type:"boolean",defaultValue:false},"noConflict":{type:"boolean",defaultValue:false,noUrl:true},"noDuplicateIds":{type:"boolean",defaultValue:true},"trace":{type:"boolean",defaultValue:false,noUrl:true},"modules":{type:"string[]",defaultValue:[],noUrl:true},"areas":{type:"string[]",defaultValue:null,noUrl:true},"onInit":{type:"code",defaultValue:undefined,noUrl:true},"uidPrefix":{type:"string",defaultValue:"__",noUrl:true},"ignoreUrlParams":{type:"boolean",defaultValue:false,noUrl:true},"weinreServer":{type:"string",defaultValue:"",noUrl:true},"weinreId":{type:"string",defaultValue:""},"preload":{type:"string",defaultValue:"auto"},"rootComponent":{type:"string",defaultValue:"",noUrl:true},"xx-rootComponentNode":{type:"string",defaultValue:"",noUrl:true},"application":{type:"string",defaultValue:""},"appCacheBuster":{type:"string[]",defaultValue:[]},"xx-appCacheBusterMode":{type:"string",defaultValue:"sync"},"xx-disableCustomizing":{type:"boolean",defaultValue:false,noUrl:true},"xx-loadAllMode":{type:"boolean",defaultValue:false,noUrl:true},"xx-test-mobile":{type:"boolean",defaultValue:false},"xx-preloadLibCss":{type:"string[]",defaultValue:[]},"xx-componentPreload":{type:"string",defaultValue:""},"xx-bindingSyntax":{type:"string",defaultValue:"simple",noUrl:true},"xx-designMode":{type:"boolean",defaultValue:false},"xx-accessibilityMode":{type:"boolean",defaultValue:false},"xx-supportedLanguages":{type:"string[]",defaultValue:[]},"xx-bootTask":{type:"function",defaultValue:undefined,noUrl:true},"xx-suppressDeactivationOfControllerCode":{type:"boolean",defaultValue:false},"xx-noNativeScroll":{type:"boolean",defaultValue:false},"statistics":{type:"boolean",defaultValue:false}};var h={"xx-test":"1.15","flexBoxPolyfill":"1.14","sapMeTabContainer":"1.14","sapMeProgessIndicator":"1.14","sapMGrowingList":"1.14","sapMListAsTable":"1.14","sapMDialogWithPadding":"1.14"};this.oFormatSettings=new C.FormatSettings(this);var i=this;function s(N,V){if(typeof V==="undefined"||V===null){return}switch(g[N].type){case"boolean":if(typeof V==="string"){if(g[N].defaultValue){i[N]=V.toLowerCase()!="false"}else{i[N]=V.toLowerCase()==="true"||V.toLowerCase()==="x"}}else{i[N]=!!V}break;case"string":i[N]=""+V;break;case"code":i[N]=typeof V==="function"?V:String(V);break;case"function":if(typeof V!=="function"){throw new Error("unsupported value")}i[N]=V;break;case"string[]":if(q.isArray(V)){i[N]=V}else if(typeof V==="string"){i[N]=q.map(V.split(/[ ,;]/),function($){return q.trim($)})}else{throw new Error("unsupported value")}break;default:throw new Error("illegal state")}}function j(T){var v,w;try{v=new URI(T,window.location.href).normalize();w=v.path();return w+(w.slice(-1)==='/'?'':'/')+"UI5/"}catch(e){}}for(var n in g){i[n]=g[n].defaultValue}var k=window["sap-ui-config"]||{};k.oninit=k.oninit||k["evt-oninit"];for(var n in g){s(n,k[n.toLowerCase()])}if(k.libs){i.modules=q.map(k.libs.split(","),function($){return q.trim($)+".library"}).concat(i.modules)}var P="compatversion";var D=k[P];var l=q.sap.Version("1.14");this._compatversion={};function _(e){var v=!e?D||l.toString():k[P+"-"+e.toLowerCase()]||D||h[e]||l.toString();v=q.sap.Version(v.toLowerCase()==="edge"?sap.ui.version:v);return q.sap.Version(v.getMajor(),v.getMinor())}this._compatversion._default=_();for(var n in h){this._compatversion[n]=_(n)}if(!i.ignoreUrlParams){var u="sap-ui-";var m=q.sap.getUriParameters();if(m.mParams['sap-locale']||m.mParams['sap-language']){var V=m.get('sap-locale')||M[m.get('sap-language').toUpperCase()]||m.get('sap-language');if(V===""){i['language']=g['language'].defaultValue}else{s('language',V)}}if(m.mParams['sap-accessibility']){var V=m.get('sap-accessibility');if(V==="X"||V==="x"){s('xx-accessibilityMode',true)}else{s('xx-accessibilityMode',false)}}if(m.mParams['sap-rtl']){var V=m.get('sap-rtl');if(V==="X"||V==="x"){s('rtl',true)}else{s('rtl',false)}}if(m.mParams['sap-theme']){var V=m.get('sap-theme');if(V===""){i['theme']=g['theme'].defaultValue}else{s('theme',V)}}if(m.mParams['sap-statistics']){var V=m.get('sap-statistics');s('statistics',V)}for(var n in g){if(g[n].noUrl){continue}var V=m.get(u+n);if(V===""){i[n]=g[n].defaultValue}else{s(n,V)}}}this.derivedRTL=L._impliesRTL(i.language);var t=i.theme;var T;var I=t.indexOf("@");if(I>=0){T=j(t.slice(I+1));if(T){i.theme=t.slice(0,I);i.themeRoot=T}else{i.theme=(k.theme&&k.theme!==t)?k.theme:"base";I=-1}}i.theme=this._normalizeTheme(i.theme,T);var p=i['languagesDeliveredWithCore']=L._coreI18nLocales;var r=i['xx-supportedLanguages'];if(r.length===0||(r.length===1&&r[0]==='*')){r=[]}else if(r.length===1&&r[0]==='default'){r=p||[]}i['xx-supportedLanguages']=r;for(var n in g){if(i[n]!==g[n].defaultValue){q.sap.log.info("  "+n+" = "+i[n])}}},getVersion:function(){if(this._version){return this._version}this._version=new q.sap.Version(sap.ui.version);return this._version},getCompatibilityVersion:function(f){if(typeof(f)==="string"&&this._compatversion[f]){return this._compatversion[f]}return this._compatversion._default},getTheme:function(){return this.theme},_setTheme:function(t){this.theme=t;return this},_normalizeTheme:function(t,T){if(t&&T==null&&t.match(/^sap_corbu$/i))return"sap_goldreflection";return t},getLanguage:function(){return this.language},setLanguage:function(l){d(typeof l==="string"&&l,"sLanguage must be a BCP47 language tag or Java Locale id or null");var o=this.getRTL(),m;if(l!=this.language){m=this._collect();this.language=m.language=l;this.derivedRTL=L._impliesRTL(l);if(o!=this.getRTL()){m.rtl=this.getRTL()}this._endCollect()}return this},getLocale:function(){return new L(this.language)},getFormatLocale:function(){return this.formatLocale||this.language},setFormatLocale:function(f){d(f===null||typeof f==="string"&&f,"sFormatLocale must be a BCP47 language tag or Java Locale id or null");var m;if(f!=this.formatLocale){m=this._collect();this.formatLocale=m.formatLocale=f;this._endCollect()}return this},getLanguagesDeliveredWithCore:function(){return this["languagesDeliveredWithCore"]},getSupportedLanguages:function(){return this["xx-supportedLanguages"]},getAccessibility:function(){return this.accessibility},getAnimation:function(){return this.animation},getRTL:function(){return this.rtl===null?this.derivedRTL:this.rtl},setRTL:function(r){d(r===null||typeof r==="boolean","bRTL must be null or a boolean");var m;if(r!=this.rtl){m=this._collect();this.rtl=m.rtl=this.getRTL();this._endCollect()}return this},getDebug:function(){return this.debug},getInspect:function(){return this.inspect},getOriginInfo:function(){return this.originInfo},getNoDuplicateIds:function(){return this.noDuplicateIds},getTrace:function(){return this.trace},getUIDPrefix:function(){return this.uidPrefix},getDesignMode:function(){return this["xx-designMode"]},getSuppressDeactivationOfControllerCode:function(){return this["xx-suppressDeactivationOfControllerCode"]},getWeinreServer:function(){var w=this.weinreServer;if(!w){w=window.location.protocol+"//"+window.location.hostname+":";w+=(parseInt(window.location.port,10)||8080)+1}return w},getWeinreId:function(){return this.weinreId},getApplication:function(){return this.application},getRootComponent:function(){return this.rootComponent},getAppCacheBuster:function(){return this.appCacheBuster},getAppCacheBusterMode:function(){return this["xx-appCacheBusterMode"]},getDisableCustomizing:function(){return this["xx-disableCustomizing"]},getPreload:function(){return this.preload},getComponentPreload:function(){return this['xx-componentPreload']||this.preload},getFormatSettings:function(){return this.oFormatSettings},_collect:function(){var m=this.mChanges||(this.mChanges={__count:0});m.__count++;return m},_endCollect:function(){var m=this.mChanges;if(m&&(--m.__count)===0){delete m.__count;this._oCore&&this._oCore.fireLocalizationChanged(m);delete this.mChanges}},getStatistics:function(){return this.statistics||window.localStorage.getItem("sap-ui-statistics")=="X"},getNoNativeScroll:function(){return this["xx-noNativeScroll"]}});var M={"ZH":"zh-Hans","ZF":"zh-Hant","1Q":"en-US-x-saptrc","2Q":"en-US-x-sappsd"};var a={"":{pattern:null},"1":{pattern:"dd.MM.yyyy"},"2":{pattern:"MM/dd/yyyy"},"3":{pattern:"MM-dd-yyyy"},"4":{pattern:"yyyy.MM.dd"},"5":{pattern:"yyyy/MM/dd"},"6":{pattern:"yyyy-MM-dd"},"7":{pattern:"Gyy.MM.dd",ignore:true},"8":{pattern:"Gyy/MM/dd",ignore:true},"9":{pattern:"Gyy-MM-dd",ignore:true},"A":{pattern:"yyyy/MM/dd",ignore:true},"B":{pattern:"yyyy/MM/dd",ignore:true},"C":{pattern:"yyyy/MM/dd",ignore:true}};var b={"":{"short":null,medium:null,dayPeriods:null},"0":{"short":"HH:mm",medium:"HH:mm:ss",dayPeriods:null},"1":{"short":"hh:mm a",medium:"hh:mm:ss a",dayPeriods:["AM","PM"]},"2":{"short":"hh:mm a",medium:"hh:mm:ss a",dayPeriods:["am","pm"]},"3":{"short":"KK:mm a",medium:"KK:mm:ss a",dayPeriods:["AM","PM"]},"4":{"short":"KK:mm a",medium:"KK:mm:ss a",dayPeriods:["am","pm"]}};var c={"":{groupingSeparator:null,decimalSeparator:null}," ":{groupingSeparator:".",decimalSeparator:","},"X":{groupingSeparator:",",decimalSeparator:"."},"Y":{groupingSeparator:" ",decimalSeparator:","}};function d(e,m){if(!e){throw new Error(m)}}B.extend("sap.ui.core.Configuration.FormatSettings",{constructor:function(o){this.oConfiguration=o;this.mSettings={};this.sLegacyDateFormat=undefined;this.sLegacyTimeFormat=undefined;this.sLegacyNumberFormatSymbolSet=undefined},getFormatLocale:function(){function f(t){var l=t.oConfiguration.language;if(!q.isEmptyObject(t.mSettings)){if(l.indexOf("-x-")<0){l=l+"-x-sapufmt"}else if(l.indexOf("-sapufmt")<=l.indexOf("-x-")){l=l+"-sapufmt"}}return l}return new L(this.oConfiguration.formatLocale||f(this))},_set:function(k,v){var o=this.mSettings[k];if(v!=null){this.mSettings[k]=v}else{delete this.mSettings[k]}if((o==null!=v==null)||!q.sap.equal(o,v)){var m=this.oConfiguration._collect();m[k]=v;this.oConfiguration._endCollect()}},getDatePattern:function(s){return this.mSettings["dateFormat-"+s]},setDatePattern:function(s,p){d(s=="short"||s=="medium"||s=="long"||s=="full","sStyle must be short, medium, long or full");this._set("dateFormat-"+s,p);return this},getTimePattern:function(s){return this.mSettings["timeFormat-"+s]},setTimePattern:function(s,p){d(s=="short"||s=="medium"||s=="long"||s=="full","sStyle must be short, medium, long or full");this._set("timeFormat-"+s,p);return this},getNumberSymbol:function(t){return this.mSettings["symbols-latn-"+t]},setNumberSymbol:function(t,s){d(t=="decimal"||t=="group"||t=="plusSign"||t=="minusSign","sType must be decimal, group, plusSign or minusSign");this._set("symbols-latn-"+t,s);return this},_setDayPeriods:function(w,t){this._set("dayPeriods-format-"+w,t);return this},getLegacyDateFormat:function(){return this.sLegacyDateFormat||undefined},setLegacyDateFormat:function(f){f=f?String(f).toUpperCase():"";d(!f||a.hasOwnProperty(f),"sFormatId must be one of ['1','2','3','4','5','6','7','8','9','A','B','C'] or empty");if(a[f].ignore){q.sap.log.warning("The ABAP date format '"+f+"' ("+a[f].pattern+") is not supported yet. Falling back to locale specific date formats.");f=""}var m=this.oConfiguration._collect();this.sLegacyDateFormat=m.legacyDateFormat=f;this.setDatePattern("short",a[f].pattern);this.setDatePattern("medium",a[f].pattern);this.oConfiguration._endCollect();return this},getLegacyTimeFormat:function(){return this.sLegacyTimeFormat||undefined},setLegacyTimeFormat:function(f){d(!f||b.hasOwnProperty(f),"sFormatId must be one of ['0','1','2','3','4'] or empty");var m=this.oConfiguration._collect();this.sLegacyTimeFormat=m.legacyTimeFormat=f=f||"";this.setTimePattern("short",b[f]["short"]);this.setTimePattern("medium",b[f]["medium"]);this._setDayPeriods("abbreviated",b[f].dayPeriods);this.oConfiguration._endCollect();return this},getLegacyNumberFormat:function(){return this.sLegacyNumberFormat||undefined},setLegacyNumberFormat:function(f){f=f?f.toUpperCase():"";d(!f||c.hasOwnProperty(f),"sFormatId must be one of [' ','X','Y'] or empty");var m=this.oConfiguration._collect();this.sLegacyNumberFormat=m.legacyNumberFormat=f;this.setNumberSymbol("group",c[f].groupingSeparator);this.setNumberSymbol("decimal",c[f].decimalSeparator);this.oConfiguration._endCollect()},getCustomLocaleData:function(){return this.mSettings}});return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ElementMetadata')){jQuery.sap.declare('sap.ui.core.ElementMetadata');sap.ui.define("sap/ui/core/ElementMetadata",['jquery.sap.global','sap/ui/base/ManagedObjectMetadata'],function(q,M){"use strict";var E=function(c,C){M.apply(this,arguments)};E.prototype=q.sap.newObject(M.prototype);E.uid=M.uid;E.prototype.getElementName=function(){return this._sClassName};E.prototype.getRendererName=function(){return this._sRendererName};E.prototype.getRenderer=function(){var r=this.getRendererName();if(!r){return}var R=q.sap.getObject(r);if(R){return R}q.sap.require(r);return q.sap.getObject(r)};E.prototype.applySettings=function(c){var s=c.metadata;this._sVisibility=s["visibility"]||"public";var r=c.hasOwnProperty("renderer")?(c.renderer||""):undefined;delete c.renderer;M.prototype.applySettings.call(this,c);this._sRendererName=this.getName()+"Renderer";if(typeof r!=="undefined"){if(typeof r==="string"){this._sRendererName=r||undefined;return}if(typeof r==="function"){r={render:r}}var p=this.getParent();var b;if(p&&p instanceof E){b=p.getRenderer()}if(!b){q.sap.require("sap.ui.core.Renderer");b=sap.ui.core.Renderer}var R=q.sap.newObject(b);q.extend(R,r);q.sap.setObject(this.getRendererName(),R)}};E.prototype.afterApplySettings=function(){M.prototype.afterApplySettings.apply(this,arguments);this.register&&this.register(this)};E.prototype.isHidden=function(){return this._sVisibility==="hidden"};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.EventBus')){jQuery.sap.declare('sap.ui.core.EventBus');sap.ui.define("sap/ui/core/EventBus",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var a=sap.ui.base.Object.extend("sap.ui.core.EventBus",{constructor:function(){sap.ui.base.Object.apply(this);this._mChannels={};this._defaultChannel=new E()}});a.prototype.subscribe=function(c,e,f,l){if(typeof(e)==="function"){l=f;f=e;e=c;c=null}var C=b(this,c);C.attachEvent(e,f,l);return this};a.prototype.unsubscribe=function(c,e,f,l){if(typeof(e)==="function"){l=f;f=e;e=c;c=null}var C=g(this,c);if(!C){return this}C.detachEvent(e,f,l);if(C!=this._defaultChannel){var m=E.getEventList(C);var i=true;for(var I in m){if(C.hasListeners(I)){i=false;break}}if(i){delete this._mChannels[c]}}return this};a.prototype.publish=function(c,e,d){if(arguments.length==1){d=null;e=c;c=null}else if(arguments.length==2){if(typeof(e)!="string"){d=e;e=c;c=null}}d=d?d:{};var C=g(this,c);if(!C){return}var f=E.getEventList(C)[e];if(f&&q.isArray(f)){f=f.slice();var I;for(var i=0,l=f.length;i<l;i++){I=f[i];I.fFunction.call(I.oListener||this,c,e,d)}}};a.prototype.getInterface=function(){return this};a.prototype.destroy=function(){this._defaultChannel.destroy();for(var c in this._mChannels){this._mChannels[c].destroy()}this._mChannels={};sap.ui.base.Object.prototype.destroy.apply(this,arguments)};function g(e,c){if(!c){return e._defaultChannel}return e._mChannels[c]};function b(e,c){var C=g(e,c);if(!C&&c){e._mChannels[c]=new E();C=e._mChannels[c]}return C};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.FocusHandler')){jQuery.sap.declare('sap.ui.core.FocusHandler');sap.ui.define("sap/ui/core/FocusHandler",['jquery.sap.global','sap/ui/Device','sap/ui/Global','sap/ui/base/Object','jquery.sap.script'],function(q,D,G,B){"use strict";var F=B.extend("sap.ui.core.FocusHandler",{constructor:function(r,c){B.apply(this);this.oCore=c;this.oCurrent=null;this.oLast=null;this.aEventQueue=[];this.fEventHandler=q.proxy(this.onEvent,this);this.fDestroyHandler=q.proxy(this.destroy,this);if(r.addEventListener&&!!!D.browser.internet_explorer){r.addEventListener("focus",this.fEventHandler,true);r.addEventListener("blur",this.fEventHandler,true)}else{q(r).bind("activate",this.fEventHandler);q(r).bind("deactivate",this.fEventHandler)}q.sap.log.debug("FocusHandler setup on Root "+r.type+(r.id?": "+r.id:""),null,"sap.ui.core.FocusHandler");q(window).bind("unload",{"oRootRef":r},this.fDestroyHandler)}});F.prototype.getCurrentFocusedControlId=function(){var c=null;try{var a=q(document.activeElement);if(a.is(":focus")||(D.browser.internet_explorer&&D.browser.version==8&&document.hasFocus())){c=a.control()}}catch(e){}return c&&c.length>0?c[0].getId():null};F.prototype.destroy=function(e){var r=e.data.oRootRef;if(r){if(r.removeEventListener&&!!!D.browser.internet_explorer){r.removeEventListener("focus",this.fEventHandler,true);r.removeEventListener("blur",this.fEventHandler,true)}else{q(r).unbind("activate",this.fEventHandler);q(r).unbind("deactivate",this.fEventHandler)}}q(window).unbind("unload",this.fDestroyHandler);this.oCore=null};F.prototype.onEvent=function(b){var e=q.event.fix(b);q.sap.log.debug("Event "+e.type+" reached Focus Handler (target: "+e.target+(e.target?e.target.id:"")+")",null,"sap.ui.core.FocusHandler");var a=(e.type=="focus"||e.type=="focusin"||e.type=="activate")?"focus":"blur";this.aEventQueue.push({type:a,controlId:g(e.target)});if(this.aEventQueue.length==1){this.processEvent()}};F.prototype.processEvent=function(){var e=this.aEventQueue[0];if(!e){return}try{if(e.type=="focus"){this.onfocusEvent(e.controlId)}else if(e.type=="blur"){this.onblurEvent(e.controlId)}}finally{this.aEventQueue.shift();if(this.aEventQueue.length>0){this.processEvent()}}};F.prototype.onfocusEvent=function(c){this.oCurrent=c;if(!this.oLast){return}t(this.oLast,c,this.oCore);this.oLast=null};F.prototype.onblurEvent=function(c){if(!this.oCurrent){return}this.oLast=c;this.oCurrent=null;q.sap.delayedCall(0,this,"checkForLostFocus")};F.prototype.checkForLostFocus=function(){if(this.oCurrent==null&&this.oLast!=null){t(this.oLast,null,this.oCore)}this.oLast=null};var g=function(d){var i=q(d).closest("[data-sap-ui]").attr("id");if(i){return i}return null};var t=function(c,r,C){var o=c?sap.ui.getCore().byId(c):null;if(o){var R=r?sap.ui.getCore().byId(r):null;var e=q.Event("sapfocusleave");e.target=o.getDomRef();e.relatedControlId=R?R.getId():null;e.relatedControlFocusInfo=R?R.getFocusInfo():null;var a=o.getUIArea();var u=null;if(a){u=C.getUIArea(a.getId())}else{var p=sap.ui.getCore().getStaticAreaRef();if(q.sap.containsOrEquals(p,e.target)){u=C.getUIArea(p.id)}}if(u){u._handleEvent(e)}}};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.IntervalTrigger')){jQuery.sap.declare('sap.ui.core.IntervalTrigger');sap.ui.define("sap/ui/core/IntervalTrigger",['jquery.sap.global','./EventBus'],function(q,E){"use strict";var _="sapUiIntervalTrigger-event";var I=sap.ui.base.Object.extend("sap.ui.core.IntervalTrigger",{constructor:function(i){sap.ui.base.Object.apply(this);this._oEventBus=new E();this._delayedCallId=null;this._triggerProxy=q.proxy(t,this);this._iInterval=0;if(i){this.setInterval(i)}}});var t=function(){q.sap.clearDelayedCall(this._delayedCallId);var h=this._oEventBus._defaultChannel.hasListeners(_);if(this._iInterval>0&&h){this._oEventBus.publish(_);this._delayedCallId=q.sap.delayedCall(this._iInterval,this,this._triggerProxy)}};I.prototype.destroy=function(){sap.ui.base.Object.prototype.destroy.apply(this,arguments);delete this._triggerProxy;this._oEventBus.destroy();delete this._oEventBus};I.prototype.setInterval=function(i){if(this._iInterval!==i){this._iInterval=i;this._triggerProxy()}};I.prototype.addListener=function(f,l){this._oEventBus.subscribe(_,f,l);this._triggerProxy()};I.prototype.removeListener=function(f,l){this._oEventBus.unsubscribe(_,f,l)};I.prototype.getInterface=function(){return this};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocaleData')){jQuery.sap.declare('sap.ui.core.LocaleData');sap.ui.define("sap/ui/core/LocaleData",['jquery.sap.global','sap/ui/base/Object','./Configuration','./Locale'],function(q,B,C,L){"use strict";var a=B.extend("sap.ui.core.LocaleData",{constructor:function(o){B.apply(this);this.mData=g(o)},_get:function(k){return this.mData[k]},getOrientation:function(){return this._get("orientation")},getLanguages:function(){return this._get("languages")},getScripts:function(){return this._get("scripts")},getTerritories:function(){return this._get("territories")},getMonths:function(w){return this._get("months-format-"+w)},getMonthsStandAlone:function(w){return this._get("months-standAlone-"+w)},getDays:function(w){return this._get("days-format-"+w)},getDaysStandAlone:function(w){return this._get("days-standAlone-"+w)},getQuarters:function(w){return this._get("quarters-format-"+w)},getDayPeriods:function(w){return this._get("dayPeriods-format-"+w)},getDatePattern:function(s){return this._get("dateFormat-"+s)},getTimePattern:function(s){return this._get("timeFormat-"+s)},getDateTimePattern:function(s){return this._get("dateTimeFormat-"+s)},getNumberSymbol:function(t){return this._get("symbols-latn-"+t)},getDecimalPattern:function(){return this._get("decimalFormat").standard},getCurrencyPattern:function(){return this._get("currencyFormat").standard},getPercentPattern:function(){return this._get("percentFormat").standard},getFirstDayOfWeek:function(){return this._get("weekData-firstDay")},getWeekendStart:function(){return this._get("weekData-weekendStart")},getWeekendEnd:function(){return this._get("weekData-weekendEnd")},getIntervalPattern:function(i){return(i&&this._get("intervalFormat-"+i))||this._get("intervalFormatFallback")},getCurrencyDigits:function(s){var o=this._get("currencyDigits");var d=2;if(o){if(o[s]!=undefined){d=o[s]}else{d=o["DEFAULT"]}}return d},getCurrencySymbol:function(s){var o=this._get("currencySymbols");return(o&&o[s])||s}});var M={"orientation":"left-to-right","languages":{},"scripts":{},"territories":{},"dateFormat-full":"EEEE, MMMM d, y","dateFormat-long":"MMMM d, y","dateFormat-medium":"MMM d, y","dateFormat-short":"M/d/yy","timeFormat-full":"h:mm:ss a zzzz","timeFormat-long":"h:mm:ss a z","timeFormat-medium":"h:mm:ss a","timeFormat-short":"h:mm a","dateTimeFormat-full":"{1} 'at' {0}","dateTimeFormat-long":"{1} 'at' {0}","dateTimeFormat-medium":"{1}, {0}","dateTimeFormat-short":"{1}, {0}","decimalFormat":{"standard":"#,##0.###"},"currencyFormat":{"standard":"¤#,##0.00"},"percentFormat":{"standard":"#,##0%"},"months-format-abbreviated":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"months-format-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"months-format-narrow":["1","2","3","4","5","6","7","8","9","10","11","12"],"months-standAlone-abbreviated":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"months-standAlone-wide":["January","February","March","April","May","June","July","August","September","October","November","December"],"months-standAlone-narrow":["1","2","3","4","5","6","7","8","9","10","11","12"],"days-format-abbreviated":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"days-format-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"days-format-narrow":["S","M","T","W","T","F","S"],"days-standAlone-abbreviated":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"days-standAlone-wide":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"days-standAlone-narrow":["S","M","T","W","T","F","S"],"quarters-format-narrow":["1","2","3","4"],"quarters-format-abbreviated":["Q1","Q2","Q3","Q4"],"quarters-format-wide":["1st quarter","2nd quarter","3rd quarter","4th quarter"],"quarters-standAlone-narrow":["1","2","3","4"],"symbols-latn-decimal":".","symbols-latn-group":",","symbols-latn-plusSign":"+","symbols-latn-minusSign":"-","dayPeriods-format-narrow":["AM","PM"],"dayPeriods-format-wide":["AM","PM"],"dayPeriods-format-abbreviated":["AM","PM"],"weekData-minDays":4,"weekData-firstDay":1,"weekData-weekendStart":6,"weekData-weekendEnd":0,"intervalFormatFallback":"{0} – {1}"};var b={"iw":"he","ji":"yi","in":"id","sh":"sr"};var c=(function(){var d=L._cldrLocales,r={},i;if(d){for(i=0;i<d.length;i++){r[d[i]]=true}}return r}());var l={};function g(o){var s=o.getLanguage()||"",S=o.getScript()||"",r=o.getRegion()||"",d;function e(i){var D;if(!l[i]&&(!c||c[i]===true)){l[i]=q.sap.loadResource("sap/ui/core/cldr/"+i+".json",{dataType:"json",failOnError:false})}return l[i]}s=(s&&b[s])||s;if(s==="no"){s="nb"}if(s==="zh"&&!r){if(S==="Hans"){r="CN"}else if(S==="Hant"){r="TW"}}var i=s+"_"+r;if(s&&r){d=e(i)}if(!d&&s){d=e(s)}l[i]=d||M;return l[i]};a.extend("sap.ui.core.CustomLocaleData",{constructor:function(o){a.apply(this,arguments);this.mCustomData=sap.ui.getCore().getConfiguration().getFormatSettings().getCustomLocaleData()},_get:function(i){return this.mCustomData[i]||this.mData[i]}});a.getInstance=function(o){return o.hasPrivateUseSubtag("sapufmt")?new sap.ui.core.CustomLocaleData(o):new a(o)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.RenderManager')){jQuery.sap.declare('sap.ui.core.RenderManager');sap.ui.define("sap/ui/core/RenderManager",['jquery.sap.global','sap/ui/base/Interface','sap/ui/base/Object','jquery.sap.act','jquery.sap.encoder'],function(q,I,B){"use strict";var c=["renderControl","write","writeEscaped","translate","writeAcceleratorKey","writeControlData","writeElementData","writeAttribute","writeAttributeEscaped","addClass","writeClasses","addStyle","writeStyles","writeAccessibilityState","writeIcon","getConfiguration","getHTML","cleanupControlWithoutRendering"];var N=["render","flush","destroy"];var R=B.extend("sap.ui.core.RenderManager",{constructor:function(){B.apply(this,arguments);this.aBuffer=[];this.aRenderedControls=[];this.aStyleStack=[{}]},metadata:{publicMethods:c.concat(N)}});R.prototype.getRendererInterface=function(){var i=new I(this,c);this.getRendererInterface=q.sap.getter(i);return i};R.prototype.destroy=function(){this.aBuffer=[];this.aRenderedControls=[];this.aStyleStack=[{}]};R.prototype.getConfiguration=function(){return sap.ui.getCore().getConfiguration()};R.prototype.getRenderer=function(C){return R.getRenderer(C)};var t=function(r,C){r._bLocked=true;try{var e=q.Event("BeforeRendering");e.srcControl=C;C._handleEvent(e)}finally{r._bLocked=false}};R.prototype.cleanupControlWithoutRendering=function(C){if(!C||!C.getDomRef()){return}t(this,C);C.bOutput=false};R.prototype.renderControl=function(C){if(!C){return}if(!this.aRenderStack){this.aRenderStack=new Array()}if(this.aRenderStack&&this.aRenderStack.length>0){q.sap.measure.pause(this.aRenderStack[0]+"---renderControl")}else if(C.getParent()&&C.getParent().getMetadata().getName()=="sap.ui.core.UIArea"){q.sap.measure.pause(C.getParent().getId()+"---rerender")}this.aRenderStack.unshift(C.getId());q.sap.measure.start(C.getId()+"---renderControl","Rendering of "+C.getMetadata().getName());var b=this.aBuffer.length;var o={};if(C.aCustomStyleClasses&&C.aCustomStyleClasses.length>0){o.aCustomStyleClasses=C.aCustomStyleClasses}this.aStyleStack.push(o);q.sap.measure.pause(C.getId()+"---renderControl");var r=this.getRenderer(C);q.sap.measure.resume(C.getId()+"---renderControl");t(this,C);var a=C.aBindParameters;if(a&&a.length>0){var d=q(C.getDomRef());if(d&&d[0]){for(var i=0;i<a.length;i++){var p=a[i];d.unbind(p.sEventType,p.fnProxy)}}}r.render(this.getRendererInterface(),C);this.aStyleStack.pop();this.aRenderedControls.push(C);if(C.getUIArea&&C.getUIArea()){C.getUIArea()._onControlRendered(C)}C.bOutput=this.aBuffer.length!=b;q.sap.measure.end(C.getId()+"---renderControl");this.aRenderStack.shift();if(this.aRenderStack&&this.aRenderStack.length>0){q.sap.measure.resume(this.aRenderStack[0]+"---renderControl")}else if(C.getParent()&&C.getParent().getMetadata().getName()=="sap.ui.core.UIArea"){q.sap.measure.resume(C.getParent().getId()+"---rerender")}};R.prototype.getHTML=function(C){var a=this.aBuffer;var r=this.aBuffer=[];this.renderControl(C);this.aBuffer=a;return r.join("")};(function(){var s=function(){var C=sap.ui.getCore();var F=C.getCurrentFocusedControlId(),o=null,a=null;if(F){var b=C.getElementById(F);if(b){o=b.getFocusInfo();a=b.getFocusDomRef()}}return{focusedControlId:F,focusInfo:o,focusDomRef:a}};var f=function(r,a,S){for(var i=0,b=a.length;i<b;i++){var C=a[i];if(C.bOutput){r._bLocked=true;try{var E=q.Event("AfterRendering");E.srcControl=C;q.sap.measure.start(C.getId()+"---AfterRendering","AfterRendering of "+C.getMetadata().getName());C._handleEvent(E);q.sap.measure.end(C.getId()+"---AfterRendering")}finally{r._bLocked=false}}}try{if(S&&S.focusedControlId){var F=sap.ui.getCore().getElementById(S.focusedControlId);if(F&&F.getFocusDomRef()!=S.focusDomRef){F.applyFocusInfo(S.focusInfo)}}}catch(e){q.sap.log.warning("Problems while restore focus after rendering: "+e,null,r)}for(var i=0,b=a.length;i<b;i++){var C=a[i],d=C.aBindParameters;if(d&&d.length>0){var D=q(C.getDomRef());if(D&&D[0]){for(var j=0;j<d.length;j++){var p=d[j];D.bind(p.sEventType,p.fnProxy)}}}}};R.prototype.flush=function(T,d,v){if(this.bRendererMode){q.sap.log.info("Flush must not be called from control renderers. Call ignored.",null,this);return}if(!d&&(typeof v!=="number")&&!v){R.preserveContent(T)}var S=s();var h=R.prepareHTML5(this.aBuffer.join(""));if(this._fPutIntoDom){this._fPutIntoDom(T,h)}else{for(var i=0;i<this.aRenderedControls.length;i++){var o=this.aRenderedControls[i].getDomRef();if(o&&!R.isPreservedContent(o)){if(R.isInlineTemplate(o)){q(o).empty()}else{q(o).remove()}}}if(typeof v==="number"){if(v<=0){q(T).prepend(h)}else{var $=q(T).children().eq(v-1);if($.length===1){$.after(h)}else{q(T).append(h)}}}else if(!v){q(T).html(h)}else{q(T).append(h)}}f(this,this.aRenderedControls,S);this.aRenderedControls=[];this.aBuffer=[];this.aStyleStack=[{}];q.sap.act.refresh()};R.prototype.render=function(C,T){if(this.bRendererMode){q.sap.log.info("Render must not be called from control renderers. Call ignored.",null,this);return}if(this._bLocked){q.sap.log.error("Render must not be called within Before or After Rendering Phase. Call ignored.",null,this);return}this.aBuffer=[];this.renderControl(C);this._fPutIntoDom=function(o,h){if(C&&T){var a=C.getDomRef();if(R.isPreservedContent(a)){a=q.sap.byId("sap-ui-dummy-"+C.getId())[0]||a}var n=a&&a.parentNode!=T;var A=function(){var j=q(T);if(T.innerHTML==""){j.html(h)}else{j.append(h)}};if(n){if(!R.isPreservedContent(a)){if(R.isInlineTemplate(a)){q(a).empty()}else{q(a).remove()}}if(h){A()}}else{if(h){if(a){if(R.isInlineTemplate(a)){q(a).html(h)}else{q(a).replaceWith(h)}}else{A()}}else{if(R.isInlineTemplate(a)){q(a).empty()}else{if(!C.getParent()||!C.getParent()._onChildRerenderedEmpty||!C.getParent()._onChildRerenderedEmpty(C,a)){q(a).remove()}}}}}};this.flush(T,true);this._fPutIntoDom=null}}());R.getRenderer=function(C){return C.getMetadata().getRenderer()};R.initHTML5Support=function(){if(!!sap.ui.Device.browser.internet_explorer&&(sap.ui.Device.browser.version===8||sap.ui.Device.browser.version===7)){var T=["article","aside","audio","canvas","command","datalist","details","figcaption","figure","footer","header","hgroup","keygen","mark","meter","nav","output","progress","rp","rt","ruby","section","source","summary","template","time","video","wbr"];for(var i=0;i<T.length;i++){document.createElement(T[i])}var r=new RegExp("<("+T.join("|")+")(\\s|>)","i");var d=null;R.prepareHTML5=function(h){if(h&&h.match(r)){if(!d){d=document.createElement('div');d.style.display='none'}var e=d.cloneNode(true);var f=document.body||document.createDocumentFragment();f.appendChild(e);e.innerHTML=h.replace(/^\s\s*/,'').replace(/\s\s*$/,'');f.removeChild(e);return e.childNodes}return h};q.sap.log.info("IE8 HTML5 support activated")}else{q.sap.log.info("no IE8 HTML5 support required");R.prepareHTML5=function(h){return h}}};R.forceRepaint=function(d){var D=typeof d=="string"?q.sap.domById(d):d;if(D){q.sap.log.debug("forcing a repaint for "+(D.id||String(D)));var o=D.style.display;var a=document.activeElement;D.style.display="none";D.offsetHeight;D.style.display=o;if(document.activeElement!==a){q.sap.focus(a)}}};(function(){var a="sap-ui-preserve",b="sap-ui-static",A="data-sap-ui-preserve",d="data-sap-ui-area";function g(){var $=q("#"+a);if($.length===0){$=q("<DIV/>",{role:"application",id:a}).addClass("sapUiHidden").css("width","0").css("height","0").css("overflow","hidden").appendTo(document.body)}return $}function m(n){q("<DIV/>",{id:"sap-ui-dummy-"+n.id}).addClass("sapUiHidden").insertBefore(n)}R.preserveContent=function(r,p,P){sap.ui.getCore().getEventBus().publish("sap.ui","__preserveContent",{domNode:r});var $=g();function f(h){if(h.id===a||h.id===b){return}if(h.hasAttribute(A)){if(h===r){m(h)}$.append(h)}else if(P&&h.id){R.markPreservableContent(q(h),h.id);$.append(h);return}if(!h.hasAttribute(d)){var n=h.firstChild;while(n){h=n;n=n.nextSibling;if(h.nodeType===1){f(h)}}}}q.sap.measure.start(r.id+"---preserveContent","preserveContent for "+r.id);if(p){f(r)}else{q(r).children().each(function(i,n){f(n)})}q.sap.measure.end(r.id+"---preserveContent")};R.findPreservedContent=function(i){var $=g(),f=$.children("["+A+"='"+i.replace(/(:|\.)/g,'\\$1')+"']");return f};R.markPreservableContent=function($,i){$.attr(A,i)};R.isPreservedContent=function(D){return(D&&D.getAttribute(A)&&D.parentNode&&D.parentNode.id==a)};R.getPreserveAreaRef=function(){return g()[0]};var e="data-sap-ui-template";R.markInlineTemplate=function($){$.attr(e,"")};R.isInlineTemplate=function(D){return(D&&D.hasAttribute(e))}}());R.prototype.write=function(T){this.aBuffer.push.apply(this.aBuffer,arguments);return this};R.prototype.writeEscaped=function(T,l){if(l){var L=T.split("\n");for(var i=0;i<L.length;i++){L[i]=q.sap.encodeHTML(L[i])}T=L.join("<br>")}else{T=q.sap.encodeHTML(T)}this.aBuffer.push(T);return this};R.prototype.translate=function(k){};R.prototype.writeAcceleratorKey=function(){return this};R.prototype.addStyle=function(n,v){if(v!==undefined&&v!==null){var s=this.aStyleStack[this.aStyleStack.length-1];if(!s.aStyle){s.aStyle=[]}s.aStyle.push(n+":"+v)}return this};R.prototype.writeStyles=function(){var s=this.aStyleStack[this.aStyleStack.length-1];if(s.aStyle){this.write(" style=\""+s.aStyle.join(";")+"\" ")}s.aStyle=null;return this};R.prototype.addClass=function(n){if(n){var s=this.aStyleStack[this.aStyleStack.length-1];if(!s.aClasses){s.aClasses=[]}s.aClasses.push(n)}return this};R.prototype.writeClasses=function(e){var s=this.aStyleStack[this.aStyleStack.length-1];var C=e?e.aCustomStyleClasses:((e===false)?[]:s.aCustomStyleClasses);if(s.aClasses||C){var a=[].concat(s.aClasses||[],C||[]);a.sort();a=q.map(a,function(n,i){return(i==0||n!=a[i-1])?n:null});this.write(" class=\"",a.join(" "),"\" ")}if(!e){s.aCustomStyleClasses=null}s.aClasses=null;return this};R.prototype.writeControlData=function(C){this.writeElementData(C);return this};R.prototype.writeElementData=function(e){var s=e.getId();if(s){this.writeAttribute("id",s).writeAttribute("data-sap-ui",s)}var d=e.getCustomData();var l=d.length;for(var i=0;i<l;i++){var D=d[i];if(D.getWriteToDom()){var k=D.getKey();if(typeof D.getValue()==="string"){if((sap.ui.core.ID.isValid(k))&&(k.indexOf(":")==-1)&&(k.indexOf("sap-ui")!==0)){this.writeAttributeEscaped("data-"+k,D.getValue())}else{q.sap.log.error("CustomData with key "+k+" should be written to HTML of "+this+" but the key is not valid (must be a valid sap.ui.core.ID without any colon and may not start with 'sap-ui').")}}else{q.sap.log.error("CustomData with key "+k+" should be written to HTML of "+this+" but the value is not a string.")}}}return this};R.prototype.writeAttribute=function(n,v){this.write(" ",n,"=\"",v,"\"");return this};R.prototype.writeAttributeEscaped=function(n,v){this.writeAttribute(n,q.sap.escapeHTML(String(v)));return this};R.prototype.writeAccessibilityState=function(e,P){if(!sap.ui.getCore().getConfiguration().getAccessibility()){return this}if(arguments.length==1&&!(e instanceof sap.ui.core.Element)){P=e;e=null}var a={};if(e!=null){var m=e.getMetadata();m._enrichChildInfos();var b=function(E,A,v){var o=m.getAllProperties()[E];if(o&&e[o._sGetter]()===v){a[A]="true"}};var d=function(E,A){var o=m.getAllAssociations()[E];if(o&&o.multiple){var k=e[o._sGetter]();if(k.length>0){a[A]=k.join(" ")}}};b("editable","readonly",false);b("enabled","disabled",false);b("visible","hidden",false);b("required","required",true);b("selected","selected",true);b("checked","checked",true);d("ariaDescribedBy","describedby");d("ariaLabelledBy","labelledby")}if(P){var f=function(v){var i=typeof(v);return v===null||v===""||i==="number"||i==="string"||i==="boolean"};var g={};var x,h,i,j;for(x in P){h=P[x];if(f(h)){g[x]=h}else if(typeof(h)==="object"&&f(h.value)){j="";if(h.append&&(x==="describedby"||x==="labelledby")){j=a[x]?a[x]+" ":""}g[x]=j+h.value}}q.extend(a,g)}if(e instanceof sap.ui.core.Element&&e.getParent()&&e.getParent().enhanceAccessibilityState){e.getParent().enhanceAccessibilityState(e,a)}for(var p in a){if(a[p]!=null&&a[p]!==""){this.writeAttributeEscaped(p==="role"?p:"aria-"+p,a[p])}}return this};R.prototype.writeIcon=function(u,C,a){q.sap.require("sap.ui.core.IconPool");var i=sap.ui.core.IconPool.isIconURI(u),s=i?"<span ":"<img ",T=(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9),b,p,o;if(typeof C==="string"){C=[C]}if(i){o=sap.ui.core.IconPool.getIconInfo(u);if(!o){q.sap.log.error("An unregistered icon: "+u+" is used in sap.ui.core.RenderManager's writeIcon method.");return}if(!C){C=[]}C.push("sapUiIcon");if(!o.suppressMirroring){C.push("sapUiIconMirrorInRTL")}}this.write(s);if(q.isArray(C)&&C.length){b=C.join(" ");this.write("class=\""+b+"\" ")}if(i){if(!a){a={}}if(!T){a["data-sap-ui-icon-content"]=o.content}this.write("style=\"font-family: "+o.fontFamily+";\" ")}else{a=q.extend({role:"presentation",alt:"",src:u},a)}if(typeof a==="object"){for(p in a){if(a.hasOwnProperty(p)){this.writeAttributeEscaped(p,a[p])}}}this.write(i?">":"/>");if(i){T&&this.write(o.content);this.write("</span>")}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ResizeHandler')){jQuery.sap.declare('sap.ui.core.ResizeHandler');sap.ui.define("sap/ui/core/ResizeHandler",['jquery.sap.global','sap/ui/Global','sap/ui/base/Object','jquery.sap.act','jquery.sap.script'],function(q,G,B){"use strict";var l=q.sap.log.getLogger("sap.ui.core.ResizeHandler",q.sap.log.Level.ERROR);var c=null;var R=B.extend("sap.ui.core.ResizeHandler",{constructor:function(C){B.apply(this);c=C;this.aResizeListeners=[];this.bRegistered=false;this.iIdCounter=0;this.fDestroyHandler=q.proxy(this.destroy,this);q(window).bind("unload",this.fDestroyHandler);q.sap.act.attachActivate(i,this)}});function a(){if(this.bRegistered){this.bRegistered=false;sap.ui.getCore().detachIntervalTimer(this.checkSizes,this)}};function i(){if(!this.bRegistered&&this.aResizeListeners.length>0){this.bRegistered=true;sap.ui.getCore().attachIntervalTimer(this.checkSizes,this)}};R.prototype.destroy=function(e){q.sap.act.detachActivate(i,this);q(window).unbind("unload",this.fDestroyHandler);c=null;this.aResizeListeners=[];a.apply(this)};R.prototype.attachListener=function(r,h){var I=r instanceof sap.ui.core.Control,d=I?r.getDomRef():r,w=d?d.offsetWidth:0,H=d?d.offsetHeight:0,s="rs-"+new Date().valueOf()+"-"+this.iIdCounter++,b=(I?("Control "+r.getId()):(r.id?r.id:String(r)));this.aResizeListeners.push({sId:s,oDomRef:I?null:r,oControl:I?r:null,fHandler:h,iWidth:w,iHeight:H,dbg:b});l.debug("registered "+b);i.apply(this);return s};R.prototype.detachListener=function(I){var t=this;q.each(this.aResizeListeners,function(b,r){if(r.sId==I){t.aResizeListeners.splice(b,1);l.debug("deregistered "+I);return false}});if(this.aResizeListeners.length==0){a.apply(this)}};R.prototype.checkSizes=function(){var d=l.isLoggable();if(d){l.debug("checkSizes:")}q.each(this.aResizeListeners,function(b,r){if(r){var C=!!r.oControl,D=C?r.oControl.getDomRef():r.oDomRef;if(D&&q.contains(document.documentElement,D)){var o=r.iWidth,O=r.iHeight,n=D.offsetWidth,N=D.offsetHeight;if(o!=n||O!=N){r.iWidth=n;r.iHeight=N;var e=q.Event("resize");e.target=D;e.currentTarget=D;e.size={width:n,height:N};e.oldSize={width:o,height:O};e.control=C?r.oControl:null;if(d){l.debug("resize detected for '"+r.dbg+"': "+e.oldSize.width+"x"+e.oldSize.height+" -> "+e.size.width+"x"+e.size.height)}r.fHandler(e)}}}});if(R._keepActive!=true&&R._keepActive!=false){R._keepActive=false}if(!q.sap.act.isActive()&&!R._keepActive){a.apply(this)}};R.register=function(r,h){if(!c||!c.oResizeHandler){return null}return c.oResizeHandler.attachListener(r,h)};R.deregister=function(I){if(!c||!c.oResizeHandler){return}c.oResizeHandler.detachListener(I)};R.deregisterAllForControl=function(C){if(!c||!c.oResizeHandler){return}var I=[];q.each(c.oResizeHandler.aResizeListeners,function(b,r){if(r&&r.oControl&&r.oControl.getId()===C){I.push(r.sId)}});q.each(I,function(b,s){R.deregister(s)})};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIComponentMetadata')){jQuery.sap.declare('sap.ui.core.UIComponentMetadata');sap.ui.define("sap/ui/core/UIComponentMetadata",['jquery.sap.global','./ComponentMetadata'],function(q,C){"use strict";var U=function(c,o){C.apply(this,arguments)};U.prototype=q.sap.newObject(C.prototype);U.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};U.prototype.applySettings=function(c){C.prototype.applySettings.call(this,c);var s=c.metadata;this._mRootView=s.rootView;if(typeof this._mRootView==="string"){this._mRootView={viewName:this._mRootView,type:sap.ui.core.mvc.ViewType.XML}}this._mRouting=s.routing;var p=this.getParent();if(p instanceof U){if(p._mRootView){this._mRootView=q.extend(true,{},p._mRootView,this._mRootView)}this._mRouting=q.extend(true,{},p._mRouting,this._mRouting)}};U.prototype.getRootView=function(){return this._mRootView};U.prototype.getRoutingConfig=function(){return this._mRouting&&this._mRouting.config};U.prototype.getRoutes=function(){return this._mRouting&&this._mRouting.routes};return U},true)};if(!jQuery.sap.isDeclared('sap.ui.core.delegate.ItemNavigation')){jQuery.sap.declare('sap.ui.core.delegate.ItemNavigation');sap.ui.define("sap/ui/core/delegate/ItemNavigation",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var I=E.extend("sap.ui.core.delegate.ItemNavigation",{constructor:function(d,i,n){E.apply(this);this.oDomRef=null;if(d){this.setRootDomRef(d)}this.aItemDomRefs=[];if(i){this.setItemDomRefs(i)}this.iTabIndex=-1;this.iActiveTabIndex=!!n?-1:0;this.iFocusedIndex=-1;this.iSelectedIndex=-1;this.bCycling=true;this.bTableMode=false;this.iPageSize=-1;this._bMouseDownHappened=false;this.oDisabledModifiers={sapend:["alt","shift"],saphome:["alt","shift"]}}});I.Events={BeforeFocus:"BeforeFocus",AfterFocus:"AfterFocus",BorderReached:"BorderReached",FocusAgain:"FocusAgain"};I.prototype.setDisabledModifiers=function(d){this.oDisabledModifiers=d;return this};I.prototype.getDisabledModifiers=function(d){return this.oDisabledModifiers};I.prototype.hasDisabledModifier=function(e){var d=this.oDisabledModifiers[e.type.replace("modifiers","")];if(q.isArray(d)){for(var i=0;i<d.length;i++){if(e[d[i]+"Key"]){return true}}}return false};I.prototype.setRootDomRef=function(d){this.oDomRef=d;if(!q(this.oDomRef).data("sap.INItem")){if(this.iFocusedIndex>=0){q(this.oDomRef).attr("tabIndex",this.iTabIndex)}else{q(this.oDomRef).attr("tabIndex",this.iActiveTabIndex)}}q(this.oDomRef).data("sap.INRoot",this);return this};I.prototype.getRootDomRef=function(){return this.oDomRef};I.prototype.getItemDomRefs=function(){return this.aItemDomRefs};I.prototype.setItemDomRefs=function(a){this.aItemDomRefs=a;for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){var $=q(this.aItemDomRefs[i]);if(i==this.iFocusedIndex&&!$.data("sap.INRoot")){$.attr("tabIndex",this.iActiveTabIndex)}else if($.attr("tabindex")=="0"){$.attr("tabIndex",-1)}$.data("sap.INItem",true);$.data("sap.InNavArea",true);if($.data("sap.INRoot")&&i!=this.iFocusedIndex){$.data("sap.INRoot").setNestedItemsTabindex()}}}return this};I.prototype.setItemsTabindex=function(){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){var $=q(this.aItemDomRefs[i]);if($.is(":sapFocusable")){if(i==this.iFocusedIndex&&!$.data("sap.INRoot")){$.attr("tabIndex",this.iActiveTabIndex)}else{$.attr("tabIndex",-1)}}}}return this};I.prototype.setNestedItemsTabindex=function(){if(q(this.oDomRef).data("sap.INItem")){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]&&q(this.aItemDomRefs[i]).attr("tabindex")=="0"){q(this.aItemDomRefs[i]).attr("tabIndex",-1)}}}return this};I.prototype.destroy=function(){if(this.oDomRef){q(this.oDomRef).removeData("sap.INRoot");this.oDomRef=null}if(this.aItemDomRefs){for(var i=0;i<this.aItemDomRefs.length;i++){if(this.aItemDomRefs[i]){q(this.aItemDomRefs[i]).removeData("sap.INItem");q(this.aItemDomRefs[i]).removeData("sap.InNavArea")}}this.aItemDomRefs=null}this._bItemTabIndex=undefined};I.prototype.setCycling=function(c){this.bCycling=c;return this};I.prototype.setTableMode=function(t,T){this.bTableMode=t;this.bTableList=t?T:false;return this};I.prototype.setPageSize=function(p){this.iPageSize=p;return this};I.prototype.setSelectedIndex=function(i){this.iSelectedIndex=i;return this};I.prototype.setColumns=function(c,n){this.iColumns=c;this.bNoColumnChange=n;return this};I.prototype.setHomeEndColumnMode=function(s,c){this._bStayInRow=s;this._bCtrlEnabled=c};I.prototype.focusItem=function(i,e){q.sap.log.info("FocusItem: "+i+" iFocusedIndex: "+this.iFocusedIndex,"focusItem","ItemNavigation");if(i==this.iFocusedIndex&&this.aItemDomRefs[this.iFocusedIndex]==document.activeElement){this.fireEvent(I.Events.FocusAgain,{index:i,event:e});return}if(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":sapFocusable")){if(this.bTableMode){var c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_RIGHT){if(c<this.iColumns-1){i+=1}}else{if(c>1){i-=1}}this.focusItem(i,e)}return}this.fireEvent(I.Events.BeforeFocus,{index:i,event:e});this.setFocusedIndex(i);this.bISetFocus=true;if(q(this.aItemDomRefs[this.iFocusedIndex]).data("sap.INRoot")&&e){var o=q(this.aItemDomRefs[this.iFocusedIndex]).data("sap.INRoot");o._sFocusEvent=e.type}q.sap.log.info("Set Focus on ID: "+this.aItemDomRefs[this.iFocusedIndex].id,"focusItem","ItemNavigation");q.sap.focus(this.aItemDomRefs[this.iFocusedIndex]);this.fireEvent(I.Events.AfterFocus,{index:i,event:e})};I.prototype.setFocusedIndex=function(i){var $;if(i<0){i=0}if(i>this.aItemDomRefs.length-1){i=this.aItemDomRefs.length-1}q(this.oDomRef).attr("tabIndex",this.iTabIndex);if(this.iFocusedIndex!==-1&&this.aItemDomRefs.length>this.iFocusedIndex){q(this.aItemDomRefs[this.iFocusedIndex]).attr("tabIndex",-1);$=q(this.aItemDomRefs[this.iFocusedIndex]);if($.data("sap.INRoot")&&i!=this.iFocusedIndex){q($.data("sap.INRoot").aItemDomRefs[$.data("sap.INRoot").iFocusedIndex]).attr("tabIndex",-1)}}this.iFocusedIndex=i;var f=this.aItemDomRefs[this.iFocusedIndex];$=q(this.aItemDomRefs[this.iFocusedIndex]);if(!$.data("sap.INRoot")){q(f).attr("tabIndex",this.iActiveTabIndex)}return this};I.prototype.getFocusedDomRef=function(){return this.aItemDomRefs[this.iFocusedIndex]};I.prototype.getFocusedIndex=function(){return this.iFocusedIndex};I.prototype.onfocusin=function(e){var s=e.target;if(s==this.oDomRef){if(!this._bItemTabIndex){this.setItemsTabindex();this._bItemTabIndex=true}if(this._bMouseDownHappened){return}var a;if(q(this.oDomRef).data("sap.INItem")&&this._sFocusEvent&&!q(this.oDomRef).data("sap.InNavArea")){switch(this._sFocusEvent){case"sapnext":a=0;break;case"sapprevious":a=this.aItemDomRefs.length-1;break;default:a=this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0);break}this._sFocusEvent=undefined}else{a=this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0)}this.focusItem(a,e);if(this.iFocusedIndex==-1){for(var i=a+1;i<this.aItemDomRefs.length;i++){this.focusItem(i,e);if(this.iFocusedIndex==i){break}}if(this.iFocusedIndex==-1&&a>0){for(var i=a-1;i>=0;i--){this.focusItem(i,e);if(this.iFocusedIndex==i){break}}}}e.preventDefault();e.stopPropagation()}else if(!this.bISetFocus){if(this.aItemDomRefs&&e.target!=this.aItemDomRefs[this.iFocusedIndex]){for(var i=0;i<this.aItemDomRefs.length;i++){if(e.target==this.aItemDomRefs[i]){this.focusItem(i,e);break}}}else{this.fireEvent(I.Events.AfterFocus,{index:this.iFocusedIndex,event:e})}}this.bISetFocus=false};I.prototype.onsapfocusleave=function(e){if(!e.relatedControlId||!q.sap.containsOrEquals(this.oDomRef,sap.ui.getCore().byId(e.relatedControlId).getFocusDomRef())){this.setFocusedIndex(this.iSelectedIndex!=-1?this.iSelectedIndex:(this.iFocusedIndex!=-1?this.iFocusedIndex:0));if(q(this.oDomRef).data("sap.INItem")){var p,d=q(this.oDomRef);while(!p){d=d.parent();if(d.data("sap.INRoot")){p=d.get(0)}}if(!e.relatedControlId||q.sap.containsOrEquals(p,sap.ui.getCore().byId(e.relatedControlId).getFocusDomRef())){q(this.aItemDomRefs[this.iFocusedIndex]).attr("tabIndex",-1)}}var d=q(this.oDomRef);if(d.data("sap.InNavArea")===false){d.data("sap.InNavArea",true)}}};I.prototype.onmousedown=function(e){var s=e.target;if(q.sap.containsOrEquals(this.oDomRef,s)){for(var i=0;i<this.aItemDomRefs.length;i++){var o=this.aItemDomRefs[i];if(q.sap.containsOrEquals(o,s)){if(!this.bTableMode){this.focusItem(i,e)}else{if(o===s||!q(s).is(":sapFocusable")){this.focusItem(i,e)}}return}}if(s==this.oDomRef){this._bMouseDownHappened=true;var t=this;window.setTimeout(function(){t._bMouseDownHappened=false},20)}}};I.prototype.onsapnext=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(q(this.oDomRef).data("sap.InNavArea")){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.iFocusedIndex,f=true,b=false;if(i>-1){if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,R=Math.floor(i/this.iColumns),c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_DOWN){if(R<r-1){i+=this.iColumns}}else{if(c<this.iColumns-1){i+=1}}}else{do{if(this.iColumns>1&&e.keyCode==q.sap.KeyCodes.ARROW_DOWN){if((i+this.iColumns)>=this.aItemDomRefs.length){if(!this.bNoColumnChange){if((i%this.iColumns)<(this.iColumns-1)){i=(i%this.iColumns)+1}else if(this.bCycling){i=0}}else{i=this.iFocusedIndex;b=true}}else{i=i+this.iColumns}}else{if(i==this.aItemDomRefs.length-1){if(q(this.oDomRef).data("sap.INItem")){return}else if(this.bCycling){i=0}else{i=this.iFocusedIndex;b=true}}else{i++}}if(i===this.iFocusedIndex){if(f){f=false}else{throw new Error("ItemNavigation has no visible/existing items and is hence unable to select the next one")}}}while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable"))}this.focusItem(i,e);if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()}};I.prototype.onsapnextmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapnext(e)};I.prototype.onsapprevious=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(q(this.oDomRef).data("sap.InNavArea")){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.iFocusedIndex,f=true,b=false;if(i>-1){if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,R=Math.floor(i/this.iColumns),c=i%this.iColumns;if(e.keyCode==q.sap.KeyCodes.ARROW_UP){if(R>0){i-=this.iColumns}}else{if(c>0){i-=1}}}else{do{if(this.iColumns>1&&e.keyCode==q.sap.KeyCodes.ARROW_UP){if((i-this.iColumns)<0){if(!this.bNoColumnChange){var c=0;if((i%this.iColumns)>0){c=(i%this.iColumns)-1}else if(this.bCycling){c=this.iColumns-1}if(i===0&&c===0){i=0}else{var a=Math.ceil(this.aItemDomRefs.length/this.iColumns);i=c+((a-1)*this.iColumns);if(i>=this.aItemDomRefs.length){i=i-this.iColumns}}}else{i=this.iFocusedIndex;b=true}}else{i=i-this.iColumns}}else{if(i==0){if(q(this.oDomRef).data("sap.INItem")){return}else if(this.bCycling){i=this.aItemDomRefs.length-1}else{i=this.iFocusedIndex;b=true}}else{i--}}if(i==this.iFocusedIndex){if(f){f=false}else{throw new Error("ItemNavigation has no visible/existing items and is hence unable to select the previous one")}}}while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable"))}this.focusItem(i,e);if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()}};I.prototype.onsappreviousmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapprevious(e)};I.prototype.onsappageup=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;var b=false;if(this.iPageSize>0){i=this.iFocusedIndex;if(i>-1){i=i-this.iPageSize;while(i>0&&!q(this.aItemDomRefs[i]).is(":sapFocusable")){i--}if(i<0){if(!this.bNoColumnChange){i=0}else{i=this.iFocusedIndex;b=true}}this.focusItem(i,e)}}else if(this.bTableMode){i=this.iFocusedIndex%this.iColumns;this.focusItem(i,e)}if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()};I.prototype.onsappagedown=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;var b=false;if(this.iPageSize>0){i=this.iFocusedIndex;if(i>-1){i=i+this.iPageSize;while(i<this.aItemDomRefs.length-1&&!q(this.aItemDomRefs[i]).is(":sapFocusable")){i++}if(i>this.aItemDomRefs.length-1){if(!this.bNoColumnChange){i=this.aItemDomRefs.length-1}else{i=this.iFocusedIndex;b=true}}this.focusItem(i,e)}}else if(this.bTableMode){var r=this.aItemDomRefs.length/this.iColumns,c=this.iFocusedIndex%this.iColumns;i=(r-1)*this.iColumns+c;this.focusItem(i,e)}if(b){this.fireEvent(I.Events.BorderReached,{index:i,event:e})}e.preventDefault();e.stopPropagation()};I.prototype.onsaphome=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=0;if(this.bTableMode){if(!this.bTableList&&!(e.metaKey||e.ctrlKey)){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns}}else{if(!!(e.metaKey||e.ctrlKey)&&!this._bCtrlEnabled){return}if(this._bStayInRow&&!(this._bCtrlEnabled&&(e.metaKey||e.ctrlKey))&&this.iColumns>0){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns}else{while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")==="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable")){i++;if(i==this.aItemDomRefs.length){return}}}}this.focusItem(i,e);e.preventDefault();e.stopPropagation()};I.prototype.onsaphomemodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsaphome(e)};I.prototype.onsapend=function(e){if(!q.sap.containsOrEquals(this.oDomRef,e.target)){return}if(this.bTableMode&&q.inArray(e.target,this.aItemDomRefs)===-1){return}var i=this.aItemDomRefs.length-1;if(this.bTableMode){if(!this.bTableList&&!(e.metaKey||e.ctrlKey)){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=r*this.iColumns+this.iColumns-1}}else{if(!!(e.metaKey||e.ctrlKey)&&!this._bCtrlEnabled){return}if(this._bStayInRow&&!(this._bCtrlEnabled&&(e.metaKey||e.ctrlKey))&&this.iColumns>0){var r=Math.floor(this.iFocusedIndex/this.iColumns);i=(r+1)*this.iColumns-1;if(i>=this.aItemDomRefs.length){i=this.aItemDomRefs.length-1}}else{while(!this.aItemDomRefs[i]||!q(this.aItemDomRefs[i]).is(":visible")||q(this.aItemDomRefs[i]).css("visibility")=="hidden"||!q(this.aItemDomRefs[i]).is(":sapFocusable")){i--;if(i<0){return}}}}this.focusItem(i,e);e.preventDefault();e.stopPropagation()};I.prototype.onsapendmodifiers=function(e){if(this.hasDisabledModifier(e)){return}this.onsapend(e)};I.prototype.setTabIndex0=function(){this.iTabIndex=0;this.iActiveTabIndex=0};I.prototype.onkeyup=function(e){if(e.keyCode==q.sap.KeyCodes.F2){var d=q(this.oDomRef);if(d.data("sap.InNavArea")){d.data("sap.InNavArea",false)}else if(d.data("sap.InNavArea")===false){d.data("sap.InNavArea",true)}e.preventDefault();e.stopPropagation()}};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.core.format.DateFormat')){jQuery.sap.declare('sap.ui.core.format.DateFormat');sap.ui.define("sap/ui/core/format/DateFormat",['jquery.sap.global','sap/ui/core/LocaleData'],function(q,L){"use strict";var D=function(){throw new Error()};D.oDateInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"yyyy-MM-dd"},{pattern:"yyyyMMdd"}],getPattern:function(l,s){return l.getDatePattern(s)},oRequiredParts:{"text":true,"year":true,"weekYear":true,"month":true,"day":true}};D.oDateTimeInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"yyyy-MM-dd'T'hh:mm:ss"},{pattern:"yyyyMMdd hhmmss"}],getPattern:function(l,s){var d=l.getDateTimePattern(s),a=l.getDatePattern(s),t=l.getTimePattern(s);return d.replace("{1}",a).replace("{0}",t)},oRequiredParts:{"text":true,"year":true,"weekYear":true,"month":true,"day":true,"hour0_23":true,"hour1_24":true,"hour0_11":true,"hour1_12":true}};D.oTimeInfo={oDefaultFormatOptions:{style:"medium"},aFallbackFormatOptions:[{style:"short"},{style:"medium"},{pattern:"hh:mm:ss"},{pattern:"hhmmss"}],getPattern:function(l,s){return l.getTimePattern(s)},oRequiredParts:{"text":true,"hour0_23":true,"hour1_24":true,"hour0_11":true,"hour1_12":true}};D.getInstance=function(f,l){return this.getDateInstance(f,l)};D.getDateInstance=function(f,l){return this.createInstance(f,l,this.oDateInfo)};D.getDateTimeInstance=function(f,l){return this.createInstance(f,l,this.oDateTimeInfo)};D.getTimeInstance=function(f,l){return this.createInstance(f,l,this.oTimeInfo)};D.createInstance=function(f,l,I){var F=q.sap.newObject(this.prototype);if(f instanceof sap.ui.core.Locale){l=f;f=undefined}if(!l){l=sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale()}F.oLocale=l;F.oLocaleData=L.getInstance(l);F.oFormatOptions=q.extend(false,{},I.oDefaultFormatOptions,f);if(!F.oFormatOptions.pattern){F.oFormatOptions.pattern=I.getPattern(F.oLocaleData,F.oFormatOptions.style)}if(!I.aFallbackFormats){I.aFallbackFormats=[];q.each(I.aFallbackFormatOptions,function(i,f){var o=D.createInstance(f,l,I);o.bIsFallback=true;I.aFallbackFormats.push(o)})}F.aFallbackFormats=I.aFallbackFormats;F.oRequiredParts=I.oRequiredParts;F.init();return F};D.prototype.init=function(){this.aMonthsAbbrev=this.oLocaleData.getMonths("abbreviated");this.aMonthsWide=this.oLocaleData.getMonths("wide");this.aMonthsAbbrevSt=this.oLocaleData.getMonthsStandAlone("abbreviated");this.aMonthsWideSt=this.oLocaleData.getMonthsStandAlone("wide");this.aDaysAbbrev=this.oLocaleData.getDays("abbreviated");this.aDaysWide=this.oLocaleData.getDays("wide");this.aDaysAbbrevSt=this.oLocaleData.getDaysStandAlone("abbreviated");this.aDaysWideSt=this.oLocaleData.getDaysStandAlone("wide");this.aDayPeriods=this.oLocaleData.getDayPeriods("abbreviated");this.aFormatArray=this.parseJavaDateFormat(this.oFormatOptions.pattern)};D.prototype.oStates={"G":"era","y":"year","Y":"weekYear","M":"month","L":"monthStandalone","w":"weekInYear","W":"weekInMonth","D":"dayInYear","d":"day","F":"dayOfWeekInMonth","E":"dayNameInWeek","c":"dayNameInWeekStandalone","u":"dayNumberOfWeek","a":"amPmMarker","H":"hour0_23","k":"hour1_24","K":"hour0_11","h":"hour1_12","m":"minute","s":"second","S":"millisecond","z":"timezoneGeneral","Z":"timezoneRFC822","X":"timezoneISO8601"};D.prototype.format=function(d,u){if(u===undefined){u=this.oFormatOptions.UTC}var b=[],p,a=u?d.getUTCDay():d.getDay(),c=u?d.getUTCDate():d.getDate(),m=u?d.getUTCMonth():d.getMonth(),y=u?d.getUTCFullYear():d.getFullYear(),M=u?d.getUTCMilliseconds():d.getMilliseconds(),s=u?d.getUTCSeconds():d.getSeconds(),e=u?d.getUTCMinutes():d.getMinutes(),h=u?d.getUTCHours():d.getHours(),t=Math.abs(d.getTimezoneOffset()),P=d.getTimezoneOffset()>0,H=Math.floor(t/60),f=t%60,Y,w,g,r;for(var i=0;i<this.aFormatArray.length;i++){p=this.aFormatArray[i];switch(p.sType){case"text":b.push(p.sValue);break;case"day":b.push(q.sap.padLeft(String(c),"0",p.iDigits));break;case"dayNameInWeek":if(p.iDigits<4){b.push(this.aDaysAbbrev[a])}else if(p.iDigits>=4){b.push(this.aDaysWide[a])}break;case"dayNameInWeekStandalone":if(p.iDigits<4){b.push(this.aDaysAbbrevSt[a])}else if(p.iDigits>=4){b.push(this.aDaysWideSt[a])}break;case"dayNumberOfWeek":b.push(a||7);break;case"month":if(p.iDigits==3){b.push(this.aMonthsAbbrev[m])}else if(p.iDigits>=4){b.push(this.aMonthsWide[m])}else{b.push(q.sap.padLeft(String(m+1),"0",p.iDigits))}break;case"monthStandalone":if(p.iDigits==3){b.push(this.aMonthsAbbrevSt[m])}else if(p.iDigits>=4){b.push(this.aMonthsWideSt[m])}else{b.push(q.sap.padLeft(String(m+1),"0",p.iDigits))}break;case"era":b.push("AD");break;case"year":case"weekYear":Y=""+y;if(p.iDigits==2&&Y.length>2){Y=Y.substr(Y.length-2)}b.push(q.sap.padLeft(Y,"0",p.iDigits));break;case"weekInYear":w="";if(d.getWeek){w+=d.getWeek()}b.push(q.sap.padLeft(w,"0",p.iDigits));break;case"hour0_23":b.push(q.sap.padLeft(String(h),"0",p.iDigits));break;case"hour1_24":if(h==0){g="24"}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"hour0_11":if(h>11){g=String(h-12)}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"hour1_12":if(h>12){g=String(h-12)}else if(h==0){g="12"}else{g=String(h)}b.push(q.sap.padLeft(g,"0",p.iDigits));break;case"minute":b.push(q.sap.padLeft(String(e),"0",p.iDigits));break;case"second":b.push(q.sap.padLeft(String(s),"0",p.iDigits));break;case"millisecond":b.push(q.sap.padRight(q.sap.padLeft(String(M),"0",Math.min(3,p.iDigits)),"0",p.iDigits));break;case"amPmMarker":var j=h<12?0:1;b.push(this.aDayPeriods[j]);break;case"timezoneGeneral":if(p.iDigits>3&&d.getTimezoneLong){b.push(d.getTimezoneLong());break}else if(d.getTimezoneShort){b.push(d.getTimezoneShort());break}b.push("GMT");case"timezoneISO8601":if(!u&&t!=0){b.push(P?"-":"+");b.push(q.sap.padLeft(String(H),"0",2));b.push(":");b.push(q.sap.padLeft(String(f),"0",2))}else{b.push("Z")}break;case"timezoneRFC822":if(!u&&t!=0){b.push(P?"-":"+");b.push(q.sap.padLeft(String(H),"0",2));b.push(q.sap.padLeft(String(f),"0",2))}break}}r=b.join("");if(sap.ui.getCore().getConfiguration().getOriginInfo()){r=new String(r);r.originInfo={source:"Common Locale Data Repository",locale:this.oLocale.toString(),style:this.oFormatOptions.style,pattern:this.oFormatOptions.pattern}}return r};D.prototype.parse=function(v,u){if(u===undefined){u=this.oFormatOptions.UTC}var d,I=0,e=false,a=null,m=null,y=null,h=null,M=null,s=null,b=null,p=false,P,c,t=null,V=true,r=this.oRequiredParts;function f(x){return x>=48&&x<=57}function g(x){var z=0;while(z<x&&f(v.charCodeAt(I+z))){z++}return v.substr(I,z)}function j(x){var i;for(i=0;i<x.length;i++){if(v.indexOf(x[i],I)==I){return x[i]}}return null}function k(x){var i;for(i=0;i<x.length;i++){if(v.indexOf(x[i],I)==I){return i}}return null}function l(x){var z=v.charAt(I)=="+"?-1:1;I++;c=g(2);var B=parseInt(c,10);I=I+2;if(x){I++}c=g(2);I=I+2;t=parseInt(c,10);t=(t+60*B)*z}function n(x,z){if(x in r&&z){V=false}}v=q.trim(v);for(var i=0;i<this.aFormatArray.length;i++){P=this.aFormatArray[i];switch(P.sType){case"text":if(v.indexOf(P.sValue,I)==I){I+=P.sValue.length}else{n(P.sType,this.aFormatArray[i+1].sType in r)}break;case"day":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;a=parseInt(c,10);break;case"dayNameInWeek":case"dayNameInWeekStandalone":c=j(this.aDaysWide);if(c){I+=c.length;break}c=j(this.aDaysWideSt);if(c){I+=c.length;break}c=j(this.aDaysAbbrev);if(c){I+=c.length;break}c=j(this.aDaysAbbrevSt);if(c){I+=c.length;break}break;case"dayNumberOfWeek":c=g(P.iDigits);I+=c.length;break;case"month":case"monthStandalone":if(P.iDigits<3){c=g(Math.max(P.iDigits,2));n(P.sType,c==="");m=parseInt(c,10)-1;I+=c.length}else{m=k(this.aMonthsWide);if(m!=null){I+=this.aMonthsWide[m].length;break}m=k(this.aMonthsWideSt);if(m!=null){I+=this.aMonthsWideSt[m].length;break}m=k(this.aMonthsAbbrev);if(m!=null){I+=this.aMonthsAbbrev[m].length;break}m=k(this.aMonthsAbbrevSt);if(m!=null){I+=this.aMonthsAbbrevSt[m].length;break}n(P.sType,true)}break;case"era":break;case"year":case"weekYear":if(P.iDigits==1){c=g(4)}else if(P.iDigits==2){c=g(2)}else{c=g(P.iDigits)}I+=c.length;n(P.sType,c==="");y=parseInt(c,10);if(c.length<=2){var C=new Date().getFullYear(),o=Math.floor(C/100),Y=o*100+y-C;if(Y<-70){y+=(o+1)*100}else if(Y<30){y+=o*100}else{y+=(o-1)*100}}break;case"weekInYear":break;case"hour0_23":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);break;case"hour1_24":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);if(h==24){h=0}break;case"hour0_11":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);break;case"hour1_12":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;h=parseInt(c,10);if(h==12){h=0;p=true}break;case"minute":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;M=parseInt(c,10);break;case"second":c=g(Math.max(P.iDigits,2));n(P.sType,c==="");I+=c.length;s=parseInt(c,10);break;case"millisecond":c=g(Math.max(P.iDigits,3));I+=c.length;c=q.sap.padRight(c,"0",3);b=parseInt(c,10);break;case"amPmMarker":var A=this.aDayPeriods[0],w=this.aDayPeriods[1];if(v.indexOf(A,I)==I){p=false;I+=2}else if(v.indexOf(w,I)==I){p=true;I+=2}break;case"timezoneGeneral":var T=v.substring(I,I+3);if(T==="GMT"||T==="UTC"){I=I+3}else if(v.substring(I,I+2)==="UT"){I=I+2}else if(v.charAt(I)=="Z"){I=I+1;t=0;break}else{q.sap.log.error(v+" cannot be parsed correcly by sap.ui.core.format.DateFormat: The given timezone is not supported!");break}case"timezoneISO8601":if(v.charAt(I)=="Z"){I=I+1;t=0;break}l(true);break;case"timezoneRFC822":l(false);break}if(!V){break}}if(I<v.length){V=false}if(p){h+=12}if(V){if(t!=null){d=new Date(0);d.setUTCFullYear(y||1970);d.setUTCMonth(m||0);d.setUTCDate(a||1);d.setUTCHours(h||0);d.setUTCMinutes((M||0)+t);d.setUTCSeconds(s||0);d.setUTCMilliseconds(b||0)}else if(u){d=new Date(0);d.setUTCFullYear(y||1970);d.setUTCMonth(m||0);d.setUTCDate(a||1);d.setUTCHours(h||0);d.setUTCMinutes(M||0);d.setUTCSeconds(s||0);d.setUTCMilliseconds(b||0)}else{d=new Date(1970,0,1,0,0,0);d.setFullYear(y||1970);d.setMonth(m||0);d.setDate(a||1);d.setHours(h||0);d.setMinutes(M||0);d.setSeconds(s||0);d.setMilliseconds(b||0)}return d}if(!this.bIsFallback){q.each(this.aFallbackFormats,function(i,F){d=F.parse(v,u);if(d){return false}});return d}return null};D.prototype.parseJavaDateFormat=function(f){var F=[],i,Q=false,c=null,s="",n="";for(i=0;i<f.length;i++){var C=f.charAt(i),N,p,P;if(Q){if(C=="'"){p=f.charAt(i-1);P=f.charAt(i-2);N=f.charAt(i+1);if(p=="'"&&P!="'"){Q=false}else if(N=="'"){i+=1}else{Q=false;continue}}if(s=="text"){c.sValue+=C}else{c={sType:"text",sValue:C};F.push(c);s="text"}}else{if(C=="'"){Q=true}else if(this.oStates[C]){n=this.oStates[C];if(s==n){c.iDigits++}else{c={sType:n,iDigits:1};F.push(c);s=n}}else{if(s=="text"){c.sValue+=C}else{c={sType:"text",sValue:C};F.push(c);s="text"}}}}return F};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.format.NumberFormat')){jQuery.sap.declare('sap.ui.core.format.NumberFormat');sap.ui.define("sap/ui/core/format/NumberFormat",['jquery.sap.global','sap/ui/core/LocaleData'],function(q,L){"use strict";var N=sap.ui.base.Object.extend("sap.ui.core.format.NumberFormat",{constructor:function(f){throw new Error()}});N.INTEGER=0;N.FLOAT=1;N.CURRENCY=2;N.PERCENT=3;N.oDefaultIntegerFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:0,maxFractionDigits:0,groupingEnabled:false,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:true,type:N.INTEGER,showMeasure:false};N.oDefaultFloatFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:0,maxFractionDigits:99,groupingEnabled:true,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:false,type:N.FLOAT,showMeasure:false};N.oDefaultCurrencyFormat={minIntegerDigits:1,maxIntegerDigits:99,minFractionDigits:2,maxFractionDigits:2,groupingEnabled:true,groupingSeparator:",",decimalSeparator:".",plusSign:"+",minusSign:"-",isInteger:false,type:N.CURRENCY,showMeasure:true};N.getInstance=function(f,l){return this.getFloatInstance(f,l)};N.getFloatInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.FLOAT);F.oFormatOptions=q.extend(false,{},this.oDefaultFloatFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.getIntegerInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.INTEGER);F.oFormatOptions=q.extend(false,{},this.oDefaultIntegerFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.getCurrencyInstance=function(f,l){var F=this.createInstance(f,l),o=this.getLocaleFormatOptions(F.oLocaleData,N.CURRENCY);F.oFormatOptions=q.extend(false,{},this.oDefaultCurrencyFormat,o,f);if(f&&f.pattern){F.oFormatOptions=q.extend(false,F.oFormatOptions,this.parseNumberPattern(f.pattern))}return F};N.createInstance=function(f,l){var F=q.sap.newObject(this.prototype);if(f instanceof sap.ui.core.Locale){l=f;f=undefined}if(!l){l=sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale()}F.oLocale=l;F.oLocaleData=L.getInstance(l);return F};N.getLocaleFormatOptions=function(l,t){var o={},n;if(t==N.CURRENCY){n=l.getCurrencyPattern();o=this.parseNumberPattern(n)}o.plusSign=l.getNumberSymbol("plusSign");o.minusSign=l.getNumberSymbol("minusSign");o.decimalSeparator=l.getNumberSymbol("decimal");o.groupingSeparator=l.getNumberSymbol("group");o.pattern=n;return o};N.parseNumberPattern=function(f){var m=0;var M=0;var a=0;var g=false;var s=0;for(var i=0;i<f.length;i++){var c=f[i];if(c===","){g=true;continue}else if(c==="."){s=1;continue}else if(s==0&&c==="0"){m++}else if(s==1){if(c==="0"){M++;a++}else if(c==="#"){a++}}}return{minIntegerDigits:m,minFractionDigits:M,maxFractionDigits:a,groupingEnabled:g}};N.prototype.format=function(v,m){var n=this.convertToDecimal(v),i="",f="",g="",r="",p=0,l=0,b=v<0,d=-1,o=this.oFormatOptions;if(n=="NaN"){return n}if(o.type==N.CURRENCY){var D=this.oLocaleData.getCurrencyDigits(m);o.maxFractionDigits=D;o.minFractionDigits=D}if(b){n=n.substr(1)}d=n.indexOf(".");if(d>-1){i=n.substr(0,d);f=n.substr(d+1)}else{i=n}if(i.length<o.minIntegerDigits){i=q.sap.padLeft(i,"0",o.minIntegerDigits)}else if(i.length>o.maxIntegerDigits){i=q.sap.padLeft("","?",o.maxIntegerDigits)}if(f.length<o.minFractionDigits){f=q.sap.padRight(f,"0",o.minFractionDigits)}else if(f.length>o.maxFractionDigits){f=f.substr(0,o.maxFractionDigits)}l=i.length;if(o.groupingEnabled&&l>3){p=l%3||3;g=i.substr(0,p);while(p<i.length){g+=o.groupingSeparator;g+=i.substr(p,3);p+=3}i=g}if(b){r=o.minusSign}r+=i;if(f){r+=o.decimalSeparator+f}if(m&&o.showMeasure){if(o.type==N.CURRENCY){var c='\u00a4';var P=o.pattern;P=P.replace(/\u00a4/,this.oLocaleData.getCurrencySymbol(m));P=P.replace(/[0#.,]+/,r);r=P}}if(sap.ui.getCore().getConfiguration().getOriginInfo()){r=new String(r);r.originInfo={source:"Common Locale Data Repository",locale:this.oLocale.toString()}}return r};N.prototype.parse=function(v){var o=this.oFormatOptions,r="^\\s*([+-]?(?:[0-9\\"+o.groupingSeparator+"]+|[0-9\\"+o.groupingSeparator+"]*\\"+o.decimalSeparator+"[0-9]+)([eE][+-][0-9]+)?)\\s*$",R="^\\s*([+-]?[0-9\\"+o.groupingSeparator+"]+)\\s*$",g=new RegExp("\\"+o.groupingSeparator,"g"),d=new RegExp("\\"+o.decimalSeparator,"g"),a,b=0;v=v.replace(/\s/g,"");if(o.isInteger){a=new RegExp(R)}else{a=new RegExp(r)}if(!a.test(v)){return NaN}v=v.replace(g,"");if(o.isInteger){b=parseInt(v,10)}else{v=v.replace(d,".");b=parseFloat(v)}return b};N.prototype.convertToDecimal=function(v){var V=""+v,n,b,d,f,e,p;if(V.indexOf("e")==-1&&V.indexOf("E")==-1){return V}var r=V.match(/^([+-]?)((\d+)(?:\.(\d+))?)[eE]([+-]?\d+)$/);n=r[1]=="-";b=r[2].replace(/\./g,"");d=r[3]?r[3].length:0;f=r[4]?r[4].length:0;e=parseInt(r[5],10);if(e>0){if(e<f){p=d+e;V=b.substr(0,p)+"."+b.substr(p)}else{V=b;e-=f;for(var i=0;i<e;i++){V+="0"}}}else{if(-e<d){p=d+e;V=b.substr(0,p)+"."+b.substr(p)}else{V=b;e+=d;for(var i=0;i>e;i--){V="0"+V}V="0."+V}}if(n){V="-"+V}return V};return N},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.Controller')){jQuery.sap.declare('sap.ui.core.mvc.Controller');sap.ui.define("sap/ui/core/mvc/Controller",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var r={};var C=E.extend("sap.ui.core.mvc.Controller",{constructor:function(n){var t=null;if(typeof(n)=="string"){if(!r[n]){q.sap.require({modName:n,type:"controller"});if(!r[n]){throw new Error("Controller type "+n+" is still undefined after trying to load it.")}}t=r[n]}E.apply(this,arguments);if(t){q.extend(this,r[n])}}});var c={"onInit":true,"onExit":false,"onBeforeRendering":false,"onAfterRendering":true};function e(o,n){var a;if(sap.ui.core.CustomizingConfiguration){var b=sap.ui.core.CustomizingConfiguration.getControllerExtension(n);if(b){var s=b.controllerName;q.sap.log.info("Customizing: Controller '"+n+"' is now extended by '"+s+"'");if(!r[s]&&!q.sap.getObject(s)){q.sap.require({modName:s,type:"controller"})}if(!r[s]&&!q.sap.getObject(s)){q.sap.log.error("Attempt to load Extension Controller "+s+" was not successful - is the Controller correctly defined in its file?")}if(a=r[s]){for(var m in a){if(c[m]!==undefined){var O=o[m];if(O&&typeof O==="function"){(function(m,O){o[m]=function(){if(c[m]){O.apply(o,arguments);a[m].apply(o,arguments)}else{a[m].apply(o,arguments);O.apply(o,arguments)}}})(m,O)}else{o[m]=a[m]}}else{o[m]=a[m]}}return o}else{}}else{q.sap.log.debug("Customizing: no Controller extension found for Controller '"+n+"'.")}}return o}sap.ui.controller=function(n,o){if(!n){throw new Error("Controller name ('sName' parameter) is required")}if(!o){if(!r[n]&&!q.sap.getObject(n)){q.sap.require({modName:n,type:"controller"})}if(r[n]){var a=new C(n);a=e(a,n);return a}else{var b=q.sap.getObject(n);if(typeof b==="function"&&b.prototype instanceof C){var a=new b();a=e(a,n);return a}}throw new Error("Controller "+n+" couldn't be instantiated")}else{r[n]=o}};C.prototype.getView=function(){return this.oView};C.prototype.byId=function(i){return this.oView?this.oView.byId(i):undefined};C.prototype.createId=function(i){return this.oView?this.oView.createId(i):undefined};C.prototype.getOwnerComponent=function(){q.sap.require("sap.ui.core.Component");var v=sap.ui.core.Component.getOwnerIdFor(this.getView());if(v===undefined){return undefined}return sap.ui.component(v)};C.prototype.connectToView=function(v){this.oView=v;if(this.onInit){v.attachAfterInit(this.onInit,this)}if(this.onExit){v.attachBeforeExit(this.onExit,this)}if(this.onAfterRendering){v.attachAfterRendering(this.onAfterRendering,this)}if(this.onBeforeRendering){v.attachBeforeRendering(this.onBeforeRendering,this)}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.HTMLViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.HTMLViewRenderer');sap.ui.define("sap/ui/core/mvc/HTMLViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var H={};H.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiHTMLView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var h=c._oTemplate.innerHTML;var b=c.getContent();var d=[];var e=function(c){var t=H._getHTML(a,c,h);if(t){h=t}else{d.push(c)}};if(b){if(q.isArray(b)){for(var i=0;i<b.length;i++){e(b[i])}}else if(b){e(b)}}a.write(h);for(var i=0;i<d.length;i++){a.renderControl(d[i])}a.write("</div>")};H._getHTML=function(r,c,h){var i=c.getId();h=h.replace(/(<div)/gi,"\n$1");var a=new RegExp('<div.*?data-sap-ui-id="'+i+'".*?></div>',"gi");var m=a.exec(h);if(m){h=h.replace(m[0],r.getHTML(c));return h}else{return""}};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSONViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.JSONViewRenderer');sap.ui.define("sap/ui/core/mvc/JSONViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var J={};J.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiJSONView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var b=c.getContent();if(b){if(b.length&&!(b instanceof sap.ui.core.Control)){for(var i=0;i<b.length;i++){a.renderControl(b[i])}}else{a.renderControl(c.getContent())}}a.write("</div>")};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.JSViewRenderer');sap.ui.define("sap/ui/core/mvc/JSViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var J={};J.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiJSView");V.addDisplayClass(a,c);if(c.getWidth()){a.addStyle("width",c.getWidth())}if(c.getHeight()){a.addStyle("height",c.getHeight())}a.writeStyles();a.writeClasses();a.write(">");var b=c.getContent();if(b){if(q.isArray(b)){for(var i=0;i<b.length;i++){a.renderControl(b[i])}}else if(b){a.renderControl(b)}}a.write("</div>")};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.TemplateViewRenderer')){jQuery.sap.declare('sap.ui.core.mvc.TemplateViewRenderer');sap.ui.define("sap/ui/core/mvc/TemplateViewRenderer",['jquery.sap.global','./ViewRenderer'],function(q,V){"use strict";var T={};T.render=function(r,c){var a=r;a.write("<div");a.writeControlData(c);a.addClass("sapUiView");a.addClass("sapUiTmplView");V.addDisplayClass(a,c);a.addStyle("width",c.getWidth());a.addStyle("height",c.getHeight());a.writeStyles();a.writeClasses();a.write(">");a.renderControl(c._oTemplate);a.write("</div>")};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.HashChanger')){
// Copyright (c) 2013 SAP SE, All Rights Reserved
jQuery.sap.declare('sap.ui.core.routing.HashChanger');jQuery.sap.require('sap.ui.thirdparty.signals');jQuery.sap.require('sap.ui.thirdparty.hasher');sap.ui.define("sap/ui/core/routing/HashChanger",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/thirdparty/signals','sap/ui/thirdparty/hasher'],function(q,E,s,h){"use strict";var H=E.extend("sap.ui.core.routing.HashChanger",{constructor:function(){E.apply(this)}});H.prototype.init=function(){if(this._initialized){q.sap.log.info("this HashChanger instance has already been initialized.");return false}hasher.changed.add(this.fireHashChanged,this);if(!hasher.isActive()){hasher.initialized.addOnce(this.fireHashChanged,this);hasher.init()}else{this.fireHashChanged(hasher.getHash())}this._initialized=true;return this._initialized};H.prototype.fireHashChanged=function(n,o){this.fireEvent("hashChanged",{newHash:n,oldHash:o})};H.prototype.setHash=function(a){this.fireEvent("hashSet",{sHash:a});hasher.setHash(a)};H.prototype.replaceHash=function(a){this.fireEvent("hashReplaced",{sHash:a});hasher.replaceHash(a)};H.prototype.getHash=function(){return hasher.getHash()};H.prototype.destroy=function(){hasher.changed.remove(this.fireHashChanged,this);E.prototype.destroy.apply(this,arguments)};(function(){var _=null;H.getInstance=function(){if(!_){_=new H()}return _};H.replaceHashChanger=function(o){if(_){q.extend(o.mEventRegistry,_.mEventRegistry);_.destroy()}_=o}}());return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.History')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.routing.History');sap.ui.define("sap/ui/core/routing/History",['jquery.sap.global','./HashChanger'],function(q,H){"use strict";var a=function(h){this._iHistoryLength=window.history.length;this.aHistory=[];this._bIsInitial=true;if(!h){q.sap.log.error("sap.ui.core.routing.History constructor was called and it did not get a hashChanger as parameter")}this._oHashChanger=h;this._oHashChanger.attachEvent("hashChanged",this._onHashChange,this);this._oHashChanger.attachEvent("hashReplaced",this._hashReplaced,this);this._oHashChanger.attachEvent("hashSet",this._hashSet,this);this._reset()};a.prototype.destroy=function(n){this._oHashChanger.detachEvent("hashChanged",this._onHashChange,this);this._oHashChanger.detachEvent("hashReplaced",this._hashReplaced,this);this._oHashChanger.detachEvent("hashSet",this._hashSet,this);this._oHashChanger=null};a.prototype.getDirection=function(n){if(n!==undefined&&this._bIsInitial){return undefined}if(n===undefined){return this._sCurrentDirection}return this._getDirection(n)};a.prototype.getPreviousHash=function(){return this.aHistory[this.iHistoryPosition-1]};a.prototype._reset=function(){this.aHistory.length=0;this.iHistoryPosition=0;this._bUnknown=true;this.aHistory[0]=this._oHashChanger.getHash()};a.prototype._getDirection=function(n,h){var d=sap.ui.core.routing.HistoryDirection;if(this._oNextHash&&this._oNextHash.sHash===n){return d.NewEntry}if(this._bUnknown){return d.Unknown}if(h){return d.NewEntry}if(this.aHistory[this.iHistoryPosition+1]===n&&this.aHistory[this.iHistoryPosition-1]===n){return d.Unknown}if(this.aHistory[this.iHistoryPosition-1]===n){return d.Backwards}if(this.aHistory[this.iHistoryPosition+1]===n){return d.Forwards}return d.Unknown};a.prototype._onHashChange=function(e){this._hashChange(e.getParameter("newHash"))};a.prototype._hashChange=function(n){var d=sap.ui.core.routing.HistoryDirection,b=window.history.length,D;if(this._oNextHash&&this._oNextHash.bWasReplaced&&this._oNextHash.sHash===n){this.aHistory[this.iHistoryPosition]=n;this._oNextHash=null;return}this._bIsInitial=false;D=this._sCurrentDirection=this._getDirection(n,this._iHistoryLength<window.history.length);if(this._oNextHash&&!this._oNextHash.bWasReplaced){this._iHistoryLength=b+1}else{this._iHistoryLength=b}if(this._oNextHash){this._oNextHash=null}if(D===d.Unknown){this._reset();return}this._bUnknown=false;if(D===d.NewEntry){if(this.iHistoryPosition+1<this.aHistory.length){this.aHistory=this.aHistory.slice(0,this.iHistoryPosition+1)}this.aHistory.push(n);this.iHistoryPosition+=1;return}if(D===d.Forwards){this.iHistoryPosition++;return}if(D===d.Backwards){this.iHistoryPosition--}};a.prototype._hashSet=function(e){this._hashChangedByApp(e.getParameter("sHash"),false)};a.prototype._hashReplaced=function(e){this._hashChangedByApp(e.getParameter("sHash"),true)};a.prototype._hashChangedByApp=function(n,w){this._oNextHash={sHash:n,bWasReplaced:w}};(function(){var i=new a(H.getInstance());a.getInstance=function(){return i}}());return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.Route')){jQuery.sap.declare('sap.ui.core.routing.Route');jQuery.sap.require('sap.ui.thirdparty.crossroads');jQuery.sap.require('sap.ui.thirdparty.signals');sap.ui.define("sap/ui/core/routing/Route",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/thirdparty/crossroads','sap/ui/thirdparty/signals'],function(q,E,c,s){"use strict";var R=E.extend("sap.ui.core.routing.Route",{constructor:function(r,C,p){if(!C.name){q.sap.log.error("A name has to be specified for every route")}var t=this,v=C.pattern;if(!q.isArray(v)){v=[v]}if(q.isArray(C.subroutes)){var S=C.subroutes;C.subroutes={};q.each(S,function(i,o){C.subroutes[o.name]=o})}this._aPattern=[];this._aRoutes=[];this._oParent=p;this._oConfig=C;if(C.subroutes){q.each(C.subroutes,function(a,o){if(o.name==undefined){o.name=a}r.addRoute(o,t)})}if(C.pattern===undefined){return}q.each(v,function(i,a){t._aPattern[i]=a;t._aRoutes[i]=r._oRouter.addRoute(a);t._aRoutes[i].matched.add(function(){var A={};q.each(arguments,function(b,d){A[t._aRoutes[i]._paramsIds[b]]=d});t._routeMatched(r,A,true)})})},metadata:{publicMethods:["getURL","getPattern"]}});R.prototype.getURL=function(p){return this._aRoutes[0].interpolate(p)};R.prototype.getPattern=function(){return this._aPattern[0]};R.prototype._routeMatched=function(r,a,i){var v,p,t,T;if(this._oParent){p=this._oParent._routeMatched(r,a);t=p.oTargetParent;T=p.oTargetControl}var C=q.extend({},r._oConfig,this._oConfig);if((T||C.targetControl)&&C.targetAggregation){if(!t){if(C.targetParent){T=sap.ui.getCore().byId(C.targetParent).byId(C.targetControl)}}else{if(C.targetControl){T=t.byId(C.targetControl)}}if(!T){T=sap.ui.getCore().byId(C.targetControl)}if(T){var A=T.getMetadata().getJSONKeys()[C.targetAggregation];if(A){var V=C.view;if(C.viewPath){V=C.viewPath+"."+V}v=r.getView(V,C.viewType,C.viewId);if(C.clearTarget===true){T[A._sRemoveAllMutator]()}T[A._sMutator](v)}else{q.sap.log.error("Control "+C.targetControl+" does not has an aggregation called "+C.targetAggregation)}}else{q.sap.log.error("Control with ID "+C.targetControl+" could not be found")}}if(C.callback){C.callback(this,a,C,T,v)}r.fireRouteMatched({name:C.name,arguments:a,targetControl:T,view:v,config:C});if(i){r.fireRoutePatternMatched({name:C.name,arguments:a,targetControl:T,view:v,config:C})}return{oTargetParent:v,oTargetControl:T}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.Serializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.Serializer');sap.ui.define("sap/ui/core/util/serializer/Serializer",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var S=E.extend("sap.ui.core.util.serializer.Serializer",{constructor:function(r,s,b,w,f){E.apply(this);this._oRootControl=r;this._delegate=s;this._bSkipRoot=!!b;this._oWindow=w||window;this._fnSkipAggregations=f}});S.prototype.serialize=function(){return this._serializeRecursive(this._oRootControl,0)};S.prototype._serializeRecursive=function(c,l,a,b){var C=[];var w=(!this._bSkipRoot||l!==0);if(w){c.getMetadata().getJSONKeys();var s=this._delegate.start(c,a,b);var m=this._delegate.middle(c,a,b);C.push(s+m)}if(l===0||!(this._fnSkipAggregations&&this._fnSkipAggregations(c))){var A=c.getMetadata().getAllAggregations();if(A){for(var n in A){var e=[];var o=A[n];var v=c[o._sGetter]();if(c.getBindingPath(n)&&c.getBindingInfo(n).template){e.push(c.getBindingInfo(n).template)}else if(v&&v.length){for(var i=0;i<v.length;i++){var O=v[i];if(O instanceof this._oWindow.sap.ui.core.Element){e.push(O)}}}else if(v instanceof this._oWindow.sap.ui.core.Element){e.push(v)}if(e.length>0){if(w){C.push(this._delegate.startAggregation(c,n))}var d=this._isDefaultAggregation(c,n);for(var i=0;i<e.length;i++){C.push(this._serializeRecursive(e[i],l+1,n,d))}if(w){C.push(this._delegate.endAggregation(c,n))}}}}}if(w){var f=this._delegate.end(c,a,b);C.push(f)}return C.join("")};S.prototype._isDefaultAggregation=function(c,a){return c.getMetadata().getDefaultAggregationName()===a};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.Delegate')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.Delegate');sap.ui.define("sap/ui/core/util/serializer/delegate/Delegate",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var D=E.extend("sap.ui.core.util.serializer.delegate.Delegate",{constructor:function(){E.apply(this)}});D.prototype.start=function(c,a,i){return""};D.prototype.middle=function(c,a,i){return""};D.prototype.end=function(c,a,i){return""};D.prototype.startAggregation=function(c,a){return""};D.prototype.endAggregation=function(c,a){return""};return D},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.HTML')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.HTML');sap.ui.define("sap/ui/core/util/serializer/delegate/HTML",['jquery.sap.global','./Delegate'],function(q,D){"use strict";var H=D.extend("sap.ui.core.util.serializer.delegate.HTML",{constructor:function(g,G){D.apply(this);this._fnGetControlId=g;this._fnGetEventHandlerName=G}});H.prototype.startAggregation=function(c,a){return'<div data-sap-ui-aggregation="'+a+'">'};H.prototype.endAggregation=function(c,a){return'</div>'};H.prototype.start=function(c,a,i){return"<div"};H.prototype.middle=function(c,a,b){var h=[];var I=(this._fnGetControlId)?this._fnGetControlId(c):c.getId();if(I.indexOf("__")!==0){h.push(this._createAttribute("id",I))}h.push(this._createAttribute("data-sap-ui-type",c.getMetadata()._sClassName));if(c.aCustomStyleClasses){var C=c.aCustomStyleClasses;var d=[];for(var i=0;i<C.length;i++){var s=C[i];if(!q.sap.startsWith(s,"sapM")&&!q.sap.startsWith(s,"sapUi")){d.push(s)}}if(d.length>0){h.push(this._createAttribute("class",d.join(" ")))}}if(this._fnGetEventHandlerName){var e=c.getMetadata().getAllEvents();for(var E in e){if(c.hasListeners(E)){var f=c.mEventRegistry[E];for(var i=0;i<f.length;i++){var g=this._fnGetEventHandlerName(f[i]);if(g){h.push(this._createAttribute("data-"+this._createHtmlAttributeName(E),g));break}}}}}var A=c.getMetadata().getAllAssociations();this._createAttributes(h,c,A,function(n,v){if(A[n].multiple){return v.join(" ")}return v},function(n,v){return(v!==null&&typeof v!==undefined&&v!=="")});var p=c.getMetadata().getAllProperties();this._createAttributes(h,c,p,null,function(n,v){return(!!c.getBindingInfo(n)||(v!==null&&typeof v!==undefined&&v!==""))});var o=c.getMetadata().getAllAggregations();this._createAttributes(h,c,o,null,function(n,v){if(!c.getBindingInfo(n)&&(!v||(typeof v!=="string"))){return false}return true});h.push('>');return h.join('')};H.prototype.end=function(c,a,i){return"</div>"};H.prototype._createAttributes=function(h,c,o,g,v){for(var n in o){var p=o[n];var G=p._sGetter;if(c[G]){var V=c[G]();V=g?g(n,V):V;if(!c.getBindingInfo(n)){if(V!==p.defaultValue){if(!v||v(n,V)){h.push(this._createAttribute("data-"+this._createHtmlAttributeName(n),V))}}}else{h.push(this._createDataBindingAttribute(c,n,V))}}}};H.prototype._createDataBindingAttribute=function(c,n,v){var b=c.getBindingInfo(n);var B=null;var p=v;if(!b.bindingString){if(b.binding){var C=b.binding.getMetadata().getName();if(C==="sap.ui.model.PropertyBinding"||C==="sap.ui.model.resource.ResourcePropertyBinding"){B=b.binding.getValue()}}if(b.parts){b=b.parts[0]}var m=b.model;if(B===v||B===null){p="{"+(m?(m+">"+b.path):b.path)+"}"}}else{p=b.bindingString}return this._createAttribute("data-"+this._createHtmlAttributeName(n),p)};H.prototype._createAttribute=function(a,v){return' '+a+'="'+v+'"'};H.prototype._createHtmlAttributeName=function(n){return q.sap.hyphen(n)};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.delegate.XML')){jQuery.sap.declare('sap.ui.core.util.serializer.delegate.XML');sap.ui.define("sap/ui/core/util/serializer/delegate/XML",['jquery.sap.global','./Delegate'],function(q,D){"use strict";var X=D.extend("sap.ui.core.util.serializer.delegate.XML",{constructor:function(d,g,G,m){D.apply(this);this._sDefaultNamespace=d;this._fnGetControlId=g;this._fnMemorizePackage=m;this._fnGetEventHandlerName=G}});X.prototype.startAggregation=function(c,a){return'<'+this._createAggregationName(c,a)+'>'};X.prototype.endAggregation=function(c,a){return'</'+this._createAggregationName(c,a)+'>'};X.prototype.start=function(c,a,i){return"<"+this._createTagName(c)};X.prototype.end=function(c,a,i){return"</"+this._createTagName(c)+">"};X.prototype.middle=function(c,a,b){var x=[];var I=(this._fnGetControlId)?this._fnGetControlId(c):c.getId();if(I.indexOf("__")!==0){x.push(this._createAttribute("id",I))}if(c.aCustomStyleClasses){var C=c.aCustomStyleClasses;var d=[];for(var i=0;i<C.length;i++){var s=C[i];if(!q.sap.startsWith(s,"sapM")&&!q.sap.startsWith(s,"sapUi")){d.push(s)}}if(d.length>0){x.push(this._createAttribute("class",d.join(" ")))}}if(this._fnGetEventHandlerName){var e=c.getMetadata().getAllEvents();for(var E in e){if(c.hasListeners(E)){var f=c.mEventRegistry[E];for(var i=0;i<f.length;i++){var h=this._fnGetEventHandlerName(f[i]);if(h){x.push(this._createAttribute(E,h));break}}}}}var A=c.getMetadata().getAllAssociations();this._createAttributes(x,c,A,function(n,v){if(A[n].multiple){return v.join(" ")}return v},function(n,v){return(v!==null&&typeof v!==undefined&&v!=="")});var p=c.getMetadata().getAllProperties();this._createAttributes(x,c,p,null,function(n,v){return(!!c.getBindingInfo(n)||(v!==null&&typeof v!==undefined&&v!==""))});var o=c.getMetadata().getAllAggregations();this._createAttributes(x,c,o,null,function(n,v){if(!c.getBindingInfo(n)&&(!v||(typeof v!=="string"))){return false}return true});x.push('>');return x.join('')};X.prototype._createAttributes=function(x,c,o,g,v){for(var n in o){var p=o[n];var G=p._sGetter;if(c[G]){var V=c[G]();V=g?g(n,V):V;if(!c.getBindingInfo(n)){if(V!==p.defaultValue){if(!v||v(n,V)){x.push(this._createAttribute(n,V))}}}else{x.push(this._createDataBindingAttribute(c,n,V))}}}};X.prototype._createDataBindingAttribute=function(c,n,v){var b=c.getBindingInfo(n);var B=null;var p=v;if(!b.bindingString){if(b.binding){var C=b.binding.getMetadata().getName();if(C==="sap.ui.model.PropertyBinding"||C==="sap.ui.model.resource.ResourcePropertyBinding"){B=b.binding.getValue()}}if(b.parts){b=b.parts[0]}var m=b.model;if(B===v||B===null){p="{"+(m?(m+">"+b.path):b.path)+"}"}}else{p=b.bindingString}return this._createAttribute(n,p)};X.prototype._createAttribute=function(a,v){return' '+a+'="'+v+'"'};X.prototype._createTagName=function(c){var C=c.getMetadata()._sClassName;var l=C.lastIndexOf(".");var s=(l===-1)?C:C.substring(l+1);var p=(l===-1)?C:C.substring(0,l);if(this._fnMemorizePackage){this._fnMemorizePackage(c,p)}return this._createNamespace(p,s)};X.prototype._createAggregationName=function(c,a){var C=c.getMetadata()._sClassName;var l=C.lastIndexOf(".");var p=(l===-1)?C:C.substring(0,l);return this._createNamespace(p,a)};X.prototype._createNamespace=function(n,N){if(this._sDefaultNamespace&&this._sDefaultNamespace===n){return N}else{return n+":"+N}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.WebSocket')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.ws.WebSocket');sap.ui.define("sap/ui/core/ws/WebSocket",['jquery.sap.global','sap/ui/Device','sap/ui/base/EventProvider','./ReadyState'],function(q,D,E,R){"use strict";var W=E.extend("sap.ui.core.ws.WebSocket",{constructor:function(u,p){E.apply(this);if(!D.support.websocket){throw new Error("Browser does not support WebSockets.")}if(typeof(u)!=="string"){throw new Error("sUrl must be a string.")}if(typeof(p)!=='undefined'&&!q.isArray(p)&&typeof(p)!=='string'){throw new Error("aProtocols must be a string, array of strings or undefined.")}this._openConnection(u,p)},metadata:{publicMethods:["send","close","getReadyState","getProtocol"]}});W.prototype.getInterface=function(){return this};W.M_EVENTS={Open:"open",Close:"close",Error:"error",Message:"message"};W.prototype.attachOpen=function(d,f,l){this.attachEvent("open",d,f,l);return this};W.prototype.detachOpen=function(f,l){this.detachEvent("open",f,l);return this};W.prototype.fireOpen=function(a){this.fireEvent("open",a);return this};W.prototype.attachClose=function(d,f,l){this.attachEvent("close",d,f,l);return this};W.prototype.detachClose=function(f,l){this.detachEvent("close",f,l);return this};W.prototype.fireClose=function(a){this.fireEvent("close",a);return this};W.prototype.attachError=function(d,f,l){this.attachEvent("error",d,f,l);return this};W.prototype.detachError=function(f,l){this.detachEvent("error",f,l);return this};W.prototype.fireError=function(a){this.fireEvent("error",a);return this};W.prototype.attachMessage=function(d,f,l){this.attachEvent("message",d,f,l);return this};W.prototype.detachMessage=function(f,l){this.detachEvent("message",f,l);return this};W.prototype.fireMessage=function(a){this.fireEvent("message",a);return this};W.prototype._resolveFullUrl=function(u){var f='';if(!/^wss?:\/\//.test(u)){var l=document.location;f=((l.protocol==='https:')?'wss://':'ws://')+l.host;if(u.substr(0,1)==='/'){f+=u}else{f+=l.pathname.substring(0,l.pathname.lastIndexOf('/'))+'/'+u}}else{f=u}return f};W.prototype._openConnection=function(u,p){var u=this._resolveFullUrl(u);this._oWs=(typeof(p)==='undefined')?new window.WebSocket(u):new window.WebSocket(u,p);this._oWs.onopen=q.proxy(this._onopen,this);this._oWs.onclose=q.proxy(this._onclose,this);this._oWs.onmessage=q.proxy(this._onmessage,this);this._oWs.onerror=q.proxy(this._onerror,this)};W.prototype._onopen=function(){this.fireOpen()};W.prototype._onclose=function(c){this.fireClose({code:c.code,reason:c.reason,wasClean:c.wasClean})};W.prototype._onerror=function(e){this.fireError()};W.prototype._onmessage=function(m){this.fireMessage({data:m.data})};W.prototype.send=function(m){if(this.getReadyState()===R.OPEN){this._oWs.send(m)}else if(this.getReadyState()===R.CONNECTING){this.attachEventOnce("open",function(e){this._oWs.send(m)})}else{q.sap.log.warning("Unable to send WebSocket message. "+"Connection is already closed or closing. message: "+m)}return this};W.prototype.close=function(c,r){if(typeof(c)==='string'){r=c;c=undefined}c=(typeof(c)==='undefined')?1000:c;r=(typeof(r)==='undefined')?"":r;if(this.getReadyState()===R.OPEN){this._oWs.close(c,r)}else if(this.getReadyState()===R.CONNECTING){this.attachEventOnce("open",function(e){this._oWs.close(c,r)})}else{var t='';switch(this.getReadyState()){case R.CLOSED:t="Connection is already closed.";break;case R.CLOSING:t="Connection is already closing.";break}q.sap.log.warning("Unable to close WebSocket connection. "+t)}return this};W.prototype.getReadyState=function(){return this._oWs.readyState};W.prototype.getProtocol=function(){return this._oWs.protocol};return W},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Binding')){jQuery.sap.declare('sap.ui.model.Binding');sap.ui.define("sap/ui/model/Binding",['jquery.sap.global','sap/ui/base/EventProvider','./ChangeReason'],function(q,E,C){"use strict";var B=E.extend("sap.ui.model.Binding",{constructor:function(m,p,c,P){E.apply(this);this.oModel=m;this.bRelative=!q.sap.startsWith(p,'/');this.sPath=p;this.oContext=c;this.mParameters=P;this.bInitial=false;this.bSuspended=false},metadata:{"abstract":true,publicMethods:["getPath","getContext","getModel","attachChange","detachChange","refresh","isInitial","attachDataRequested","detachDataRequested","attachDataReceived","detachDataReceived","suspend","resume"]}});B.prototype.getPath=function(){return this.sPath};B.prototype.getContext=function(){return this.oContext};B.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;this._fireChange()}};B.prototype.getModel=function(){return this.oModel};B.prototype.attachChange=function(f,l){if(!this.hasListeners("change")){this.oModel.addBinding(this)}this.attachEvent("change",f,l)};B.prototype.detachChange=function(f,l){this.detachEvent("change",f,l);if(!this.hasListeners("change")){this.oModel.removeBinding(this)}};B.prototype._fireChange=function(a){this.fireEvent("change",a)};B.prototype.attachDataRequested=function(f,l){this.attachEvent("dataRequested",f,l)};B.prototype.detachDataRequested=function(f,l){this.detachEvent("dataRequested",f,l)};B.prototype.fireDataRequested=function(a){this.fireEvent("dataRequested",a)};B.prototype.attachDataReceived=function(f,l){this.attachEvent("dataReceived",f,l)};B.prototype.detachDataReceived=function(f,l){this.detachEvent("dataReceived",f,l)};B.prototype.fireDataReceived=function(a){this.fireEvent("dataReceived",a)};B.prototype.updateRequired=function(m){return m&&this.getModel()===m};B.prototype.checkUpdate=function(f){if(!this.bSuspended){this._fireChange({reason:C.Change})}};B.prototype.refresh=function(f){this.checkUpdate(f)};B.prototype.initialize=function(){this.checkUpdate(true);return this};B.prototype._refresh=function(){this.refresh()};B.prototype.isInitial=function(){return this.bInitial};B.prototype.isRelative=function(){return this.bRelative};B.prototype.attachEvents=function(e){if(!e){return this}var t=this;q.each(e,function(s,h){var m="attach"+s.substring(0,1).toUpperCase()+s.substring(1);if(t[m]){t[m](h)}else{q.sap.log.warning(t.toString()+" has no handler for event '"+s+"'")}});return this};B.prototype.detachEvents=function(e){if(!e){return this}var t=this;q.each(e,function(s,h){var m="detach"+s.substring(0,1).toUpperCase()+s.substring(1);if(t[m]){t[m](h)}else{q.sap.log.warning(t.toString()+" has no handler for event '"+s+"'")}});return this};B.prototype.attachRefresh=function(f,l){this.attachEvent("refresh",f,l)};B.prototype.detachRefresh=function(f,l){this.detachEvent("refresh",f,l)};B.prototype._fireRefresh=function(a){this.fireEvent("refresh",a)};B.prototype.suspend=function(){this.bSuspended=true};B.prototype.resume=function(){this.bSuspended=false;this.checkUpdate()};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Context')){jQuery.sap.declare('sap.ui.model.Context');sap.ui.define("sap/ui/model/Context",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var C=sap.ui.base.Object.extend("sap.ui.model.Context",{constructor:function(m,p){sap.ui.base.Object.apply(this);this.oModel=m;this.sPath=p},metadata:{"abstract":true,publicMethods:["getModel","getPath","getProperty","getObject"]}});C.prototype.getModel=function(){return this.oModel};C.prototype.getPath=function(p){return this.sPath+(p?"/"+p:"")};C.prototype.getProperty=function(p){return this.oModel.getProperty(p,this)};C.prototype.getObject=function(p){return this.oModel.getObject(p,this)};C.prototype.toString=function(){return this.sPath};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ContextBinding')){jQuery.sap.declare('sap.ui.model.ContextBinding');sap.ui.define("sap/ui/model/ContextBinding",['jquery.sap.global','./Binding'],function(q,B){"use strict";var C=B.extend("sap.ui.model.ContextBinding",{constructor:function(m,p,c,P,e){B.call(this,m,p,c,P,e);this.oElementContext=null;this.bInitial=true},metadata:{publicMethods:["getElementContext"]}});C.prototype.checkUpdate=function(f){};C.prototype.getBoundContext=function(c){return this.oElementContext};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Filter')){jQuery.sap.declare('sap.ui.model.Filter');sap.ui.define("sap/ui/model/Filter",['jquery.sap.global','./FilterOperator'],function(q,F){"use strict";var a=sap.ui.base.Object.extend("sap.ui.model.Filter",{constructor:function(p,o,v,V){if(typeof p==="object"&&!q.isArray(p)){var f=p;this.sPath=f.path;this.sOperator=f.operator;this.oValue1=f.value1;this.oValue2=f.value2;this.aFilters=f.filters||f.aFilters;this.bAnd=f.and||f.bAnd}else{if(q.isArray(p)){this.aFilters=p}else{this.sPath=p}if(q.type(o)==="boolean"){this.bAnd=o}else{this.sOperator=o}this.oValue1=v;this.oValue2=V}if(q.isArray(this.aFilters)&&!this.sPath&&!this.sOperator&&!this.oValue1&&!this.oValue2){this._bMultiFilter=true;q.each(this.aFilters,function(i,b){if(!(b instanceof a)){q.sap.log.error("Filter in Aggregation of Multi filter has to be instance of sap.ui.model.Filter")}})}else if(!this.aFilters&&this.sPath!==undefined&&this.sOperator&&this.oValue1!==undefined){this._bMultiFilter=false}else{q.sap.log.error("Wrong parameters defined for filter.")}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ListBinding')){jQuery.sap.declare('sap.ui.model.ListBinding');sap.ui.define("sap/ui/model/ListBinding",['jquery.sap.global','./Binding','./Filter','./Sorter'],function(q,B,F,S){"use strict";var L=B.extend("sap.ui.model.ListBinding",{constructor:function(m,p,c,s,f,P){B.call(this,m,p,c,P);this.aSorters=s;if(!q.isArray(this.aSorters)&&this.aSorters instanceof S){this.aSorters=[this.aSorters]}else if(!q.isArray(this.aSorters)){this.aSorters=[]}this.aFilters=[];if(!q.isArray(f)&&f instanceof F){f=[f]}else if(!q.isArray(f)){f=[]}this.aApplicationFilters=f;this.bUseExtendedChangeDetection=false},metadata:{"abstract":true,publicMethods:["getContexts","sort","attachSort","detachSort","filter","attachFilter","detachFilter","getDistinctValues","isGrouped","getLength","isLengthFinal"]}});L.prototype.getLength=function(){return 0};L.prototype.isLengthFinal=function(){return true};L.prototype.getDistinctValues=function(p){return null};L.prototype.attachSort=function(f,l){this.attachEvent("sort",f,l)};L.prototype.detachSort=function(f,l){this.detachEvent("sort",f,l)};L.prototype._fireSort=function(a){this.fireEvent("sort",a)};L.prototype.attachFilter=function(f,l){this.attachEvent("filter",f,l)};L.prototype.detachFilter=function(f,l){this.detachEvent("filter",f,l)};L.prototype._fireFilter=function(a){this.fireEvent("filter",a)};L.prototype.isGrouped=function(){return this.aSorters.length>0&&!!this.aSorters[0].fnGroup};L.prototype.enableExtendedChangeDetection=function(){this.bUseExtendedChangeDetection=true;if(this.update){this.update()}};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.model.Model')){jQuery.sap.declare('sap.ui.model.Model');sap.ui.define("sap/ui/model/Model",['jquery.sap.global','sap/ui/base/EventProvider','./BindingMode','./Context'],function(q,E,B,C){"use strict";var M=E.extend("sap.ui.model.Model",{constructor:function(){E.apply(this,arguments);this.oData={};this.bDestroyed=false;this.aBindings=[];this.mContexts={};this.iSizeLimit=100;this.sDefaultBindingMode=B.TwoWay;this.mSupportedBindingModes={"OneWay":true,"TwoWay":true,"OneTime":true};this.bLegacySyntax=false},metadata:{"abstract":true,publicMethods:["bindProperty","bindList","bindTree","bindContext","createBindingContext","destroyBindingContext","getProperty","getDefaultBindingMode","setDefaultBindingMode","isBindingModeSupported","attachParseError","detachParseError","attachRequestCompleted","detachRequestCompleted","attachRequestFailed","detachRequestFailed","attachRequestSent","detachRequestSent","setSizeLimit","refresh","isList","getObject"]}});M.M_EVENTS={ParseError:"parseError",RequestFailed:"requestFailed",RequestSent:"requestSent",RequestCompleted:"requestCompleted"};M.prototype.attachRequestFailed=function(d,f,l){this.attachEvent("requestFailed",d,f,l);return this};M.prototype.detachRequestFailed=function(f,l){this.detachEvent("requestFailed",f,l);return this};M.prototype.fireRequestFailed=function(a){this.fireEvent("requestFailed",a);return this};M.prototype.attachParseError=function(d,f,l){this.attachEvent("parseError",d,f,l);return this};M.prototype.detachParseError=function(f,l){this.detachEvent("parseError",f,l);return this};M.prototype.fireParseError=function(a){this.fireEvent("parseError",a);return this};M.prototype.attachRequestSent=function(d,f,l){this.attachEvent("requestSent",d,f,l);return this};M.prototype.detachRequestSent=function(f,l){this.detachEvent("requestSent",f,l);return this};M.prototype.fireRequestSent=function(a){this.fireEvent("requestSent",a);return this};M.prototype.attachRequestCompleted=function(d,f,l){this.attachEvent("requestCompleted",d,f,l);return this};M.prototype.detachRequestCompleted=function(f,l){this.detachEvent("requestCompleted",f,l);return this};M.prototype.fireRequestCompleted=function(a){this.fireEvent("requestCompleted",a);return this};M.prototype.getObject=function(p,c){return this.getProperty(p,c)};M.prototype.getContext=function(p){if(!q.sap.startsWith(p,"/")){throw new Error("Path "+p+" must start with a / ")}var c=this.mContexts[p];if(!c){c=new C(this,p);this.mContexts[p]=c}return c};M.prototype.resolve=function(p,c){var i=!q.sap.startsWith(p,"/"),r=p,s;if(i){if(c){s=c.getPath();r=s+(q.sap.endsWith(s,"/")?"":"/")+p}else{r=this.isLegacySyntax()?"/"+p:undefined}}if(r&&r!=="/"&&q.sap.endsWith(r,"/")){r=r.substr(0,r.length-1)}return r};M.prototype.addBinding=function(b){this.aBindings.push(b)};M.prototype.removeBinding=function(b){for(var i=0;i<this.aBindings.length;i++){if(this.aBindings[i]==b){this.aBindings.splice(i,1);break}}};M.prototype.getDefaultBindingMode=function(){return this.sDefaultBindingMode};M.prototype.setDefaultBindingMode=function(m){if(this.isBindingModeSupported(m)){this.sDefaultBindingMode=m}else{throw new Error("Binding mode "+m+" is not supported by this model.")}};M.prototype.isBindingModeSupported=function(m){return(m in this.mSupportedBindingModes)};M.prototype.setLegacySyntax=function(l){this.bLegacySyntax=l};M.prototype.isLegacySyntax=function(){return this.bLegacySyntax};M.prototype.setSizeLimit=function(s){this.iSizeLimit=s};M.prototype.getInterface=function(){return this};M.prototype.refresh=function(f){this.checkUpdate(f)};M.prototype.checkUpdate=function(f){var b=this.aBindings.slice(0);q.each(b,function(i,o){o.checkUpdate(f)})};M.prototype.destroy=function(){this.oData={};this.aBindings=[];this.mContexts={};this.bDestroyed=true;E.prototype.destroy.apply(this,arguments)};return M},true)};if(!jQuery.sap.isDeclared('sap.ui.model.SelectionModel')){jQuery.sap.declare('sap.ui.model.SelectionModel');sap.ui.define("sap/ui/model/SelectionModel",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var S=E.extend("sap.ui.model.SelectionModel",{constructor:function(s){E.apply(this);this.iSelectionMode=s||S.SINGLE_SELECTION;this.aSelectedIndices=[];this.iLeadIndex=-1;this.fnSort=function(a,b){return a-b};this.fnSortReverse=function(a,b){return b-a}}});S.SINGLE_SELECTION=0;S.MULTI_SELECTION=1;S.prototype.getSelectionMode=function(){return this.iSelectionMode};S.prototype.setSelectionMode=function(s){this.iSelectionMode=s||S.SINGLE_SELECTION};S.prototype.isSelectedIndex=function(i){return q.inArray(i,this.aSelectedIndices)!==-1};S.prototype.getLeadSelectedIndex=function(){return this.iLeadIndex};S.prototype.setLeadSelectedIndex=function(l){this.setSelectionInterval(l,l);return this};S.prototype.getMinSelectionIndex=function(){if(this.aSelectedIndices.length>0){var i=this.aSelectedIndices.sort(this.fnSort);return i[0]}else{return-1}};S.prototype.getMaxSelectionIndex=function(){if(this.aSelectedIndices.length>0){var i=this.aSelectedIndices.sort(this.fnSortReverse);return i[0]}else{return-1}};S.prototype.getSelectedIndices=function(){var i=this.aSelectedIndices.sort(this.fnSort);return i};S.prototype.setSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){f=t}var F=Math.min(f,t);var T=Math.max(f,t);var c=this.aSelectedIndices.slice();var s=[];for(var i=F;i<=T;i++){s.push(i);var p=q.inArray(i,c);if(p===-1){c.push(i)}else{c.splice(p,1)}}this._update(s,t,c);return this};S.prototype.addSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){return this.setSelectionInterval(f,t)}var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var s=this.aSelectedIndices;for(var i=F;i<=T;i++){if(q.inArray(i,s)===-1){s.push(i);c.push(i)}}this._update(s,T,c);return this};S.prototype.moveSelectionInterval=function(s,m){var c=[];var a=this.aSelectedIndices;var l=this.iLeadIndex;for(var i=0;i<a.length;i++){var I=a[i];if(I>=s){c.push(a[i]);a[i]+=m;c.push(a[i]);if(I===this.iLeadIndex){l+=m}}}this._update(a,l,c);return this};S.prototype.removeSelectionInterval=function(f,t){if(this.iSelectionMode===S.SINGLE_SELECTION){f=t}var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var s=this.aSelectedIndices;var l=this.iLeadIndex;for(var i=F;i<=T;i++){var I=q.inArray(i,s);if(I>-1){s.splice(I,1);c.push(i)}if(i===this.iLeadIndex){l=-1}}this._update(s,l,c);return this};S.prototype.sliceSelectionInterval=function(f,t){var F=Math.min(f,t);var T=Math.max(f,t);var c=[];var r=[];var o=this.aSelectedIndices.slice(0);var s=this.aSelectedIndices;var l=this.iLeadIndex;var R=T-F+1;for(var I=T;I>=F;I--){var a=q.inArray(I,s);if(a>-1){s.splice(a,1);r.push(I)}if(I===this.iLeadIndex){l=-1}}for(var I=0;I<s.length;I++){var O=s[I];if(O>=F){var n=s[I]-R;if(O===l){l=n}s[I]=n;if(q.inArray(n,o)===-1){c.push(n)}}}for(var i=0;i<r.length;i++){var I=o[o.length-1-i];if(q.inArray(I,c)===-1){c.push(I)}}for(var i=0;i<r.length;i++){if(q.inArray(r[i],s)===-1&&q.inArray(r[i],c)===-1){c.push(r[i])}}this._update(s,l,c);return this};S.prototype.clearSelection=function(){if(this.aSelectedIndices.length>0||this.iLeadIndex!==-1){this._update([],-1,this.aSelectedIndices.slice())}return this};S.prototype.attachSelectionChanged=function(d,f,l){this.attachEvent("selectionChanged",d,f,l);return this};S.prototype.detachSelectionChanged=function(f,l){this.detachEvent("selectionChanged",f,l);return this};S.prototype.fireSelectionChanged=function(a){this.fireEvent("selectionChanged",a);return this};S.prototype._update=function(s,l,c){var p={rowIndices:c&&c.sort(this.fnSort)};this.aSelectedIndices=s;p.oldIndex=this.iLeadIndex;if(this.iLeadIndex!==l){this.iLeadIndex=l;p.leadIndex=this.iLeadIndex}if(c.length>0||typeof p.leadIndex!=="undefined"){this.fireSelectionChanged(p)}};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.SimpleType')){jQuery.sap.declare('sap.ui.model.SimpleType');sap.ui.define("sap/ui/model/SimpleType",['jquery.sap.global','./FormatException','./ParseException','./Type','./ValidateException'],function(q,F,P,T,V){"use strict";var S=T.extend("sap.ui.model.SimpleType",{constructor:function(f,c){T.apply(this,arguments);this.setFormatOptions(f||{});this.setConstraints(c||{});this.sName="SimpleType"},metadata:{"abstract":true,publicMethods:["setConstraints","setFormatOptions","formatValue","parseValue","validateValue"]}});S.prototype.setConstraints=function(c){this.oConstraints=c};S.prototype.setFormatOptions=function(f){this.oFormatOptions=f};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.TreeBinding')){jQuery.sap.declare('sap.ui.model.TreeBinding');sap.ui.define("sap/ui/model/TreeBinding",['jquery.sap.global','./Binding'],function(q,B){"use strict";var T=B.extend("sap.ui.model.TreeBinding",{constructor:function(m,p,c,f,P){B.call(this,m,p,c,P);this.aFilters=f;this.bDisplayRootNode=P&&P.displayRootNode===true},metadata:{"abstract":true,publicMethods:["getRootContexts","getNodeContexts","hasChildren","filter"]}});T.prototype.attachFilter=function(f,l){this.attachEvent("_filter",f,l)};T.prototype.detachFilter=function(f,l){this.detachEvent("_filter",f,l)};T.prototype._fireFilter=function(a){this.fireEvent("_filter",a)};return T},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.AnalyticalBinding')){jQuery.sap.declare('sap.ui.model.analytics.AnalyticalBinding');sap.ui.define("sap/ui/model/analytics/AnalyticalBinding",['jquery.sap.global','sap/ui/model/TreeBinding','sap/ui/model/ChangeReason','sap/ui/model/Sorter','sap/ui/model/FilterOperator','./odata4analytics'],function(q,T,C,S,F,o){"use strict";var A=T.extend("sap.ui.model.analytics.AnalyticalBinding",{constructor:function(m,p,c,s,f,P){T.call(this,m,p,c,f,P);this.sEntitySetName=(P&&P.entitySet)?P.entitySet:undefined;this.bArtificalRootContext=false;this.aApplicationFilter=this._convertDeprecatedFilterObjects(f);this.aControlFilter=undefined;this.aSorter=s?s:[];this.aMaxAggregationLevel=[];this.aAggregationLevel=[];this.oPendingRequests={};this.oPendingRequestHandle=[];this.oGroupedRequests={};this.bUseBatchRequests=(P&&P.useBatchRequests===true)?true:false;this.bProvideTotalSize=(P&&P.provideTotalResultSize===false)?false:true;this.bProvideGrandTotals=(P&&P.provideGrandTotals===false)?false:true;this.bUseAcceleratedAutoExpand=true;this.aRequestQueue=[];this.iTotalSize=-1;this.mKey={};this.mFinalLength={};this.mLength={};this.bNeedsUpdate=false;this.mOwnKey={};this.oAnalyticalQueryResult=this.oModel.getAnalyticalExtensions().findQueryResultByName(this._getEntitySet());this.aAnalyticalInfo=[];this.mAnalyticalInfoByProperty={};this.updateAnalyticalInfo(P==undefined?[]:P.analyticalInfo)}});A.prototype.getRootContexts=function(p){var a=(p&&p.numberOfExpandedLevels?p.numberOfExpandedLevels+1:1);var r=null;var R=this._getRequestId(A._requestType.groupMembersQuery,{groupId:null});if(this.bArtificalRootContext&&!this._cleanupGroupingForCompletedRequest(R)){return null}if(a<=1){r=this._getContextsForParentContext(null);if(a==1){this._considerRequestGrouping([R,this._getRequestId(A._requestType.groupMembersQuery,{groupId:"/"})]);this.getNodeContexts(this.getModel().getContext("/"),{startIndex:p.startIndex,length:p.length,threshold:p.threshold,level:0,numberOfExpandedLevels:0})}}else{r=this._getContextsForParentContext(null);var b=this._prepareGroupMembersAutoExpansionRequestIds("/",p.numberOfExpandedLevels);b.push(R);this._considerRequestGrouping(b);this.getNodeContexts(this.getModel().getContext("/"),{startIndex:p.startIndex,length:p.length,threshold:p.threshold,level:0,numberOfExpandedLevels:p.numberOfExpandedLevels})}if(r.length>1)q.sap.log.fatal("assertion failed: grand total represented by a single entry");return r};A.prototype.getNodeContexts=function(c,p){var s,l,t,L,n;if(typeof p=="object"){s=p.startIndex;l=p.length;t=p.threshold;L=p.level;n=p.numberOfExpandedLevels}else{s=arguments[1];l=arguments[2];t=arguments[3];L=arguments[4];n=arguments[5]}var a=this._getContextsForParentContext(c,s,l,t,L,n);return a};A.prototype.ContextsAvailabilityStatus={ALL:2,SOME:1,NONE:0};A.prototype.hasAvailableNodeContexts=function(c,l){var g=this._getGroupIdFromContext(c,l);if(this.mKey[g]!=undefined)if(this.mFinalLength[g]==true)return A.prototype.ContextsAvailabilityStatus.ALL;else return A.prototype.ContextsAvailabilityStatus.SOME;else return A.prototype.ContextsAvailabilityStatus.NONE};A.prototype.getGroupSize=function(c,l){if(c===undefined)return 0;var g=this._getGroupIdFromContext(c,l);return this.mFinalLength[g]?this.mLength[g]:-1};A.prototype.getTotalSize=function(){if(!this.bProvideTotalSize)q.sap.log.fatal("total size of result explicitly turned off, but getter invoked");return this.iTotalSize};A.prototype.hasChildren=function(c,p){if(c===undefined)return false;if(c==null)return true;var i=p.level;if(i==0)return true;if(this.aAggregationLevel.length<i)return false;return this.aMaxAggregationLevel.indexOf(this.aAggregationLevel[i-1])<this.aMaxAggregationLevel.length-1};A.prototype.hasMeasures=function(){var h=false;for(var p in this.oMeasureDetailsSet){h=true;break}return h};A.prototype.getDimensionDetails=function(){return this.oDimensionDetailsSet};A.prototype.getMeasureDetails=function(){return this.oMeasureDetailsSet};A.prototype.hasGrandTotalDisplayed=function(){return this.bProvideGrandTotals};A.prototype.getProperty=function(p){return this.oAnalyticalQueryResult.getEntityType().findPropertyByName(p)};A.prototype.getFilterablePropertyNames=function(){return this.oAnalyticalQueryResult.getEntityType().getFilterablePropertyNames()};A.prototype.getSortablePropertyNames=function(){return this.oAnalyticalQueryResult.getEntityType().getSortablePropertyNames()};A.prototype.getPropertyLabel=function(p){return this.oAnalyticalQueryResult.getEntityType().getLabelOfProperty(p)};A.prototype.getPropertyHeading=function(p){return this.oAnalyticalQueryResult.getEntityType().getHeadingOfProperty(p)};A.prototype.getPropertyQuickInfo=function(p){return this.oAnalyticalQueryResult.getEntityType().getQuickInfoOfProperty(p)};A.prototype.isMeasure=function(p){return q.inArray(p,this.aMeasureName)!==-1};A.prototype.filter=function(f,s){f=this._convertDeprecatedFilterObjects(f);if(s==sap.ui.model.FilterType.Application)this.aApplicationFilter=f;else this.aControlFilter=f;this.iTotalSize=-1;this._abortAllPendingRequests();this.resetData();this._fireRefresh({reason:C.Filter});return this};A.prototype.sort=function(s){if(s instanceof S){s=[s]}this.aSorter=s?s:[];this._abortAllPendingRequests();this._fireRefresh({reason:C.Sort});return this};A.prototype.getGroupName=function(c,l){if(c===undefined)return"";var g=this.aAggregationLevel[l-1],d=this.oAnalyticalQueryResult.findDimensionByPropertyName(g),v=this.mAnalyticalInfoByProperty[g].formatter,p=c.getProperty(g),t,f,G;if(d&&this.oDimensionDetailsSet[g].textPropertyName){t=d.getTextProperty()}var s,a,b,a;if(t){s=d.getTextProperty().name;b=this.mAnalyticalInfoByProperty[s].formatter;a=c.getProperty(s)}if(!t){f=v?v(p):p;G=((d.getLabelText())?d.getLabelText()+': ':'')+f}else{f=v?v(p,a):p;G=((d.getLabelText())?d.getLabelText()+': ':'')+f;var e=b?b(a,p):a;if(e){G+=' - '+e}}return G};A.prototype.updateAnalyticalInfo=function(c){var p=this.oDimensionDetailsSet;this.mAnalyticalInfoByProperty=new Object();this.aMaxAggregationLevel=new Array();this.aAggregationLevel=new Array();this.aMeasureName=new Array();this.iAnalyticalInfoVersionNumber=(this.iAnalyticalInfoVersionNumber===undefined?1:(this.iAnalyticalInfoVersionNumber>999?1:this.iAnalyticalInfoVersionNumber+1));this.oMeasureDetailsSet=new Object();this.oDimensionDetailsSet=new Object();for(var i=0;i<c.length;i++){var d=this.oAnalyticalQueryResult.findDimensionByPropertyName(c[i].name);if(d&&(c[i].inResult==true||c[i].visible==true)){c[i].dimensionPropertyName=d.getName();var D=this.oDimensionDetailsSet[d.getName()];if(!D){D=new Object();D.name=d.getName();D.aAttributeName=new Array();D.grouped=false;this.oDimensionDetailsSet[d.getName()]=D;this.aMaxAggregationLevel.push(D.name);if(c[i].grouped==true)this.aAggregationLevel.push(D.name)}if(c[i].grouped==true){if(this.getSortablePropertyNames().indexOf(d.getName())==-1){q.sap.log.fatal("property "+d.getName()+" must be sortable in order to be used as grouped dimension")}D.grouped=true}if(d.getName()==c[i].name){D.keyPropertyName=c[i].name}var t=d.getTextProperty();if(t&&t.name==c[i].name){D.textPropertyName=c[i].name}if(d.findAttributeByName(c[i].name)){D.aAttributeName.push(c[i].name)}D.analyticalInfo=c[i]}var m=this.oAnalyticalQueryResult.findMeasureByPropertyName(c[i].name);if(m&&(c[i].inResult==true||c[i].visible==true)){c[i].measurePropertyName=m.getName();var M=this.oMeasureDetailsSet[m.getName()];if(!M){M=new Object();M.name=m.getName();this.oMeasureDetailsSet[m.getName()]=M;this.aMeasureName.push(M.name)}if(m.getRawValueProperty().name==c[i].name){M.rawValuePropertyName=c[i].name}var f=m.getFormattedValueProperty();if(f&&f.name==c[i].name){M.formattedValuePropertyName=c[i].name}M.analyticalInfo=c[i]}this.mAnalyticalInfoByProperty[c[i].name]=c[i]}var M;for(var a in this.oMeasureDetailsSet){var u=this.oAnalyticalQueryResult.findMeasureByName(a).getUnitProperty();if(u)this.oMeasureDetailsSet[a].unitPropertyName=u.name}var b=function(e){var n=[];for(var g in e)n.push(g.name);return n.sort().join(";")};if(b(p)!=b(this.oDimensionDetailsSet))this.iTotalSize=-1;this.aAnalyticalInfo=c;this.mFinalLength={};this.mLength={};this.mKey={};this.mOwnKey={};this.mContexts={};this.bNeedsUpdate=false};A.prototype.getAnalyticalInfoForColumn=function(c){return this.mAnalyticalInfoByProperty[c]};A.prototype.loadGroups=function(g){var G=new Array();for(var s in g){G.push(s);delete this.mKey[s];delete this.mLength[s];delete this.mFinalLength[s];var a=g[s];for(var i=0;i<a.length;i++){var b=a[i];this._getContextsForParentGroupId(s,b.startIndex,b.length,b.threshold)}var r=new Array();for(var i=-1,s;s=G[++i];){r.push(this._getRequestId(A._requestType.groupMembersQuery,{groupId:s}))}this._considerRequestGrouping(r)}};A.prototype.getAnalyticalQueryResult=function(){return this.oAnalyticalQueryResult};A._requestType={groupMembersQuery:1,totalSizeQuery:2,groupMembersAutoExpansionQuery:3,levelMembersQuery:4};A.prototype._getContextsForParentContext=function(p,s,l,t,L,n){if(p===undefined)return[];if(p&&p.getPath()=="/artificialRootContent"){p=this.getModel().getContext("/")}var P=this._getGroupIdFromContext(p,L);return this._getContextsForParentGroupId(P,s,l,t,n)};A.prototype._getContextsForParentGroupId=function(p,s,l,t,n){if(p===undefined)return[];if(!s)s=0;if(!l)l=this.oModel.iSizeLimit;if(this.mFinalLength[p]&&this.mLength[p]<l)l=this.mLength[p];if(!t)t=0;if(!n)n=0;if(p==null){if(n>0){q.sap.log.fatal("invalid request to determine nodes of root context");return null}}else{if(this._getGroupIdLevel(p)>=this.aAggregationLevel.length&&n>0){q.sap.log.fatal("invalid request to determine nodes of context with group ID "+p);return null}if(this._getGroupIdLevel(p)+n>this.aAggregationLevel.length){n=this.aAggregationLevel.length-this._getGroupIdLevel(p)-1}}var c,L,g,a,G,m;var b=n>0&&p!=null;if(b){var M=this._getGroupIdLevel(p);var d=M+n;G=this._calculateRequiredGroupExpansion(p,d,s,l+t);var D=G.groupId_Missing==null;D=D||G.groupId_Missing.length<p.length||G.groupId_Missing.substring(0,p.length)!=p;if(D){q.sap.log.debug("auto expand: data available for group ID "+p);c=this._getLoadedContextsForGroup(p,s,l)}else{m=l+t}L=!D}else{c=this._getLoadedContextsForGroup(p,s,l);g=this._calculateRequiredGroupSection(p,s,l,t,c);var P=g.length>0&&l<g.length;L=(c.length!=l&&!(this.mFinalLength[p]&&c.length>=this.mLength[p]-s))||P}if(!L)this._cleanupGroupingForCompletedRequest(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(this.oModel.getServiceMetadata()){if(L){var N=this.bProvideTotalSize&&this.iTotalSize==-1&&!this._isRequestPending(this._getRequestId(A._requestType.totalSizeQuery));var e=true;var f;if(this.bUseBatchRequests){if(b){f=this._prepareGroupMembersAutoExpansionRequestIds(p,n);for(var i=-1,r;r=f[++i];){if(this._isRequestPending(r)){e=false;break}}if(e){this.aRequestQueue.push([A._requestType.groupMembersAutoExpansionQuery,p,G,m,n])}}else{e=!this._isRequestPending(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(e){this.aRequestQueue.push([A._requestType.groupMembersQuery,p,g.startIndex,g.length]);f=[this._getRequestId(A._requestType.groupMembersQuery,{groupId:p})]}}if(e&&N){f.push(this._getRequestId(A._requestType.totalSizeQuery));this._considerRequestGrouping(f);this.aRequestQueue.push([A._requestType.totalSizeQuery])}if(e){if(p==null){this._abortAllPendingRequests()}q.sap.delayedCall(0,this,A.prototype._processRequestQueue)}}else{var h;if(b){f=this._prepareGroupMembersAutoExpansionRequestIds(p,n);for(var i=-1,r;r=f[++i];){if(this._isRequestPending(r)){e=false;break}}if(e){h=this._prepareGroupMembersAutoExpansionQueryRequest(A._requestType.groupMembersAutoExpansionQuery,p,G,m,n)}}else{e=!this._isRequestPending(this._getRequestId(A._requestType.groupMembersQuery,{groupId:p}));if(e){h=this._prepareGroupMembersQueryRequest(A._requestType.groupMembersQuery,p,g.startIndex,g.length);f=[h.sRequestId]}}if(e){if(p==null){this._abortAllPendingRequests()}this._executeQueryRequest(h);if(N&&!h.bIsFlatListRequest){f.push(this._getRequestId(A._requestType.totalSizeQuery));this._considerRequestGrouping(f);this._executeQueryRequest(this._prepareTotalSizeQueryRequest(A._requestType.totalSizeQuery))}}}}}return c};A.prototype._processRequestQueue=function(){if(this.aRequestQueue.length==0)return;var r=[];var f=false;for(var i=-1,R;R=this.aRequestQueue[++i];){if(R[0]==A._requestType.groupMembersQuery){var a=A.prototype._prepareGroupMembersQueryRequest.apply(this,R);f=f||a.bIsFlatListRequest;r.push(a)}}for(var i=-1,R;R=this.aRequestQueue[++i];){var a=null;switch(R[0]){case A._requestType.groupMembersQuery:continue;case A._requestType.totalSizeQuery:if(!f){a=A.prototype._prepareTotalSizeQueryRequest.apply(this,R);r.push(a)}break;case A._requestType.groupMembersAutoExpansionQuery:a=A.prototype._prepareGroupMembersAutoExpansionQueryRequest.apply(this,R);for(var j=-1,l;l=a.aGroupMembersAutoExpansionRequestDetails[++j];){r.push(l)}break;default:q.sap.log.fatal("unhandled request type "+this.aRequestQueue[i][0]);continue}}if(r.length>1)this._executeBatchRequest(r);else this._executeQueryRequest(r[0]);this.aRequestQueue=[]};A.prototype._prepareGroupMembersQueryRequest=function(r,g,s,L){var G=[];var c=this.iAnalyticalInfoVersionNumber;var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());a.getSortExpression().clear();var b=0,d=-1;if(g){G=this._getGroupIdComponents(g);b=d=G.length;var u=0;for(var i=0,e=0;i<b;e++){if(this.oDimensionDetailsSet[this.aMaxAggregationLevel[e]].grouped==false)++u;else++i}b=d=b+u;if(this.aMaxAggregationLevel.length>0){while(this.oDimensionDetailsSet[this.aMaxAggregationLevel[d]].grouped==false)if(++d==this.aMaxAggregationLevel.length)break}}var I=d>=this.aMaxAggregationLevel.length-1;var f=this.aMaxAggregationLevel.slice(0,d+1);a.setAggregationLevel(f);for(var i=0;i<f.length;i++){var D=this.oDimensionDetailsSet[f[i]];var h=(D.keyPropertyName!=undefined);var j=(D.textPropertyName!=undefined);a.includeDimensionKeyTextAttributes(D.name,true,j,D.aAttributeName);if(D.grouped){a.getSortExpression().addSorter(f[i],o.SortOrder.Ascending)}}var k=a.getFilterExpression();k.clear();if(this.aApplicationFilter)k.addUI5FilterConditions(this.aApplicationFilter);if(this.aControlFilter)k.addUI5FilterConditions(this.aControlFilter);if(b>=1){for(var i=0,l=G.length;i<l;i++){k.addCondition(this.aAggregationLevel[i],F.EQ,G[i])}}var m;var n;var p;var M;var t=new Array();if(g!=null||this.bProvideGrandTotals){a.setMeasures(this.aMeasureName);for(var v in this.oMeasureDetailsSet){M=this.oMeasureDetailsSet[v];if(!I&&this.mAnalyticalInfoByProperty[v].total==false){m=false;n=false;p=false}else{m=(M.rawValuePropertyName!=undefined);n=(M.formattedValuePropertyName!=undefined);p=(M.unitPropertyName!=undefined);if(p){if(t.indexOf(M.unitPropertyName)==-1){t.push(M.unitPropertyName)}}}a.includeMeasureRawFormattedValueUnit(M.name,m,n,p)}for(var i in f){var w;if((w=t.indexOf(f[i]))!=-1)t.splice(w,1)}}var x=a.getSortExpression();for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i])x.addSorter(this.aSorter[i].sPath,this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}if(L==0)q.sap.log.fatal("unhandled case: load 0 entities of sub group");a.setResultPageBoundaries(s+1,s+L);a.setRequestOptions(null,!this.mFinalLength[g]);return{iRequestType:r,sRequestId:this._getRequestId(A._requestType.groupMembersQuery,{groupId:g}),oAnalyticalQueryRequest:a,sGroupId:g,aSelectedUnitPropertyName:t,aAggregationLevel:f,bIsFlatListRequest:I&&b==0,bIsLeafGroupsRequest:I,iStartIndex:s,iLength:L}};A.prototype._prepareTotalSizeQueryRequest=function(r){var c=this.iAnalyticalInfoVersionNumber;var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());a.setAggregationLevel(this.aMaxAggregationLevel);a.setMeasures([]);var f=a.getFilterExpression();f.clear();if(this.aApplicationFilter)f.addUI5FilterConditions(this.aApplicationFilter);if(this.aControlFilter)f.addUI5FilterConditions(this.aControlFilter);a.setResultPageBoundaries(1,1);a.setRequestOptions(null,true);return{iRequestType:r,sRequestId:this._getRequestId(A._requestType.totalSizeQuery),oAnalyticalQueryRequest:a}};A.prototype._prepareGroupMembersAutoExpansionQueryRequest=function(r,g,G,l,n){var p=function(G,c){if(G.groupId_Missing==null){q.sap.log.fatal("missing group Id not present");return f}var d=t._getGroupIdComponents(G.groupId_Missing);var e=d.length;if(e>c){q.sap.log.fatal("the given group ID is too deep for requested level for auto expansion");return f}var z=[];for(var i=0;i<e;i++){var B=t.aAggregationLevel[i];var V=d[i];var y=t._getFilterOperatorMatchingPropertySortOrder(B);z[i]=new sap.ui.model.Filter(B,y,V)}var D=null;if(G.startIndex_Missing>0){var E=t.mKey[G.groupId_Missing][G.startIndex_Missing-1];var H=t.oModel.getObject("/"+E);var I=t.aAggregationLevel[e];var J=H[I];D=new sap.ui.model.Filter(I,t._getFilterOperatorMatchingPropertySortOrder(I,false),J)}var f=[];for(var L=0;L<c;L++){var K=[];var N=Math.min(e,L+1);for(var O=0;O<N;O++){var Q=[];var U=Math.min(e,O+1);var W=G.startIndex_Missing>0;for(var X=0;X<U;X++){var Y=new sap.ui.model.Filter("x",sap.ui.model.FilterOperator.EQ,"x");Y=q.extend(true,Y,z[X]);if(U>1&&X<U-1)Y.sOperator=sap.ui.model.FilterOperator.EQ;if(X==e-1&&L>e-1&&!W){if(Y.sOperator==sap.ui.model.FilterOperator.GT)Y.sOperator=sap.ui.model.FilterOperator.GE;else Y.sOperator=sap.ui.model.FilterOperator.LE}Q.push(Y)}if(Q.length>0){K.push(new sap.ui.model.Filter(Q,true));if(L>e-1&&O==e-1&&W){var Z=[];for(var i=0;i<Q.length;i++){var $=new sap.ui.model.Filter("x",sap.ui.model.FilterOperator.EQ,"x");$=q.extend(true,$,Q[i]);Z.push($)}Z[e-1].sOperator=sap.ui.model.FilterOperator.EQ;Z.push(D);K.push(new sap.ui.model.Filter(Z,true));break}}}if(K.length>0)f[L]=new sap.ui.model.Filter(K,false);else f[L]=null}return f};var a=function(r,g,L,z,s,l,B,U){var D=[];var E=t.iAnalyticalInfoVersionNumber;var H=new o.QueryResultRequest(t.oAnalyticalQueryResult);H.setResourcePath(t._getResourcePath());H.getSortExpression().clear();var I=0,J=-1;I=J=L-1;var K=0;for(var i=0,N=0;i<I;N++){if(t.oDimensionDetailsSet[t.aMaxAggregationLevel[N]].grouped==false){++K}else{++i}}I=J=I+K;if(t.aMaxAggregationLevel.length>0){while(t.oDimensionDetailsSet[t.aMaxAggregationLevel[J]].grouped==false){if(++J==t.aMaxAggregationLevel.length){break}}}var O=J>=t.aMaxAggregationLevel.length-1;var Q=t.aMaxAggregationLevel.slice(0,J+1);H.setAggregationLevel(Q);for(var i=0;i<Q.length;i++){var V=t.oDimensionDetailsSet[Q[i]];var W=(V.keyPropertyName!=undefined);var X=(V.textPropertyName!=undefined);H.includeDimensionKeyTextAttributes(V.name,true,X,V.aAttributeName);if(V.grouped){H.getSortExpression().addSorter(Q[i],o.SortOrder.Ascending)}}var Y=H.getFilterExpression();Y.clear();if(t.aApplicationFilter)Y.addUI5FilterConditions(t.aApplicationFilter);if(t.aControlFilter)Y.addUI5FilterConditions(t.aControlFilter);Y.addUI5FilterConditions(z);var Z;var $;var _;var a1;var b1=new Array();H.setMeasures(t.aMeasureName);for(var c1 in t.oMeasureDetailsSet){a1=t.oMeasureDetailsSet[c1];if(!O&&t.mAnalyticalInfoByProperty[c1].total==false){Z=false;$=false;_=false}else{Z=(a1.rawValuePropertyName!=undefined);$=(a1.formattedValuePropertyName!=undefined);_=(a1.unitPropertyName!=undefined);if(_){if(b1.indexOf(a1.unitPropertyName)==-1){b1.push(a1.unitPropertyName)}}}H.includeMeasureRawFormattedValueUnit(a1.name,Z,$,_)}for(var i in Q){var d1;if((d1=b1.indexOf(Q[i]))!=-1)b1.splice(d1,1)}var e1=H.getSortExpression();for(var i=0;i<t.aSorter.length;i++){if(t.aSorter[i])e1.addSorter(t.aSorter[i].sPath,t.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}if(l==0)q.sap.log.fatal("unhandled case: load 0 entities of sub group");var f1=s;if(!U)f1=0;H.setResultPageBoundaries(f1+1,f1+l);return{iRequestType:r,sRequestId:t._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}),oAnalyticalQueryRequest:H,iLevel:L,aSelectedUnitPropertyName:b1,aAggregationLevel:Q,bIsFlatListRequest:O,bIsLeafGroupsRequest:O,iStartIndex:s,iLength:l,bAvoidLengthUpdate:B}};var t=this;var b=[];var R=[];if(G&&this.bUseAcceleratedAutoExpand){var c=this._getGroupIdLevel(g)+n+1;var d=t._getGroupIdComponents(G.groupId_Missing);var e=d.length;var f=p(G,c);for(var L=1;L<=c;L++){var s;if(L>=e+2)s=0;else if(L==e+1)s=G.startIndex_Missing;else if(e>0){var h;if(L==e)h=G.groupId_Missing;else h=this._getGroupIdAncestors(G.groupId_Missing,-(e-L))[0];var j=this._getGroupIdAncestors(G.groupId_Missing,-(e-L+1))[0];if(!j)q.sap.log.fatal("failed to determine group id at parent level; group ID = "+g+", level = "+L);var s=this.mKey[j].indexOf(this.mOwnKey[h]);if(s==-1)q.sap.log.fatal("failed to determine position of value "+h+" in group "+j);s++}var k=l>L?Math.ceil((l-L)/(c-L+1)):l;var m=f[L-1]?[f[L-1]]:[];var u=a(A._requestType.levelMembersQuery,g,L,m,s,k,false,false);b.push(u);R.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}))}}else{var M=this._getGroupIdLevel(g)+1;var c=M+n;var m=[];var v=this._getGroupIdComponents(g);for(var i=0;i<v.length;i++)m.push(new sap.ui.model.Filter(this.aAggregationLevel[i],sap.ui.model.FilterOperator.EQ,v[i]));var w=false;if(G){var P=this.aAggregationLevel[v.length];var x=this._getGroupIdComponents(G.groupId_Missing)[v.length];if(x){var y=this._getFilterOperatorMatchingPropertySortOrder(P,true);m.push(new sap.ui.model.Filter(P,y,x));w=true}}for(var L=M;L<=c;L++){var k=l>L?Math.ceil((l-L)/(c-L+1)):l;var u=a(A._requestType.levelMembersQuery,g,L,m,0,k,L==M?w:false,true);b.push(u);R.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:L}))}}return{iRequestType:r,aRequestId:R,aGroupMembersAutoExpansionRequestDetails:b,sGroupId:g,iLength:l}};A.prototype._prepareGroupMembersAutoExpansionRequestIds=function(g,n){var m=this._getGroupIdLevel(g)+1;var a=m+n;var r=[];for(var l=m;l<=a;l++){r.push(this._getRequestId(A._requestType.levelMembersQuery,{groupId:g,level:l}))}return r};A.prototype._getQueryODataRequestOptions=function(a){var s=a.getURIQueryOptionValue("$select");var f=a.getURIQueryOptionValue("$filter");var O=a.getURIQueryOptionValue("$orderby");var b=a.getURIQueryOptionValue("$skip");var t=a.getURIQueryOptionValue("$top");var i=a.getURIQueryOptionValue("$inlinecount");if(this.mParameters["filter"])f+="and ("+this.mParameters["filter"]+")";var p=[];if(s)p.push("$select="+s);if(f)p.push("$filter="+f);if(O)p.push("$orderby="+O);if(b)p.push("$skip="+b);if(t)p.push("$top="+t);if(i)p.push("$inlinecount="+i);return p};A.prototype._executeBatchRequest=function(r){var c=this.iAnalyticalInfoVersionNumber;var t=this;var b=[],e=[];for(var i=-1,R;R=r[++i];){var a=R.oAnalyticalQueryRequest,g=R.sGroupId;if(a.getURIQueryOptionValue("$select")==null){this.fireDataRequested();var E=this.getModel().getContext("/artificialRootContent");g=null;this.mLength[g]=1;this.mFinalLength[g]=true;this.mKey[g]=["artificialRootContent"];this.bNeedsUpdate=true;var t=this;if(r.length==1){setTimeout(function(){t.fireDataReceived()})}this.bArtificalRootContext=true;continue}var p=a.getURIToQueryResultEntries();if(p.indexOf("/")==0)p=p.substring(1);if(!this._isRequestPending(R.sRequestId)){this._registerNewRequest(R.sRequestId);b.push(this.oModel.createBatchOperation(p.replace(/\ /g,"%20"),"GET"));e.push(R)}}q.sap.log.debug("AnalyticalBinding: executing batch request with "+e.length+" operations");var d=this._getIdForNewRequestHandle();if(b.length>0){this.oModel.addBatchReadOperations(b);this.fireDataRequested();var f=this.oModel.submitBatch(s,h,true,true);this.oModel.fireRequestSent({url:this.oModel.sServiceUrl+"/$batch",type:"POST",async:true,info:"",infoObject:{}});this._registerNewRequestHandle(d,f)}function s(D,j){t._deregisterHandleOfCompletedRequest(d);if(e.length!=D.__batchResponses.length)q.sap.log.fatal("assertion failed: received "+D.__batchResponses.length+" responses for "+e.length+" read operations in the batch request");if(c!=t.iAnalyticalInfoVersionNumber){for(var i=-1,k;k=e[++i].sRequestId;){t._deregisterCompletedRequest(k);t._cleanupGroupingForCompletedRequest(k)}return}for(var i=0;i<D.__batchResponses.length;i++){if(D.__batchResponses[i].data!=undefined){switch(e[i].iRequestType){case A._requestType.groupMembersQuery:t._processGroupMembersQueryResponse(e[i],D.__batchResponses[i].data);break;case A._requestType.totalSizeQuery:t._processTotalSizeQueryResponse(e[i],D.__batchResponses[i].data);break;case A._requestType.levelMembersQuery:t._processLevelMembersQueryResponse(e[i],D.__batchResponses[i].data);break;default:q.sap.log.fatal("invalid request type "+e[i].iRequestType);continue}}t._deregisterCompletedRequest(e[i].sRequestId);t._cleanupGroupingForCompletedRequest(e[i].sRequestId)}var O=true;var B=t.oModel._getBatchErrors(D);if(B.length>0)O=false;t.oModel.fireRequestCompleted({url:j.requestUri,type:"POST",async:true,info:"",infoObject:{},success:O,errorobject:O?{}:t.oModel._handleError(B[0])});if(O){t.oModel.checkUpdate()}t.fireDataReceived()}function h(j){t._deregisterHandleOfCompletedRequest(d);for(var i=-1,k;k=e[++i];){t._deregisterCompletedRequest(k.sRequestId);t._cleanupGroupingForCompletedRequest(k.sRequestId)}if(c!=t.iAnalyticalInfoVersionNumber){return}t.oModel.fireRequestCompleted({url:"",type:"POST",async:true,info:"",infoObject:{},success:false,errorobject:t.oModel._handleError(j)});t.oModel.fireRequestFailed(t.oModel._handleError(j));t.fireDataReceived()}};A.prototype._executeQueryRequest=function(r){if(r.iRequestType==A._requestType.groupMembersAutoExpansionQuery){for(var i=-1,a;a=r.aGroupMembersAutoExpansionRequestDetails[++i];){this._executeQueryRequest(a)}return}var c=this.iAnalyticalInfoVersionNumber;var a=r.oAnalyticalQueryRequest,g=r.sGroupId;var p=a.getURIToQueryResultEntitySet();var P=this._getQueryODataRequestOptions(a);var t=this;if(a.getURIQueryOptionValue("$select")==null){this.fireDataRequested();var e=this.getModel().getContext("/artificialRootContent");g=null;this.mLength[g]=1;this.mFinalLength[g]=true;this.mKey[g]=["artificialRootContent"];this.bNeedsUpdate=true;var t=this;setTimeout(function(){if(t._cleanupGroupingForCompletedRequest(r.sRequestId))t.fireDataReceived()});this.bArtificalRootContext=true;return}this._registerNewRequest(r.sRequestId);this.fireDataRequested();for(var i=0;i<P.length;i++)P[i]=P[i].replace(/\ /g,"%20");q.sap.log.debug("AnalyticalBinding: executing query request");var R=this._getIdForNewRequestHandle();this.oModel._loadData(p,P,s,E,false,u,f);function s(d){t._deregisterHandleOfCompletedRequest(R);if(c!=t.iAnalyticalInfoVersionNumber){t._deregisterCompletedRequest(r.sRequestId);return}switch(r.iRequestType){case A._requestType.groupMembersQuery:t._processGroupMembersQueryResponse(r,d);break;case A._requestType.totalSizeQuery:t._processTotalSizeQueryResponse(r,d);break;case A._requestType.levelMembersQuery:t._processLevelMembersQueryResponse(r,d);break;default:q.sap.log.fatal("invalid request type "+r.iRequestType);break}t._deregisterCompletedRequest(r.sRequestId)}function f(){if(c!=t.iAnalyticalInfoVersionNumber){return}if(t._cleanupGroupingForCompletedRequest(r.sRequestId))t.fireDataReceived()}function E(d){t._deregisterHandleOfCompletedRequest(R);t._deregisterCompletedRequest(r.sRequestId);t._cleanupGroupingForCompletedRequest(r.sRequestId);if(c!=t.iAnalyticalInfoVersionNumber){return}t.fireDataReceived()}function u(b){t._registerNewRequestHandle(R,b)}};A.prototype._abortAllPendingRequests=function(){this._abortAllPendingRequestsByHandle();this._clearAllPendingRequests()};A.prototype._processGroupMembersQueryResponse=function(r,d){var g=r.sGroupId,s=r.aSelectedUnitPropertyName,a=r.aAggregationLevel,b=r.iStartIndex,l=r.iLength,G=g==null?0:this._getGroupIdLevel(g)+1;if(!this.mKey[g])this.mKey[g]=[];var K=this.mKey[g];var c=b;var u=(s.length>0);var p=null,D=null;var f=-1;var e=0;var h=null;for(var i=0;i<d.results.length;i++){var E=d.results[i];if(u){D="";for(var j=0;j<a.length;j++){D+=E[a[j]]+"|"}if(p==D){if(f==-1)f=i-1;var m=-1,P=d.results[i-1];for(var k=0;k<s.length;k++){if(P[s[k]]!=E[s[k]]){m=k;break}}if(m==-1)q.sap.log.fatal("assertion failed: no deviating units found for result entries "+(i-1)+" and "+i)}if((p!=D||i==d.results.length-1)&&f!=-1){var M=q.extend(true,{},d.results[f]);var n=this.oModel._getObject("/"+this.oModel._getKey(d.results[f]));for(var k=0;k<s.length;k++)M[s[k]]="*";for(var t in this.oMeasureDetailsSet){var v=this.oMeasureDetailsSet[t];if(!r.bIsFlatListRequest&&!this.mAnalyticalInfoByProperty[t].total){if(v.rawValuePropertyName!=undefined)M[v.rawValuePropertyName]=undefined;if(v.formattedValuePropertyName!=undefined)M[v.formattedValuePropertyName]=undefined}else{if(v.rawValuePropertyName!=undefined)M[v.rawValuePropertyName]=null;if(v.formattedValuePropertyName!=undefined)M[v.formattedValuePropertyName]="*"}}var w="";if(h==null)h=this.oAnalyticalQueryResult.getAllDimensionNames().concat([]).sort();for(var k=0;k<h.length;k++){var x=M[h[k]];w+=(x===undefined?"":x)+","}M.__metadata.uri=w+"-multiple-units-not-dereferencable";delete M.__metadata["self"];delete M.__metadata["self_link_extensions"];M["^~volatile"]=true;this.oModel._importData(M,{});var y=this.oModel._getKey(M);this.oModel.getContext('/'+y)["_volatile"]=true;K[c-1]=y;if(i==d.results.length-1&&p==D)e+=i-f;else e+=i-f-1;f=-1;if(p!=D)K[c++]=this.oModel._getKey(E)}else if(p!=D)K[c++]=this.oModel._getKey(E);p=D}else K[c++]=this.oModel._getKey(E);if(!r.bIsLeafGroupsRequest){var z=this._getGroupIdFromContext(this.oModel.getContext('/'+K[c-1]),G);this.mOwnKey[z]=K[c-1]}}if(!r.bAvoidLengthUpdate){if(d.__count){this.mLength[g]=parseInt(d.__count,10)-e;this.mFinalLength[g]=true;if(r.bIsFlatListRequest)this.iTotalSize=d.__count}if(this.mLength[g]<b+d.results.length){this.mLength[g]=b+(d.results.length-e);this.mFinalLength[g]=false}if((d.results.length-e)<l||l===undefined){this.mLength[g]=b+(d.results.length-e);this.mFinalLength[g]=true}if(d.results.length==0){this.mLength[g]=0;this.mFinalLength[g]=true}}this.bNeedsUpdate=true};A.prototype._processTotalSizeQueryResponse=function(r,d){var a=r.oAnalyticalQueryRequest;if(d.__count==undefined){q.sap.log.fatal("missing entity count in query result");return}this.iTotalSize=d.__count};A.prototype._processLevelMembersQueryResponse=function(r,d){var p=function(c,I){var g={iRequestType:A._requestType.groupMembersQuery,sRequestId:t._getRequestId(A._requestType.groupMembersQuery,{groupId:P}),oAnalyticalQueryRequest:r.oAnalyticalQueryRequest,sGroupId:P,aSelectedUnitPropertyName:r.aSelectedUnitPropertyName,aAggregationLevel:r.aAggregationLevel,bIsFlatListRequest:r.bIsFlatListRequest,bIsLeafGroupsRequest:r.bIsLeafGroupsRequest,iStartIndex:c?r.iStartIndex:0,iLength:r.iLength,bAvoidLengthUpdate:r.bAvoidLengthUpdate};if(c&&r.iStartIndex>0&&(t.mKey[g.sGroupId]===undefined||t.mKey[g.sGroupId][r.iStartIndex-1]===undefined)){var s=t._getParentGroupId(g.sGroupId);var h=t.mKey[s].indexOf(t.mOwnKey[g.sGroupId]);if(h==-1)q.sap.log.fatal("assertion failed: failed to determine position of "+g.sGroupId+" in group "+s);if(h>0&&t.mKey[s][h-1]!==undefined){var j=t.mKey[s][h-1];var k=t._getGroupIdFromContext(t.oModel.getContext('/'+j),t._getGroupIdLevel(g.sGroupId));t.mFinalLength[k]=true;g.iStartIndex=0}}if(I){g.iLength=0;t.mLength[g.sGroupId]=0}var l=q.extend(true,{},d);l.results=b;t._processGroupMembersQueryResponse(g,l)};var a=r.oAnalyticalQueryRequest,t=this;if(d.results.length==0)return;var P=this._getGroupIdFromContext(this.oModel.getContext("/"+this.oModel._getKey(d.results[0])),r.iLevel-1);var b=[];var c=true;for(var i=0;i<d.results.length;i++){var e=d.results[i];var f=this.oModel.getContext("/"+this.oModel._getKey(d.results[i]));var s=this._getGroupIdFromContext(f,r.iLevel-1);if(P==s){b.push(e);if(i<d.results.length-1)continue}p(c,d.results.length==r.iLength&&i==d.results.length-1);c=false;if(P!=s)b=[e];P=s}if(b.length==1)p(c,d.results.length==r.iLength)};A.prototype._getLoadedContextsForGroup=function(g,s,l){var c=[],a,k=this.mKey[g],K;if(!k)return c;if(!s)s=0;if(!l){l=this.oModel.iSizeLimit;if(this.mFinalLength[g]&&this.mLength[g]<l)l=this.mLength[g]}for(var i=s;i<s+l;i++){K=k[i];if(!K){break}a=this.oModel.getContext('/'+K);c.push(a)}return c};A.prototype._calculateRequiredGroupSection=function(g,s,l,t,c){var L=false,a,b,p,P,r,d={},k=this.mKey[g],K;b=s;a=0;if(!k){P=s;p=s+l}else{for(var i=s-1;i>=Math.max(s-t,0);i--){K=k[i];if(!K){P=i+1;break}}for(var j=s+l;j<s+l+t;j++){K=k[j];if(!K){p=j;break}}}r=s-P;if(P&&s>t&&r<t){if(c.length!=l)b=s-t;else b=P-t;a=t}if(b==s)b+=c.length;if(c.length!=l)a+=l-c.length;r=p-s-l;if(r==0)a+=t;if(p&&r<t&&r>0){if(b>=s){b=p;a+=t}}if(this.mFinalLength[g]&&this.mLength[g]<(a+b))a=this.mLength[g]-b;d.startIndex=b;d.length=a;return d};A.prototype._calculateRequiredGroupExpansion=function(g,a,s,l){var n={groupId_Missing:null,length_Missing:0};var c=function(g,a,s,l){var L=t._getGroupIdLevel(g);if(L==a){var j=t._getLoadedContextsForGroup(g,s,l);var k=s+j.length-1;if(j.length>=l)return n;else{if(t.mFinalLength[g]){if(j.length>=t.mLength[g])return{groupId_Missing:null,length_Missing:l-j.length};else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:l-j.length}}else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:l-j.length}}}var j=t._getLoadedContextsForGroup(g,s,l);var b=l,k=s+j.length-1;for(var i=-1,m;m=j[++i];){b--;var G=c(t._getGroupIdFromContext(m,L+1),a,0,b);if(G.groupId_Missing==null){if(G.length_Missing==0)return G;else b=G.length_Missing}else{return G}if(b==0)break}if(t.mFinalLength[g]||b==0)return{groupId_Missing:null,length_Missing:b};else return{groupId_Missing:g,startIndex_Missing:k+1,length_Missing:b}};var t=this;var L=this._getGroupIdLevel(g);if(L==a+1){g=this._getParentGroupId(g);--L}if(g==null||L>a)return n;var b=l,d=s;while(g!=null){var G=c(g,a,d,b);if(G.groupId_Missing!=null)return G;else if(G.length_Missing==0)return G;else{var f=false;while(!f){var p=this._getParentGroupId(g);if(p==null){g=p;--L;break}var e=this.mOwnKey[g];if(!e){q.sap.log.fatal("assertion failed: entitykey for group w/ ID "+g+" not available");return n}var h=this.mKey[p].indexOf(e);if(h==-1){q.sap.log.fatal("assertion failed: group w/ ID "+g+" not found in members of parent w/ ID "+p);return n}if(h==this.mKey[p].length-1){if(this.mFinalLength[p]){g=p;--L;continue}else{return{groupId_Missing:p,startIndex_Missing:h+1,length_Missing:b}}}else{e=this.mKey[p][h+1];g=this._getGroupIdFromContext(this.oModel.getContext('/'+e),L);f=true}}d=0;b=G.length_Missing}}return{groupId_Missing:null,length_Missing:b}};A.prototype._getResourcePath=function(){return this.isRelative()?this.oModel.resolve(this.sPath,this.getContext()):this.sPath};A.prototype._getEntitySet=function(){var e=this.sEntitySetName;var b=this.getContext();if(!e){e=this.sPath.split("/")[1];if(e.indexOf("(")!=-1){e=e.split("(")[0]+"Results"}}return e};A.prototype._getEffectiveSortOrder=function(p){for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i]&&this.aSorter[i].sPath==p){return this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending}}return null};A.prototype._getFilterOperatorMatchingPropertySortOrder=function(p,w){var f=sap.ui.model.FilterOperator.GT;switch(this._getEffectiveSortOrder(p)){case o.SortOrder.Ascending:if(w)f=sap.ui.model.FilterOperator.GE;else f=sap.ui.model.FilterOperator.GT;break;case o.SortOrder.Descending:if(w)f=sap.ui.model.FilterOperator.LE;else f=sap.ui.model.FilterOperator.LT;break}return f};A.prototype._convertDeprecatedFilterObjects=function(f){if(!f)return f;for(var i=0,l=f.length;i<l;i++){if(sap.ui.model.odata&&typeof sap.ui.model.odata.Filter==="function"&&f[i]instanceof sap.ui.model.odata.Filter)f[i]=f[i].convert()}return f};A.prototype._getGroupIdFromContext=function(c,l){if(!c){return null}var g="/";var d=null;if(l>this.aAggregationLevel.length)q.sap.log.fatal("assertion failed: aggregation level deeper than number of current aggregation levels");for(var i=0;i<l;i++){d=c.getProperty(this.aAggregationLevel[i]);if(d!=null){g+=encodeURIComponent(d)+"/"}else{g+="@/"}}return g};A.prototype._getGroupIdLevel=function(g){if(g==null){q.sap.log.fatal("assertion failed: no need to determine level of group ID = null");return-1}return g.split("/").length-2};A.prototype._getGroupIdComponents=function(g){if(g==null)return null;var G=g.split("/");var d=new Array();for(var i=1;i<G.length-1;i++){if(G[i]=="@")d[i-1]=null;else d[i-1]=decodeURIComponent(G[i])}return d};A.prototype._getGroupIdAncestors=function(g,n){if(!n)return[];if(g==null){q.sap.log.fatal("group ID null does not have ancestors");return[]}if(g=="/")if(Math.abs(n)==1)return[null];else{q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);return[]}var G=g.split("/");var a=new Array(),s="";var f=0,t=G.length-3;if(n>0)if(n-1>t)q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);else t=n-1;else if(-(n+1)>t)q.sap.log.fatal("invalid level count "+n+" for ancestors of groupId "+g);else{f=t+1+n;for(var i=0;i<f;i++){s+=G[i]+"/"}}for(var i=f;i<=t;i++){s+=G[i]+"/";a.push(s)}return a};A.prototype._getParentGroupId=function(g){return this._getGroupIdAncestors(g,-1)[0]};A.prototype._removeDuplicatesFromStringArray=function(a){var t={};for(var i=0;i<a.length;i++)t[a[i]]=true;var u=[];for(var s in t)u.push(s);return u};A.prototype._getIdForNewRequestHandle=function(){if(this.oPendingRequestHandle===undefined)this.oPendingRequestHandle=[];for(var i=0;i<this.oPendingRequestHandle.length;i++){if(this.oPendingRequestHandle[i]===undefined)return i}this.oPendingRequestHandle[this.oPendingRequestHandle.length]=undefined;return this.oPendingRequestHandle.length-1};A.prototype._registerNewRequestHandle=function(r,R){if(this.oPendingRequestHandle[r]!==undefined)q.sap.log.fatal("request handle ID already in use");this.oPendingRequestHandle[r]=R};A.prototype._deregisterHandleOfCompletedRequest=function(r){if(this.oPendingRequestHandle[r]===undefined)q.sap.log.fatal("no handle found for this request ID");this.oPendingRequestHandle[r]=undefined};A.prototype._abortAllPendingRequestsByHandle=function(){for(var i=0;i<this.oPendingRequestHandle.length;i++){this.oPendingRequestHandle[i]!==undefined&&this.oPendingRequestHandle[i].abort()}this.oPendingRequestHandle=[]};A.prototype._getRequestId=function(r,p){switch(r){case A._requestType.groupMembersQuery:if(p.groupId===undefined)q.sap.log.fatal("missing group ID");var g=p.groupId;return A._requestType.groupMembersQuery+(g==null?"":g);case A._requestType.levelMembersQuery:if(p.level===undefined)q.sap.log.fatal("missing level");if(p.groupId===undefined)q.sap.log.fatal("missing groupId");return""+A._requestType.levelMembersQuery+p.level+(this.bUseAcceleratedAutoExpand==true?"":p.groupId);case A._requestType.totalSizeQuery:return A._requestType.totalSizeQuery;default:q.sap.log.fatal("invalid request type "+r);return-1}};A.prototype._registerNewRequest=function(r){if(r==undefined||r==""){q.sap.log.fatal("missing request ID");return}if(!this.oPendingRequests[r])this.oPendingRequests[r]=1;else++this.oPendingRequests[r]};A.prototype._considerRequestGrouping=function(r){for(var i=-1,R;R=r[++i];){if(this.oGroupedRequests[R]===undefined)this.oGroupedRequests[R]={};var g=this.oGroupedRequests[R];for(var j=0;j<r.length;j++)g[r[j]]=true}};A.prototype._isRequestPending=function(r){return this.oPendingRequests[r]!=undefined&&this.oPendingRequests[r]>0};A.prototype._deregisterCompletedRequest=function(r){if(!this.oPendingRequests[r])q.sap.log.fatal("assertion failed: there is no pending request ID "+r);if(this.oPendingRequests[r]==1)delete this.oPendingRequests[r];else--this.oPendingRequests[r]};A.prototype._cleanupGroupingForCompletedRequest=function(r){if(this._isRequestPending(r))return false;var g=true;if(this.oGroupedRequests[r]!=undefined){for(var O in this.oGroupedRequests[r]){if(this.oPendingRequests[O]){g=false;break}}}if(g){var R=this.oGroupedRequests[r];delete this.oGroupedRequests[r];for(var O in R){if(O!=r)this._cleanupGroupingForCompletedRequest(O)}}return g};A.prototype._clearAllPendingRequests=function(){this.oPendingRequests={};this.oGroupedRequests={}};A.prototype.resetData=function(c){if(c){var p=c.getPath();delete this.mKey[p];delete this.mOwnKey[p];delete this.mLength[p];delete this.mFinalLength[p]}else{this.mKey={};this.mOwnKey={};this.mLength={};this.mFinalLength={}}};A.prototype.refresh=function(f,c,e){var b=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e))b=true}if(c&&!b){q.each(this.mKey,function(i,n){q.each(n,function(i,k){if(k in c){b=true;return false}});if(b)return false})}if(!c&&!e){b=true}}if(f||b){this._abortAllPendingRequests();this.resetData();this.bNeedsUpdate=false;this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}};A.prototype.checkUpdate=function(f,c){var b=false;if(!f){if(this.bNeedsUpdate||!c){b=true}else{q.each(this.mKey,function(i,n){q.each(n,function(i,k){if(k in c){b=true;return false}});if(b)return false})}}if(f||b){this.bNeedsUpdate=false;this._fireChange()}};A.prototype.getDownloadUrl=function(f){var a=new o.QueryResultRequest(this.oAnalyticalQueryResult);a.setResourcePath(this._getResourcePath());var s=[];var b=[];for(var d in this.oDimensionDetailsSet)s.push(d);a.setAggregationLevel(s);for(var d in this.oDimensionDetailsSet){var D=this.oDimensionDetailsSet[d];var I=(D.keyPropertyName!=undefined);var c=(D.textPropertyName!=undefined);a.includeDimensionKeyTextAttributes(D.name,true,c,D.aAttributeName)}for(var m in this.oMeasureDetailsSet)b.push(m);a.setMeasures(b);for(var m in this.oMeasureDetailsSet){var M=this.oMeasureDetailsSet[m];var e=(M.rawValuePropertyName!=undefined);var g=(M.formattedValuePropertyName!=undefined);var h=(M.unitPropertyName!=undefined);a.includeMeasureRawFormattedValueUnit(M.name,e,g,h)}var j=a.getSortExpression();j.clear();for(var i=0;i<this.aSorter.length;i++){if(this.aSorter[i]){j.addSorter(this.aSorter[i].sPath,this.aSorter[i].bDescending?o.SortOrder.Descending:o.SortOrder.Ascending)}}var k=a.getFilterExpression();k.clear();if(this.aApplicationFilter){k.addUI5FilterConditions(this.aApplicationFilter)}if(this.aControlFilter){k.addUI5FilterConditions(this.aControlFilter)}var p=a.getURIToQueryResultEntitySet();var P=this._getQueryODataRequestOptions(a);for(var i=0,l=P.length;i<l;i++){if(/^\$select/i.test(P[i])){P.splice(i,1);break}}var v=[];for(var i=0,l=this.aAnalyticalInfo.length;i<l;i++){var n=this.aAnalyticalInfo[i];if(n.visible){v.push(n.name)}}if(v.length>0){P.push("$select="+v.join(","))}if(f){P.splice(0,0,"$format="+encodeURIComponent(f))}if(p){return this.oModel._createRequestUrl(p,null,P)}};return A},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.TreeBindingAdapter')){jQuery.sap.declare('sap.ui.model.analytics.TreeBindingAdapter');sap.ui.define("sap/ui/model/analytics/TreeBindingAdapter",['jquery.sap.global','sap/ui/model/TreeBinding','./AnalyticalBinding'],function(q,T,A){"use strict";var a=function(){if(!(this instanceof T&&this.getContexts===undefined)){return}for(var f in a.prototype){if(a.prototype.hasOwnProperty(f)){this[f]=a.prototype[f]}}this._aContexts=[];this._aContextInfos=[];this._bInitial=true;this._oExpanded={};this._oOpenGroups={};this._bTriggeredOpenGroupsLoad=false};a.prototype._updateContexts=function(p,c,C,r){var I=p;for(var i=0;i<c.length;i++){var o=c[i];var b=C[i];this._aContexts.splice(p,r?1:0,o);this._aContextInfos.splice(p,r?1:0,b);p++}if(!r){this._fireContextChange({type:"insert",index:I,length:c.length})}return C};a.prototype.getLength=function(){return this._aContexts.length};a.prototype.getContextInfo=function(i){return this._aContextInfos.slice(i,i+1)[0]};a.prototype._createContextInfos=function(c,p,P,l,L,t,s,I,b){if(!I){I=0}var C=[];for(var i=0;i<c.length;i++){var o=c[i];C.push({context:o,level:l,expanded:false,childCount:0,parent:p,sum:s,position:P,index:i+I,autoExpand:b,expandLength:L,expandThreshold:t});P++}return C};a.prototype.getContexts=function(s,l,t){var b=this;if(!l){l=this.oModel.iSizeLimit}if(this._bInitial){var n=this.mParameters&&this.mParameters.numberOfExpandedLevels;var r=this.getRootContexts({startIndex:s,length:l,threshold:t,numberOfExpandedLevels:n});if(r&&r.length>0){this._bInitial=false;var N=this._createContextInfos(r,null,0,0,l,t,true,0,parseInt(n,10)+1);if(this.bProvideGrandTotals&&this._hasTotaledMeasures()){this._updateContexts(0,r,N)}else{this._expandNodesForContexts(N,0,l,t)}}}if(this._oOpenGroups!={}&&this._bTriggeredOpenGroupsLoad==false){this.loadGroups(this._oOpenGroups);this._bTriggeredOpenGroupsLoad=true}this._expandNodesForContexts(this._aContextInfos.slice(s,s+l),s,l,t);var c=this._aContexts.slice(s,s+l);var C=this._aContextInfos.slice(s,s+l);var m={};q.each(c,function(i,o){if(!o){var d=b._aContextInfos[s+i];var p=d.parent;var S=m[p.getPath()];if(S){S.startIndex=Math.min(S.startIndex,d.index);S.position=Math.min(S.position,d.position);S.endIndex=Math.max(S.endIndex,d.index)}else{m[p.getPath()]={startIndex:d.index,endIndex:d.index,parent:d.parent,level:d.level-1,position:d.position}}}});var b=this,u=false;q.each(m,function(i,S){var d=S.endIndex-S.startIndex+1;var e=Math.max(b.mParameters.numberOfExpandedLevels-S.level,0);var M=b.getNodeContexts(S.parent,{startIndex:S.startIndex,length:d,threshold:t,level:S.level,numberOfExpandedLevels:e});if(M.length>0){b._updateContexts(S.position,M,b._createContextInfos(M,S.parent,S.position,S.level+1,d,t,false,0,e),true);b._updateExpandedInfo(S.parent,S.level,S.startIndex,S.endIndex-S.startIndex+1,t);u=true}});if(u){this._expandNodesForContexts(this._aContextInfos.slice(s,s+l),s,l,t);c=this._aContexts.slice(s,s+l)}return c};a.prototype._expandNodesForContexts=function(c,s,l,t){var e=q.grep(c,function(C){return C.autoExpand>0});for(var i=0;i<e.length;i++){this._expandNode(e[i],s,l,t)}};a.prototype._expandNode=function(c,s,l,t){var C=c.context,n=c.expandLength,N=c.expandThreshold,h=this.hasMeasures();if(!(c.position>=s&&c.position<=s+l)||c.expanded===true){return}var b=this.getNodeContexts(C,{startIndex:0,length:n,threshold:N,level:c.level,numberOfExpandedLevels:c.autoExpand?c.autoExpand-1:0});if(b&&b.length>0){var r=this.getGroupSize(C,c.level),i=c.parent?c.position+1:0,p=i,L=c.level+1,I=L,d=this._createContextInfos(b,C,p,L,n,N,false,0,c.autoExpand?c.autoExpand-1:0);p+=d.length;var e=d.length;if(r>-1){for(var j=b.length;j<r;j++){b.push(undefined);d.push(this._createContextInfos([undefined],C,p,L,l,t,false,e,c.autoExpand?c.autoExpand-1:0)[0]);p++;e++}}if(C&&c.parent!=null&&r>1&&!this.mParameters.sumOnTop&&h){b.push(C);d.push(this._createContextInfos([C],C,p,L-1,l,t,true,e,0)[0])}var f=b.length;this._updateContexts(i,b,d);var g=i+f;var P;L--;var k=i;while(P=this._aContextInfos[k]){if(P.level==L){P.childCount=P.childCount+f;L--}k--;if(L<0)break}var o=this._aContextInfos[g];if(o){var m=this._aContextInfos[g-1].position-o.position+1;for(var j=g;j<this._aContextInfos.length;j++){this._aContextInfos[j].position+=m}}if(c){c.expanded=true}this._updateExpandedInfo(c.context,c.level,0,l,t);var u=false;for(var j=0;j<b.length;j++){if(I<=this.aAggregationLevel.length&&this._oOpenGroups[this._getGroupIdFromContext(b[j],I)]){this._expandNode(d[j],s,l,t);delete this._oOpenGroups[this._getGroupIdFromContext(b[j],I)];u=true}if(d[j].autoExpand>0&&this.hasAvailableNodeContexts(b[j],I)>0&&!u){this._expandNode(d[j],s,l,t)}}c.autoExpand=0}};a.prototype._updateExpandedInfo=function(c,l,s,L,t){var b=this._getGroupIdFromContext(c,l);var p=b.substr(0,b.length-1).split("/");var e=this._oExpanded;for(var j=0;j<p.length;j++){var P=p[j];if(j==0){P="root"}e[P]=e[P]||{};e=e[P];if(j==p.length-1){e["sections"]=e["sections"]||[];if(e["sections"].length==0){e["sections"].push({startIndex:s,length:L,threshold:t})}var E=false;for(var k=0;k<e["sections"].length;k++){var S=e["sections"][k];var i=S.startIndex+S.length+S.threshold;var d=s+L+t;if(S.startIndex<=s&&i>=d){return}else if(S.startIndex<=s&&i>=s){S.threshold=Math.max(S.threshold,t);S.length=d-S.startIndex-S.threshold;E=true}else if(S.startIndex>s&&i>d){S.length=S.length+(S.startIndex-s);S.startIndex=s;S.threshold=Math.max(S.threshold,t);E=true}else if(S.startIndex>s&&S.endIndex<d){S.startIndex=s;S.length=L;S.threshold=t;E=true}}if(!E){e["sections"].push({startIndex:s,length:L,threshold:t})}}else{e["children"]=e["children"]||{};e["childProperty"]=this.aAggregationLevel[j];e=e["children"]}}};a.prototype.expand=function(i){var c=this._aContextInfos[i];if(c.expanded){return}c.autoExpand=c.autoExpand||1};a.prototype.collapse=function(I){var c=this._aContextInfos[I];var C=this._aContexts[I];if(!c.expanded){return}var p=c.position+1,l=c.childCount,L=c.level;var e=this._oExpanded["root"];var s=this._getGroupIdFromContext(C,L);var P=s.substr(0,s.length-1).split("/");for(var i=1;i<L;i++){e=e["children"][P[i]]}delete e["children"][P[P.length-1]];var r=p;this._aContexts.splice(p,l);this._aContextInfos.splice(p,l);p--;var o;while(o=this._aContextInfos[p]){if(o.level==L){o.childCount=o.childCount-l;L--}p--;if(L<0)break}if(r<this._aContextInfos.length){var d=this._aContextInfos[r-1].position-this._aContextInfos[r].position+1;for(var j=r;j<this._aContextInfos.length;j++){this._aContextInfos[j].position+=d}this._fireContextChange({type:"remove",index:r,length:Math.abs(d)})}c.expanded=false};a.prototype.collapseAll=function(l){if(!l||l<1){l=1}for(var i=0,j=this._aContextInfos.length;i<j;i++){if(this._aContextInfos[i].level==l){this.collapse(i);j=this._aContextInfos.length}}};a.prototype.toggleIndex=function(i){if(!this._aContextInfos[i].expanded){this.expand(i)}else{this.collapse(i)}};a.prototype.indexHasChildren=function(i){var c=this._aContextInfos[i];if(!c.parent||c.sum){return false}else{return A.prototype.hasChildren.call(this,c.context,{level:c.level})}};a.prototype.resetData=function(c){var r=A.prototype.resetData.call(this,c);this._aContexts=[];this._aContextInfos=[];this._oOpenGroups={};this._removeGroups(this._oExpanded["root"],0,'');this._oExpanded={};this._bInitial=true;this._bTriggeredOpenGroupsLoad=false;return r};a.prototype.updateAnalyticalInfo=function(c){var r=A.prototype.updateAnalyticalInfo.call(this,c);this._aContexts=[];this._aContextInfos=[];this._oOpenGroups={};this._removeGroups(this._oExpanded["root"],0,'');this._oExpanded={};this._bInitial=true;this._bTriggeredOpenGroupsLoad=false;return r};a.prototype._removeGroups=function(g,l,p){if(!g){return}this._oOpenGroups[p+'/']=g.sections;if(!g.childProperty){return}if(g.childProperty!=this.aAggregationLevel[l]){delete g.children;delete g.childProperty}else{for(var c in g.children){this._removeGroups(g.children[c],l+1,p+'/'+c)}}};a.prototype._hasTotaledMeasures=function(){var h=false;q.each(this.getMeasureDetails(),function(i,m){if(m.analyticalInfo.total){h=true;return false}});return h};a.prototype.attachContextChange=function(f,l){this.attachEvent("contextChange",f,l)};a.prototype.detachContextChange=function(f,l){this.detachEvent("contextChange",f,l)};a.prototype._fireContextChange=function(m){this.fireEvent("contextChange",m)};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.Filter')){jQuery.sap.declare('sap.ui.model.odata.Filter');sap.ui.define("sap/ui/model/odata/Filter",['jquery.sap.global','sap/ui/model/Filter','sap/ui/model/FilterOperator'],function(q,F,a){"use strict";var O=sap.ui.base.Object.extend("sap.ui.model.odata.Filter",{constructor:function(p,v,A){if(typeof p==="object"){var f=p;p=f.path;v=f.values;A=f.and}this.sPath=p;this.aValues=v;this.bAND=A==undefined?true:A},convert:function(){var f=[];for(var i=0,l=this.aValues&&this.aValues.length||0;i<l;i++){f.push(new F({path:this.sPath,operator:this.aValues[i].operator,value1:this.aValues[i].value1,value2:this.aValues[i].value2}))}if(f.length>1){var o=new F({filters:f,and:this.bAND});return o}else{return f[0]}}});return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataAnnotations')){jQuery.sap.declare('sap.ui.model.odata.ODataAnnotations');sap.ui.define("sap/ui/model/odata/ODataAnnotations",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var O=sap.ui.base.EventProvider.extend("sap.ui.model.odata.ODataAnnotations",{constructor:function(a,m,p){"use strict";E.apply(this,arguments);this.oMetadata=m;this.oAnnotations=null;this.bLoaded=false;this.bAsync=p&&p.async;this.xPath=null;this.aAnnotationURI=a;this.error=null;this.bValidXML=true;this.oRequestHandles=[];this.oLoadEvent=null;this.oFailedEvent=null;this.xmlCompatVersion=false;if(a){this.loadXML();if(!this.bAsync){if(this.error){q.sap.log.error("OData annotations could not be loaded: "+this.error.message)}}}},metadata:{publicMethods:["parse","getAnnotationsData","attachFailed","detachAnnoationsFailed","attachLoaded","detachLoaded"]}});O.prototype.getAnnotationsData=function(){return this.oAnnotations};O.prototype.isLoaded=function(){return this.bLoaded};O.prototype.fireLoaded=function(a){this.fireEvent("loaded",a);return this};O.prototype.attachLoaded=function(d,f,l){this.attachEvent("loaded",d,f,l);return this};O.prototype.detachLoaded=function(f,l){this.detachEvent("loaded",f,l);return this};O.prototype.fireFailed=function(a){this.fireEvent("failed",a);return this};O.prototype.attachFailed=function(d,f,l){this.attachEvent("failed",d,f,l);return this};O.prototype.detachFailed=function(f,l){this.detachEvent("failed",f,l);return this};O.prototype._parseAliases=function(x,a,A){var r=this.xPath.selectNodes(x,"//edmx:Reference",x);for(var i=0;i<r.length;i+=1){var b=this.xPath.nextNode(r,i);var c=this.xPath.selectNodes(x,"./edmx:Include",b);if(c&&c.length>0){var d=this.xPath.nextNode(c,0);if(d.getAttribute("Alias")){A[d.getAttribute("Alias")]=d.getAttribute("Namespace")}else{A[d.getAttribute("Namespace")]=d.getAttribute("Namespace")}}var e=this.xPath.selectNodes(x,"./edmx:IncludeAnnotations",b);if(e.length>0){for(var j=0;j<e.length;j+=1){var f=this.xPath.nextNode(e,j);if(f.getAttribute("TargetNamespace")){var s=f.getAttribute("TargetNamespace");if(!a[s]){a[s]={}}a[s][f.getAttribute("TermNamespace")]=b.getAttribute("Uri")}else{a[f.getAttribute("TermNamespace")]=b.getAttribute("Uri")}}}}};O.prototype.parse=function(x){var m={},s,S={},a,A={},t=this,b,T,c,d,M,e,f,g,h,j,p,k,l,n,o,r,u,v,w,y,z,B,C;var D={};this.xPath=this.getXPath();this.oServiceMetadata=this.oMetadata.getServiceMetadata();x=this.xPath.setNameSpace(x);s=this.xPath.selectNodes(x,"//d:Schema",x);for(var i=0;i<s.length;i+=1){a=this.xPath.nextNode(s,i);S.Alias=a.getAttribute("Alias");S.Namespace=a.getAttribute("Namespace")}this._parseAliases(x,A,D);if(A){m.annotationReferences=A}m.aliasDefinitions=D;b=this.xPath.selectNodes(x,"//d:Term",x);if(b.length>0){T={};for(var F=0;F<b.length;F+=1){c=this.xPath.nextNode(b,F);d=this.replaceWithAlias(c.getAttribute("Type"),D);T["@"+S.Alias+"."+c.getAttribute("Name")]=d}m.termDefinitions=T}M=this.getAllPropertiesMetadata(this.oServiceMetadata);if(M.extensions){m.propertyExtensions=M.extensions}e=this.xPath.selectNodes(x,"//d:Annotations ",x);for(var F=0;F<e.length;F+=1){f=this.xPath.nextNode(e,F);if(f.hasChildNodes()===false){continue}g=f.getAttribute("Target");h=g.split(".")[0];if(h&&D[h]){g=g.replace(new RegExp(h,""),D[h])}j=g;p=null;if(g.indexOf("/")>0){j=g.split("/")[0];p=g.replace(j+"/","")}if(!m[j]){m[j]={}}if(p){if(!m.propertyAnnotations){m.propertyAnnotations={}}if(!m.propertyAnnotations[j]){m.propertyAnnotations[j]={}}m.propertyAnnotations[j][p]={};k=this.xPath.selectNodes(x,"./d:Annotation",f);for(var G=0;G<k.length;G+=1){l=this.xPath.nextNode(k,G);if(l.hasChildNodes()===false){n=this.replaceWithAlias(l.getAttribute("Term"),D);m.propertyAnnotations[j][p][n]=this.getPropertyValueAttributes(l,D)}}}else{o=j.replace(D[h],h);k=this.xPath.selectNodes(x,"./d:Annotation",f);for(var H=0;H<k.length;H+=1){l=this.xPath.nextNode(k,H);r=l.getAttribute("Qualifier");u=this.replaceWithAlias(l.getAttribute("Term"),D);if(r){u+="#"+r}v=this.getPropertyValue(x,l,o,D);v=this.setEdmTypes(v,M.types,j,S);m[j][u]=v}w=this.xPath.selectNodes(x,"//d:Annotations[contains(@Target, '"+o+"')]//d:PropertyValue[contains(@Path, '/')]//@Path",x);for(i=0;i<w.length;i+=1){y=this.xPath.nextNode(w,i);z=y.value;if(m.propertyAnnotations){if(m.propertyAnnotations[j]){if(m.propertyAnnotations[j][z]){continue}}}B=z.split('/');if(this.isNavProperty(j,B[0],this.oServiceMetadata)){if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}m.expand[j][B[0]]=B[0]}}C=this.xPath.selectNodes(x,"//d:Annotations[contains(@Target, '"+o+"')]//d:Path[contains(., '/')]",x);for(i=0;i<C.length;i+=1){y=this.xPath.nextNode(C,i);z=this.xPath.getNodeText(y);if(m.propertyAnnotations[j]){if(m.propertyAnnotations[j][z]){continue}}if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}B=z.split('/');if(this.isNavProperty(j,B[0],this.oServiceMetadata)){if(!m.expand){m.expand={}}if(!m.expand[j]){m.expand[j]={}}m.expand[j][B[0]]=B[0]}}}}return m};O.prototype.getXPath=function(){var x={};if(this.xmlCompatVersion){x={setNameSpace:function(o){o.setProperty("SelectionNamespaces",'xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" xmlns:d="http://docs.oasis-open.org/odata/ns/edm"');o.setProperty("SelectionLanguage","XPath");return o},selectNodes:function(o,x,i){return i.selectNodes(x)},nextNode:function(n){return n.nextNode()},getNodeText:function(n){return n.text}}}else{x={setNameSpace:function(o){return o},nsResolver:function(p){var n={"edmx":"http://docs.oasis-open.org/odata/ns/edmx","d":"http://docs.oasis-open.org/odata/ns/edm"};return n[p]||null},selectNodes:function(o,p,i){var a=o.evaluate(p,i,this.nsResolver,7,null);a.length=a.snapshotLength;return a},nextNode:function(n,i){return n.snapshotItem(i)},getNodeText:function(n){return n.textContent}}}return x};O.prototype.setXML=function(x,X,o){var d={success:function(){},error:function(){}};o=q.extend({},d,o);var t=this;var a=null;if(sap.ui.Device.browser.internet_explorer){a=new ActiveXObject("Microsoft.XMLDOM");a.loadXML(X);this.xmlCompatVersion=true}else if(x){a=x}else{a=new DOMParser().parseFromString(X,'application/xml')}if(a.getElementsByTagName("parsererror").length>0){o.error({xmlDoc:a});return false}else{if(q.isEmptyObject(this.oMetadata.getServiceMetadata())){this.oMetadata.attachLoaded(function(){var A=t.parse(a);if(A){o.success({annotations:A,xmlDoc:a})}else{o.error({xmlDoc:a})}})}else{var A=this.parse(a);if(A){o.success({annotations:A,xmlDoc:a})}else{o.error({xmlDoc:a})}}return true}};O.prototype.loadXML=function(){var t=this;if(!q.isArray(this.aAnnotationURI)){this.aAnnotationURI=[this.aAnnotationURI]}var l=this.aAnnotationURI.length;this.mLoaded={length:l};for(var i=0;i<l;++i){this.mLoaded[i]=false;var a={url:this.aAnnotationURI[i],async:this.bAsync};var h=(function(r){return function _handleFail(j,s){if(t.oRequestHandles[r]&&t.oRequestHandles[r].bSuppressErrorHandlerCall){return}t.oRequestHandles[r]=null;t.error={message:s,statusCode:j.statusCode,statusText:j.statusText,url:t.aAnnotationURI[r],responseText:j.responseText};if(!this.bAsync){t.oFailedEvent=q.sap.delayedCall(0,t,t.fireFailed,[t.error])}else{t.fireFailed(t.error)}}})(i);var H=(function(r){return function(d,T,j){t.oRequestHandles[r]=null;t.setXML(j.responseXML,j.responseText,{success:function(D){t.mLoaded[r]=D.annotations;t.checkAllLoaded()},error:function(D){t.mLoaded[r]=false;h(j,"Malformed XML document");t.checkAllLoaded()}})}})(i);this.oRequestHandles[i]=q.ajax(a).done(H).fail(h)}};O.prototype.checkAllLoaded=function(){var l=this.mLoaded.length;for(var i=0;i<l;++i){if(!this.mLoaded[i]){return}}this.oAnnotations={};for(var i=0;i<l;++i){q.extend(true,this.oAnnotations,this.mLoaded[i])}this.bLoaded=true;if(this.bAsync){this.fireLoaded({annotations:this.oAnnotations})}else{this.oLoadEvent=q.sap.delayedCall(0,this,this.fireLoaded,[{annotations:this.oAnnotations}])}};O.prototype.getAllPropertiesMetadata=function(m){var M={},P={},o={},b=false,n,e,c,a={},d={},f={},g=false,h,C,s,t,r,R;for(var i=m.dataServices.schema.length-1;i>=0;i-=1){M=m.dataServices.schema[i];if(M.entityType){n=M.namespace;e=M.entityType;c=M.complexType;for(var j in e){a=e[j];f={};if(a.hasStream&&a.hasStream==="true"){continue}for(var k in a.property){h=a.property[k];if(h.type.substring(0,n.length)===n){for(var l in c){if(c[l].name===h.type.substring(n.length+1)){for(k in c[l].property){C=c[l].property[k];d[c[l].name+"/"+C.name]=C.type}}}}else{s=h.name;t=h.type;for(var p in h.extensions){r=h.extensions[p];if((r.name==="display-format")&&(r.value==="Date")){t="Edm.Date"}else{g=true;if(!f[s]){f[s]={}}if(r.namespace&&!f[s][r.namespace]){f[s][r.namespace]={}}f[s][r.namespace][r.name]=r.value}}d[s]=t}}if(!P[n+"."+a.name]){P[n+"."+a.name]={}}P[n+"."+a.name]=d;if(g){if(!o[n+"."+a.name]){b=true}o[n+"."+a.name]={};o[n+"."+a.name]=f}}}}if(b){R={types:P,extensions:o}}else{R={types:P}}return R};O.prototype.setEdmTypes=function(p,P,t,s){var o,e='';for(var a in p){if(p[a]){o=p[a];if(o.Value&&o.Value.Path){e=this.getEdmType(o.Value.Path,P,t,s);if(e){p[a].EdmType=e}continue}if(o.Path){e=this.getEdmType(o.Path,P,t,s);if(e){p[a].EdmType=e}continue}if(o.Facets){p[a].Facets=this.setEdmTypes(o.Facets,P,t,s);continue}if(o.Data){p[a].Data=this.setEdmTypes(o.Data,P,t,s);continue}if(a==="Data"){p.Data=this.setEdmTypes(o,P,t,s);continue}if(o.Value&&o.Value.Apply){p[a].Value.Apply.Parameters=this.setEdmTypes(o.Value.Apply.Parameters,P,t,s);continue}if(o.Value&&o.Type&&(o.Type==="Path")){e=this.getEdmType(o.Value,P,t,s);if(e){p[a].EdmType=e}}}}return p};O.prototype.getEdmType=function(p,P,t,s){if((p.charAt(0)==="@")&&(p.indexOf(s.Alias)===1)){p=p.slice(s.Alias.length+2)}if(p.indexOf("/")>=0){if(P[p.slice(0,p.indexOf("/"))]){t=p.slice(0,p.indexOf("/"));p=p.slice(p.indexOf("/")+1)}}for(var a in P[t]){if(p===a){return P[t][a]}}};O.prototype.getPropertyValueAttributes=function(d,a){var b="",c="",i,p={};for(i=0;i<d.attributes.length;i+=1){if((d.attributes[i].name!=="Property")&&(d.attributes[i].name!=="Term")){b=d.attributes[i].name;c=d.attributes[i].value}}if(b.length>0){p[b]=this.replaceWithAlias(c,a)}return p};O.prototype.getSimpleNodeValue=function(x,d){var v={},s,a,p,b,c,e;if(d.hasChildNodes()){s=this.xPath.selectNodes(x,"./d:String",d);if(s.length>0){a=this.xPath.nextNode(s,0);v["String"]=this.xPath.getNodeText(a)}else{p=this.xPath.selectNodes(x,"./d:Path",d);if(p.length>0){b=this.xPath.nextNode(p,0);v["Path"]=this.xPath.getNodeText(b)}else{c=this.xPath.selectNodes(x,"./d:Apply",d);if(c.length>0){e=this.xPath.nextNode(c,0);v["Apply"]=this.getApplyFunctions(x,e,this.xPath)}}}}return v};O.prototype.getPropertyValue=function(x,d,t,a){var p={},r,b,n,c,e,u,f,g,P={},h,i,j,k,l;var m=this.getXPath();if(d.hasChildNodes()){r=this.xPath.selectNodes(x,"./d:Record | ./d:Collection/d:Record | ./d:Collection/d:If/d:Record",d);if(r.length){b=0;for(n=0;n<r.length;n+=1){c=this.xPath.nextNode(r,n);e=this.getPropertyValues(x,c,t,a);if(c.getAttribute("Type")){e["RecordType"]=this.replaceWithAlias(c.getAttribute("Type"),a)}if(b===0){if(c.nextElementSibling||(c.parentNode.nodeName==="Collection")||(c.parentNode.nodeName==="If")){p=[];p.push(e)}else{p=e}}else{p.push(e)}b+=1}}else{u=this.xPath.selectNodes(x,"./d:UrlRef",d);if(u.length>0){for(n=0;n<u.length;n+=1){f=this.xPath.nextNode(u,n);p["UrlRef"]=this.getSimpleNodeValue(x,f)}}else{u=this.xPath.selectNodes(x,"./d:Url",d);if(u.length>0){for(n=0;n<u.length;n+=1){f=this.xPath.nextNode(u,n);p["Url"]=this.getSimpleNodeValue(x,f)}}else{l=this.xPath.selectNodes(x,"./d:Collection/d:AnnotationPath | ./d:Collection/d:PropertyPath",d);if(l.length>0){p=[];for(n=0;n<l.length;n+=1){g=this.xPath.nextNode(l,n);P={};P[g.nodeName]=m.getNodeText(g);p.push(P)}}else{p=this.getPropertyValueAttributes(d,a);h=this.xPath.selectNodes(x,"./d:Annotation",d);i={};for(j=0;j<h.length;j+=1){i=this.xPath.nextNode(h,j);if(i.hasChildNodes()===false){k=this.replaceWithAlias(i.getAttribute("Term"),a);p[k]=this.getPropertyValueAttributes(i,a)}}}}}}}else{p=this.getPropertyValueAttributes(d,a)}return p};O.prototype.getPropertyValues=function(x,d,t,a){var p={},b={},c,n,e,f,g,h,i,j,k,l;c=this.xPath.selectNodes(x,"./d:Annotation",d);for(n=0;n<c.length;n+=1){b=this.xPath.nextNode(c,n);if(b.hasChildNodes()===false){e=this.replaceWithAlias(b.getAttribute("Term"),a);p[e]=this.getPropertyValueAttributes(b,a)}}f=this.xPath.selectNodes(x,"./d:PropertyValue",d);if(f.length>0){for(g=0;g<f.length;g+=1){h=this.xPath.nextNode(f,g);i=h.getAttribute("Property");p[i]=this.getPropertyValue(x,h,t,a);j=this.xPath.selectNodes(x,"./d:Apply",h);k=null;for(l=0;l<j.length;l+=1){k=this.xPath.nextNode(j,l);if(k){p[i]={};p[i]['Apply']=this.getApplyFunctions(x,k)}}}}else{p=this.getPropertyValue(x,d,t,a)}return p};O.prototype.getApplyFunctions=function(x,a){var b={},p,c=null,d=[],i;p=this.xPath.selectNodes(x,"./d:*",a);for(i=0;i<p.length;i+=1){c=this.xPath.nextNode(p,i);switch(c.nodeName){case"Apply":d.push({"Type":"Apply","Value":this.getApplyFunctions(x,c)});break;case"LabeledElement":d.push({"Name":c.getAttribute("Name"),"Value":this.getSimpleNodeValue(x,c)});break;default:d.push({"Type":c.nodeName,"Value":this.xPath.getNodeText(c)});break}}b['Name']=a.getAttribute('Function');b['Parameters']=d;return b};O.prototype.isNavProperty=function(e,p,m){var M,i,n,a,j,k;for(i=m.dataServices.schema.length-1;i>=0;i-=1){M=m.dataServices.schema[i];if(M.entityType){n=M.namespace+".";a=M.entityType;for(k=a.length-1;k>=0;k-=1){if(n+a[k].name===e&&a[k].navigationProperty){for(j=0;j<a[k].navigationProperty.length;j+=1){if(a[k].navigationProperty[j].name===p){return true}}}}}}return false};O.prototype.replaceWithAlias=function(v,a){for(var A in a){if(v.indexOf(A+".")>=0){v=v.replace(A+".",a[A]+".");return v}}return v};O.prototype.destroy=function(){for(var i=0;i<this.oRequestHandles.length;++i){if(this.oRequestHandles[i]){this.oRequestHandles[i].bSuppressErrorHandlerCall=true;this.oRequestHandles[i].abort();this.oRequestHandles[i]=null}}sap.ui.base.Object.prototype.destroy.apply(this,arguments);if(!!this.oLoadEvent){q.sap.clearDelayedCall(this.oLoadEvent)}if(!!this.oFailedEvent){q.sap.clearDelayedCall(this.oFailedEvent)}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataContextBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataContextBinding');sap.ui.define("sap/ui/model/odata/ODataContextBinding",['jquery.sap.global','sap/ui/model/ContextBinding'],function(q,C){"use strict";var O=C.extend("sap.ui.model.odata.ODataContextBinding",{constructor:function(m,p,c,P,e){C.call(this,m,p,c,P,e)}});O.prototype.initialize=function(){var t=this,r=this.oModel.resolve(this.sPath,this.oContext),d=this.oModel._getObject(this.sPath,this.oContext),R=this.oModel._isReloadNeeded(r,d,this.mParameters);if(this.oModel.oMetadata.isLoaded()){if(R){this.fireDataRequested()}this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange();if(R){t.fireDataReceived()}},R)}};O.prototype.refresh=function(f,c){var t=this,k,s,b=false;if(c){s=this.oModel._getObject(this.sPath,this.oContext);if(s){k=this.oModel._getKey(s);if(k in c){b=true}}}else{b=true}if(f||b){this.fireDataRequested();this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(o){if(t.oElementContext==o){if(f){t._fireChange()}}else{t.oElementContext=o;t._fireChange()}t.fireDataReceived()},true)}};O.prototype.setContext=function(c){var t=this,r,d,R;if(this.oContext!=c&&this.isRelative()){r=this.oModel.resolve(this.sPath,this.oContext),d=this.oModel._getObject(this.sPath,this.oContext),R=this.oModel._isReloadNeeded(r,d,this.mParameters);this.oContext=c;if(R){this.fireDataRequested()}this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange();if(R){t.fireDataReceived()}},R)}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataMetadata')){jQuery.sap.declare('sap.ui.model.odata.ODataMetadata');sap.ui.define("sap/ui/model/odata/ODataMetadata",['jquery.sap.global','sap/ui/base/EventProvider'],function(q,E){"use strict";var O=sap.ui.base.EventProvider.extend("sap.ui.model.odata.ODataMetadata",{constructor:function(m,p){E.apply(this,arguments);this.bLoaded=false;this.bFailed=false;this.mEntityTypes={};this.oRequestHandle=null;this.sUrl=m;this.bAsync=p.async;this.sUser=p.user;this.bWithCredentials=p.withCredentials;this.sPassword=p.password;this.mHeaders=p.headers;this.oLoadEvent=null;this.oFailedEvent=null;this.oMetadata=null;this.mNamespaces=p.namespaces||{sap:"http://www.sap.com/Protocols/SAPData",m:"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata","":"http://schemas.microsoft.com/ado/2007/06/edmx"};this._loadMetadata()},metadata:{publicMethods:["getServiceMetadata","attachFailed","detachFailed","attachLoaded","detachLoaded"]}});O.prototype._setNamespaces=function(n){this.mNamespaces=n};O.prototype._loadMetadata=function(){var t=this;var r=this._createRequest(this.sUrl);function _(m,R){if(!m||!m.dataServices){var p={message:"Invalid metadata document",request:r,response:R};a(p);return}t.oMetadata=m;t.oRequestHandle=null;if(t.bAsync){t.fireLoaded(t)}else{t.bLoaded=true;t.oLoadEvent=q.sap.delayedCall(0,t,t.fireLoaded,[t])}}function a(e){var p={message:e.message};if(e.response){p.statusCode=e.response.statusCode;p.statusText=e.response.statusText;p.responseText=e.response.body}if(t.oRequestHandle&&t.oRequestHandle.bSuppressErrorHandlerCall){return}t.oRequestHandle=null;if(t.bAsync){t.fireFailed(p)}else{t.oFailedEvent=q.sap.delayedCall(0,t,t.fireFailed,[p])}}this.oRequestHandle=OData.request(r,_,a,OData.metadataHandler)};O.prototype.getServiceMetadata=function(){return this.oMetadata};O.prototype.isLoaded=function(){return this.bLoaded};O.prototype.fireLoaded=function(){this.bLoaded=true;this.fireEvent("loaded");q.sap.log.debug('loaded on Metadata object was fired');return this};O.prototype.attachLoaded=function(d,f,l){this.attachEvent("loaded",d,f,l);return this};O.prototype.detachLoaded=function(f,l){this.detachEvent("loaded",f,l);return this};O.prototype.fireFailed=function(a){this.fireEvent("failed",a);return this};O.prototype.attachFailed=function(d,f,l){this.attachEvent("failed",d,f,l);return this};O.prototype.detachFailed=function(f,l){this.detachEvent("failed",f,l);return this};O.prototype._getEntityTypeByPath=function(p){if(!p){return null}if(!this.oMetadata||q.isEmptyObject(this.oMetadata)){return null}var c=p.replace(/^\/|\/$/g,""),P=c.split("/"),l=P.length,a,A,o,e,b,d,r,t=this;if(P[0].indexOf("(")!=-1){P[0]=P[0].substring(0,P[0].indexOf("("))}if(l>1){o=t._getEntityTypeByPath(P[0]);for(var i=1;i<P.length;i++){if(o){if(P[i].indexOf("(")!=-1){P[i]=P[i].substring(0,P[i].indexOf("("))}if(o.navigationProperty){r=t._getEntityTypeByNavProperty(o,P[i]);if(r){o=r}}d=o}}}else{b=this._splitName(this._getEntityTypeName(P[0]));d=this._getObjectMetadata("entityType",b[0],b[1]);if(d){d.entityType=this._getEntityTypeName(P[0])}}if(!d){var f=P[P.length-1];var F=this._getFunctionImportMetadata(f,"GET");if(F&&F.entitySet){d=this._getEntityTypeByPath(F.entitySet);if(d){d.entityType=this._getEntityTypeName(F.entitySet)}}}return d};O.prototype._getEntityTypeByName=function(n){var e,t=this;if(!n){return null}if(!this.oMetadata||q.isEmptyObject(this.oMetadata)){return null}if(this.mEntityTypes[n]){e=this.mEntityTypes[n]}else{q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityType){q.each(s.entityType,function(k,o){if(o.name===n){e=o;t.mEntityTypes[n]=e;e.namespace=s.namespace;return false}})}})}return e};O.prototype._getAnnotation=function(p){var n,k,P,m,M,e,s,o,a,p;P=p.split('/#');M=P[1].split('/');if(!P[0]){e=this._getEntityTypeByName(M[0]);if(!e)return;s=P[1].substr(P[1].indexOf('/')+1);o=this._getPropertyMetadata(e,s);if(!o)return;m=s.substr(s.indexOf(o.name));m=m.substr(m.indexOf('/')+1)}else{e=this._getEntityTypeByPath(P[0]);if(!e)return;p=P[0].replace(/^\/|\/$/g,"");s=p.substr(p.indexOf('/')+1);o=this._getPropertyMetadata(e,s);if(!o)return;m=M.join('/')}n=this._getAnnotationObject(e,o,m);return n};O.prototype._getAnnotationObject=function(e,o,m){var t=this,a,p,A,n,s;if(!o)return;n=o;p=m.split('/');if(p[0].indexOf('.')>-1){return this._getV4AnnotationObject(e,o,p)}else{if(p.length>1){n=n[p[0]];if(!n&&o.extensions){for(var i=0;i<o.extensions.length;i++){var b=o.extensions[i];if(b.name==p[0]){n=b;break}}}m=p.splice(0,1);A=this._getAnnotationObject(e,n,p.join('/'))}else{if(p[0].indexOf('@')>-1){s=p[0].substr(1);a=s.split(':');A=n[a[0]];if(!A&&n.extensions){for(var i=0;i<n.extensions.length;i++){var b=n.extensions[i];if(b.name===a[1]&&b.namespace===this.mNamespaces[a[0]]){A=b.value;break}}}}else{a=p[0].split(':');A=n[a[0]];A=n[p[0]];if(!A&&n.extensions){for(var i=0;i<n.extensions.length;i++){var b=n.extensions[i];if(b.name===a[1]&&b.namespace===this.mNamespaces[a[0]]){A=b;break}}}}}}return A};O.prototype._getV4AnnotationObject=function(e,o,p){var a,A=[];if(p.length>1){return}var t=e.namespace?e.namespace+".":"";t+=e.name+"/"+o.name;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.annotations){q.each(s.annotations,function(k,o){if(o.target===t&&!o.qualifier){A.push(o.annotation);return false}})}});if(A){q.each(A,function(i,b){q.each(b,function(j,c){if(c.term===p[0]){a=c}})})}return a};O.prototype._splitName=function(f){var p=[];if(f){var s=f.lastIndexOf(".");p[0]=f.substr(s+1);p[1]=f.substr(0,s)}return p};O.prototype._getEntityTypeName=function(c){var e;if(c){q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityContainer){q.each(s.entityContainer,function(k,o){if(o.entitySet){q.each(o.entitySet,function(j,a){if(a.name===c){e=a.entityType;return false}})}})}})}return e};O.prototype._getObjectMetadata=function(o,s,n){var a;if(s&&n){q.each(this.oMetadata.dataServices.schema,function(i,S){if(S[o]&&S.namespace===n){q.each(S[o],function(j,c){if(c.name===s){a=c;a.namespace=S.namespace;return false}});return!a}})}return a};O.prototype.getUseBatch=function(){var u=false;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s.entityContainer){q.each(s.entityContainer,function(k,e){if(e.extensions){q.each(e.extensions,function(l,o){if(o.name==="use-batch"&&o.namespace==="http://www.sap.com/Protocols/SAPData"){u=(typeof o.value==='string')?(o.value.toLowerCase()==='true'):!!o.value;return false}})}})}});return u};O.prototype._getFunctionImportMetadata=function(f,m){var o=null;q.each(this.oMetadata.dataServices.schema,function(i,s){if(s["entityContainer"]){q.each(s["entityContainer"],function(j,e){if(e["functionImport"]){q.each(e["functionImport"],function(k,F){if(F.name===f&&F.httpMethod===m){o=F;return false}})}return!o})}return!o});return o};O.prototype._getEntityTypeByNavProperty=function(e,n){var t=this,a,A,b,N;q.each(e.navigationProperty,function(k,o){if(o.name===n){a=t._splitName(o.relationship);A=t._getObjectMetadata("association",a[0],a[1]);if(A){var c=A.end[0];if(c.role!==o.toRole){c=A.end[1]}b=t._splitName(c.type);N=t._getObjectMetadata("entityType",b[0],b[1]);if(N){N.entityType=c.type}return false}}});return N};O.prototype._getNavigationPropertyNames=function(e){var n=[];if(e.navigationProperty){q.each(e.navigationProperty,function(k,N){n.push(N.name)})}return n};O.prototype._getPropertyMetadata=function(e,p){var P,t=this;if(!e)return;p=p.replace(/^\/|\/$/g,"");var a=p.split("/");q.each(e.property,function(k,b){if(b.name===a[0]){P=b;return false}});if(P&&a.length>1&&!q.sap.startsWith(P.type.toLowerCase(),"edm.")){var n=this._splitName(P.type);P=this._getPropertyMetadata(this._getObjectMetadata("complexType",n[0],n[1]),a[1])}if(!P&&a.length>1){var o=this._getEntityTypeByNavProperty(e,a[0]);if(o){P=t._getPropertyMetadata(o,a[1])}}return P};O.prototype.destroy=function(){delete this.oMetadata;if(this.oRequestHandle){this.oRequestHandle.bSuppressErrorHandlerCall=true;this.oRequestHandle.abort();this.oRequestHandle=null}if(!!this.oLoadEvent){q.sap.clearDelayedCall(this.oLoadEvent)}if(!!this.oFailedEvent){q.sap.clearDelayedCall(this.oFailedEvent)}sap.ui.base.Object.prototype.destroy.apply(this,arguments)};O.prototype._createRequest=function(u){var h={},l={"Accept-Language":sap.ui.getCore().getConfiguration().getLanguage()};q.extend(h,this.mHeaders,l);var r={headers:h,requestUri:u,method:'GET',user:this.sUser,password:this.sPassword,async:this.bAsync};if(this.bAsync){r.withCredentials=this.bWithCredentials}return r};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataTreeBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataTreeBinding');sap.ui.define("sap/ui/model/odata/ODataTreeBinding",['jquery.sap.global','sap/ui/model/TreeBinding'],function(q,T){"use strict";var O=T.extend("sap.ui.model.odata.ODataTreeBinding",{constructor:function(m,p,c,f,P){T.apply(this,arguments);this.bPendingRequest=false;this.oFinalLengths={};this.oLengths={};this.oKeys={};this.bNeedsUpdate=false;if(!P||!P.navigation){q.sap.log.error("A navigation paths parameter object has to be defined");this.oNavigationPaths={}}else{this.oNavigationPaths=P.navigation}}});O.prototype.getRootContexts=function(){var n=this._getNavPath(this.sPath),a=this.oModel.resolve(this.sPath,this.getContext()),t=this,c;if(!a){return[]}if(!this.oModel.isList(this.sPath,this.getContext())){if(this.bDisplayRootNode){this.oModel.createBindingContext(a,null,{expand:n},function(N){c=N;if(t.oRootContext!==N){t.oRootContext=N;t.bNeedsUpdate=true}else{var d=t.oModel.oData[c.getPath().substr(1)];t._processODataObject(d,c.getPath(),n)}},false);if(c){return[c]}else{return[]}}else{c=this.oModel.getContext(this.sPath);return this.getNodeContexts(c)}}else{return this._getContextsForPath(a,n)}};O.prototype.getNodeContexts=function(c){var n=this._getNavPath(c.getPath()),a;if(!n){return[]}a=this.oModel.resolve(n,c);n=this.oNavigationPaths[n];return this._getContextsForPath(a,n)};O.prototype.hasChildren=function(c){return c&&this.oLengths[c.getPath()]>0};O.prototype._getContextsForPath=function(a,n){var c=[],l=this.oModel.iSizeLimit,L,k;if(this.oFinalLengths&&this.oFinalLengths[a]&&this.oLengths[a]<l){l=this.oLengths[a]}if(this.oKeys[a]){for(var i=0;i<l;i++){k=this.oKeys[a][i];if(!k){break}c.push(this.oModel.getContext('/'+k))}}L=c.length!=l&&!(this.oFinalLengths[a]&&c.length>=this.oLengths[a]);if(this.oModel.getServiceMetadata()){if(!this.bPendingRequest&&L){this.loadSubNodes(a,n)}}return c};O.prototype.loadSubNodes=function(a,n){var t=this,p=[];if(n){p.push("$expand="+n)}function s(d){t.oLengths[a]=d.results.length;t.oFinalLengths[a]=true;t.oKeys[a]=[];for(var i=0;i<d.results.length;i++){var E=d.results[i];t._processODataObject(E,a,n);t.oKeys[a].push(t.oModel._getKey(E))}t.oRequestHandle=null;t.bPendingRequest=false;t.bNeedsUpdate=true}function c(){t.fireDataReceived()}function e(d){t.oRequestHandle=null;t.bPendingRequest=false;t.fireDataReceived()}function u(h){t.oRequestHandle=h}if(a){if(!this.oFinalLengths[a]){this.bPendingRequest=true;this.fireDataRequested();this.oModel._loadData(a,p,s,e,false,u,c)}}};O.prototype.resetData=function(c){if(c){var p=c.getPath();delete this.oKeys[p];delete this.oLengths[p];delete this.oFinalLengths[p]}else{this.oKeys={};this.oLengths={};this.oFinalLengths={}}};O.prototype.refresh=function(f,c,e){var C=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e)){C=true}}if(c&&!C){q.each(this.oKeys,function(i,n){q.each(n,function(i,k){if(k in c){C=true;return false}});if(C)return false})}if(!c&&!e){C=true}}if(f||C){this.resetData();this.bNeedsUpdate=false;this._fireChange()}};O.prototype.filter=function(f){q.sap.log.warning("Filtering is currently not possible in the ODataTreeBinding");return this};O.prototype.checkUpdate=function(f,c){var C=false;if(!f){if(this.bNeedsUpdate||!c){C=true}else{q.each(this.oKeys,function(i,n){q.each(n,function(i,k){if(k in c){C=true;return false}});if(C)return false})}}if(f||C){this.bNeedsUpdate=false;this._fireChange()}};O.prototype._getNavPath=function(p){var a=this.oModel.resolve(p,this.getContext());if(!a){return}var P=a.split("/"),e=P[P.length-1],n;var c=e.split("(")[0];if(c&&this.oNavigationPaths[c]){n=this.oNavigationPaths[c]}return n};O.prototype._processODataObject=function(o,a,n){var k=this.oModel._getKey(o),c=this.oModel.getContext("/"+k),p=c.getPath();var r=this.oModel._getObject(n,c);if(q.isArray(r)){this.oKeys[p]=r;this.oLengths[p]=r.length;this.oFinalLengths[p]=true}else if(typeof r==="object"){this.oKeys[p]=[r];this.oLengths[p]=0;this.oFinalLengths[p]=true}else{if(n&&o[n].__list){this.oKeys[p]=o[n].__list;this.oLengths[p]=this.oKeys[p].length;this.oFinalLengths[p]=true}else{this.oKeys[a]=[];this.oLengths[a]=0;this.oFinalLengths[a]=false}}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataUtils')){jQuery.sap.declare('sap.ui.model.odata.ODataUtils');sap.ui.define("sap/ui/model/odata/ODataUtils",['jquery.sap.global','./Filter','sap/ui/model/Sorter','sap/ui/model/Filter','sap/ui/core/format/DateFormat'],function(q,O,S,F,D){"use strict";var a=function(){};a.createSortParams=function(s){var b;if(!s||s.length==0){return}b="$orderby=";for(var i=0;i<s.length;i++){var o=s[i];if(o instanceof S){b+=o.sPath;b+=o.bDescending?"%20desc":"%20asc";b+=","}}b=b.slice(0,-1);return b};a.createFilterParams=function(f,m,e){if(!f||f.length==0){return}return"$filter="+this._createFilterParams(f,m,e)};a._createFilterParams=function(f,m,e){var s;if(!f||f.length==0){return}var o={},b=0,c,s="",d=0,M,t=this;q.each(f,function(j,g){if(g.sPath){c=o[g.sPath];if(!c){c=o[g.sPath]=[];b++}}else{c=o["__multiFilter"];if(!c){c=o["__multiFilter"]=[];b++}}c.push(g)});q.each(o,function(p,c){if(c.length>1){s+='('}q.each(c,function(i,g){if(g instanceof O){if(g.aValues.length>1){s+='('}q.each(g.aValues,function(i,h){if(i>0){if(g.bAND){s+="%20and%20"}else{s+="%20or%20"}}s=t._createFilterSegment(g.sPath,m,e,h.operator,h.value1,h.value2,s)});if(g.aValues.length>1){s+=')'}}else if(g._bMultiFilter){s+=t._resolveMultiFilter(g,m,e)}else{s=t._createFilterSegment(g.sPath,m,e,g.sOperator,g.oValue1,g.oValue2,s)}if(i<c.length-1){s+="%20or%20"}});if(c.length>1){s+=')'}if(d<b-1){s+="%20and%20"}d++});return s};a._createUrlParamsArray=function(p){var u,t=q.type(p);if(t==="array"){return p}u=[];if(t==="object"){u.push(q.sap.encodeURLParameters(p))}else if(t==="string"){u.push(p)}return u};a._resolveMultiFilter=function(m,M,e){var t=this,f=m.aFilters,s="";if(f){s+="(";q.each(f,function(i,o){var l=false;if(o._bMultiFilter){s+=t._resolveMultiFilter(o,M,e)}else if(o.sPath){s+=t._createFilterSegment(o.sPath,M,e,o.sOperator,o.oValue1,o.oValue2,"")}if(i<(f.length-1)){if(m.bAnd){s+="%20and%20"}else{s+="%20or%20"}}});s+=")"}return s};a._createFilterSegment=function(p,m,e,o,v,V,f){var P,t;if(e){P=m._getPropertyMetadata(e,p);t=P&&P.type;}if(t){v=this.formatValue(v,t);V=(V!=null)?this.formatValue(V,t):null}else{}if(v){v=q.sap.encodeURL(String(v))}if(V){V=q.sap.encodeURL(String(V))}switch(o){case"EQ":case"NE":case"GT":case"GE":case"LT":case"LE":f+=p+"%20"+o.toLowerCase()+"%20"+v;break;case"BT":f+="("+p+"%20ge%20"+v+"%20and%20"+p+"%20le%20"+V+")";break;case"Contains":f+="substringof("+v+","+p+")";break;case"StartsWith":f+="startswith("+p+","+v+")";break;case"EndsWith":f+="endswith("+p+","+v+")";break;default:f+="true"}return f};a.formatValue=function(v,t){if(!this.oDateTimeFormat){this.oDateTimeFormat=D.getDateInstance({pattern:"'datetime'''yyyy-MM-dd'T'HH:mm:ss''"});this.oDateTimeOffsetFormat=D.getDateInstance({pattern:"'datetimeoffset'''yyyy-MM-dd'T'HH:mm:ss'Z'''"});this.oTimeFormat=D.getTimeInstance({pattern:"'time'''HH:mm:ss''"})}if(v===null||v===undefined){return"null"}var V;switch(t){case"Edm.String":V="'"+String(v).replace(/'/g,"''")+"'";break;case"Edm.Time":V="time'"+v+"'";break;case"Edm.DateTime":V=this.oDateTimeFormat.format(new Date(v),true);break;case"Edm.DateTimeOffset":V=this.oDateTimeOffsetFormat.format(new Date(v),true);break;case"Edm.Guid":V="guid'"+v+"'";break;case"Edm.Decimal":V=v+"M";break;case"Edm.Int64":V=v+"L";break;case"Edm.Single":V=v+"f";break;case"Edm.Binary":V="binary'"+v+"'";break;default:V=new String(v);break}return V};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Boolean')){jQuery.sap.declare('sap.ui.model.type.Boolean');sap.ui.define("sap/ui/model/type/Boolean",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var B=S.extend("sap.ui.model.type.Boolean",{constructor:function(){S.apply(this,arguments);this.sName="Boolean"}});B.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"boolean":return v;case"string":return v.toString();case"int":case"float":default:throw new sap.ui.model.FormatException("Don't know how to format Boolean to "+i)}};B.prototype.parseValue=function(v,i){var r;switch(i){case"boolean":return v;case"string":if(v.toLowerCase()=="true"||v=="X"){return true}if(v.toLowerCase()=="false"||v==""){return false}throw new sap.ui.model.ParseException("Don't know how to parse Boolean from "+i);case"int":case"float":default:throw new sap.ui.model.ParseException("Don't know how to parse Boolean from "+i)}};B.prototype.validateValue=function(v){};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Date')){jQuery.sap.declare('sap.ui.model.type.Date');sap.ui.define("sap/ui/model/type/Date",['jquery.sap.global','sap/ui/core/format/DateFormat','sap/ui/model/SimpleType'],function(q,D,S){"use strict";var a=S.extend("sap.ui.model.type.Date",{constructor:function(){S.apply(this,arguments);this.sName="Date"}});a.prototype.formatValue=function(v,i){switch(i){case"string":if(v==null){return""}if(this.oInputFormat){if(this.oFormatOptions.source.pattern=="timestamp"){if(typeof(v)!="number"){if(isNaN(v)){throw new sap.ui.model.FormatException("Cannot format date: "+v+" is not a valid Timestamp")}else{v=parseInt(v,10)}}v=new Date(v)}else{if(v==""){return""}v=this.oInputFormat.parse(v);if(v==null){throw new sap.ui.model.FormatException("Cannot format date: "+v+" has the wrong format")}}}return this.oOutputFormat.format(v);default:throw new sap.ui.model.FormatException("Don't know how to format Date to "+i)}};a.prototype.parseValue=function(v,i){var r;switch(i){case"string":if(v===""){return null}var r=this.oOutputFormat.parse(v);if(!r){throw new sap.ui.model.ParseException(v+" is not a valid Date value")}if(this.oInputFormat){if(this.oFormatOptions.source.pattern=="timestamp"){r=r.getTime()}else{r=this.oInputFormat.format(r)}}return r;default:throw new sap.ui.model.ParseException("Don't know how to parse Date from "+i)}};a.prototype.validateValue=function(v){if(this.oConstraints){var V=[],i=this.oInputFormat;if(i&&this.oFormatOptions.source.pattern!="timestamp"){v=i.parse(v)}q.each(this.oConstraints,function(n,c){if(i){c=i.parse(c)}switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};a.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};a.prototype.getOutputPattern=function(){return this.oOutputFormat.oFormatOptions.pattern};a.prototype._handleLocalizationChange=function(){this.oOutputFormat=D.getInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=D.getInstance(this.oFormatOptions.source)}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.DateTime')){jQuery.sap.declare('sap.ui.model.type.DateTime');sap.ui.define("sap/ui/model/type/DateTime",['jquery.sap.global','./Date'],function(q,D){"use strict";var a=D.extend("sap.ui.model.type.DateTime",{constructor:function(){D.apply(this,arguments);this.sName="DateTime"}});a.prototype._handleLocalizationChange=function(){this.oOutputFormat=sap.ui.core.format.DateFormat.getDateTimeInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=sap.ui.core.format.DateFormat.getDateTimeInstance(this.oFormatOptions.source)}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Float')){jQuery.sap.declare('sap.ui.model.type.Float');sap.ui.define("sap/ui/model/type/Float",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var F=S.extend("sap.ui.model.type.Float",{constructor:function(){S.apply(this,arguments);this.sName="Float"}});F.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return this.oFormat.format(v);case"int":return Math.floor(v);case"float":return v;default:throw new sap.ui.model.FormatException("Don't know how to format Float to "+i)}};F.prototype.parseValue=function(v,i){var r;switch(i){case"string":r=this.oFormat.parse(v);if(isNaN(r)){throw new sap.ui.model.ParseException(v+" is not a valid Float value")}return r;case"int":case"float":return v;default:throw new sap.ui.model.ParseException("Don't know how to parse Float from "+i)}};F.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};F.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};F.prototype._handleLocalizationChange=function(){this.oFormat=N.getFloatInstance(this.oFormatOptions)};return F},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Integer')){jQuery.sap.declare('sap.ui.model.type.Integer');sap.ui.define("sap/ui/model/type/Integer",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var I=S.extend("sap.ui.model.type.Integer",{constructor:function(){S.apply(this,arguments);this.sName="Integer"}});I.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return this.oFormat.format(v);case"int":case"float":return v;default:throw new sap.ui.model.FormatException("Don't know how to format Integer to "+i)}};I.prototype.parseValue=function(v,i){var r;switch(i){case"float":case"string":r=this.oFormat.parse(String(v));if(isNaN(r)){throw new sap.ui.model.ParseException(v+" is not a valid Integer value")}return r;case"int":return v;default:throw new sap.ui.model.ParseException("Don't know how to parse Integer from "+i)}};I.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"minimum":if(v<c){V.push("minimum")}break;case"maximum":if(v>c){V.push("maximum")}}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};I.prototype.setFormatOptions=function(f){this.oFormatOptions=f;this._handleLocalizationChange()};I.prototype._handleLocalizationChange=function(){this.oFormat=N.getIntegerInstance(this.oFormatOptions)};return I},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.String')){jQuery.sap.declare('sap.ui.model.type.String');sap.ui.define("sap/ui/model/type/String",['jquery.sap.global','sap/ui/core/format/NumberFormat','sap/ui/model/SimpleType'],function(q,N,S){"use strict";var a=S.extend("sap.ui.model.type.String",{constructor:function(){S.apply(this,arguments);this.sName="String";if(this.oConstraints.search&&typeof this.oConstraints.search=="string"){this.oConstraints.search=new RegExp(this.oConstraints.search)}}});a.prototype.formatValue=function(v,i){if(v==undefined||v==null){return null}switch(i){case"string":return v;case"int":var r=parseInt(v,10);if(isNaN(r)){throw new sap.ui.model.FormatException(v+" is not a valid int value")}return r;case"float":var R=parseFloat(v);if(isNaN(R)){throw new sap.ui.model.FormatException(v+" is not a valid float value")}return R;case"boolean":if(v.toLowerCase()=="true"||v=="X"){return true}if(v.toLowerCase()=="false"||v==""){return false}throw new sap.ui.model.FormatException(v+" is not a valid boolean value");default:throw new sap.ui.model.FormatException("Don't know how to format String to "+i)}};a.prototype.parseValue=function(v,i){var r;switch(i){case"string":return v;case"boolean":case"int":case"float":return v.toString();default:throw new sap.ui.model.ParseException("Don't know how to parse String from "+i)}};a.prototype.validateValue=function(v){if(this.oConstraints){var V=[];q.each(this.oConstraints,function(n,c){switch(n){case"maxLength":if(v.length>c){V.push("maxLength")}break;case"minLength":if(v.length<c){V.push("minLength")}break;case"startsWith":if(!q.sap.startsWith(v,c)){V.push("startsWith")}break;case"startsWithIgnoreCase":if(!q.sap.startsWithIgnoreCase(v,c)){V.push("startsWithIgnoreCase")}break;case"endsWith":if(!q.sap.endsWith(v,c)){V.push("endsWith")}break;case"endsWithIgnoreCase":if(!q.sap.endsWithIgnoreCase(v,c)){V.push("endsWithIgnoreCase")}break;case"contains":if(v.indexOf(c)==-1){V.push("contains")}break;case"equals":if(v!=c){V.push("equals")}break;case"search":if(v.search(c)==-1){V.push("search")}break}});if(V.length>0){throw new sap.ui.model.ValidateException("Validation of type constraints failed",V)}}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.type.Time')){jQuery.sap.declare('sap.ui.model.type.Time');sap.ui.define("sap/ui/model/type/Time",['jquery.sap.global','./Date'],function(q,D){"use strict";var T=D.extend("sap.ui.model.type.Time",{constructor:function(){D.apply(this,arguments);this.sName="Time"}});T.prototype._handleLocalizationChange=function(){this.oOutputFormat=sap.ui.core.format.DateFormat.getTimeInstance(this.oFormatOptions);if(this.oFormatOptions.source){this.oInputFormat=sap.ui.core.format.DateFormat.getTimeInstance(this.oFormatOptions.source)}};return T},true)};if(!jQuery.sap.isDeclared('jquery.sap.ui')){jQuery.sap.declare('jquery.sap.ui');sap.ui.define("jquery.sap.ui",['jquery.sap.global','sap/ui/Global'],function(q,G){"use strict";if(!q.sap){throw"Initialisation of jQuery.sap.ui failed. jQuery.sap plugin required!"}if(!window.sap||!window.sap.ui){q.sap.fatal("Initialisation of jQuery.sap.ui failed. Global SAP UI namespace required!")}if(q.sap.ui){return}function u(i){return sap.ui.getCore().getUIArea(this.id)!=null}function f(i,o){return sap.ui.getCore().getUIArea(this.id)}function a(c,i){return c.getUIArea().getInterface()}q.fn.root=function(r){var t;if(r){sap.ui.getCore().setRoot(this.get(0),r);return this}var c=this.control();if(c.length>0){return q.map(c,a)}var U=this.uiarea();if(U.length>0){return U}this.each(function(i){sap.ui.getCore().createUIArea(this)});return this};q.fn.uiarea=function(i){var U=this.slice("[id]").filter(u).map(f).get();return typeof(i)==="number"?U[i]:U};function b(){if(!this||!this.nodeType||this.nodeType===9){return null}try{var i=q(this).closest("[data-sap-ui]").attr("id");return i?sap.ui.getCore().byId(i):null}catch(e){return null}}q.fn.control=function(i){var c=this.map(b);if(i===undefined||isNaN(i)){return c.get()}else{return c.get(i)}};q.fn.sapui=function(c,i,C){return this.each(function(){var o=null;if(this){if(c.indexOf(".")==-1){c="sap.ui.commons."+c}var d=q.sap.getObject(c);if(d){if(typeof C=='object'&&typeof C.press=='function'){C.press=q.proxy(C.press,this)}o=new(d)(i,C);o.placeAt(this)}}})};return q},false)};if(!jQuery.sap.isDeclared('sap.ui.app.ApplicationMetadata')){jQuery.sap.declare('sap.ui.app.ApplicationMetadata');sap.ui.define("sap/ui/app/ApplicationMetadata",['jquery.sap.global','sap/ui/core/ComponentMetadata'],function(q,C){"use strict";var A=function(c,o){C.apply(this,arguments)};A.prototype=q.sap.newObject(C.prototype);A.preprocessClassInfo=function(c){if(c&&typeof c.metadata==="string"){c.metadata={_src:c.metadata}}return c};A.prototype.applySettings=function(c){var s=c.metadata;C.prototype.applySettings.call(this,c);if(s._src){q.sap.log.warning("The metadata of the application "+this.getName()+" is loaded from file "+s._src+". This is a design time feature and not for productive usage!");var p=this.getName().replace(/\.\w+?$/,"");var u=q.sap.getModulePath(p,"/"+s._src);var r=q.sap.syncGetJSON(u);if(r.success){q.extend(s,r.data)}else{q.sap.log.error("Failed to load application metadata from \""+s._src+"\"! Reason: "+r.error)}}this._mRootComponent=s.rootComponent||null};A.prototype.getRootComponent=function(){return this._mRootComponent};return A},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.HTMLViewSerializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.HTMLViewSerializer');jQuery.sap.require('sap.ui.thirdparty.vkbeautify');sap.ui.define("sap/ui/core/util/serializer/HTMLViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./delegate/HTML','sap/ui/thirdparty/vkbeautify'],function(q,E,H,v){"use strict";var a=E.extend("sap.ui.core.util.serializer.HTMLViewSerializer",{constructor:function(V,w,g,G){E.apply(this);this._oView=V;this._oWindow=w;this._fnGetControlId=g;this._fnGetEventHandlerName=G}});a.prototype.serialize=function(){var s=function(C){return(C instanceof this._oWindow.sap.ui.core.mvc.View)};var c=new sap.ui.core.util.serializer.Serializer(this._oView,new H(this._fnGetControlId,this._fnGetEventHandlerName),true,this._oWindow,s);var r=c.serialize();var V=[];V.push('<template');if(this._oView.getControllerName&&this._oView.getControllerName()){V.push(' data-controller-name="'+this._oView.getControllerName()+'"')}V.push(" >");V.push(r);V.push("</template>");return vkbeautify.xml(V.join(""))};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.XMLViewSerializer')){jQuery.sap.declare('sap.ui.core.util.serializer.XMLViewSerializer');jQuery.sap.require('sap.ui.thirdparty.vkbeautify');sap.ui.define("sap/ui/core/util/serializer/XMLViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./delegate/XML','sap/ui/thirdparty/vkbeautify'],function(q,E,X,v){"use strict";var a=E.extend("sap.ui.core.util.serializer.XMLViewSerializer",{constructor:function(V,w,d,g,G){E.apply(this);this._oView=V;this._oWindow=w;this._sDefaultNamespace=d;this._fnGetControlId=g;this._fnGetEventHandlerName=G}});a.prototype.serialize=function(){var p=[];var m=function(C,P){if(!P){var t=(C)?C.constructor:"?";throw Error("Controls with empty package are currently not supported by the XML serializer: "+t)}if(q.inArray(P,p)===-1){p.push(P)}};var s=function(C){return(C instanceof this._oWindow.sap.ui.core.mvc.View)};var c=new sap.ui.core.util.serializer.Serializer(this._oView,new X(this._sDefaultNamespace,this._fnGetControlId,this._fnGetEventHandlerName,m),true,this._oWindow,s);var r=c.serialize();var V=[];V.push('<sap.ui.core.mvc:View');if(this._oView.getControllerName&&this._oView.getControllerName()){V.push(' controllerName="'+this._oView.getControllerName()+'"')}if(q.inArray('sap.ui.core.mvc',p)===-1){p.push('sap.ui.core.mvc')}for(var i=0;i<p.length;i++){if(this._sDefaultNamespace&&this._sDefaultNamespace===p[i]){V.push(' xmlns="'+p[i]+'"')}else{V.push(' xmlns:'+p[i]+'="'+p[i]+'"')}}V.push(" >");V.push(r);V.push("</sap.ui.core.mvc:View>");return vkbeautify.xml(V.join(""))};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ws.SapPcpWebSocket')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.ws.SapPcpWebSocket');sap.ui.define("sap/ui/core/ws/SapPcpWebSocket",['jquery.sap.global','./WebSocket'],function(q,W){"use strict";var S=W.extend("sap.ui.core.ws.SapPcpWebSocket",{constructor:function(u,p){W.apply(this,arguments)}});S.SUPPORTED_PROTOCOLS={v10:"v10.pcp.sap.com"};S._deserializeRegexp=/((?:[^:\\]|(?:\\.))+):((?:[^:\\\n]|(?:\\.))*)/;S._SEPARATOR="\n\n";S._MESSAGE="MESSAGE";S.prototype._onopen=function(){var s=false;if(this.getProtocol()===""){s=true}else{for(var p in S.SUPPORTED_PROTOCOLS){if(S.SUPPORTED_PROTOCOLS.hasOwnProperty(p)){if(S.SUPPORTED_PROTOCOLS[p]===this.getProtocol()){s=true;break}}}}if(s){this.fireOpen()}else{q.sap.log.error("Unsupported protocol '"+this.getProtocol()+"' selected by the server. "+"Connection will be closed.");this.close("Unsupported protocol selected by the server")}};S.prototype._onmessage=function(m){var s=-1,e={};if(typeof m.data==="string"){s=m.data.indexOf(S._SEPARATOR)}if(s!==-1){e.pcpFields=this._extractPcpFields(m.data.substring(0,s));e.data=m.data.substr(s+S._SEPARATOR.length)}else{q.sap.log.warning("Invalid PCP message received: "+m.data);e.pcpFields={};e.data=m.data}this.fireMessage(e)};S.prototype._extractPcpFields=function(h){var f=h.split("\n"),l=[],p={};for(var i=0;i<f.length;i++){l=f[i].match(S._deserializeRegexp);if(l&&l.length===3){p[this._unescape(l[1])]=this._unescape(l[2])}}return p};S.prototype._unescape=function(e){var p=e.split("\u0008"),u="";for(var i=0;i<p.length;i++){p[i]=p[i].replace(/\\\\/g,"\u0008").replace(/\\:/g,':').replace(/\\n/g,'\n').replace(/\u0008/g,"\\")}u=p.join("\u0008");return u};S.prototype._serializePcpFields=function(p,m,P){var s="",f="",a="";if(m==='string'){a='text'}else if(m==='blob'||m==='arraybuffer'){a='binary'}if(p&&typeof p==='object'){for(f in p){if(p.hasOwnProperty(f)&&f.indexOf('pcp-')!==0){s+=this._escape(f)+":"+this._escape(String(p[f]))+"\n"}}}return"pcp-action:"+P+"\npcp-body-type:"+a+"\n"+s+"\n"};S.prototype._escape=function(u){return u.replace(/\\/g,'\\\\').replace(/:/g,'\\:').replace(/\n/g,'\\n')};S.prototype.send=function(m,p){var M=typeof m,P="";P=this._serializePcpFields(p,M,S._MESSAGE);W.prototype.send.call(this,P+m);return this};return S},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientContextBinding')){jQuery.sap.declare('sap.ui.model.ClientContextBinding');sap.ui.define("sap/ui/model/ClientContextBinding",['jquery.sap.global','./ContextBinding'],function(q,C){"use strict";var a=C.extend("sap.ui.model.ClientContextBinding",{constructor:function(m,p,c,P,e){C.call(this,m,p,c,P,e);var t=this;m.createBindingContext(p,c,P,function(c){t.bInitial=false;t.oElementContext=c})}});a.prototype.refresh=function(f){var t=this;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){if(t.oElementContext===c&&!f){t.oModel.checkUpdate(true,c)}else{t.oElementContext=c;t._fireChange()}},true)};a.prototype.initialize=function(){var t=this;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange()},true)};a.prototype.setContext=function(c){var t=this;if(this.oContext!=c){this.oContext=c;this.oModel.createBindingContext(this.sPath,this.oContext,this.mParameters,function(c){t.oElementContext=c;t._fireChange()})}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientListBinding')){jQuery.sap.declare('sap.ui.model.ClientListBinding');sap.ui.define("sap/ui/model/ClientListBinding",['jquery.sap.global','./FilterType','./ListBinding'],function(q,F,L){"use strict";var C=L.extend("sap.ui.model.ClientListBinding",{constructor:function(m,p,c,s,f,P){L.apply(this,arguments);this.bIgnoreSuspend=false;this.update()},metadata:{publicMethods:["getLength"]}});C.prototype._getContexts=function(s,l){if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var e=Math.min(s+l,this.aIndices.length),c,a=[],p=this.oModel.resolve(this.sPath,this.oContext);if(p&&!q.sap.endsWith(p,"/")){p+="/"}for(var i=s;i<e;i++){c=this.oModel.getContext(p+this.aIndices[i]);a.push(c)}return a};C.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.update();this._fireChange({reason:sap.ui.model.ChangeReason.Context})}}};C.prototype.getLength=function(){return this.iLength};C.prototype._getLength=function(){return this.aIndices.length};C.prototype.updateIndices=function(){this.aIndices=[];for(var i=0;i<this.oList.length;i++){this.aIndices.push(i)}};C.prototype.sort=function(s){if(!s){this.aSorters=null;this.updateIndices();this.applyFilter()}else{if(s instanceof sap.ui.model.Sorter){s=[s]}this.aSorters=s;this.applySort()}this.bIgnoreSuspend=true;this._fireChange({reason:sap.ui.model.ChangeReason.Sort});this._fireSort({sorter:s});this.bIgnoreSuspend=false;return this};C.prototype.applySort=function(){var t=this,s=[],c=[],v,S;if(!this.aSorters||this.aSorters.length==0){return}for(var j=0;j<this.aSorters.length;j++){S=this.aSorters[j];c[j]=S.fnCompare;if(!c[j]){c[j]=function(a,b){if(b==null){return-1}if(a==null){return 1}if(typeof a=="string"&&typeof b=="string"){return a.localeCompare(b)}if(a<b){return-1}if(a>b){return 1}return 0}}q.each(this.aIndices,function(i,I){v=t.oModel.getProperty(S.sPath,t.oList[I]);if(typeof v=="string"){v=v.toLocaleUpperCase()}if(!s[j]){s[j]=[]}s[j][I]=v})}this.aIndices.sort(function(a,b){var d=s[0][a],e=s[0][b];return t._applySortCompare(a,b,d,e,s,c,0)})};C.prototype._applySortCompare=function(a,b,v,c,s,d,D){var S=this.aSorters[D],f=d[D],r;r=f(v,c);if(S.bDescending){r=-r}if(r==0&&this.aSorters[D+1]){v=s[D+1][a],c=s[D+1][b];r=this._applySortCompare(a,b,v,c,s,d,D+1)}return r};C.prototype.filter=function(f,s){this.updateIndices();if(f instanceof sap.ui.model.Filter){f=[f]}if(s==F.Application){this.aApplicationFilters=f||[]}else if(s==F.Control){this.aFilters=f||[]}else{this.aFilters=f||[];this.aApplicationFilters=[]}f=this.aFilters.concat(this.aApplicationFilters);if(f.length==0){this.aFilters=[];this.aApplicationFilters=[];this.iLength=this._getLength()}else{this.applyFilter()}this.applySort();this.bIgnoreSuspend=true;this._fireChange({reason:sap.ui.model.ChangeReason.Filter});if(s==F.Application){this._fireFilter({filters:this.aApplicationFilters})}else{this._fireFilter({filters:this.aFilters})}this.bIgnoreSuspend=false;return this};C.prototype.normalizeFilterValue=function(v){if(typeof v=="string"){return v.toUpperCase()}if(v instanceof Date){return v.getTime()}return v};C.prototype.applyFilter=function(){if(!this.aFilters){return}var t=this,f={},a,b=[],g=false,c=true,d=this.aFilters.concat(this.aApplicationFilters);q.each(d,function(j,o){if(o.sPath!==undefined){a=f[o.sPath];if(!a){a=f[o.sPath]=[]}}else{a=f["__multiFilter"];if(!a){a=f["__multiFilter"]=[]}}a.push(o)});q.each(this.aIndices,function(i,I){c=true;q.each(f,function(p,a){if(p!=="__multiFilter"){var v=t.oModel.getProperty(p,t.oList[I]);v=t.normalizeFilterValue(v);g=false;q.each(a,function(j,o){var T=t.getFilterFunction(o);if(v!=undefined&&T(v)){g=true;return false}})}else{g=false;q.each(a,function(j,o){g=t._resolveMultiFilter(o,I);if(g){return false}})}if(!g){c=false;return false}});if(c){b.push(I)}});this.aIndices=b;this.iLength=b.length};C.prototype._resolveMultiFilter=function(m,I){var t=this,M=false,f=m.aFilters;if(f){q.each(f,function(i,o){var l=false;if(o._bMultiFilter){l=t._resolveMultiFilter(o,I)}else if(o.sPath!==undefined){var v=t.oModel.getProperty(o.sPath,t.oList[I]);v=t.normalizeFilterValue(v);var T=t.getFilterFunction(o);if(v!=undefined&&T(v)){l=true}}if(l&&m.bAnd){M=true}else if(!l&&m.bAnd){M=false;return false}else if(l){M=true;return false}})}return M};C.prototype.getFilterFunction=function(f){if(f.fnTest){return f.fnTest}var v=this.normalizeFilterValue(f.oValue1),V=this.normalizeFilterValue(f.oValue2);switch(f.sOperator){case"EQ":f.fnTest=function(a){return a==v};break;case"NE":f.fnTest=function(a){return a!=v};break;case"LT":f.fnTest=function(a){return a<v};break;case"LE":f.fnTest=function(a){return a<=v};break;case"GT":f.fnTest=function(a){return a>v};break;case"GE":f.fnTest=function(a){return a>=v};break;case"BT":f.fnTest=function(a){return(a>=v)&&(a<=V)};break;case"Contains":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"Contains\".")}return a.indexOf(v)!=-1};break;case"StartsWith":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"StartsWith\".")}return a.indexOf(v)==0};break;case"EndsWith":f.fnTest=function(a){if(typeof a!="string"){throw new Error("Only \"String\" values are supported for the FilterOperator: \"EndsWith\".")}var p=a.lastIndexOf(v);if(p==-1){return false}return p==a.length-new String(f.oValue1).length};break;default:f.fnTest=function(a){return true}}return f.fnTest};C.prototype.getDistinctValues=function(p){var r=[],m={},v,t=this;q.each(this.oList,function(i,c){v=t.oModel.getProperty(p,c);if(!m[v]){m[v]=true;r.push(v)}});return r};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientTreeBinding')){jQuery.sap.declare('sap.ui.model.ClientTreeBinding');sap.ui.define("sap/ui/model/ClientTreeBinding",['jquery.sap.global','./TreeBinding'],function(q,T){"use strict";var C=T.extend("sap.ui.model.ClientTreeBinding",{constructor:function(m,p,c,f,P){T.apply(this,arguments);if(!this.oContext){this.oContext=""}this.filterInfo={};this.filterInfo.aFilteredContexts=[];this.filterInfo.oParentContext={};if(this.aFilters){if(this.oModel._getObject(this.sPath,this.oContext)){this.filter(f)}}}});C.prototype.getRootContexts=function(){if(!this.oModel.isList(this.sPath)){var c=this.oModel.getContext(this.sPath);if(this.bDisplayRootNode){return[c]}else{return this.getNodeContexts(c)}}else{var a=[],t=this;q.each(this.oModel._getObject(this.sPath),function(i,o){t._saveSubContext(o,a,t.sPath+(q.sap.endsWith(t.sPath,"/")?"":"/"),i)});return a}};C.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],t=this,n=this.oModel._getObject(s),o,A=this.mParameters&&this.mParameters.arrayNames,b;if(A&&q.isArray(A)){q.each(A,function(i,d){b=n[d];if(b){q.each(b,function(S,e){t._saveSubContext(e,a,s,d+"/"+S)})}})}else{if(n){q.sap.each(n,function(N,o){if(q.isArray(o)){q.each(o,function(S,d){t._saveSubContext(d,a,s,N+"/"+S)})}else if(typeof o=="object"){t._saveSubContext(o,a,s,N)}})}}return a};C.prototype.hasChildren=function(c){return c?this.getNodeContexts(c).length>0:false};C.prototype._saveSubContext=function(n,c,s,N){if(typeof n=="object"){var o=this.oModel.getContext(s+N);if(this.aFilters&&!this.bIsFiltering){if(q.inArray(o,this.filterInfo.aFilteredContexts)!=-1){c.push(o)}}else{c.push(o)}}};C.prototype.filter=function(f){this.filterInfo.aFilteredContexts=[];this.filterInfo.oParentContext={};if(!f||!q.isArray(f)||f.length==0){this.aFilters=null}else{this.aFilters=f;var c=new sap.ui.model.Context(this.oModel,this.sPath);this.filterRecursive(c)}this._fireChange({reason:"filter"});this._fireFilter({filters:f})};C.prototype.filterRecursive=function(p){this.bIsFiltering=true;var c=this.getNodeContexts(p);this.bIsFiltering=false;if(c.length>0){var t=this;q.each(c,function(i,o){t.filterRecursive(o)});this.applyFilter(p)}};C.prototype.applyFilter=function(p){if(!this.aFilters){return}var t=this,f={},F,a=[],g=false,b=true;this.bIsFiltering=true;var u=this.getNodeContexts(p);this.bIsFiltering=false;q.each(t.aFilters,function(j,o){if(o.sPath){F=f[o.sPath];if(!F){F=f[o.sPath]=[]}}else{F=f["__multiFilter"];if(!F){F=f["__multiFilter"]=[]}}F.push(o)});q.each(u,function(i,U){b=true;q.each(f,function(P,F){if(P!=="__multiFilter"){var v=t.oModel._getObject(P,U);if(typeof v=="string"){v=v.toUpperCase()}g=false;q.each(F,function(j,o){var c=t.getFilterFunction(o);if(v!=undefined&&c(v)){g=true;return false}})}else{g=false;q.each(F,function(j,o){g=t._resolveMultiFilter(o,U);if(g){return false}})}if(!g){b=false;return false}});if(b){a.push(U)}});if(a.length>0){q.merge(this.filterInfo.aFilteredContexts,a);this.filterInfo.aFilteredContexts.push(p);this.filterInfo.oParentContext=p}if(q.inArray(this.filterInfo.oParentContext,u)!=-1){this.filterInfo.aFilteredContexts.push(p);this.filterInfo.oParentContext=p}};C.prototype._resolveMultiFilter=function(m,u){var t=this,M=false,f=m.aFilters;if(f){q.each(f,function(i,F){var l=false;if(F._bMultiFilter){l=t._resolveMultiFilter(F,u)}else if(F.sPath){var v=t.oModel.getProperty(F.sPath,u);if(typeof v=="string"){v=v.toUpperCase()}var a=t.getFilterFunction(F);if(v!=undefined&&a(v)){l=true}}if(l&&m.bAnd){M=true}else if(!l&&m.bAnd){M=false;return false}else if(l){M=true;return false}})}return M};C.prototype.getFilterFunction=function(f){if(f.fnTest){return f.fnTest}var v=f.oValue1,V=f.oValue2;if(typeof v=="string"){v=v.toUpperCase()}if(typeof V=="string"){V=V.toUpperCase()}switch(f.sOperator){case"EQ":f.fnTest=function(a){return a==v};break;case"NE":f.fnTest=function(a){return a!=v};break;case"LT":f.fnTest=function(a){return a<v};break;case"LE":f.fnTest=function(a){return a<=v};break;case"GT":f.fnTest=function(a){return a>v};break;case"GE":f.fnTest=function(a){return a>=v};break;case"BT":f.fnTest=function(a){return(a>v)&&(a<V)};break;case"Contains":f.fnTest=function(a){return a.indexOf(v)!=-1};break;case"StartsWith":f.fnTest=function(a){return a.indexOf(v)==0};break;case"EndsWith":f.fnTest=function(a){return a.indexOf(v)==a.length-new String(f.oValue1).length};break;default:f.fnTest=function(a){return true}}return f.fnTest};C.prototype.checkUpdate=function(f){this._fireChange()};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.PropertyBinding')){jQuery.sap.declare('sap.ui.model.PropertyBinding');sap.ui.define("sap/ui/model/PropertyBinding",['jquery.sap.global','./Binding','./SimpleType'],function(q,B,S){"use strict";var P=B.extend("sap.ui.model.PropertyBinding",{constructor:function(m,p,c,a){B.apply(this,arguments)},metadata:{"abstract":true,publicMethods:["getValue","setValue","setType","getType","setFormatter","getFormatter","getExternalValue","setExternalValue","getBindingMode"]}});P.prototype.getExternalValue=function(){var v=this.getValue();if(this.oType){v=this.oType.formatValue(v,this.sInternalType)}if(this.fnFormatter){v=this.fnFormatter(v)}return v};P.prototype.setExternalValue=function(v){if(this.fnFormatter){return}if(this.oType){v=this.oType.parseValue(v,this.sInternalType);this.oType.validateValue(v)}this.setValue(v)};P.prototype.setType=function(t,i){this.oType=t;this.sInternalType=i};P.prototype.getType=function(){return this.oType};P.prototype.setFormatter=function(f){this.fnFormatter=f};P.prototype.getFormatter=function(){return this.fnFormatter};P.prototype.getBindingMode=function(){return this.sMode};P.prototype.setBindingMode=function(b){this.sMode=b};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.model.control.ControlPropertyBinding')){jQuery.sap.declare('sap.ui.model.control.ControlPropertyBinding');sap.ui.define("sap/ui/model/control/ControlPropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding'],function(q,P){"use strict";var C=P.extend("sap.ui.model.control.ControlPropertyBinding",{constructor:function(m,p,c){P.apply(this,arguments);this.oValue=this._getValue()}});C.prototype.getValue=function(){return this.oValue};C.prototype.setValue=function(v){this.oValue=v;this.oContext.setProperty(this.sPath,v)};C.prototype._getValue=function(){return this.oContext.getProperty(this.sPath)};C.prototype.setContext=function(c){this.oContext=c;this.checkUpdate()};C.prototype.checkUpdate=function(){var v=this._getValue();if(v!==this.oValue){this.oValue=v;this._fireChange()}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONListBinding')){jQuery.sap.declare('sap.ui.model.json.JSONListBinding');sap.ui.define("sap/ui/model/json/JSONListBinding",['jquery.sap.global','sap/ui/model/ChangeReason','sap/ui/model/ClientListBinding'],function(q,C,a){"use strict";var J=a.extend("sap.ui.model.json.JSONListBinding");J.prototype.getContexts=function(s,l){this.iLastStartIndex=s;this.iLastLength=l;if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var c=this._getContexts(s,l),o={};if(this.bUseExtendedChangeDetection){for(var i=0;i<c.length;i++){o[c[i].getPath()]=c[i].getObject()}if(this.aLastContexts&&s<this.iLastEndIndex){var t=this;var d=q.sap.arrayDiff(this.aLastContexts,c,function(O,n){return q.sap.equal(O&&t.oLastContextData&&t.oLastContextData[O.getPath()],n&&o&&o[n.getPath()])});c.diff=d}this.iLastEndIndex=s+l;this.aLastContexts=c.slice(0);this.oLastContextData=q.extend(true,{},o)}return c};J.prototype.update=function(){var l=this.oModel._getObject(this.sPath,this.oContext);if(l&&q.isArray(l)){if(this.bUseExtendedChangeDetection){this.oList=q.extend(true,[],l)}else{this.oList=l.slice(0)}this.updateIndices();this.applyFilter();this.applySort();this.iLength=this._getLength()}else{this.oList=[];this.aIndices=[];this.iLength=0}};J.prototype.checkUpdate=function(f){if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!this.bUseExtendedChangeDetection){var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)||f){this.update();this._fireChange({reason:C.Change})}}else{var c=false;var t=this;var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)){this.update()}var b=this._getContexts(this.iLastStartIndex,this.iLastLength);if(this.aLastContexts){if(this.aLastContexts.length!=b.length){c=true}else{q.each(this.aLastContexts,function(i,o){if(!q.sap.equal(b[i].getObject(),t.oLastContextData[o.getPath()])){c=true;return false}})}}else{c=true}if(c||f){this._fireChange({reason:C.Change})}}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONTreeBinding')){jQuery.sap.declare('sap.ui.model.json.JSONTreeBinding');sap.ui.define("sap/ui/model/json/JSONTreeBinding",['jquery.sap.global','sap/ui/model/ClientTreeBinding'],function(q,C){"use strict";var J=C.extend("sap.ui.model.json.JSONTreeBinding");J.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],t=this,n=this.oModel._getObject(s),o,A=this.mParameters&&this.mParameters.arrayNames,b;if(n){if(A&&q.isArray(A)){q.each(A,function(i,d){b=n[d];if(b){q.each(b,function(S,e){t._saveSubContext(e,a,s,d+"/"+S)})}})}else{q.sap.each(n,function(N,o){if(q.isArray(o)){q.each(o,function(S,d){t._saveSubContext(d,a,s,N+"/"+S)})}else if(o&&typeof o=="object"){t._saveSubContext(o,a,s,N)}})}}return a};J.prototype._saveSubContext=function(n,c,s,N){if(typeof n=="object"){var o=this.oModel.getContext(s+N);if(this.aFilters&&!this.bIsFiltering){if(q.inArray(o,this.filterInfo.aFilteredContexts)!=-1){c.push(o)}}else{c.push(o)}}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataListBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataListBinding');sap.ui.define("sap/ui/model/odata/ODataListBinding",['jquery.sap.global','sap/ui/core/format/DateFormat','sap/ui/model/FilterType','sap/ui/model/ListBinding','./ODataUtils','./CountMode','./Filter'],function(q,D,F,L,O,C,a){"use strict";var b=L.extend("sap.ui.model.odata.ODataListBinding",{constructor:function(m,p,c,s,f,P){L.apply(this,arguments);this.sFilterParams=null;this.sSortParams=null;this.sRangeParams=null;this.sCustomParams=this.oModel.createCustomParams(this.mParameters);this.iStartIndex=0;this.bPendingChange=false;this.aKeys=[];this.bInitial=true;this.sCountMode=(P&&P.countMode)||this.oModel.sDefaultCountMode;this.bRefresh=false;this.bNeedsUpdate=false;this.bDataAvailable=false;this.bIgnoreSuspend=false;if(!this.oModel.getServiceMetadata()){var t=this,d=function(e){t.bInitial=false;t._initSortersFilters();t.oModel.detachMetadataLoaded(d)};this.oModel.attachMetadataLoaded(this,d)}else{this.bInitial=false;this._initSortersFilters()}var r=this.oModel._getObject(this.sPath,this.oContext);this.aExpandRefs=r;if(q.isArray(r)&&!s&&!f){this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;this.bDataAvailable=true}else if(r===null&&this.oModel.resolve(this.sPath,this.oContext)){this.aKeys=[];this.iLength=0;this.bLengthFinal=true;this.bDataAvailable=true}else{if(this.oModel.getServiceMetadata()){this.resetData()}}}});b.prototype.getContexts=function(s,l,t){if(this.bInitial){return[]}this.iLastLength=l;this.iLastStartIndex=s;this.iLastThreshold=t;if(!s){s=0}if(!l){l=this.oModel.iSizeLimit;if(this.bLengthFinal&&this.iLength<l){l=this.iLength}}if(!t){t=0}var c=true,d=this._getContexts(s,l),o={},S;S=this.calculateSection(s,l,t,d);c=d.length!=l&&!(this.bLengthFinal&&d.length>=this.iLength-s);if(this.oModel.getServiceMetadata()){if(!this.bPendingRequest&&S.length>0&&(c||l<S.length)){this.loadData(S.startIndex,S.length);d.dataRequested=true}}if(this.bRefresh){if(this.bLengthFinal&&this.iLength==0){this.loadData(S.startIndex,S.length,true);d.dataRequested=true}this.bRefresh=false}else{for(var i=0;i<d.length;i++){o[d[i].getPath()]=d[i].getObject()}if(this.bUseExtendedChangeDetection){if(this.aLastContexts&&s<this.iLastEndIndex){var e=this;var f=q.sap.arrayDiff(this.aLastContexts,d,function(g,n){return q.sap.equal(g&&e.oLastContextData&&e.oLastContextData[g.getPath()],n&&o&&o[n.getPath()])});d.diff=f}}this.iLastEndIndex=s+l;this.aLastContexts=d.slice(0);this.oLastContextData=q.extend(true,{},o)}return d};b.prototype._getContexts=function(s,l){var c=[],o,k;if(!s){s=0}if(!l){l=this.oModel.iSizeLimit;if(this.bLengthFinal&&this.iLength<l){l=this.iLength}}for(var i=s;i<s+l;i++){k=this.aKeys[i];if(!k){break}o=this.oModel.getContext('/'+k);c.push(o)}return c};b.prototype.calculateSection=function(s,l,t,c){var d=false,S,e,p,P,r,o={},k;e=s;S=0;for(var i=s;i>=Math.max(s-t,0);i--){k=this.aKeys[i];if(!k){P=i+1;break}}for(var j=s+l;j<s+l+t;j++){k=this.aKeys[j];if(!k){p=j;break}}r=s-P;if(P&&s>t&&r<t){if(c.length!=l){e=s-t}else{e=P-t}S=t}if(e==s){e+=c.length}if(c.length!=l){S+=l-c.length}r=p-s-l;if(r==0){S+=t}if(p&&r<t&&r>0){if(e>s){e=p;S+=t}}if(this.bLengthFinal&&this.iLength<(S+e)){S=this.iLength-e}o.startIndex=e;o.length=S;return o};b.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this._initSortersFilters();if(!this.bInitial){var r=this.oModel._getObject(this.sPath,this.oContext);this.aExpandRefs=r;if(q.isArray(r)&&!this.aSorters.length>0&&!this.aFilters.length>0){this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;this._fireChange()}else if(r===null&&this.oModel.resolve(this.sPath,this.oContext)){this.aKeys=[];this.iLength=0;this.bLengthFinal=true;this._fireChange()}else{this.refresh()}}}}};b.prototype.getDownloadUrl=function(f){var p=[],P;if(f){p.push("$format="+encodeURIComponent(f))}if(this.sSortParams){p.push(this.sSortParams)}if(this.sFilterParams){p.push(this.sFilterParams)}if(this.sCustomParams){p.push(this.sCustomParams)}P=this.oModel.resolve(this.sPath,this.oContext);if(P){return this.oModel._createRequestUrl(P,null,p)}};b.prototype.loadData=function(s,l,p){var t=this,I=false;if(s||l){this.sRangeParams="$skip="+s+"&$top="+l;this.iStartIndex=s}else{s=this.iStartIndex}var P=[];if(this.sRangeParams){P.push(this.sRangeParams)}if(this.sSortParams){P.push(this.sSortParams)}if(this.sFilterParams){P.push(this.sFilterParams)}if(this.sCustomParams){P.push(this.sCustomParams)}if(!this.bLengthFinal&&(this.sCountMode==C.Inline||this.sCountMode==C.Both)){P.push("$inlinecount=allpages");I=true}function S(f){q.each(f.results,function(i,g){t.aKeys[s+i]=t.oModel._getKey(g)});if(I&&f.__count){t.iLength=parseInt(f.__count,10);t.bLengthFinal=true}if(t.iLength<s+f.results.length){t.iLength=s+f.results.length;t.bLengthFinal=false}if(f.results.length<l||l===undefined){t.iLength=s+f.results.length;t.bLengthFinal=true}if(s==0&&f.results.length==0){t.iLength=0;t.bLengthFinal=true}t.oRequestHandle=null;t.bPendingRequest=false;t.bNeedsUpdate=true;t.bIgnoreSuspend=true}function c(f){t.fireDataReceived({data:f})}function e(E,A){t.oRequestHandle=null;t.bPendingRequest=false;if(!A){t.aKeys=[];t.iLength=0;t.bLengthFinal=true;t.bDataAvailable=true;t._fireChange({reason:sap.ui.model.ChangeReason.Change})}t.fireDataReceived()}function u(h){t.oRequestHandle=h}var d=this.sPath,o=this.oContext;if(this.isRelative()){d=this.oModel.resolve(d,o)}if(d){if(p){var U=this.oModel._createRequestUrl(d,null,P);this.fireDataRequested();this.oModel.fireRequestSent({url:U,method:"GET",async:true});setTimeout(function(){t.bNeedsUpdate=true;t.checkUpdate();t.oModel.fireRequestCompleted({url:U,method:"GET",async:true,success:true});t.fireDataReceived()},0)}else{this.bPendingRequest=true;this.fireDataRequested();this.oModel._loadData(d,P,S,e,false,u,c)}}};b.prototype.getLength=function(){if(this.bLengthFinal){return this.iLength}else{var A=this.iLastThreshold||this.iLastLength||10;return this.iLength+A}};b.prototype.isLengthFinal=function(){return this.bLengthFinal};b.prototype._getLength=function(){var t=this;var p=[];if(this.sFilterParams){p.push(this.sFilterParams)}if(this.mParameters&&this.mParameters.custom){var c={custom:{}};q.each(this.mParameters.custom,function(s,v){c.custom[s]=v});p.push(this.oModel.createCustomParams(c))}function _(o){t.iLength=parseInt(o,10);t.bLengthFinal=true}function d(e){var E="Request for $count failed: "+e.message;if(e.response){E+=", "+e.response.statusCode+", "+e.response.statusText+", "+e.response.body}q.sap.log.warning(E)}var P=this.oModel.resolve(this.sPath,this.oContext);if(P){var u=this.oModel._createRequestUrl(P+"/$count",null,p);var r=this.oModel._createRequest(u,"GET",false);r.headers["Accept"]="text/plain, */*;q=0.5";this.oModel._request(r,_,d,undefined,undefined,this.oModel.getServiceMetadata())}};b.prototype.refresh=function(f,c,e){var d=false;if(!f){if(e){var r=this.oModel.resolve(this.sPath,this.oContext);var E=this.oModel.oMetadata._getEntityTypeByPath(r);if(E&&(E.entityType in e)){d=true}}if(c&&!d){q.each(this.aKeys,function(i,k){if(k in c){d=true;return false}})}if(!c&&!e){d=true}}if(f||d){this.abortPendingRequest();this.resetData();this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}};b.prototype._fireRefresh=function(A){if(this.oModel.resolve(this.sPath,this.oContext)){this.bRefresh=true;this.fireEvent("refresh",A)}};b.prototype.initialize=function(){if(this.oModel.oMetadata.isLoaded()){if(this.bDataAvailable){this._fireChange({reason:sap.ui.model.ChangeReason.Change})}else{this._fireRefresh({reason:sap.ui.model.ChangeReason.Refresh})}}};b.prototype.checkUpdate=function(f,c){var d=this.sChangeReason?this.sChangeReason:sap.ui.model.ChangeReason.Change,e=false,l,o,t=this,r,R;if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!f&&!this.bNeedsUpdate){r=this.oModel._getObject(this.sPath,this.oContext);R=q.isArray(r)&&!q.sap.equal(r,this.aExpandRefs);this.aExpandRefs=r;if(R){if(this.aSorters.length>0||this.aFilters.length>0){this.refresh();return}else{this.aKeys=r;this.iLength=r.length;this.bLengthFinal=true;e=true}}else if(c){q.each(this.aKeys,function(i,k){if(k in c){e=true;return false}})}else{e=true}if(e&&this.aLastContexts){e=false;var g=this._getContexts(this.iLastStartIndex,this.iLastLength,this.iLastThreshold);if(this.aLastContexts.length!=g.length){e=true}else{q.each(this.aLastContexts,function(i,h){l=t.oLastContextData[h.getPath()];o=g[i].getObject();if(!q.sap.equal(l,o,3,true)){e=true;return false}})}}}if(f||e||this.bNeedsUpdate){this.bNeedsUpdate=false;this._fireChange({reason:d})}this.sChangeReason=undefined;this.bIgnoreSuspend=false};b.prototype.resetData=function(){this.aKeys=[];this.iLength=0;this.bLengthFinal=false;this.sChangeReason=undefined;this.bDataAvailable=false;if(this.oModel.isCountSupported()&&(this.sCountMode==C.Request||this.sCountMode==C.Both)){this._getLength()}};b.prototype.abortPendingRequest=function(){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}};b.prototype.sort=function(s){if(s instanceof sap.ui.model.Sorter){s=[s]}this.aSorters=s;this.createSortParams(s);this.abortPendingRequest();this.aKeys=[];if(!this.bInitial){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}this.sChangeReason=sap.ui.model.ChangeReason.Sort;this._fireRefresh({reason:this.sChangeReason});this._fireSort({sorter:s})}return this};b.prototype.createSortParams=function(s){this.sSortParams=O.createSortParams(s)};b.prototype.filter=function(f,s){if(!f){f=[]}if(f instanceof sap.ui.model.Filter){f=[f]}if(s==F.Application){this.aApplicationFilters=f}else{this.aFilters=f}if(!f||!q.isArray(f)||f.length==0){this.aFilters=[]}if(!this.aApplicationFilters||!q.isArray(this.aApplicationFilters)||this.aApplicationFilters.length===0){this.aApplicationFilters=[]}this.createFilterParams(this.aFilters,this.aApplicationFilters);this.abortPendingRequest();this.resetData();if(!this.bInitial){if(this.oRequestHandle){this.oRequestHandle.abort();this.oRequestHandle=null;this.bPendingRequest=false}this.sChangeReason=sap.ui.model.ChangeReason.Filter;this._fireRefresh({reason:this.sChangeReason});if(s==F.Application){this._fireFilter({filters:this.aApplicationFilters})}else{this._fireFilter({filters:this.aFilters})}}return this};b.prototype.createFilterParams=function(c,A){var f,s=O._createFilterParams(c,this.oModel.oMetadata,this.oEntityType),d=O._createFilterParams(A,this.oModel.oMetadata,this.oEntityType);if(s){f=s}if(d){if(s){f="("+f+")"+"%20and%20"+"("+d+")"}else{f=d}}if(f){this.sFilterParams="$filter="+f}else{this.sFilterParams=undefined}};b.prototype._initSortersFilters=function(){var r=this.oModel.resolve(this.sPath,this.oContext);if(!r){return}this.oEntityType=this._getEntityType();this.createSortParams(this.aSorters);this.createFilterParams(this.aFilters.concat(this.aApplicationFilters))};b.prototype._getEntityType=function(){var r=this.oModel.resolve(this.sPath,this.oContext);if(r){var e=this.oModel.oMetadata._getEntityTypeByPath(r);return e}return undefined};b.prototype.resume=function(){this.bIgnoreSuspend=false;L.prototype.resume.apply(this,arguments)};return b},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataPropertyBinding')){jQuery.sap.declare('sap.ui.model.odata.ODataPropertyBinding');sap.ui.define("sap/ui/model/odata/ODataPropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding'],function(q,P){"use strict";var O=P.extend("sap.ui.model.odata.ODataPropertyBinding",{constructor:function(m,p,c,a){P.apply(this,arguments);this.oValue=this._getValue()}});O.prototype.initialize=function(){if(this.oModel.oMetadata.isLoaded()){this.checkUpdate(true)}};O.prototype.getValue=function(){return this.oValue};O.prototype._getValue=function(){return this.oModel._getObject(this.sPath,this.oContext)};O.prototype.setValue=function(v){if(this.oValue!=v){if(!this.oModel.setProperty(this.sPath,v,this.oContext)){this._fireChange()}}};O.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.checkUpdate()}}};O.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return O},true)};if(!jQuery.sap.isDeclared('sap.ui.model.resource.ResourcePropertyBinding')){jQuery.sap.declare('sap.ui.model.resource.ResourcePropertyBinding');sap.ui.define("sap/ui/model/resource/ResourcePropertyBinding",['jquery.sap.global','sap/ui/model/PropertyBinding','sap/ui/model/ChangeReason'],function(q,P,C){"use strict";var R=P.extend("sap.ui.model.resource.ResourcePropertyBinding",{constructor:function(m,p){P.apply(this,arguments);this.oValue=this.oModel.getProperty(p)}});R.prototype.getValue=function(){return this.oValue};R.prototype.checkUpdate=function(f){if(!this.bSuspended){var v=this.oModel.getProperty(this.sPath);if(f||v!=this.oValue){this.oValue=v;this._fireChange({reason:C.Change})}}};return R},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLListBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLListBinding');sap.ui.define("sap/ui/model/xml/XMLListBinding",['jquery.sap.global','sap/ui/model/ChangeReason','sap/ui/model/ClientListBinding'],function(q,C,a){"use strict";var X=a.extend("sap.ui.model.xml.XMLListBinding");X.prototype.getContexts=function(s,l){this.iLastStartIndex=s;this.iLastLength=l;if(!s){s=0}if(!l){l=Math.min(this.iLength,this.oModel.iSizeLimit)}var c=this._getContexts(s,l),o={};if(this.bUseExtendedChangeDetection){for(var i=0;i<c.length;i++){o[c[i].getPath()]=this.oModel._getObject(c[i].getPath())[0]}if(this.aLastContexts&&s<this.iLastEndIndex){var t=this;var d=q.sap.arrayDiff(this.aLastContexts,c,function(O,n){var b=t.oLastContextData&&t.oLastContextData[O.getPath()];var N=o&&o[n.getPath()];if(b&&N){return q.sap.isEqualNode(b,N)}return false});c.diff=d}this.iLastEndIndex=s+l;this.aLastContexts=c.slice(0);this.oLastContextData={};var t=this;q.each(o,function(k,n){t.oLastContextData[k]=n.cloneNode(true)})}return c};X.prototype.update=function(){var l=this.oModel._getObject(this.sPath,this.oContext);if(l){this.oList=[];var t=this;if(this.bUseExtendedChangeDetection){q.each(l,function(k,n){t.oList.push(n.cloneNode(true))})}else{this.oList=l.slice(0)}this.updateIndices();this.applyFilter();this.applySort();this.iLength=this._getLength()}else{this.oList=[];this.aIndices=[];this.iLength=0}};X.prototype.checkUpdate=function(f){if(this.bSuspended&&!this.bIgnoreSuspend)return;if(!this.bUseExtendedChangeDetection){var l=this.oModel._getObject(this.sPath,this.oContext);if(!this.oList||!l||l.length!=this.oList.length||f){this.update();this._fireChange({reason:C.Change})}}else{var c=false;var t=this;var l=this.oModel._getObject(this.sPath,this.oContext);if(!q.sap.equal(this.oList,l)){this.update()}var b=this._getContexts(this.iLastStartIndex,this.iLastLength);if(this.aLastContexts){if(this.aLastContexts.length!=b.length){c=true}else{q.each(this.aLastContexts,function(i,o){var n=b[i].getObject();var O=t.oLastContextData&&t.oLastContextData[o.getPath()];if(n&&O&&!O.isEqualNode(n)){c=true;return false}})}}else{c=true}if(c||f){this._fireChange({reason:C.Change})}}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLTreeBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLTreeBinding');sap.ui.define("sap/ui/model/xml/XMLTreeBinding",['jquery.sap.global','sap/ui/model/ClientTreeBinding'],function(q,C){"use strict";var X=C.extend("sap.ui.model.xml.XMLTreeBinding");X.prototype.getNodeContexts=function(c){var s=c.getPath();if(!q.sap.endsWith(s,"/")){s=s+"/"}if(!q.sap.startsWith(s,"/")){s="/"+s}var a=[],n={},t=this,N=this.oModel._getObject(c.getPath()),o,b,d;q.each(N[0].childNodes,function(e,o){if(o.nodeType==1){if(n[o.nodeName]==undefined){n[o.nodeName]=0}else{n[o.nodeName]++}b=s+o.nodeName+"/"+n[o.nodeName];d=t.oModel.getContext(b);if(t.aFilters&&!t.bIsFiltering){if(q.inArray(d,t.filterInfo.aFilteredContexts)!=-1){a.push(d)}}else{a.push(d)}}});return a};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.serializer.ViewSerializer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.serializer.ViewSerializer');sap.ui.define("sap/ui/core/util/serializer/ViewSerializer",['jquery.sap.global','sap/ui/base/EventProvider','./HTMLViewSerializer','./Serializer','./XMLViewSerializer'],function(q,E,H,S,X){"use strict";var V=E.extend("sap.ui.core.util.serializer.ViewSerializer",{constructor:function(r,w,d){E.apply(this);this._oRootControl=r;this._oWindow=w||window;this._mViews={};this._sDefaultXmlNamespace=d}});V.prototype.serializeToXML=function(){return this.serialize("XML")};V.prototype.serializeToHTML=function(){return this.serialize("HTML")};V.prototype.serialize=function(c){this._mViews={};this._sConvertToViewType=c||undefined;return this._serializeRecursive(this._oRootControl)};V.prototype._getViewType=function(v){if(!this._sConvertToViewType){if(v instanceof this._oWindow.sap.ui.core.mvc.HTMLView){return"HTML"}else if(v instanceof this._oWindow.sap.ui.core.mvc.XMLView){return"XML"}}return this._sConvertToViewType};V.prototype._serializeRecursive=function(c){if(c instanceof this._oWindow.sap.ui.core.mvc.View){var v=this._getViewSerializer(c,this._getViewType(c));if(v){var o=c.getViewName()||c.getControllerName();if(!this._mViews[o]){this._mViews[o]=v.serialize(this._getViewType(c))}}}if(c.getMetadata().getClass()===this._oWindow.sap.ui.core.UIArea){var C=c.getContent();for(var i=0;i<C.length;i++){this._serializeRecursive(C[i])}}else if(c.getMetadata().getClass()===this._oWindow.sap.ui.core.ComponentContainer){this._serializeRecursive(c.getComponentInstance().getAggregation("rootControl"))}else{var a=c.getMetadata().getAllAggregations();if(a){for(var n in a){var A=a[n];var b=c[A._sGetter]();if(b&&b.length){for(var i=0;i<b.length;i++){var O=b[i];if(O instanceof this._oWindow.sap.ui.core.Element){this._serializeRecursive(O)}}}else if(b instanceof this._oWindow.sap.ui.core.Element){this._serializeRecursive(b)}}}}return this._mViews};V.prototype._getViewSerializer=function(v,t){var g=function(e){if(e.fFunction&&e.fFunction._sapui_handlerName){var h=e.fFunction._sapui_handlerName;var c=v.getController();if(c[h]){return h}}};var G=function(c){if(c._sapui_controlId){return c._sapui_controlId}return c.getId().replace(v.createId(""),"")};if(t==="HTML"){return new H(v,this._oWindow,G,g)}else if(t==="XML"){return new X(v,this._oWindow,this._sDefaultXmlNamespace,G,g)}else{var t=(v)?v.constructor:"?";throw Error("View type '"+t+"' is not supported for conversion. Only HTML and XML is supported")}};return V},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientPropertyBinding')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.model.ClientPropertyBinding');sap.ui.define("sap/ui/model/ClientPropertyBinding",['jquery.sap.global','./PropertyBinding'],function(q,P){"use strict";var C=P.extend("sap.ui.model.ClientPropertyBinding",{constructor:function(m,p,c,a){P.apply(this,arguments);this.oValue=this._getValue()}});C.prototype.getValue=function(){return this.oValue};C.prototype._getValue=function(){var p=this.sPath.substr(this.sPath.lastIndexOf("/")+1);if(p=="__name__"){var a=this.oContext.split("/");return a[a.length-1]}return this.oModel.getProperty(this.sPath,this.oContext)};C.prototype.setContext=function(c){if(this.oContext!=c){this.oContext=c;if(this.isRelative()){this.checkUpdate()}}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.CompositeBinding')){jQuery.sap.declare('sap.ui.model.CompositeBinding');sap.ui.define("sap/ui/model/CompositeBinding",['jquery.sap.global','./PropertyBinding','./SimpleType'],function(q,P,S){"use strict";var C=P.extend("sap.ui.model.CompositeBinding",{constructor:function(b,r){P.apply(this,[null,""]);var t=this;this.aBindings=b;this.bRawValues=r},metadata:{publicMethods:["getBindings","attachChange","detachChange"]}});C.prototype.getPath=function(){return null};C.prototype.getModel=function(){return null};C.prototype.getContext=function(){return null};C.prototype.getType=function(){return null};C.prototype.setContext=function(c){q.each(this.aBindings,function(i,b){if(!c||b.updateRequired(c.getModel())){b.setContext(c)}})};C.prototype.setValue=function(v){throw new sap.ui.base.Exception("Composite Binding does not support setValue because it contains multiple property bindings!")};C.prototype.getValue=function(){var v=[],V;q.each(this.aBindings,function(i,b){V=b.getValue();v.push(V)});return v};C.prototype.getExternalValue=function(){var v=[],V;if(this.bRawValues){v=this.getValue()}else{q.each(this.aBindings,function(i,b){V=b.getExternalValue();v.push(V)})}if(this.fnFormatter){V=this.fnFormatter.apply(this,v)}else{if(v.length>1){V=v.join(" ")}else{V=v[0]}}return V};C.prototype.setExternalValue=function(v){throw new sap.ui.base.Exception("Composite Binding does not support setExternalValue because it contains multiple property bindings!")};C.prototype.getBindings=function(){return this.aBindings};C.prototype.attachChange=function(f,l){this.attachEvent("change",f,l);if(this.aBindings){var t=this;q.each(this.aBindings,function(i,b){b.attachChange(t.checkUpdate,t)})}};C.prototype.detachChange=function(f,l){this.detachEvent("change",f,l);if(this.aBindings){var t=this;q.each(this.aBindings,function(i,b){b.detachChange(t.checkUpdate,t)})}};C.prototype.updateRequired=function(m){var u=false;q.each(this.aBindings,function(i,b){u=u||b.updateRequired(m)});return u};C.prototype.checkUpdate=function(f){var v=this.getExternalValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.model.control.ControlModel')){jQuery.sap.declare('sap.ui.model.control.ControlModel');sap.ui.define("sap/ui/model/control/ControlModel",['jquery.sap.global','sap/ui/model/Model','./ControlPropertyBinding'],function(q,M,C){"use strict";var a=M.extend("sap.ui.model.control.ControlModel",{constructor:function(c){M.apply(this,arguments);this.oControl=c;this.oControl.attachEvent("_change",this.checkUpdate,this);this.oElements=[]}});a.prototype.destroy=function(){this.oControl.detachEvent("_change",this.checkUpdate,this)};a.prototype.addFacadeComponent=function(e){var i=q.inArray(e,this.oElements);if(i<0){this.oElements.push(e);e.attachEvent("_change",this.checkUpdate,this)}};a.prototype.removeFacadeComponent=function(e){var i=q.inArray(e,this.oElements);if(i>=0){this.oElements.splice(i,1);e.detachEvent("_change",this.checkUpdate,this)}};a.prototype.bindProperty=function(p,c){c=c||this.oControl;if(c!==this.oControl){this.addFacadeComponent(c)}return new C(this,p,c)};a.prototype.checkUpdate=function(e){if(this._onchange){this._onchange(e)}if(this.aBindings.length){var b=this.aBindings.slice(0);q.each(b,function(i,B){B.checkUpdate()})}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONPropertyBinding')){jQuery.sap.declare('sap.ui.model.json.JSONPropertyBinding');sap.ui.define("sap/ui/model/json/JSONPropertyBinding",['jquery.sap.global','sap/ui/model/ClientPropertyBinding'],function(q,C){"use strict";var J=C.extend("sap.ui.model.json.JSONPropertyBinding");J.prototype.setValue=function(v){if(!q.sap.equal(this.oValue,v)){this.oModel.setProperty(this.sPath,v,this.oContext)}};J.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return J},true)};if(!jQuery.sap.isDeclared('sap.ui.model.odata.ODataModel')){jQuery.sap.declare('sap.ui.model.odata.ODataModel');jQuery.sap.require('sap.ui.thirdparty.datajs');sap.ui.define("sap/ui/model/odata/ODataModel",['jquery.sap.global','sap/ui/model/Model','./ODataUtils','./CountMode','./ODataContextBinding','./ODataListBinding','./ODataMetadata','./ODataPropertyBinding','./ODataTreeBinding','sap/ui/thirdparty/URI','sap/ui/thirdparty/datajs'],function(q,M,O,C,a,b,c,d,e,U,f){"use strict";var g=M.extend("sap.ui.model.odata.ODataModel",{constructor:function(s,j,u,p,h,t,w,l){M.apply(this,arguments);var i,r,m,A=null,L,k,n,D,S,o,v=this;if(typeof j==="object"){u=j.user;p=j.password;h=j.headers;t=j.tokenHandling;l=j.loadMetadataAsync;w=j.withCredentials;m=j.maxDataServiceVersion;i=j.useBatch;r=j.refreshAfterChange;A=j.annotationURI;L=j.loadAnnotationsJoined;D=j.defaultCountMode;n=j.metadataNamespaces;S=j.serviceUrlParams;o=j.metadataUrlParams;j=j.json}this.sDefaultBindingMode=sap.ui.model.BindingMode.OneWay;this.mSupportedBindingModes={"OneWay":true,"OneTime":true,"TwoWay":true};this.bCountSupported=true;this.bJSON=j;this.bCache=true;this.aPendingRequestHandles=[];this.oRequestQueue={};this.aBatchOperations=[];this.oHandler;this.bTokenHandling=t!==false;this.bWithCredentials=w===true;this.bUseBatch=i===true;this.bRefreshAfterChange=r!==false;this.sMaxDataServiceVersion=m;this.bLoadMetadataAsync=!!l;this.bLoadAnnotationsJoined=L===undefined?true:L;this.sAnnotationURI=A;this.sDefaultCountMode=D||C.Both;this.oMetadataLoadEvent=null;this.oMetadataFailedEvent=null;if(this.sAnnotationURI){q.sap.require("sap.ui.model.odata.ODataAnnotations")}this.oHeaders={};this.setHeaders(h);this.oData={};this.oMetadata=null;this.oAnnotations=null;this.aUrlParams=[];if(s.indexOf("?")==-1){this.sServiceUrl=s}else{var x=s.split("?");this.sServiceUrl=x[0];this.aUrlParams.push(x[1])}if(sap.ui.getCore().getConfiguration().getStatistics()){this.aUrlParams.push("sap-statistics=true")}this.sServiceUrl=this.sServiceUrl.replace(/\/$/,"");this.oServiceData=g.mServiceData[this.sServiceUrl];if(!this.oServiceData){g.mServiceData[this.sServiceUrl]={};this.oServiceData=g.mServiceData[this.sServiceUrl]}if(this.bTokenHandling&&this.oServiceData.securityToken){this.oHeaders["x-csrf-token"]=this.oServiceData.securityToken}this.sUser=u;this.sPassword=p;this.oHeaders["Accept-Language"]=sap.ui.getCore().getConfiguration().getLanguage();if(!this.oServiceData.oMetadata){this.oMetadata=new sap.ui.model.odata.ODataMetadata(this._createRequestUrl("$metadata",undefined,o),{async:this.bLoadMetadataAsync,user:this.sUser,password:this.sPassword,headers:this.mCustomHeaders,namespaces:n,withCredentials:this.bWithCredentials});v.oServiceData.oMetadata=v.oMetadata}else{this.oMetadata=this.oServiceData.oMetadata}if(S){this.aUrlParams=this.aUrlParams.concat(O._createUrlParamsArray(S))}if(!this.oMetadata.isLoaded()){this.oMetadata.attachLoaded(function(E){v._initializeMetadata();v.initialize()},this);this.oMetadata.attachFailed(this.fireMetadataFailed,this)}if(this.sAnnotationURI){this.oAnnotations=new sap.ui.model.odata.ODataAnnotations(this.sAnnotationURI,this.oMetadata,{async:this.bLoadMetadataAsync});this.oAnnotations.attachFailed(this.fireAnnotationsFailed,this);this.oAnnotations.attachLoaded(this.fireAnnotationsLoaded,this)}if(this.oMetadata.isLoaded()){this._initializeMetadata(true)}if(this.bJSON){if(this.sMaxDataServiceVersion==="3.0"){this.oHeaders["Accept"]="application/json;odata=fullmetadata"}else{this.oHeaders["Accept"]="application/json"}this.oHandler=OData.jsonHandler}else{this.oHeaders["Accept"]="application/atom+xml,application/atomsvc+xml,application/xml";this.oHandler=OData.atomHandler}this.oHeaders["MaxDataServiceVersion"]="2.0";if(this.sMaxDataServiceVersion){this.oHeaders["MaxDataServiceVersion"]=this.sMaxDataServiceVersion}this.oHeaders["DataServiceVersion"]="2.0"},metadata:{publicMethods:["create","remove","update","submitChanges","getServiceMetadata","read","hasPendingChanges","refresh","resetChanges","isCountSupported","setCountSupported","setDefaultCountMode","getDefaultCountMode","forceNoCache","setProperty","refreshSecurityToken","setHeaders","getHeaders","setUseBatch"]}});g.M_EVENTS={RejectChange:"rejectChange",MetadataLoaded:"metadataLoaded",MetadataFailed:"metadataFailed",AnnotationsLoaded:"annotationsLoaded",AnnotationsFailed:"annotationsFailed"};g.mServiceData={};g.prototype.fireRejectChange=function(A){this.fireEvent("rejectChange",A);return this};g.prototype.attachRejectChange=function(D,F,l){this.attachEvent("rejectChange",D,F,l);return this};g.prototype.detachRejectChange=function(F,l){this.detachEvent("rejectChange",F,l);return this};g.prototype._initializeMetadata=function(D){var t=this;this.bUseBatch=this.bUseBatch||this.oMetadata.getUseBatch();var h=function(i){if(!!i){t.metadataLoadEvent=q.sap.delayedCall(0,t,h)}else{t.fireMetadataLoaded({metadata:t.oMetadata});q.sap.log.debug("ODataModel fired metadataloaded")}};if(this.bLoadMetadataAsync&&this.sAnnotationURI&&this.bLoadAnnotationsJoined){if(this.oAnnotations&&this.oAnnotations.bInitialized){h()}else{this.oAnnotations.attachLoaded(function(){h()},this)}}else{h(D)}};g.prototype.fireAnnotationsLoaded=function(A){this.fireEvent("annotationsLoaded",A);return this};g.prototype.attachAnnotationsLoaded=function(D,F,l){this.attachEvent("annotationsLoaded",D,F,l);return this};g.prototype.detachAnnotationsLoaded=function(F,l){this.detachEvent("annotationsLoaded",F,l);return this};g.prototype.fireAnnotationsFailed=function(A){this.fireEvent("annotationsFailed",A);q.sap.log.debug("ODataModel fired annotationsfailed");return this};g.prototype.attachAnnotationsFailed=function(D,F,l){this.attachEvent("annotationsFailed",D,F,l);return this};g.prototype.detachAnnotationsFailed=function(F,l){this.detachEvent("annotationsFailed",F,l);return this};g.prototype.fireMetadataLoaded=function(A){this.fireEvent("metadataLoaded",A);return this};g.prototype.attachMetadataLoaded=function(D,F,l){this.attachEvent("metadataLoaded",D,F,l);return this};g.prototype.detachMetadataLoaded=function(F,l){this.detachEvent("metadataLoaded",F,l);return this};g.prototype.fireMetadataFailed=function(A){this.fireEvent("metadataFailed",A);return this};g.prototype.attachMetadataFailed=function(D,F,l){this.attachEvent("metadataFailed",D,F,l);return this};g.prototype.detachMetadataFailed=function(F,l){this.detachEvent("metadataFailed",F,l);return this};g.prototype._createRequestUrl=function(p,o,u,B,h){var i,r,s,j="";if(p&&p.indexOf('?')!=-1){s=p.substr(p.indexOf('?')+1);p=p.substr(0,p.indexOf('?'))}r=this._normalizePath(p,o);if(!B){j=this.sServiceUrl+r}else{j=r.substr(r.indexOf('/')+1)}i=O._createUrlParamsArray(u);if(this.aUrlParams){i=i.concat(this.aUrlParams)}if(s){i.push(s)}if(i.length>0){j+="?"+i.join("&")}if(h===undefined){h=true}if(h===false){var t=q.now();var k=j.replace(/([?&])_=[^&]*/,"$1_="+t);j=k+((k===j)?(/\?/.test(j)?"&":"?")+"_="+t:"")}return j};g.prototype._loadData=function(p,P,s,E,h,H,i){var r,R,o,t=this;function _(D,m){var n=D,v={};if(!n){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+m.requestUri);t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:false});return false}if(t.bUseBatch){var w=t._getBatchErrors(D);if(w.length>0){j(w[0]);return false}if(n.__batchResponses&&n.__batchResponses.length>0){n=n.__batchResponses[0].data}else{q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+m.requestUri)}}l=l.concat(n.results);if(n.__next){var x=new URI(n.__next);o.requestUri=x.absoluteTo(m.requestUri).toString();k(o)}else{q.extend(n.results,l);if(n.results&&!q.isArray(n.results)){n=n.results}t._importData(n,v);if(t.sChangeKey&&v){var y=t.sChangeKey.substr(t.sChangeKey.lastIndexOf('/')+1);if(v[y]){delete t.oRequestQueue[t.sChangeKey];t.sChangeKey=null}}if(s){s(n)}t.checkUpdate(false,v);if(i){i(n)}t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:true})}}function j(m){if(t.bTokenHandling&&m.response){var T=t._getHeader("x-csrf-token",m.response.headers);if(!o.bTokenReset&&m.response.statusCode=='403'&&T&&T.toLowerCase()=="required"){t.resetSecurityToken();o.bTokenReset=true;k();return}}var n=t._handleError(m);if(E){E(m,r&&r.bAborted)}t.fireRequestCompleted({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+t.oHeaders["Accept"],infoObject:{acceptHeaders:t.oHeaders["Accept"]},success:false,errorobject:n});if(!r||!r.bAborted){n.url=o.requestUri;t.fireRequestFailed(n)}}function k(){if(t.bUseBatch){t.updateSecurityToken();var m=URI.parse(o.requestUri).query;var n=t._createRequestUrl(p,null,m,t.bUseBatch);o=t._createRequest(n,"GET",true);var B=t._createBatchRequest([o],true);r=t._request(B,_,j,OData.batchHandler,undefined,t.getServiceMetadata())}else{r=t._request(o,_,j,t.oHandler,undefined,t.getServiceMetadata())}if(H){var w={abort:function(){r.bAborted=true;r.abort()}};H(w)}}var l=[];var u=this._createRequestUrl(p,null,P,null,h||this.bCache);o=this._createRequest(u,"GET",true);this.fireRequestSent({url:o.requestUri,type:"GET",async:o.async,info:"Accept headers:"+this.oHeaders["Accept"],infoObject:{acceptHeaders:this.oHeaders["Accept"]}});k()};g.prototype._importData=function(D,k){var t=this,l,K,r,E;if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._importData(h,k))});return l}else{K=this._getKey(D);E=this.oData[K];if(!E){E=D;this.oData[K]=E}q.each(D,function(n,p){if(p&&(p.__metadata&&p.__metadata.uri||p.results)&&!p.__deferred){r=t._importData(p,k);if(q.isArray(r)){E[n]={__list:r}}else{E[n]={__ref:r}}}else if(!p||!p.__deferred){E[n]=p}});k[K]=true;return K}};g.prototype._removeReferences=function(D){var t=this,l;if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._removeReferences(h))});return l}else{q.each(D,function(p,o){if(o){if(o["__ref"]||o["__list"]){delete D[p]}}});return D}};g.prototype._restoreReferences=function(D){var t=this,o,l,r=[];if(D.results){l=[];q.each(D.results,function(i,h){l.push(t._restoreReferences(h))});return l}else{q.each(D,function(p,o){if(o&&o["__ref"]){var h=t._getObject("/"+o["__ref"]);if(h){delete o["__ref"];D[p]=h;t._restoreReferences(h)}}else if(o&&o["__list"]){q.each(o["__list"],function(j,E){var h=t._getObject("/"+o["__list"][j]);if(h){r.push(h);t._restoreReferences(h)}});delete o["__list"];o.results=r;r=[]}});return D}};g.prototype.removeData=function(){this.oData={}};g.prototype.initialize=function(){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.initialize()})};g.prototype.refresh=function(F,r){if(r){this.removeData()}this._refresh(F)};g.prototype._refresh=function(F,m,E){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.refresh(F,m,E)})};g.prototype.checkUpdate=function(F,m){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.checkUpdate(F,m)})};g.prototype.bindProperty=function(p,o,P){var B=new d(this,p,o,P);return B};g.prototype.bindList=function(p,o,s,F,P){var B=new b(this,p,o,s,F,P);return B};g.prototype.bindTree=function(p,o,F,P){var B=new e(this,p,o,F,P);return B};g.prototype.createBindingContext=function(p,o,P,h,r){var r=!!r,F=this.resolve(p,o);if(typeof o=="function"){h=o;o=null}if(typeof P=="function"){h=P;P=null}var D=this._getObject(p,o),k,n,t=this;if(!r){r=this._isReloadNeeded(F,D,P)}if(!r){k=this._getKey(D);n=this.getContext('/'+k);h(n)}else{var i=!q.sap.startsWith(p,"/");if(F){var j=[],s=this.createCustomParams(P);if(s){j.push(s)}this._loadData(F,j,function(D){k=D?t._getKey(D):undefined;if(k&&o&&i){var l=o.getPath();l=l.substr(1);if(t.oData[l]){t.oData[l][p]={__ref:k}}}n=t.getContext('/'+k);h(n)},function(){h(null)})}else{h(null)}}};g.prototype._isReloadNeeded=function(F,D,p){var n,N=[],h,s,S=[];if(!D){return true}if(p&&p["expand"]){n=p["expand"].replace(/\s/g,"");N=n.split(',')}if(N){for(var i=0;i<N.length;i++){var j=N[i].indexOf("/");if(j!==-1){var k=N[i].slice(0,j);var l=N[i].slice(j+1);N[i]=[k,l]}}}for(var i=0;i<N.length;i++){var m=N[i];if(q.isArray(m)){var o=D[m[0]];var r=m[1];if(!o||(o&&o.__deferred)){return true}else{if(o){if(o.__list&&o.__list.length>0){for(var t=0;t<o.__list.length;t++){var P="/"+o.__list[t];var u=this.getObject(P);var R=this._isReloadNeeded(P,u,{expand:r});if(R){return true}}}else if(o.__ref){var P="/"+o.__ref;var u=this.getObject(P);var R=this._isReloadNeeded(P,u,{expand:r});if(R){return true}}}}}else{if(D[m]===undefined||(D[m]&&D[m].__deferred)){return true}}}if(p&&p["select"]){s=p["select"].replace(/\s/g,"");S=s.split(',')}for(var i=0;i<S.length;i++){if(D[S[i]]===undefined){return true}}if(S.length==0){var E=this.oMetadata._getEntityTypeByPath(F);if(!E){return false}else{for(var i=0;i<E.property.length;i++){if(D[E.property[i].name]===undefined){return true}}}}return false};g.prototype.destroyBindingContext=function(o){};g.prototype.createCustomParams=function(p){var h=[],m,s={expand:true,select:true};for(var n in p){if(n in s){h.push("$"+n+"="+q.sap.encodeURL(p[n]))}if(n=="custom"){m=p[n];for(var n in m){if(n.indexOf("$")==0){q.sap.log.warning("Trying to set OData parameter "+n+" as custom query option!")}else{h.push(n+"="+q.sap.encodeURL(m[n]))}}}}return h.join("&")};g.prototype.bindContext=function(p,o,P){var B=new a(this,p,o,P);return B};g.prototype.setCountSupported=function(h){this.bCountSupported=h};g.prototype.isCountSupported=function(){return this.bCountSupported};g.prototype.setDefaultCountMode=function(s){this.sDefaultCountMode=s};g.prototype.getDefaultCountMode=function(){return this.sDefaultCountMode};g.prototype._getKey=function(o,D){var k,u;if(o instanceof sap.ui.model.Context){k=o.getPath().substr(1)}else if(o&&o.__metadata&&o.__metadata.uri){u=o.__metadata.uri;k=u.substr(u.lastIndexOf("/")+1)}if(D)k=decodeURIComponent(k);return k};g.prototype.getKey=function(o,D){return this._getKey(o,D)};g.prototype.createKey=function(s,k,D){var E=this.oMetadata._getEntityTypeByPath(s),K=s,t=this,h,n,v,p;K+="(";if(E.key.propertyRef.length==1){n=E.key.propertyRef[0].name;p=this.oMetadata._getPropertyMetadata(E,n);v=O.formatValue(k[n],p.type);K+=D?v:encodeURIComponent(v)}else{q.each(E.key.propertyRef,function(i,P){if(i>0)K+=",";n=P.name;p=t.oMetadata._getPropertyMetadata(E,n);v=O.formatValue(k[n],p.type);K+=n;K+="=";K+=D?v:encodeURIComponent(v)})}K+=")";return K};g.prototype.getProperty=function(p,o,i){var v=this._getObject(p,o);if(i==null||i==undefined){return v}if(!q.isPlainObject(v)){return v}v=q.extend(true,{},v);if(i==true){return this._restoreReferences(v)}else{return this._removeReferences(v)}};g.prototype._getObject=function(p,o){var n=this.isLegacySyntax()?this.oData:null,r,k;if(this.oMetadata&&p&&p.indexOf('#')>-1){r=this.resolve(p,o);if(r){n=this.oMetadata._getAnnotation(r)}}else{if(o){k=o.getPath();k=k.substr(1);n=this.oData[k]}if(!p){return n}var P=p.split("/"),i=0;if(!P[0]){n=this.oData;i++}while(n&&P[i]){n=n[P[i]];if(n){if(n.__ref){n=this.oData[n.__ref]}else if(n.__list){n=n.__list}else if(n.__deferred){n=undefined}}i++}}return n};g.prototype.updateSecurityToken=function(){if(this.bTokenHandling){if(!this.oServiceData.securityToken){this.refreshSecurityToken()}if(this.bTokenHandling){this.oHeaders["x-csrf-token"]=this.oServiceData.securityToken}}};g.prototype.resetSecurityToken=function(){delete this.oServiceData.securityToken;delete this.oHeaders["x-csrf-token"]};g.prototype.refreshSecurityToken=function(s,E,A){var t=this,u,T;A=A===true;u=this._createRequestUrl("/");var r=this._createRequest(u,"GET",A);r.headers["x-csrf-token"]="Fetch";function _(D,R){if(R){T=t._getHeader("x-csrf-token",R.headers);if(T){t.oServiceData.securityToken=T;t.oHeaders["x-csrf-token"]=T}else{t.resetSecurityToken();t.bTokenHandling=false}}if(s){s(D,R)}}function h(o){t.resetSecurityToken();t.bTokenHandling=false;t._handleError(o);if(E){E(o)}}return this._request(r,_,h,undefined,undefined,this.getServiceMetadata())};g.prototype._submitRequest=function(r,B,s,E,h,i){var t=this,R,m={};function _(D,o){if(B&&h){var l=t._getBatchErrors(D);if(l.length>0){j(l[0]);return false}if(D.__batchResponses&&D.__batchResponses.length>0){R=D.__batchResponses[0].data;if(!R&&D.__batchResponses[0].__changeResponses){R=D.__batchResponses[0].__changeResponses[0].data}}D=R}if(i){if(D&&D.__batchResponses){q.each(D.__batchResponses,function(I,o){if(o&&o.data){t._importData(o.data,m)}})}}t._handleETag(r,o,B);t._updateRequestQueue(r,B);if(t._isRefreshNeeded(r,o)){t._refresh(false,r.keys,r.entityTypes)}if(s){s(D,o)}}function j(o){if(t.bTokenHandling&&o.response){var T=t._getHeader("x-csrf-token",o.response.headers);if(!r.bTokenReset&&o.response.statusCode=='403'&&T&&T.toLowerCase()=="required"){t.resetSecurityToken();r.bTokenReset=true;k();return}}t._handleError(o);if(E){E(o)}}function k(){if(t.bTokenHandling&&r.method!=="GET"){t.updateSecurityToken();if(t.bTokenHandling){r.headers["x-csrf-token"]=t.oServiceData.securityToken}}if(B){return t._request(r,_,j,OData.batchHandler,undefined,t.getServiceMetadata())}else{return t._request(r,_,j,t.oHandler,undefined,t.getServiceMetadata())}}return k()};g.prototype._createBatchRequest=function(B,A){var u,r,o={},p={},h=[],K={},E={};p.__batchRequests=B;u=this.sServiceUrl+"/$batch";if(this.aUrlParams){u+="?"+this.aUrlParams.join("&")}q.extend(o,this.mCustomHeaders,this.oHeaders);delete o["Content-Type"];r={headers:o,requestUri:u,method:"POST",data:p,user:this.sUser,password:this.sPassword,async:A};if(A){r.withCredentials=this.bWithCredentials}q.each(B,function(i,m){if(m["__changeRequests"]){q.each(m["__changeRequests"],function(j,n){if(n.keys&&n.method!="POST"){q.each(n.keys,function(k,s){K[k]=s})}else if(n.entityTypes&&n.method=="POST"){q.each(n.entityTypes,function(l,s){E[l]=s})}})}});r.keys=K;r.entityTypes=E;return r};g.prototype._handleETag=function(r,R,B){var u,E,h,k,l,m;if(B){l=r.data.__batchRequests;m=R.data.__batchResponses;if(m&&l){for(var i=0;i<l.length;i++){h=l[i].__changeRequests;if(m[i]){k=m[i].__changeResponses;if(h&&k){for(var j=0;j<h.length;j++){if(h[j].method=="MERGE"||h[j].method=="PUT"){u=h[j].requestUri.replace(this.sServiceUrl+'/','');if(!q.sap.startsWith(u,"/")){u="/"+u}E=this._getObject(u);if(E&&E.__metadata&&k[j].headers&&k[j].headers.ETag){E.__metadata.etag=k[j].headers.ETag}}}}}else{q.sap.log.warning("could not update ETags for batch request: corresponding response for request missing")}}}else{q.sap.log.warning("could not update ETags for batch request: no batch responses/requests available")}}else{u=r.requestUri.replace(this.sServiceUrl+'/','');if(!q.sap.startsWith(u,"/")){u="/"+u}E=this._getObject(u);if(E&&E.__metadata&&R.headers.ETag){E.__metadata.etag=R.headers.ETag}}};g.prototype._handleBatchErrors=function(r,D){var E=[];E=this._getBatchErrors(D);this._handleETag()};g.prototype._getBatchErrors=function(D){var E=[],s;q.each(D.__batchResponses,function(i,o){if(o.message){s="The following problem occurred: "+o.message;if(o.response){s+=o.response.statusCode+","+o.response.statusText+","+o.response.body}E.push(o);q.sap.log.fatal(s)}if(o.__changeResponses){q.each(o.__changeResponses,function(i,h){if(h.message){s="The following problem occurred: "+h.message;if(h.response){s+=h.response.statusCode+","+h.response.statusText+","+h.response.body}E.push(h);q.sap.log.fatal(s)}})}});return E};g.prototype._handleError=function(E){var p={},h,t;var s="The following problem occurred: "+E.message;p.message=E.message;if(E.response){if(this.bTokenHandling){t=this._getHeader("x-csrf-token",E.response.headers);if(E.response.statusCode=='403'&&t&&t.toLowerCase()=="required"){this.resetSecurityToken()}}s+=E.response.statusCode+","+E.response.statusText+","+E.response.body;p.statusCode=E.response.statusCode;p.statusText=E.response.statusText;p.responseText=E.response.body}q.sap.log.fatal(s);return p};g.prototype.getData=function(p,o,i){return this.getProperty(p,o,i)};g.prototype._getETag=function(p,P,E){var s,h,i;if(E){s=E}else{if(P&&P.__metadata){s=P.__metadata.etag}else if(p){h=p.replace(this.sServiceUrl+'/','');i=h.indexOf("?");if(i>-1){h=h.substr(0,i)}if(this.oData.hasOwnProperty(h)){s=this.getProperty('/'+h+'/__metadata/etag')}}}return s};g.prototype._createRequest=function(u,m,A,p,E){var o={},s;q.extend(o,this.mCustomHeaders,this.oHeaders);s=this._getETag(u,p,E);if(s&&m!="GET"){o["If-Match"]=s}if(this.bJSON&&m!="DELETE"&&this.sMaxDataServiceVersion==="2.0"){o["Content-Type"]="application/json"}if(m=="MERGE"&&!this.bUseBatch){o["x-http-method"]="MERGE";m="POST"}var r={headers:o,requestUri:u,method:m,user:this.sUser,password:this.sPassword,async:A};if(p){r.data=p}if(A){r.withCredentials=this.bWithCredentials}return r};g.prototype._isRefreshNeeded=function(r,R){var h=false,E,i=[],t=this;if(!this.bRefreshAfterChange){return h}if(r.data&&q.isArray(r.data.__batchRequests)){if(R){i=t._getBatchErrors(R.data);q.each(i,function(I,o){if(o.response&&o.response.statusCode=="412"){E=o.response.statusCode;return false}});if(!!E){return false}}q.each(r.data.__batchRequests,function(I,B){if(q.isArray(B.__changeRequests)){q.each(B.__changeRequests,function(I,o){h=h||t._isRefreshNeeded(o);return!h})}return!h})}else{if(r.method==="GET"){return false}else{if(R&&R.statusCode=="412"){h=false}else{h=true}}}return h};g.prototype.update=function(p,D,P){var s,E,m,r,u,o,h,R,B,i,S,k,j,A=false;if(P instanceof sap.ui.model.Context||arguments.length>3){o=P;s=arguments[3];E=arguments[4];m=arguments[5]}else{o=P.context||P.oContext;s=P.success||P.fnSuccess;E=P.error||P.fnError;h=P.eTag||P.sETag;m=typeof(P.merge)=="undefined"?P.bMerge===true:P.merge===true;A=typeof(P.async)=="undefined"?P.bAsync===true:P.async===true;j=P.urlParameters}u=this._createRequestUrl(p,o,j,this.bUseBatch);if(m){r=this._createRequest(u,"MERGE",A,D,h)}else{r=this._createRequest(u,"PUT",A,D,h)}p=this._normalizePath(p,o);S=this._getObject(p);r.keys={};if(S){k=this._getKey(S);r.keys[k]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R};g.prototype.create=function(p,D,P){var r,B,u,R,s,E,o,S,h,A=false,m;if(P&&typeof(P)=="object"&&!(P instanceof sap.ui.model.Context)){o=P.context;S=P.success;m=P.urlParameters;h=P.error;A=P.async===true}else{o=P;S=arguments[3];h=arguments[4]}u=this._createRequestUrl(p,o,m,this.bUseBatch);r=this._createRequest(u,"POST",A,D);p=this._normalizePath(p,o);E=this.oMetadata._getEntityTypeByPath(p);r.entityTypes={};if(E){r.entityTypes[E.entityType]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,S,h,true)}else{R=this._submitRequest(r,this.bUseBatch,S,h)}return R};g.prototype.remove=function(p,P){var o,E,s,S,h,r,u,i,k,j,_,B,R,l,m,A=false,t=this;if((P&&P instanceof sap.ui.model.Context)||arguments[2]){o=P;S=arguments[2];h=arguments[3]}else if(P){o=P.context||P.oContext;S=P.success||P.fnSuccess;h=P.error||P.fnError;i=P.eTag||P.sETag;j=P.payload||P.oPayload;A=typeof(P.async)=="undefined"?P.bAsync===true:P.async===true;m=P.urlParameters}_=function(D,n){E=u.substr(u.lastIndexOf('/')+1);if(E.indexOf('?')!=-1){E=E.substr(0,E.indexOf('?'))}delete t.oData[E];delete t.mContexts["/"+E];if(S){S(D,n)}};u=this._createRequestUrl(p,o,m,this.bUseBatch);r=this._createRequest(u,"DELETE",A,j,i);p=this._normalizePath(p,o);s=this._getObject(p);r.keys={};if(s){k=this._getKey(s);r.keys[k]=true}if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,_,h,true)}else{R=this._submitRequest(r,this.bUseBatch,_,h)}return R};g.prototype.callFunction=function(F,p){var r,B,u,R,o,P,h,s,E,A,m="GET",i={},t=this;if(p&&typeof(p)=="object"){m=p.method?p.method:m;P=p.urlParameters;h=p.context;s=p.success;E=p.error;A=p.async===true}else{m=p;P=arguments[2];h=arguments[3];s=arguments[4];E=arguments[5];A=arguments[6]===true}o=this.oMetadata._getFunctionImportMetadata(F,m);if(o){u=this._createRequestUrl(F,h,null,this.bUseBatch);var j=URI(u);if(o.parameter!=null){q.each(P,function(k,l){var n=q.grep(o.parameter,function(w){return w.name==k&&w.mode=="In"});if(n!=null&&n.length>0){var v=n[0];i[k]=O.formatValue(l,v.type)}else{q.sap.log.warning("Parameter "+k+" is not defined for function call "+F+"!")}})}if(m==="GET"){return t.read(F,h,i,true,s,E)}else{q.each(i,function(k,l){j.addQuery(k,l)});r=this._createRequest(j.toString(),m,A);if(this.bUseBatch){B=this._createBatchRequest([{__changeRequests:[r]}],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R}}};g.prototype.read=function(p,P){var r,u,R,B,o,m,A,s,E,F,S,h,i,j,k,l,t=this;if(P&&typeof(P)=="object"&&!(P instanceof sap.ui.model.Context)){o=P.context;m=P.urlParameters;A=P.async!==false;s=P.success;E=P.error;F=P.filters;S=P.sorters}else{o=P;m=arguments[2];A=arguments[3]!==false;s=arguments[4];E=arguments[5]}A=A!==false;l=O._createUrlParamsArray(m);i=O.createSortParams(S);if(i){l.push(i)};if(F&&!this.oMetadata){q.sap.log.fatal("Tried to use filters in read method before metadata is available.")}else{k=this._normalizePath(p,o);j=this.oMetadata&&this.oMetadata._getEntityTypeByPath(k);h=O.createFilterParams(F,this.oMetadata,j);if(h){l.push(h)}}u=this._createRequestUrl(p,o,l,this.bUseBatch);r=this._createRequest(u,"GET",A);if(this.bUseBatch){B=this._createBatchRequest([r],A);R=this._submitRequest(B,this.bUseBatch,s,E,true)}else{R=this._submitRequest(r,this.bUseBatch,s,E)}return R};g.prototype.createBatchOperation=function(p,m,D,P){var o={},E,s,k,h;q.extend(o,this.mCustomHeaders,this.oHeaders);if(q.sap.startsWith(p,"/")){p=p.substr(1)}if(P){E=P.sETag}if(m!="GET"){E=this._getETag(p,D,E);if(E){o["If-Match"]=E}}if(this.bJSON){if(m!="DELETE"&&m!="GET"&&this.sMaxDataServiceVersion==="2.0"){o["Content-Type"]="application/json"}}else{o["Content-Type"]="application/atom+xml"}var r={requestUri:p,method:m.toUpperCase(),headers:o};if(D){r.data=D}if(m!="GET"&&m!="POST"){if(p&&p.indexOf("/")!=0){p='/'+p}s=this._getObject(p);if(s){k=this._getKey(s);r.keys={};r.keys[k]=true}}else if(m=="POST"){h=this.oMetadata._getEntityTypeByPath(p);if(h){r.entityTypes={};r.entityTypes[h.entityType]=true}}return r};g.prototype.addBatchReadOperations=function(r){if(!q.isArray(r)||r.length<=0){q.sap.log.warning("No array with batch operations provided!");return false}var t=this;q.each(r,function(i,R){if(R.method!="GET"){q.sap.log.warning("Batch operation should be a GET operation!");return false}t.aBatchOperations.push(R)})};g.prototype.addBatchChangeOperations=function(h){if(!q.isArray(h)||h.length<=0){return false}q.each(h,function(i,o){if(o.method!="POST"&&o.method!="PUT"&&o.method!="MERGE"&&o.method!="DELETE"){q.sap.log.warning("Batch operation should be a POST/PUT/MERGE/DELETE operation!");return false}});this.aBatchOperations.push({__changeRequests:h})};g.prototype.clearBatch=function(){this.aBatchOperations=[]};g.prototype.submitBatch=function(s,E,A,i){var r,u,R,t=this;function _(D,j){if(s){s(D,j,t._getBatchErrors(D))}}if(!(typeof(s)=="function")){var o=A;var h=E;A=s;s=h;E=o}A=A!==false;if(this.aBatchOperations.length<=0){q.sap.log.warning("No batch operations in batch. No request will be triggered!");return false}r=this._createBatchRequest(this.aBatchOperations,A);R=this._submitRequest(r,true,_,E,false,i);this.clearBatch();return R};g.prototype.getServiceMetadata=function(){if(this.oMetadata&&this.oMetadata.isLoaded()){return this.oMetadata.getServiceMetadata()}};g.prototype.getServiceAnnotations=function(){if(this.oAnnotations&&this.oAnnotations.getAnnotationsData){return this.oAnnotations.getAnnotationsData()}};g.prototype.submitChanges=function(s,E,p){var r,P,t=this,h,i,T,m,S,k;if(this.sChangeKey){h=this.sChangeKey.replace(this.sServiceUrl,'');S=this._getObject(h);P=S;if(q.isPlainObject(S)){P=q.extend(true,{},S);if(P.__metadata){T=P.__metadata.type;m=P.__metadata.etag;delete P.__metadata;if(T||m){P.__metadata={}}if(T){P.__metadata.type=T}if(!!m){P.__metadata.etag=m}}q.each(P,function(l,u){if(u&&u.__deferred){delete P[l]}});var o=this.oMetadata._getEntityTypeByPath(h);if(o){var n=this.oMetadata._getNavigationPropertyNames(o);q.each(n,function(I,N){delete P[N]})}P=this._removeReferences(P)}if(p&&p.sETag){i=p.sETag}r=this._createRequest(this.sChangeKey,"MERGE",true,P,i);if(this.sUrlParams){r.requestUri+="?"+this.sUrlParams}r.keys={};if(S){k=this._getKey(S);r.keys[k]=true}this.oRequestQueue[this.sChangeKey]=r}if(q.isEmptyObject(this.oRequestQueue)){return undefined}if(this.bUseBatch){var j=[];q.each(this.oRequestQueue,function(k,l){delete l._oRef;var R=q.extend(true,{},l);l._oRef=R;R.requestUri=R.requestUri.replace(t.sServiceUrl+'/','');R.data._bCreate?delete R.data._bCreate:false;j.push(R)});r=this._createBatchRequest([{__changeRequests:j}],true);this._submitRequest(r,this.bUseBatch,s,E,true)}else{q.each(this.oRequestQueue,function(k,l){delete l._oRef;var R=q.extend(true,{},l);l._oRef=R;if(R.data&&R.data._bCreate){delete R.data._bCreate}t._submitRequest(R,this.bUseBatch,s,E,true)})}return undefined};g.prototype._updateRequestQueue=function(r,B){var h,k,o,t=this;if(B){h=r.data.__batchRequests;if(h){for(var i=0;i<h.length;i++){k=h[i].__changeRequests;if(k){for(var j=0;j<k.length;j++){o=k[j];q.each(this.oRequestQueue,function(K,l){if(l._oRef===o&&K!==t.sChangeKey){delete t.oRequestQueue[K];delete t.oData[K];delete t.mContexts["/"+K]}else if(t.sChangeKey&&K===t.sChangeKey){delete t.oRequestQueue[K];t.sChangeKey=null}})}}}}}else{q.each(this.oRequestQueue,function(K,l){if(l._oRef===r&&K!==t.sChangeKey){delete t.oRequestQueue[K];delete t.oData[K];delete t.mContexts["/"+K]}else if(t.sChangeKey&&K===t.sChangeKey){delete t.oRequestQueue[K];t.sChangeKey=null}})}};g.prototype.resetChanges=function(s,E){var p;if(this.sChangeKey){p=this.sChangeKey.replace(this.sServiceUrl,'');this._loadData(p,null,s,E)}};g.prototype.setProperty=function(p,v,o){var P,E={},D={},s=this._createRequestUrl(p,o),h=p.substring(0,p.lastIndexOf("/")),k,j,m={},l=false;if(!this.resolve(p,o)){return false}s=s.replace(this.sServiceUrl+'/','');s=s.substring(0,s.indexOf("/"));s=this.sServiceUrl+'/'+s;P=p.substr(p.lastIndexOf("/")+1);D=this._getObject(h,o);if(!D){return false}j=h.split("/");for(var i=j.length-1;i>=0;i--){E=this._getObject(j.join("/"),o);if(E){k=this._getKey(E);if(k){break}}j.splice(i-1,1)}if(!k){k=this._getKey(o)}if(k){m[k]=true}if(D._bCreate){D[P]=v;l=true;this.checkUpdate(false,m)}else{if(!this.sChangeKey){this.sChangeKey=s}if(this.sChangeKey==s){D[P]=v;l=true;this.checkUpdate(false,m)}else{this.fireRejectChange({rejectedValue:v,oldValue:D[P]})}}return l};g.prototype._isHeaderPrivate=function(h){switch(h.toLowerCase()){case"accept":case"accept-language":case"maxdataserviceversion":case"dataserviceversion":return true;break;case"x-csrf-token":return this.bTokenHandling;break;default:return false}};g.prototype.setHeaders=function(h){var m={},t=this;if(h){q.each(h,function(H,s){if(t._isHeaderPrivate(H)){q.sap.log.warning("Not allowed to modify private header: "+H)}else{m[H]=s}});this.mCustomHeaders=m}else{this.mCustomHeaders={}}};g.prototype.getHeaders=function(){return q.extend({},this.mCustomHeaders,this.oHeaders)};g.prototype._getHeader=function(F,h){var H;for(H in h){if(H.toLowerCase()===F.toLowerCase()){return h[H]}}return null};g.prototype.hasPendingChanges=function(){return this.sChangeKey!=null};g.prototype.updateBindings=function(F){this.checkUpdate(F)};g.prototype.forceNoCache=function(F){this.bCache=!F};g.prototype.setTokenHandlingEnabled=function(t){this.bTokenHandling=t};g.prototype.setUseBatch=function(u){this.bUseBatch=u};g.prototype.formatValue=function(v,t){return O.formatValue(v,t)};g.prototype.deleteCreatedEntry=function(o){if(o){var p=o.getPath();delete this.mContexts[p];if(q.sap.startsWith(p,"/")){p=p.substr(1)}delete this.oRequestQueue[p];delete this.oData[p]}};g.prototype.createEntry=function(p,P){var E={},k,u,r;if(!q.sap.startsWith(p,"/")){p="/"+p}var o=this.oMetadata._getEntityTypeByPath(p);if(!o){return undefined}if(typeof P==="object"&&!q.isArray(P)){E=P}else{for(var i=0;i<o.property.length;i++){var h=o.property[i];var t=h.type.split('.');var j=q.inArray(h.name,P)>-1;if(!P||j){E[h.name]=this._createPropertyValue(t);if(j){P.splice(P.indexOf(h.name),1)}}}if(P){}}E._bCreate=true;k=p.substring(1)+"('"+q.sap.uid()+"')";this.oData[k]=E;E.__metadata={type:""+o.entityType};u=this._createRequestUrl(p);r=this._createRequest(u,"POST",true,E);r.entityTypes={};r.entityTypes[o.entityType]=true;this.oRequestQueue[k]=r;return this.getContext("/"+k)};g.prototype._createPropertyValue=function(t){var n=t[0];var T=t[1];if(n.toUpperCase()!=='EDM'){var o={};var h=this.oMetadata._getObjectMetadata("complexType",T,n);for(var i=0;i<h.property.length;i++){var p=h.property[i];var t=p.type.split('.');o[p.name]=this._createPropertyValue(t)}return o}else{return this._getDefaultPropertyValue(T,n)}};g.prototype._getDefaultPropertyValue=function(t,n){return undefined};g.prototype._normalizePath=function(p,o){if(p&&p.indexOf('?')!=-1){p=p.substr(0,p.indexOf('?'))}if(!o&&!q.sap.startsWith(p,"/")){p='/'+p;q.sap.log.warning("sPath should be absolute if no Context is set")}return this.resolve(p,o)};g.prototype.setRefreshAfterChange=function(r){this.bRefreshAfterChange=r};g.prototype.isList=function(p,o){var p=this.resolve(p,o);return p&&p.substr(p.lastIndexOf("/")).indexOf("(")===-1};g.prototype._request=function(r,s,E,h,H,m){if(this.bDestroyed){return{abort:function(){}}}var t=this;function w(i){return function(){var I=q.inArray(R,t.aPendingRequestHandles);if(I>-1){t.aPendingRequestHandles.splice(I,1)}if(!(R&&R.bSuppressErrorHandlerCall)){i.apply(this,arguments)}}}var R=OData.request(r,w(s||OData.defaultSuccess),w(E||OData.defaultError),h,H,m);if(r.async!==false){this.aPendingRequestHandles.push(R)}return R};g.prototype.destroy=function(){if(this.aPendingRequestHandles){for(var i=this.aPendingRequestHandles.length-1;i>=0;i--){var r=this.aPendingRequestHandles[i];if(r&&r.abort){r.bSuppressErrorHandlerCall=true;r.abort()}}delete this.aPendingRequestHandles}if(!!this.oMetadataLoadEvent){q.sap.clearDelayedCall(this.oMetadataLoadEvent)}if(!!this.oMetadataFailedEvent){q.sap.clearDelayedCall(this.oMetadataFailedEvent)}if(this.oMetadata){this.oMetadata.destroy();delete this.oMetadata}if(this.oAnnotations){this.oAnnotations.destroy();delete this.oAnnotations}M.prototype.destroy.apply(this,arguments)};return g},true)};if(!jQuery.sap.isDeclared('sap.ui.model.resource.ResourceModel')){jQuery.sap.declare('sap.ui.model.resource.ResourceModel');sap.ui.define("sap/ui/model/resource/ResourceModel",['jquery.sap.global','sap/ui/model/Model','./ResourcePropertyBinding'],function(q,M,R){"use strict";var a=M.extend("sap.ui.model.resource.ResourceModel",{constructor:function(d){M.apply(this,arguments);this.bAsync=!!(d&&d.async);this.sDefaultBindingMode=this.bAsync?sap.ui.model.BindingMode.OneWay:sap.ui.model.BindingMode.OneTime;this.mSupportedBindingModes={"OneWay":true,"TwoWay":false,"OneTime":true};if(this.bAsync&&this.sDefaultBindingMode==sap.ui.model.BindingMode.OneTime){q.sap.log.warning("Using binding mode OneTime for asynchronous ResourceModel is not supported!")}this.oData=d;_(this,true)},metadata:{publicMethods:["getResourceBundle"]}});a.prototype.loadResourceBundle=function(d){var c=sap.ui.getCore().getConfiguration(),r,u,l,i;l=d.bundleLocale;if(!l){l=c.getLanguage()}i=c.getOriginInfo();u=b(d.bundleUrl,d.bundleName);r=q.sap.resources({url:u,locale:l,includeInfo:i,async:!!d.async});return r};a.prototype.enhance=function(d){var t=this,r,p=this.bAsync?new Promise(function(e){r=e}):null;function c(){d.async=t.bAsync;var e=t.loadResourceBundle(d);if(e instanceof Promise){e.then(function(f){t._oResourceBundle._enhance(f);r(true)},function(){r(true)})}else if(e){t._oResourceBundle._enhance(e)}}if(this._oPromise){Promise.resolve(this._oPromise).then(c)}else{c()}return p};a.prototype.bindProperty=function(p){var B=new R(this,p);return B};a.prototype.getProperty=function(p){return this._oResourceBundle?this._oResourceBundle.getText(p):null};a.prototype.getResourceBundle=function(){if(!this.bAsync){return this._oResourceBundle}else{var p=this._oPromise;if(p){return new Promise(function(r,c){function d(B){r(B)}p.then(d,d)})}else{return Promise.resolve(this._oResourceBundle)}}};a.prototype._handleLocalizationChange=function(){_(this,false)};function _(m,t){var d=m.oData;if(d&&(d.bundleUrl||d.bundleName)){var r=m.loadResourceBundle(d);if(r instanceof Promise){var e={url:b(d.bundleUrl,d.bundleName),async:true};m.fireRequestSent(e);m._oPromise=r;m._oPromise.then(function(B){m._oResourceBundle=B;delete m._oPromise;m.checkUpdate(true);m.fireRequestCompleted(e)})}else{m._oResourceBundle=r}}else if(t){throw new Error("Neither bundleUrl nor bundleName are given. One of these is mandatory.")}};function b(c,d){var u=c;if(d){u=q.sap.getModulePath(d,'.properties')}return u};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLPropertyBinding')){jQuery.sap.declare('sap.ui.model.xml.XMLPropertyBinding');sap.ui.define("sap/ui/model/xml/XMLPropertyBinding",['jquery.sap.global','sap/ui/model/ClientPropertyBinding'],function(q,C){"use strict";var X=C.extend("sap.ui.model.xml.XMLPropertyBinding");X.prototype.setValue=function(v){if(this.oValue!=v){this.oModel.setProperty(this.sPath,v,this.oContext)}};X.prototype.checkUpdate=function(f){var v=this._getValue();if(!q.sap.equal(v,this.oValue)||f){this.oValue=v;this._fireChange({reason:sap.ui.model.ChangeReason.Change})}};return X},true)};if(!jQuery.sap.isDeclared('sap.ui.base.ManagedObject')){jQuery.sap.declare('sap.ui.base.ManagedObject');sap.ui.define("sap/ui/base/ManagedObject",['jquery.sap.global','./BindingParser','./DataType','./EventProvider','./ManagedObjectMetadata','sap/ui/model/CompositeBinding','sap/ui/model/ContextBinding','sap/ui/model/Model','sap/ui/model/Type','jquery.sap.act','jquery.sap.script','jquery.sap.strings'],function(q,B,D,E,M,C,b,c,T){"use strict";var d=E.extend("sap.ui.base.ManagedObject",{metadata:{"abstract":true,publicMethods:["getId","getMetadata","getModel","setModel","hasModel","bindProperty","unbindProperty","bindAggregation","unbindAggregation","bindObject","unbindObject","getObjectBinding"],library:"sap.ui.core",properties:{},aggregations:{},associations:{},events:{"validationSuccess":{enableEventBubbling:true},"validationError":{enableEventBubbling:true},"parseError":{enableEventBubbling:true},"formatError":{enableEventBubbling:true}}},constructor:function(i,s,S){E.apply(this);if(typeof(i)!="string"&&arguments.length>0){S=s;s=i;if(s&&s.id){i=s["id"]}else{i=null}}if(!i){i=this.getMetadata().uid()||q.sap.uid()}else{var p=d._fnIdPreprocessor;i=(p?p.call(this,i):i);var t=D.getType("sap.ui.core.ID");if(!t.isValid(i)){throw new Error("\""+i+"\" is not a valid ID.")}}this.sId=i;this.mProperties=this.getMetadata().createPropertyBag();this.mAggregations={};this.mAssociations={};this.mMethods={};this.oParent=null;this.aDelegates=[];this.aBeforeDelegates=[];this.iSuppressInvalidate=0;this.oPropagatedProperties={oModels:{},oBindingContexts:{}};this.oModels={};this.oBindingContexts={};this.mBindingInfos={};this.sBindingPath=null;this.mBindingParameters=null;this.mBoundObjects={};this._sOwnerId=d._sOwnerId;try{if(this.register)this.register();if(this._initCompositeSupport){this._initCompositeSupport(s)}if(this.init){this.init()}this.applySettings(s,S)}catch(e){if(this.deregister)this.deregister();throw e}}},M);d.create=function(v,k){if(!v||v instanceof d||typeof v!=="object"||v instanceof String){return v}function g(t){if(typeof t==="function"){return t}if(typeof t==="string"){return q.sap.getObject(t)}}var f=g(v.Type)||g(k&&k.type);if(typeof f==="function"){return new f(v)}var m="Don't know how to create a ManagedObject from "+v+" ("+(typeof v)+")";q.sap.log.fatal(m);throw new Error(m)};d._fnIdPreprocessor=null;d._fnSettingsPreprocessor=null;d.runWithPreprocessors=function(f,p){var o={id:this._fnIdPreprocessor,settings:this._fnSettingsPreprocessor};p=p||{};this._fnIdPreprocessor=p.id;this._fnSettingsPreprocessor=p.settings;try{var r=f.call();this._fnIdPreprocessor=o.id;this._fnSettingsPreprocessor=o.settings;return r}catch(e){this._fnIdPreprocessor=o.id;this._fnSettingsPreprocessor=o.settings;throw e}};d.getOwnerIdFor=function(o){return o&&o._sOwnerId};d.runWithOwner=function(f,o){var a=d._sOwnerId;try{d._sOwnerId=o.getId();var r=f.call();d._sOwnerId=a;return r}catch(e){d._sOwnerId=a;throw e}};d.prototype.applySettings=function(s,S){if(!s||q.isEmptyObject(s)){return this}var m=this.getMetadata(),v=m.getJSONKeys(),a=d.create,p=d._fnSettingsPreprocessor,k,V,K;p&&p.call(this,s);if(s.models){if(typeof s.models!=="object"){throw new Error("models must be a simple object")}if(s.models instanceof c){this.setModel(s.models)}else{for(k in s.models){this.setModel(s.models[k],k==="undefined"?undefined:k)}}delete s.models}if(s.bindingContexts){if(typeof s.bindingContexts!=="object"){throw new Error("bindingContexts must be a simple object")}if(s.bindingContexts instanceof sap.ui.model.Context){this.setBindingContext(s.bindingContexts)}else{for(k in s.bindingContexts){this.setBindingContext(s.bindingContexts[k],k==="undefined"?undefined:k)}}delete s.bindingContexts}if(s.objectBindings){if(typeof s.objectBindings!=="string"&&typeof s.objectBindings!=="object"){throw new Error("binding must be a string or simple object")}if(typeof s.objectBindings==="string"||s.objectBindings.path){this.bindObject(s.objectBindings)}else{for(var k in s.objectBindings){s.objectBindings.model=k;this.bindObject(s.objectBindings[k])}}delete s.objectBindings}for(k in s){if(K=v[k]){V=s[k];switch(K._iKind){case 0:var o=this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindProperty(k,o)}else{this[K._sMutator](o||V)}break;case 1:var o=K.altTypes&&this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindProperty(k,o)}else{this[K._sMutator](a(o||V,K))}break;case 2:var o=this.extractBindingInfo(V,S);if(o&&typeof o==="object"){this.bindAggregation(k,o)}else{V=o||V;if(V&&!q.isArray(V)){V=[V]}if(V){for(var i=0,l=V.length;i<l;i++){this[K._sMutator](a(V[i],K))}}}break;case 3:this[K._sMutator](V);break;case 4:if(V&&!q.isArray(V)){V=[V]}if(V){for(var i=0,l=V.length;i<l;i++){this[K._sMutator](V[i])}}break;case 5:if(typeof V=="function"){this[K._sMutator](V)}else{this[K._sMutator](V[0],V[1],V[2])}break;default:break}}}return this};d.prototype.toString=function(){return"ManagedObject "+this.getMetadata().getName()+"#"+this.getId()};d.prototype.getId=function(){return this.sId};d.prototype.setProperty=function(p,v,s){var o=this.mProperties[p];v=this.validateProperty(p,v);if(q.sap.equal(o,v)){return this}if(s){q.sap.act.refresh();this.iSuppressInvalidate++}this.mProperties[p]=v;if(!this.isInvalidateSuppressed()){this.invalidate()}this.updateModelProperty(p,v,o);E.prototype.fireEvent.apply(this,["_change",{"id":this.getId(),"name":p,"oldValue":o,"newValue":v}]);if(s){this.iSuppressInvalidate--}return this};d.prototype.getProperty=function(p){var v=this.mProperties[p],m=this.getMetadata(),P=m.getAllProperties()[p],t;if(!P){throw new Error("Property \""+p+"\" does not exist in "+this)}t=D.getType(P.type);if(t instanceof D&&t.isArrayType()&&q.isArray(v)){v=v.slice(0)}if(v instanceof String){v=v.valueOf()}return v};d.prototype.validateProperty=function(p,v){var m=this.getMetadata(),P=m.getAllProperties()[p],t;if(!P){throw new Error("Property \""+p+"\" does not exist in "+this)}t=D.getType(P.type);if(t instanceof D&&t.isArrayType()&&q.isArray(v)){v=v.slice(0)}if(v===null||v===undefined){if(P.defaultValue!==null){v=P.defaultValue}else{v=t.getDefaultValue()}}else if(t instanceof D){if(t.getName()=="string"){if(!(typeof v=="string"||v instanceof String)){v=""+v}}else if(t.getName()=="string[]"){if(typeof v=="string"){v=[v]}if(!q.isArray(v)){throw new Error("\""+v+"\" is of type "+typeof v+", expected string[]"+" for property \""+p+"\" of "+this)}for(var i=0;i<v.length;i++){if(!typeof v[i]=="string"){v[i]=""+v[i]}}}else if(!t.isValid(v)){throw new Error("\""+v+"\" is of type "+typeof v+", expected "+t.getName()+" for property \""+p+"\" of "+this)}}else if(!(v in t)){throw new Error("\""+v+"\" is not a valid entry of the enumeration for property \""+p+"\" of "+this)}if(t&&t.normalize&&typeof t.normalize==="function"){v=t.normalize(v)}return v};d.prototype.getOriginInfo=function(p){var v=this.mProperties[p];if(!(v instanceof String&&v.originInfo)){return null}return v.originInfo};d.prototype.setAssociation=function(a,i,s){if(i instanceof d){i=i.getId()}else if(i!=null&&typeof i!=="string"){return this}if(this.mAssociations[a]===i){return this}if(s){this.iSuppressInvalidate++}this.mAssociations[a]=i;if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.getAssociation=function(a,o){var r=this.mAssociations[a];if(!r){r=this.mAssociations[a]=o||null}else{if(typeof r.length==='number'&&!(r.propertyIsEnumerable('length'))){return r.slice()}return r}return r};d.prototype.addAssociation=function(a,i,s){if(i instanceof d){i=i.getId()}else if(typeof i!=="string"){return this}if(s){this.iSuppressInvalidate++}var I=this.mAssociations[a];if(!I){I=this.mAssociations[a]=[i]}else{I.push(i)}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.removeAssociation=function(a,o,s){var I=this.mAssociations[a];var e=null;if(s){this.iSuppressInvalidate++}if(typeof(o)=="object"&&o.getId){o=o.getId()}if(typeof(o)=="string"){for(var i=0;i<I.length;i++){if(I[i]==o){o=i;break}}}if(typeof(o)=="number"){if(o<0||o>=I.length){q.sap.log.warning("ManagedObject.removeAssociation called with invalid index: "+a+", "+o)}else{e=I[o];I.splice(o,1);if(!this.isInvalidateSuppressed()){this.invalidate()}}}if(s){this.iSuppressInvalidate--}return e};d.prototype.removeAllAssociation=function(a,s){var i=this.mAssociations[a];if(!i){return[]}if(s){this.iSuppressInvalidate++}delete this.mAssociations[a];if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return i};d.prototype.validateAggregation=function(a,o,m){var e=this.getMetadata(),A=e.getManagedAggregation(a),f,t,i,g;if(!A){if(a&&e._mHiddenAggregations&&e._mHiddenAggregations[a]){A=e._mHiddenAggregations[a];q.sap.log.error("Support for '_mHiddenAggregations' is about to be removed (with 1.12 latest). Hidden aggregations like '"+e.getName()+"."+a+"' instead can be declared like normal aggregations but with visibility:'hidden'.")}else{g="Aggregation \""+a+"\" does not exist in "+this;if(/^sap\.(ui\.core|ui\.commons|ui\.table|ui\.ux3|m|makit|viz|uiext\.inbox)$/.test(e.getLibraryName()||"")){throw new Error(g)}else{q.sap.log.error("Support for undeclared aggregations is about to be removed (with 1.12 latest). Hidden aggregations like '"+e.getName()+"."+a+"' can be declared like normal aggregations but with visibility:'hidden'.");return o}}}if(A.multiple!==m){throw new Error("Aggregation '"+a+"' of "+this+" used with wrong cardinality (declared as "+(A.multiple?"0..n":"0..1")+")")}if(!A.multiple&&!o){return o}t=q.sap.getObject(A.type);if(typeof t==="function"&&o instanceof t){return o}if(o&&o.getMetadata&&o.getMetadata().isInstanceOf(A.type)){return o}f=A.altTypes;if(f&&f.length){if(o==null){return o}for(i=0;i<f.length;i++){t=D.getType(f[i]);if(t instanceof D){if(t.isValid(o)){return o}}else if(o in t){return o}}}g="\""+o+"\" is not valid for aggregation \""+a+"\" of "+this;if(D.isInterfaceType(A.type)){return o}else{throw new Error(g)}};d.prototype.setAggregation=function(a,o,s){var O=this.mAggregations[a];if(O===o){return this}o=this.validateAggregation(a,o,false);if(s){this.iSuppressInvalidate++}if(O instanceof d){O.setParent(null)}this.mAggregations[a]=o;if(o instanceof d){o.setParent(this,a,s)}else{if(!this.isInvalidateSuppressed()){this.invalidate()}}if(s){this.iSuppressInvalidate--}return this};d.prototype.getAggregation=function(a,o){var e=this.mAggregations[a];if(!e){e=this.mAggregations[a]=o||null}if(e){if(typeof e.length==='number'&&!(e.propertyIsEnumerable('length'))){return e.slice()}return e}else{return null}};d.prototype.indexOfAggregation=function(a,o){var e=this.mAggregations[a];if(e){if(e.length==undefined){return-2}for(var i=0;i<e.length;i++){if(e[i]==o){return i}}}return-1};d.prototype.insertAggregation=function(a,o,I,s){if(!o){return this}o=this.validateAggregation(a,o,true);var e=this.mAggregations[a]||(this.mAggregations[a]=[]);var i=I<0?0:(I>e.length?e.length:I);if(i!==I){q.sap.log.warning("ManagedObject.insertAggregation: index '"+I+"' out of range [0,"+e.length+"], forced to "+i)}e.splice(i,0,o);o.setParent(this,a,s);return this};d.prototype.addAggregation=function(a,o,s){if(!o){return this}o=this.validateAggregation(a,o,true);var e=this.mAggregations[a];if(!e){e=this.mAggregations[a]=[o]}else{e.push(o)}o.setParent(this,a,s);return this};d.prototype.removeAggregation=function(a,o,s){var e=this.mAggregations[a],f=null,i;if(!e){return null}if(s){this.iSuppressInvalidate++}if(typeof(o)=="string"){for(i=0;i<e.length;i++){if(e[i]&&e[i].getId()===o){o=i;break}}}if(typeof(o)=="object"){for(i=0;i<e.length;i++){if(e[i]==o){o=i;break}}}if(typeof(o)=="number"){if(o<0||o>=e.length){q.sap.log.warning("ManagedObject.removeAggregation called with invalid index: "+a+", "+o)}else{f=e[o];e.splice(o,1);f.setParent(null);if(!this.isInvalidateSuppressed()){this.invalidate()}}}if(s){this.iSuppressInvalidate--}return f};d.prototype.removeAllAggregation=function(a,s){var e=this.mAggregations[a];if(!e){return[]}if(s){this.iSuppressInvalidate++}delete this.mAggregations[a];for(var i=0;i<e.length;i++){e[i].setParent(null)}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return e};d.prototype.destroyAggregation=function(a,s){var e=this.mAggregations[a],i,f;if(!e){return this}if(s){this.iSuppressInvalidate++}delete this.mAggregations[a];if(e instanceof d){e.destroy(s)}else if(q.isArray(e)){for(i=e.length-1;i>=0;i--){f=e[i];if(f){f.destroy(s)}}}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}return this};d.prototype.invalidate=function(){if(this.oParent){this.oParent.invalidate(this)}};d.prototype.isInvalidateSuppressed=function(){var i=this.iSuppressInvalidate>0;if(this.oParent&&this.oParent instanceof d){i=i||this.oParent.isInvalidateSuppressed()}return i};d.prototype._removeChild=function(o,a,s){if(!a){q.sap.log.error("Cannot remove aggregated child without aggregation name.",null,this)}else{if(s){this.iSuppressInvalidate++}var i=this.indexOfAggregation(a,o);var A=this.getMetadata().getJSONKeys()[a];if(i==-2){if(A&&this[A._sMutator]){this[A._sMutator](null)}else{this.setAggregation(a,null,s)}}else if(i>-1){if(A&&this[A._sRemoveMutator]){this[A._sRemoveMutator](i)}else{this.removeAggregation(a,i,s)}}else{}if(!this.isInvalidateSuppressed()){this.invalidate()}if(s){this.iSuppressInvalidate--}}};d.prototype.setParent=function(p,a,s){var t=this;if(!p){this.oParent=null;this.sParentAggregationName=null;this.oPropagatedProperties={oModels:{},oBindingContexts:{}};q.sap.act.refresh();return}if(s){q.sap.act.refresh();this.iSuppressInvalidate++}var o=this.getParent();if(o){o._removeChild(this,this.sParentAggregationName)}this.oParent=p;this.sParentAggregationName=a;this.oPropagatedProperties=p._getPropertiesToPropagate();if(this.hasModel()){this.updateBindingContext(false,true,undefined,true);this.updateBindings(true,null);this.propagateProperties(true)}if(p&&!this.isInvalidateSuppressed()){p.invalidate(this)}if(s){this.iSuppressInvalidate--}return this};d.prototype.getParent=function(){return this.oParent};d.prototype.destroy=function(s){var t=this;if(s){this.iSuppressInvalidate++}if(this.exit){this.exit()}if(this._exitCompositeSupport){this._exitCompositeSupport()}for(var a in this.mAggregations){this.destroyAggregation(a,s)}if(this.deregister)this.deregister();if(this.oParent&&this.sParentAggregationName){this.oParent._removeChild(this,this.sParentAggregationName,s)}delete this.oParent;q.each(this.mBindingInfos,function(n,o){if(o.factory){t.unbindAggregation(n,true)}else{t.unbindProperty(n,true)}});if(s){this.iSuppressInvalidate--}E.prototype.destroy.apply(this,arguments);this.setParent=function(){throw Error("The object with ID "+t.getId()+" was destroyed and cannot be used anymore.")};this.bIsDestroyed=true};d.bindingParser=B.simpleParser;d.prototype.isBinding=function(v,k){return"object"===typeof this.extractBindingInfo(v)};d.prototype.extractBindingInfo=function(v,s){if(v&&typeof v==="object"){if(v.ui5object){delete v.ui5object}else if(v.path||v.parts){if(v.template){v.template=d.create(v.template)}return v}}if(typeof v==="string"){return d.bindingParser(v,s,true)}};d.prototype.getBindingInfo=function(n){return this.mBindingInfos[n]};d.prototype.bindObject=function(p,P){var a={},o,m,s;if(typeof p=="object"){var e=p;p=e.path;P=e.parameters;m=e.model;a.events=e.events}s=p.indexOf(">");a.sBindingPath=p;a.mBindingParameters=P;if(s>0){m=p.substr(0,s);a.sBindingPath=p.substr(s+1)}o=this.mBoundObjects[m];if(o&&o.binding){o.binding.detachChange(o.fChangeHandler);o.binding.detachEvents(o.events)}this.mBoundObjects[m]=a;if(this.getModel(m)){this._bindObject(m,a)}return this};d.prototype._bindObject=function(m,o){var a,p,e,t=this;var f=function(g){t.setBindingContext(a.getBoundContext(),m)};e=this.getModel(m);if(this.oParent&&e==this.oParent.getModel(m)){p=this.oParent.getBindingContext(m)}a=e.bindContext(o.sBindingPath,p,o.mBindingParameters);a.attachChange(f);o.binding=a;o.fChangeHandler=f;a.attachEvents(o.events);a.initialize()};d.prototype.bindContext=function(p){return this.bindElement(p)};d.prototype.unbindContext=function(m){return this.unbindElement(m)};d.prototype.unbindObject=function(m){var o=this.mBoundObjects[m];if(o){if(o.binding){o.binding.detachChange(o.fChangeHandler);o.binding.detachEvents(o.events)}delete this.mBoundObjects[m];delete this.oBindingContexts[m];this.updateBindingContext(false,false,m)}return this};d.prototype.bindProperty=function(n,o){var p,f,m,s,F,t,S,a=true,e=this,g=this.getMetadata(),P=g.getAllProperties()[n],k=g.getJSONKeys()[n];if(!P&&!(k&&k.altTypes)){throw new Error("Property \""+n+"\" does not exist in "+this)}if(typeof o=="string"){p=arguments[1];f=arguments[2];m=arguments[3];if(typeof f=="function"){F=f}else if(f instanceof T){t=f}o={formatter:F,parts:[{path:p,type:t,mode:m}]}}if(!o.parts){o.parts=[];o.parts[0]={path:o.path,type:o.type,formatOptions:o.formatOptions,constraints:o.constraints,model:o.model,mode:o.mode};delete o.path;delete o.mode;delete o.model}q.each(o.parts,function(i,h){if(typeof h=="string"){h={path:h};o.parts[i]=h}S=h.path.indexOf(">");if(S>0){h.model=h.path.substr(0,S);h.path=h.path.substr(S+1)}if(o.formatter||o.parts.length>1){h.mode=sap.ui.model.BindingMode.OneWay}if(!e.getModel(h.model)){a=false}});if(this.isBound(n)){this.unbindProperty(n,true)}this.mBindingInfos[n]=o;if(a){this._bindProperty(n,o)}return this};d.prototype._bindProperty=function(n,o){var m,s,a,e,t,f,p=this.getMetadata().getJSONKeys()[n],g=this,h=[],j=function(i){g.updateProperty(n)};a=this.getBindingContext(o.model);q.each(o.parts,function(i,P){a=g.getBindingContext(P.model);m=g.getModel(P.model);t=P.type;if(typeof t=="string"){f=q.sap.getObject(t);t=new f(P.formatOptions,P.constraints)}e=m.bindProperty(P.path,a,o.parameters);e.setType(t,p.type);e.setFormatter(P.formatter);s=!P.mode?m.getDefaultBindingMode():P.mode;e.setBindingMode(s);h.push(e)});if(h.length>1||(o.formatter&&o.formatter.textFragments)){t=o.type;if(typeof t=="string"){f=q.sap.getObject(t);t=new f(o.formatOptions,o.constraints)}e=new C(h,o.useRawValues);e.setType(t,p.type);e.setBindingMode(o.mode)}else{e=h[0]}e.attachChange(j);e.setFormatter(q.proxy(o.formatter,this));o.binding=e;o.modelChangeHandler=j;e.attachEvents(o.events);e.initialize();if(e.getBindingMode()===sap.ui.model.BindingMode.OneTime){e.detachChange(j);e.detachEvents(o.events)}};d.prototype.unbindProperty=function(n,s){var o=this.mBindingInfos[n],p=this.getMetadata().getJSONKeys()[n];if(o){if(o.binding){o.binding.detachChange(o.modelChangeHandler);o.binding.detachEvents(o.events)}delete this.mBindingInfos[n];if(!s){this[p._sMutator](null)}}return this};d.prototype.updateProperty=function(n){var o=this.mBindingInfos[n],a=o.binding,p=this.getMetadata().getJSONKeys()[n];if(o.skipPropertyUpdate)return;try{var v=a.getExternalValue();o.skipModelUpdate=true;this[p._sMutator](v);o.skipModelUpdate=false}catch(e){o.skipModelUpdate=false;if(e instanceof sap.ui.model.FormatException){this.fireFormatError({element:this,property:n,type:a.getType(),newValue:a.getValue(),oldValue:this.getProperty(n),exception:e},false,true)}else{throw e}}};d.prototype.updateModelProperty=function(n,v,o){if(this.isBound(n)){var a=this.mBindingInfos[n],e=a.binding;if(a.skipModelUpdate)return;if(e&&e.getBindingMode()==sap.ui.model.BindingMode.TwoWay){try{a.skipPropertyUpdate=true;e.setExternalValue(v);a.skipPropertyUpdate=false;var f=e.getExternalValue();if(v!=f){this.updateProperty(n)}if(e.getType()){this.fireValidationSuccess({element:this,property:n,type:e.getType(),newValue:v,oldValue:o},false,true)}}catch(g){a.skipPropertyUpdate=false;if(g instanceof sap.ui.model.ParseException){this.fireParseError({element:this,property:n,type:e.getType(),newValue:v,oldValue:o,exception:g},false,true)}else if(g instanceof sap.ui.model.ValidateException){this.fireValidationError({element:this,property:n,type:e.getType(),newValue:v,oldValue:o,exception:g},false,true)}else{throw g}}}}};d.prototype.bindAggregation=function(n,o){var p,t,s,f,m=this.getMetadata(),a=m.getAllAggregations()[n];if(!a){throw new Error("Aggregation \""+n+"\" does not exist in "+this)}if(typeof o=="string"){p=arguments[1];t=arguments[2];s=arguments[3];f=arguments[4];o={path:p,sorter:s,filters:f};if(t instanceof d){o.template=t}else if(typeof t==="function"){o.factory=t}}if(this.isBound(n)){this.unbindAggregation(n,true)}if(!(o.template||o.factory)){if(a._doesNotRequireFactory){o.factory=function(){throw new Error("dummy factory called unexpectedly ")}}else{throw new Error("Missing template or factory function for aggregation "+n+" of "+this+" !")}}if(o.template){if(o.templateShareable===undefined){o.templateShareable=true}o.factory=function(i){return o.template.clone(i)}}var S=o.path.indexOf(">");if(S>0){o.model=o.path.substr(0,S);o.path=o.path.substr(S+1)}this.mBindingInfos[n]=o;if(this.getModel(o.model)){this._bindAggregation(n,o)}return this};d.prototype._bindAggregation=function(n,o){var t=this,a,m=function(g){var u="update"+n.substr(0,1).toUpperCase()+n.substr(1);if(t[u]){var s=g&&g.getParameter("reason");if(s){t[u](s)}else{t[u]()}}else{t.updateAggregation(n)}},f=function(g){var r="refresh"+n.substr(0,1).toUpperCase()+n.substr(1);if(t[r]){t[r](g.getParameter("reason"))}else{m(g)}};var e=this.getModel(o.model);if(this.isTreeBinding(n)){a=e.bindTree(o.path,this.getBindingContext(o.model),o.filters,o.parameters)}else{a=e.bindList(o.path,this.getBindingContext(o.model),o.sorter,o.filters,o.parameters)}if(this.bUseExtendedChangeDetection===true){a.enableExtendedChangeDetection()}o.binding=a;o.modelChangeHandler=m;o.modelRefreshHandler=f;a.attachChange(m);a.attachRefresh(f);a.attachEvents(o.events);a.initialize()};d.prototype.unbindAggregation=function(n,s){var o=this.mBindingInfos[n],a=this.getMetadata().getJSONKeys()[n];if(o){if(o.binding){o.binding.detachChange(o.modelChangeHandler);o.binding.detachRefresh(o.modelRefreshHandler);o.binding.detachEvents(o.events)}if(!o.templateShareable&&o.template&&o.template.destroy){o.template.destroy()}delete this.mBindingInfos[n];if(!s){this[a._sDestructor]()}}return this};d.prototype.updateAggregation=function(n){var o=this.mBindingInfos[n],a=o.binding,f=o.factory,A=this.getMetadata().getJSONKeys()[n],e,N=null,g=null,G=null,s=null,t=this;this[A._sDestructor]();if(this.isTreeBinding(n)){var i=0,u=function(h,f,a,p){q.each(h,function(I,j){var k=t.getId()+"-"+i++;e=f(k,j);e.setBindingContext(j,o.model);p[A._sMutator](e);u(a.getNodeContexts(j),f,a,e)})};u(a.getRootContexts(),f,a,this)}else{g=A._sMutator+"Group";G=a.isGrouped()&&this[g];q.each(a.getContexts(o.startIndex,o.length),function(I,h){if(G&&a.aSorters.length>0){N=a.aSorters[0].fnGroup(h);if(typeof N=="string"){N={key:N}}if(N.key!==s){var j;if(o.groupHeaderFactory){j=o.groupHeaderFactory(N)}t[g](N,j);s=N.key}}var k=t.getId()+"-"+I;e=f(k,h);e.setBindingContext(h,o.model);t[A._sMutator](e)})}};d.prototype.refreshAggregation=function(n){var o=this.mBindingInfos[n],a=o.binding;a.getContexts(o.startIndex,o.length)};d.prototype.isTreeBinding=function(n){return false};d.prototype.updateBindings=function(u,m){var t=this;function a(o){var p=o.parts,i;if(p&&p.length>1){for(i=0;i<p.length;i++){if((u||p[i].model==m)&&!o.binding.aBindings[i].updateRequired(t.getModel(p[i].model))){return true}}}else if(o.factory){return(u||o.model==m)&&!o.binding.updateRequired(t.getModel(o.model))}else{return(u||p[0].model==m)&&!o.binding.updateRequired(t.getModel(p[0].model))}return false}function e(o){var p=o.parts,i;if(p){for(i=0;i<p.length;i++){if(!t.getModel(p[i].model)){return false}}return true}else if(o.factory){return!!t.getModel(o.model)}return false}q.each(this.mBindingInfos,function(n,o){if(o.binding&&a(o)){o.binding.detachChange(o.modelChangeHandler);if(o.modelRefreshHandler){o.binding.detachRefresh(o.modelRefreshHandler)}o.binding.detachEvents(o.events);delete o.binding}if(!o.binding&&e(o)){if(o.factory){t._bindAggregation(n,o)}else{t._bindProperty(n,o)}}})};d.prototype.isBound=function(n){return(n in this.mBindingInfos)};d.prototype.getObjectBinding=function(m){return this.mBoundObjects[m]&&this.mBoundObjects[m].binding};d.prototype.getEventingParent=function(){return this.oParent};d.prototype.getBinding=function(n){return this.mBindingInfos[n]&&this.mBindingInfos[n].binding};d.prototype.getBindingPath=function(n){var i=this.mBindingInfos[n];return i&&(i.path||(i.parts&&i.parts[0]&&i.parts[0].path))};d.prototype.setBindingContext=function(o,m){var O=this.oBindingContexts[m];if(O!==o){this.oBindingContexts[m]=o;this.updateBindingContext(true,true,m);this.propagateProperties(m)}return this};d.prototype.updateBindingContext=function(s,S,m,u){var o,a={},p,e,t=this;if(u){for(m in this.oModels){if(this.oModels.hasOwnProperty(m)){a[m]=m}}for(m in this.oPropagatedProperties.oModels){if(this.oPropagatedProperties.oModels.hasOwnProperty(m)){a[m]=m}}}else{a[m]=m}for(m in a){if(a.hasOwnProperty(m)){m=m==="undefined"?undefined:m;o=this.getModel(m);e=this.mBoundObjects[m];if(o&&e&&e.sBindingPath&&!s){if(!e.binding){this._bindObject(m,e)}else{p=null;if(this.oParent&&o==this.oParent.getModel(m)){p=this.oParent.getBindingContext(m)}if(p!==e.binding.getContext()){e.binding.setContext(p)}}continue}q.each(this.mBindingInfos,function(n,g){var h=g.binding;var P=g.parts,i;if(!h){return}if(P&&P.length>1){for(i=0;i<P.length;i++){if(P[i].model==m){h.aBindings[i].setContext(t.getBindingContext(P[i].model))}}}else if(g.factory){if(g.model==m){h.setContext(t.getBindingContext(g.model))}}else{if(P[0].model==m){h.setContext(t.getBindingContext(P[0].model))}}});if(!S){var f=this.getBindingContext(m);q.each(this.mAggregations,function(n,A){if(A instanceof d){A.oPropagatedProperties.oBindingContexts[m]=f;A.updateBindingContext(false,false,m)}else if(A instanceof Array){for(var i=0;i<A.length;i++){A[i].oPropagatedProperties.oBindingContexts[m]=f;A[i].updateBindingContext(false,false,m)}}})}}}};d.prototype.getBindingContext=function(m){var o=this.getModel(m);if(this.oBindingContexts[m]){return this.oBindingContexts[m]}else if(o&&this.oParent&&this.oParent.getModel(m)&&o!=this.oParent.getModel(m)){return undefined}else{return this.oPropagatedProperties.oBindingContexts[m]}};d.prototype.setModel=function(m,n){if(!m&&this.oModels[n]){delete this.oModels[n];this.propagateProperties(n);this.updateBindings(false,n)}else if(m&&m!==this.oModels[n]){this.oModels[n]=m;this.propagateProperties(n);this.updateBindingContext(false,true,n);this.updateBindings(false,n)}else{}return this};d.prototype.propagateProperties=function(n){var p=this._getPropertiesToPropagate(),u=n===true,N=u?undefined:n,t=this;q.each(this.mAggregations,function(a,A){if(A instanceof d){t._propagateProperties(n,A,p,u,N)}else if(A instanceof Array){for(var i=0;i<A.length;i++){if(A[i]instanceof d){t._propagateProperties(n,A[i],p,u,N)}}}})};d.prototype._propagateProperties=function(n,o,p,u,N){if(!p){p=this._getPropertiesToPropagate(),u=n===true,N=u?undefined:n}o.oPropagatedProperties=p;o.updateBindings(u,N);o.updateBindingContext(false,true,N,u);o.propagateProperties(n)};d.prototype._getPropertiesToPropagate=function(){var n=q.isEmptyObject(this.oModels),N=q.isEmptyObject(this.oBindingContexts);function m(e,o,a){return e?o:q.extend({},o,a)}if(N&&n){return this.oPropagatedProperties}else{return{oModels:m(n,this.oPropagatedProperties.oModels,this.oModels),oBindingContexts:m(N,this.oPropagatedProperties.oBindingContexts,this.oBindingContexts)}}};d.prototype.getModel=function(n){return this.oModels[n]||this.oPropagatedProperties.oModels[n]};d.prototype.hasModel=function(){return!(q.isEmptyObject(this.oModels)&&q.isEmptyObject(this.oPropagatedProperties.oModels))};d.prototype.clone=function(I,l,o){var t=this,a=true,e=true;if(o){a=!!o.cloneChildren;e=!!o.cloneBindings}if(!I){I=M.uid("clone")||q.sap.uid()}if(!l&&a){l=q.map(this.findAggregatedObjects(true),function(O){return O.getId()})}var m=this.getMetadata(),f=m._oClass,s=this.getId()+"-"+I,S={},p=this.mProperties,k,g,h=d.bindingParser.escape;for(k in p){if(p.hasOwnProperty(k)&&!(this.isBound(k)&&e)){if(typeof p[k]==="string"){S[k]=h(p[k])}else{S[k]=p[k]}}}S["models"]=this.oModels;S["bindingContexts"]=this.oBindingContexts;if(a){q.each(this.mAggregations,function(n,A){if(m.hasAggregation(n)&&!(t.isBound(n)&&e)){if(A instanceof d){S[n]=A.clone(I,l)}else if(q.isArray(A)){S[n]=[];for(var i=0;i<A.length;i++){S[n].push(A[i].clone(I,l))}}else{S[n]=A}}});q.each(this.mAssociations,function(n,A){if(q.isArray(A)){A=A.slice(0);for(var i=0;i<A.length;i++){if(q.inArray(A[i],l)>=0){A[i]+="-"+I}}}else if(q.inArray(A,l)>=0){A+="-"+I}S[n]=A})}g=new f(s,S);q.each(this.mBoundObjects,function(n,i){g.mBoundObjects[n]=q.extend({},i)});q.each(this.mEventRegistry,function(n,L){g.mEventRegistry[n]=L.slice()});if(e){q.each(this.mBindingInfos,function(n,i){var j=q.extend({},i);if(!i.templateShareable&&i.template&&i.template.clone){j.template=i.template.clone(I,l);delete j.factory}delete j.binding;if(i.factory||i.template){g.bindAggregation(n,j)}else{g.bindProperty(n,j)}})}return g};d._handleLocalizationChange=function(p){var i;if(p===1){q.each(this.oModels,function(n,m){if(m&&m._handleLocalizationChange){m._handleLocalizationChange()}})}else if(p===2){q.each(this.mBindingInfos,function(n,o){var P=o.parts;if(P){for(i=0;i<P.length;i++){if(o.type&&o.type._handleLocalizationChange){o.type._handleLocalizationChange()}}if(o.modelChangeHandler){o.modelChangeHandler()}}})}};d._mapAggregation=function(p,o,n){var k=p.getMetadata().getJSONKeys();var O=k[o];var N=k[n];if(!O||!N||O._iKind!=2||N._iKind!=2){return}var f={"insert":true,"add":true,"remove":true,"removeAll":false,"indexOf":true,"destroy":false,"get":false};function m(P,g){return P+g.substring(0,1).toUpperCase()+g.substring(1)}function a(F){return function(){return this[F].apply(this,arguments)}}for(var P in f){var s=m(P,f[P]?O.singularName:O._sName);var e=m(P,f[P]?N.singularName:N._sName);p[s]=a(e)}};d.prototype.findAggregatedObjects=function(r){var A=[];function f(o){for(var n in o.mAggregations){var a=o.mAggregations[n];if(q.isArray(a)){for(var i=0;i<a.length;i++){A.push(a[i]);if(r){f(a[i])}}}else if(a instanceof d){A.push(a);if(r){f(a)}}}}f(this);return A};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Fragment')){jQuery.sap.declare('sap.ui.core.Fragment');sap.ui.define("sap/ui/core/Fragment",['jquery.sap.global','sap/ui/base/ManagedObject','./DeclarativeSupport','./XMLTemplateProcessor'],function(q,M,D,X){"use strict";var r={},t={};var F=M.extend("sap.ui.core.Fragment",{metadata:{properties:{type:"string"}},constructor:function(i,s){M.apply(this,arguments);if(this._aContent&&this._aContent.length==1){return this._aContent[0]}else{return this._aContent}}});F.registerType=function(T,f){if(!typeof(T)==="string"){q.sap.log.error("Ignoring non-string Fragment type: "+T);return}if(t[T]){q.sap.log.warning("sap.ui.core.Fragment.registerType(): Fragment type '"+T+"' is already defined. Overriding this type now!")}t[T]=f};F.prototype._initCompositeSupport=function(s){if(!s){throw new Error("Settings must be set")}if(!(s.fragmentName||s.fragmentContent)){throw new Error("Please provide a fragment name")}if(s.oController){this.oController=s.oController}this._sExplicitId=s.sId||s.id;this._sFragmentName=s.fragmentName;var f=t[s.type];if(f){f.init.apply(this,[s])}else{throw new Error("No type for the fragment has been specified: "+s.type)}};F.prototype.getController=function(){return this.oController};F.byId=function(f,i){if(!(typeof(f)==="string"&&typeof(i)==="string")){q.sap.log.error("sap.ui.core.Fragment.byId: two strings must be given as parameters, but are: "+f+" and "+i);return undefined}return sap.ui.getCore().byId(f+"--"+i)};F.createId=function(f,i){if(!(typeof(f)==="string"&&typeof(i)==="string")){q.sap.log.error("sap.ui.core.Fragment.createId: two strings must be given as parameters, but are: "+f+" and "+i);return undefined}return f+"--"+i};F.prototype.createId=function(i){var a=this._sExplicitId?this._sExplicitId+"--"+i:i;if(this._oContainingView&&this._oContainingView!=this){a=this._oContainingView.createId(a)}return a};F.prototype.isSubView=function(){return true};sap.ui.fragment=function(n,T,c){var s={};if(typeof(n)==="string"){s.fragmentName=n;s.oController=c;s.type=T}else if(typeof(n)==="object"){s=n;if(T){s.oController=T}}else{q.sap.log.error("sap.ui.fragment() must be called with Fragment name or config object as first parameter, but is: "+n)}return new F(s)};sap.ui.xmlfragment=function(i,f,c){if(typeof(i)==="string"){if(typeof(f)==="string"){return sap.ui.fragment({fragmentName:f,sId:i,type:"XML"},c)}else{return sap.ui.fragment(i,"XML",f)}}else{i.type="XML";return sap.ui.fragment(i,f)}};sap.ui.jsfragment=function(n,f){if(typeof(n)==="string"&&typeof(f)==="object"){if(f.createContent){r[n]=f;q.sap.declare({modName:n,type:"fragment"},false)}else{return sap.ui.fragment(n,"JS",f)}}else if(typeof(n)==="string"&&f===undefined){return sap.ui.fragment(n,"JS")}else{if(typeof(n)==="object"){n.type="JS";return sap.ui.fragment(n,f)}else if(arguments&&arguments.length>=3){return sap.ui.fragment({id:n,fragmentName:f,type:"JS"},arguments[2])}else{q.sap.log.error("sap.ui.jsfragment() was called with wrong parameter set: "+n+" + "+f)}}};sap.ui.htmlfragment=function(i,f,c){if(typeof(i)==="string"){if(typeof(f)==="string"){return sap.ui.fragment({fragmentName:f,sId:i,type:"HTML"},c)}else{return sap.ui.fragment(i,"HTML",f)}}else{i.type="HTML";return sap.ui.fragment(i,f)}};F.registerType("XML",{init:function(s){this._xContent=s.fragmentContent?((typeof(s.fragmentContent)==="string")?q.parseXML(s.fragmentContent).documentElement:s.fragmentContent):X.loadTemplate(s.fragmentName,"fragment");this._oContainingView=this._sExplicitId?this:(s.containingView||this);if((this._oContainingView===this)){this._oContainingView.oController=(s.containingView&&s.containingView.oController)||s.oController}var a=this;M.runWithPreprocessors(function(){var x=a._xContent;a._aContent=X.parseTemplate(a._xContent,a)})}});F.registerType("JS",{init:function(s){if(!r[s.fragmentName]){q.sap.require({modName:s.fragmentName,type:"fragment"})}q.extend(this,r[s.fragmentName]);this._oContainingView=s.containingView||this;var a=this;M.runWithPreprocessors(function(){var c=a.createContent(s.oController||a._oContainingView.oController);a._aContent=[];a._aContent=a._aContent.concat(c)})}});(function(){var _={};var a=function(T){var u=q.sap.getModulePath(T,".fragment.html");var h=_[u];var R;if(!h){R=q.sap.getResourceName(T,".fragment.html");h=q.sap.loadResource(R);_[u]=h}return h};F.registerType("HTML",{init:function(s){this._aContent=[];this.getContent=function(){return this._aContent};this.addContent=function(C){this._aContent.push(C)};this._oContainingView=s.containingView||this;var h=s.fragmentContent||a(s.fragmentName);this._oTemplate=document.createElement("div");var H=sap.ui.core.RenderManager.prepareHTML5(h);if(typeof H==="string"){this._oTemplate.innerHTML=H}else{var n=H;var f=document.createDocumentFragment();for(var i=0;i<n.length;i++){f.appendChild(n.item(i))}this._oTemplate.appendChild(f)}var m=this._oTemplate.getElementsByTagName("template")[0];var p=this.getMetadata().getAllProperties();if(m){var b=this;var c=D;q.each(m.attributes,function(I,A){var N=c.convertAttributeToSettingName(A.name,b.getId());var v=A.value;var P=p[N];if(!s[N]){if(P){s[N]=c.convertValueToType(c.getPropertyDataType(P),v)}else if(sap.ui.core.mvc.HTMLView._mAllowedSettings[N]){s[N]=v}}});this._oTemplate=m}if(this._oTemplate.content){var f=this._oTemplate.content;this._oTemplate=document.createElement("div");this._oTemplate.appendChild(f)}var b=this;M.runWithPreprocessors(function(){D.compile(b._oTemplate,b);var d=b.getContent();if(d&&d.length===1){b._aContent=[d[0]]}else{}})}})}());return F},true)};if(!jQuery.sap.isDeclared('sap.ui.core.routing.Router')){jQuery.sap.declare('sap.ui.core.routing.Router');jQuery.sap.require('sap.ui.thirdparty.crossroads');jQuery.sap.require('sap.ui.thirdparty.signals');sap.ui.define("sap/ui/core/routing/Router",['jquery.sap.global','sap/ui/base/EventProvider','sap/ui/base/ManagedObject','./HashChanger','./Route','sap/ui/thirdparty/crossroads','sap/ui/thirdparty/signals'],function(q,E,M,H,R,c,s){"use strict";var r={};var a=E.extend("sap.ui.core.routing.Router",{constructor:function(o,C,O){E.apply(this);this._oConfig=C;this._oRouter=crossroads.create();this._oRouter.ignoreState=true;this._oRoutes={};this._oViews={};this._oOwner=O;var t=this;if(!o){o={}}if(q.isArray(o)){var b=o;o={};q.each(b,function(i,d){o[d.name]=d})}q.each(o,function(d,e){if(e.name==undefined){e.name=d}t.addRoute(e)})},metadata:{publicMethods:["initialize","getURL","register"]}});a.M_EVENTS={RouteMatched:"routeMatched",RoutePatternMatched:"routePatternMatched",ViewCreated:"viewCreated"};a.prototype.addRoute=function(C,p){if(!C.name){q.sap.log.error("A name has to be specified for every route")}if(this._oRoutes[C.name]){q.sap.log.error("Route with name "+C.name+" already exists")}this._oRoutes[C.name]=new R(this,C,p)};a.prototype.parse=function(n,o){this._oRouter.parse(n)};a.prototype.initialize=function(){var t=this,h=this.oHashChanger=H.getInstance();if(this._bIsInitialized){q.sap.log.warning("Router is already initialized.");return this}this._bIsInitialized=true;this.fnHashChanged=function(e){t.parse(e.getParameter("newHash"),e.getParameter("oldHash"))};h.attachEvent("hashChanged",this.fnHashChanged);if(!h.init()){this.parse(h.getHash())}return this};a.prototype.stop=function(){if(!this._bIsInitialized){q.sap.log.warning("Router is not initialized. But it got stopped")}if(this.fnHashChanged){this.oHashChanger.detachEvent("hashChanged",this.fnHashChanged)}this._bIsInitialized=false;return this};a.prototype.destroy=function(){E.prototype.destroy.apply(this);if(!this._bIsInitialized){q.sap.log.info("Router is not initialized, but got destroyed.")}if(this.fnHashChanged){this.oHashChanger.detachEvent("hashChanged",this.fnHashChanged)}this._oOwner=null;this._oRouter.removeAllRoutes();this._oRouter=null;return this};a.prototype.getURL=function(n,p){if(p===undefined){p={}}var o=this._oRoutes[n];if(!o){q.sap.log.warning("Route with name "+n+" does not exist");return}return o.getURL(p)};a.prototype.getView=function(v,V,b){if(!v){q.sap.log.error("A name for the view has to be defined")}if(!this._oViews[v]){var C=function(){var o={type:V,viewName:v};if(b){o.id=b}return sap.ui.view(o)};if(this._oOwner){var t=this;M.runWithOwner(function(){t._oViews[v]=C()},this._oOwner)}else{this._oViews[v]=C()}this.fireViewCreated({view:this._oViews[v],viewName:v,type:V})}return this._oViews[v]};a.prototype.setView=function(v,V){if(!v){q.sap.log.error("A name for the view has to be defined")}this._oViews[v]=V};a.prototype.navTo=function(n,p,b){if(b){this.oHashChanger.replaceHash(this.getURL(n,p))}else{this.oHashChanger.setHash(this.getURL(n,p))}};a.prototype.attachRouteMatched=function(d,f,l){this.attachEvent("routeMatched",d,f,l);return this};a.prototype.detachRouteMatched=function(f,l){this.detachEvent("routeMatched",f,l);return this};a.prototype.fireRouteMatched=function(A){this.fireEvent("routeMatched",A);return this};a.prototype.attachViewCreated=function(d,f,l){this.attachEvent("viewCreated",d,f,l);return this};a.prototype.detachViewCreated=function(f,l){this.detachEvent("viewCreated",f,l);return this};a.prototype.fireViewCreated=function(A){this.fireEvent("viewCreated",A);return this};a.prototype.attachRoutePatternMatched=function(d,f,l){this.attachEvent("routePatternMatched",d,f,l);return this};a.prototype.detachRoutePatternMatched=function(f,l){this.detachEvent("routePatternMatched",f,l);return this};a.prototype.fireRoutePatternMatched=function(A){this.fireEvent("routePatternMatched",A);return this};a.prototype.register=function(n){r[n]=this;return this};a.getRouter=function(n){return r[n]};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.Template')){jQuery.sap.declare('sap.ui.core.tmpl.Template');sap.ui.define("sap/ui/core/tmpl/Template",['jquery.sap.global','sap/ui/base/ManagedObject'],function(q,M){"use strict";var T=M.extend("sap.ui.core.tmpl.Template",{constructor:function(i,s){M.apply(this,arguments)},metadata:{stereotype:"template","abstract":true,properties:{"content":{type:"string",group:"Data",defaultValue:null}},publicMethods:["declareControl","createControl","placeAt","createMetadata","createRenderer"],library:"sap.ui.core"}});T.prototype.getInterface=function(){return this};T._mSupportedTypes={};T.registerType=function(t,c){T._mSupportedTypes[t]=c};T.unregisterType=function(t){delete T._mSupportedTypes[t]};T.parsePath=function(p){var m=undefined,s=p.indexOf(">");if(s>0){m=p.substr(0,s);p=p.substr(s+1)}return{path:p,model:m}};T.prototype.init=function(s,S){if(this.getMetadata().getName()==="sap.ui.core.tmpl.Template"){throw new Error("The class 'sap.ui.core.tmpl.Template' is abstract and must not be instantiated!")}if(M.bindingParser===sap.ui.base.BindingParser.complexParser){T.prototype.extractBindingInfo=function(v,i,S){M.bindingParser=sap.ui.base.BindingParser.simpleParser;var r=sap.ui.core.Control.prototype.extractBindingInfo.apply(this,arguments);M.bindingParser=sap.ui.base.BindingParser.complexParser;return r}}};T.prototype.declareControl=function(c){if(c){var m=this.createMetadata(),r=this.createRenderer(),t=this;q.sap.require("sap.ui.core.tmpl.TemplateControl");sap.ui.core.tmpl.TemplateControl.extend(c,{metadata:m,init:function(){sap.ui.core.tmpl.TemplateControl.prototype.init.apply(this,arguments);this.setTemplate(t)},renderer:{renderTemplate:r,hasControlData:m._hasControlData}});return q.sap.getObject(c)}};T.prototype.createControl=function(i,c,v){q.sap.require("sap.ui.core.tmpl.TemplateControl");var C=new sap.ui.core.tmpl.TemplateControl({id:i,template:this,context:c});C.setTemplateRenderer(this.createRenderer(v));return C};T.prototype.placeAt=function(r,c,p,i){if(typeof c==="string"||typeof c==="number"){p=c;c=undefined}var I;if(!(r instanceof sap.ui.core.Control)&&i){var $=typeof r==="string"?q.sap.byId(r):q(r);if($.length>0){I=$.attr("id");r=$.get(0);var C=$.attr("data-context");c=c||C&&q.parseJSON(C);sap.ui.core.RenderManager.markInlineTemplate($)}}var o=this.createControl(I,c);o.placeAt(r,p);return o};T.prototype.createMetadata=function(){q.sap.log.error("The function createMetadata is an abstract function which needs to be implemented by subclasses.")};T.prototype.createRenderer=function(){q.sap.log.error("The function createRenderer is an abstract function which needs to be implemented by subclasses.")};sap.ui.template=function(t){if(!t){var a=[];q.each(T._mSupportedTypes,function(s,j){q("script[type='"+s+"'], [data-type='"+s+"']").each(function(m,E){a.push(sap.ui.template({id:E.id,domref:E,type:s,_class:j}))})});return a}else{if(typeof t==="string"){return sap.ui.template({id:t})}else if(t&&t.tagName&&t.nodeName&&t.ownerDocument&&t.nodeType===1){return sap.ui.template({id:t.id,domref:t})}t=q.extend({type:T.DEFAULT_TEMPLATE},t);var i,s,c,C,r,b=false,l=typeof t.src==="string";if(l){var R=q.sap.sjax({url:t.src,dataType:"text"});if(R.success){i=t.id,s=t.type,c=t.control,C=R.data;var d=/^<!--\sUI5:Template\stype=([a-z\/\-]*)\s(?:controller=([A-Za-z.]*)\s)?-->/,e=C.match(d);if(e){s=e[1];if(e.length==3){b=e[2]}C=C.substr(e[0].length)}}else{throw new Error("The template could not be loaded from "+t.src+"!")}}else{var E=t.domref||q.sap.domById(t.id),$=q(E),I=false;i=t.id||E&&E.id;s=$.attr("type")||t.type,c=$.attr("data-control")||t.control;if(i){var f=sap.ui.getCore().getTemplate(i);if(!f instanceof T){throw new Error("Object for id \""+i+"\" is no sap.ui.core.tmpl.Template!")}else{if(f){return f}}}if($.length===0){throw new Error("DOM element for the Template with the id \""+i+"\" not found!")}C=$.html();var g=/path="(\w|\/|&gt;)+"/i;if(g.test(C)){C=C.replace("&gt;",">")}var h=E.tagName.toLowerCase();if(h!=="script"){I=$.parents("body").length===1}}var j=t._class;if(!j){j=T._mSupportedTypes[s];if(!j){throw new Error("The type \""+s+"\" is not supported.")}}q.sap.require(j);var o=q.sap.getObject(j);var k=new o({id:i,content:C});if(c){k.declareControl(c)}if(b){k._sControllerName=b}if(I){k.placeAt(i,t.context,undefined,true)}return k}};T.DEFAULT_TEMPLATE="text/x-handlebars-template";T.registerType(T.DEFAULT_TEMPLATE,"sap.ui.core.tmpl.HandlebarsTemplate");return T},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportType')){jQuery.sap.declare('sap.ui.core.util.ExportType');sap.ui.define("sap/ui/core/util/ExportType",['jquery.sap.global','sap/ui/base/ManagedObject'],function(q,M){'use strict';var E=M.extend('sap.ui.core.util.ExportType',{metadata:{properties:{fileExtension:'string',mimeType:'string',charset:'string'}}});E.prototype.init=function(){this._oExport=null};E.prototype._generate=function(e){this._oExport=e;var c=this.generate();this._oExport=null;return c};E.prototype.generate=function(){return''};E.prototype.getColumnCount=function(){if(this._oExport){return this._oExport.getColumns().length}return 0};E.prototype.getRowCount=function(){if(this._oExport&&this._oExport.getBinding("rows")){return this._oExport.getBinding("rows").getLength()}return 0};E.prototype.columnGenerator=function(){var i=0,c=this._oExport.getColumns(),C=c.length;return{next:function(){if(i<C){var I=i;i++;return{value:{index:I,name:c[I].getName()},done:false}}else{return{value:undefined,done:true}}}}};E.prototype.cellGenerator=function(){var i=0,r=this._oExport.getAggregation('_template'),c=r.getCells(),C=c.length;return{next:function(){if(i<C){var I=i;i++;var m={};q.each(c[I].getCustomData(),function(){m[this.getKey()]=this.getValue()});return{value:{index:I,content:c[I].getContent(),customData:m},done:false}}else{return{value:undefined,done:true}}}}};E.prototype.rowGenerator=function(){var t=this,i=0,e=this._oExport,b=e.getBinding("rows"),B=e.getBindingInfo("rows"),c=b.getContexts(0,b.getLength()),C=c.length,r=e.getAggregation('_template');return{next:function(){if(i<C){var I=i;i++;r.setBindingContext(c[I],B.model);return{value:{index:I,cells:t.cellGenerator()},done:false}}else{return{value:undefined,done:true}}}}};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportTypeCSV')){jQuery.sap.declare('sap.ui.core.util.ExportTypeCSV');sap.ui.define("sap/ui/core/util/ExportTypeCSV",['jquery.sap.global','./ExportType'],function(q,E){'use strict';var C=E.extend('sap.ui.core.util.ExportTypeCSV',{metadata:{properties:{separatorChar:{type:'string',defaultValue:','}}}});C.prototype.setSeparatorChar=function(s){var s=this.validateProperty('separatorChar',s);if(s.length>1){throw new Error("Value of property \"separatorChar\" needs to be exactly one character or empty. "+"\""+s+"\" is "+s.length+" characters long.")}return this.setProperty('separatorChar',s)};C.prototype.init=function(){this.setProperty('fileExtension','csv',true);this.setProperty('mimeType','text/csv',true);this.setProperty('charset','utf-8',true)};C.prototype.escapeContent=function(v){if(v&&(v.indexOf(this.getSeparatorChar())>-1||v.indexOf('\r\n')>-1)){v=v.replace(/"/g,'""');v='"'+v+'"'}return v};C.prototype.generate=function(){var b=[];this.generateColumns(b);this.generateRows(b);return b.join('\r\n')};C.prototype.generateColumns=function(b){var c=[],o=this.columnGenerator(),a;while(!(a=o.next()).done){c.push(this.escapeContent(a.value.name))}b.push(c.join(this.getSeparatorChar()))};C.prototype.generateRows=function(b){var r=this.rowGenerator(),R;while(!(R=r.next()).done){var a=[];var c=R.value.cells,o;while(!(o=c.next()).done){a.push(this.escapeContent(o.value.content))}b.push(a.join(this.getSeparatorChar()))}};return C},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.MockServer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.util.MockServer');jQuery.sap.require('sap.ui.thirdparty.sinon');sap.ui.define("sap/ui/core/util/MockServer",['jquery.sap.global','sap/ui/Device','sap/ui/base/ManagedObject','sap/ui/thirdparty/sinon'],function(q,D,M,d){"use strict";if(!!D.browser.internet_explorer){q.sap.require("sap.ui.thirdparty.sinon-ie")}var f=M.extend("sap.ui.core.util.MockServer",{constructor:function(i,s,S){M.apply(this,arguments);f._aServers.push(this)},metadata:{properties:{rootUri:"string",requests:{type:"object[]",defaultValue:[]}}},_oServer:null,_aFilter:null,_oMockdata:null,_oMetadata:null,_sMetadataUrl:null,_sMockdataBaseUrl:null,_mEntitySets:null});f.prototype.start=function(){this._oServer=f._getInstance();this._aFilters=[];var r=this.getRequests();var l=r.length;for(var i=0;i<l;i++){var R=r[i];this._addRequestHandler(R.method,R.path,R.response)}};f.prototype.stop=function(){if(this.isStarted()){this._removeAllRequestHandlers();this._removeAllFilters();this._oServer=null}};f.prototype.isStarted=function(){return!!this._oServer};f.prototype._applyQueryOnCollection=function(F,Q,e){var a=Q.split('=');var o=a[1];if(o==="")return;if(o.lastIndexOf(',')===o.length){q.sap.log.error("The URI is violating the construction rules defined in the Data Services specification!");throw new Error("400")}switch(a[0]){case"$top":if(!(new RegExp(/^\d+$/).test(o))){q.sap.log.error("Invalid system query options value!");throw new Error("400")}F.results=F.results.slice(0,o);break;case"$skip":if(!(new RegExp(/^\d+$/).test(o))){q.sap.log.error("Invalid system query options value!");throw new Error("400")}F.results=F.results.slice(o,F.results.length);break;case"$orderby":F.results=this._getOdataQueryOrderby(F.results,o);break;case"$filter":F.results=this._recursiveOdataQueryFilter(F.results,o);break;case"$select":F.results=this._getOdataQuerySelect(F.results,o);break;case"$inlinecount":var c=this._getOdataInlineCount(F.results,o);if(c){F.__count=c}break;case"$expand":F.results=this._getOdataQueryExpand(F.results,o,e);break;case"$format":F.results=this._getOdataQueryFormat(F.results,o);break;default:q.sap.log.error("Invalid system query options value!");throw new Error("400")}};f.prototype._applyQueryOnEntry=function(e,Q,E){var a=Q.split('=');var o=a[1];if(o==="")return;if(o.lastIndexOf(',')===o.length){q.sap.log.error("The URI is violating the construction rules defined in the Data Services specification!");throw new Error("400")}switch(a[0]){case"$filter":return this._recursiveOdataQueryFilter([e],o)[0];case"$select":return this._getOdataQuerySelect([e],o)[0];case"$expand":return this._getOdataQueryExpand([e],o,E)[0];case"$format":return this._getOdataQueryFormat([e],o);default:q.sap.log.error("Invalid system query options value!");throw new Error("400")}};f.prototype._getOdataQueryOrderby=function(c,o){var p=o.split(',');var t=this;q.each(p,function(i,P){p[i]=t._trim(P)});var C=function compare(a,b){for(var i=0;i<p.length;i++){var s=p[i].split(' ');var S=1;if(s.length>1){switch(s[1]){case'asc':S=1;break;case'desc':S=-1;break;default:q.sap.log.error("Invalid sortorder '"+s[1]+"' detected!");throw new Error("400")}}var P,e;var h=s[0].indexOf("/");if(h!==-1){P=s[0].substring(h+1);e=s[0].substring(0,h);if(!a[e].hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found!");throw new Error("400")}if(a[e][P]<b[e][P])return-1*S;if(a[e][P]>b[e][P])return 1*S}else{P=s[0];if(!a.hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found!");throw new Error("400")}if(a[P]<b[P])return-1*S;if(a[P]>b[P])return 1*S}}return 0};return c.sort(C)};f.prototype._arrayUnique=function(b){var a=b.concat();for(var i=0;i<a.length;++i){for(var j=i+1;j<a.length;++j){if(a[i]===a[j])a.splice(j--,1)}}return a};f.prototype._getBracketIndices=function(s){var S=[];var r=false;var i,e=0;for(var c=0;c<s.length;c++){if(s[c]==='('){if(/[substringof|endswith|startswith]$/.test(s.substring(0,c))){r=true}else{S.push(s[c]);if(i===undefined){i=c}}}else if(s[c]===')'){if(!r){S.pop();e=c;if(S.length===0)return{start:i,end:e}}else{r=false}}}return{start:i,end:e}};f.prototype._recursiveOdataQueryFilter=function(a,o){var I=this._getBracketIndices(o);if(I.start===0&&I.end===o.length-1){o=this._trim(o.substring(I.start+1,I.end));return this._recursiveOdataQueryFilter(a,o)}var r=/([^substringof|endswith|startswith]|^)\((.*)\)/;if(r.test(o)){var b=o.substring(I.start,I.end+1);var c=new RegExp("(.*) +(or|and) +("+this._trim(this._escapeStringForRegExp(b))+".*)");if(I.start===0){c=new RegExp("("+this._trim(this._escapeStringForRegExp(b))+") +(or|and) +(.*)")}var e=c.exec(o);var E=e[1];var O=e[2];var s=e[3];var S=this._recursiveOdataQueryFilter(a,E);var h,p;if(O==="or"){h=this._recursiveOdataQueryFilter(a,s);return this._arrayUnique(S.concat(h))}if(O==="and"){return this._recursiveOdataQueryFilter(S,s)}}else{p=o.split(/ +and | or +/);if(p.length===1){if(o.match(/ +and | or +/)){throw new Error("400")}return this._getOdataQueryFilter(a,this._trim(o))}var R=this._recursiveOdataQueryFilter(a,p[0]);var j;for(var i=1;i<p.length;i++){j=new RegExp(this._trim(this._escapeStringForRegExp(p[i-1]))+" +(and|or) +"+this._trim(this._escapeStringForRegExp(p[i])));O=j.exec(o)[1];if(O==="or"){h=this._recursiveOdataQueryFilter(a,p[i]);R=this._arrayUnique(R.concat(h))}if(O==="and"){R=this._recursiveOdataQueryFilter(R,p[i])}}return R}};f.prototype._getOdataQueryFilter=function(a,o){if(a.length===0)return a;var r=new RegExp("(.*) (eq|ne|gt|lt|le|ge) (.*)");var b=new RegExp("(endswith|startswith|substringof)\\((.*)");var O=null;var c=r.exec(o);if(c){O=c[2]}else{c=b.exec(o);if(c){O=c[1]}else{throw new Error("400")}}var t=this;var G=function(v,V,p,s){var c,e;if(!v){c=r.exec(o);e=t._trim(c[V+1]);var P=t._trim(c[p+1])}else{var h=new RegExp("(substringof|startswith|endswith)\\(([^,\\)]*),(.*)\\)");c=h.exec(o);e=t._trim(c[V+2]);P=t._trim(c[p+2])}if(e.indexOf("datetime")===0){e=t._getJsonDate(e)}else if(e==="true"){e=true}else if(e==="false"){e=false}else if(t._isValidNumber(e)){e=parseFloat(e)}else if((e.charAt(0)==="'")&&(e.charAt(e.length-1)==="'")){e=e.substr(1,e.length-2)}var C=P.indexOf("/");if(C!==-1){var i=P.substring(C+1);var j=P.substring(0,C);if(!a[0][j].hasOwnProperty(i)){q.sap.log.error("Property "+i+" not found!");throw new Error("400")}return s(P,e,j,i)}else{if(!a[0].hasOwnProperty(P)){q.sap.log.error("Property "+P+" not found for "+a[0].__metadata.type+"!");throw new Error("400")}return s(P,e)}};switch(O){case"substringof":return G(true,0,1,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)!==-1)}return(m[p].indexOf(v)!==-1)})});case"startswith":return G(true,1,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)===0)}return(m[p].indexOf(v)===0)})});case"endswith":return G(true,1,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P].indexOf(v)===(m[C][P].length-v.length))}return(m[p].indexOf(v)===(m[p].length-v.length))})});case"eq":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]===v)}return(m[p]===v)})});case"ne":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]!==v)}return(m[p]!==v)})});case"gt":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]>v)}return(m[p]>v)})});case"lt":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]<v)}return(m[p]<v)})});case"ge":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]>=v)}return(m[p]>=v)})});case"le":return G(false,2,0,function(p,v,C,P){return q.grep(a,function(m){if(C&&P){return(m[C][P]<=v)}return(m[p]<=v)})});default:q.sap.log.error("Invalid $filter operator '"+O+"'!");throw new Error("400")}};f.prototype._getOdataQuerySelect=function(a,o){var t=this;var p,c;var P=o.split(',');var s=[];var b;var C=function(P,e,b){if(e["__metadata"]){b["__metadata"]=e["__metadata"]}q.each(P,function(i,h){var j=h.indexOf("/");if(j!==-1){p=h.substring(j+1);c=h.substring(0,j);if(!b[c]){b[c]={}}b[c]=C([p],e[c],b[c])}else{if(e&&!e.hasOwnProperty(h)){q.sap.log.error("Resource not found for the selection clause '"+h+"'!");throw new Error("404")}b[h]=e[h]}});return b};if(q.inArray("*",P)!==-1){return a}q.each(P,function(i,e){P[i]=t._trim(e)});q.each(a,function(i,e){b={};s.push(C(P,e,b))});return s};f.prototype._getOdataInlineCount=function(a,o){var p=o.split(',');if(p.length!==1||(p[0]!=='none'&&p[0]!=='allpages')){q.sap.log.error("Invalid system query options value!");throw new Error("400")}if(p[0]==='none'){return}return a.length};f.prototype._getOdataQueryFormat=function(a,o){if(o!=='json'){q.sap.log.error("Unsupported format value. Only json format is supported!");throw new Error("400")}return a};f.prototype._getOdataQueryExpand=function(a,o,e){var t=this;var n=o.split(',');q.each(n,function(i,p){n[i]=t._trim(p)});var E=t._mEntitySets[e].navprops;q.each(a,function(i,r){q.each(n,function(i,N){var b=N.split("/");var s=b[0];if(!r[s]){throw new Error("404")}var c=r[s].results||r[s];if(!c||!!c.__deferred){c=q.extend(true,[],t._resolveNavigation(e,r,s))}if(!!c&&b.length>1){var R=b.splice(1,b.length).join("/");c=t._getOdataQueryExpand(c,R,E[s].to.entitySet)}if(E[s].to.multiplicity==="*"){r[s]={results:c}}else{r[s]=c[0]?c[0]:{}}})});return a};f.prototype._refreshData=function(){this._loadMetadata(this._sMetadataUrl);this._mEntitySets=this._findEntitySets(this._oMetadata);if(!this._sMockdataBaseUrl){this._generateMockdata(this._mEntitySets,this._oMetadata)}else{if(!q.sap.endsWith(this._sMockdataBaseUrl,"/")&&!q.sap.endsWith(this._sMockdataBaseUrl,".json")){this._sMockdataBaseUrl+="/"}this._loadMockdata(this._mEntitySets,this._sMockdataBaseUrl)}};f.prototype._getRootUri=function(){var u=this.getRootUri();u=u&&/([^?#]*)([?#].*)?/.exec(u)[1];return u};f.prototype._loadMetadata=function(m){var o=q.sap.sjax({url:m,dataType:"xml"}).data;this._oMetadata=o;return o};f.prototype._findEntitySets=function(m){var e={};var p=q(m).find("Principal");var o=q(m).find("Dependent");q(m).find("EntitySet").each(function(i,E){var $=q(E);var a=/((.*)\.)?(.*)/.exec($.attr("EntityType"));e[$.attr("Name")]={"name":$.attr("Name"),"schema":a[2],"type":a[3],"keys":[],"keysType":{},"navprops":{}}});var r=function(R,F){var a=q(m).find("End[Role="+R+"]");var E;var s;q.each(a,function(i,v){if(!!q(v).attr("EntitySet")){E=q(v).attr("EntitySet")}else{s=q(v).attr("Multiplicity")}});var P=[];var b=(F)?p:o;q(b).each(function(i,c){if(R===(q(c).attr("Role"))){q(c).children("PropertyRef").each(function(i,h){P.push(q(h).attr("Name"))});return false}});return{"role":R,"entitySet":E,"propRef":P,"multiplicity":s}};q.each(e,function(E,a){var $=q(m).find("EntityType[Name="+a.type+"]");var k=q($).find("PropertyRef");q.each(k,function(i,P){var K=q(P).attr("Name");a.keys.push(K);a.keysType[K]=q($).find("Property[Name="+K+"]").attr("Type")});var n=q(m).find("EntityType[Name="+a.type+"] NavigationProperty");q.each(n,function(i,N){var b=q(N);a.navprops[b.attr("Name")]={"name":b.attr("Name"),"from":r(b.attr("FromRole"),true),"to":r(b.attr("ToRole"),false)}})});return e};f.prototype._findEntityTypes=function(m){var e={};q(m).find("EntityType").each(function(i,E){var $=q(E);e[$.attr("Name")]={"name":$.attr("Name"),"properties":[],"keys":[]};$.find("Property").each(function(i,p){var P=q(p);var t=P.attr("Type");e[$.attr("Name")].properties.push({"schema":t.substring(0,t.lastIndexOf(".")),"type":t.substring(t.lastIndexOf(".")+1),"name":P.attr("Name"),"precision":P.attr("Precision"),"scale":P.attr("Scale")})});$.find("PropertyRef").each(function(i,k){var K=q(k);var p=K.attr("Name");e[$.attr("Name")].keys.push(p)})});return e};f.prototype._findComplexTypes=function(m){var c={};q(m).find("ComplexType").each(function(i,C){var $=q(C);c[$.attr("Name")]={"name":$.attr("Name"),"properties":[]};$.find("Property").each(function(i,p){var P=q(p);var t=P.attr("Type");c[$.attr("Name")].properties.push({"schema":t.substring(0,t.lastIndexOf(".")),"type":t.substring(t.lastIndexOf(".")+1),"name":P.attr("Name"),"precision":P.attr("Precision"),"scale":P.attr("Scale")})})});return c};f.prototype._createKeysString=function(e,E){var t=this;var k="";if(E){q.each(e.keys,function(i,K){if(k){k+=","}var o=E[K];if(e.keysType[K]==="Edm.String"){o="'"+o+"'"}else if(e.keysType[K]==="Edm.DateTime"){o=t._getDateTime(o)}else if(e.keysType[K]==="Edm.Guid"){o="guid'"+o+"'"}if(e.keys.length===1){k+=o;return k}k+=K+"="+o})}return k};f.prototype._loadMockdata=function(e,b){var t=this,E={};this._oMockdata={};if(q.sap.endsWith(b,".json")){var r=q.sap.sjax({url:b,dataType:"json"});if(r.success){E=r.data}else{q.sap.log.error("The mockdata for all the entity types could not be found at \""+b+"\"!")}}else{q.each(e,function(s,o){if(!E[o.type]){var a=b+o.type+".json";var r=q.sap.sjax({url:a,dataType:"json"});if(r.success){if(!!r.data.d){if(!!r.data.d.results){E[o.type]=r.data.d.results}else{q.sap.log.error("The mockdata format for entity type \""+o.type+"\" invalid")}}else{E[o.type]=r.data}}else{if(r.status==="parsererror"){q.sap.log.error("The mockdata for entity type \""+o.type+"\" could not be loaded due to a parsing error!")}else{q.sap.log.error("The mockdata for entity type \""+o.type+"\" could not be found at \""+b+"\"!");if(!!t._bGenerateMissingMockData){var m={};m[o.name]=o;E[o.type]=t._generateODataMockdataForEntitySet(m,t._oMetadata)[o.name]}}}}})}q.each(e,function(s,o){t._oMockdata[s]=[];if(E[o.type]){q.each(E[o.type],function(i,a){t._oMockdata[s].push(q.extend(true,{},a))})}if(t._oMockdata[s].length>0){t._enhanceWithMetadata(o,t._oMockdata[s])}});return this._oMockdata};f.prototype._enhanceWithMetadata=function(e,m){if(m){var t=this,r=this._getRootUri(),E=e&&e.name;q.each(m,function(i,o){o.__metadata={id:r+E+"("+t._createKeysString(e,o)+")",type:e.schema+"."+e.type,uri:r+E+"("+t._createKeysString(e,o)+")"};q.each(e.navprops,function(k,n){o[k]={__deferred:{uri:r+E+"("+t._createKeysString(e,o)+")/"+k}}})})}};f.prototype._isRequestedKeysValid=function(e,r){if(r.length===1){var s=r[0].split('=');if(this._trim(s[0])!==e.keys[0]){r=[e.keys[0]+"="+r[0]]}}for(var i=0;i<r.length;i++){var k=this._trim(r[i].substring(0,r[i].indexOf('=')));var R=this._trim(r[i].substring(r[i].indexOf('=')+1));var F=R.charAt(0);var l=R.charAt(R.length-1);if(e.keysType[k]==="Edm.String"){if(F!=="'"||l!=="'"){return false}}else if(e.keysType[k]==="Edm.DateTime"){if(F==="'"||l!=="'"){return false}}else if(e.keysType[k]==="Edm.Guid"){if(F==="'"||l!=="'"){return false}}else{if(F==="'"||l==="'"){return false}}}return true};f.prototype._parseKeys=function(k,e){var r={};var p=k.split(",");var K,s,P;for(var i=0;i<p.length;i++){P=p[i].split("=");if(P.length===1&&e.keys.length===1){K=e.keys[0];s=P[0]}else{if(P.length===2){K=P[0];s=P[1]}}if(s.indexOf('\'')===0){r[K]=s.slice(1,s.length-1)}else{r[K]=s}}return r};f.prototype._generatePropertyValue=function(k,t,C,i){var I=i;if(!I){I=Math.floor(Math.random()*10000)+101}switch(t){case"String":return k+" "+I;case"DateTime":var a=new Date();a.setFullYear(2000+Math.floor(Math.random()*20));a.setDate(Math.floor(Math.random()*30));a.setMonth(Math.floor(Math.random()*12));a.setMilliseconds(0);return"/Date("+a.getTime()+")/";case"Int16":case"Int32":case"Int64":return Math.floor(Math.random()*10000);case"Decimal":return Math.floor(Math.random()*1000000)/100;case"Boolean":return Math.random()<.5;case"Byte":return Math.floor(Math.random()*10);case"Double":return Math.random()*10;case"Single":return Math.random()*1000000000;case"SByte":return Math.floor(Math.random()*10);case"Time":return Math.floor(Math.random()*23)+":"+Math.floor(Math.random()*59)+":"+Math.floor(Math.random()*59);case"Guid":return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==='x'?r:(r&0x3|0x8);return v.toString(16)});case"Binary":var n=Math.floor(-2147483648+Math.random()*4294967295);for(var b=0,e=n,m="";b<32;b++,m+=String(e>>>31),e<<=1);return m;case"DateTimeOffset":default:return this._generateDataFromEntity(C[t],I)}};f.prototype._completeKey=function(e,k,E){if(E){for(var i=0;i<e.keys.length;i++){var K=e.keys[i];if(k[K]){if(!E[K]){switch(e.keysType[K]){case"Edm.DateTime":E[K]=this._getJsonDate(k[K]);break;case"Edm.Guid":E[K]=k[K].substring(5,k[K].length-2);break;default:E[K]=k[K]}}}else{if(!E[K]){E[K]=this._generatePropertyValue(K,e.keysType[K].substring(e.keysType[K].lastIndexOf('.')+1))}}}}};f.prototype._generateDataFromEntity=function(e,I,c){var E={};if(!e){return E}for(var i=0;i<e.properties.length;i++){var p=e.properties[i];var P="";E[p.name]=this._generatePropertyValue(p.name,p.type,c,I)}return E};f.prototype._generateDataFromEntitySet=function(e,E,c){var o=E[e.type];var m=[];for(var i=0;i<100;i++){m.push(this._generateDataFromEntity(o,i+1,c))}return m};f.prototype._generateMockdata=function(e,m){var t=this;var o={};q.each(e,function(E,a){var b={};b[a.name]=a;o[E]=t._generateODataMockdataForEntitySet(b,m)[E]});this._oMockdata=o};f.prototype._generateODataMockdataForEntitySet=function(e,m){var t=this,r=this._getRootUri(),o={};var E=this._findEntityTypes(m);var c=this._findComplexTypes(m);q.each(e,function(s,a){o[s]=t._generateDataFromEntitySet(a,E,c);q.each(o[s],function(i,b){b.__metadata={uri:r+s+"("+t._createKeysString(a,b)+")",type:a.schema+"."+a.type};q.each(a.navprops,function(k,n){b[k]={__deferred:{uri:r+s+"("+t._createKeysString(a,b)+")/"+k}}})})});return o};f.prototype._resolveNavigation=function(e,F,n){var E=this._mEntitySets[e];var N=E.navprops[n];if(!N){throw new Error("404")}var a=[];var p=N.from.propRef.length;if(p===0){if(N.to.multiplicity==="*"){return this._oMockdata[N.to.entitySet]}else{a.push(this._oMockdata[N.to.entitySet][0]);return a}}q.each(this._oMockdata[N.to.entitySet],function(I,t){var b=true;for(var i=0;i<p;i++){if(F[N.from.propRef[i]]!==t[N.to.propRef[i]]){b=false;break}}if(b){a.push(t)}});return a};f.prototype.simulate=function(m,v){var t=this;this._sMetadataUrl=m;if(!v||typeof v==="string"){this._sMockdataBaseUrl=v}else{this._sMockdataBaseUrl=v.sMockdataBaseUrl;this._bGenerateMissingMockData=v.bGenerateMissingMockData}this._refreshData();var h=function(x,H){if(x.requestHeaders["x-csrf-token"]==="Fetch"){H["X-CSRF-Token"]="42424242424242424242424242424242"}};var G=function(e,k){var F;var E=t._mEntitySets[e];var K=E.keys;var b=k.split(',');if(b.length!==K.length||!t._isRequestedKeysValid(E,b)){return F}if(b.length===1&&!b[0].split('=')[1]){b=[K[0]+"="+b[0]]}q.each(t._oMockdata[e],function(I,o){for(var i=0;i<b.length;i++){var c=b[i].split('=');var s=t._trim(c[0]);if(q.inArray(s,K)===-1){return true}var n=t._trim(c[1]);var O=o[s];switch(E.keysType[s]){case"Edm.String":n=n.replace(/^\'|\'$/g,'');break;case"Edm.Time":case"Edm.DateTime":O=t._getDateTime(O);break;case"Edm.Int16":case"Edm.Int32":case"Edm.Int64":case"Edm.Decimal":case"Edm.Byte":case"Edm.Double":case"Edm.Single":case"Edm.SByte":if(!t._isValidNumber(n)){return false}n=parseFloat(n);break;case"Edm.Guid":n=n.replace(/^guid\'|\'$/g,'');break;case"Edm.Boolean":case"Edm.Binary":case"Edm.DateTimeOffset":default:n=n}if(O!==n){return true}}F={index:I,entry:o};return false});return F};var r=function(e,k,u){var s=e.name;if(u){var n=e.navprops[u]}if(n){s=n.to.entitySet}return s};var a=function(x,T,k,u){var e=JSON.parse(x.requestBody);if(e){var K={};if(k){K=t._parseKeys(k,t._mEntitySets[T])}t._completeKey(t._mEntitySets[T],K,e);t._enhanceWithMetadata(t._mEntitySets[T],[e]);return e}return null};var R=[];R.push({method:"GET",path:new RegExp("\\$metadata([?#].*)?"),response:function(x){q.sap.require("jquery.sap.xml");q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/xml;charset=utf-8"};h(x,H);x.respond(200,H,q.sap.serializeXML(t._oMetadata));q.sap.log.debug("MockServer: response sent with: 200, "+q.sap.serializeXML(t._oMetadata))}});R.push({method:"POST",path:new RegExp("\\$batch([?#].*)?"),response:function(x){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var b=function(U){switch(U){case 200:return"200 OK";case 204:return"204 No Content";case 201:return"201 Created";case 400:return"400 Bad Request";case 404:return"404 Not Found";default:break}};var B=function(A,U){var V=JSON.stringify(A.data)||"";if(U){return"HTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: "+U+"\r\nContent-Length: "+V.length+"\r\ndataserviceversion: 2.0\r\n\r\n"+V+"\r\n"}return"HTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: application/json\r\nContent-Length: "+V.length+"\r\ndataserviceversion: 2.0\r\n\r\n"+V+"\r\n"};var s=x.requestBody;var o=new RegExp("--batch_[a-z0-9-]*");var c=o.exec(s)[0];if(!!c){var e=[];var l=s.split(c);var S=x.url.split("$")[0];var n=new RegExp("PUT (.*) HTTP");var p=new RegExp("MERGE (.*) HTTP");var u=new RegExp("POST (.*) HTTP");var w=new RegExp("DELETE (.*) HTTP");var y=new RegExp("GET (.*) HTTP");for(var i=1;i<l.length-1;i++){var z=l[i];if(y.test(z)&&z.indexOf("multipart/mixed")===-1){if(n.test(z)||u.test(z)||w.test(z)){x.respond(400,null,"The Data Services Request could not be understood due to malformed syntax");q.sap.log.debug("MockServer: response sent with: 400");return}var A=q.sap.sjax({url:S+y.exec(z)[1],dataType:"json"});if(y.exec(z)[1].indexOf('$count')!==-1){var C=B(A,"text/plain")}else{C=B(A)}e.push("\r\nContent-Type: application/http\r\n"+"Content-Length: "+C.length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+C)}else{var E=[];var F=q.extend(true,{},t._oMockdata);var H=function(U,L,V){var A=q.sap.sjax({type:V,url:S+U.exec(K)[1],dataType:"json",data:L});if(A.statusCode===400||A.statusCode===404){var P="\r\nHTTP/1.1 "+b(A.statusCode)+"\r\nContent-Type: application/json\r\nContent-Length: 0\r\n\r\n";throw new Error(P)}E.push(B(A))};var I=z.substring(z.indexOf("boundary=")+9,z.indexOf("\r\n\r\n"));var J=z.split("--"+I);try{for(var j=1;j<J.length-1;j++){var K=J[j];if(y.test(K)){t._oMockdata=F;x.respond(400,null,"The Data Services Request could not be understood due to malformed syntax");q.sap.log.debug("MockServer: response sent with: 400");return}else if(n.test(K)){var L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(n,L,'PUT')}else if(p.test(K)){L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(p,L,'PUT')}else if(u.test(K)){L=K.substring(K.indexOf("{"),K.lastIndexOf("}")+1).replace(/\\/g,'');H(u,L,'POST')}else if(w.test(K)){H(w,null,'DELETE')}}var N="\r\nContent-Type: multipart/mixed; boundary=ejjeeffe1\r\n\r\n--ejjeeffe1";for(var k=0;k<E.length;k++){N+="\r\nContent-Type: application/http\r\n"+"Content-Length: "+E[k].length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+E[k]+"--ejjeeffe1"}N+="--\r\n";e.push(N)}catch(O){t._oMockdata=F;var P="\r\nContent-Type: application/http\r\n"+"Content-Length: "+O.message.length+"\r\n"+"content-transfer-encoding: binary\r\n\r\n"+O.message;e.push(P)}}}var Q="--ejjeeffe0";for(var i=0;i<e.length;i++){Q+=e[i]+"--ejjeeffe0"}Q+="--";var T={'Content-Type':"multipart/mixed; boundary=ejjeeffe0"};h(x,T);x.respond(202,T,Q);q.sap.log.debug("MockServer: response sent with: 202, "+Q)}else{x.respond(202)}}});q.each(this._mEntitySets,function(E,o){R.push({method:"GET",path:new RegExp("("+E+")/\\$count/?(.*)?"),response:function(x,E,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"text/plain;charset=utf-8"};h(x,H);var b=t._oMockdata[E];if(b){var F={results:q.extend(true,[],b)};if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){t._applyQueryOnCollection(F,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));return}}x.respond(200,H,""+F.results.length);q.sap.log.debug("MockServer: response sent with: 200, "+F.results.length)}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")/?(\\?(.*))?"),response:function(x,E,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=t._oMockdata[E];if(b){var F={results:q.extend(true,[],b)};if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){t._applyQueryOnCollection(F,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));return}}x.respond(200,H,JSON.stringify({d:F}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:F}))}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(\\?(.*))?"),response:function(x,E,k,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=q.extend(true,{},G(E,k));if(!q.isEmptyObject(b)){if(u){var U=decodeURIComponent(u).replace("?","&").split("&");try{if(U.length>1){U=t._orderQueryOptions(U)}q.each(U,function(i,Q){b.entry=t._applyQueryOnEntry(b.entry,Q,E)})}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}x.respond(200,H,JSON.stringify({d:b.entry}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:b.entry}))}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});q.each(o.navprops,function(n,N){R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/("+n+")/\\$count/?(.*)?"),response:function(x,E,k,s,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"text/plain;charset=utf-8"};h(x,H);var b=G(E,decodeURIComponent(k));if(b){var c,F={};try{c=t._resolveNavigation(E,b.entry,s);if(c&&c.length!==0){var i=t._mEntitySets[E].navprops[s].to.multiplicity;if(i==="*"){F={results:q.extend(true,[],c)}}else{F=q.extend(true,{},c[0])}if(u){var U=decodeURIComponent(u).replace("?","&").split("&");if(U.length>1){U=t._orderQueryOptions(U)}if(i==="*"){q.each(U,function(I,Q){t._applyQueryOnCollection(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}else{q.each(U,function(I,Q){F=t._applyQueryOnEntry(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}}}x.respond(200,H,""+F.results.length);q.sap.log.debug("MockServer: response sent with: 200, "+F.results.length);return}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}else{x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}}});R.push({method:"GET",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/("+n+")/?(\\?(.*))?"),response:function(x,E,k,s,u){q.sap.log.debug("MockServer: incoming request for url: "+x.url);var H={"Content-Type":"application/json;charset=utf-8"};h(x,H);var b=G(E,decodeURIComponent(k));if(b){var c,F={};try{c=t._resolveNavigation(E,b.entry,s);if(c&&c.length!==0){var i=t._mEntitySets[E].navprops[s].to.multiplicity;if(i==="*"){F={results:q.extend(true,[],c)}}else{F=q.extend(true,{},c[0])}if(u){var U=decodeURIComponent(u).replace("?","&").split("&");if(U.length>1){U=t._orderQueryOptions(U)}if(i==="*"){q.each(U,function(I,Q){t._applyQueryOnCollection(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}else{q.each(U,function(I,Q){F=t._applyQueryOnEntry(F,Q,t._mEntitySets[E].navprops[s].to.entitySet)})}}}x.respond(200,H,JSON.stringify({d:F}));q.sap.log.debug("MockServer: response sent with: 200, "+JSON.stringify({d:F}));return}catch(e){x.respond(parseInt(e.message||e.number,10));q.sap.log.debug("MockServer: response sent with: "+parseInt(e.message||e.number,10));return}}x.respond(404);q.sap.log.debug("MockServer: response sent with: 404")}})});R.push({method:"POST",path:new RegExp("("+E+")(\\(([^/\\?#]+)\\)/?(.*)?)?"),response:function(x,E,b,k,n){q.sap.log.debug("MockServer: incoming create request for url: "+x.url);var s=null;var c=null;var i=405;var T=r(o,decodeURIComponent(k),n);if(T){var e=a(x,T,k,n);if(e){var u=t._getRootUri()+T+"("+t._createKeysString(t._mEntitySets[T],e)+")";s=JSON.stringify({d:e,uri:u});c={"Content-Type":"application/json;charset=utf-8"};t._oMockdata[T]=t._oMockdata[T].concat([e]);i=201}}x.respond(i,c,s);q.sap.log.debug("MockServer: response sent with: "+i+", "+s)}});R.push({method:"PUT",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(.*)?"),response:function(x,E,k,n){q.sap.log.debug("MockServer: incoming update request for url: "+x.url);var i=405;var s=null;var b=null;var T=r(o,decodeURIComponent(k),n);if(T){var e=a(x,T,k,n);if(e){var u=t._getRootUri()+T+"("+t._createKeysString(t._mEntitySets[T],e)+")";b={"Content-Type":"application/json;charset=utf-8"};var c=G(E,k);if(c){t._oMockdata[E][c.index]=e}i=204}}x.respond(i,b,s);q.sap.log.debug("MockServer: response sent with: "+i+", "+s)}});R.push({method:"DELETE",path:new RegExp("("+E+")\\(([^/\\?#]+)\\)/?(.*)?"),response:function(x,E,k,u){q.sap.log.debug("MockServer: incoming delete request for url: "+x.url);var i=200;var e=G(E,decodeURIComponent(k));if(e){t._oMockdata[E].splice(e.index,1)}else{i=400}x.respond(i,null,null);q.sap.log.debug("MockServer: response sent with: "+i)}})});this.setRequests(R)};f.prototype._orderQueryOptions=function(u){var F,i,s,t,o,S,e,a,O=[];q.each(u,function(I,Q){switch(Q.split('=')[0]){case"$top":t=q.inArray(Q,u);break;case"$skip":s=q.inArray(Q,u);break;case"$orderby":o=q.inArray(Q,u);break;case"$filter":F=q.inArray(Q,u);break;case"$select":S=q.inArray(Q,u);break;case"$inlinecount":i=q.inArray(Q,u);break;case"$expand":e=q.inArray(Q,u);break;case"$format":a=q.inArray(Q,u);break;default:if(Q.split('=')[0].indexOf('$')===0){q.sap.log.error("Invalid system query options value!");throw new Error("400")}}});if(F>=0)O.push(u[F]);if(i>=0)O.push(u[i]);if(s>=0)O.push(u[s]);if(t>=0)O.push(u[t]);if(S>=0)O.push(u[S]);if(o>=0)O.push(u[o]);if(e>=0)O.push(u[e]);if(a>=0)O.push(u[a]);return O};f.prototype._removeAllRequestHandlers=function(){var r=this.getRequests();var l=r.length;for(var i=0;i<l;i++){f._removeResponse(r[i].response)}};f.prototype._removeAllFilters=function(){for(var i=0;i<this._aFilters.length;i++){f._removeFilter(this._aFilters[i])}this._aFilters=null};f.prototype._addRequestHandler=function(m,p,r){m=m?m.toUpperCase():m;if(typeof m!=="string"){throw new Error("Error in request configuration: value of 'method' has to be a string")}if(!(typeof p==="string"||p instanceof RegExp)){throw new Error("Error in request configuration: value of 'path' has to be a string or a regular expression")}if(typeof r!=="function"){throw new Error("Error in request configuration: value of 'response' has to be a function")}var u=this._getRootUri();u=u&&new RegExp(this._escapeStringForRegExp(u));if(p&&!(p instanceof RegExp)){p=new RegExp(this._createRegExpPattern(p))}var R=this._createRegExp(u?u.source+p.source:p.source);this._addFilter(this._createFilter(m,R));this._oServer.respondWith(m,R,r);q.sap.log.debug("MockServer: adding "+m+" request handler for pattern "+R)};f.prototype._createRegExp=function(p){return new RegExp("^"+p+"$")};f.prototype._createRegExpPattern=function(p){return p.replace(/:([\w\d]+)/g,"([^\/]+)")};f.prototype._escapeStringForRegExp=function(s){return s.replace(/[\\\/\[\]\{\}\(\)\-\*\+\?\.\^\$\|]/g,"\\$&")};f.prototype._trim=function(s){return s&&s.replace(/^\s+|\s+$/g,"")};f.prototype._isValidNumber=function(s){return!isNaN(parseFloat(s))&&isFinite(s)};f.prototype._getDateTime=function(s){if(!s)return;return"datetime'"+new Date(Number(s.replace("/Date(",'').replace(")/",''))).toJSON().substring(0,19)+"'"};f.prototype._getJsonDate=function(S){if(!S)return;var n=function(s){var a=q.map(s.slice(0,-5).split(/\D/),function(i){return parseInt(i,10)||0});a[1]-=1;a=new Date(Date.UTC.apply(Date,a));var o=s.slice(-5);var b=parseInt(o,10)/100;if(o.slice(0,1)==="+"){b*=-1}a.setHours(a.getHours()+b);return a.getTime()};return"/Date("+n(S.substring("datetime'".length,S.length-1))+")/"};f.prototype._addFilter=function(F){this._aFilters.push(F);f._addFilter(F)};f.prototype._createFilter=function(r,R){return function(m,u,a,U,p){return r===m&&R.test(u)}};f.prototype.destroy=function(s){M.prototype.destroy.apply(this,arguments);this.stop();var S=f._aServers;var i=q.inArray(this,S);S.splice(i,1)};f._aFilters=[];f._oServer=null;f._aServers=[];f._getInstance=function(){if(!this._oServer){this._oServer=window.sinon.fakeServer.create();this._oServer.autoRespond=true}return this._oServer};f.config=function(c){var s=this._getInstance();s.autoRespond=c.autoRespond===false?false:true;s.autoRespondAfter=c.autoRespondAfter||0;s.fakeHTTPMethods=c.fakeHTTPMethods||false};f.respond=function(){this._getInstance().respond()};f.startAll=function(){for(var i=0;i<this._aServers.length;i++){this._aServers[i].start()}};f.stopAll=function(){for(var i=0;i<this._aServers.length;i++){this._aServers[i].stop()}this._getInstance().restore();this._oServer=null};f.destroyAll=function(){this.stopAll();for(var i=0;i<this._aServers.length;i++){this._aServers[i].destroy()}};f._addFilter=function(F){this._aFilters.push(F)};f._removeFilter=function(F){var i=q.inArray(F,this._aFilters);if(i!==-1){this._aFilters.splice(i,1)}return i!==-1};f._removeResponse=function(r){var R=this._oServer.responses;var l=R.length;for(var i=0;i<l;i++){if(R[i].response===r){R.splice(i,1);return true}}return false};window.sinon.FakeXMLHttpRequest.useFilters=true;window.sinon.FakeXMLHttpRequest.addFilter(function(m,u,a,U,p){var F=f._aFilters;for(var i=0;i<F.length;i++){var b=F[i];if(b(m,u,a,U,p)){return false}}return true});var g=function(F){if(/.*\.json$/i.test(F)){return"JSON"}if(/.*\.xml$/i.test(F)){return"XML"}if(/.*metadata$/i.test(F)){return"XML"}return null};window.sinon.FakeXMLHttpRequest.prototype.respondFile=function(s,h,F){var r=q.sap.sjax({url:F,dataType:"text"});if(!r.success)throw new Error("Could not load file from: "+F);var o=r.data;var m=g(F);if(this["respond"+m]){this["respond"+m](s,h,o)}else{this.respond(s,h,o)}};window.sinon.FakeXMLHttpRequest.prototype.respondJSON=function(s,h,j){h=h||{};h["Content-Type"]=h["Content-Type"]||"application/json";this.respond(s,h,typeof j==="string"?j:JSON.stringify(j))};window.sinon.FakeXMLHttpRequest.prototype.respondXML=function(s,h,x){h=h||{};h["Content-Type"]=h["Content-Type"]||"application/xml";this.respond(s,h,x)};return f},true)};if(!jQuery.sap.isDeclared('sap.ui.model.ClientModel')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.model.ClientModel');sap.ui.define("sap/ui/model/ClientModel",['jquery.sap.global','./ClientContextBinding','./ClientListBinding','./ClientPropertyBinding','./ClientTreeBinding','./Model'],function(q,C,a,b,c,M){"use strict";var d=M.extend("sap.ui.model.ClientModel",{constructor:function(D){M.apply(this,arguments);this.bCache=true;this.aPendingRequestHandles=[];if(typeof D=="string"){this.loadData(D)}},metadata:{publicMethods:["loadData","setData","getData","setProperty","forceNoCache"]}});d.prototype.getData=function(){return this.oData};d.prototype.checkUpdate=function(f){var B=this.aBindings.slice(0);q.each(B,function(i,o){o.checkUpdate(f)})};d.prototype.createBindingContext=function(p,o,P,f){if(typeof o=="function"){f=o;o=null}if(typeof P=="function"){f=P;P=null}var s=this.resolve(p,o),n=(s==undefined)?undefined:this.getContext(s?s:"/");if(!n){n=null}f(n)};d.prototype._ajax=function(p){var t=this;if(this.bDestroyed){return}function w(f){return function(){var i=q.inArray(r,t.aPendingRequestHandles);if(i>-1){t.aPendingRequestHandles.splice(i,1)}if(!(r&&r.bSuppressErrorHandlerCall)){f.apply(this,arguments)}}}p.success=w(p.success);p.error=w(p.error);var r=q.ajax(p);if(p.async){this.aPendingRequestHandles.push(r)}};d.prototype.destroy=function(){if(this.aPendingRequestHandles){for(var i=this.aPendingRequestHandles.length-1;i>=0;i--){var r=this.aPendingRequestHandles[i];if(r&&r.abort){r.bSuppressErrorHandlerCall=true;r.abort()}}delete this.aPendingRequestHandles}M.prototype.destroy.apply(this,arguments)};d.prototype.destroyBindingContext=function(o){};d.prototype.bindContext=function(p,o,P){var B=new C(this,p,o,P);return B};d.prototype.updateBindings=function(f){this.checkUpdate(f)};d.prototype.forceNoCache=function(f){this.bCache=!f};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.model.analytics.ODataModelAdapter')){jQuery.sap.declare('sap.ui.model.analytics.ODataModelAdapter');sap.ui.define("sap/ui/model/analytics/ODataModelAdapter",['jquery.sap.global','./AnalyticalBinding',"./TreeBindingAdapter",'sap/ui/model/odata/ODataModel','./odata4analytics'],function(q,A,T,O,o){"use strict";var a=function(){if(!(this instanceof O&&this.getAnalyticalExtensions===undefined)){return}for(var f in a.prototype){if(a.prototype.hasOwnProperty(f)){this[f]=a.prototype[f]}}if(this.isCountSupported()){q.sap.log.info("ODataModelAdapter: switched ODataModel to use inlinecount (mandatory for analytical bindings)");this.setCountSupported(false)}};a.prototype.bindList=function(p,c,s,f,P){if(P&&P.analyticalInfo){var b=new A(this,p,c,s,f,P);T.apply(b);return b}else{return O.prototype.bindList.apply(this,arguments)}};a.prototype.bindTree=function(p,c,f,P){if(P&&P.analyticalInfo){var b=new A(this,p,c,[],f,P);return b}else{return O.prototype.bindTree.apply(this,arguments)}};a.prototype.getAnalyticalExtensions=function(){if(this.oOData4SAPAnalyticsModel!=undefined&&this.oOData4SAPAnalyticsModel!=null)return this.oOData4SAPAnalyticsModel;var s=null;if(arguments.length==1){var b=arguments[0];var r=q.sap.syncGetText(b);if(r.success){s=r.data}}try{this.oOData4SAPAnalyticsModel=new o.Model(new o.Model.ReferenceByModel(this),s)}catch(e){throw"Failed to instantiate analytical extensions for given OData model: "+e.message}return this.oOData4SAPAnalyticsModel};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.model.json.JSONModel')){jQuery.sap.declare('sap.ui.model.json.JSONModel');sap.ui.define("sap/ui/model/json/JSONModel",['jquery.sap.global','sap/ui/model/ClientModel','./JSONListBinding','./JSONPropertyBinding','./JSONTreeBinding'],function(q,C,J,a,b){"use strict";var c=C.extend("sap.ui.model.json.JSONModel",{constructor:function(d){C.apply(this,arguments);if(d&&typeof d=="object"){this.setData(d)}},metadata:{publicMethods:["setJSON","getJSON"]}});c.prototype.setData=function(d,m){if(m){this.oData=q.extend(true,{},this.oData,d)}else{this.oData=d}this.checkUpdate()};c.prototype.setJSON=function(j,m){var o;try{o=q.parseJSON(j);this.setData(o,m)}catch(e){q.sap.log.fatal("The following problem occurred: JSON parse Error: "+e);this.fireParseError({url:"",errorCode:-1,reason:"",srcText:e,line:-1,linepos:-1,filepos:-1})}};c.prototype.getJSON=function(){return JSON.stringify(this.oData)};c.prototype.loadData=function(u,p,A,t,m,d,h){var e=this;A=(A!==false);t=t||"GET";d=d===undefined?this.bCache:d;this.fireRequestSent({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m}});this._ajax({url:u,async:A,dataType:'json',cache:d,data:p,headers:h,type:t,success:function(D){if(!D){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+u)}e.setData(D,m);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m},success:true})},error:function(X,f,g){var E={message:f,statusCode:X.status,statusText:X.statusText,responseText:X.responseText};q.sap.log.fatal("The following problem occurred: "+f,X.responseText+","+X.status+","+X.statusText);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d+";bMerge="+m,infoObject:{cache:d,merge:m},success:false,errorobject:E});e.fireRequestFailed(E)}})};c.prototype.bindProperty=function(p,o,P){var B=new a(this,p,o,P);return B};c.prototype.bindList=function(p,o,s,f,P){var B=new J(this,p,o,s,f,P);return B};c.prototype.bindTree=function(p,o,f,P){var B=new b(this,p,o,f,P);return B};c.prototype.setProperty=function(p,v,o){var O=p.substring(0,p.lastIndexOf("/")),P=p.substr(p.lastIndexOf("/")+1);if(!this.resolve(p,o)){return}if(!O&&!o){o=this.oData}var d=this._getObject(O,o);if(d){d[P]=v;this.checkUpdate()}};c.prototype.getProperty=function(p,o){return this._getObject(p,o)};c.prototype._getObject=function(p,o){var n=this.isLegacySyntax()?this.oData:null;if(o instanceof sap.ui.model.Context){n=this._getObject(o.getPath())}else if(o){n=o}if(!p){return n}var P=p.split("/"),i=0;if(!P[0]){n=this.oData;i++}while(n&&P[i]){n=n[P[i]];i++}return n};c.prototype.isList=function(p,o){var A=this.resolve(p,o);return q.isArray(this._getObject(A))};return c},true)};if(!jQuery.sap.isDeclared('sap.ui.model.xml.XMLModel')){jQuery.sap.declare('sap.ui.model.xml.XMLModel');sap.ui.define("sap/ui/model/xml/XMLModel",['jquery.sap.global','sap/ui/model/ClientModel','./XMLListBinding','./XMLPropertyBinding','./XMLTreeBinding','jquery.sap.xml'],function(q,C,X,a,b){"use strict";var c=C.extend("sap.ui.model.xml.XMLModel",{constructor:function(d){C.apply(this,arguments);this.oNameSpaces=null;if(d&&d.documentElement){this.setData(d)}},metadata:{publicMethods:["setXML","getXML","setNameSpace"]}});c.prototype.setXML=function(x){var o=q.sap.parseXML(x);if(o.parseError.errorCode!=0){var p=o.parseError;q.sap.log.fatal("The following problem occurred: XML parse Error for "+p.url+" code: "+p.errorCode+" reason: "+p.reason+" src: "+p.srcText+" line: "+p.line+" linepos: "+p.linepos+" filepos: "+p.filepos);this.fireParseError({url:p.url,errorCode:p.errorCode,reason:p.reason,srcText:p.srcText,line:p.line,linepos:p.linepos,filepos:p.filepos})}this.setData(o)};c.prototype.getXML=function(){return q.sap.serializeXML(this.oData)};c.prototype.setData=function(d){this.oData=d;this.checkUpdate()};c.prototype.loadData=function(u,p,A,t,d,h){var e=this;A=(A!==false);t=t||"GET";d=d===undefined?this.bCache:d;this.fireRequestSent({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d}});this._ajax({url:u,async:A,cache:d,dataType:'xml',data:p,headers:h,type:t,success:function(D){if(!D){q.sap.log.fatal("The following problem occurred: No data was retrieved by service: "+u)}e.setData(D);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d},success:true})},error:function(f,g,i){var E={message:g,statusCode:f.status,statusText:f.statusText,responseText:f.responseText};q.sap.log.fatal("The following problem occurred: "+g,f.responseText+","+f.status+","+f.statusText);e.fireRequestCompleted({url:u,type:t,async:A,headers:h,info:"cache="+d,infoObject:{cache:d},success:false,errorobject:E});e.fireRequestFailed(E)}})};c.prototype.setNameSpace=function(n,p){if(!p){p=""}if(!this.oNameSpaces){this.oNameSpaces={}}this.oNameSpaces[p]=n};c.prototype.bindProperty=function(p,o,P){var B=new a(this,p,o,P);return B};c.prototype.bindList=function(p,o,s,f,P){var B=new X(this,p,o,s,f,P);return B};c.prototype.bindTree=function(p,o,f,P){var B=new b(this,p,o,f,P);return B};c.prototype.setProperty=function(p,v,o){var O=p.substring(0,p.lastIndexOf("/")+1),P=p.substr(p.lastIndexOf("/")+1);if(!this.resolve(p,o)){return}if(!this.oData.documentElement){q.sap.log.warning("Trying to set property "+p+", but no document exists.");return}var d;if(P.indexOf("@")==0){d=this._getObject(O,o);if(d[0]){d[0].setAttribute(P.substr(1),v);this.checkUpdate()}}else{d=this._getObject(p,o);if(d[0]){q(d[0]).text(v);this.checkUpdate()}}};c.prototype.getProperty=function(p,o){var r=this._getObject(p,o);if(r&&typeof r!="string"){r=q(r[0]).text()}return r};c.prototype.getObject=function(p,o){var O=this._getObject(p,o);if(q.isArray(O)){O=O[0]}return O};c.prototype._getObject=function(p,o){var r=this.oData.documentElement;if(!r){return null}var n=this.isLegacySyntax()?[r]:[];if(o instanceof sap.ui.model.Context){n=this._getObject(o.getPath())}else if(o){n=[o]}if(!p){return n}var P=p.split("/"),s,i=0;if(!P[0]){n=r;i++}n=n.length==undefined?[n]:n;n=n[0]?n:null;while(n&&n.length>0&&P[i]){s=P[i];if(s.indexOf("@")==0){n=this._getAttribute(n[0],s.substr(1))}else if(s=="text()"){n=q(n[0]).text()}else if(isNaN(s)){n=this._getChildElementsByTagName(n[0],s)}else{n=[n[s]]}i++}return n};c.prototype._getAttribute=function(n,N){if(!this.oNameSpaces||N.indexOf(":")==-1){return n.getAttribute(N)}var s=this._getNameSpace(N),l=this._getLocalName(N);if(n.getAttributeNS){return n.getAttributeNS(s,l)}else{if(!this.oDocNSPrefixes){this.oDocNSPrefixes=this._getDocNSPrefixes()}var p=this.oDocNSPrefixes[s];N=(p?p+":":"")+l;return n.getAttribute(N)}};c.prototype._getChildElementsByTagName=function(n,N){var d=n.childNodes,r=[];if(this.oNameSpaces){var s=this._getNameSpace(N),l=this._getLocalName(N),e;q.each(d,function(i,o){e=o.localName||o.baseName;if(o.nodeType==1&&e==l&&o.namespaceURI==s){r.push(o)}})}else{q.each(d,function(i,o){if(o.nodeType==1&&o.nodeName==N){r.push(o)}})}return r};c.prototype._getNameSpace=function(n){var i=n.indexOf(":"),p="";if(i>0){p=n.substr(0,i)}return this.oNameSpaces[p]};c.prototype._getLocalName=function(n){var i=n.indexOf(":"),l=n;if(i>0){l=n.substr(i+1)}return l};c.prototype._getDocNSPrefixes=function(){var p={},d=this.oData&&this.oData.documentElement;if(!d){return p}var A=d.attributes;q.each(A,function(i,o){var n=o.name,v=o.value;if(n=="xmlns"){p[v]=""}else if(n.indexOf("xmlns")==0){p[v]=n.substr(6)}});return p};c.prototype._resolve=function(p,o){var i=!q.sap.startsWith(p,"/"),r=p;if(i){if(o){r=o.getPath()+"/"+p}else{r=this.isLegacySyntax()?"/"+p:undefined}}return r};c.prototype.isList=function(p,o){return false};return c},true)};if(!jQuery.sap.isDeclared('sap.ui.app.MockServer')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.app.MockServer');sap.ui.define("sap/ui/app/MockServer",['jquery.sap.global','sap/ui/core/util/MockServer'],function(q,M){"use strict";var a=M;return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.HandlebarsTemplate')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.tmpl.HandlebarsTemplate');jQuery.sap.require('sap.ui.thirdparty.handlebars');sap.ui.define("sap/ui/core/tmpl/HandlebarsTemplate",['jquery.sap.global','sap/ui/core/RenderManager','./Template','sap/ui/thirdparty/handlebars'],function(q,R,T,h){"use strict";var H=T.extend("sap.ui.core.tmpl.HandlebarsTemplate",{constructor:function(i,s){T.apply(this,arguments)}});T.registerType("text/x-handlebars-template","sap.ui.core.tmpl.HandlebarsTemplate");H.RENDER_HELPERS=(function(){var e=Handlebars.helpers["each"],w=Handlebars.helpers["with"],I=Handlebars.helpers["if"],u=Handlebars.helpers["unless"],p=T.parsePath,r=new R();r.renderControl=function(c){this.writeControlData(c);this.writeClasses(c);this.writeStyles(c)};var o={"each":function(c,a){a=a||c;if(!a.hash.path){return e.apply(this,arguments)}else{var b=a.data.renderManager,d=a.data.rootControl,P=a.data.path,f=a.data.parentControl,s=(q.sap.startsWith(a.hash.path,"/")?"":(P||""))+a.hash.path,g=d.bindList(s),i=[],j;if(a.data){j=Handlebars.createFrame(a.data)}if(g){q.each(g,function(k,v){if(j){j.renderManager=b;j.rootControl=d;j.path=s+"/"+k+"/";j.parentControl=f}i.push(a.fn({},{data:j}))})}if(!f){return new Handlebars.SafeString(i.join(""))}}},"with":function(c,a){a=a||c;if(!a.hash.path){return w.apply(this,arguments)}else{}},"if":function(c,a){a=a||c;if(!a.hash.path){return I.apply(this,arguments)}else{}},"unless":function(c,a){a=a||c;if(!a.hash.path){return u.apply(this,arguments)}else{}},"text":function(c,a){a=a||c;var b=a.data.rootControl,P=a.data.path,s=(q.sap.startsWith(a.hash.path,"/")?"":(P||""))+a.hash.path;if(s){var v=b.bindProp(s);return v&&new Handlebars.SafeString(v)}else{throw new Error("The expression \"text\" requires the option \"path\"!")}},"element":function(c,a){a=a||c;var b=a.data.renderManager,d=a.data.rootControl,E=d.createDOMElement(a.hash,a.data.path),P=a.data.parentElement;if(a.fn){var C=a.fn({},{data:{renderManager:b,rootControl:d,parentElement:E}})}if(P){P.addElement(E);return}return new Handlebars.SafeString(b.getHTML(E))},"control":function(c,a){a=a||c;var b=a.data.renderManager,C=a.data.control;if(C){return new Handlebars.SafeString(b.getHTML(C))}var d=a.data.rootControl,P=a.data.path,m=a.data.children,t=a.hash["sap-ui-type"],M=q.sap.getObject(t).getMetadata(),D=a.hash["sap-ui-default-aggregation"]||M.getDefaultAggregationName(),v=a.data.view;var f={};if(a.fn){a.fn({},{data:{rootControl:d,path:P,children:f,defaultAggregation:D,view:v}})}var s=q.extend({},a.hash);q.each(s,function(k,V){if(f[k]){delete s[k]}});var n=d.createControl(s,a.data.path,!!m,v);if(!q.isEmptyObject(f)){s=a.hash;var A=M.getAllAggregations();q.each(f,function(g,j){for(var i=0,l=j.length;i<l;i++){var k=j[i],x=A[g],y=x&&x.multiple;if(typeof s[g]==="string"){var B=sap.ui.base.ManagedObject.bindingParser(s[g],v&&v.getController());B.template=k;n.bindAggregation(g,B)}else{if(y){n.addAggregation(g,k)}else{n.setAggregation(g,k)}}}})}if(m){var g=a.hash["sap-ui-aggregation"]||a.data.defaultAggregation;m[g]=m[g]||[];m[g].push(n);return}return new Handlebars.SafeString(b.getHTML(n))},"property":function(c,a){a=a||c;var b=a.data.rootControl,m=b.getMetadata(),P=a.hash.name,g=m.getAllProperties()[P]._sGetter;return b[g]()},"aggregation":function(c,a){a=a||c;var b=a.data.renderManager,d=a.data.rootControl,m=d.getMetadata(),A=a.hash.name,g=m.getAllAggregations()[A]._sGetter,f=[];var C=d[g]();if(C){for(var i=0,l=C.length;i<l;i++){if(a.fn){f.push(a.fn({},{data:{renderManager:b,rootControl:d,control:C[i]}}))}else{f.push(b.getHTML(C[i]))}}}return new Handlebars.SafeString(f.join(""))},"event":function(c,a){a=a||c},"controlData":function(c,a){a=a||c;var b=a.data.rootControl;return new Handlebars.SafeString(r.getHTML(b))}};return o}());H.prototype.createMetadata=function(){var t=this.getContent(),f=this._fnTemplate=this._fnTemplate||Handlebars.compile(t);var m={},j=sap.ui.core.tmpl.TemplateControl.getMetadata().getJSONKeys(),p=sap.ui.core.tmpl.TemplateControl.getMetadata().getAllPrivateAggregations();var o={"property":function(c,a){a=a||c;var n=a.hash.name;if(n&&n!=="id"&&!j[n]){m.properties=m.properties||{};m.properties[n]=q.extend({},{type:"string"},a.hash)}else{throw new Error("The property name \""+n+"\" is reserved.")}},"aggregation":function(c,a){a=a||c;var n=a.hash.name;if(n&&!j[n]&&!p[n]){a.hash.multiple=a.hash.multiple=="true";m.aggregations=m.aggregations||{};m.aggregations[n]=q.extend({},a.hash)}else{throw new Error("The aggregation name \""+n+"\" is reserved.")}},"event":function(c,a){a=a||c},"controlData":function(c,a){a=a||c;m._hasControlData=true}};q.each(["each","if","unless","with"],function(i,v){o[v]=function(){}});f({},{helpers:o});return m};H.prototype.createRenderer=function(v){var t=this.getContent(),f=this._fnTemplate=this._fnTemplate||Handlebars.compile(t);var r=function(a,c){var s=f(c.getContext()||{},{data:{renderManager:a,rootControl:c,view:v},helpers:H.RENDER_HELPERS});a.write(s)};return r};return H},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Core')){jQuery.sap.declare('sap.ui.core.Core');if(!jQuery.sap.isDeclared('sap.ui.core.Component')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.Component');sap.ui.define("sap/ui/core/Component",['jquery.sap.global','sap/ui/base/ManagedObject','./ComponentMetadata','./Core'],function(q,M,C,a){"use strict";var b=M.extend("sap.ui.core.Component",{constructor:function(i,s){M.apply(this,arguments)},metadata:{stereotype:"component","abstract":true,version:"0.0",includes:[],dependencies:{libs:[],components:[],ui5version:""},config:{},customizing:{},library:"sap.ui.core"}},C);b.activateCustomizing=function(c){};b.deactivateCustomizing=function(c){};b.getOwnerIdFor=function(o){if(o&&(o instanceof b||o instanceof sap.ui.core.mvc.View)){return M.getOwnerIdFor(o)}};b.prototype.getInterface=function(){return this};b.prototype._initCompositeSupport=function(s){this._mMockServers={};this.getMetadata().onInitComponent();this.oComponentData=s&&s.componentData;this.getMetadata().init();this.initComponentModels();if(this.onWindowError){this._fnWindowErrorHandler=q.proxy(function(e){var E=e.originalEvent;this.onWindowError(E.message,E.filename,E.lineno)},this);q(window).bind("error",this._fnWindowErrorHandler)}if(this.onWindowBeforeUnload){this._fnWindowBeforeUnloadHandler=q.proxy(this.onWindowBeforeUnload,this);q(window).bind("beforeunload",this._fnWindowBeforeUnloadHandler)}if(this.onWindowUnload){this._fnWindowUnloadHandler=q.proxy(this.onWindowUnload,this);q(window).bind("unload",this._fnWindowUnloadHandler)}};b.prototype.destroy=function(){if(this._mMockServers){q.each(this._mMockServers,function(n,m){m.stop()});delete this._mMockServers}if(this._fnWindowErrorHandler){q(window).unbind("error",this._fnWindowErrorHandler);delete this._fnWindowErrorHandler}if(this._fnWindowBeforeUnloadHandler){q(window).unbind("beforeunload",this._fnWindowBeforeUnloadHandler);delete this._fnWindowBeforeUnloadHandler}if(this._fnWindowUnloadHandler){q(window).unbind("unload",this._fnWindowUnloadHandler);delete this._fnWindowUnloadHandler}if(this._oEventBus){this._oEventBus.destroy();delete this._oEventBus}M.prototype.destroy.apply(this,arguments);this.getMetadata().onExitComponent()};b.prototype.getComponentData=function(){return this.oComponentData};b.prototype.getEventBus=function(){if(!this._oEventBus){q.sap.require("sap.ui.core.EventBus");this._oEventBus=new sap.ui.core.EventBus()}return this._oEventBus};b.prototype.initComponentModels=function(m,s){var o=this.getMetadata();var c=m||o.getModels(),S=s||o.getServices();if(c){var f=function(n,u,e,g){if(this._mMockServers[n]){this._mMockServers[n].stop()}q.sap.require("sap.ui.core.util.MockServer");this._mMockServers[n]=new sap.ui.core.util.MockServer({rootUri:u});this._mMockServers[n].simulate(e,g);this._mMockServers[n].start()};var d=function(n,e){var u=e.uri,T=e.type;q.sap.require(T);var g=q.sap.getObject(T);var h;if(T==="sap.ui.model.resource.ResourceModel"){h=new g({bundleUrl:u})}else if(T==="sap.ui.model.odata.ODataModel"){if(e.mockserver){f.call(this,n,u,e.mockserver.model,e.mockserver.data)}h=new g(u,e.settings)}else if(T==="sap.ui.model.json.JSONModel"||T==="sap.ui.model.xml.XMLModel"){h=new g();if(u){h.loadData(u)}}return h};var t=this;q.each(c,function(k,e){var g=e.service,h;if(g){var i=S[g];h=d.call(t,k,i)}else if(e.type){h=d.call(t,k,e)}if(h){t.setModel(h,k||undefined)}})}};sap.ui.component=function(c){if(!c){throw new Error("sap.ui.component cannot be called without parameter!")}if(typeof c==="string"){return sap.ui.getCore().getComponent(c)}else{var n=c.name,i=c.id,o=c.componentData,s=n+".Component",S=c.settings;var d=sap.ui.component.load(c,true);var I=new d(q.extend({},S,{id:i,componentData:o}));q.sap.log.info("Component instance Id = "+I.getId());return I}};sap.ui.component.load=function(c,f){var n=c.name,u=c.url,s=n+".Component",p=s+"-preload",P=sap.ui.getCore().getConfiguration().getComponentPreload();if(!n){throw new Error("The name of the component is undefined.")}if(u){q.sap.registerModulePath(n,u)}if(P==="sync"||P==="async"){try{if(!q.sap.isDeclared(s,true)){q.sap.require(p)}}catch(e){q.sap.log.warning("couldn't preload component from "+p+": "+((e&&e.message)||e))}}q.sap.require(s);var o=q.sap.getObject(s);if(!o){if(f){throw new Error("The specified component controller\""+s+"\" could not be found!")}else{q.sap.log.warning("The specified component controller \""+s+"\" could not be found!")}}return o};return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Control')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.Control');if(!jQuery.sap.isDeclared('sap.ui.core.CustomStyleClassSupport')){jQuery.sap.declare('sap.ui.core.CustomStyleClassSupport');if(!jQuery.sap.isDeclared('sap.ui.core.Element')){jQuery.sap.declare('sap.ui.core.Element');sap.ui.define("sap/ui/core/Element",['jquery.sap.global','sap/ui/base/ManagedObject','./Core','./ElementMetadata','sap/ui/model/SimpleType','jquery.sap.strings'],function(q,M,C,E,S){"use strict";var a=M.extend("sap.ui.core.Element",{metadata:{stereotype:"element","abstract":true,publicMethods:["getId","getMetadata","getTooltip_AsString","getTooltip_Text","getModel","setModel","hasModel","bindElement","unbindElement","getElementBinding","prop","getLayoutData","setLayoutData"],library:"sap.ui.core",properties:{},aggregations:{tooltip:{name:"tooltip",type:"sap.ui.core.TooltipBase",altTypes:["string"],multiple:false},customData:{name:"customData",type:"sap.ui.core.CustomData",multiple:true,singularName:"customData"},layoutData:{name:"layoutData",type:"sap.ui.core.LayoutData",multiple:false,singularName:"layoutData"},dependents:{name:"dependents",type:"sap.ui.core.Control",multiple:true}},associations:{},events:{}},constructor:function(i,s){M.apply(this,arguments)},renderer:null},E);a.defineClass=function(c,s,m){return sap.ui.base.Object.defineClass(c,s,m||E)};a.prototype.getInterface=function(){return this};a.prototype._handleEvent=function(e){var h="on"+e.type;this._callEventHandles(this.aBeforeDelegates.slice(0),h,e,true);this._callEventHandles([this],h,e);this._callEventHandles(this.aDelegates.slice(0),h,e,true)};a.prototype._callEventHandles=function(h,H,e,d){if(h.length>0){for(var i=0;i<h.length;i++){if(e.isImmediateHandlerPropagationStopped()){break}var o=d?h[i].oDelegate:h[i];var t=(d&&h[i].vThis)?h[i].vThis:o;if(t===true){t=this}if(o[H]){o[H].call(t,e)}}}};a.create=function(d,k){if(!d||d instanceof a||typeof d!=="object"||d instanceof String){return d}function g(t){if(typeof t==="function"){return t}if(typeof t==="string"){return q.sap.getObject(t)}}var c=g(d.Type)||g(k&&k.type);if(typeof c==="function"){return new c(d)}var m="Don't know how to create an Element from "+d+" ("+(typeof d)+")";q.sap.log.fatal(m);throw new Error(m)};a.prototype.toString=function(){if(this.getMetadata){return"Element "+this.getMetadata().getName()+"#"+this.sId}else{return"Element {unknown class}#"+this.sId}};a.prototype.getDomRef=function(s){return q.sap.domById(s?this.getId()+"-"+s:this.getId())};a.prototype.$=function(s){return q(this.getDomRef(s))};a.prototype.isActive=function(){return this.oParent&&this.oParent.isActive()};a.prototype.prop=function(p,v){var P=this.getMetadata().getJSONKeys()[p];if(P){if(arguments.length==1){return this[P._sGetter]()}else{this[P._sMutator](v);return this}}};a.prototype.insertDependent=function(c,i){return this.insertAggregation("dependents",c,i,true)};a.prototype.addDependent=function(c){return this.addAggregation("dependents",c,true)};a.prototype.removeDependent=function(c){return this.removeAggregation("dependents",c,true)};a.prototype.removeAllDependents=function(){return this.removeAllAggregation("dependents",true)};a.prototype.destroyDependents=function(){return this.destroyAggregation("dependents",true)};a.prototype.rerender=function(){if(this.oParent){this.oParent.rerender()}};a.prototype.getUIArea=function(){return this.oParent?this.oParent.getUIArea():null};a.prototype.destroy=function(s){M.prototype.destroy.call(this,s);this.$().remove()};a.prototype.fireEvent=function(e,p){var A=Array.prototype.slice.apply(arguments);A[1]=p=p||{};p.id=p.id||this.getId();return sap.ui.base.EventProvider.prototype.fireEvent.apply(this,A)};a.prototype.addDelegate=function(d,c,t,b){this.removeDelegate(d);if(typeof c==="object"){b=t;t=c;c=false}if(typeof t==="boolean"){b=t;t=undefined}(c?this.aBeforeDelegates:this.aDelegates).push({oDelegate:d,bClone:!!b,vThis:((t===this)?true:t)});return this};a.prototype.removeDelegate=function(d){for(var i=0;i<this.aDelegates.length;i++){if(this.aDelegates[i].oDelegate==d){this.aDelegates.splice(i,1)}}for(var i=0;i<this.aBeforeDelegates.length;i++){if(this.aBeforeDelegates[i].oDelegate==d){this.aBeforeDelegates.splice(i,1)}}return this};a.prototype.addEventDelegate=function(d,t){return this.addDelegate(d,false,t,true)};a.prototype.removeEventDelegate=function(d){return this.removeDelegate(d)};a.prototype.getFocusDomRef=function(){return this.getDomRef()||null};a.prototype.focus=function(){var f=this.getFocusDomRef();if(f){try{f.focus()}catch(e){var i=f.id?" (id: "+f.id+")":" ";q.sap.log.warning("DOM element"+i+" in "+this.toString()+" which should be focused cannot be focused: "+e.message)}}};a.prototype.getFocusInfo=function(){return{id:this.getId()}};a.prototype.applyFocusInfo=function(f){this.focus();return this};a.prototype._refreshTooltipBaseDelegate=function(t){var o=this.getTooltip();if(o instanceof sap.ui.core.TooltipBase){this.removeDelegate(o)}if(t instanceof sap.ui.core.TooltipBase){t._currentControl=this;this.addDelegate(t)}};a.prototype.setTooltip=function(t){this._refreshTooltipBaseDelegate(t);this.setAggregation("tooltip",t);return this};a.prototype.getTooltip=function(){return this.getAggregation("tooltip")};a.runWithPreprocessors=M.runWithPreprocessors;a.prototype.getTooltip_AsString=function(){var t=this.getTooltip();if(typeof t==="string"||t instanceof String){return t}return undefined};a.prototype.getTooltip_Text=function(){var t=this.getTooltip();if(t&&typeof t.getText==="function"){return t.getText()}return t};(function(){var g=function(e,k){var d=e.getAggregation("customData");if(d){for(var i=0;i<d.length;i++){if(d[i].getKey()==k){return d[i]}}}return null};var s=function(e,k,v,w){if(v===null){var d=g(e,k);if(!d){return}var b=e.getAggregation("customData").length;if(b==1){e.destroyAggregation("customData",true)}else{e.removeAggregation("customData",d,true);d.destroy()}}else{var d=g(e,k);if(d){d.setValue(v);d.setWriteToDom(w)}else{var d=new sap.ui.core.CustomData({key:k,value:v,writeToDom:w});e.addAggregation("customData",d,true)}}};a.prototype.data=function(){var b=arguments.length;if(b==0){var d=this.getAggregation("customData"),r={};if(d){for(var i=0;i<d.length;i++){r[d[i].getKey()]=d[i].getValue()}}return r}else if(b==1){var c=arguments[0];if(c===null){this.destroyAggregation("customData",true);return this}else if(typeof c=="string"){var e=g(this,c);return e?e.getValue():null}else if(typeof c=="object"){for(var k in c){s(this,k,c[k])}return this}else{throw new Error("When data() is called with one argument, this argument must be a string, an object or null, but is "+(typeof c)+":"+c+" (on UI Element with ID '"+this.getId()+"')")}}else if(b==2){s(this,arguments[0],arguments[1]);return this}else if(b==3){s(this,arguments[0],arguments[1],arguments[2]);return this}else{throw new Error("data() may only be called with 0-3 arguments (on UI Element with ID '"+this.getId()+"')")}}})();a.prototype.clone=function(I,l){var c=M.prototype.clone.apply(this,arguments);for(var i=0;i<this.aDelegates.length;i++){if(this.aDelegates[i].bClone){c.aDelegates.push(this.aDelegates[i])}}for(var i=0;i<this.aBeforeDelegates.length;i++){if(this.aBeforeDelegates[i].bClone){c.aBeforeDelegates.push(this.aBeforeDelegates[i])}}return c};a.prototype.findElements=function(r){var c=M.prototype.findAggregatedObjects.call(this,r);return c};a.prototype.setLayoutData=function(l){this.setAggregation("layoutData",l,true);var L=this.getParent();if(L){var e=q.Event("LayoutDataChange");e.srcControl=this;L._handleEvent(e)}return this};a.prototype.bindElement=function(p,P){return this.bindObject(p,P)};a.prototype.unbindElement=function(m){return this.unbindObject(m)};a.prototype.getElementBinding=function(m){return this.getObjectBinding(m)};return a},true)};sap.ui.define("sap/ui/core/CustomStyleClassSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var C=function(){if(!(this instanceof E)){return}var o=this.clone;this.clone=function(){var c=o.apply(this,arguments);if(this.aCustomStyleClasses){c.aCustomStyleClasses=this.aCustomStyleClasses.slice()}return c};this.addStyleClass=function(s,S){if(!this.aCustomStyleClasses){this.aCustomStyleClasses=[]}if(s){if(s.indexOf("\"")>-1){return this}if(s.indexOf("'")>-1){return this}for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){return this}}this.aCustomStyleClasses.push(s);var r=this.getDomRef();if(r){q(r).addClass(s)}else if(S===false){this.invalidate()}}return this};this.removeStyleClass=function(s,S){if(s&&this.aCustomStyleClasses){for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){this.aCustomStyleClasses.splice(i,1);var r=this.getDomRef();if(r){q(r).removeClass(s)}else if(S===false){this.invalidate()}}}}return this};this.toggleStyleClass=function(s,a){if(s&&typeof s==="string"){if(a===true){this.addStyleClass(s)}else if(a===false){this.removeStyleClass(s)}else if(a===undefined){this.hasStyleClass(s)?this.removeStyleClass(s):this.addStyleClass(s)}else{q.sap.log.warning(this.toString()+"- toggleStyleClass(): bAdd should be a boolean or undefined, but is '"+a+"'")}}return this};this.hasStyleClass=function(s){if(s&&this.aCustomStyleClasses){for(var i=this.aCustomStyleClasses.length-1;i>=0;i--){if(this.aCustomStyleClasses[i]==s){return true}}}return false};this.getMetadata().addPublicMethods(["addStyleClass","removeStyleClass","toggleStyleClass","hasStyleClass"])};return C},true)};sap.ui.define("sap/ui/core/Control",['jquery.sap.global','./CustomStyleClassSupport','./Element'],function(q,C,E){"use strict";var a=E.extend("sap.ui.core.Control",{metadata:{stereotype:"control","abstract":true,publicMethods:["placeAt","attachBrowserEvent","detachBrowserEvent"],library:"sap.ui.core",properties:{"busy":{type:"boolean",defaultValue:false},"busyIndicatorDelay":{type:"int",defaultValue:1000}},aggregations:{},associations:{},events:{}},constructor:function(i,s){this.bAllowTextSelection=true;E.apply(this,arguments);this.bOutput=this.getDomRef()!=null;if(this._sapUiCoreLocalBusy_initBusyIndicator){this._sapUiCoreLocalBusy_initBusyIndicator()}},renderer:null});a.prototype.clone=function(){var c=E.prototype.clone.apply(this,arguments);if(this.aBindParameters){for(var i=0,l=this.aBindParameters.length;i<l;i++){var p=this.aBindParameters[i];c.attachBrowserEvent(p.sEventType,p.fnHandler,p.oListener!==this?p.oListener:undefined)}}c.bAllowTextSelection=this.bAllowTextSelection;return c};C.apply(a.prototype);a.prototype.isActive=function(){return q.sap.domById(this.sId)!=null};a.prototype.invalidate=function(o){var u;if(this.bOutput&&(u=this.getUIArea())){if(!this._bIsBeingDestroyed){u.addInvalidatedControl(this)}}else{var p=this.getParent();if(p&&(this.bOutput||!(this.getVisible&&this.getVisible()===false))){p.invalidate(this)}}};a.prototype.rerender=function(){sap.ui.core.UIArea.rerenderControl(this)};a.prototype.allowTextSelection=function(A){this.bAllowTextSelection=A;return this};a.prototype.attachBrowserEvent=function(e,h,l){if(e&&(typeof(e)==="string")){if(h&&typeof(h)==="function"){if(!this.aBindParameters){this.aBindParameters=[]}l=l||this;var p=function(){h.apply(l,arguments)};this.aBindParameters.push({sEventType:e,fnHandler:h,oListener:l,fnProxy:p});this.$().bind(e,p)}}return this};a.prototype.detachBrowserEvent=function(e,h,l){if(e&&(typeof(e)==="string")){if(h&&typeof(h)==="function"){var $=this.$(),i,p;l=l||this;if(this.aBindParameters){for(i=this.aBindParameters.length-1;i>=0;i--){p=this.aBindParameters[i];if(p.sEventType===e&&p.fnHandler===h&&p.oListener===l){this.aBindParameters.splice(i,1);$.unbind(e,p.fnProxy)}}}}}return this};a.prototype.getRenderer=function(){return sap.ui.core.RenderManager.getRenderer(this)};a.prototype.placeAt=function(r,p){var c=sap.ui.getCore();if(c.isInitialized()){var o=r;if(typeof o==="string"){o=c.byId(r)}var i=false;if(!(o instanceof E)){o=c.createUIArea(r);i=true}if(!o){return}if(!i){var b=o.getMetadata().getAllAggregations()["content"];var d=true;if(b){if(!b.multiple||b.type!="sap.ui.core.Control"){d=false}}else{if(!o.addContent||!o.insertContent||!o.removeAllContent){d=false}}if(!d){q.sap.log.warning("placeAt cannot be processed because container "+o+" does not have an aggregation 'content'.");return}}if(typeof p==="number"){o.insertContent(this,p)}else{p=p||"last";switch(p){case"last":o.addContent(this);break;case"first":o.insertContent(this,0);break;case"only":o.removeAllContent();o.addContent(this);break;default:q.sap.log.warning("Position "+p+" is not supported for function placeAt.")}}}else{var t=this;c.attachInitEvent(function(){t.placeAt(r,p)})}return this};a.prototype.onselectstart=function(b){if(!this.bAllowTextSelection){b.preventDefault();b.stopPropagation()}};a.prototype.getIdForLabel=function(){return this.getId()};a.prototype.destroy=function(s){this._bIsBeingDestroyed=true;this._cleanupBusyIndicator();sap.ui.core.ResizeHandler.deregisterAllForControl(this.getId());E.prototype.destroy.call(this,s)};(function(){var p="focusin focusout keydown keypress keyup",b={onAfterRendering:function(){if(this.getProperty("busy")===true&&this.$()){A.apply(this)}}},A=function(){var $=this.$(this._sBusySection),F=["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"];if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}var t=$.get(0)&&$.get(0).tagName;if(t&&q.inArray(t.toLowerCase(),F)>=0){q.sap.log.warning("Busy Indicator cannot be placed in elements with tag "+t);return}if($.css('position')=='static'){this._busyStoredPosition='static';$.css('position','relative')}var B=q('<div class="sapUiLocalBusyIndicator"><div class="sapUiLocalBusyIndicatorAnimation"><div class="sapUiLocalBusyIndicatorBox"></div><div class="sapUiLocalBusyIndicatorBox"></div><div class="sapUiLocalBusyIndicatorBox"></div></div></div>');B.attr("id",this.getId()+"-busyIndicator");$.append(B);$.addClass('sapUiLocalBusy');if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId)}this._busyDelayedCallId=q.sap.delayedCall(1200,this,f);h.apply(this,[true])},h=function(B){if(B){var $=this.$(this._sBusySection),t=$.find('[tabindex]'),c=this;this._busyTabIndices=[];t.each(function(i,o){var r=q(o),T=r.attr('tabindex');if(T<0)return true;c._busyTabIndices.push({ref:r,tabindex:T});r.attr('tabindex',-1);r.bind(p,P)})}else{if(this._busyTabIndices){q.each(this._busyTabIndices,function(i,o){o.ref.attr('tabindex',o.tabindex);o.ref.unbind(p,P)})}this._busyTabIndices=[]}},P=function(e){e.preventDefault();e.stopImmediatePropagation()},f=function(){var $=this.$(this._sBusySection).children('.sapUiLocalBusyIndicator').children('.sapUiLocalBusyIndicatorAnimation');var t=this;t._busyAnimationTimer1=setTimeout(function(){$.children(":eq(0)").addClass('active');$.children(":not(:eq(0))").removeClass('active');t._busyAnimationTimer2=setTimeout(function(){$.children(":eq(1)").addClass('active');$.children(":not(:eq(1))").removeClass('active');t._busyAnimationTimer3=setTimeout(function(){$.children(":eq(2)").addClass('active');$.children(":not(:eq(2))").removeClass('active');t._busyAnimationTimer4=setTimeout(function(){$.children().removeClass('active')},150)},150)},150)},150);this._busyDelayedCallId=q.sap.delayedCall(1200,this,f)};a.prototype.setBusy=function(B,s){this._sBusySection=s;var $=this.$(this._sBusySection);if(B==this.getProperty("busy")){return}this.setProperty("busy",B,true);if(B){this.addDelegate(b,false,this)}else{this.removeDelegate(b);if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}}if(!this.getDomRef()){return}if(B){if(this.getBusyIndicatorDelay()<=0){A.apply(this)}else{this._busyIndicatorDelayedCallId=q.sap.delayedCall(this.getBusyIndicatorDelay(),this,A)}}else{this.$("busyIndicator").remove();this.$().removeClass('sapUiLocalBusy');if(this._busyStoredPosition){$.css('position',this._busyStoredPosition);delete this._busyStoredPosition}h.apply(this,[false]);if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId);delete this._busyDelayedCallId}}};a.prototype.isBusy=function(){return this.getProperty("busy")};a.prototype.setBusyIndicatorDelay=function(d){this.setProperty("busyIndicatorDelay",d,true);return this};a.prototype._cleanupBusyIndicator=function(){if(this._busyIndicatorDelayedCallId){q.sap.clearDelayedCall(this._busyIndicatorDelayedCallId);delete this._busyIndicatorDelayedCallId}if(this._busyDelayedCallId){q.sap.clearDelayedCall(this._busyDelayedCallId);delete this._busyDelayedCallId}if(this._busyAnimationTimer1){clearTimeout(this._busyAnimationTimer1);delete this._busyAnimationTimer1}if(this._busyAnimationTimer2){clearTimeout(this._busyAnimationTimer2);delete this._busyAnimationTimer2}if(this._busyAnimationTimer3){clearTimeout(this._busyAnimationTimer3);delete this._busyAnimationTimer3}if(this._busyAnimationTimer4){clearTimeout(this._busyAnimationTimer4);delete this._busyAnimationTimer4}}})();return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIArea')){jQuery.sap.declare('sap.ui.core.UIArea');sap.ui.define("sap/ui/core/UIArea",['jquery.sap.global','sap/ui/base/ManagedObject','./Element','jquery.sap.act','jquery.sap.ui'],function(q,M,E){"use strict";var r=q.sap.log.getLogger("sap.ui.Rendering",((window["sap-ui-config"]&&window["sap-ui-config"]["xx-debugRendering"])||/sap-ui-xx-debug(R|-r)endering=(true|x|X)/.test(document.location.search))?q.sap.log.Level.DEBUG:Math.min(q.sap.log.Level.INFO,q.sap.log.getLevel())),d=function(c){return c},D=q.noop,f=q.noop;if(r.isLoggable()){d=function(c){var l;try{throw new Error()}catch(e){l=e.stack||e.stacktrace||(e.sourceURL?e.sourceURL+":"+e.line:null);l=l?l.split(/\n\s*/g).slice(2):undefined}return{obj:c,location:l}};D=function(t,c){var C=sap.ui.getCore(),R={},n,o;for(n in c){o=C.byId(n);R[n]={type:o?o.getMetadata().getName():(c[n].obj===t?"UIArea":"(no such control)"),location:c[n].location,reason:c[n].reason}}r.debug("  UIArea '"+t.getId()+"', pending updates: "+JSON.stringify(R,null,"\t"))};f=function(b,a){var n;for(n in a){if(b[n]!=null){if(b[n].obj!==a[n].obj){a[n].reason="replaced during rendering"}else{a[n].reason="invalidated again during rendering"}}else{a[n].reason="invalidated during rendering"}}}}var U=M.extend("sap.ui.core.UIArea",{constructor:function(c,R){if(arguments.length===0){return}M.apply(this);this.oCore=c;this.bLocked=false;this.bInitial=true;this.aContentToRemove=[];this.bNeedsRerendering=false;if(R!=null){this.setRootNode(R);this.bNeedsRerendering=this.bNeedsRerendering&&!q.sap.domById(R.id+"-Init")}this.mInvalidatedControls={};if(!this.bNeedsRerendering){this.bRenderSelf=false}else{this.oCore.addInvalidatedUIArea(this)}},metadata:{publicMethods:["setRootNode","getRootNode","setRootControl","getRootControl","lock","unlock","isLocked"],aggregations:{content:{name:"content",type:"sap.ui.core.Control",multiple:true,singularName:"content"},dependents:{name:"dependents",type:"sap.ui.core.Control",multiple:true}}}});U.prototype.isInvalidateSuppressed=function(){return this.iSuppressInvalidate>0};U.prototype.getId=function(){return this.oRootNode?this.oRootNode.id:null};U.prototype.getUIArea=function(){return this};U.prototype.setRootNode=function(R){if(this.oRootNode===R){return}if(this.oRootNode){this._ondetach()}this.oRootNode=R;if(this.getContent().length>0){this.invalidate()}if(this.oRootNode){this._onattach()}};U.prototype.getRootNode=function(){return this.oRootNode};U.prototype.setRootControl=function(R){this.removeAllContent();this.addContent(R)};U.prototype.getRootControl=function(i){var c=this.getContent();if(c.length>0){if(i>=0&&i<c.length){return c[i]}return c[0]}return null};U.prototype._addRemovedContent=function(o){if(this.oRootNode&&o){this.aContentToRemove.push(o)}};U.prototype.addContent=function(c,_){this.addAggregation("content",c,_);if(_!==true){this.invalidate()}return this};U.prototype.removeContent=function(c,_){var C=this.removeAggregation("content",c,_);if(!_){var o;if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}return C};U.prototype.removeAllContent=function(){var c=this.removeAllAggregation("content");for(var i=0;i<c.length;i++){var o;var C=c[i];if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}return c};U.prototype.destroyContent=function(){var c=this.getContent();for(var i=0;i<c.length;i++){var o;var C=c[i];if(C&&C.getDomRef){o=C.getDomRef()}this._addRemovedContent(o)}this.destroyAggregation("content");return this};U.prototype.lock=function(){this.bLocked=true};U.prototype.unlock=function(){if(this.bLocked&&this.bNeedsRerendering){this.oCore.addInvalidatedUIArea(this)}this.bLocked=false};U.prototype.isLocked=function(){return this.bLocked};U.prototype.getBindingContext=function(){return null};U.prototype.getEventingParent=function(){return this.oCore};U.prototype.isActive=function(){return q.sap.domById(this.getId())!=null};U.prototype.invalidate=function(){this.addInvalidatedControl(this)};U.prototype.addInvalidatedControl=function(c){if(this.bRenderSelf){return}if(!this.bNeedsRerendering){this.oCore.addInvalidatedUIArea(this)}var i=c.getId();if(c===this){this.bRenderSelf=true;this.bNeedsRerendering=true;this.mInvalidatedControls={};this.mInvalidatedControls[i]=d(this);return}if(this.mInvalidatedControls[i]){return}if(!this.bRenderSelf){this.mInvalidatedControls[i]=d(c);this.bNeedsRerendering=true}};U.prototype.rerender=function(a){var t=this;function c(){t.bRenderSelf=false;t.aContentToRemove=[];t.mInvalidatedControls={};t.bNeedsRerendering=false}if(a){this.bNeedsRerendering=true}if(this.bLocked||!this.bNeedsRerendering){return false}var R=this.bRenderSelf,C=this.aContentToRemove,I=this.mInvalidatedControls,u=false;c();q.sap.measure.pause("renderPendingUIUpdates");q.sap.measure.start(this.getId()+"---rerender","Rerendering of "+this.getMetadata().getName());D(this,I);if(R){if(this.oRootNode){r.debug("Full Rendering of UIArea '"+this.getId()+"'");sap.ui.core.RenderManager.preserveContent(this.oRootNode,false,this.bInitial);this.bInitial=false;var b=function(h,j){var l=h.length;var k;for(var i=0;i<l;i++){k=j?h[i].getDomRef():h[i];if(k&&!sap.ui.core.RenderManager.isPreservedContent(k)&&t.oRootNode===k.parentNode){q(k).remove()}}return l};b(C);var e=this.getContent();var l=b(e,true);for(var i=0;i<l;i++){this.oCore.oRenderManager.render(e[i],this.oRootNode,true)}u=true}else{r.debug("Full Rendering of UIArea '"+this.getId()+"' postponed, no root node")}}else{var g=function(A){while(A&&A!==t){if(I.hasOwnProperty(A.getId())){return true}if(A&&A.getMetadata&&A.getMetadata().isInstanceOf("sap.ui.core.PopupInterface")){break}A=A.getParent()}return false};for(var n in I){var o=this.oCore.byId(n);if(o&&!g(o.getParent())){o.rerender();u=true}}}f(I,this.mInvalidatedControls);q.sap.measure.end(this.getId()+"---rerender");q.sap.measure.resume("renderPendingUIUpdates");return u};U.prototype._onControlRendered=function(c){var i=c.getId();if(this.mInvalidatedControls[i]){delete this.mInvalidatedControls[i]}};U.rerenderControl=function(c){var o=c?c.getDomRef():null;var p=o&&o.parentNode;if(p){var u=c.getUIArea();var a=u?u.oCore.oRenderManager:sap.ui.getCore().createRenderManager();r.debug("Rerender Control '"+c.getId()+"'"+(u?"":" (using a temp. RenderManager)"));sap.ui.core.RenderManager.preserveContent(o,true,false);a.render(c,p)}else{var u=c.getUIArea();u&&u._onControlRendered(c);r.warning("Couldn't rerender '"+c.getId()+"', as its DOM location couldn't be determined")}};U.prototype._handleEvent=function(e){var o=null;o=q(e.target).control(0);q.sap.act.refresh();if(o===null){return}if(e.isMarked("delayedMouseEvent")){return}if(e.isMarked("handledByUIArea")){e.setMark("firstUIArea",false);return}e.setMarked("firstUIArea");e.srcControl=o;if(e.type==="contextmenu"&&e.shiftKey&&e.altKey&&!!(e.metaKey||e.ctrlKey)){q.sap.log.info("Suppressed forwarding the contextmenu event as control event because CTRL+SHIFT+ALT is pressed!");return}this.oCore._handleControlEvent(e,this.getId());if(this.bLocked||this.oCore.isLocked()){return}var a=[];if(e.getPseudoTypes){a=e.getPseudoTypes()}a.push(e.type);while(o&&o instanceof E&&o.isActive()&&!e.isPropagationStopped()){for(var i=0,b=a.length;i<b;i++){var t=a[i];e.type=t;e.currentTarget=o.getDomRef();o._handleEvent(e);if(e.isImmediatePropagationStopped()){break}}if(e.isPropagationStopped()){break}if(o.bStopEventBubbling){break}var c=o.getDomRef();if(!c){break}c=c.parentNode;o=null;if(e.isMarked("fromMouseout")&&q.sap.containsOrEquals(c,e.relatedTarget)){break}while(c&&c!==this.getRootNode()){if(c.id){o=q(c).control(0);if(o){break}}c=c.parentNode}}e.currentTarget=this.getRootNode();(e.originalEvent||e)._sapui_handledByUIArea=true;if(e.isPropagationStopped()){q.sap.log.debug("'"+e.type+"' propagation has been stopped")}var n=e.type;if(n!="mousemove"&&n!="mouseover"&&n!="scroll"&&n!="mouseout"){var g=q(e.target).control(0);if(g){q.sap.log.debug("Event fired: '"+e.type+"' on "+g,"","sap.ui.core.UIArea")}else{q.sap.log.debug("Event fired: '"+e.type+"'","","sap.ui.core.UIArea")}}};U.prototype._onattach=function(){var o=this.getRootNode();if(o==null){return}q(o).attr("data-sap-ui-area",o.id).bind(q.sap.ControlEvents.join(" "),q.proxy(this._handleEvent,this))};U.prototype._ondetach=function(){var o=this.getRootNode();if(o==null){return}q(o).removeAttr("data-sap-ui-area").unbind()};U.prototype.clone=function(){throw new Error("UIArea can't be cloned")};U._oRenderLog=r;return U},true)};sap.ui.define("sap/ui/core/Core",['jquery.sap.global','sap/ui/Device','sap/ui/Global','sap/ui/base/DataType','sap/ui/base/EventProvider','./Component','./Configuration','./Control','./Element','./ElementMetadata','./FocusHandler','./RenderManager','./ResizeHandler','./ThemeCheck','./UIArea','./tmpl/Template','jquery.sap.act','jquery.sap.dom','jquery.sap.events','jquery.sap.mobile','jquery.sap.properties','jquery.sap.resources','jquery.sap.script'],function(q,D,G,a,E,C,c,d,e,g,F,R,h,T,U,j){"use strict";var k=E.extend("sap.ui.core.Core",{constructor:function(){if(sap.ui.getCore&&sap.ui.getCore()){return sap.ui.getCore()}var t=this,l=q.sap.log,M="sap.ui.core.Core";E.apply(this);this.bBooted=false;this.bInitialized=false;this.bDomReady=false;this.aPlugins=[];this.mLibraries={};this.mResourceBundles={};this.mUIAreas={};this.oModels={};this.oEventBus=null;this.mElements={};this.mObjects={"component":{},"template":{}};this.oRootComponent=null;this.aInitListeners=[];this.bInitLegacyLib=false;l.info("Creating Core",null,M);this.oConfiguration=new c(this);if(this.oConfiguration["xx-bindingSyntax"]==="complex"){sap.ui.base.ManagedObject.bindingParser=sap.ui.base.BindingParser.complexParser}if(this.oConfiguration["xx-designMode"]==true){sap.ui.base.BindingParser._keepBindingStrings=true}g.prototype.register=function(K){t.registerElementClass(K)};e.prototype.register=function(){t.registerElement(this)};e.prototype.deregister=function(){t.deregisterElement(this)};C.prototype.register=function(){t.registerObject(this)};C.prototype.deregister=function(){t.deregisterObject(this)};j.prototype.register=function(){t.registerObject(this)};j.prototype.deregister=function(){t.deregisterObject(this)};var m=this.oConfiguration.modules;if(this.oConfiguration.getDebug()){m.unshift("sap-ui-debug")}var i=q.inArray("sap.ui.core.library",m);if(i!=0){if(i>0){m.splice(i,1)}m.unshift("sap.ui.core.library")}l.info("Declared modules: "+m,M);var o=window["sap-ui-config"];if(this.oConfiguration.themeRoot){o=o||{};o.themeroots=o.themeroots||{};o.themeroots[this.oConfiguration.getTheme()]=this.oConfiguration.themeRoot}if(o){if(o.themeroots){for(var f in o.themeroots){var n=o.themeroots[f];if(typeof n==="string"){this.setThemeRoot(f,n)}else{for(var p in n){if(p.length>0){this.setThemeRoot(f,[p],n[p])}else{this.setThemeRoot(f,n[p])}}}}}}this.sTheme=this.oConfiguration.getTheme();q(document.documentElement).addClass("sapUiTheme-"+this.sTheme);l.info("Declared theme "+this.sTheme,null,M);if(this.oConfiguration.getRTL()){q(document.documentElement).attr("dir","rtl");l.info("RTL mode activated",null,M)}var $=q("html");var b=D.browser;var s=b.name;if(s===b.BROWSER.CHROME){q.browser.safari=false;q.browser.chrome=true}else if(s===b.BROWSER.SAFARI){q.browser.safari=true;q.browser.chrome=false;if(b.mobile){s="m"+s}}if(s){q.browser.fVersion=b.version;q.browser.mobile=b.mobile;s=s+Math.floor(b.version);$.attr("data-sap-ui-browser",s);l.debug("Browser-Id: "+s,null,M)}$.attr("data-sap-ui-os",D.os.name+D.os.versionStr);var u=null;switch(D.os.name){case D.os.OS.IOS:u="sap-ios";break;case D.os.OS.ANDROID:u="sap-android";break;case D.os.OS.BLACKBERRY:u="sap-bb";break;case D.os.OS.WINDOWS_PHONE:u="sap-winphone";break}if(u){$.addClass(u)}if(this.oConfiguration.getWeinreId()){l.info("Starting WEINRE Remote Web Inspector");var w="<script src=\"";w+=this.oConfiguration.getWeinreServer();w+="/target/target-script-min.js#";w+=q.sap.encodeURL(this.oConfiguration.getWeinreId());w+="\"></script>";document.write(w)}sap.ui.getCore=q.sap.getter(this.getInterface());R.initHTML5Support();this.oRenderManager=new R();var S=q.sap.syncPoint("UI5 Document Ready",function(O,K){t.handleLoad()});var v=S.startTask("document.ready");var x=S.startTask("preload and boot");q(function(){l.trace("document is ready");S.finishTask(v)});var y=q.sap.syncPoint("UI5 Core Preloads and Bootstrap Script",function(O,K){l.trace("Core loaded: open="+O+", failures="+K);t._boot();S.finishTask(x)});var z=this.oConfiguration["xx-bootTask"];if(z){var A=y.startTask("custom boot task");z(function(K){y.finishTask(A,typeof K==="undefined"||K===true)})}var B=new q.sap.Version(this.oConfiguration.getCompatibilityVersion("flexBoxPolyfill"));if(B.compareTo("1.16")>=0){q.support.useFlexBoxPolyfill=false}else if(!q.support.flexBoxLayout&&!q.support.newFlexBoxLayout&&!q.support.ie10FlexBoxLayout){q.support.useFlexBoxPolyfill=true}else{q.support.useFlexBoxPolyfill=false}var H=y.startTask("bootstrap script");this.boot=function(){if(this.bBooted){return}this.bBooted=true;y.finishTask(H)};var P=this.oConfiguration.preload;if(window["sap-ui-debug"]){P=""}if(P==="auto"){P=(window["sap-ui-optimized"]&&!this.oConfiguration['xx-loadAllMode'])?"sync":""}this.oConfiguration.preload=P;if(P==="sync"||P==="async"){var I=P!=="sync";q.each(m,function(i,K){if(K.match(/\.library$/)){q.sap.preloadModules(K+"-preload",I,y)}})}var J=this.oConfiguration.getAppCacheBuster();if(J&&J.length>0){q.sap.require("sap.ui.core.AppCacheBuster");sap.ui.core.AppCacheBuster.boot(y)}},metadata:{publicMethods:["boot","isInitialized","isThemeApplied","attachInitEvent","attachInit","getRenderManager","createRenderManager","getConfiguration","setRoot","createUIArea","getUIArea","getUIDirty","getElementById","getCurrentFocusedControlId","getControl","getComponent","getTemplate","lock","unlock","isLocked","attachEvent","detachEvent","applyChanges","getEventBus","applyTheme","setThemeRoot","attachThemeChanged","detachThemeChanged","getStaticAreaRef","registerPlugin","unregisterPlugin","getLibraryResourceBundle","byId","getLoadedLibraries","loadLibrary","initLibrary","includeLibraryTheme","setModel","getModel","hasModel","isMobile","attachControlEvent","detachControlEvent","attachIntervalTimer","detachIntervalTimer","attachParseError","detachParseError","fireParseError","attachValidationError","detachValidationError","fireValidationError","attachFormatError","detachFormatError","fireFormatError","attachValidationSuccess","detachValidationSuccess","fireValidationSuccess","attachLocalizationChanged","detachLocalizationChanged","attachLibraryChanged","detachLibraryChanged","isStaticAreaRef","createComponent","getRootComponent","getApplication"]}});k.M_EVENTS={ControlEvent:"ControlEvent",UIUpdated:"UIUpdated",ThemeChanged:"ThemeChanged",LocalizationChanged:"localizationChanged",LibraryChanged:"libraryChanged",ValidationError:"validationError",ParseError:"parseError",FormatError:"formatError",ValidationSuccess:"validationSuccess"};k.prototype._boot=function(){this.lock();var b=this.oConfiguration['xx-preloadLibCss'];if(b.length>0){var A=b[0].slice(0,1)==="!";if(A){b[0]=b[0].slice(1)}if(b[0]==="*"){b.splice(0,1);var p=0;q.each(this.oConfiguration.modules,function(i,f){var m=f.match(/^(.*)\.library$/);if(m){b.splice(p,0,m[1])}})}if(!A){this.includeLibraryTheme("sap-ui-merged",undefined,"?l="+b.join(","))}}var t=this;q.each(this.oConfiguration.modules,function(i,f){var m=f.match(/^(.*)\.library$/);if(m){t.loadLibrary(m[1])}else{q.sap.require(f)}});this.unlock()};k.prototype.applyTheme=function(t,s){t=this.oConfiguration._normalizeTheme(t,s);if(s){this.setThemeRoot(t,s)}if(t&&this.sTheme!=t){var b=this.sTheme;this._updateThemeUrls(t);this.sTheme=t;this.oConfiguration._setTheme(t);q(document.documentElement).removeClass("sapUiTheme-"+b).addClass("sapUiTheme-"+t);if(this.oThemeCheck){this.oThemeCheck.fireThemeChangedEvent(false,true)}}};k.prototype._updateThemeUrls=function(t){var b=this,s=this.oConfiguration.getRTL()?"-RTL":"";q("link[id^=sap-ui-theme-]").each(function(){var l=this.id.slice(13),L=this.href.slice(this.href.lastIndexOf("/")+1),S="library",H,p,$=q(this);if((p=l.indexOf("-["))>0){S+=l.slice(p+2,-1);l=l.slice(0,p)}if(L===(S+".css")||L===(S+"-RTL.css")){L=S+s+".css"}if($.attr("sap-ui-css-count")){$.remove()}H=b._getThemePath(l,t)+L;if(H!=this.href){this.href=H;$.removeAttr("sap-ui-ready")}})};k.prototype._getThemePath=function(l,t){if(this._mThemeRoots){var p=this._mThemeRoots[t+" "+l]||this._mThemeRoots[t];if(p){p=p+l.replace(/\./g,"/")+"/themes/"+t+"/";q.sap.registerModulePath(l+".themes."+t,p);return p}}return q.sap.getModulePath(l+".themes."+t,"/")};k.prototype.setThemeRoot=function(t,l,s){if(!this._mThemeRoots){this._mThemeRoots={}}if(s===undefined){s=l;l=undefined}s=s+(s.slice(-1)=="/"?"":"/");if(l){for(var i=0;i<l.length;i++){var b=l[i];this._mThemeRoots[t+" "+b]=s}}else{this._mThemeRoots[t]=s}return this};k.prototype.init=function(){if(this.bInitialized){return}var b=q.sap.log,M="sap.ui.core.Core.init()";this.boot();b.info("Initializing",null,M);this.oFocusHandler=new F(document.body,this);this.oResizeHandler=new h(this);this.oThemeCheck=new T(this);b.info("Initialized",null,M);this.bInitialized=true;b.info("Starting Plugins",null,M);this.startPlugins();b.info("Plugins started",null,M);var o=this.oConfiguration;if(o.areas){for(var i=0,l=o.areas.length;i<l;i++){this.createUIArea(o.areas[i])}o.areas=undefined}if(o.onInit){if(typeof o.onInit==="function"){o.onInit()}else{q.sap.globalEval(o.onInit)}o.onInit=undefined}this.oThemeCheck.fireThemeChangedEvent(true);var s=o.getRootComponent();if(s){b.info("Loading Root Component: "+s,null,M);var m=sap.ui.component({name:s});this.oRootComponent=m;var n=o["xx-rootComponentNode"];if(n&&m instanceof sap.ui.core.UIComponent){var p=q.sap.domById(n);if(p){b.info("Creating ComponentContainer for Root Component: "+s,null,M);var t=new sap.ui.core.ComponentContainer({component:m,propagateModel:true});t.placeAt(p)}}}else{var A=o.getApplication();if(A){b.warning("The configuration 'application' is deprecated. Please use the configuration 'component' instead! Please migrate from sap.ui.app.Application to sap.ui.core.Component.");b.info("Loading Application: "+A,null,M);q.sap.require(A);var u=q.sap.getObject(A);var v=new u();}}var w=this.aInitListeners;this.aInitListeners=undefined;if(w&&w.length>0){b.info("Fire Loaded Event",null,M);q.each(w,function(i,f){f()})}this.renderPendingUIUpdates()};k.prototype.handleLoad=function(){this.bDomReady=true;var w=this.isLocked();if(!w){this.lock()}this.init();if(!w){this.unlock()}};k.prototype.isInitialized=function(){return this.bInitialized};k.prototype.isThemeApplied=function(){return T.themeLoaded};k.prototype.attachInitEvent=function(f){if(this.aInitListeners){this.aInitListeners.push(f)}};k.prototype.attachInit=function(f){if(this.aInitListeners){this.aInitListeners.push(f)}else{f()}};k.prototype.lock=function(){this.bLocked=true};k.prototype.unlock=function(){this.bLocked=false};k.prototype.isLocked=function(){return this.bLocked};k.prototype.getConfiguration=function(){return this.oConfiguration};k.prototype.getRenderManager=function(){return this.createRenderManager()};k.prototype.createRenderManager=function(){return(new R()).getInterface()};k.prototype.getCurrentFocusedControlId=function(){if(!this.isInitialized()){throw new Error("Core must be initialized")}return this.oFocusHandler.getCurrentFocusedControlId()};k.prototype.loadLibrary=function(l,u){if(!this.mLibraries[l]){var m=l+".library",A;if(u){q.sap.registerModulePath(l,u)}if(this.oConfiguration['xx-loadAllMode']&&!q.sap.isDeclared(m)){A=m+"-all";q.sap.log.debug("load all-in-one file "+A);q.sap.require(A)}else if(this.oConfiguration.preload==='sync'||this.oConfiguration.preload==='async'){q.sap.preloadModules(m+"-preload",false)}q.sap.require(m);if(!this.mLibraries[l]){q.sap.log.warning("library "+l+" didn't initialize itself");this.initLibrary(l)}if(this.oThemeCheck&&this.isInitialized()){this.oThemeCheck.fireThemeChangedEvent(true)}}return this.mLibraries[l]};k.prototype.createComponent=function(v,u,i,s){if(typeof v==="string"){v={name:v,url:u};if(typeof i==="object"){v.settings=i}else{v.id=i;v.settings=s}}return sap.ui.component(v)};k.prototype.getRootComponent=function(){return this.oRootComponent};k.prototype.initLibrary=function(l){var L=typeof l==="string",o=L?{name:l}:l,s=o.name,b=q.sap.log,M="sap.ui.core.Core.initLibrary()";if(L){b.warning("[Deprecated] library "+s+" uses old fashioned initLibrary() call (rebuild with newest generator)")}if(!s||this.mLibraries[s]){return}b.debug("Analyzing Library "+s,null,M);this.mLibraries[s]=o=q.extend({dependencies:[],types:[],interfaces:[],controls:[],elements:[]},o);function f(){var p=q.sap.properties({url:sap.ui.resource(s,"library.properties")});o.version=p.getProperty(s+"[version]");var t=p.getProperty(s+"[dependencies]");b.debug("Required Libraries: "+t,null,M);o.dependencies=(t&&t.split(/[,;| ]/))||[];var K=p.getKeys(),u=/(.+)\.(type|interface|control|element)$/,v;for(var i=0;i<K.length;i++){var w=p.getProperty(K[i]);if(v=w.match(u)){o[v[2]+"s"].push(K[i])}}}if(L){f()}for(var i=0;i<o.dependencies.length;i++){var m=o.dependencies[i];b.debug("resolve Dependencies to "+m,null,M);if(!this.mLibraries[m]){b.warning("Dependency from "+s+" to "+m+" has not been resolved by library itself",null,M);this.loadLibrary(m)}}a.registerInterfaceTypes(o.interfaces);var n=o.controls.concat(o.elements);for(var i=0;i<n.length;i++){sap.ui.lazyRequire(n[i],"new extend getMetadata")}if(!o.noLibraryCSS&&q.inArray(s,this.oConfiguration['xx-preloadLibCss'])<0){this.includeLibraryTheme(s)}o.sName=o.name;o.aControls=o.controls;if(!q.sap.isDeclared(s+".library")){b.warning("Library Module "+s+".library"+" not loaded automatically",null,M);q.sap.require(s+".library")}this.fireLibraryChanged({name:s,stereotype:"library",operation:"add",metadata:o})};k.prototype.includeLibraryTheme=function(l,v,Q){if((l!="sap.ui.legacy")&&(l!="sap.ui.classic")){if(!v){v=""}var s=(this.oConfiguration.getRTL()?"-RTL":"");var L,b=l+(v.length>0?"-["+v+"]":v);if(l&&l.indexOf(":")==-1){L="library"+v+s}else{L=l.substring(l.indexOf(":")+1)+v;l=l.substring(0,l.indexOf(":"))}var f=this._getThemePath(l,this.sTheme)+L+".css"+(Q?Q:"");q.sap.log.info("Including "+f+" -  sap.ui.core.Core.includeLibraryTheme()");q.sap.includeStyleSheet(f,"sap-ui-theme-"+b);if(sap.ui.core.theming&&sap.ui.core.theming.Parameters){sap.ui.core.theming.Parameters._addLibraryTheme(b)}}};k.prototype.getLoadedLibraries=function(){return q.extend({},this.mLibraries)};k.prototype.getLibraryResourceBundle=function(l,L){l=l||"sap.ui.core";L=L||this.getConfiguration().getLanguage();var K=l+"/"+L;if(!this.mResourceBundles[K]){var u=sap.ui.resource(l,'messagebundle.properties');this.mResourceBundles[K]=q.sap.resources({url:u,locale:L})}return this.mResourceBundles[K]};k.prototype.setRoot=function(o,b){if(b){b.placeAt(o,"only")}};k.prototype.createUIArea=function(o){var t=this;if(!o){throw new Error("oDomRef must not be null")}if(typeof(o)==="string"){var i=o;o=q.sap.domById(o);if(!o){throw new Error("DOM element with ID '"+i+"' not found in page, but application tries to insert content.")}}if(!o.id||o.id.length==0){o.id=q.sap.uid()}var I=o.id;if(!this.mUIAreas[I]){this.mUIAreas[I]=new U(this,o);q.each(this.oModels,function(n,m){t.mUIAreas[I].oPropagatedProperties.oModels[n]=m});this.mUIAreas[I].propagateProperties(true)}else{this.mUIAreas[I].setRootNode(o)}return this.mUIAreas[I]};k.prototype.getUIArea=function(o){var i="";if(typeof(o)=="string"){i=o}else{i=o.id}if(i){return this.mUIAreas[i]}return null};var r=U._oRenderLog;k.prototype.addInvalidatedUIArea=function(u){if(!this._sRerenderTimer){r.debug("Registering timer for delayed re-rendering");this._sRerenderTimer=q.sap.delayedCall(0,this,"renderPendingUIUpdates")}};k.MAX_RENDERING_ITERATIONS=20;k.prototype.renderPendingUIUpdates=function(){r.debug("Render pending UI updates: start");q.sap.measure.start("renderPendingUIUpdates","Render pending UI updates in all UIAreas");var u=false,l=k.MAX_RENDERING_ITERATIONS>0,L=0;this._bRendering=true;do{if(l){L++;if(L>k.MAX_RENDERING_ITERATIONS){this._bRendering=false;throw new Error("Rendering has been re-started too many times ("+L+"). Add URL parameter sap-ui-xx-debugRendering=true for a detailed analysis.")}if(L>1){r.debug("Render pending UI updates: iteration "+L)}}if(this._sRerenderTimer){q.sap.clearDelayedCall(this._sRerenderTimer);this._sRerenderTimer=undefined}var m=this.mUIAreas;for(var i in m){u=m[i].rerender()||u}}while(l&&this._sRerenderTimer);this._bRendering=false;if(u){this.fireUIUpdated()}r.debug("Render pending UI updates: finished");q.sap.measure.end("renderPendingUIUpdates")};k.prototype.getUIDirty=function(){return!!(this._sRerenderTimer||this._bRendering)};k.prototype.attachUIUpdated=function(f,l){this.attachEvent(k.M_EVENTS.UIUpdated,f,l)};k.prototype.detachUIUpdated=function(f,l){this.detachEvent(k.M_EVENTS.UIUpdated,f,l)};k.prototype.fireUIUpdated=function(p){this.fireEvent(k.M_EVENTS.UIUpdated,p)};k.prototype.attachThemeChanged=function(f,l){this.attachEvent(k.M_EVENTS.ThemeChanged,f,l)};k.prototype.detachThemeChanged=function(f,l){this.detachEvent(k.M_EVENTS.ThemeChanged,f,l)};k.prototype.fireThemeChanged=function(p){q.sap.scrollbarSize(true);if(sap.ui.core.theming&&sap.ui.core.theming.Parameters){sap.ui.core.theming.Parameters.reset(true)}var s=k.M_EVENTS.ThemeChanged;var o=q.Event(s);o.theme=p?p.theme:null;q.each(this.mElements,function(i,b){b._handleEvent(o)});q.sap.act.refresh();this.fireEvent(s,p)};k.prototype.attachLocalizationChanged=function(f,l){this.attachEvent(k.M_EVENTS.LocalizationChanged,f,l)};k.prototype.detachLocalizationChanged=function(f,l){this.detachEvent(k.M_EVENTS.LocalizationChanged,f,l)};k.prototype.fireLocalizationChanged=function(m){var t=this,s=k.M_EVENTS.LocalizationChanged,b=q.Event(s,{changes:m}),A=sap.ui.base.ManagedObject._handleLocalizationChange,f=[];q.each(m,function(i,v){f.push(i)});q.sap.log.info("localization settings changed: "+f.join(","),null,"sap.ui.core.Core");q.each(this.oModels,function(N,M){if(M&&M._handleLocalizationChange){M._handleLocalizationChange()}});function n(p){q.each(this.mUIAreas,function(){A.call(this,p)});q.each(this.mObjects["component"],function(){A.call(this,p)});q.each(this.mElements,function(){A.call(this,p)})}n.call(this,1);n.call(this,2);if(m.rtl!=undefined){q(document.documentElement).attr("dir",m.rtl?"rtl":"ltr");this._updateThemeUrls(this.sTheme);q.each(this.mUIAreas,function(){this.invalidate()});q.sap.log.info("RTL mode "+m.rtl?"activated":"deactivated")}q.each(this.mElements,function(i,o){this._handleEvent(b)});this.fireEvent(s,{changes:m})};k.prototype.attachLibraryChanged=function(f,l){this.attachEvent(k.M_EVENTS.LibraryChanged,f,l)};k.prototype.detachLibraryChanged=function(f,l){this.detachEvent(k.M_EVENTS.LibraryChanged,f,l)};k.prototype.fireLibraryChanged=function(p){this.fireEvent(k.M_EVENTS.LibraryChanged,p)};k.prototype.applyChanges=function(){this.renderPendingUIUpdates()};k.prototype.registerElementClass=function(m){var n=m.getName(),l=m.getLibraryName()||"",L=this.mLibraries[l],b=d.prototype.isPrototypeOf(m.getClass().prototype),f=false;if(!L){L=this.mLibraries[l]={dependencies:[],types:[],interfaces:[],controls:[],elements:[]}}if(b){if(q.inArray(n,L.controls)<0){L.controls.push(n);f=true}}else{if(q.inArray(n,L.elements)<0){L.elements.push(n);f=true}}if(f){q.sap.log.debug("Class "+m.getName()+" registered for library "+m.getLibraryName());this.fireLibraryChanged({name:m.getName(),stereotype:m.getStereotype(),operation:"add",metadata:m})}};k.prototype.registerElement=function(o){var b=this.byId(o.getId());if(b&&b!==o){if(this.oConfiguration.getNoDuplicateIds()){q.sap.log.error("adding element with duplicate id '"+o.getId()+"'");throw new Error("Error: adding element with duplicate id '"+o.getId()+"'")}else{q.sap.log.warning("adding element with duplicate id '"+o.getId()+"'")}}this.mElements[o.getId()]=o};k.prototype.deregisterElement=function(o){delete this.mElements[o.getId()]};k.prototype.registerObject=function(o){var i=o.getId(),t=o.getMetadata().getStereotype(),b=this.getObject(t,i);if(b&&b!==o){q.sap.log.error("adding object \""+t+"\" with duplicate id '"+i+"'");throw new Error("Error: adding object \""+t+"\" with duplicate id '"+i+"'")}this.mObjects[t][i]=o};k.prototype.deregisterObject=function(o){var i=o.getId(),t=o.getMetadata().getStereotype();delete this.mObjects[t][i]};k.prototype.byId=function(i){return i==null?undefined:this.mElements[i]};k.prototype.getControl=k.prototype.byId;k.prototype.getElementById=k.prototype.byId;k.prototype.getObject=function(t,i){return i==null?undefined:this.mObjects[t]&&this.mObjects[t][i]};k.prototype.getComponent=function(i){return this.getObject("component",i)};k.prototype.getTemplate=function(i){return this.getObject("template",i)};k.prototype.getStaticAreaRef=function(){var s="sap-ui-static";var S=q.sap.domById(s);if(!S){if(!this.bDomReady){throw new Error("DOM is not ready yet. Static UIArea cannot be created.")}var l=this.getConfiguration().getRTL()?"right":"left";S=q("<DIV/>",{id:s}).css({"height":"0","width":"0","overflow":"hidden","float":l}).prependTo(document.body)[0];this.createUIArea(S).bInitial=false}return S};k.prototype.isStaticAreaRef=function(o){return o&&(o.id==="sap-ui-static")};k._I_INTERVAL=200;h.prototype.I_INTERVAL=k._I_INTERVAL;k.prototype.attachIntervalTimer=function(f,l){if(!this.oTimedTrigger){q.sap.require("sap.ui.core.IntervalTrigger");this.oTimedTrigger=new sap.ui.core.IntervalTrigger(k._I_INTERVAL)}this.oTimedTrigger.addListener(f,l)};k.prototype.detachIntervalTimer=function(f,l){if(this.oTimedTrigger){this.oTimedTrigger.removeListener(f,l)}};k.prototype.attachControlEvent=function(f,l){this.attachEvent(k.M_EVENTS.ControlEvent,f,l)};k.prototype.detachControlEvent=function(f,l){this.detachEvent(k.M_EVENTS.ControlEvent,f,l)};k.prototype.fireControlEvent=function(p){this.fireEvent(k.M_EVENTS.ControlEvent,p)};k.prototype._handleControlEvent=function(o,u){var b=q.Event(o.type);q.extend(b,o);b.originalEvent=undefined;this.fireControlEvent({"browserEvent":b,"uiArea":u})};k.prototype.getApplication=function(){return sap.ui.getApplication&&sap.ui.getApplication()};k.prototype.registerPlugin=function(p){if(!p){return}for(var i=0,l=this.aPlugins.length;i<l;i++){if(this.aPlugins[i]===p){return}}this.aPlugins.push(p);if(this.bInitialized&&p&&p.startPlugin){p.startPlugin(this)}};k.prototype.unregisterPlugin=function(p){if(!p){return}var P=-1;for(var i=this.aPlugins.length;i--;i>=0){if(this.aPlugins[i]===p){P=i;break}}if(P==-1){return}if(this.bInitialized&&p&&p.stopPlugin){p.stopPlugin(this)}this.aPlugins.splice(P,1)};k.prototype.startPlugins=function(){for(var i=0,l=this.aPlugins.length;i<l;i++){var p=this.aPlugins[i];if(p&&p.startPlugin){p.startPlugin(this,true)}}};k.prototype.stopPlugins=function(){for(var i=0,l=this.aPlugins.length;i<l;i++){var p=this.aPlugins[i];if(p&&p.stopPlugin){p.stopPlugin(this)}}};k.prototype.setModel=function(m,n){if(!m&&this.oModels[n]){delete this.oModels[n];q.each(this.mUIAreas,function(i,u){delete u.oPropagatedProperties.oModels[n];u.propagateProperties(n)})}else if(m&&m!==this.oModels[n]){this.oModels[n]=m;q.each(this.mUIAreas,function(i,u){u.oPropagatedProperties.oModels[n]=m;u.propagateProperties(n)})}else{}return this};k.prototype.getModel=function(n){return this.oModels[n]};k.prototype.hasModel=function(){return!q.isEmptyObject(this.oModels)};k.prototype.getEventBus=function(){if(!this.oEventBus){q.sap.require("sap.ui.core.EventBus");this.oEventBus=new sap.ui.core.EventBus()}return this.oEventBus};k.prototype.attachValidationError=function(f,l){this.attachEvent(k.M_EVENTS.ValidationError,f,l);return this};k.prototype.detachValidationError=function(f,l){this.detachEvent(k.M_EVENTS.ValidationError,f,l);return this};k.prototype.attachParseError=function(f,l){this.attachEvent(k.M_EVENTS.ParseError,f,l);return this};k.prototype.detachParseError=function(f,l){this.detachEvent(k.M_EVENTS.ParseError,f,l);return this};k.prototype.attachFormatError=function(f,l){this.attachEvent(k.M_EVENTS.FormatError,f,l);return this};k.prototype.detachFormatError=function(f,l){this.detachEvent(k.M_EVENTS.FormatError,f,l);return this};k.prototype.attachValidationSuccess=function(f,l){this.attachEvent(k.M_EVENTS.ValidationSuccess,f,l);return this};k.prototype.detachValidationSuccess=function(f,l){this.detachEvent(k.M_EVENTS.ValidationSuccess,f,l);return this};k.prototype.fireParseError=function(A){this.fireEvent(k.M_EVENTS.ParseError,A);return this};k.prototype.fireValidationError=function(A){this.fireEvent(k.M_EVENTS.ValidationError,A);return this};k.prototype.fireFormatError=function(A){this.fireEvent(k.M_EVENTS.FormatError,A);return this};k.prototype.fireValidationSuccess=function(A){this.fireEvent(k.M_EVENTS.ValidationSuccess,A);return this};k.prototype.isMobile=function(){return D.browser.mobile};if(!window.sap.ui.getCore){(function(){new k()}())}sap.ui.setRoot=function(o,b){sap.ui.getCore().setRoot(o,b)};return k},true)};if(!jQuery.sap.isDeclared('sap.ui.app.Application')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.app.Application');sap.ui.define("sap/ui/app/Application",['jquery.sap.global','./ApplicationMetadata','sap/ui/core/Component'],function(q,A,C){"use strict";var a=C.extend("sap.ui.app.Application",{metadata:{"abstract":true,properties:{root:"string",config:"any"},aggregations:{rootComponent:{type:"sap.ui.core.UIComponent",multiple:false}},publicMethods:["getView"],deprecated:true},constructor:function(i,s){if(this.onError){this.onWindowError=this.onError}if(this.onBeforeExit){this.onWindowBeforeUnload=this.onBeforeExit}if(this.onExit){this.onWindowUnload=this.onExit}C.apply(this,arguments);if(sap.ui.getApplication){throw new Error("Only one instance of sap.ui.app.Application is allowed")}sap.ui.getApplication=q.proxy(this._getInstance,this);sap.ui.getCore().attachInit(q.proxy(function(){this._initRootComponent();this.main()},this))},_initRootComponent:function(){var r=this.createRootComponent();if(r){this.setRootComponent(r);var c=new sap.ui.core.ComponentContainer({component:r});c.placeAt(this.getRoot()||document.body)}},createRootComponent:function(){var r=this.getMetadata().getRootComponent();var R;if(r){R=sap.ui.component({name:r})}return R},getView:function(){return this.getRootComponent()},_getInstance:function(){return this},main:function(){},onBeforeExit:function(){},onExit:function(){},onError:null,setConfig:function(c){if(typeof c==="string"){var u=c;var c=new sap.ui.model.json.JSONModel();var r=q.sap.sjax({url:u,dataType:'json'});if(r.success){c.setData(r.data)}else{throw new Error("Could not load config file: "+u)}}if(typeof c==="object"&&!c instanceof sap.ui.model.Model){c=new sap.ui.model.JSONModel(c)}this.setProperty("config",c)},destroy:function(s){delete sap.ui.getApplication;C.prototype.destroy.apply(this,arguments)}},A);return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.AppCacheBuster')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.AppCacheBuster');sap.ui.define("sap/ui/core/AppCacheBuster",['jquery.sap.global','./Core','sap/ui/thirdparty/URI'],function(q,C,U){"use strict";var c=sap.ui.getCore().getConfiguration();var l=c.getLanguage();var s=c.getAppCacheBusterMode()==="sync";var b=c.getAppCacheBusterMode()==="batch";var i={};var a=q.ajax;var I=q.sap.includeScript;var f=q.sap.includeStyleSheet;var v=sap.ui.base.ManagedObject.prototype.validateProperty;var L=document.location.href.replace(/\?.*|#.*/g,"");var B=URI("./").absoluteTo(L);var A=B.toString();var u=URI(q.sap.getModulePath("","/../"));var o=u.toString();if(u.is("relative")){u=u.absoluteTo(L)}var d=u.normalize().toString();var r=URI("resources").absoluteTo(d).toString();var F=new RegExp("^"+q.sap.escapeRegExp(r));var E=function(e){if(e.length>0&&e.slice(-1)!=="/"){e+="/"}return e};var R=function(d,S){var e;if(q.isArray(d)&&!b){q.each(d,function(x,y){R(y,S)})}else if(q.isArray(d)&&b){var h=E(d[0]);var j=[];q.sap.log.debug("sap.ui.core.AppCacheBuster.register(\""+h+"\"); // BATCH MODE!");var k=g.normalizeURL(h);q.sap.log.debug("  --> normalized to: \""+k+"\"");q.each(d,function(x,y){var m=E(y);var z=g.normalizeURL(m);if(!i[n]){j.push(z)}});if(j.length>0){var m=k+"sap-ui-cachebuster-info.json?sap-ui-language="+l;e={url:m,type:"POST",async:!s&&!!S,dataType:"json",contentType:"text/plain",data:j.join("\n"),success:function(x){q.extend(i,x)},error:function(){q.sap.log.error("Failed to batch load AppCacheBuster index file from: \""+m+"\".")}}}}else{d=E(d);q.sap.log.debug("sap.ui.core.AppCacheBuster.register(\""+d+"\");");var n=g.normalizeURL(d);q.sap.log.debug("  --> normalized to: \""+n+"\"");if(!i[n]){var m=n+"sap-ui-cachebuster-info.json?sap-ui-language="+l;e={url:m,async:!s&&!!S,dataType:"json",success:function(x){i[n]=x},error:function(){q.sap.log.error("Failed to load AppCacheBuster index file from: \""+m+"\".")}}}}if(e){if(e.async){var p=S.startTask("load "+m);var t=e.success,w=e.error;q.extend(e,{success:function(x){t.apply(this,arguments);S.finishTask(p)},error:function(){w.apply(this,arguments);S.finishTask(p,false)}})}q.sap.log.info("Loading AppCacheBuster index file from: \""+m+"\".");q.ajax(e)}};var g={boot:function(S){var e=c.getAppCacheBuster();if(e&&e.length>0){e=e.slice();var h=true;var V=String(e[0]).toLowerCase();if(e.length===1){if(V==="true"||V==="x"){var u=URI(o);e=u.is("relative")?[u.toString()]:[]}else if(V==="false"){h=false}}if(h){g.init();R(e,S)}}},init:function(){var h=g.convertURL;var n=g.normalizeURL;var j=function(e){if(e&&typeof(e)==="string"){e=n(e);return!e.match(F)}return false};q.ajax=function(e,k){if(e&&e.url&&j(e.url)){e.url=h(e.url)}return a.apply(this,arguments)};q.sap.includeScript=function(e,k){var m=Array.prototype.slice.apply(arguments);if(j(m[0])){m[0]=h(m[0])}return I.apply(this,m)};q.sap.includeStyleSheet=function(e,k){var m=Array.prototype.slice.apply(arguments);if(j(m[0])){m[0]=h(m[0])}return f.apply(this,m)};sap.ui.base.ManagedObject.prototype.validateProperty=function(p,V){var m=this.getMetadata(),P=m.getAllProperties()[p],k;if(P&&P.type==="sap.ui.core.URI"){k=Array.prototype.slice.apply(arguments);try{if(j(k[1])){k[1]=h(k[1])}}catch(e){}}return v.apply(this,k||arguments)}},exit:function(){q.ajax=a;q.sap.includeScript=I;q.sap.includeStyleSheet=f;sap.ui.base.ManagedObject.prototype.validateProperty=v;i={}},register:function(d){R(d)},convertURL:function(e){q.sap.log.debug("sap.ui.core.AppCacheBuster.convertURL(\""+e+"\");");if(i&&e){var n=g.normalizeURL(e);q.sap.log.debug("  --> normalized to: \""+n+"\"");if(n&&g.handleURL(n)){q.each(i,function(d,m){var h;if(d&&n.length>=d.length&&n.slice(0,d.length)===d){h=n.slice(d.length);if(m[h]){e=d+"~"+m[h]+"~/"+h;q.sap.log.debug("  ==> return \""+e+"\";");return false}}})}}return e},normalizeURL:function(e){var u=URI(e||"./");if(u.is("relative")){u=u.absoluteTo(L)}return u.normalizeProtocol().normalizeHostname().normalizePort().normalizePath().toString()},handleURL:function(e){return true}};return g},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CustomizingConfiguration')){jQuery.sap.declare('sap.ui.core.CustomizingConfiguration');sap.ui.define("sap/ui/core/CustomizingConfiguration",['jquery.sap.global','./Core'],function(q,C){"use strict";var a="sap.ui.viewReplacements",b="sap.ui.viewExtensions",c="sap.ui.viewModifications",d="sap.ui.controllerExtensions";var m={};function f(t,g){q.each(m,function(n,o){if(o&&o[t]){if(g(o[t])){return false}}})};var e={log:function(){if(window.console){window.console.log(m)}},activateForComponent:function(s){q.sap.log.info("CustomizingConfiguration: activateForComponent('"+s+"')");var F=s+".Component";q.sap.require(F);var o=q.sap.getObject(F).getMetadata().getCustomizing();m[s]=o;q.sap.log.debug("CustomizingConfiguration: customizing configuration for component '"+s+"' loaded: "+JSON.stringify(o))},deactivateForComponent:function(s){q.sap.log.info("CustomizingConfiguration: deactivateForComponent('"+s+"')");delete m[s]},getViewReplacement:function(v){var r=undefined;f(a,function(o){r=o[v];return!!r});return r},getViewExtension:function(v,E){var r=undefined;f(b,function(o){r=o[v]&&o[v][E];return!!r});return r},getControllerExtension:function(s){var r=undefined;f(d,function(o){r=o[s];return!!r});return r},getCustomProperties:function(v,s){var S=undefined;f(c,function(o){var g=o[v]&&o[v][s];var u={};var V=false;if(g){q.each(g,function(n,h){if(n==="visible"){V=true;u[n]=h;q.sap.log.info("Customizing: custom value for property '"+n+"' of control '"+s+"' in View '"+v+"' applied: "+h)}else{q.sap.log.warning("Customizing: custom value for property '"+n+"' of control '"+s+"' in View '"+v+"' ignored: only the 'visible' property can be customized.")}});if(V){S=S||{};q.extend(S,u)}}});return S}};if(sap.ui.getCore().getConfiguration().getDisableCustomizing()){q.sap.log.info("CustomizingConfiguration: disabling Customizing now");q.each(e,function(n,A){if(typeof A==="function"){e[n]=function(){}}})}return e},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicatorSupport')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicatorSupport');sap.ui.define("sap/ui/core/LocalBusyIndicatorSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var L=function(){if(this===sap.ui.core.Control.prototype){this.setDelay=function(d){this.setBusyIndicatorDelay(d)}}else{q.sap.log.error("Only controls can use the LocalBusyIndicator",this)}};return L},true)};if(!jQuery.sap.isDeclared('sap.ui.core.PopupSupport')){jQuery.sap.declare('sap.ui.core.PopupSupport');sap.ui.define("sap/ui/core/PopupSupport",['jquery.sap.global','./Element'],function(q,E){"use strict";var P=function(){this.getMetadata().addPublicMethods(["getParentPopup","isInPopup","getParentPopupId","addToPopup","removeFromPopup"]);this.isInPopup=function(t){var p=this.getParentPopup(t);return p&&p.length>0};this.getParentPopup=function(t){var T=t?t:this;var $=q(T instanceof sap.ui.core.Element?T.getDomRef():T);return $.closest("[data-sap-ui-popup]")};this.getParentPopupId=function(t){var p=this.getParentPopup(t);return p.attr("data-sap-ui-popup")};this.addChildToPopup=function(p,c){var e="sap.ui.core.Popup.addFocusableContent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{id:c})};this.removeChildFromPopup=function(p){if(!p){p=this.getPopupId()}var e="sap.ui.core.Popup.removeFocusableContent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{id:this.getId()})};this.closePopup=function(p){var e="sap.ui.core.Popup.closePopup-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e)};this.increaseZIndex=function(p,i){var e="sap.ui.core.Popup.increaseZIndex-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",e,{isFromParentPopup:i?i:false})}};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.core.library')){jQuery.sap.declare('sap.ui.core.library');sap.ui.define("sap/ui/core/library",['./Core'],function(){sap.ui.getCore().initLibrary({name:"sap.ui.core",types:["sap.ui.core.AccessibleRole","sap.ui.core.BarColor","sap.ui.core.CSSColor","sap.ui.core.CSSSize","sap.ui.core.CSSSizeShortHand","sap.ui.core.Collision","sap.ui.core.Design","sap.ui.core.Dock","sap.ui.core.HorizontalAlign","sap.ui.core.ID","sap.ui.core.IconColor","sap.ui.core.ImeMode","sap.ui.core.MessageType","sap.ui.core.OpenState","sap.ui.core.Orientation","sap.ui.core.Percentage","sap.ui.core.ScrollBarAction","sap.ui.core.Scrolling","sap.ui.core.TextAlign","sap.ui.core.TextDirection","sap.ui.core.TitleLevel","sap.ui.core.URI","sap.ui.core.ValueState","sap.ui.core.VerticalAlign","sap.ui.core.Wrapping","any","boolean","float","int","sap.ui.core.mvc.ViewType","object","sap.ui.core.routing.HistoryDirection","string","void"],interfaces:["sap.ui.core.Label","sap.ui.core.PopupInterface","sap.ui.core.Toolbar"],controls:["sap.ui.core.ComponentContainer","sap.ui.core.Control","sap.ui.core.HTML","sap.ui.core.Icon","sap.ui.core.LocalBusyIndicator","sap.ui.core.ScrollBar","sap.ui.core.TooltipBase","sap.ui.core.UIComponent","sap.ui.core.mvc.HTMLView","sap.ui.core.mvc.JSONView","sap.ui.core.mvc.JSView","sap.ui.core.mvc.TemplateView","sap.ui.core.mvc.View","sap.ui.core.mvc.XMLView","sap.ui.core.tmpl.DOMElement","sap.ui.core.tmpl.Template","sap.ui.core.tmpl.TemplateControl"],elements:["sap.ui.core.CustomData","sap.ui.core.Element","sap.ui.core.Item","sap.ui.core.LayoutData","sap.ui.core.ListItem","sap.ui.core.Message","sap.ui.core.SeparatorItem","sap.ui.core.Title","sap.ui.core.VariantLayoutData","sap.ui.core.search.OpenSearchProvider","sap.ui.core.search.SearchProvider","sap.ui.core.tmpl.DOMAttribute"],version:"1.24.2"});sap.ui.define("sap/ui/core/AccessibleRole",function(){"use strict";sap.ui.core.AccessibleRole={None:"None",Alert:"Alert",AlertDialog:"AlertDialog",Application:"Application",Banner:"Banner",Button:"Button",Checkbox:"Checkbox",ColumnHeader:"ColumnHeader",Combobox:"Combobox",
/**
	 * Information about the content on the page. Examples are footnotes, copyrights, or links to privacy statements.
	 * 
	 * @public
	 */
ContentInfo:"ContentInfo",Definition:"Definition",Description:"Description",Dialog:"Dialog",Directory:"Directory",Document:"Document",Grid:"Grid",GridCell:"GridCell",Group:"Group",Heading:"Heading",Img:"Img",Link:"Link",List:"List",Listbox:"Listbox",ListItem:"ListItem",Log:"Log",Main:"Main",Marquee:"Marquee",Menu:"Menu",Menubar:"Menubar",MenuItem:"MenuItem",MenuItemCheckbox:"MenuItemCheckbox",MenuItemRadio:"MenuItemRadio",Navigation:"Navigation",Note:"Note",Option:"Option",Presentation:"Presentation",ProgressBar:"ProgressBar",Radio:"Radio",RadioGroup:"RadioGroup",Region:"Region",Row:"Row",RowHeader:"RowHeader",Search:"Search",Secondary:"Secondary",SeeAlso:"SeeAlso",Separator:"Separator",Slider:"Slider",SpinButton:"SpinButton",Status:"Status",Tab:"Tab",Tablist:"Tablist",Tabpanel:"Tabpanel",Textbox:"Textbox",Timer:"Timer",Toolbar:"Toolbar",Tooltip:"Tooltip",Tree:"Tree",TreeGrid:"TreeGrid",TreeItem:"TreeItem"};return sap.ui.core.AccessibleRole},true);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define("sap/ui/core/BarColor",function(){"use strict";sap.ui.core.BarColor={NEUTRAL:"NEUTRAL",POSITIVE:"POSITIVE",CRITICAL:"CRITICAL",NEGATIVE:"NEGATIVE"};return sap.ui.core.BarColor},true);sap.ui.define('sap/ui/core/CSSColor',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSColor=D.createType('sap.ui.core.CSSColor',{isValid:function(v){return/^(#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})|rgb\(\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*(,\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*){2}\)|rgba\((\s*((1?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))|([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*,){3}\s*(0(\.[0-9]+)?|1(\.0+)?)\s*\)|hsl\(\s*([0-2]?[0-9]?[0-9]|3([0-5][0-9]|60))\s*(,\s*(([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*){2}\)|hsla\(\s*([0-2]?[0-9]?[0-9]|3([0-5][0-9]|60))\s*,(\s*(([0-9]?[0-9](\.[0-9]+)?|100(\.0+)?)%)\s*,){2}\s*(0(\.[0-9]+)?|1(\.0+)?)\s*\)|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coralcornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silverskyblue|slateblue|slategray|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|transparent|inherit|)$/.test(v)}},D.getType('string'));return sap.ui.core.CSSColor},true);sap.ui.define('sap/ui/core/CSSSize',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSSize=D.createType('sap.ui.core.CSSSize',{isValid:function(v){return/^(auto|inherit|[-+]?(0*|([0-9]+|[0-9]*\.[0-9]+)([rR][eE][mM]|[eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%)))$/.test(v)}},D.getType('string'));return sap.ui.core.CSSSize},true);sap.ui.define('sap/ui/core/CSSSizeShortHand',['sap/ui/base/DataType'],function(D){sap.ui.core.CSSSizeShortHand=D.createType('sap.ui.core.CSSSizeShortHand',{isValid:function(v){return/^(inherit|(auto|[-+]?(0*|(\d+|\d*\.\d+)([eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%))){1}(\s(auto|[-+]?(0*|(\d+|\d*\.\d+)([eE][mM]|[eE][xX]|[pP][xX]|[cC][mM]|[mM][mM]|[iI][nN]|[pP][tT]|[pP][cC]|%)))){0,3})$/.test(v)}},D.getType('string'));return sap.ui.core.CSSSizeShortHand},true);sap.ui.define('sap/ui/core/Collision',['sap/ui/base/DataType'],function(D){sap.ui.core.Collision=D.createType('sap.ui.core.Collision',{isValid:function(v){return/^((flip|fit|none)( (flip|fit|none))?)$/.test(v)}},D.getType('string'));return sap.ui.core.Collision},true);sap.ui.define("sap/ui/core/Design",function(){"use strict";sap.ui.core.Design={Standard:"Standard",Monospace:"Monospace"};return sap.ui.core.Design},true);sap.ui.define('sap/ui/core/Dock',['sap/ui/base/DataType'],function(D){sap.ui.core.Dock=D.createType('sap.ui.core.Dock',{isValid:function(v){return/^((begin|left|center|right|end) (top|center|bottom))$/.test(v)}},D.getType('string'));return sap.ui.core.Dock},true);sap.ui.define("sap/ui/core/HorizontalAlign",function(){"use strict";sap.ui.core.HorizontalAlign={Begin:"Begin",End:"End",Left:"Left",Right:"Right",Center:"Center"};return sap.ui.core.HorizontalAlign},true);sap.ui.define('sap/ui/core/ID',['sap/ui/base/DataType'],function(D){sap.ui.core.ID=D.createType('sap.ui.core.ID',{isValid:function(v){return/^([A-Za-z_][-A-Za-z0-9_.:]*)$/.test(v)}},D.getType('string'));return sap.ui.core.ID},true);sap.ui.define("sap/ui/core/IconColor",function(){"use strict";sap.ui.core.IconColor={Default:"Default",Positive:"Positive",Negative:"Negative",Critical:"Critical",Neutral:"Neutral"};return sap.ui.core.IconColor},true);sap.ui.define("sap/ui/core/ImeMode",function(){"use strict";sap.ui.core.ImeMode={Auto:"Auto",Active:"Active",Inactive:"Inactive",Disabled:"Disabled"};return sap.ui.core.ImeMode},true);sap.ui.define("sap/ui/core/MessageType",function(){"use strict";sap.ui.core.MessageType={Information:"Information",Warning:"Warning",Error:"Error",None:"None",Success:"Success"};return sap.ui.core.MessageType},true);sap.ui.define("sap/ui/core/OpenState",function(){"use strict";sap.ui.core.OpenState={OPEN:"OPEN",CLOSED:"CLOSED",OPENING:"OPENING",CLOSING:"CLOSING"};return sap.ui.core.OpenState},true);sap.ui.define("sap/ui/core/Orientation",function(){"use strict";sap.ui.core.Orientation={Horizontal:"Horizontal",Vertical:"Vertical"};return sap.ui.core.Orientation},true);sap.ui.define('sap/ui/core/Percentage',['sap/ui/base/DataType'],function(D){sap.ui.core.Percentage=D.createType('sap.ui.core.Percentage',{isValid:function(v){return/^([0-9][0-9]*(\.[0-9]+)?%)$/.test(v)}},D.getType('string'));return sap.ui.core.Percentage},true);sap.ui.define("sap/ui/core/ScrollBarAction",function(){"use strict";sap.ui.core.ScrollBarAction={Step:"Step",Page:"Page",MouseWheel:"MouseWheel",Drag:"Drag"};return sap.ui.core.ScrollBarAction},true);sap.ui.define("sap/ui/core/Scrolling",function(){"use strict";sap.ui.core.Scrolling={None:"None",Auto:"Auto",Scroll:"Scroll",Hidden:"Hidden"};return sap.ui.core.Scrolling},true);sap.ui.define("sap/ui/core/TextAlign",function(){"use strict";sap.ui.core.TextAlign={Begin:"Begin",End:"End",Left:"Left",Right:"Right",Center:"Center"};return sap.ui.core.TextAlign},true);sap.ui.define("sap/ui/core/TextDirection",function(){"use strict";sap.ui.core.TextDirection={LTR:"LTR",RTL:"RTL",Inherit:"Inherit"};return sap.ui.core.TextDirection},true);sap.ui.define("sap/ui/core/TitleLevel",function(){"use strict";sap.ui.core.TitleLevel={Auto:"Auto",H1:"H1",H2:"H2",H3:"H3",H4:"H4",H5:"H5",H6:"H6"};return sap.ui.core.TitleLevel},true);sap.ui.define('sap/ui/core/URI',['sap/ui/base/DataType'],function(D){sap.ui.core.URI=D.createType('sap.ui.core.URI',{isValid:function(v){return/^((([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?)$/.test(v)}},D.getType('string'));return sap.ui.core.URI},true);sap.ui.define("sap/ui/core/ValueState",function(){"use strict";sap.ui.core.ValueState={Error:"Error",Warning:"Warning",Success:"Success",None:"None"};return sap.ui.core.ValueState},true);sap.ui.define("sap/ui/core/VerticalAlign",function(){"use strict";sap.ui.core.VerticalAlign={Bottom:"Bottom",Middle:"Middle",Top:"Top",Inherit:"Inherit"};return sap.ui.core.VerticalAlign},true);sap.ui.define("sap/ui/core/Wrapping",function(){"use strict";sap.ui.core.Wrapping={None:"None",Soft:"Soft",Hard:"Hard",Off:"Off"};return sap.ui.core.Wrapping},true);sap.ui.define("sap/ui/core/mvc/ViewType",function(){"use strict";sap.ui.core.mvc.ViewType={JSON:"JSON",XML:"XML",HTML:"HTML",JS:"JS",Template:"Template"};return sap.ui.core.mvc.ViewType},true);sap.ui.define("sap/ui/core/routing/HistoryDirection",function(){"use strict";sap.ui.core.routing.HistoryDirection={Forwards:"Forwards",Backwards:"Backwards",NewEntry:"NewEntry",Unknown:"Unknown"};return sap.ui.core.routing.HistoryDirection},true);(function(){var l=sap.ui.lazyRequire;function e(p,c,s){for(var i=0;i<c.length;i++){if(s){l(s,c[i].toLowerCase(),p+c[i])}else{l(p+c[i],"new extend getMetadata")}}}l("sap.ui.core.BusyIndicator","show hide attachOpen detachOpen attachClose detachClose");l("sap.ui.core.tmpl.Template","registerType unregisterType");l("sap.ui.core.Fragment","registerType");l("sap.ui","xmlfragment","sap.ui.core.Fragment");l("sap.ui","jsfragment","sap.ui.core.Fragment");l("sap.ui","htmlfragment","sap.ui.core.Fragment");e("sap.ui.model.",["Filter","Sorter","json.JSONModel","resource.ResourceModel","odata.ODataModel","xml.XMLModel"]);e("sap.ui.model.type.",["Boolean","Integer","Float","String","Date","Time","DateTime"]);e("sap.ui.core.",["Locale","LocaleData","mvc.Controller"]);e("sap.ui.core.mvc.",["Controller","View","JSView","JSONView","XMLView","HTMLView","TemplateView"],"sap.ui");e("sap.ui.core.",["Component"],"sap.ui");e("sap.ui.core.tmpl.",["Template"],"sap.ui")}())},false)};if(!jQuery.sap.isDeclared('sap.ui.core.plugin.TemplatingSupport')){jQuery.sap.declare('sap.ui.core.plugin.TemplatingSupport');sap.ui.define("sap/ui/core/plugin/TemplatingSupport",['jquery.sap.global','sap/ui/core/Core','sap/ui/core/tmpl/Template'],function(q,C,T){"use strict";var a=function(){};a.prototype.startPlugin=function(c,o){q.sap.log.info("Starting TemplatingSupport plugin.");this.oCore=c;sap.ui.template()};a.prototype.stopPlugin=function(){q.sap.log.info("Stopping TemplatingSupport plugin.");this.oCore=null};(function(){var t=new a();sap.ui.getCore().registerPlugin(t)}());return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.search.SearchProvider')){jQuery.sap.declare('sap.ui.core.search.SearchProvider');sap.ui.define("sap/ui/core/search/SearchProvider",['sap/ui/core/library','sap/ui/core/Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.search.SearchProvider",{metadata:{publicMethods:["suggest"],library:"sap.ui.core",properties:{"icon":{type:"string",group:"Misc",defaultValue:null}}}});sap.ui.core.search.SearchProvider.prototype.suggest=function(v,c){jQuery.sap.log.warning("sap.ui.core.search.SearchProvider is the abstract base class for all SearchProviders. Do not create instances of this class, but use a concrete sub class instead.")};return sap.ui.core.search.SearchProvider},true)};if(!jQuery.sap.isDeclared('sap.ui.core.theming.Parameters')){jQuery.sap.declare('sap.ui.core.theming.Parameters');sap.ui.define("sap/ui/core/theming/Parameters",['jquery.sap.global','sap/ui/core/Core'],function(q,C){"use strict";var P={};var p=null;var t=null;function r(){p=null}function l(){var u=q(this).css("background-image");var a=/\(["']data:text\/plain;utf-8,(.*)["']\)$/i.exec(u);if(a&&a.length>=2){var s=a[1];if(s.charAt(0)!=="{"&&s.charAt(s.length-1)!=="}"){try{s=decodeURI(s)}catch(e){q.sap.log.warning("Could not decode theme parameters URI from library.css.")}}try{var o=q.parseJSON(s);q.extend(p,o);return}catch(e){q.sap.log.warning("Could not parse theme parameters from library.css. Loading library-parameters.json as fallback solution.")}}var u=this.href,R,b;u=u.replace(/\/library([^\/.]*)\.(?:css|less)($|[?#])/,function($,c,d){return"/library-parameters.json"+(d?d:"")});R=q.sap.sjax({url:u,dataType:'json'});if(R.success){b=(typeof R.data=="string")?q.parseJSON(R.data):R.data;if(q.isArray(b)){for(var j=0;j<b.length;j++){q.extend(p,b[j])}}else{q.extend(p,b)}}else{q.sap.log.warning("Could not load theme parameters from: "+u)}}function g(){if(!p){p={};t=sap.ui.getCore().getConfiguration().getTheme();q("link[id^=sap-ui-theme-]").each(l)}return p}P._addLibraryTheme=function(L){if(p){var o=q.sap.domById("sap-ui-theme-"+L);l.apply(o)}};P.get=function(n){if(arguments.length==1){var s=g()[n];if(typeof s==="undefined"&&typeof n==="string"){var i=n.indexOf(":");if(i!==-1){n=n.substr(i+1)}s=g()[n]}return s}else if(arguments.length==0){return q.extend({},g())}else{return undefined}};P._setOrLoadParameters=function(L){p={};t=sap.ui.getCore().getConfiguration().getTheme();q("link[id^=sap-ui-theme-]").each(function(){var $=q(this);var s=$.attr("id").substr(13);if(L[s]){q.extend(p,L[s])}else{l.apply(this)}})};P.reset=function(){var o=arguments[0]===true;if(!o||sap.ui.getCore().getConfiguration().getTheme()!==t){r()}};P._getThemeImage=function(s,f){s=s||"sapUiGlobalLogo";var a=sap.ui.core.theming.Parameters.get(s);if(a){var m=/url[\s]*\('?"?([^\'")]*)'?"?\)/.exec(a);if(m){a=m[1]}else if(a==="''"||a==="none"){a=null}}if(!!f&&!a){return sap.ui.resource('sap.ui.core','themes/base/img/1x1.gif')}return a};return P},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMAttribute')){jQuery.sap.declare('sap.ui.core.tmpl.DOMAttribute');sap.ui.define("sap/ui/core/tmpl/DOMAttribute",['sap/ui/core/library','sap/ui/core/Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.tmpl.DOMAttribute",{metadata:{library:"sap.ui.core",properties:{"name":{type:"string",group:"Data",defaultValue:null},"value":{type:"string",group:"Data",defaultValue:null}}}});sap.ui.core.tmpl.DOMAttribute.prototype.setValue=function(v){this.setProperty("value",v,true);var p=this.getParent(),$=p&&p.$();if($&&$.length>0){$.attr(this.getName(),this.getProperty("value"))}return this};return sap.ui.core.tmpl.DOMAttribute},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportCell')){jQuery.sap.declare('sap.ui.core.util.ExportCell');sap.ui.define("sap/ui/core/util/ExportCell",['jquery.sap.global','sap/ui/core/Element'],function(q,E){'use strict';var a=E.extend('sap.ui.core.util.ExportCell',{metadata:{properties:{content:'string'}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportColumn')){jQuery.sap.declare('sap.ui.core.util.ExportColumn');sap.ui.define("sap/ui/core/util/ExportColumn",['jquery.sap.global','sap/ui/base/ManagedObject','./ExportCell'],function(q,M,E){'use strict';var a=M.extend("sap.ui.core.util.ExportColumn",{metadata:{properties:{name:"string"},aggregations:{template:{type:"sap.ui.core.util.ExportCell",multiple:false}}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.ExportRow')){jQuery.sap.declare('sap.ui.core.util.ExportRow');sap.ui.define("sap/ui/core/util/ExportRow",['jquery.sap.global','sap/ui/base/ManagedObject','./ExportCell'],function(q,M,E){'use strict';var a=M.extend("sap.ui.core.util.ExportRow",{metadata:{aggregations:{cells:{type:"sap.ui.core.util.ExportCell",multiple:true}}}});return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CustomData')){jQuery.sap.declare('sap.ui.core.CustomData');sap.ui.define("sap/ui/core/CustomData",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.CustomData",{metadata:{library:"sap.ui.core",properties:{"key":{type:"string",group:"Data",defaultValue:null},"value":{type:"any",group:"Data",defaultValue:null},"writeToDom":{type:"boolean",group:"Data",defaultValue:false}}}});sap.ui.core.CustomData.prototype.setValue=function(v){this.setProperty("value",v,true);var c=this.getParent();if(c&&c.getDomRef()&&this.getWriteToDom()){var k=this.getKey();if(typeof v==="string"){if((sap.ui.core.ID.isValid(k))&&(k.indexOf(":")==-1)&&(k.indexOf("sap-ui")!==0)){c.$().attr("data-"+k,v)}else{jQuery.sap.log.error("CustomData with key "+k+" should be written to HTML of "+c+" but the key is not valid (must be a valid sap.ui.core.ID without any colon and may not start with 'sap-ui').")}}else{jQuery.sap.log.error("CustomData with key "+k+" should be written to HTML of "+c+" but the value is not a string.")}}return this};return sap.ui.core.CustomData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.EnabledPropagator')){jQuery.sap.declare('sap.ui.core.EnabledPropagator');sap.ui.define("sap/ui/core/EnabledPropagator",['jquery.sap.global','./Control'],function(q,C){"use strict";var E=function(d,l){if(!(this instanceof C)){throw new Error("EnabledPropagator only supports subclasses of Control")}if(d===undefined){d=true}function f(c){var p=c.getParent();while(p&&!p.getEnabled&&p.getParent){p=p.getParent()}return p}if(this.getEnabled===undefined){this.getEnabled=function(){var p=f(this);return(p&&p.getEnabled&&!p.getEnabled())?false:this.getProperty("enabled")};if(l){this.getMetadata().addProperty("Enabled",{type:"boolean",group:"Behavior",defaultValue:!!d})}this.getMetadata().addProperty("enabled",{type:"boolean",group:"Behavior",defaultValue:!!d});this.getMetadata().addPublicMethods('getEnabled')}else{var o=this.getEnabled;this.getEnabled=function(){var p=f(this);return(p&&p.getEnabled&&!p.getEnabled())?false:o.apply(this)}}if(this.setEnabled===undefined){this.setEnabled=function(e){this.setProperty("enabled",e)};this.getMetadata().addPublicMethods('setEnabled')}};return E},true)};if(!jQuery.sap.isDeclared('sap.ui.core.HTML')){jQuery.sap.declare('sap.ui.core.HTML');sap.ui.define("sap/ui/core/HTML",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.HTML",{metadata:{library:"sap.ui.core",properties:{"content":{type:"string",group:"Misc",defaultValue:null},"preferDOM":{type:"boolean",group:"Misc",defaultValue:true},"sanitizeContent":{type:"boolean",group:"Misc",defaultValue:false}},events:{"afterRendering":{}}}});sap.ui.core.HTML.M_EVENTS={'afterRendering':'afterRendering'};sap.ui.core.HTML.prototype.getDomRef=function(s){var i=s?this.getId()+"-"+s:this.getId();return jQuery.sap.domById("sap-ui-dummy-"+i)||jQuery.sap.domById(i)};sap.ui.core.HTML.prototype.setContent=function(c){function p(s){if(jQuery.parseHTML){var a=jQuery.parseHTML(s);if(a){var b=0,e=a.length;while(b<e&&a[b].nodeType!=1){b++}while(b<e&&a[e-1].nodeType!=1){e--}if(b>0||e<a.length){a=a.slice(b,e)}return jQuery(a)}}return jQuery(s)}if(this.getSanitizeContent()){c=jQuery.sap._sanitizeHTML(c)}this.setProperty("content",c,true);if(this.getDomRef()){var $=p(this.getContent());jQuery(this.getDomRef()).replaceWith($);this._postprocessNewContent($)}else{this.invalidate()}return this};sap.ui.core.HTML.prototype.onBeforeRendering=function(){if(this.getPreferDOM()&&this.getDomRef()&&!sap.ui.core.RenderManager.isPreservedContent(this.getDomRef())){sap.ui.core.RenderManager.preserveContent(this.getDomRef(),true,false)}};sap.ui.core.HTML.prototype.onAfterRendering=function(){var $=jQuery(jQuery.sap.domById("sap-ui-dummy-"+this.getId()));var a=sap.ui.core.RenderManager.findPreservedContent(this.getId());var b=undefined;var i=false;if((!this.getPreferDOM()||a.size()==0)){a.remove();b=new jQuery(this.getContent());$.replaceWith(b)}else if(a.size()>0){$.replaceWith(a);b=a;i=true}else{$.remove()}this._postprocessNewContent(b);this.fireAfterRendering({isPreservedDOM:i})};sap.ui.core.HTML.prototype._postprocessNewContent=function($){if($&&$.size()>0){if($.length>1){jQuery.sap.log.warning("[Unsupported Feature]: "+this+" has rendered "+$.length+" root nodes!")}else{var c=$.attr("id");if(c&&c!=this.getId()){jQuery.sap.log.warning("[Unsupported Feature]: Id of HTML Control '"+this.getId()+"' does not match with content id '"+c+"'!")}}sap.ui.core.RenderManager.markPreservableContent($,this.getId());if($.find("#"+this.getId().replace(/(:|\.)/g,'\\$1')).length===0){$.filter(":not([id])").first().attr("id",this.getId())}}else{jQuery.sap.log.debug(""+this+" is empty after rendering, setting bOutput to false");this.bOutput=false}};sap.ui.core.HTML.prototype.setDOMContent=function(d){var $=jQuery(d);if(this.getDomRef()){jQuery(this.getDomRef()).replaceWith($);this._postprocessNewContent($)}else{$.appendTo(sap.ui.core.RenderManager.getPreserveAreaRef());if(this.getUIArea()){this.getUIArea().invalidate()}this._postprocessNewContent($)}return this};sap.ui.core.HTML.prototype.setTooltip=function(t){jQuery.sap.log.warning("The sap.ui.core.HTML control doesn't support tooltips. Add the tooltip to the HTML content instead.");return sap.ui.core.Control.prototype.setTooltip.apply(this,arguments)};return sap.ui.core.HTML},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Icon')){jQuery.sap.declare('sap.ui.core.Icon');sap.ui.define("sap/ui/core/Icon",['./library','./Control','./IconPool'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.Icon",{metadata:{library:"sap.ui.core",properties:{"src":{type:"sap.ui.core.URI",group:"Data",defaultValue:null},"size":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"color":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"hoverColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"activeColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"backgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"hoverBackgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"activeBackgroundColor":{type:"sap.ui.core.CSSColor",group:"Appearance",defaultValue:null},"visible":{type:"boolean",group:"Appearance",defaultValue:true},"decorative":{type:"boolean",group:"Accessibility",defaultValue:true}},events:{"press":{}}}});sap.ui.core.Icon.M_EVENTS={'press':'press'};sap.ui.core.Icon.prototype.onAfterRendering=function(){var i=this.$();if(this.hasListeners("press")){i.css("cursor","pointer")}if(i.css("cursor")==="auto"){i.css("cursor","default")}};sap.ui.core.Icon.prototype.onmousedown=function(e){this._bPressFired=false;if(this.hasListeners("press")||this.hasListeners("tap")){e.setMarked()}var a=this.getActiveColor(),A=this.getActiveBackgroundColor(),i;if(a||A){if(!e.targetTouches||(e.targetTouches&&e.targetTouches.length===1)){i=this.$();i.addClass("sapUiIconActive");if(a){i.css("color",a)}if(A){i.css("background-color",A)}}}};sap.ui.core.Icon.prototype.ontouchstart=sap.ui.core.Icon.prototype.onmousedown;sap.ui.core.Icon.prototype.onmouseup=function(e){if(!e.targetTouches||(e.targetTouches&&e.targetTouches.length===0)){this.$().removeClass("sapUiIconActive");this._restoreColors()}};sap.ui.core.Icon.prototype.ontouchend=sap.ui.core.Icon.prototype.onmouseup;sap.ui.core.Icon.prototype.ontouchcancel=sap.ui.core.Icon.prototype.onmouseup;sap.ui.core.Icon.prototype.onmouseover=function(){var h=this.getHoverColor(),H=this.getHoverBackgroundColor(),i=this.$();if(h){i.css("color",h)}if(H){i.css("background-color",H)}};sap.ui.core.Icon.prototype.onmouseout=function(){this._restoreColors()};sap.ui.core.Icon.prototype.onclick=function(){if(this._bPressFired){return}this.firePress({});this._bPressFired=true};sap.ui.core.Icon.prototype.ontap=sap.ui.core.Icon.prototype.onclick;sap.ui.core.Icon.prototype.onkeydown=function(e){if(e.which===jQuery.sap.KeyCodes.SPACE||e.which===jQuery.sap.KeyCodes.ENTER){e.preventDefault();var i=this.$(),a=this.getActiveColor(),A=this.getActiveBackgroundColor();i.addClass("sapUiIconActive");if(a){i.css("color",a)}if(A){i.css("background-color",A)}}};sap.ui.core.Icon.prototype.onkeyup=function(e){if(e.which===jQuery.sap.KeyCodes.SPACE||e.which===jQuery.sap.KeyCodes.ENTER){this.$().removeClass("sapUiIconActive");this._restoreColors();this.firePress({})}};sap.ui.core.Icon.prototype._restoreColors=function(){this.$().css({"color":this.getColor()||"","background-color":this.getBackgroundColor()||""})};sap.ui.core.Icon.prototype.setSrc=function(s){var i=sap.ui.core.IconPool.getIconInfo(s),t=sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version<9,I=this.$();if(i){I.css("font-family",i.fontFamily);if(t){I.text(i.content)}else{I.attr("data-sap-ui-icon-content",i.content)}I.toggleClass("sapUiIconMirrorInRTL",!i.suppressMirroring)}this.setProperty("src",s,!!i);return this};sap.ui.core.Icon.prototype.setWidth=function(w){this.setProperty("width",w,true);this.$().css("width",w);return this};sap.ui.core.Icon.prototype.setHeight=function(h){this.setProperty("height",h,true);this.$().css({"height":h,"line-height":h});return this};sap.ui.core.Icon.prototype.setSize=function(s){this.setProperty("size",s,true);this.$().css("font-size",s);return this};sap.ui.core.Icon.prototype.setColor=function(c){this.setProperty("color",c,true);this.$().css("color",c);return this};sap.ui.core.Icon.prototype.setActiveColor=function(c){return this.setProperty("activeColor",c,true)};sap.ui.core.Icon.prototype.setHoverColor=function(c){return this.setProperty("hoverColor",c,true)};sap.ui.core.Icon.prototype.setBackgroundColor=function(c){this.setProperty("backgroundColor",c,true);this.$().css("background-color",c);return this};sap.ui.core.Icon.prototype.setActiveBackgroundColor=function(c){return this.setProperty("activeBackgroundColor",c,true)};sap.ui.core.Icon.prototype.setHoverBackgroundColor=function(c){return this.setProperty("hoverBackgroundColor",c,true)};sap.ui.core.Icon.prototype.attachPress=function(){var m=Array.prototype.slice.apply(arguments);m.splice(0,0,"press");this.$().css("cursor","pointer");return sap.ui.core.Control.prototype.attachEvent.apply(this,m)};sap.ui.core.Icon.prototype.detachPress=function(){var m=Array.prototype.slice.apply(arguments);m.splice(0,0,"press");sap.ui.core.Control.prototype.detachEvent.apply(this,m);if(!this.hasListeners("press")){this.$().css("cursor","default")}return this};return sap.ui.core.Icon},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Item')){jQuery.sap.declare('sap.ui.core.Item');sap.ui.define("sap/ui/core/Item",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Item",{metadata:{library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:""},"enabled":{type:"boolean",group:"Misc",defaultValue:true},"textDirection":{type:"sap.ui.core.TextDirection",group:"Misc",defaultValue:sap.ui.core.TextDirection.Inherit},"key":{type:"string",group:"Data",defaultValue:null}}}});return sap.ui.core.Item},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LayoutData')){jQuery.sap.declare('sap.ui.core.LayoutData');sap.ui.define("sap/ui/core/LayoutData",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.LayoutData",{metadata:{"abstract":true,library:"sap.ui.core"}});sap.ui.core.LayoutData.prototype.invalidate=function(){var p=this.getParent();if(p&&p.getMetadata().getName()=="sap.ui.core.VariantLayoutData"){p=p.getParent()}if(p){var l=p.getParent();if(l){var e=jQuery.Event("LayoutDataChange");e.srcControl=p;l._handleEvent(e)}}};sap.ui.core.LayoutData.prototype.setLayoutData=function(l){return this};return sap.ui.core.LayoutData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ListItem')){jQuery.sap.declare('sap.ui.core.ListItem');sap.ui.define("sap/ui/core/ListItem",['./library','./Item'],function(){"use strict";sap.ui.core.Item.extend("sap.ui.core.ListItem",{metadata:{library:"sap.ui.core",properties:{"icon":{type:"string",group:"Appearance",defaultValue:null},"additionalText":{type:"string",group:"Data",defaultValue:null}}}});return sap.ui.core.ListItem},true)};if(!jQuery.sap.isDeclared('sap.ui.core.LocalBusyIndicator')){jQuery.sap.declare('sap.ui.core.LocalBusyIndicator');sap.ui.define("sap/ui/core/LocalBusyIndicator",['./library','./Control','./theming/Parameters','./LocalBusyIndicatorRenderer'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.LocalBusyIndicator",{metadata:{deprecated:true,library:"sap.ui.core",properties:{"width":{type:"sap.ui.core.CSSSize",group:"Misc",defaultValue:'100px'},"height":{type:"sap.ui.core.CSSSize",group:"Misc",defaultValue:'100px'}}}});(function(){sap.ui.core.LocalBusyIndicator.prototype.init=function(){var r="sap.ui.core.LocalBusyIndicator:";var p="sapUiLocalBusyIndicatorBoxSize";p=sap.ui.core.theming.Parameters.get(r+p);this._iBoxSize=8;p="sapUiLocalBusyIndicatorBoxColor";this._sBoxColor=sap.ui.core.theming.Parameters.get(r+p);p="sapUiLocalBusyIndicatorBoxColorActive";this._sBoxColorActive=sap.ui.core.theming.Parameters.get(r+p);this._animateProxy=jQuery.proxy(a,this)};sap.ui.core.LocalBusyIndicator.prototype.exit=function(){jQuery.sap.clearDelayedCall(this._delayedCallId);delete this._delayedCallId};sap.ui.core.LocalBusyIndicator.prototype.onThemeChanged=function(e){if(this.getDomRef()){this.invalidate()}};sap.ui.core.LocalBusyIndicator.prototype.onAfterRendering=function(){var w=parseInt(this.getWidth(),10);var h=parseInt(this.getHeight(),10);var $=this.$();$.css("width",w+"px");$.css("height",h+"px");var b=this.$("animation");var l=Math.floor(w/2);l-=Math.floor((5*this._iBoxSize)/2);var t=Math.floor(h/2)-Math.floor(this._iBoxSize/2);b.css("left",l+"px");b.css("top",t+"px");if(!this._$left){this._$left=this.$("leftBox")}if(!this._$middle){this._$middle=this.$("middleBox")}if(!this._$right){this._$right=this.$("rightBox")}this._delayedCallId=jQuery.sap.delayedCall(0,this,this._animateProxy)};var a=function(){if(this.getDomRef()){var t=this;var $,b,c;var d="",e="";if(t._$left){$=t._$left}else{return}if(t._$middle){b=t._$middle}else{return}if(t._$right){c=t._$right}else{return}if(t._sBoxColor){d=t._sBoxColor}else{return}if(t._sBoxColorActive){e=t._sBoxColorActive}else{return}$.css("background-color",e);setTimeout(function(){$.css("background-color",d);b.css("background-color",e);setTimeout(function(){b.css("background-color",d);c.css("background-color",e);setTimeout(function(){c.css("background-color",d)},150)},150)},150);this._delayedCallId=jQuery.sap.delayedCall(1200,this,this._animateProxy)}}}());return sap.ui.core.LocalBusyIndicator},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Message')){jQuery.sap.declare('sap.ui.core.Message');sap.ui.define("sap/ui/core/Message",['./library','./Element','./theming/Parameters'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Message",{metadata:{publicMethods:["getDefaultIcon"],library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:null},"timestamp":{type:"string",group:"Misc",defaultValue:null},"icon":{type:"sap.ui.core.URI",group:"Misc",defaultValue:null},"level":{type:"sap.ui.core.MessageType",group:"Misc",defaultValue:sap.ui.core.MessageType.None},"readOnly":{type:"boolean",group:"Misc",defaultValue:false}}}});sap.ui.core.Message.prototype.getDefaultIcon=function(s){var m=jQuery.sap.getModulePath("sap.ui.core",'/');var t="themes/"+sap.ui.getCore().getConfiguration().getTheme();var i="/img/message/";if(s&&s=="32x32"){i+="32x32/"}else{i+="16x16/"}var u="";switch(this.getProperty("level")){case sap.ui.core.MessageType.Error:u=m+t+i+"Message_Icon_Error.png";break;case sap.ui.core.MessageType.Information:u=m+t+i+"Message_Icon_Information.png";break;case sap.ui.core.MessageType.Warning:u=m+t+i+"Message_Icon_Warning.png";break;case sap.ui.core.MessageType.Success:u=m+t+i+"Message_Icon_Success.png";break;case sap.ui.core.MessageType.None:default:u=this.getProperty("icon");break}return u};sap.ui.core.Message.prototype.compareByType=function(o){sap.ui.core.Message.compareByType(this,o)};sap.ui.core.Message.compareByType=function(m,M){if(!m&&!M){return 0}if(m&&!M){return 1}if(!m&&M){return-1}var l=m.getLevel();var L=M.getLevel();var t=sap.ui.core.MessageType;if(l===L){return 0}switch(l){case t.Error:return 1;case t.Warning:return L===t.Error?-1:1;case t.Success:return L===t.Error||L===t.Warning?-1:1;case t.Information:return L===t.None?1:-1;case t.None:return-1;default:jQuery.sap.log.error("Comparison error",this);return 0}};return sap.ui.core.Message},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Popup')){jQuery.sap.declare('sap.ui.core.Popup');sap.ui.define("sap/ui/core/Popup",['jquery.sap.global','sap/ui/base/ManagedObject','sap/ui/base/Object','./Control','./IntervalTrigger','./RenderManager','./UIArea','./PopupSupport','jquery.sap.script'],function(q,M,B,C,I,R,U,P){"use strict";var a=M.extend("sap.ui.core.Popup",{constructor:function(c,m,s,A){M.apply(this);P.apply(this);this._popupUID=q.sap.uid();this.bOpen=false;this.eOpenState=sap.ui.core.OpenState.CLOSED;this._mFocusEvents={};this._mFocusEvents["sap.ui.core.Popup.addFocusableContent-"+this._popupUID]=this._addFocusableArea;this._mFocusEvents["sap.ui.core.Popup.removeFocusableContent-"+this._popupUID]=this._removeFocusableArea;this._mFocusEvents["sap.ui.core.Popup.closePopup-"+this._popupUID]=this._closePopup;this._mFocusEvents["sap.ui.core.Popup.onFocusEvent-"+this._popupUID]=this.onFocusEvent;this._mFocusEvents["sap.ui.core.Popup.increaseZIndex-"+this._popupUID]=this._increaseMyZIndex;if(c){this.setContent(c)}this._oDefaultPosition={my:a.Dock.CenterCenter,at:a.Dock.CenterCenter,of:document,offset:"0 0",collision:"flip"};this._oPosition=q.extend({},this._oDefaultPosition);this._bModal=!!m;this._oPreviousFocus=null;this._sInitialFocusId=null;this._bShadow=typeof(s)==="boolean"?s:true;this._bAutoClose=!!A;this._animations={open:null,close:null};this._durations={open:"fast",close:"fast"};this._iZIndex=-1;this._oBlindLayer=null;if(this.touchEnabled){this._fAutoCloseHandler=function(e){if(e.isMarked("delayedMouseEvent")||e.isMarked("cancelAutoClose")){return}if(this.eOpenState===sap.ui.core.OpenState.CLOSING||this.eOpenState===sap.ui.core.OpenState.CLOSED){return}var d=e.target,p=this._$().get(0),b=q.contains(p,d);if(!b){var f=this.getChildPopups();for(var i=0,l=f.length;i<l;i++){var D=q.sap.domById(f[i]);if(q.sap.containsOrEquals(D,d)){b=true;break}}}if(!b){this.close()}}}},metadata:{library:"sap.ui.core",publicMethods:["open","close","setContent","getContent","setPosition","setShadow","setModal","getModal","setAutoClose","setAutoCloseAreas","isOpen","getAutoClose","getOpenState","setAnimations","setDurations","attachOpened","attachClosed","detachOpened","detachClosed"],associations:{"childPopups":{type:"sap.ui.core.Popup",multiple:true,visibility:"hidden"}},events:{"opened":{},"closed":{}}}});a._activateBlindLayer=true;a.blStack=[];a.Dock={BeginTop:"begin top",BeginCenter:"begin center",BeginBottom:"begin bottom",LeftTop:"left top",LeftCenter:"left center",LeftBottom:"left bottom",CenterTop:"center top",CenterCenter:"center center",CenterBottom:"center bottom",RightTop:"right top",RightCenter:"right center",RightBottom:"right bottom",EndTop:"end top",EndCenter:"end center",EndBottom:"end bottom"};a.prototype.touchEnabled=sap.ui.Device.support.touch||q.sap.simulateMobileOnDesktop;a.prototype.restoreFocus=!sap.ui.Device.support.touch&&!q.sap.simulateMobileOnDesktop;B.extend("sap.ui.core.Popup.Layer",{constructor:function(){var d=this.getDomString();this._$Ref=q(d).appendTo(sap.ui.getCore().getStaticAreaRef())}});a.Layer.prototype.init=function(o,z){this._$Ref.css({"visibility":"visible","z-index":z});this.update(o,z);this._$Ref.insertAfter(o).show()};a.Layer.prototype.update=function(o,z){var b=o.rect();this._$Ref.css({"left":b.left,"top":b.top});if(o.css("right")!="auto"&&o.css("right")!="inherit"){this._$Ref.css({"right":o.css("right"),"width":"auto"})}else{this._$Ref.css({"width":b.width,"right":"auto"})}if(o.css("bottom")!="auto"&&o.css("bottom")!="inherit"){this._$Ref.css({"bottom":o.css("bottom"),"height":"auto"})}else{this._$Ref.css({"height":b.height,"bottom":"auto"})}if(typeof(z)==="number"){this._$Ref.css("z-index",z)}};a.Layer.prototype.reset=function(){this._$Ref.hide().css("visibility","hidden").appendTo(sap.ui.getCore().getStaticAreaRef())};a.Layer.prototype.getDomString=function(){q.sap.log.error("sap.ui.core.Popup.Layer: getDomString function must be overwritten!");return""};a.Layer.extend("sap.ui.core.Popup.BlindLayer",{constructor:function(){a.Layer.apply(this)}});a.BlindLayer.prototype.getDomString=function(){return"<div class=\"sapUiBliLy\" id=\"sap-ui-blindlayer-"+q.sap.uid()+"\"><iframe scrolling=\"no\" src=\"javascript:''\"	tabIndex=\"-1\"></iframe></div>"};a.prototype.oBlindLayerPool=new sap.ui.base.ObjectPool(a.BlindLayer);a.Layer.extend("sap.ui.core.Popup.ShieldLayer",{constructor:function(){a.Layer.apply(this)}});a.ShieldLayer.prototype.getDomString=function(){return"<div class=\"sapUiPopupShield\" id=\"sap-ui-shieldlayer-"+q.sap.uid()+"\"></div>"};a.prototype.oShieldLayerPool=new sap.ui.base.ObjectPool(a.ShieldLayer);(function(){var l=0;a.getLastZIndex=function(){return l};a.prototype.getLastZIndex=function(){return a.getLastZIndex()};a.getNextZIndex=function(){return(l+=10)};a.prototype.getNextZIndex=function(){return a.getNextZIndex()}}());a.prototype.open=function(d,m,b,o,c,f,g){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){return}this.eOpenState=sap.ui.core.OpenState.OPENING;var s;try{s=sap.ui.getCore().getStaticAreaRef();s=sap.ui.getCore().getUIArea(s)}catch(e){q.sap.log.error(e);throw new Error("Popup cannot be opened because static UIArea cannot be determined.")}this._bContentAddedToStatic=false;if(this.oContent instanceof C&&!this.oContent.getParent()){s.addContent(this.oContent,true);this._bContentAddedToStatic=true}if(this.oContent.getUIArea){var A=this.oContent.getUIArea();if(A===null){q.sap.log.warning("The Popup content is NOT connected with an UIArea and may not work properly!")}else if(a._bEnableUIAreaCheck&&A.getRootNode().id!==s.getRootNode().id){q.sap.log.warning("The Popup content is NOT connected with the static-UIArea and may not work properly!")}}if(typeof(d)=="string"){g=f;f=c;c=o;o=b;b=m;m=d;d=-1}if(d===undefined){d=-1}if(this.restoreFocus){this._oPreviousFocus=a.getCurrentFocusInfo()}var $=this._$(true);var i="fast";if((d===0)||(d>0)){i=d}else if((this._durations.open===0)||(this._durations.open>0)){i=this._durations.open}var _;if(m||b||o||c||f){_=this._createPosition(m,b,o,c,f)}else{_=this._oPosition}if(!_.of){_.of=this._oPosition.of||document}this._iZIndex=this._iZIndex===this.getLastZIndex()?this._iZIndex:this.getNextZIndex();var S=sap.ui.getCore().getStaticAreaRef();$.css({"position":"absolute","visibility":"hidden"});if(!($[0].parentNode==S)){$.appendTo(S)}$.css("z-index",this._iZIndex);q.sap.log.debug("position popup content "+$.attr("id")+" at "+(window.JSON?JSON.stringify(_.at):String(_.at)));this._applyPosition(_);if(g!==undefined){this.setFollowOf(g)}var t=this;if(sap.ui.Device.os.ios&&sap.ui.Device.support.touch){if(this._oTopShieldLayer){q.sap.clearDelayedCall(this._iTopShieldRemoveTimer);this._iTopShieldRemoveTimer=null}else{this._oTopShieldLayer=this.oShieldLayerPool.borrowObject($,this._iZIndex+1)}this._iTopShieldRemoveTimer=q.sap.delayedCall(500,this,function(){this.oShieldLayerPool.returnObject(this._oTopShieldLayer);this._oTopShieldLayer=null;this._iTopShieldRemoveTimer=null})}var O=function(){$.css("display","block");if(t._bModal||t._bAutoClose||t._sInitialFocusId){var k=null;if(t._sInitialFocusId){var l=sap.ui.getCore().byId(t._sInitialFocusId);if(l){k=l.getFocusDomRef()}k=k||q.sap.domById(t._sInitialFocusId)}q.sap.focus(k||$.firstFocusableDomRef())}t.eOpenState=sap.ui.core.OpenState.OPEN;if(t.getFollowOf()){a.DockTrigger.addListener(a.checkDocking,t)}t._updateBlindLayer();if(!!sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version==9){q.sap.delayedCall(0,t,function(){t.fireOpened()})}else{t.fireOpened()}};$.toggleClass("sapUiShd",this._bShadow).hide().css("visibility","visible");if(i==0){this.bOpen=true;O.apply()}else{if(this._animations.open){this._animations.open.call(null,$,i,O)}else{$.fadeIn(i,O)}}if(!!sap.ui.Device.browser.internet_explorer&&a._activateBlindLayer){this._oBlindLayer=this.oBlindLayerPool.borrowObject($,this._iZIndex-1)}if(this._bModal){this._showBlockLayer()}if(this.oContent instanceof sap.ui.core.Element){this.oContent.addDelegate(this)}this.bOpen=true;if(this.isInPopup(o)||this.isInPopup(this._oPosition.of)){var p=this.getParentPopupId(o)||this.getParentPopupId(this._oPosition.of);var h="";var j=this.getContent();if(j instanceof sap.ui.core.Element){h=j.getId()}else if(typeof j==="object"){h=j.id}this.addChildToPopup(p,h);this.addChildToPopup(p,this._popupUID)}if(this._bModal||this._bAutoClose){this._addFocusEventListeners()}if(this.touchEnabled&&!this._bModal&&this._bAutoClose){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}if(this._oBlindLayer){this._resizeListenerId=sap.ui.core.ResizeHandler.register(this._$().get(0),q.proxy(this.onresize,this))}};a.prototype.onFocusEvent=function(b){var e=q.event.fix(b);if(arguments.length>1&&arguments[1]==="sap.ui.core.Popup.onFocusEvent-"+this._popupUID){e=q.event.fix(arguments[2])}var t=(e.type=="focus"||e.type=="activate")?"focus":"blur";var c=false;if(t=="focus"){var d=this._$().get(0);if(d){c=d==e.target||q.contains(d,e.target);var f=this.getChildPopups();if(!c){for(var i=0,l=f.length;i<l;i++){var o=q.sap.domById(f[i]);if(o){c=o==e.target||q.contains(o,e.target);if(c){break}}}}q.sap.log.debug("focus event on "+e.target.id+", contains: "+c);if(this._bModal&&!c){var T=(a.getLastZIndex()==this._iZIndex);if(T){if(!sap.ui.Device.support.touch||q(e.target).is(":input")){var D=this.oLastBlurredElement?this.oLastBlurredElement:d;q.sap.focus(D)}}}else if(this._bAutoClose&&c&&this._sTimeoutId){if(this._sTimeoutId){q.sap.clearDelayedCall(this._sTimeoutId);this._sTimeoutId=null}}}}else if(t=="blur"){q.sap.log.debug("blur event on "+e.target.id);if(this._bModal){this.oLastBlurredElement=e.target}else if(this._bAutoClose){if(!this.touchEnabled&&!this._sTimeoutId){this._sTimeoutId=q.sap.delayedCall(0,this,"close")}}}};a.prototype.setInitialFocusId=function(i){this._sInitialFocusId=i};a.prototype.close=function(d){if(this.eOpenState==sap.ui.core.OpenState.CLOSED||this.eOpenState==sap.ui.core.OpenState.CLOSING){return}var i="fast";if((d===0)||(d>0)){i=d}else if((this._durations.close===0)||(this._durations.close>0)){i=this._durations.close}if(i===0&&this.eOpenState==sap.ui.core.OpenState.OPENING){return}this.eOpenState=sap.ui.core.OpenState.CLOSING;if(this.getFollowOf()){a.DockTrigger.removeListener(a.checkDocking,this)}if(this.oContent&&this._bContentAddedToStatic){sap.ui.getCore().getEventBus().publish("sap.ui","__beforePopupClose",{domNode:this._$().get(0)});var s=sap.ui.getCore().getStaticAreaRef();s=sap.ui.getCore().getUIArea(s);s.removeContent(s.indexOfContent(this.oContent),true)}this._bContentAddedToStatic=false;this._sTimeoutId=null;if(this.fEventHandler){this._removeFocusEventListeners()}if(this.touchEnabled){if(!this._bModal&&this._bAutoClose){q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}if(this.oContent instanceof sap.ui.core.Element){this.oContent.removeDelegate(this)}var $=this._$();if(this._bEventBusEventsRegistered){this._unregisterEventBusEvents()}if(this._oBlindLayer){this.oBlindLayerPool.returnObject(this._oBlindLayer)}this._oBlindLayer=null;var t=this;if(sap.ui.Device.os.ios&&sap.ui.Device.support.touch){if(this._oBottomShieldLayer){q.sap.clearDelayedCall(this._iBottomShieldRemoveTimer);this._iBottomShieldRemoveTimer=null}else{this._oBottomShieldLayer=this.oShieldLayerPool.borrowObject($,this._iZIndex-3)}this._iBottomShieldRemoveTimer=q.sap.delayedCall(500,this,function(){this.oShieldLayerPool.returnObject(this._oBottomShieldLayer);this._oBottomShieldLayer=null;this._iBottomShieldRemoveTimer=null})}var c=function(){q($).hide().css({"visibility":"hidden","left":"0px","top":"0px","right":""});if(t.restoreFocus){if(t._bModal){a.applyFocusInfo(t._oPreviousFocus);t._oPreviousFocus=null;t.oLastBlurredElement=null}}t.bOpen=false;t.eOpenState=sap.ui.core.OpenState.CLOSED;t.fireClosed();var b=t.getChildPopups();for(var j=0,l=b.length;j<l;j++){t.closePopup(b[j])}};if(i==0){c.apply()}else{if(this._animations.close){this._animations.close.call(null,$,i,c)}else{$.fadeOut(i,c)}}if(this._bModal){this._hideBlockLayer()}if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}};a.getCurrentFocusInfo=function(){var _=null;var f=sap.ui.getCore().getCurrentFocusedControlId();if(f){var F=sap.ui.getCore().getControl(f);_={'sFocusId':f,'oFocusInfo':F?F.getFocusInfo():{}}}else{try{var e=document.activeElement;if(e){_={'sFocusId':e.id,'oFocusedElement':e,'oFocusInfo':{}}}}catch(b){_=null}}return _};a.applyFocusInfo=function(p){if(p){var f=sap.ui.getCore().getControl(p.sFocusId);if(f){f.applyFocusInfo(p.oFocusInfo)}else{var e=q.sap.domById(p.sFocusId)||p.oFocusedElement;q.sap.focus(e)}}};a.prototype.setContent=function(c){this.oContent=c;return this};a.prototype.getContent=function(){return this.oContent};a.prototype.setPosition=function(m,b,o,c,d){this._oPosition=this._createPosition(m,b,o,c,d);if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){this._applyPosition(this._oPosition);this._oBlindLayer&&this._oBlindLayer.update(this._$())}return this};a.prototype._createPosition=function(m,b,o,c,d){var n=false;if(m&&(m.indexOf("+")>=0||m.indexOf("-")>=0)){n=true;if(c&&c!="0 0"){q.sap.log.warning("offset used in my and in offset, the offset value will be ignored","sap.ui.core.Popup","setPosition")}c=null}var p=q.extend({},this._oDefaultPosition,{"my":m||this._oDefaultPosition.my,"at":b||this._oDefaultPosition.at,"of":o,"offset":c,"collision":d});if(!q.ui.version){if(a._bNewOffset==null){a._bNewOffset=true;if(!(sap.ui.Device.browser.internet_explorer&&sap.ui.Device.browser.version==8&&q.sap.Version(q().jquery).compareTo("1.8.1")<0)){var D=q(document.createElement("div"));D.position({of:window,using:function(f,g){a._bNewOffset=(g!==undefined)}})}}}if(a._bNewOffset||q.sap.Version(q.ui.version).compareTo("1.8.23")>0){if(c&&c!="0 0"){var e=p.my.split(" ");var O=c.split(" ");var s=[parseInt(O[0])<0?"":"+",parseInt(O[1])<0?"":"+"];p.my=e[0]+s[0]+O[0]+" "+e[1]+s[1]+O[1];p.offset=null}}else if(n){var e=p.my.split(" ");var O=["",""];var i=e[0].indexOf("+");if(i<0){i=e[0].indexOf("-")}if(i>=0){O[0]=e[0].slice(i);e[0]=e[0].slice(0,i)}i=e[1].indexOf("+");if(i<0){i=e[1].indexOf("-")}if(i>=0){O[1]=e[1].slice(i);e[1]=e[1].slice(0,i)}p.my=e[0]+" "+e[1];p.offset=O[0]+" "+O[1]}return p};a.prototype._getPositionOffset=function(){var o=[];if(this._oPosition.my&&(this._oPosition.my.indexOf("+")>=0||this._oPosition.my.indexOf("-")>=0)){var m=this._oPosition.my.split(" ");var i=m[0].indexOf("+");if(i<0){i=m[0].indexOf("-")}if(i>=0){o[0]=m[0].slice(i)}i=m[1].indexOf("+");if(i<0){i=m[1].indexOf("-")}if(i>=0){o[1]=m[1].slice(i)}}else if(this._oPosition.offset){o=this._oPosition.offset.split(" ")}return o};a.prototype._applyPosition=function(p){var b=sap.ui.getCore().getConfiguration().getRTL();var $=this._$();var A=p.at;if(typeof(A)==="string"){$.css("display","block").position(this._resolveReference(this._convertPositionRTL(p,b)));this._fixPositioning(p,b)}else if(sap.ui.core.CSSSize.isValid(A.left)&&sap.ui.core.CSSSize.isValid(A.top)){$.css({"left":A.left,"top":A.top})}else if(sap.ui.core.CSSSize.isValid(A.right)&&sap.ui.core.CSSSize.isValid(A.top)){$.css({"right":A.right,"top":A.top})}else if(typeof(A.left)==="number"&&typeof(A.top)==="number"){var d=$[0];if(d&&d.style.right){var w=$.outerWidth();$.css({"right":(document.documentElement.clientWidth-(A.left+w))+"px","top":A.top+"px"})}else{$.css({"left":A.left+"px","top":A.top+"px"})}}this._oLastPosition=p;this._oLastOfRect=this._calcOfRect(p.of)};a.prototype._calcOfRect=function(o){var O=this._getOfDom(o);if(O){return q(O).rect()}return null};a.prototype._getOfDom=function(o){if((o instanceof Event)||(o instanceof q.Event)){return null}var O;if(typeof(o)==="string"){O=q.sap.byId(o)}else if(o instanceof q){O=o}else{O=q(o instanceof sap.ui.core.Element?o.getDomRef():o)}return O[0]};a.prototype._convertPositionRTL=function(p,b){var f=q.extend({},p);if(b){var n=false;if(f.my&&(f.my.indexOf("+")>=0||f.my.indexOf("-")>=0)){n=true}if((f.offset||n)&&((f.my.indexOf("begin")>-1)||(f.my.indexOf("end")>-1))&&((f.at.indexOf("begin")>-1)||(f.at.indexOf("end")>-1))){if(n){var m=f.my.split(" ");if(m.length==2){f.my="";if(m[0]){if(m[0].indexOf("begin")>-1||m[0].indexOf("end")>-1){if(m[0].indexOf("+")>-1){m[0]=m[0].replace("+","-")}else if(m[0].indexOf("-")>-1){m[0]=m[0].replace("-","+")}}f.my=m[0]}if(m[1]){if(m[1].indexOf("begin")>-1||m[1].indexOf("end")>-1){if(m[1].indexOf("+")>-1){m[1]=m[1].replace("+","-")}else if(m[1].indexOf("-")>-1){m[1]=m[1].replace("-","+")}}if(m[0]){f.my=f.my+" "}f.my=f.my+m[1]}}}else{f.offset=this._mirrorOffset(f.offset)}}f.my=f.my.replace("begin","right").replace("end","left");f.at=f.at.replace("begin","right").replace("end","left")}else{f.my=f.my.replace("end","right").replace("begin","left");f.at=f.at.replace("end","right").replace("begin","left")}return f};a.prototype._mirrorOffset=function(o){var O=q.trim(o).split(/\s/);var p=parseInt(O[0],10);return(-p)+" "+O[O.length-1]};a.prototype._fixPositioning=function(p,b){var m=p.my;if(typeof(m)==="string"){if(b&&((m.indexOf("right")>-1)||(m.indexOf("begin")>-1)||(m.indexOf("center")>-1))){var $=this._$();var c=q(window).width()-$.outerWidth()-$.offset().left;$.css({"right":c+"px","left":""})}else if((m.indexOf("right")>-1)||(m.indexOf("end")>-1)){var $=this._$();var c=q(window).width()-$.outerWidth()-$.offset().left;$.css({"right":c+"px","left":""})}}};a.prototype._resolveReference=function(p){var o=p;if(p.of instanceof sap.ui.core.Element){o=q.extend({},p,{of:p.of.getDomRef()})}return o};a.prototype.setShadow=function(s){this._bShadow=s;if(this.eOpenState!=sap.ui.core.OpenState.CLOSED){this._$().toggleClass("sapUiShd",s)}return this};a.prototype.setModal=function(m,s){var o=this._bModal;this._bModal=m;this._sModalCSSClass=s;if(this.isOpen()){if(o!==m){if(m){this._showBlockLayer()}else{this._hideBlockLayer()}if(this.touchEnabled&&this._bAutoClose){if(!m){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}else{q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}}}return this};a.prototype.getModal=function(){return this._bModal};a.prototype.setAutoClose=function(A){if(this.touchEnabled&&this.isOpen()&&this._bAutoClose!==A){if(!this._bModal){if(A){q(document).on("touchstart mousedown",q.proxy(this._fAutoCloseHandler,this))}else{q(document).off("touchstart mousedown",this._fAutoCloseHandler)}}}this._bAutoClose=A;return this};a.prototype.setAutoCloseAreas=function(A){for(var i=0,l=A.length;i<l;i++){var s="";if(A[i]instanceof sap.ui.core.Element){s=A[i].getId()}else if(typeof A[i]==="object"){s=A[i].id}else if(typeof A[i]==="string"){s=A[i]}if(q.inArray(s,this.getChildPopups())===-1){this.addChildPopup(s)}}return this};a.prototype.setAnimations=function(o,c){if(o&&(typeof(o)=="function")){this._animations.open=o}if(c&&(typeof(c)=="function")){this._animations.close=c}return this};a.prototype.setDurations=function(o,c){if((o>0)||(o===0)){this._durations.open=o}if((c>0)||(c===0)){this._durations.close=c}return this};a.prototype.setFollowOf=function(f){var u=false;a.DockTrigger.removeListener(a.checkDocking,this);if(typeof(f)==="function"){this._bFollowOf=true;this._followOfHandler=f;u=true}else if(typeof(f)==="boolean"){this._bFollowOf=f;if(!this._bFollowOf){this._followOfHandler=null}u=f}else{this._bFollowOf=false;this._followOfHandler=null;if(f!=null){q.sap.log.error("Trying to set an invalid type to 'followOf: "+f)}}if(u&&this._oLastPosition){this._oLastOfRect=this._calcOfRect(this._oLastPosition.of)}if(this._bFollowOf&&this.getOpenState()===sap.ui.core.OpenState.OPEN){a.DockTrigger.addListener(a.checkDocking,this)}};a.prototype.getAutoClose=function(){return this._bAutoClose};a.prototype.getFollowOf=function(){if(this._bFollowOf){return typeof(this._followOfHandler)==="function"?this._followOfHandler:true}return false};a.prototype.isOpen=function(){return this.bOpen};a.prototype.getOpenState=function(){return this.eOpenState};a.prototype.destroy=function(){if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}this.close();this.oContent=null;if(this._bFollowOf){this.setFollowOf(null)}if(this._bEventBusEventsRegistered){this._unregisterEventBusEvents()}};a.prototype.exit=function(){delete this._mFocusEvents};a.prototype._addFocusEventListeners=function(c,e,E){if(!this.fEventHandler){this.fEventHandler=q.proxy(this.onFocusEvent,this)}var p=this._$();var b=this.getChildPopups();if(document.addEventListener&&!sap.ui.Device.browser.internet_explorer){document.addEventListener("focus",this.fEventHandler,true);p.get(0).addEventListener("blur",this.fEventHandler,true);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){d.addEventListener("blur",this.fEventHandler,true)}}}else{q(document).bind("activate."+this._popupUID,this.fEventHandler);p.bind("deactivate."+this._popupUID,this.fEventHandler);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){q(d).bind("deactivate."+this._popupUID,this.fEventHandler)}}}};a.prototype._removeFocusEventListeners=function(c,e,E){var p=this._$(false,true);if(!p.length){return}var b=this.getChildPopups();if(document.removeEventListener&&!sap.ui.Device.browser.internet_explorer){document.removeEventListener("focus",this.fEventHandler,true);p.get(0).removeEventListener("blur",this.fEventHandler,true);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){d.removeEventListener("blur",this.fEventHandler,true)}this.closePopup(b[i])}}else{q(document).unbind("activate."+this._popupUID,this.fEventHandler);p.unbind("deactivate."+this._popupUID,this.fEventHandler);for(var i=0,l=b.length;i<l;i++){var d=q.sap.domById(b[i]);if(d){q(d).unbind("deactivate."+this._popupUID,this.fEventHandler)}}}this.fEventHandler=null};a.prototype._registerEventBusEvents=function(c,e,E){var t=this;q.each(t._mFocusEvents,function(s,l){sap.ui.getCore().getEventBus().subscribe("sap.ui",s,l,t)});this._bEventBusEventsRegistered=true};a.prototype._unregisterEventBusEvents=function(c,e,E){var t=this;q.each(t._mFocusEvents,function(s,l){sap.ui.getCore().getEventBus().unsubscribe("sap.ui",s,l,t)});delete this._bEventBusEventsRegistered};a.prototype._addFocusableArea=function(c,e,E){var p=this._popupUID;if(q.inArray(E.id,this.getChildPopups())===-1){this.addChildPopup(E.id)}var $=q('[data-sap-ui-popup="'+E.id+'"]');if($.length>0){var o=function(b){$.off("blur",o);var s="sap.ui.core.Popup.onFocusEvent-"+p;sap.ui.getCore().getEventBus().publish("sap.ui",s,b)};$.on("blur",o)}};a.prototype._removeFocusableArea=function(c,e,E){this.removeChildPopup(E.id)};a.prototype._closePopup=function(c,e,E){this.close(typeof this._durations.close==="string"?0:this._durations.close)};a.prototype._setIdentity=function($){if(typeof $==="object"){$.attr("data-sap-ui-popup",this._popupUID)}else{q.sap.log.warning("Incorrect DomRef-type for 'setIdentity': "+$,this);return}if(!this._bEventBusEventsRegistered){this._registerEventBusEvents()}};a.prototype._$=function(f,g){var c;if(this.oContent instanceof C){c=this.oContent.$();if(f||(c.length===0&&!g)){q.sap.log.info("Rendering of popup content: "+this.oContent.getId());if(c.length>0){R.preserveContent(c[0],true,false)}sap.ui.getCore().getRenderManager().render(this.oContent,sap.ui.getCore().getStaticAreaRef());c=this.oContent.$()}}else if(this.oContent instanceof sap.ui.core.Element){c=this.oContent.$()}else{c=q(this.oContent)}this._setIdentity(c);return c};a.prototype._showBlockLayer=function(){var b=q("#sap-ui-blocklayer-popup"),c="sapUiBLy"+(this._sModalCSSClass?" "+this._sModalCSSClass:"");if(b.length===0){b=q('<div id="sap-ui-blocklayer-popup" tabindex="0" class="'+c+'"></div>');b.appendTo(sap.ui.getCore().getStaticAreaRef())}else{b.removeClass().addClass(c)}a.blStack.push(this._iZIndex-2);b.css({"z-index":this._iZIndex-2,"visibility":"visible"}).show();q("html").addClass("sapUiBLyBack")};a.prototype._hideBlockLayer=function(){a.blStack.pop();if(a.blStack.length>0){q("#sap-ui-blocklayer-popup").css({"z-index":a.blStack[a.blStack.length-1],"visibility":"visible"}).show()}else{q("#sap-ui-blocklayer-popup").css("visibility","hidden").hide();q("html").removeClass("sapUiBLyBack")}};a.DockTrigger=new I(200);var r=function(o,b){if(o.left!=b.left||o.top!=b.top||o.width!=b.width||o.height!=b.height){return false}return true};a.checkDocking=function(){if(this.getOpenState()===sap.ui.core.OpenState.OPEN){var c=this._getOfDom(this._oLastPosition.of),o=q(c).rect();if(!o){this.close();return}if(!q.sap.containsOrEquals(document.documentElement,c)){if(c.id&&c.id!==""){var n=q.sap.domById(c.id);var N=q(n).rect();if(N&&!r(o,N)){o=N;delete this._oLastPosition.of;this._oLastPosition.of=n}}}if(this._oLastOfRect){if(!r(this._oLastOfRect,o)){if(this._followOfHandler){var l=q.extend(true,{},this._oLastPosition),L=q.extend(true,{},this._oLastOfRect);this._followOfHandler({lastPosition:l,lastOfRect:L,currentOfRect:o})}else{this._applyPosition(this._oLastPosition)}}}}};a.prototype.ontouchstart=function(e){this.onmousedown(e,true);this._bMousedownCalled=true};a.prototype.onmousedown=function(e,s){if(this._bMousedownCalled&&!s){this._bMousedownCalled=false;return}if(this._iZIndex===this.getLastZIndex()||this.getModal()){return}this._increaseMyZIndex("","mousedown",e)};a.prototype._increaseMyZIndex=function(c,e,E){var p=this.getParentPopup(this._oLastPosition.of);if(E.type&&E.type==="mousedown"||E.isFromParentPopup||p.length===0){this._iZIndex=this.getNextZIndex();var $=this._$();$.css("z-index",this._iZIndex);if(this._oBlindLayer){this._oBlindLayer.update($,this._iZIndex-1)}if(!E.type||E.type!="mousedown"){var b=this.getChildPopups();for(var i=0,l=b.length;i<l;i++){this.increaseZIndex(b[i],true)}}}else if(p.length>0){this.increaseZIndex(q(p.get(0)).attr("data-sap-ui-popup"),false)}};a.prototype.onAfterRendering=function(e){var $=this.getContent().$();$.toggleClass("sapUiShd",this._bShadow);$.css("position","absolute");this._setIdentity($);var b=$[0];var l=b.style.left;var c=b.style.right;var t=b.style.top;var d=b.style.bottom;if(!(l&&l!="auto"||c&&c!="auto"||t&&t!="auto"||d&&d!="auto")){q.sap.log.debug("reposition popup content "+$.attr("id")+" at "+(window.JSON?JSON.stringify(this._oLastPosition.at):String(this._oLastPosition.at)));this._applyPosition(this._oLastPosition)}$.show().css({"visibility":"visible","z-index":this._iZIndex});if(this._oBlindLayer){this._resizeListenerId=sap.ui.core.ResizeHandler.register(this._$().get(0),q.proxy(this.onresize,this))}if(this.isOpen()&&(this.getModal()||this.getAutoClose())){this._addFocusEventListeners()}};a.prototype.onBeforeRendering=function(e){if(this._resizeListenerId){sap.ui.core.ResizeHandler.deregister(this._resizeListenerId);this._resizeListenerId=null}if(this.isOpen()&&(this.getModal()||this.getAutoClose())){this._removeFocusEventListeners()}};a.prototype.onresize=function(e){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED&&this._oBlindLayer){var t=this;setTimeout(function(){t._updateBlindLayer()},0)}};a.prototype._updateBlindLayer=function(){if(this.eOpenState!=sap.ui.core.OpenState.CLOSED&&this._oBlindLayer){this._oBlindLayer.update(this._$())}};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ScrollBar')){jQuery.sap.declare('sap.ui.core.ScrollBar');sap.ui.define("sap/ui/core/ScrollBar",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.ScrollBar",{metadata:{publicMethods:["bind","unbind","pageUp","pageDown"],library:"sap.ui.core",properties:{"vertical":{type:"boolean",group:"Behavior",defaultValue:true},"scrollPosition":{type:"int",group:"Behavior",defaultValue:null},"size":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"contentSize":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"steps":{type:"int",group:"Dimension",defaultValue:null}},events:{"scroll":{}}}});sap.ui.core.ScrollBar.M_EVENTS={'scroll':'scroll'};sap.ui.core.ScrollBar.prototype.init=function(){this._$ScrollDomRef=null;this._iOldScrollPos=0;this._iOldStep=0;this._bScrollPosIsChecked=false;this._bRTL=sap.ui.getCore().getConfiguration().getRTL();this._bSuppressScroll=false;this._iMaxContentDivSize=1000000;if(jQuery.sap.touchEventMode==="ON"){jQuery.sap.require("sap.ui.thirdparty.zyngascroll");this._iLastTouchScrollerPosition=null;this._iTouchStepTreshold=24;this._bSkipTouchHandling=false;this._oTouchScroller=new window.Scroller(jQuery.proxy(this._handleTouchScroll,this),{bouncing:false})}};sap.ui.core.ScrollBar.prototype.onBeforeRendering=function(){this.$("sb").unbind("scroll",this.onscroll)};sap.ui.core.ScrollBar.prototype.onAfterRendering=function(){this._iSteps=this.getSteps();var c=this.getContentSize();this._bStepMode=!c;var s=this.getSize();if(jQuery.sap.endsWith(s,"px")){s=s.substr(0,s.length-2)}else{s=this.getVertical()?this.$().height():this.$().width()}var a=null;var $=this.$("ffsize");if(!!sap.ui.Device.browser.firefox){a=$.outerHeight()}$.remove();if(!!sap.ui.Device.browser.webkit){if(!document.width){a=Math.round(40/(window.outerWidth/jQuery(document).width()))}else{a=Math.round(40/(document.width/jQuery(document).width()))}}if(this.getVertical()){this._iFactor=!!sap.ui.Device.browser.firefox?a:!!sap.ui.Device.browser.webkit?a:Math.floor(s*0.125);this._iFactorPage=!!sap.ui.Device.browser.firefox?s-a:Math.floor(s*0.875)}else{this._iFactor=!!sap.ui.Device.browser.firefox?10:!!sap.ui.Device.browser.webkit?a:7;this._iFactorPage=!!sap.ui.Device.browser.firefox?Math.floor(s*0.8):!!sap.ui.Device.browser.webkit?Math.floor(s*0.875):s-14}this._$ScrollDomRef=this.$("sb");if(this._bStepMode){if(this.getVertical()){var S=this._iSteps*this._iFactor;if(S>this._iMaxContentDivSize){this._iFactor=Math.ceil(this._iFactor/Math.ceil(S/this._iMaxContentDivSize))}var C=this._$ScrollDomRef.height()+this._iSteps*this._iFactor;this._$ScrollDomRef.find("div").height(C)}else{var C=this._$ScrollDomRef.width()+this._iSteps*this._iFactor;this._$ScrollDomRef.find("div").width(C)}}this.setCheckedScrollPosition(this.getScrollPosition()?this.getScrollPosition():0,true);this._$ScrollDomRef.bind("scroll",jQuery.proxy(this.onscroll,this));if(jQuery.sap.touchEventMode==="ON"){this._bSkipTouchHandling=true;var o={width:0,height:0};o[this.getVertical()?"height":"width"]=this._bStepMode?(this.getSteps()*this._iTouchStepTreshold):parseInt(this.getContentSize(),10);this._oTouchScroller.setDimensions(0,0,o.width,o.height);var e=this._$ScrollDomRef.get(0);var r=e.getBoundingClientRect();this._oTouchScroller.setPosition(r.left+e.clientLeft,r.top+e.clientTop);this._bSkipTouchHandling=false}};sap.ui.core.ScrollBar.prototype.onmousewheel=function(e){if(this.$().is(":visible")){var o=e.originalEvent;var w=o.detail?o.detail:o.wheelDelta*(-1)/40;var f=w>0?true:false;if(jQuery.sap.containsOrEquals(this._$ScrollDomRef[0],e.target)){this._doScroll(sap.ui.core.ScrollBarAction.MouseWheel,f)}else{this._bMouseWheel=true;var p=null;if(this._bStepMode){p=w+this._iOldStep}else{p=w*this._iFactor+this._iOldScrollPos}this.setCheckedScrollPosition(p,true)}e.preventDefault();e.stopPropagation();return false}};sap.ui.core.ScrollBar.prototype.ontouchstart=function(e){var t=e.touches;var f=t[0];if(f&&f.target&&f.target.tagName.match(/input|textarea|select/i)){return}if(this._oTouchScroller){this._oTouchScroller.doTouchStart(t,e.timeStamp)}if(t.length==1){e.preventDefault()}};sap.ui.core.ScrollBar.prototype.ontouchmove=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchMove(e.touches,e.timeStamp,e.scale)}};sap.ui.core.ScrollBar.prototype.ontouchend=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchEnd(e.timeStamp)}};sap.ui.core.ScrollBar.prototype.ontouchcancel=function(e){if(this._oTouchScroller){this._oTouchScroller.doTouchEnd(e.timeStamp)}};sap.ui.core.ScrollBar.prototype.onscroll=function(e){if(this._bSuppressScroll){this._bSuppressScroll=false;e.preventDefault();e.stopPropagation();return false}var s=null;if(this._$ScrollDomRef){if(this.getVertical()){s=this._$ScrollDomRef.scrollTop()}else{s=this._$ScrollDomRef.scrollLeft();if(!!sap.ui.Device.browser.firefox&&this._bRTL){s=Math.abs(s)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var S=this._$ScrollDomRef.get(0);s=S.scrollWidth-S.clientWidth-S.scrollLeft}}}var d=s-this._iOldScrollPos;var f=d>0?true:false;if(d<0){d=d*(-1)}var a=sap.ui.core.ScrollBarAction.Drag;if(d==this._iFactor){a=sap.ui.core.ScrollBarAction.Step}else if(d==this._iFactorPage){a=sap.ui.core.ScrollBarAction.Page}else if(this._bMouseWheel){a=sap.ui.core.ScrollBarAction.MouseWheel}this._doScroll(a,f);e.preventDefault();e.stopPropagation();return false};sap.ui.core.ScrollBar.prototype._handleTouchScroll=function(l,t,z){if(this._bSkipTouchHandling){return}var v=this.getVertical()?t:l;if(this._bStepMode){var p=Math.max(Math.round(v/this._iTouchStepTreshold),0)}else{var p=Math.round(v)}if(this._iLastTouchScrollerPosition!==p){this._iLastTouchScrollerPosition=p;this.setCheckedScrollPosition(p,true);this.fireScroll()}};sap.ui.core.ScrollBar.prototype.unbind=function(o){if(o){this._$OwnerDomRef=jQuery(o);if(this.getVertical()){this._$OwnerDomRef.unbind(!!sap.ui.Device.browser.firefox?"DOMMouseScroll":"mousewheel",this.onmousewheel)}if(jQuery.sap.touchEventMode==="ON"){this._$OwnerDomRef.unbind(this._getTouchEventType("touchstart"),jQuery.proxy(this.ontouchstart,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchmove"),jQuery.proxy(this.ontouchmove,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchend"),jQuery.proxy(this.ontouchend,this));this._$OwnerDomRef.unbind(this._getTouchEventType("touchcancle"),jQuery.proxy(this.ontouchcancle,this))}}};sap.ui.core.ScrollBar.prototype.bind=function(o){if(o){this._$OwnerDomRef=jQuery(o);if(this.getVertical()){this._$OwnerDomRef.bind(!!sap.ui.Device.browser.firefox?"DOMMouseScroll":"mousewheel",jQuery.proxy(this.onmousewheel,this))}if(jQuery.sap.touchEventMode==="ON"){this._$OwnerDomRef.bind(this._getTouchEventType("touchstart"),jQuery.proxy(this.ontouchstart,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchmove"),jQuery.proxy(this.ontouchmove,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchend"),jQuery.proxy(this.ontouchend,this));this._$OwnerDomRef.bind(this._getTouchEventType("touchcancle"),jQuery.proxy(this.ontouchcancle,this))}}};sap.ui.core.ScrollBar.prototype._getTouchEventType=function(t){return jQuery.sap.touchEventMode==="SIM"?("sap"+t):t};sap.ui.core.ScrollBar.prototype.pageUp=function(){this._doScroll(sap.ui.core.ScrollBarAction.Page,false)};sap.ui.core.ScrollBar.prototype.pageDown=function(){this._doScroll(sap.ui.core.ScrollBarAction.Page,true)};sap.ui.core.ScrollBar.prototype.setScrollPosition=function(s){if(this._$ScrollDomRef){this.setCheckedScrollPosition(s,true)}else{this.setProperty("scrollPosition",s)}return this};sap.ui.core.ScrollBar.prototype.setCheckedScrollPosition=function(s,c){var C=Math.max(s,0);if(this._bStepMode===undefined){this._bStepMode=!this.getContentSize()}var S=C;if(this._bStepMode){C=Math.min(C,this.getSteps());S=C*this._iFactor}C=Math.floor(C);this._bSuppressScroll=!c;this.setProperty("scrollPosition",C,true);if(this.getVertical()){this._$ScrollDomRef.scrollTop(S)}else{if(!!sap.ui.Device.browser.firefox&&this._bRTL){this._$ScrollDomRef.scrollLeft(-S)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var o=this._$ScrollDomRef.get(0);this._$ScrollDomRef.scrollLeft(o.scrollWidth-o.clientWidth-S)}else{this._$ScrollDomRef.scrollLeft(S)}}if(jQuery.sap.touchEventMode==="ON"){var v=C;if(this._bStepMode){v=Math.round(C*this._iTouchStepTreshold)}this._oTouchScroller.__scrollTop=this.getVertical()?v:0;this._oTouchScroller.__scrollLeft=this.getVertical()?0:v}};sap.ui.core.ScrollBar.prototype.setContentSize=function(c){this.setProperty("contentSize",c);this._bStepMode=false;var s=this.$("sbcnt");if(s){if(this.getVertical()){s.height(c)}else{s.width(c)}}return this};sap.ui.core.ScrollBar.prototype._doScroll=function(e,f){var s=null;if(this._$ScrollDomRef){if(this.getVertical()){s=this._$ScrollDomRef.scrollTop()}else{s=this._$ScrollDomRef.scrollLeft();if(!!sap.ui.Device.browser.firefox&&this._bRTL){s=Math.abs(s)}else if(!!sap.ui.Device.browser.webkit&&this._bRTL){var S=this._$ScrollDomRef.get(0);s=S.scrollWidth-S.clientWidth-S.scrollLeft}}}if(this._bStepMode){var i=Math.round(s/this._iFactor);var o=this._iOldStep;if(o!==i){this.setCheckedScrollPosition(i,false);jQuery.sap.log.debug("-----STEPMODE-----: New Step: "+i+" --- Old Step: "+o+" --- Scroll Pos in px: "+s+" --- Action: "+e+" --- Direction is forward: "+f);this.fireScroll({action:e,forward:f,newScrollPos:i,oldScrollPos:o});this._iOldStep=i}}else{this.setProperty("scrollPosition",s,true);jQuery.sap.log.debug("-----PIXELMODE-----: New ScrollPos: "+s+" --- Old ScrollPos: "+this._iOldScrollPos+" --- Action: "+e+" --- Direction is forward: "+f);this.fireScroll({action:e,forward:f,newScrollPos:s,oldScrollPos:this._iOldScrollPos})}this._bSuppressScroll=false;this._iOldScrollPos=s;this._bMouseWheel=false};sap.ui.core.ScrollBar.prototype.onThemeChanged=function(){this.rerender()};sap.ui.core.ScrollBar.prototype.getNativeScrollPosition=function(){if(this._$ScrollDomRef){if(this.getVertical()){return this._$ScrollDomRef.scrollTop()}else{return this._$ScrollDomRef.scrollLeft()}}return 0};sap.ui.core.ScrollBar.prototype.setNativeScrollPosition=function(n){if(this._$ScrollDomRef){if(this.getVertical()){this._$ScrollDomRef.scrollTop(n)}else{this._$ScrollDomRef.scrollLeft(n)}}};return sap.ui.core.ScrollBar},true)};if(!jQuery.sap.isDeclared('sap.ui.core.SeparatorItem')){jQuery.sap.declare('sap.ui.core.SeparatorItem');sap.ui.define("sap/ui/core/SeparatorItem",['./library','./Item'],function(){"use strict";sap.ui.core.Item.extend("sap.ui.core.SeparatorItem",{metadata:{library:"sap.ui.core"}});return sap.ui.core.SeparatorItem},true)};if(!jQuery.sap.isDeclared('sap.ui.core.Title')){jQuery.sap.declare('sap.ui.core.Title');sap.ui.define("sap/ui/core/Title",['./library','./Element'],function(){"use strict";sap.ui.core.Element.extend("sap.ui.core.Title",{metadata:{library:"sap.ui.core",properties:{"text":{type:"string",group:"Appearance",defaultValue:null},"icon":{type:"sap.ui.core.URI",group:"Appearance",defaultValue:null},"level":{type:"sap.ui.core.TitleLevel",group:"Appearance",defaultValue:sap.ui.core.TitleLevel.Auto},"emphasized":{type:"boolean",group:"Appearance",defaultValue:false}}}});return sap.ui.core.Title},true)};if(!jQuery.sap.isDeclared('sap.ui.core.TooltipBase')){jQuery.sap.declare('sap.ui.core.TooltipBase');sap.ui.define("sap/ui/core/TooltipBase",['./library','./Control','./Popup'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.TooltipBase",{metadata:{"abstract":true,library:"sap.ui.core",properties:{"text":{type:"string",group:"Misc",defaultValue:""},"openDuration":{type:"int",group:"Behavior",defaultValue:200},"closeDuration":{type:"int",group:"Behavior",defaultValue:200},"myPosition":{type:"sap.ui.core.Dock",group:"Behavior",defaultValue:'begin top'},"atPosition":{type:"sap.ui.core.Dock",group:"Behavior",defaultValue:'begin bottom'},"offset":{type:"string",group:"Behavior",defaultValue:'10 3'},"collision":{type:"sap.ui.core.Collision",group:"Behavior",defaultValue:'flip'},"openDelay":{type:"int",group:"Misc",defaultValue:500},"closeDelay":{type:"int",group:"Misc",defaultValue:100}},events:{"closed":{}}}});sap.ui.core.TooltipBase.M_EVENTS={'closed':'closed'};sap.ui.core.TooltipBase.prototype._getPopup=jQuery.sap.getter((function(){var p=new sap.ui.core.Popup();p.setShadow(true);return p}()));sap.ui.core.TooltipBase.prototype.onfocusin=function(e){var s=jQuery(e.target).control(0);if(s!=null){var d=s.getFocusDomRef();this.sStoredTooltip=null;if(d.title&&d.title!=""){this.sStoredTooltip=d.title;d.title=""}var p=this._getPopup();if(!(p.isOpen()&&p.getContent()==this)){sap.ui.getCore().getRenderManager().render(this,sap.ui.getCore().getStaticAreaRef(),true)}var v=d.getAttribute("aria-describedby");var i=this.getId()+"-title "+this.getId()+"-txt";if(v==null||v==""){d.setAttribute("aria-describedby",i)}else if(v.indexOf(i)==-1){d.setAttribute("aria-describedby",v+" "+i)}}};sap.ui.core.TooltipBase.prototype.onfocusout=function(e){var s=jQuery(e.target).control(0);if(s!=null){var d=s.getFocusDomRef();if(this.sStoredTooltip){d.title=this.sStoredTooltip}var v=d.getAttribute("aria-describedby");var i=this.getId()+"-title "+this.getId()+"-txt";if(v&&v.indexOf(i)>=0){if(jQuery.trim(v)==i){d.removeAttribute("aria-describedby")}else{v=v.replace(i,"");d.setAttribute("aria-describedby",v)}}}if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}this.sCloseNowTimeout=jQuery.sap.delayedCall(this.getCloseDelay(),this,"closePopup")};sap.ui.core.TooltipBase.prototype.isStandardTooltip=function(t){return(typeof t==="string"&&(jQuery.trim(t))!=="")};sap.ui.core.TooltipBase.prototype.onmouseover=function(e){var E=jQuery(e.target).control(0);if(E!=null){if(E===this){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null}e.stopPropagation();e.preventDefault();return}var c=jQuery(e.currentTarget).control(0);if(c!==E&&!this.isStandardTooltip(E.getTooltip())){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;e.stopPropagation();e.preventDefault();return}}var l=jQuery(e.relatedTarget).control(0);if(l){if(l.getParent()){if(l.getParent()===c&&c===E){var L=l.getTooltip();if(!this.isStandardTooltip(L)&&(!L||!(L instanceof sap.ui.core.TooltipBase))){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;e.stopPropagation();e.preventDefault();return}}}}}if(this._currentControl===E||!this.isStandardTooltip(E.getTooltip())){this.removeStandardTooltips(E);if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout)}sap.ui.core.TooltipBase.sOpenTimeout=jQuery.sap.delayedCall(this.getOpenDelay(),this,"openPopup",[this._currentControl]);e.stopPropagation();e.preventDefault()}}};sap.ui.core.TooltipBase.prototype.onmouseout=function(e){if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}if(!this.sCloseNowTimeout){this.sCloseNowTimeout=jQuery.sap.delayedCall(this.getCloseDelay(),this,"closePopup")}this.restoreStandardTooltips();e.stopPropagation();e.preventDefault()};sap.ui.core.TooltipBase.prototype.closePopup=function(){var p=this._getPopup();if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout)}this.sCloseNowTimeout=undefined;p.attachClosed(this.handleClosed,this);p.close();this.restoreStandardTooltips()};sap.ui.core.TooltipBase.prototype.handleClosed=function(){this._getPopup().detachClosed(jQuery.proxy(this.handleClosed,this));this.fireClosed()};sap.ui.core.TooltipBase.prototype.openPopup=function(s){if(s.getTooltip()!=null){if(this.sCloseNowTimeout){jQuery.sap.clearDelayedCall(this.sCloseNowTimeout);this.sCloseNowTimeout=null;return}var p=this._getPopup();if(p.isOpen()&&p.getContent()==this){return}sap.ui.getCore().getRenderManager().render(this,sap.ui.getCore().getStaticAreaRef(),true);var d=s.getDomRef();p.setContent(this);p.setPosition(this.getMyPosition(),this.getAtPosition(),d,this.getOffset(),this.getCollision());p.setDurations(this.getOpenDuration(),this.getCloseDuration());p.open();this.removeStandardTooltips(this._currentControl)}};sap.ui.core.TooltipBase.prototype.removeStandardTooltips=function(){var d=this._currentControl.getDomRef();if(!this.aStoredTooltips){this.aStoredTooltips=[]}else{return}var t="";while(d&&!(d===document)){t=d.title;if(t){this.aStoredTooltips.push({domref:d,tooltip:t});d.title=""}d=d.parentNode}if(this._currentControl.getTooltipDomRefs){var D=this._currentControl.getTooltipDomRefs();for(var i=0;i<D.length;i++){d=D[i];if(d){t=d.title;if(t){this.aStoredTooltips.push({domref:d,tooltip:t});d.title=""}}}}};sap.ui.core.TooltipBase.prototype.restoreStandardTooltips=function(){var p=this._getPopup();var e=p.getOpenState();if(e===sap.ui.core.OpenState.OPEN||e===sap.ui.core.OpenState.OPENING){return}if(sap.ui.core.TooltipBase.sOpenTimeout){return}if(this.aStoredTooltips){for(var i=0;i<this.aStoredTooltips.length;i++){var d=this.aStoredTooltips[i].domref;d.title=this.aStoredTooltips[i].tooltip}}this.aStoredTooltips=null};sap.ui.core.TooltipBase.prototype._setParent=sap.ui.core.TooltipBase.prototype.setParent;sap.ui.core.TooltipBase.prototype.setParent=function(p,a){var _=this._getPopup();if(_&&_.isOpen()){this.closePopup()}this._setParent.apply(this,arguments)};sap.ui.core.TooltipBase.prototype.onkeydown=function(e){if(e.ctrlKey&&e.which==jQuery.sap.KeyCodes.I){var E=jQuery(e.target).control(0);if(E!=null){if(this._currentControl===E||!this.isStandardTooltip(E.getTooltip())){this.removeStandardTooltips(E);this.openPopup(this._currentControl);e.preventDefault();e.stopPropagation()}}}else if(e.which==jQuery.sap.KeyCodes.ESCAPE){if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}var w=this.oPopup&&this.oPopup.isOpen();this.closePopup();if(w){e.preventDefault();e.stopPropagation()}}};sap.ui.core.TooltipBase.prototype._closeOrPreventOpen=function(){var p=this._getPopup();if(p.isOpen()){this.closePopup()}else if(sap.ui.core.TooltipBase.sOpenTimeout){jQuery.sap.clearDelayedCall(sap.ui.core.TooltipBase.sOpenTimeout);sap.ui.core.TooltipBase.sOpenTimeout=undefined}};return sap.ui.core.TooltipBase},true)};if(!jQuery.sap.isDeclared('sap.ui.core.VariantLayoutData')){jQuery.sap.declare('sap.ui.core.VariantLayoutData');sap.ui.define("sap/ui/core/VariantLayoutData",['./library','./LayoutData'],function(){"use strict";sap.ui.core.LayoutData.extend("sap.ui.core.VariantLayoutData",{metadata:{library:"sap.ui.core",aggregations:{"multipleLayoutData":{type:"sap.ui.core.LayoutData",multiple:true,singularName:"multipleLayoutData"}}}});return sap.ui.core.VariantLayoutData},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.View')){jQuery.sap.declare('sap.ui.core.mvc.View');sap.ui.define("sap/ui/core/mvc/View",['sap/ui/core/library','sap/ui/core/Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.mvc.View",{metadata:{publicMethods:["getController"],library:"sap.ui.core",properties:{"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:'100%'},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"viewName":{type:"string",group:"Misc",defaultValue:null},"displayBlock":{type:"boolean",group:"Appearance",defaultValue:false}},aggregations:{"content":{type:"sap.ui.core.Control",multiple:true,singularName:"content"}},events:{"afterInit":{},"beforeExit":{},"afterRendering":{},"beforeRendering":{}}}});sap.ui.core.mvc.View.M_EVENTS={'afterInit':'afterInit','beforeExit':'beforeExit','afterRendering':'afterRendering','beforeRendering':'beforeRendering'};(function(){sap.ui.core.mvc.View.prototype._initCompositeSupport=function(s){this.oViewData=s.viewData;this.sViewName=s.viewName;if(this.initViewSettings){this.initViewSettings(s)}c(this,s);if(this.onControllerConnected){this.onControllerConnected(this.oController)}this.fireAfterInit()};sap.ui.core.mvc.View.prototype.getController=function(){return this.oController};sap.ui.core.mvc.View.prototype.byId=function(i){return sap.ui.getCore().byId(this.createId(i))};sap.ui.core.mvc.View.prototype.createId=function(i){if(!this.isPrefixedId(i)){i=this.getId()+"--"+i}return i};sap.ui.core.mvc.View.prototype.isPrefixedId=function(i){return(i&&i.indexOf(this.getId()+"--")===0)};var c=function(t,s){var C=s.controller;if(!C&&t.getControllerName){var d=t.getControllerName();if(d){C=sap.ui.controller(d)}}if(sap.ui.getCore().getConfiguration().getDesignMode()&&!sap.ui.getCore().getConfiguration().getSuppressDeactivationOfControllerCode()){for(var m in C){if(typeof C[m]==="function"&&!sap.ui.core.mvc.Controller.prototype[m]){C[m]=function(){}}}}if(C){t.oController=C;C.connectToView(t)}};sap.ui.core.mvc.View.prototype.getViewData=function(){return this.oViewData};sap.ui.core.mvc.View.prototype.exit=function(){this.fireBeforeExit();this.oController=null};sap.ui.core.mvc.View.prototype.onAfterRendering=function(){this.fireAfterRendering()};sap.ui.core.mvc.View.prototype.onBeforeRendering=function(){this.fireBeforeRendering()};sap.ui.core.mvc.View.prototype.clone=function(i,l){var s={},k,C;for(k in this.mProperties&&!(this.isBound&&this.isBound(k))){if(this.mProperties.hasOwnProperty(k)){s[k]=this.mProperties[k]}}C=sap.ui.core.Control.prototype.clone.call(this,i,l,{cloneChildren:false,cloneBindings:true});C.applySettings(s);return C};sap.ui.view=function(i,v,t){var a=null,V={};if(typeof i==="object"||typeof i==="string"&&v===undefined){v=i;i=undefined}if(v){if(typeof v==="string"){V.viewName=v}else{V=v}}if(i){V.id=i}if(t){V.type=t}if(sap.ui.core.CustomizingConfiguration){var b=sap.ui.core.CustomizingConfiguration.getViewReplacement(V.viewName);if(b){jQuery.sap.log.info("Customizing: View replacement for view '"+V.viewName+"' found and applied: "+b.viewName+" (type: "+b.type+")");jQuery.extend(V,b)}else{jQuery.sap.log.debug("Customizing: no View replacement found for view '"+V.viewName+"'.")}}if(!V.type){throw new Error("No view type specified.")}else if(V.type===sap.ui.core.mvc.ViewType.JS){a=new sap.ui.core.mvc.JSView(V)}else if(V.type===sap.ui.core.mvc.ViewType.JSON){a=new sap.ui.core.mvc.JSONView(V)}else if(V.type===sap.ui.core.mvc.ViewType.XML){a=new sap.ui.core.mvc.XMLView(V)}else if(V.type===sap.ui.core.mvc.ViewType.HTML){a=new sap.ui.core.mvc.HTMLView(V)}else if(V.type===sap.ui.core.mvc.ViewType.Template){a=new sap.ui.core.mvc.TemplateView(V)}else{throw new Error("Unknown view type "+V.type+" specified.")}return a}}());return sap.ui.core.mvc.View},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.XMLView')){jQuery.sap.declare('sap.ui.core.mvc.XMLView');sap.ui.define("sap/ui/core/mvc/XMLView",['sap/ui/core/library','./View','jquery.sap.xml','sap/ui/base/DataType','sap/ui/model/resource/ResourceModel','sap/ui/core/XMLTemplateProcessor'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.XMLView",{metadata:{library:"sap.ui.core"}});sap.ui.xmlview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.XML)};sap.ui.core.mvc.XMLView._sType=sap.ui.core.mvc.ViewType.XML;sap.ui.core.mvc.XMLView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if((s.viewName||s.viewContent)&&s.xmlNode){throw new Error("View name/content AND an XML node are given. There is no point in doing this, so please decide.")}else if(!(s.viewName||s.viewContent)&&!s.xmlNode){throw new Error("Neither view name/content nor an XML node is given. One of them is required.")}if(s.viewName){this._xContent=sap.ui.core.XMLTemplateProcessor.loadTemplate(s.viewName)}else if(s.viewContent){this.mProperties["viewContent"]=s.viewContent;this._xContent=jQuery.sap.parseXML(s.viewContent);if(this._xContent.parseError.errorCode!=0){var p=this._xContent.parseError;throw new Error("The following problem occurred: XML parse Error for "+p.url+" code: "+p.errorCode+" reason: "+p.reason+" src: "+p.srcText+" line: "+p.line+" linepos: "+p.linepos+" filepos: "+p.filepos)}else{this._xContent=this._xContent.documentElement}}else if(s.xmlNode){this._xContent=s.xmlNode}else{}this._oContainingView=s.containingView||this;if(!this.isSubView()){sap.ui.core.XMLTemplateProcessor.parseViewAttributes(this._xContent,this,s)}else{delete s.controller}if((this._resourceBundleName||this._resourceBundleUrl)&&(!s.models||!s.models[this._resourceBundleAlias])){var m=new sap.ui.model.resource.ResourceModel({bundleName:this._resourceBundleName,bundleUrl:this._resourceBundleUrl,bundleLocale:this._resourceBundleLocale});this.setModel(m,this._resourceBundleAlias)}var t=this;this.oAfterRenderingNotifier=new sap.ui.core.mvc.XMLAfterRenderingNotifier();this.oAfterRenderingNotifier.addDelegate({onAfterRendering:function(){t.onAfterRenderingBeforeChildren()}})};sap.ui.core.mvc.XMLView.prototype.exit=function(){this.oAfterRenderingNotifier.destroy();sap.ui.core.mvc.View.prototype.exit.apply(this,arguments)};sap.ui.core.mvc.XMLView.prototype.onControllerConnected=function(c){var t=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){t._aParsedContent=sap.ui.core.XMLTemplateProcessor.parseTemplate(t._xContent,t)})};sap.ui.core.mvc.XMLView.prototype.getControllerName=function(){return this._controllerName};sap.ui.core.mvc.XMLView.prototype.isSubView=function(){return this._oContainingView!=this};sap.ui.core.mvc.XMLView.prototype.onAfterRenderingBeforeChildren=function(){if(this._$oldContent.length!==0){var c=this.getAggregation("content");if(c){for(var i=0;i<c.length;i++){if(c[i].getDomRef()===null){continue}var $=c[i].$();jQuery.sap.byId("sap-ui-dummy-"+c[i].getId(),this._$oldContent).replaceWith($)}}jQuery.sap.byId("sap-ui-dummy-"+this.getId()).replaceWith(this._$oldContent)}this._$oldContent=undefined};sap.ui.core.mvc.XMLView.prototype._onChildRerenderedEmpty=function(c,e){jQuery(e).replaceWith('<div id="sap-ui-dummy-'+c.getId()+'" class="sapUiHidden"/>');return true};sap.ui.core.Control.extend("sap.ui.core.mvc.XMLAfterRenderingNotifier",{renderer:function(r,c){r.write("")}});return sap.ui.core.mvc.XMLView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.search.OpenSearchProvider')){jQuery.sap.declare('sap.ui.core.search.OpenSearchProvider');sap.ui.define("sap/ui/core/search/OpenSearchProvider",['sap/ui/core/library','./SearchProvider','jquery.sap.encoder'],function(){"use strict";sap.ui.core.search.SearchProvider.extend("sap.ui.core.search.OpenSearchProvider",{metadata:{library:"sap.ui.core",properties:{"suggestUrl":{type:"sap.ui.core.URI",group:"Misc",defaultValue:null},"suggestType":{type:"string",group:"Misc",defaultValue:'json'}}}});sap.ui.core.search.OpenSearchProvider.prototype.suggest=function(v,c){var u=this.getSuggestUrl();if(!u){return}u=u.replace("{searchTerms}",jQuery.sap.encodeURL(v));var t=this.getSuggestType();var s;if(t&&t.toLowerCase()==="xml"){t="xml";s=function(d){var x=jQuery(d);var i=x.find("Text");var S=[];i.each(function(){S.push(jQuery(this).text())});c(v,S)}}else{t="json";s=function(d){c(v,d[1])}}jQuery.ajax({url:u,dataType:t,success:s,error:function(X,a,e){jQuery.sap.log.fatal("The following problem occurred: "+a,X.responseText+","+X.status)}})};return sap.ui.core.search.OpenSearchProvider},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.DOMElement')){jQuery.sap.declare('sap.ui.core.tmpl.DOMElement');sap.ui.define("sap/ui/core/tmpl/DOMElement",['sap/ui/core/library','sap/ui/core/Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.tmpl.DOMElement",{metadata:{publicMethods:["attr","removeAttr"],library:"sap.ui.core",properties:{"text":{type:"string",group:"Appearance",defaultValue:null},"tag":{type:"string",group:"Behavior",defaultValue:'span'}},aggregations:{"attributes":{type:"sap.ui.core.tmpl.DOMAttribute",multiple:true,singularName:"attribute"},"elements":{type:"sap.ui.core.tmpl.DOMElement",multiple:true,singularName:"element"}}}});sap.ui.core.tmpl.DOMElement.prototype.applySettings=function(s){sap.ui.core.Control.prototype.applySettings.apply(this,arguments);var t=this,m=this.getMetadata(),j=m.getJSONKeys();jQuery.each(s,function(k,v){if(k!=="id"&&k!=="text"&&!j[k]&&typeof v==="string"){t.attr(k,v)}})};sap.ui.core.tmpl.DOMElement.prototype.exit=sap.ui.core.tmpl.DOMElement.prototype.onBeforeRendering=function(){var t=this.getTag().toLowerCase();if(t==="input"||t==="textarea"||t==="select"){this.$().off("change")}};sap.ui.core.tmpl.DOMElement.prototype.onAfterRendering=function(){var t=this.getTag().toLowerCase();if(t==="input"||t==="textarea"||t==="select"){this.$().on("change",jQuery.proxy(this.oninputchange,this))}};sap.ui.core.tmpl.DOMElement.prototype.oninputchange=function(e){var t=this.getTag().toLowerCase();if(t==="input"){var v=this.$().val();jQuery.each(this.getAttributes(),function(i,a){if(a.getName().toLowerCase()==="value"){a.setValue(v)}})}else if(t==="textarea"){var T=this.$().val();this.setText(T)}else if(t==="select"){var T="";this.$().find("select option:selected").each(function(){T+=jQuery(this).text()+" "});this.setText(T)}};sap.ui.core.tmpl.DOMElement.prototype.attr=function(k,v){var a=this.getAttributes(),A;jQuery.each(a,function(i,V){var n=V.getName();if(n.toLowerCase()===k){A=V;return false}});if(v===undefined){return A&&A.getValue()}else{if(A){if(v===null){this.removeAttribute(A)}else{A.setValue(v)}}else{if(v!==null){this.addAttribute(new sap.ui.core.tmpl.DOMAttribute({name:k,value:v}))}}return this}};sap.ui.core.tmpl.DOMElement.prototype.removeAttr=function(k){this.attr(k,null);return this};sap.ui.core.tmpl.DOMElement.prototype.setText=function(t){this.setProperty("text",t,true);var $=this.$();if($.length>0){var T=this.getTag().toLowerCase();if(T==="textarea"){$.val(this.getProperty("text"))}else{$.text(this.getProperty("text"))}}};return sap.ui.core.tmpl.DOMElement},true)};if(!jQuery.sap.isDeclared('sap.ui.core.tmpl.TemplateControl')){jQuery.sap.declare('sap.ui.core.tmpl.TemplateControl');sap.ui.define("sap/ui/core/tmpl/TemplateControl",['sap/ui/core/library','sap/ui/core/Control','./DOMElement','./DOMAttribute','sap/ui/core/DeclarativeSupport'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.tmpl.TemplateControl",{metadata:{library:"sap.ui.core",properties:{"context":{type:"object",group:"Data",defaultValue:null}},aggregations:{"controls":{type:"sap.ui.core.Control",multiple:true,singularName:"control",visibility:"hidden"}},associations:{"template":{type:"sap.ui.core.tmpl.Template",multiple:false}},events:{"afterRendering":{},"beforeRendering":{}}}});sap.ui.core.tmpl.TemplateControl.M_EVENTS={'afterRendering':'afterRendering','beforeRendering':'beforeRendering'};sap.ui.core.tmpl.TemplateControl.prototype.init=function(){this._aBindingInfos=[]};sap.ui.core.tmpl.TemplateControl.prototype.isInline=function(){var i=false;if(this.getParent()instanceof sap.ui.core.UIArea&&jQuery(this.getParent().getRootNode()).attr("id")===this.getId()){i=true}return i};sap.ui.core.tmpl.TemplateControl.prototype.placeAt=function(r,p){var i=this.isInline();var $=this.$(),u=this.getUIArea();sap.ui.core.Control.prototype.placeAt.apply(this,arguments);if(i&&$.length===1){$.remove();u.destroyContent()}};sap.ui.core.tmpl.TemplateControl.prototype.getTemplateRenderer=function(){return this.fnRenderer};sap.ui.core.tmpl.TemplateControl.prototype.setTemplateRenderer=function(r){this.fnRenderer=r;return this};sap.ui.core.tmpl.TemplateControl.prototype._cleanup=function(){this.destroyAggregation("controls");if(this._aBindingInfos){var t=this;jQuery.each(this._aBindingInfos,function(i,b){t.getModel(b.model).removeBinding(b.binding)});this._aBindingInfos=[]}};sap.ui.core.tmpl.TemplateControl.prototype._compile=function(){var t=sap.ui.getCore().byId(this.getTemplate()),d=t&&t.getDeclarativeSupport();if(d){var a=this;setTimeout(function(){sap.ui.core.DeclarativeSupport.compile(a.getDomRef())})}};sap.ui.core.tmpl.TemplateControl.prototype.exit=function(){this._cleanup()};sap.ui.core.tmpl.TemplateControl.prototype.onBeforeRendering=function(){this.fireBeforeRendering();this._cleanup()};sap.ui.core.tmpl.TemplateControl.prototype.onAfterRendering=function(){this.fireAfterRendering()};sap.ui.core.tmpl.TemplateControl.prototype.updateBindings=function(u,m){sap.ui.base.ManagedObject.prototype.updateBindings.apply(this,arguments);if(this.getDomRef()){this.invalidate()}};sap.ui.core.tmpl.TemplateControl.prototype.bind=function(p,t){var P=sap.ui.core.tmpl.Template.parsePath(p),m=this.getModel(P.model),p=P.path,M=t?"bind"+jQuery.sap.charToUpperCase(t):"bindProperty",b=m&&m[M](p),a=this;if(b){b.attachChange(function(){jQuery.sap.log.debug("TemplateControl#"+a.getId()+": "+t+" binding changed for path \""+p+"\"");a.invalidate()})}this._aBindingInfos.push({binding:b,path:P.path,model:P.model});return b};sap.ui.core.tmpl.TemplateControl.prototype.bindProp=function(p){var b=this.bind(p,"property");return b&&b.getExternalValue()};sap.ui.core.tmpl.TemplateControl.prototype.bindList=function(p){var b=this.bind(p,"list"),m=b&&b.getModel(),p=b&&b.getPath();return b&&m.getProperty(p)};sap.ui.core.tmpl.TemplateControl.prototype.createDOMElement=function(s,p,d){var e=new sap.ui.core.tmpl.DOMElement(s);if(p){e.bindElement(p)}if(!d){this.addAggregation("controls",e)}return e};sap.ui.core.tmpl.TemplateControl.prototype.createControl=function(s,p,d,v){var h={};jQuery.each(s,function(k,V){h["data-"+jQuery.sap.hyphen(k)]=V});var $=jQuery("<div/>",h);var c=sap.ui.core.DeclarativeSupport._createControl($.get(0),v);if(p){c.bindElement(p)}if(!d){this.addAggregation("controls",c)}return c};return sap.ui.core.tmpl.TemplateControl},true)};if(!jQuery.sap.isDeclared('sap.ui.core.util.Export')){jQuery.sap.declare('sap.ui.core.util.Export');sap.ui.define("sap/ui/core/util/Export",['jquery.sap.global','sap/ui/core/Control','./ExportColumn','./ExportRow','./ExportType','./File'],function(q,C,E,a,b,F){'use strict';function w(f,o){if(f){return function(){return f.apply(o,arguments)}}else{return f}}function p(m){q.sap.log.warning("Usage of deprecated jQuery Promise method: '"+m+"'. "+"Please use the standard Promise methods 'then' / 'catch' instead!","","sap.ui.core.util.Export")}function c(P,o){var O=new Promise(P);o=o||O;var r=false,R=false;O.then(function(v){r=true;return v},function(e){R=true;throw e});var m={then:O.then,"catch":O["catch"]};function f(e){e.then=function(s,g){var A=[w(s,o),w(g,o)];return f(m.then.apply(e,A),o)};e["catch"]=function(g){var A=[w(g,o)];return f(m["catch"].apply(e,A),o)};q.each([{jq:"done",es6:"then"},{jq:"fail",es6:"catch"},{jq:"always",es6:"then"}],function(i,g){e[g.jq]=function(){p(g.jq);var h=null;q.each(Array.prototype.concat.apply([],arguments),function(i,j){var W=w(j,o);var k=function(v){W.apply(this,arguments);return v};var A=[k];if(g.jq==="always"){A.push(k)}if(!h){h=m[g.es6].apply(e,A)}else{h=h[g.es6].apply(h,A)}});return f(h,o)}});e.pipe=function(D,g){p("pipe");return e.then(D,g)};e.state=function(){p("state");if(r){return"resolved"}else if(R){return"rejected"}else{return"pending"}};return e}return f(O)};var d=C.extend('sap.ui.core.util.Export',{metadata:{publicMethods:["generate","saveFile"],library:"sap.ui.core",aggregations:{exportType:{type:'sap.ui.core.util.ExportType',multiple:false},columns:{type:'sap.ui.core.util.ExportColumn',multiple:true,bindable:'bindable'},rows:{type:'sap.ui.core.util.ExportRow',multiple:true,bindable:'bindable'},_template:{type:'sap.ui.core.util.ExportRow',multiple:false,visibility:'hidden'}}}});d.getMetadata().getAllAggregations()["rows"]._doesNotRequireFactory=true;d.prototype.init=function(){this._oPromise=null;this._fnResolvePromise=null;this._oRowBindingInfo=null};d.prototype.exit=function(){delete this._oPromise;delete this._fnResolvePromise;delete this._oRowBindingInfo};d.prototype._createRowTemplate=function(){var t=new a(this.getId()+"-row"),e=this.getColumns();for(var i=0,l=e.length;i<l;i++){var o=e[i].getTemplate();if(o){t.addCell(o.clone("col"+i))}}return t};d.prototype.bindAggregation=function(n,B){if(n==='rows'){this._oRowBindingInfo=B;return this}return C.prototype.bindAggregation.apply(this,arguments)};d.prototype.updateRows=function(r){if(r==='change'&&this._fnResolvePromise){var s=this.getExportType()._generate(this);this.destroyAggregation('_template');this.unbindAggregation('rows');this._fnResolvePromise(s);this._oPromise=null;this._fnResolvePromise=null}};d.prototype.generate=function(){var e=this;if(!this._oPromise){this._oPromise=c(function(r,f){e._fnResolvePromise=r;if(!e.hasModel()){f("Generate is not possible beause no model was set.")}else{var t=e._createRowTemplate();e.setAggregation('_template',t,true);C.prototype.bindAggregation.call(e,'rows',e._oRowBindingInfo);if(e.getBinding("rows")){e.getBinding("rows").getContexts(0,e.getBinding("rows").getLength())}}},this)}return this._oPromise};d.prototype.saveFile=function(f){return this.generate().then(function(s){var e=this.getExportType();F.save(s,f||"data",e.getFileExtension(),e.getMimeType(),e.getCharset())})};return d},true)};if(!jQuery.sap.isDeclared('sap.ui.core.BusyIndicator')){jQuery.sap.declare('sap.ui.core.BusyIndicator');sap.ui.define("sap/ui/core/BusyIndicator",['jquery.sap.global','./Popup'],function(q,P){"use strict";var B=q.extend(q.sap.newObject(sap.ui.base.EventProvider.prototype),{oPopup:null,oDomRef:null,bOpenRequested:false,iDEFAULT_DELAY_MS:1000,sDOM_ID:"sapUiBusyIndicator"});sap.ui.base.EventProvider.apply(B);B.M_EVENTS={Open:"Open",Close:"Close"};B._init=function(){var r=document.createElement("div");r.id=this.sDOM_ID;this._oResBundle=sap.ui.getCore().getLibraryResourceBundle("sap.ui.core");var t=this._oResBundle.getText("BUSY_TEXT");delete this._oResBundle;var i=sap.ui.getCore().getStaticAreaRef();i.appendChild(r);q(r).addClass("sapUiBusy").attr("tabindex",0).attr("role","progressbar").attr("alt","").attr("title",t);this.oDomRef=r;this.oPopup=new P(r);this.oPopup.setModal(true,"sapUiBlyBusy");this.oPopup.setShadow(false);if(sap.ui.Device.browser.msie&&sap.ui.Device.browser.version<=9){this._iBusyPageWidth=q(document.body).width();this._iBusyLeft=0;this._iBusyDelta=60;this._iBusyTimeStep=50;this._iBusyWidth=500;this.attachOpen(this._IEAnimation,this)}};B._IEAnimation=function(e){if(!this._$BusyIndicator&&e){this._$BusyIndicator=e.getParameter("$Busy")}q.sap.clearDelayedCall(this._iAnimationTimeout);this._iBusyLeft+=this._iBusyDelta;if(this._iBusyLeft>this._iBusyPageWidth){this._iBusyLeft=-this._iBusyWidth}if(!this._$BusyIndicator){q.sap.clearDelayedCall(this._iAnimationTimeout)}else{this._$BusyIndicator.css("background-position",this._iBusyLeft+"px 0px");this._iAnimationTimeout=q.sap.delayedCall(this._iBusyTimeStep,this,this._IEAnimation)}};B.show=function(d){q.sap.log.debug("sap.ui.core.BusyIndicator.show (delay: "+d+") at "+new Date().getTime());if((d===undefined)||((d!=0)&&(parseInt(d,10)==0))||(parseInt(d,10)<0)){d=this.iDEFAULT_DELAY_MS}this.bOpenRequested=true;if(d===0){this._showNowIfRequested()}else{q.sap.delayedCall(d,this,"_showNowIfRequested")}};B._showNowIfRequested=function(){q.sap.log.debug("sap.ui.core.BusyIndicator._showNowIfRequested (bOpenRequested: "+this.bOpenRequested+") at "+new Date().getTime());if(!this.bOpenRequested){return}if(!document.body||!sap.ui.getCore().isInitialized()){q.sap.delayedCall(100,this,"_showNowIfRequested");return}this.bOpenRequested=false;if(!this.oDomRef){this._init()}this.oPopup.open(0,P.Dock.CenterCenter,P.Dock.CenterCenter,document);this.fireOpen({$Busy:this.oPopup._$()});var d=q.sap.domById(B.sDOM_ID);q.sap.focus(d);q("body").attr("aria-busy",true)};B.hide=function(){q.sap.log.debug("sap.ui.core.BusyIndicator.hide at "+new Date().getTime());var t=B;t.bOpenRequested=false;if(t.oDomRef){q("body").removeAttr("aria-busy");this.fireClose({$Busy:this.oPopup._$()});t.oPopup.close(0)}delete this._$BusyIndicator};B.attachOpen=function(f,l){this.attachEvent(B.M_EVENTS.Open,f,l);return this};B.detachOpen=function(f,l){this.detachEvent(B.M_EVENTS.Open,f,l);return this};B.attachClose=function(f,l){this.attachEvent(B.M_EVENTS.Close,f,l);return this};B.detachClose=function(f,l){this.detachEvent(B.M_EVENTS.Close,f,l);return this};B.fireOpen=function(p){this.fireEvent(B.M_EVENTS.Open,p)};B.fireClose=function(p){this.fireEvent(B.M_EVENTS.Close,p)};return B},true)};if(!jQuery.sap.isDeclared('sap.ui.core.ComponentContainer')){jQuery.sap.declare('sap.ui.core.ComponentContainer');sap.ui.define("sap/ui/core/ComponentContainer",['./library','./Control'],function(){"use strict";sap.ui.core.Control.extend("sap.ui.core.ComponentContainer",{metadata:{library:"sap.ui.core",properties:{"name":{type:"string",group:"",defaultValue:null},"url":{type:"sap.ui.core.URI",group:"",defaultValue:null},"settings":{type:"object",group:"",defaultValue:null},"propagateModel":{type:"boolean",group:"",defaultValue:false},"width":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null},"height":{type:"sap.ui.core.CSSSize",group:"Dimension",defaultValue:null}},associations:{"component":{type:"sap.ui.core.UIComponent",multiple:false}}}});sap.ui.core.ComponentContainer.prototype.getComponentInstance=function(){var c=this.getComponent();return sap.ui.getCore().getComponent(c)};sap.ui.core.ComponentContainer.prototype.setComponent=function(c,s){var o=this.getComponentInstance();if(o){o.setContainer(undefined)}this.setAssociation("component",c,s);c=this.getComponentInstance();if(c){c.setContainer(this);this.propagateProperties()}};sap.ui.core.ComponentContainer.prototype.onBeforeRendering=function(){var c=this.getComponentInstance();if(!c){var n=this.getName();if(n){c=sap.ui.component({name:n,url:this.getUrl(),settings:this.getSettings()});this.setComponent(c,true)}}if(c&&c.onBeforeRendering){c.onBeforeRendering()}};sap.ui.core.ComponentContainer.prototype.onAfterRendering=function(){var c=this.getComponentInstance();if(c&&c.onAfterRendering){c.onAfterRendering()}};sap.ui.core.ComponentContainer.prototype.exit=function(){var c=this.getComponentInstance();if(c){c.destroy()}};sap.ui.core.ComponentContainer.prototype.propagateProperties=function(n){var c=this.getComponentInstance();if(c&&this.getPropagateModel()){this._propagateProperties(n,c);sap.ui.core.Control.prototype.propagateProperties.apply(this,arguments)}};return sap.ui.core.ComponentContainer},true)};if(!jQuery.sap.isDeclared('sap.ui.core.CompositeSupport')){jQuery.sap.declare('sap.ui.core.CompositeSupport');sap.ui.define("sap/ui/core/CompositeSupport",['jquery.sap.global','./Control','sap/ui/model/control/ControlModel'],function(q,C,a){"use strict";var b={};b.mixInto=function(c,f,m){if(arguments.length==2&&typeof f==="object"){m=f;f="ComponentFactory"}function _(){var M=c.getMetadata();do{M=M.getParent();if(M&&M.getComponentFactoryClass){return M.getComponentFactoryClass()}}while(M);return sap.ui.core.ComponentFactory}c[f]=(_()).subclass(m);c.getMetadata().getComponentFactoryClass=q.sap.getter(c[f]);if(!c.prototype._initCompositeSupport){c.prototype._initCompositeSupport=function(s){var F=new(this.getMetadata().getComponentFactoryClass())(this);if(s.componentFactory){F.customize(s.componentFactory);delete s.componentFactory}this.getComponentFactory=q.sap.getter(F)}}if(!c.prototype._exitCompositeSupport){c.prototype._exitCompositeSupport=function(){this.getComponentFactory().destroy();delete this.getComponentFactory}}};sap.ui.base.EventProvider.extend("sap.ui.core.ComponentFactory",{constructor:function(c){sap.ui.base.EventProvider.apply(this);this.oComposite=c;return this}});sap.ui.core.ComponentFactory.prototype.attachChange=function(f,o){this.getModel();this.attachEvent("change",f,o);return this};sap.ui.core.ComponentFactory.prototype.detachChange=function(f,o){this.getModel();this.detachEvent("change",f,o);return this};sap.ui.core.ComponentFactory.prototype.getModel=function(){if(!this.oModel){var t=this;this.oModel=new a(this.oComposite);this.oModel._onchange=function(e){t.fireEvent("change",e.getParameters&&e.getParameters())}}return this.oModel};sap.ui.core.ComponentFactory.prototype.addFacadeComponent=function(e){this.getModel().add(e)};sap.ui.core.ComponentFactory.prototype.removeFacadeComponent=function(e){this.getModel().remove(e)};(function(){function _(o,m,d){q.each(m,function(n,f){if(n.indexOf("default")!=0){o[n]=f}if(d&&n.indexOf("create")==0){o["defaultC"+n.substring(1)]=o[n]}})}function c(B){return function(m){var f=function(){B.apply(this,arguments)};f.prototype=q.sap.newObject(B.prototype);_(f.prototype,m,true);f.customize=function(m){_(f.prototype,m);return this};f.subclass=c(f);return f}}sap.ui.core.ComponentFactory.subclass=c(sap.ui.core.ComponentFactory);sap.ui.core.ComponentFactory.prototype.customize=function(m){_(this,m);if(this.oComposite&&this.oComposite._onComponentFactoryChanged){this.oComposite._onComponentFactoryChanged()}return this}}());return b},true)};if(!jQuery.sap.isDeclared('sap.ui.core.UIComponent')){
/*
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.UIComponent');sap.ui.define("sap/ui/core/UIComponent",['jquery.sap.global','./Component','./UIComponentMetadata','./mvc/View'],function(q,C,U,V){"use strict";var a=C.extend("sap.ui.core.UIComponent",{constructor:function(i,s){try{C.apply(this,arguments)}catch(e){if(this._oRouter){this._oRouter.destroy()}throw e}},metadata:{"abstract":true,rootView:null,publicMethods:["render"],aggregations:{"rootControl":{type:"sap.ui.core.Control",multiple:false,visibility:"hidden"}},routing:{}}},U);a.prototype.init=function(){var t=this;var p={};if(this.getAutoPrefixId()){p.id=function(i){return t.createId(i)}}var m=this.getMetadata();var r=q.extend({},m.getRoutingConfig());var R=m.getRoutes();if(R){q.sap.require("sap.ui.core.routing.Router");var f=r.routerClass||sap.ui.core.routing.Router;if(typeof f==="string"){f=q.sap.getObject(f)}this._oRouter=new f(R,r,this)}sap.ui.base.ManagedObject.runWithOwner(function(){sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.setAggregation("rootControl",t.createContent())},p)},this);var o=this.getAggregation("rootControl");if(o instanceof V){if(r.targetParent===undefined){r.targetParent=o.getId()}}};a.prototype.destroy=function(){if(this._oRouter){this._oRouter.destroy();delete this._oRouter}C.prototype.destroy.apply(this,arguments)};a.getRouterFor=function(c){var v=c;if(v instanceof sap.ui.core.mvc.Controller){v=v.getView()}if(v instanceof V){var o=C.getOwnerIdFor(v),b=sap.ui.component(o);if(b){return b.getRouter()}else{return undefined}}};a.prototype.getRouter=function(){return this._oRouter};a.prototype.getAutoPrefixId=function(){return false};a.prototype.byId=function(i){return sap.ui.getCore().byId(this.createId(i))};a.prototype.createId=function(i){if(!this.isPrefixedId(i)){i=this.getId()+"---"+i}return i};a.prototype.isPrefixedId=function(i){return(i&&i.indexOf(this.getId()+"---")===0)};a.prototype.createContent=function(){var r=this.getMetadata().getRootView();if(r){return sap.ui.view(r)}return null};a.prototype.render=function(r){var c=this.getAggregation("rootControl");if(c&&r){r.renderControl(c)}};a.prototype.getUIArea=function(){return(this.oContainer?this.oContainer.getUIArea():null)};a.prototype.getEventingParent=function(){return this.getUIArea()};a.prototype.setContainer=function(c){this.oContainer=c;return this};a.prototype.onBeforeRendering=function(){};a.prototype.onAfterRendering=function(){};return a},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.HTMLView')){
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5/OpenUI5)
 * (c) Copyright 2009-2014 SAP SE or an SAP affiliate company. 
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
jQuery.sap.declare('sap.ui.core.mvc.HTMLView');sap.ui.define("sap/ui/core/mvc/HTMLView",['sap/ui/core/library','./View','sap/ui/core/DeclarativeSupport','sap/ui/core/RenderManager'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.HTMLView",{metadata:{library:"sap.ui.core"}});sap.ui.htmlview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.HTML)};sap.ui.core.mvc.HTMLView._sType=sap.ui.core.mvc.ViewType.HTML;sap.ui.core.mvc.HTMLView._mTemplates={};sap.ui.core.mvc.HTMLView._mAllowedSettings={"viewName":true,"controller":true,"viewContent":true,"controllerName":true,"resourceBundleName":true,"resourceBundleUrl":true,"resourceBundleLocale":true,"resourceBundleAlias":true};sap.ui.core.mvc.HTMLView._getTemplate=function(t){var u=this._getViewUrl(t);var h=this._mTemplates[u];if(!h){h=this._loadTemplate(t);this._mTemplates[u]=h}return h};sap.ui.core.mvc.HTMLView.prototype.getControllerName=function(){return this._controllerName};sap.ui.core.mvc.HTMLView._getViewUrl=function(t){return jQuery.sap.getModulePath(t,".view.html")};sap.ui.core.mvc.HTMLView._loadTemplate=function(t){var r=jQuery.sap.getResourceName(t,".view.html");return jQuery.sap.loadResource(r)};sap.ui.core.mvc.HTMLView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if(!s.viewName&&!s.viewContent){throw new Error("Neither view name nor view content is given. One of them is required.")}var h=s.viewContent||sap.ui.core.mvc.HTMLView._getTemplate(s.viewName);this._oTemplate=document.createElement("div");var h=sap.ui.core.RenderManager.prepareHTML5(h);if(typeof h==="string"){this._oTemplate.innerHTML=h}else{var n=h;var f=document.createDocumentFragment();for(var i=0;i<n.length;i++){f.appendChild(n.item(i))}this._oTemplate.appendChild(f)}var m=this._oTemplate.getElementsByTagName("template")[0];var p=this.getMetadata().getAllProperties();if(m){var a=this;var D=sap.ui.core.DeclarativeSupport;jQuery.each(m.attributes,function(I,A){var N=D.convertAttributeToSettingName(A.name,a.getId());var v=A.value;var P=p[N];if(!s[N]){if(P){s[N]=D.convertValueToType(D.getPropertyDataType(P),v)}else if(sap.ui.core.mvc.HTMLView._mAllowedSettings[N]){s[N]=v}}});this._oTemplate=m}if(this._oTemplate.content){var f=this._oTemplate.content;this._oTemplate=document.createElement("div");this._oTemplate.appendChild(f)}if(s.controllerName){this._controllerName=s.controllerName}if((s.resourceBundleName||s.resourceBundleUrl)&&(!s.models||!s.models[s.resourceBundleAlias])){var b=new sap.ui.model.resource.ResourceModel({bundleName:s.resourceBundleName,bundleUrl:s.resourceBundleUrl,bundleLocale:s.resourceBundleLocale});this.setModel(b,s.resourceBundleAlias)}};sap.ui.core.mvc.HTMLView.prototype.onControllerConnected=function(c){var s=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){sap.ui.core.DeclarativeSupport.compile(s._oTemplate,s)})};sap.ui.core.mvc.HTMLView.prototype.exit=function(){this._oTemplate=null;sap.ui.core.mvc.View.prototype.exit.call(this);if(this._connectedControls){for(var i=0;i<this._connectedControls.length;i++){this._connectedControls[i].destroy()}this._connectedControls=null}};sap.ui.core.mvc.HTMLView.prototype.connectControl=function(c){this._connectedControls=this._connectedControls||[];this._connectedControls.push(c)};return sap.ui.core.mvc.HTMLView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSONView')){jQuery.sap.declare('sap.ui.core.mvc.JSONView');sap.ui.define("sap/ui/core/mvc/JSONView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.JSONView",{metadata:{library:"sap.ui.core"}});(function(){sap.ui.jsonview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.JSON)};sap.ui.core.mvc.JSONView._sType=sap.ui.core.mvc.ViewType.JSON;sap.ui.core.mvc.JSONView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(s.viewName&&s.viewContent){throw new Error("View name and view content are given. There is no point in doing this, so please decide.")}else if(!s.viewName&&!s.viewContent){throw new Error("Neither view name nor view content is given. One of them is required.")}if(s.viewName){this._loadTemplate(s.viewName)}else if(s.viewContent){this.mProperties["viewContent"]=s.viewContent;if(typeof s.viewContent==="string"){this._oJSONView=jQuery.parseJSON(s.viewContent);if(!this._oJSONView){throw new Error("error when parsing viewContent: "+s.viewContent)}}else if(typeof s.viewContent==="object"){this._oJSONView=s.viewContent}else{throw new Error("viewContent must be a JSON string or object, but is a "+(typeof s.viewContent))}}else{}if((this._oJSONView.resourceBundleName||this._oJSONView.resourceBundleUrl)&&(!s.models||!s.models[this._oJSONView.resourceBundleAlias])){var m=new sap.ui.model.resource.ResourceModel({bundleName:this._oJSONView.resourceBundleName,bundleUrl:this._oJSONView.resourceBundleUrl});this.setModel(m,this._oJSONView.resourceBundleAlias)}};sap.ui.core.mvc.JSONView.prototype.onControllerConnected=function(c){var t=this;sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.applySettings({content:t._oJSONView.content})},{id:function(i){return t.createId(i)},settings:function(s){var m=this.getMetadata(),v=m.getJSONKeys(),k,V,K;for(k in s){if(K=v[k]){V=s[k];switch(K._iKind){case 3:s[k]=t.createId(V);break;case 5:if(typeof s[k]==="string"){s[k]=[c[s[k]],c]}break}}}}})};sap.ui.core.mvc.JSONView.prototype._loadTemplate=function(t){var r=jQuery.sap.getResourceName(t,".view.json");this._oJSONView=jQuery.sap.loadResource(r)};sap.ui.core.mvc.JSONView.prototype.getControllerName=function(){return this._oJSONView.controllerName}}());return sap.ui.core.mvc.JSONView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.JSView')){jQuery.sap.declare('sap.ui.core.mvc.JSView');sap.ui.define("sap/ui/core/mvc/JSView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.JSView",{metadata:{library:"sap.ui.core"}});(function(){var r={};sap.ui.jsview=function(i,v){var s={};if(v&&typeof(v)=="string"){s.viewName=v;s.controller=arguments[2];var V=new sap.ui.core.mvc.JSView(i,s);return V}else if(v&&typeof(v)=="object"){r[i]=v;jQuery.sap.declare({modName:i,type:"view"},false)}else if(arguments.length==1&&typeof(arguments[0])=="string"){s.viewName=i;s.controller=arguments[1];var V=s.id?new sap.ui.core.mvc.JSView(s.id,s):new sap.ui.core.mvc.JSView(s);return V}else{throw new Error("Wrong arguments! Either call sap.ui.jsview([sId,] sViewName) to instantiate a View or sap.ui.jsview(sViewName, oViewImpl) to define a View type.")}};sap.ui.core.mvc.JSView.prototype.initViewSettings=function(s){if(!r[s.viewName]){jQuery.sap.require({modName:s.viewName,type:"view"})}jQuery.extend(this,r[s.viewName])};sap.ui.core.mvc.JSView.prototype.onControllerConnected=function(c){var t=this;var p={};if(this.getAutoPrefixId()){p.id=function(i){return t.createId(i)}}sap.ui.base.ManagedObject.runWithPreprocessors(function(){t.applySettings({content:t.createContent(c)})},p)};sap.ui.core.mvc.JSView.prototype.getAutoPrefixId=function(){return false}}());return sap.ui.core.mvc.JSView},true)};if(!jQuery.sap.isDeclared('sap.ui.core.mvc.TemplateView')){jQuery.sap.declare('sap.ui.core.mvc.TemplateView');sap.ui.define("sap/ui/core/mvc/TemplateView",['sap/ui/core/library','./View'],function(){"use strict";sap.ui.core.mvc.View.extend("sap.ui.core.mvc.TemplateView",{metadata:{library:"sap.ui.core"}});(function(){sap.ui.templateview=function(i,v){return sap.ui.view(i,v,sap.ui.core.mvc.ViewType.Template)};sap.ui.core.mvc.TemplateView._sType=sap.ui.core.mvc.ViewType.Template;sap.ui.core.mvc.TemplateView.prototype.getControllerName=function(){return this._sControllerName};sap.ui.core.mvc.TemplateView._getViewUrl=function(t){return jQuery.sap.getModulePath(t,".view.tmpl")};sap.ui.core.mvc.TemplateView.prototype.initViewSettings=function(s){if(!s){throw new Error("mSettings must be given")}if(!s.viewName){throw new Error("No view name is given.")}this._oTemplate=sap.ui.template({id:this.getId(),src:sap.ui.core.mvc.TemplateView._getViewUrl(s.viewName)});this._sControllerName=this._oTemplate._sControllerName;this._oTemplate=this._oTemplate.createControl(undefined,undefined,this);this.addContent(this._oTemplate)}}());return sap.ui.core.mvc.TemplateView},true)};sap.ui.getCore().boot&&sap.ui.getCore().boot();
} catch(oError) {
if (oError.name != "Restart") { throw oError; }
}
",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 21:26:46 GMT",
                    "Content-Length": "1088349",
                    "Date": "Fri, 07 Nov 2014 21:27:04 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}