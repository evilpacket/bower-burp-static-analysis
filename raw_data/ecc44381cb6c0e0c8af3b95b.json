{
    "url": "http://localhost:9999/mateusortiz/x-heart/platform/platform.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>the 'baseURI' property of a DOM element</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>c.href=document.baseURI,b.stagingDocument_.head.appendChild(c),b.stagingDocument_.stagingDocument_=b.stagingDocument_</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/mateusortiz/x-heart/platform/platform.js",
                "path": "/mateusortiz/x-heart/platform/platform.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9tYXRldXNvcnRpei94LWhlYXJ0L3BsYXRmb3JtL3BsYXRmb3JtLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogMTkxMTI5DQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBTdW4sIDA5IE5vdiAyMDE0IDAzOjMwOjU3IEdNVA0KTGFzdC1Nb2RpZmllZDogU3VuLCAwOSBOb3YgMjAxNCAwMzozMDo1NSBHTVQNCg0KLyoqCiAqIEBsaWNlbnNlCiAqIENvcHlyaWdodCAoYykgMjAxMi0yMDE0IFRoZSBQb2x5bWVyIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIAogKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKICogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZQogKiBtZXQ6CiAqIAogKiAgICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0CiAqIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KICogICAgKiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlCiAqIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIKICogaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZQogKiBkaXN0cmlidXRpb24uCiAqICAgICogTmVpdGhlciB0aGUgbmFtZSBvZiBHb29nbGUgSW5jLiBub3IgdGhlIG5hbWVzIG9mIGl0cwogKiBjb250cmlidXRvcnMgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbQogKiB0aGlzIHNvZnR3YXJlIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLgogKiAKICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUwogKiAiQVMgSVMiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVAogKiBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IKICogQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQKICogT1dORVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsCiAqIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QKICogTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsCiAqIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWQogKiBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUCiAqIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRQogKiBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgogKi8KLy8gQHZlcnNpb246IDAuMi4xCmZ1bmN0aW9uIFBvaW50ZXJHZXN0dXJlRXZlbnQoYSxiKXt2YXIgYz1ifHx7fSxkPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJFdmVudCIpLGU9e2J1YmJsZXM6Qm9vbGVhbihjLmJ1YmJsZXMpPT09Yy5idWJibGVzfHwhMCxjYW5jZWxhYmxlOkJvb2xlYW4oYy5jYW5jZWxhYmxlKT09PWMuY2FuY2VsYWJsZXx8ITB9O2QuaW5pdEV2ZW50KGEsZS5idWJibGVzLGUuY2FuY2VsYWJsZSk7Zm9yKHZhciBmLGc9T2JqZWN0LmtleXMoYyksaD0wO2g8Zy5sZW5ndGg7aCsrKWY9Z1toXSxkW2ZdPWNbZl07cmV0dXJuIGQucHJldmVudFRhcD10aGlzLnByZXZlbnRUYXAsZH0idW5kZWZpbmVkIj09dHlwZW9mIFdlYWtNYXAmJiFmdW5jdGlvbigpe3ZhciBhPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxiPURhdGUubm93KCklMWU5LGM9ZnVuY3Rpb24oKXt0aGlzLm5hbWU9Il9fc3QiKygxZTkqTWF0aC5yYW5kb20oKT4+PjApKyhiKysgKyJfXyIpfTtjLnByb3RvdHlwZT17c2V0OmZ1bmN0aW9uKGIsYyl7dmFyIGQ9Ylt0aGlzLm5hbWVdO2QmJmRbMF09PT1iP2RbMV09YzphKGIsdGhpcy5uYW1lLHt2YWx1ZTpbYixjXSx3cml0YWJsZTohMH0pfSxnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuKGI9YVt0aGlzLm5hbWVdKSYmYlswXT09PWE/YlsxXTp2b2lkIDB9LCJkZWxldGUiOmZ1bmN0aW9uKGEpe3RoaXMuc2V0KGEsdm9pZCAwKX19LHdpbmRvdy5XZWFrTWFwPWN9KCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoKXtmdW5jdGlvbiBhKGEpe2I9YX1pZigiZnVuY3Rpb24iIT10eXBlb2YgT2JqZWN0Lm9ic2VydmV8fCJmdW5jdGlvbiIhPXR5cGVvZiBBcnJheS5vYnNlcnZlKXJldHVybiExO3ZhciBiPVtdLGM9e307aWYoT2JqZWN0Lm9ic2VydmUoYyxhKSxjLmlkPTEsYy5pZD0yLGRlbGV0ZSBjLmlkLE9iamVjdC5kZWxpdmVyQ2hhbmdlUmVjb3JkcyhhKSwzIT09Yi5sZW5ndGgpcmV0dXJuITE7aWYoIm5ldyI9PWJbMF0udHlwZSYmInVwZGF0ZWQiPT1iWzFdLnR5cGUmJiJkZWxldGVkIj09YlsyXS50eXBlKUw9Im5ldyIsTT0idXBkYXRlZCIsTj0icmVjb25maWd1cmVkIixPPSJkZWxldGVkIjtlbHNlIGlmKCJhZGQiIT1iWzBdLnR5cGV8fCJ1cGRhdGUiIT1iWzFdLnR5cGV8fCJkZWxldGUiIT1iWzJdLnR5cGUpcmV0dXJuIGNvbnNvbGUuZXJyb3IoIlVuZXhwZWN0ZWQgY2hhbmdlIHJlY29yZCBuYW1lcyBmb3IgT2JqZWN0Lm9ic2VydmUuIFVzaW5nIGRpcnR5LWNoZWNraW5nIGluc3RlYWQiKSwhMTtyZXR1cm4gT2JqZWN0LnVub2JzZXJ2ZShjLGEpLGM9WzBdLEFycmF5Lm9ic2VydmUoYyxhKSxjWzFdPTEsYy5sZW5ndGg9MCxPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMoYSksMiE9Yi5sZW5ndGg/ITE6YlswXS50eXBlIT1QfHxiWzFdLnR5cGUhPVA/ITE6KEFycmF5LnVub2JzZXJ2ZShjLGEpLCEwKX1mdW5jdGlvbiBjKCl7aWYoYS5kb2N1bWVudCYmInNlY3VyaXR5UG9saWN5ImluIGEuZG9jdW1lbnQmJiFhLmRvY3VtZW50LnNlY3VyaXR5UG9saWN5LmFsbG93c0V2YWwpcmV0dXJuITE7dHJ5e3ZhciBiPW5ldyBGdW5jdGlvbigiIiwicmV0dXJuIHRydWU7Iik7cmV0dXJuIGIoKX1jYXRjaChjKXtyZXR1cm4hMX19ZnVuY3Rpb24gZChhKXtyZXR1cm4rYT09PWE+Pj4wfWZ1bmN0aW9uIGUoYSl7cmV0dXJuK2F9ZnVuY3Rpb24gZihhKXtyZXR1cm4gYT09PU9iamVjdChhKX1mdW5jdGlvbiBnKGEsYil7cmV0dXJuIGE9PT1iPzAhPT1hfHwxL2E9PT0xL2I6UyhhKSYmUyhiKT8hMDphIT09YSYmYiE9PWJ9ZnVuY3Rpb24gaChhKXtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIGE/ITE6KGE9YS50cmltKCksIiI9PWE/ITA6Ii4iPT1hWzBdPyExOiQudGVzdChhKSl9ZnVuY3Rpb24gaShhLGIpe2lmKGIhPT1fKXRocm93IEVycm9yKCJVc2UgUGF0aC5nZXQgdG8gcmV0cmlldmUgcGF0aCBvYmplY3RzIik7cmV0dXJuIiI9PWEudHJpbSgpP3RoaXM6ZChhKT8odGhpcy5wdXNoKGEpLHRoaXMpOihhLnNwbGl0KC9ccypcLlxzKi8pLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYX0pLmZvckVhY2goZnVuY3Rpb24oYSl7dGhpcy5wdXNoKGEpfSx0aGlzKSx2b2lkKFImJnRoaXMubGVuZ3RoJiYodGhpcy5nZXRWYWx1ZUZyb209dGhpcy5jb21waWxlZEdldFZhbHVlRnJvbUZuKCkpKSl9ZnVuY3Rpb24gaihhKXtpZihhIGluc3RhbmNlb2YgaSlyZXR1cm4gYTtudWxsPT1hJiYoYT0iIiksInN0cmluZyIhPXR5cGVvZiBhJiYoYT1TdHJpbmcoYSkpO3ZhciBiPWFiW2FdO2lmKGIpcmV0dXJuIGI7aWYoIWgoYSkpcmV0dXJuIGJiO3ZhciBiPW5ldyBpKGEsXyk7cmV0dXJuIGFiW2FdPWIsYn1mdW5jdGlvbiBrKGIpe2Zvcih2YXIgYz0wO2RiPmMmJmIuY2hlY2tfKCk7KWMrKztyZXR1cm4gYS50ZXN0aW5nRXhwb3NlQ3ljbGVDb3VudCYmKGEuZGlydHlDaGVja0N5Y2xlQ291bnQ9YyksYz4wfWZ1bmN0aW9uIGwoYSl7Zm9yKHZhciBiIGluIGEpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gbShhKXtyZXR1cm4gbChhLmFkZGVkKSYmbChhLnJlbW92ZWQpJiZsKGEuY2hhbmdlZCl9ZnVuY3Rpb24gbihhLGIpe3ZhciBjPXt9LGQ9e30sZT17fTtmb3IodmFyIGYgaW4gYil7dmFyIGc9YVtmXTsodm9pZCAwPT09Z3x8ZyE9PWJbZl0pJiYoZiBpbiBhP2chPT1iW2ZdJiYoZVtmXT1nKTpkW2ZdPXZvaWQgMCl9Zm9yKHZhciBmIGluIGEpZiBpbiBifHwoY1tmXT1hW2ZdKTtyZXR1cm4gQXJyYXkuaXNBcnJheShhKSYmYS5sZW5ndGghPT1iLmxlbmd0aCYmKGUubGVuZ3RoPWEubGVuZ3RoKSx7YWRkZWQ6YyxyZW1vdmVkOmQsY2hhbmdlZDplfX1mdW5jdGlvbiBvKCl7aWYoIWViLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIGE9MDthPGViLmxlbmd0aDthKyspZWJbYV0oKTtyZXR1cm4gZWIubGVuZ3RoPTAsITB9ZnVuY3Rpb24gcCgpe2Z1bmN0aW9uIGEoYSl7YiYmYi5zdGF0ZV89PT1rYiYmIWQmJmIuY2hlY2tfKGEpfXZhciBiLGMsZD0hMSxlPSEwO3JldHVybntvcGVuOmZ1bmN0aW9uKGMpe2lmKGIpdGhyb3cgRXJyb3IoIk9ic2VydmVkT2JqZWN0IGluIHVzZSIpO2V8fE9iamVjdC5kZWxpdmVyQ2hhbmdlUmVjb3JkcyhhKSxiPWMsZT0hMX0sb2JzZXJ2ZTpmdW5jdGlvbihiLGQpe2M9YixkP0FycmF5Lm9ic2VydmUoYyxhKTpPYmplY3Qub2JzZXJ2ZShjLGEpfSxkZWxpdmVyOmZ1bmN0aW9uKGIpe2Q9YixPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMoYSksZD0hMX0sY2xvc2U6ZnVuY3Rpb24oKXtiPXZvaWQgMCxPYmplY3QudW5vYnNlcnZlKGMsYSksZ2IucHVzaCh0aGlzKX19fWZ1bmN0aW9uIHEoYSxiLGMpe3ZhciBkPWdiLnBvcCgpfHxwKCk7cmV0dXJuIGQub3BlbihhKSxkLm9ic2VydmUoYixjKSxkfWZ1bmN0aW9uIHIoKXtmdW5jdGlvbiBhKGIpe2lmKGYoYikpe3ZhciBjPWouaW5kZXhPZihiKTtjPj0wPyhqW2NdPXZvaWQgMCxpLnB1c2goYikpOmkuaW5kZXhPZihiKTwwJiYoaS5wdXNoKGIpLE9iamVjdC5vYnNlcnZlKGIsZSkpLGEoT2JqZWN0LmdldFByb3RvdHlwZU9mKGIpKX19ZnVuY3Rpb24gYigpe3ZhciBiPWo9PT1oYj9bXTpqO2o9aSxpPWI7dmFyIGM7Zm9yKHZhciBkIGluIGcpYz1nW2RdLGMmJmMuc3RhdGVfPT1rYiYmYy5pdGVyYXRlT2JqZWN0c18oYSk7Zm9yKHZhciBmPTA7ZjxqLmxlbmd0aDtmKyspe3ZhciBoPWpbZl07aCYmT2JqZWN0LnVub2JzZXJ2ZShoLGUpfWoubGVuZ3RoPTB9ZnVuY3Rpb24gYygpe2w9ITEsayYmYigpfWZ1bmN0aW9uIGQoKXtsfHwoaz0hMCxsPSEwLGZiKGMpKX1mdW5jdGlvbiBlKCl7YigpO3ZhciBhO2Zvcih2YXIgYyBpbiBnKWE9Z1tjXSxhJiZhLnN0YXRlXz09a2ImJmEuY2hlY2tfKCl9dmFyIGc9W10saD0wLGk9W10saj1oYixrPSExLGw9ITEsbT17b2JqZWN0OnZvaWQgMCxvYmplY3RzOmksb3BlbjpmdW5jdGlvbihiKXtnW2IuaWRfXT1iLGgrKyxiLml0ZXJhdGVPYmplY3RzXyhhKX0sY2xvc2U6ZnVuY3Rpb24oYSl7aWYoZ1thLmlkX109dm9pZCAwLGgtLSxoKXJldHVybiB2b2lkIGQoKTtrPSExO2Zvcih2YXIgYj0wO2I8aS5sZW5ndGg7YisrKU9iamVjdC51bm9ic2VydmUoaVtiXSxlKSx0LnVub2JzZXJ2ZWRDb3VudCsrO2cubGVuZ3RoPTAsaS5sZW5ndGg9MCxpYi5wdXNoKHRoaXMpfSxyZXNldDpkfTtyZXR1cm4gbX1mdW5jdGlvbiBzKGEsYil7cmV0dXJuIGNiJiZjYi5vYmplY3Q9PT1ifHwoY2I9aWIucG9wKCl8fHIoKSxjYi5vYmplY3Q9YiksY2Iub3BlbihhKSxjYn1mdW5jdGlvbiB0KCl7dGhpcy5zdGF0ZV89amIsdGhpcy5jYWxsYmFja189dm9pZCAwLHRoaXMudGFyZ2V0Xz12b2lkIDAsdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwLHRoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmlkXz1uYisrfWZ1bmN0aW9uIHUoYSl7dC5fYWxsT2JzZXJ2ZXJzQ291bnQrKyxwYiYmb2IucHVzaChhKX1mdW5jdGlvbiB2KCl7dC5fYWxsT2JzZXJ2ZXJzQ291bnQtLX1mdW5jdGlvbiB3KGEpe3QuY2FsbCh0aGlzKSx0aGlzLnZhbHVlXz1hLHRoaXMub2xkT2JqZWN0Xz12b2lkIDB9ZnVuY3Rpb24geChhKXtpZighQXJyYXkuaXNBcnJheShhKSl0aHJvdyBFcnJvcigiUHJvdmlkZWQgb2JqZWN0IGlzIG5vdCBhbiBBcnJheSIpO3cuY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIHkoYSxiKXt0LmNhbGwodGhpcyksdGhpcy5vYmplY3RfPWEsdGhpcy5wYXRoXz1iIGluc3RhbmNlb2YgaT9iOmooYiksdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwfWZ1bmN0aW9uIHooKXt0LmNhbGwodGhpcyksdGhpcy52YWx1ZV89W10sdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwLHRoaXMub2JzZXJ2ZWRfPVtdfWZ1bmN0aW9uIEEoYSl7cmV0dXJuIGF9ZnVuY3Rpb24gQihhLGIsYyxkKXt0aGlzLmNhbGxiYWNrXz12b2lkIDAsdGhpcy50YXJnZXRfPXZvaWQgMCx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5vYnNlcnZhYmxlXz1hLHRoaXMuZ2V0VmFsdWVGbl89Ynx8QSx0aGlzLnNldFZhbHVlRm5fPWN8fEEsdGhpcy5kb250UGFzc1Rocm91Z2hTZXRfPWR9ZnVuY3Rpb24gQyhhLGIpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3Qub2JzZXJ2ZSl7dmFyIGM9T2JqZWN0LmdldE5vdGlmaWVyKGEpO3JldHVybiBmdW5jdGlvbihkLGUpe3ZhciBmPXtvYmplY3Q6YSx0eXBlOmQsbmFtZTpifTsyPT09YXJndW1lbnRzLmxlbmd0aCYmKGYub2xkVmFsdWU9ZSksYy5ub3RpZnkoZil9fX1mdW5jdGlvbiBEKGEsYixjKXtmb3IodmFyIGQ9e30sZT17fSxmPTA7ZjxiLmxlbmd0aDtmKyspe3ZhciBnPWJbZl07dGJbZy50eXBlXT8oZy5uYW1lIGluIGN8fChjW2cubmFtZV09Zy5vbGRWYWx1ZSksZy50eXBlIT1NJiYoZy50eXBlIT1MP2cubmFtZSBpbiBkPyhkZWxldGUgZFtnLm5hbWVdLGRlbGV0ZSBjW2cubmFtZV0pOmVbZy5uYW1lXT0hMDpnLm5hbWUgaW4gZT9kZWxldGUgZVtnLm5hbWVdOmRbZy5uYW1lXT0hMCkpOihjb25zb2xlLmVycm9yKCJVbmtub3duIGNoYW5nZVJlY29yZCB0eXBlOiAiK2cudHlwZSksY29uc29sZS5lcnJvcihnKSl9Zm9yKHZhciBoIGluIGQpZFtoXT1hW2hdO2Zvcih2YXIgaCBpbiBlKWVbaF09dm9pZCAwO3ZhciBpPXt9O2Zvcih2YXIgaCBpbiBjKWlmKCEoaCBpbiBkfHxoIGluIGUpKXt2YXIgaj1hW2hdO2NbaF0hPT1qJiYoaVtoXT1qKX1yZXR1cm57YWRkZWQ6ZCxyZW1vdmVkOmUsY2hhbmdlZDppfX1mdW5jdGlvbiBFKGEsYixjKXtyZXR1cm57aW5kZXg6YSxyZW1vdmVkOmIsYWRkZWRDb3VudDpjfX1mdW5jdGlvbiBGKCl7fWZ1bmN0aW9uIEcoYSxiLGMsZCxlLGYpe3JldHVybiB5Yi5jYWxjU3BsaWNlcyhhLGIsYyxkLGUsZil9ZnVuY3Rpb24gSChhLGIsYyxkKXtyZXR1cm4gYz5ifHxhPmQ/LTE6Yj09Y3x8ZD09YT8wOmM+YT9kPmI/Yi1jOmQtYzpiPmQ/ZC1hOmItYX1mdW5jdGlvbiBJKGEsYixjLGQpe2Zvcih2YXIgZT1FKGIsYyxkKSxmPSExLGc9MCxoPTA7aDxhLmxlbmd0aDtoKyspe3ZhciBpPWFbaF07aWYoaS5pbmRleCs9ZywhZil7dmFyIGo9SChlLmluZGV4LGUuaW5kZXgrZS5yZW1vdmVkLmxlbmd0aCxpLmluZGV4LGkuaW5kZXgraS5hZGRlZENvdW50KTtpZihqPj0wKXthLnNwbGljZShoLDEpLGgtLSxnLT1pLmFkZGVkQ291bnQtaS5yZW1vdmVkLmxlbmd0aCxlLmFkZGVkQ291bnQrPWkuYWRkZWRDb3VudC1qO3ZhciBrPWUucmVtb3ZlZC5sZW5ndGgraS5yZW1vdmVkLmxlbmd0aC1qO2lmKGUuYWRkZWRDb3VudHx8ayl7dmFyIGM9aS5yZW1vdmVkO2lmKGUuaW5kZXg8aS5pbmRleCl7dmFyIGw9ZS5yZW1vdmVkLnNsaWNlKDAsaS5pbmRleC1lLmluZGV4KTtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShsLGMpLGM9bH1pZihlLmluZGV4K2UucmVtb3ZlZC5sZW5ndGg+aS5pbmRleCtpLmFkZGVkQ291bnQpe3ZhciBtPWUucmVtb3ZlZC5zbGljZShpLmluZGV4K2kuYWRkZWRDb3VudC1lLmluZGV4KTtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShjLG0pfWUucmVtb3ZlZD1jLGkuaW5kZXg8ZS5pbmRleCYmKGUuaW5kZXg9aS5pbmRleCl9ZWxzZSBmPSEwfWVsc2UgaWYoZS5pbmRleDxpLmluZGV4KXtmPSEwLGEuc3BsaWNlKGgsMCxlKSxoKys7dmFyIG49ZS5hZGRlZENvdW50LWUucmVtb3ZlZC5sZW5ndGg7aS5pbmRleCs9bixnKz1ufX19Znx8YS5wdXNoKGUpfWZ1bmN0aW9uIEooYSxiKXtmb3IodmFyIGM9W10sZj0wO2Y8Yi5sZW5ndGg7ZisrKXt2YXIgZz1iW2ZdO3N3aXRjaChnLnR5cGUpe2Nhc2UgUDpJKGMsZy5pbmRleCxnLnJlbW92ZWQuc2xpY2UoKSxnLmFkZGVkQ291bnQpO2JyZWFrO2Nhc2UgTDpjYXNlIE06Y2FzZSBPOmlmKCFkKGcubmFtZSkpY29udGludWU7dmFyIGg9ZShnLm5hbWUpO2lmKDA+aCljb250aW51ZTtJKGMsaCxbZy5vbGRWYWx1ZV0sMSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCJVbmV4cGVjdGVkIHJlY29yZCB0eXBlOiAiK0pTT04uc3RyaW5naWZ5KGcpKX19cmV0dXJuIGN9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPVtdO3JldHVybiBKKGEsYikuZm9yRWFjaChmdW5jdGlvbihiKXtyZXR1cm4gMT09Yi5hZGRlZENvdW50JiYxPT1iLnJlbW92ZWQubGVuZ3RoP3ZvaWQoYi5yZW1vdmVkWzBdIT09YVtiLmluZGV4XSYmYy5wdXNoKGIpKTp2b2lkKGM9Yy5jb25jYXQoRyhhLGIuaW5kZXgsYi5pbmRleCtiLmFkZGVkQ291bnQsYi5yZW1vdmVkLDAsYi5yZW1vdmVkLmxlbmd0aCkpKX0pLGN9dmFyIEw9ImFkZCIsTT0idXBkYXRlIixOPSJyZWNvbmZpZ3VyZSIsTz0iZGVsZXRlIixQPSJzcGxpY2UiLFE9YigpLFI9YygpLFM9YS5OdW1iZXIuaXNOYU58fGZ1bmN0aW9uKGIpe3JldHVybiJudW1iZXIiPT10eXBlb2YgYiYmYS5pc05hTihiKX0sVD0iX19wcm90b19fImlue30/ZnVuY3Rpb24oYSl7cmV0dXJuIGF9OmZ1bmN0aW9uKGEpe3ZhciBiPWEuX19wcm90b19fO2lmKCFiKXJldHVybiBhO3ZhciBjPU9iamVjdC5jcmVhdGUoYik7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEpLmZvckVhY2goZnVuY3Rpb24oYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGMsYixPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEsYikpfSksY30sVT0iWyRfYS16QS1aXSIsVj0iWyRfYS16QS1aMC05XSIsVz1VKyIrIitWKyIqIixYPSIoPzpbMC05XXxbMS05XStbMC05XSspIixZPSIoPzoiK1crInwiK1grIikiLFo9Iig/OiIrWSsiKSg/OlxccypcXC5cXHMqIitZKyIpKiIsJD1uZXcgUmVnRXhwKCJeIitaKyIkIiksXz17fSxhYj17fTtpLmdldD1qLGkucHJvdG90eXBlPVQoe19fcHJvdG9fXzpbXSx2YWxpZDohMCx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmpvaW4oIi4iKX0sZ2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8dGhpcy5sZW5ndGg7YisrKXtpZihudWxsPT1hKXJldHVybjthPWFbdGhpc1tiXV19cmV0dXJuIGF9LGl0ZXJhdGVPYmplY3RzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7Yzx0aGlzLmxlbmd0aDtjKyspe2lmKGMmJihhPWFbdGhpc1tjLTFdXSksIWEpcmV0dXJuO2IoYSl9fSxjb21waWxlZEdldFZhbHVlRnJvbUZuOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGQoYSk/J1siJythKyciXSc6Ii4iK2F9KSxiPSIiLGM9Im9iaiI7Yis9ImlmIChvYmogIT0gbnVsbCI7Zm9yKHZhciBlPTA7ZTx0aGlzLmxlbmd0aC0xO2UrKyl7e3RoaXNbZV19Yys9YVtlXSxiKz0iICYmXG4gICAgICIrYysiICE9IG51bGwifXJldHVybiBiKz0iKVxuIixjKz1hW2VdLGIrPSIgIHJldHVybiAiK2MrIjtcbmVsc2VcbiAgcmV0dXJuIHVuZGVmaW5lZDsiLG5ldyBGdW5jdGlvbigib2JqIixiKX0sc2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEsYil7aWYoIXRoaXMubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgYz0wO2M8dGhpcy5sZW5ndGgtMTtjKyspe2lmKCFmKGEpKXJldHVybiExO2E9YVt0aGlzW2NdXX1yZXR1cm4gZihhKT8oYVt0aGlzW2NdXT1iLCEwKTohMX19KTt2YXIgYmI9bmV3IGkoIiIsXyk7YmIudmFsaWQ9ITEsYmIuZ2V0VmFsdWVGcm9tPWJiLnNldFZhbHVlRnJvbT1mdW5jdGlvbigpe307dmFyIGNiLGRiPTFlMyxlYj1bXSxmYj1RP2Z1bmN0aW9uKCl7dmFyIGE9e3BpbmdQb25nOiEwfSxiPSExO3JldHVybiBPYmplY3Qub2JzZXJ2ZShhLGZ1bmN0aW9uKCl7bygpLGI9ITF9KSxmdW5jdGlvbihjKXtlYi5wdXNoKGMpLGJ8fChiPSEwLGEucGluZ1Bvbmc9IWEucGluZ1BvbmcpfX0oKTpmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihhKXtlYi5wdXNoKGEpfX0oKSxnYj1bXSxoYj1bXSxpYj1bXSxqYj0wLGtiPTEsbGI9MixtYj0zLG5iPTE7dC5wcm90b3R5cGU9e29wZW46ZnVuY3Rpb24oYSxiKXtpZih0aGlzLnN0YXRlXyE9amIpdGhyb3cgRXJyb3IoIk9ic2VydmVyIGhhcyBhbHJlYWR5IGJlZW4gb3BlbmVkLiIpO3JldHVybiB1KHRoaXMpLHRoaXMuY2FsbGJhY2tfPWEsdGhpcy50YXJnZXRfPWIsdGhpcy5zdGF0ZV89a2IsdGhpcy5jb25uZWN0XygpLHRoaXMudmFsdWVffSxjbG9zZTpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1rYiYmKHYodGhpcyksdGhpcy5zdGF0ZV89bGIsdGhpcy5kaXNjb25uZWN0XygpLHRoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmNhbGxiYWNrXz12b2lkIDAsdGhpcy50YXJnZXRfPXZvaWQgMCl9LGRlbGl2ZXI6ZnVuY3Rpb24oKXt0aGlzLnN0YXRlXz09a2ImJmsodGhpcyl9LHJlcG9ydF86ZnVuY3Rpb24oYSl7dHJ5e3RoaXMuY2FsbGJhY2tfLmFwcGx5KHRoaXMudGFyZ2V0XyxhKX1jYXRjaChiKXt0Ll9lcnJvclRocm93bkR1cmluZ0NhbGxiYWNrPSEwLGNvbnNvbGUuZXJyb3IoIkV4Y2VwdGlvbiBjYXVnaHQgZHVyaW5nIG9ic2VydmVyIGNhbGxiYWNrOiAiKyhiLnN0YWNrfHxiKSl9fSxkaXNjYXJkQ2hhbmdlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNoZWNrXyh2b2lkIDAsITApLHRoaXMudmFsdWVffX07dmFyIG9iLHBiPSFRO3QuX2FsbE9ic2VydmVyc0NvdW50PTAscGImJihvYj1bXSk7dmFyIHFiPSExLHJiPSJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuZGVsaXZlckFsbENoYW5nZVJlY29yZHM7YS5QbGF0Zm9ybT1hLlBsYXRmb3JtfHx7fSxhLlBsYXRmb3JtLnBlcmZvcm1NaWNyb3Rhc2tDaGVja3BvaW50PWZ1bmN0aW9uKCl7aWYoIXFiKXtpZihyYilyZXR1cm4gdm9pZCBPYmplY3QuZGVsaXZlckFsbENoYW5nZVJlY29yZHMoKTtpZihwYil7cWI9ITA7dmFyIGIsYyxkPTA7ZG97ZCsrLGM9b2Isb2I9W10sYj0hMTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyl7dmFyIGY9Y1tlXTtmLnN0YXRlXz09a2ImJihmLmNoZWNrXygpJiYoYj0hMCksb2IucHVzaChmKSl9bygpJiYoYj0hMCl9d2hpbGUoZGI+ZCYmYik7YS50ZXN0aW5nRXhwb3NlQ3ljbGVDb3VudCYmKGEuZGlydHlDaGVja0N5Y2xlQ291bnQ9ZCkscWI9ITF9fX0scGImJihhLlBsYXRmb3JtLmNsZWFyT2JzZXJ2ZXJzPWZ1bmN0aW9uKCl7b2I9W119KSx3LnByb3RvdHlwZT1UKHtfX3Byb3RvX186dC5wcm90b3R5cGUsYXJyYXlPYnNlcnZlOiExLGNvbm5lY3RfOmZ1bmN0aW9uKCl7UT90aGlzLmRpcmVjdE9ic2VydmVyXz1xKHRoaXMsdGhpcy52YWx1ZV8sdGhpcy5hcnJheU9ic2VydmUpOnRoaXMub2xkT2JqZWN0Xz10aGlzLmNvcHlPYmplY3QodGhpcy52YWx1ZV8pfSxjb3B5T2JqZWN0OmZ1bmN0aW9uKGEpe3ZhciBiPUFycmF5LmlzQXJyYXkoYSk/W106e307Zm9yKHZhciBjIGluIGEpYltjXT1hW2NdO3JldHVybiBBcnJheS5pc0FycmF5KGEpJiYoYi5sZW5ndGg9YS5sZW5ndGgpLGJ9LGNoZWNrXzpmdW5jdGlvbihhKXt2YXIgYixjO2lmKFEpe2lmKCFhKXJldHVybiExO2M9e30sYj1EKHRoaXMudmFsdWVfLGEsYyl9ZWxzZSBjPXRoaXMub2xkT2JqZWN0XyxiPW4odGhpcy52YWx1ZV8sdGhpcy5vbGRPYmplY3RfKTtyZXR1cm4gbShiKT8hMTooUXx8KHRoaXMub2xkT2JqZWN0Xz10aGlzLmNvcHlPYmplY3QodGhpcy52YWx1ZV8pKSx0aGlzLnJlcG9ydF8oW2IuYWRkZWR8fHt9LGIucmVtb3ZlZHx8e30sYi5jaGFuZ2VkfHx7fSxmdW5jdGlvbihhKXtyZXR1cm4gY1thXX1dKSwhMCl9LGRpc2Nvbm5lY3RfOmZ1bmN0aW9uKCl7UT8odGhpcy5kaXJlY3RPYnNlcnZlcl8uY2xvc2UoKSx0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDApOnRoaXMub2xkT2JqZWN0Xz12b2lkIDB9LGRlbGl2ZXI6ZnVuY3Rpb24oKXt0aGlzLnN0YXRlXz09a2ImJihRP3RoaXMuZGlyZWN0T2JzZXJ2ZXJfLmRlbGl2ZXIoITEpOmsodGhpcykpfSxkaXNjYXJkQ2hhbmdlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRpcmVjdE9ic2VydmVyXz90aGlzLmRpcmVjdE9ic2VydmVyXy5kZWxpdmVyKCEwKTp0aGlzLm9sZE9iamVjdF89dGhpcy5jb3B5T2JqZWN0KHRoaXMudmFsdWVfKSx0aGlzLnZhbHVlX319KSx4LnByb3RvdHlwZT1UKHtfX3Byb3RvX186dy5wcm90b3R5cGUsYXJyYXlPYnNlcnZlOiEwLGNvcHlPYmplY3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuc2xpY2UoKX0sY2hlY2tfOmZ1bmN0aW9uKGEpe3ZhciBiO2lmKFEpe2lmKCFhKXJldHVybiExO2I9Syh0aGlzLnZhbHVlXyxhKX1lbHNlIGI9Ryh0aGlzLnZhbHVlXywwLHRoaXMudmFsdWVfLmxlbmd0aCx0aGlzLm9sZE9iamVjdF8sMCx0aGlzLm9sZE9iamVjdF8ubGVuZ3RoKTtyZXR1cm4gYiYmYi5sZW5ndGg/KFF8fCh0aGlzLm9sZE9iamVjdF89dGhpcy5jb3B5T2JqZWN0KHRoaXMudmFsdWVfKSksdGhpcy5yZXBvcnRfKFtiXSksITApOiExfX0pLHguYXBwbHlTcGxpY2VzPWZ1bmN0aW9uKGEsYixjKXtjLmZvckVhY2goZnVuY3Rpb24oYyl7Zm9yKHZhciBkPVtjLmluZGV4LGMucmVtb3ZlZC5sZW5ndGhdLGU9Yy5pbmRleDtlPGMuaW5kZXgrYy5hZGRlZENvdW50OylkLnB1c2goYltlXSksZSsrO0FycmF5LnByb3RvdHlwZS5zcGxpY2UuYXBwbHkoYSxkKX0pfSx5LnByb3RvdHlwZT1UKHtfX3Byb3RvX186dC5wcm90b3R5cGUsY29ubmVjdF86ZnVuY3Rpb24oKXtRJiYodGhpcy5kaXJlY3RPYnNlcnZlcl89cyh0aGlzLHRoaXMub2JqZWN0XykpLHRoaXMuY2hlY2tfKHZvaWQgMCwhMCl9LGRpc2Nvbm5lY3RfOmZ1bmN0aW9uKCl7dGhpcy52YWx1ZV89dm9pZCAwLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfJiYodGhpcy5kaXJlY3RPYnNlcnZlcl8uY2xvc2UodGhpcyksdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwKX0saXRlcmF0ZU9iamVjdHNfOmZ1bmN0aW9uKGEpe3RoaXMucGF0aF8uaXRlcmF0ZU9iamVjdHModGhpcy5vYmplY3RfLGEpfSxjaGVja186ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLnZhbHVlXztyZXR1cm4gdGhpcy52YWx1ZV89dGhpcy5wYXRoXy5nZXRWYWx1ZUZyb20odGhpcy5vYmplY3RfKSxifHxnKHRoaXMudmFsdWVfLGMpPyExOih0aGlzLnJlcG9ydF8oW3RoaXMudmFsdWVfLGNdKSwhMCl9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe3RoaXMucGF0aF8mJnRoaXMucGF0aF8uc2V0VmFsdWVGcm9tKHRoaXMub2JqZWN0XyxhKX19KTt2YXIgc2I9e307ei5wcm90b3R5cGU9VCh7X19wcm90b19fOnQucHJvdG90eXBlLGNvbm5lY3RfOmZ1bmN0aW9uKCl7aWYodGhpcy5jaGVja18odm9pZCAwLCEwKSxRKXtmb3IodmFyIGEsYj0hMSxjPTA7Yzx0aGlzLm9ic2VydmVkXy5sZW5ndGg7Yys9MilpZihhPXRoaXMub2JzZXJ2ZWRfW2NdLGEhPT1zYil7Yj0hMDticmVha31yZXR1cm4gdGhpcy5kaXJlY3RPYnNlcnZlcl8/Yj92b2lkIHRoaXMuZGlyZWN0T2JzZXJ2ZXJfLnJlc2V0KCk6KHRoaXMuZGlyZWN0T2JzZXJ2ZXJfLmNsb3NlKCksdm9pZCh0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDApKTp2b2lkKGImJih0aGlzLmRpcmVjdE9ic2VydmVyXz1zKHRoaXMsYSkpKX19LGNsb3NlT2JzZXJ2ZXJzXzpmdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8dGhpcy5vYnNlcnZlZF8ubGVuZ3RoO2ErPTIpdGhpcy5vYnNlcnZlZF9bYV09PT1zYiYmdGhpcy5vYnNlcnZlZF9bYSsxXS5jbG9zZSgpO3RoaXMub2JzZXJ2ZWRfLmxlbmd0aD0wfSxkaXNjb25uZWN0XzpmdW5jdGlvbigpe3RoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmRpcmVjdE9ic2VydmVyXyYmKHRoaXMuZGlyZWN0T2JzZXJ2ZXJfLmNsb3NlKHRoaXMpLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCksdGhpcy5jbG9zZU9ic2VydmVyc18oKX0sYWRkUGF0aDpmdW5jdGlvbihhLGIpe2lmKHRoaXMuc3RhdGVfIT1qYiYmdGhpcy5zdGF0ZV8hPW1iKXRocm93IEVycm9yKCJDYW5ub3QgYWRkIHBhdGhzIG9uY2Ugc3RhcnRlZC4iKTt0aGlzLm9ic2VydmVkXy5wdXNoKGEsYiBpbnN0YW5jZW9mIGk/YjpqKGIpKX0sYWRkT2JzZXJ2ZXI6ZnVuY3Rpb24oYSl7aWYodGhpcy5zdGF0ZV8hPWpiJiZ0aGlzLnN0YXRlXyE9bWIpdGhyb3cgRXJyb3IoIkNhbm5vdCBhZGQgb2JzZXJ2ZXJzIG9uY2Ugc3RhcnRlZC4iKTthLm9wZW4odGhpcy5kZWxpdmVyLHRoaXMpLHRoaXMub2JzZXJ2ZWRfLnB1c2goc2IsYSl9LHN0YXJ0UmVzZXQ6ZnVuY3Rpb24oKXtpZih0aGlzLnN0YXRlXyE9a2IpdGhyb3cgRXJyb3IoIkNhbiBvbmx5IHJlc2V0IHdoaWxlIG9wZW4iKTt0aGlzLnN0YXRlXz1tYix0aGlzLmNsb3NlT2JzZXJ2ZXJzXygpfSxmaW5pc2hSZXNldDpmdW5jdGlvbigpe2lmKHRoaXMuc3RhdGVfIT1tYil0aHJvdyBFcnJvcigiQ2FuIG9ubHkgZmluaXNoUmVzZXQgYWZ0ZXIgc3RhcnRSZXNldCIpO3JldHVybiB0aGlzLnN0YXRlXz1rYix0aGlzLmNvbm5lY3RfKCksdGhpcy52YWx1ZV99LGl0ZXJhdGVPYmplY3RzXzpmdW5jdGlvbihhKXtmb3IodmFyIGIsYz0wO2M8dGhpcy5vYnNlcnZlZF8ubGVuZ3RoO2MrPTIpYj10aGlzLm9ic2VydmVkX1tjXSxiIT09c2ImJnRoaXMub2JzZXJ2ZWRfW2MrMV0uaXRlcmF0ZU9iamVjdHMoYixhKX0sY2hlY2tfOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjLGQ9MDtkPHRoaXMub2JzZXJ2ZWRfLmxlbmd0aDtkKz0yKXt2YXIgZT10aGlzLm9ic2VydmVkX1tkKzFdLGY9dGhpcy5vYnNlcnZlZF9bZF0saD1mPT09c2I/ZS5kaXNjYXJkQ2hhbmdlcygpOmUuZ2V0VmFsdWVGcm9tKGYpO2I/dGhpcy52YWx1ZV9bZC8yXT1oOmcoaCx0aGlzLnZhbHVlX1tkLzJdKXx8KGM9Y3x8W10sY1tkLzJdPXRoaXMudmFsdWVfW2QvMl0sdGhpcy52YWx1ZV9bZC8yXT1oKX1yZXR1cm4gYz8odGhpcy5yZXBvcnRfKFt0aGlzLnZhbHVlXyxjLHRoaXMub2JzZXJ2ZWRfXSksITApOiExfX0pLEIucHJvdG90eXBlPXtvcGVuOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY2FsbGJhY2tfPWEsdGhpcy50YXJnZXRfPWIsdGhpcy52YWx1ZV89dGhpcy5nZXRWYWx1ZUZuXyh0aGlzLm9ic2VydmFibGVfLm9wZW4odGhpcy5vYnNlcnZlZENhbGxiYWNrXyx0aGlzKSksdGhpcy52YWx1ZV99LG9ic2VydmVkQ2FsbGJhY2tfOmZ1bmN0aW9uKGEpe2lmKGE9dGhpcy5nZXRWYWx1ZUZuXyhhKSwhZyhhLHRoaXMudmFsdWVfKSl7dmFyIGI9dGhpcy52YWx1ZV87dGhpcy52YWx1ZV89YSx0aGlzLmNhbGxiYWNrXy5jYWxsKHRoaXMudGFyZ2V0Xyx0aGlzLnZhbHVlXyxiKX19LGRpc2NhcmRDaGFuZ2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVfPXRoaXMuZ2V0VmFsdWVGbl8odGhpcy5vYnNlcnZhYmxlXy5kaXNjYXJkQ2hhbmdlcygpKSx0aGlzLnZhbHVlX30sZGVsaXZlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9ic2VydmFibGVfLmRlbGl2ZXIoKX0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9dGhpcy5zZXRWYWx1ZUZuXyhhKSwhdGhpcy5kb250UGFzc1Rocm91Z2hTZXRfJiZ0aGlzLm9ic2VydmFibGVfLnNldFZhbHVlP3RoaXMub2JzZXJ2YWJsZV8uc2V0VmFsdWUoYSk6dm9pZCAwfSxjbG9zZTpmdW5jdGlvbigpe3RoaXMub2JzZXJ2YWJsZV8mJnRoaXMub2JzZXJ2YWJsZV8uY2xvc2UoKSx0aGlzLmNhbGxiYWNrXz12b2lkIDAsdGhpcy50YXJnZXRfPXZvaWQgMCx0aGlzLm9ic2VydmFibGVfPXZvaWQgMCx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5nZXRWYWx1ZUZuXz12b2lkIDAsdGhpcy5zZXRWYWx1ZUZuXz12b2lkIDB9fTt2YXIgdGI9e307dGJbTF09ITAsdGJbTV09ITAsdGJbT109ITAsdC5kZWZpbmVDb21wdXRlZFByb3BlcnR5PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1DKGEsYiksZT1jLm9wZW4oZnVuY3Rpb24oYSxiKXtlPWEsZCYmZChNLGIpfSk7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2dldDpmdW5jdGlvbigpe3JldHVybiBjLmRlbGl2ZXIoKSxlfSxzZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGMuc2V0VmFsdWUoYSksYX0sY29uZmlndXJhYmxlOiEwfSkse2Nsb3NlOmZ1bmN0aW9uKCl7Yy5jbG9zZSgpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse3ZhbHVlOmUsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfSl9fX07dmFyIHViPTAsdmI9MSx3Yj0yLHhiPTM7Ri5wcm90b3R5cGU9e2NhbGNFZGl0RGlzdGFuY2VzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtmb3IodmFyIGc9Zi1lKzEsaD1jLWIrMSxpPW5ldyBBcnJheShnKSxqPTA7Zz5qO2orKylpW2pdPW5ldyBBcnJheShoKSxpW2pdWzBdPWo7Zm9yKHZhciBrPTA7aD5rO2srKylpWzBdW2tdPWs7Zm9yKHZhciBqPTE7Zz5qO2orKylmb3IodmFyIGs9MTtoPms7aysrKWlmKHRoaXMuZXF1YWxzKGFbYitrLTFdLGRbZStqLTFdKSlpW2pdW2tdPWlbai0xXVtrLTFdO2Vsc2V7dmFyIGw9aVtqLTFdW2tdKzEsbT1pW2pdW2stMV0rMTtpW2pdW2tdPW0+bD9sOm19cmV0dXJuIGl9LHNwbGljZU9wZXJhdGlvbnNGcm9tRWRpdERpc3RhbmNlczpmdW5jdGlvbihhKXtmb3IodmFyIGI9YS5sZW5ndGgtMSxjPWFbMF0ubGVuZ3RoLTEsZD1hW2JdW2NdLGU9W107Yj4wfHxjPjA7KWlmKDAhPWIpaWYoMCE9Yyl7dmFyIGYsZz1hW2ItMV1bYy0xXSxoPWFbYi0xXVtjXSxpPWFbYl1bYy0xXTtmPWk+aD9nPmg/aDpnOmc+aT9pOmcsZj09Zz8oZz09ZD9lLnB1c2godWIpOihlLnB1c2godmIpLGQ9ZyksYi0tLGMtLSk6Zj09aD8oZS5wdXNoKHhiKSxiLS0sZD1oKTooZS5wdXNoKHdiKSxjLS0sZD1pKX1lbHNlIGUucHVzaCh4YiksYi0tO2Vsc2UgZS5wdXNoKHdiKSxjLS07cmV0dXJuIGUucmV2ZXJzZSgpLGV9LGNhbGNTcGxpY2VzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz0wLGg9MCxpPU1hdGgubWluKGMtYixmLWUpO2lmKDA9PWImJjA9PWUmJihnPXRoaXMuc2hhcmVkUHJlZml4KGEsZCxpKSksYz09YS5sZW5ndGgmJmY9PWQubGVuZ3RoJiYoaD10aGlzLnNoYXJlZFN1ZmZpeChhLGQsaS1nKSksYis9ZyxlKz1nLGMtPWgsZi09aCxjLWI9PTAmJmYtZT09MClyZXR1cm5bXTtpZihiPT1jKXtmb3IodmFyIGo9RShiLFtdLDApO2Y+ZTspai5yZW1vdmVkLnB1c2goZFtlKytdKTtyZXR1cm5bal19aWYoZT09ZilyZXR1cm5bRShiLFtdLGMtYildO2Zvcih2YXIgaz10aGlzLnNwbGljZU9wZXJhdGlvbnNGcm9tRWRpdERpc3RhbmNlcyh0aGlzLmNhbGNFZGl0RGlzdGFuY2VzKGEsYixjLGQsZSxmKSksaj12b2lkIDAsbD1bXSxtPWIsbj1lLG89MDtvPGsubGVuZ3RoO28rKylzd2l0Y2goa1tvXSl7Y2FzZSB1YjpqJiYobC5wdXNoKGopLGo9dm9pZCAwKSxtKyssbisrO2JyZWFrO2Nhc2UgdmI6anx8KGo9RShtLFtdLDApKSxqLmFkZGVkQ291bnQrKyxtKyssai5yZW1vdmVkLnB1c2goZFtuXSksbisrO2JyZWFrO2Nhc2Ugd2I6anx8KGo9RShtLFtdLDApKSxqLmFkZGVkQ291bnQrKyxtKys7YnJlYWs7Y2FzZSB4YjpqfHwoaj1FKG0sW10sMCkpLGoucmVtb3ZlZC5wdXNoKGRbbl0pLG4rK31yZXR1cm4gaiYmbC5wdXNoKGopLGx9LHNoYXJlZFByZWZpeDpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPTA7Yz5kO2QrKylpZighdGhpcy5lcXVhbHMoYVtkXSxiW2RdKSlyZXR1cm4gZDtyZXR1cm4gY30sc2hhcmVkU3VmZml4OmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YS5sZW5ndGgsZT1iLmxlbmd0aCxmPTA7Yz5mJiZ0aGlzLmVxdWFscyhhWy0tZF0sYlstLWVdKTspZisrO3JldHVybiBmfSxjYWxjdWxhdGVTcGxpY2VzOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY2FsY1NwbGljZXMoYSwwLGEubGVuZ3RoLGIsMCxiLmxlbmd0aCl9LGVxdWFsczpmdW5jdGlvbihhLGIpe3JldHVybiBhPT09Yn19O3ZhciB5Yj1uZXcgRjthLk9ic2VydmVyPXQsYS5PYnNlcnZlci5ydW5FT01fPWZiLGEuT2JzZXJ2ZXIuaGFzT2JqZWN0T2JzZXJ2ZT1RLGEuQXJyYXlPYnNlcnZlcj14LGEuQXJyYXlPYnNlcnZlci5jYWxjdWxhdGVTcGxpY2VzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHliLmNhbGN1bGF0ZVNwbGljZXMoYSxiKX0sYS5BcnJheVNwbGljZT1GLGEuT2JqZWN0T2JzZXJ2ZXI9dyxhLlBhdGhPYnNlcnZlcj15LGEuQ29tcG91bmRPYnNlcnZlcj16LGEuUGF0aD1pLGEuT2JzZXJ2ZXJUcmFuc2Zvcm09QixhLk9ic2VydmVyLmNoYW5nZVJlY29yZFR5cGVzPXthZGQ6TCx1cGRhdGU6TSxyZWNvbmZpZ3VyZTpOLCJkZWxldGUiOk8sc3BsaWNlOlB9fSgidW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbCYmZ2xvYmFsJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlP2dsb2JhbDp0aGlzfHx3aW5kb3cpLHdpbmRvdy5QbGF0Zm9ybT13aW5kb3cuUGxhdGZvcm18fHt9LHdpbmRvdy5sb2dGbGFncz13aW5kb3cubG9nRmxhZ3N8fHt9LGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmxhZ3N8fHt9O2xvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpLmZvckVhY2goZnVuY3Rpb24oYSl7YT1hLnNwbGl0KCI9IiksYVswXSYmKGJbYVswXV09YVsxXXx8ITApfSk7dmFyIGM9ZG9jdW1lbnQuY3VycmVudFNjcmlwdHx8ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYyo9InBsYXRmb3JtLmpzIl0nKTtpZihjKWZvcih2YXIgZCxlPWMuYXR0cmlidXRlcyxmPTA7ZjxlLmxlbmd0aDtmKyspZD1lW2ZdLCJzcmMiIT09ZC5uYW1lJiYoYltkLm5hbWVdPWQudmFsdWV8fCEwKTtiLmxvZyYmYi5sb2cuc3BsaXQoIiwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dpbmRvdy5sb2dGbGFnc1thXT0hMH0pLGIuc2hhZG93PWIuc2hhZG93fHxiLnNoYWRvd2RvbXx8Yi5wb2x5ZmlsbCxiLnNoYWRvdz0ibmF0aXZlIj09PWIuc2hhZG93PyExOmIuc2hhZG93fHwhSFRNTEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3QsYi5yZWdpc3RlciYmKHdpbmRvdy5DdXN0b21FbGVtZW50cz13aW5kb3cuQ3VzdG9tRWxlbWVudHN8fHtmbGFnczp7fX0sd2luZG93LkN1c3RvbUVsZW1lbnRzLmZsYWdzLnJlZ2lzdGVyPWIucmVnaXN0ZXIpLGIuaW1wb3J0cyYmKHdpbmRvdy5IVE1MSW1wb3J0cz13aW5kb3cuSFRNTEltcG9ydHN8fHtmbGFnczp7fX0sd2luZG93LkhUTUxJbXBvcnRzLmZsYWdzLmltcG9ydHM9Yi5pbXBvcnRzKSxhLmZsYWdzPWJ9KFBsYXRmb3JtKSxQbGF0Zm9ybS5mbGFncy5zaGFkb3c/KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD17fSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtpZighYSl0aHJvdyBuZXcgRXJyb3IoIkFzc2VydGlvbiBmYWlsZWQiKX1mdW5jdGlvbiBjKGEsYil7cmV0dXJuIEwoYikuZm9yRWFjaChmdW5jdGlvbihjKXtLKGEsYyxNKGIsYykpfSksYX1mdW5jdGlvbiBkKGEsYil7cmV0dXJuIEwoYikuZm9yRWFjaChmdW5jdGlvbihjKXtzd2l0Y2goYyl7Y2FzZSJhcmd1bWVudHMiOmNhc2UiY2FsbGVyIjpjYXNlImxlbmd0aCI6Y2FzZSJuYW1lIjpjYXNlInByb3RvdHlwZSI6Y2FzZSJ0b1N0cmluZyI6cmV0dXJufUsoYSxjLE0oYixjKSl9KSxhfWZ1bmN0aW9uIGUoYSxiKXtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKylpZihiW2NdaW4gYSlyZXR1cm4gYltjXX1mdW5jdGlvbiBmKGEpe3ZhciBiPWEuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoYSksYz1FLmdldChiKTtpZihjKXJldHVybiBjO3ZhciBkPWYoYiksZT10KGQpO3JldHVybiBxKGIsZSxhKSxlfWZ1bmN0aW9uIGcoYSxiKXtvKGEsYiwhMCl9ZnVuY3Rpb24gaChhLGIpe28oYixhLCExKX1mdW5jdGlvbiBpKGEpe3JldHVybi9eb25bYS16XSskLy50ZXN0KGEpfWZ1bmN0aW9uIGooYSl7cmV0dXJuL15cd1thLXpBLVpfMC05XSokLy50ZXN0KGEpfWZ1bmN0aW9uIGsoYSl7cmV0dXJuIEgmJmooYSk/bmV3IEZ1bmN0aW9uKCJyZXR1cm4gdGhpcy5pbXBsLiIrYSk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsW2FdfX1mdW5jdGlvbiBsKGEpe3JldHVybiBIJiZqKGEpP25ldyBGdW5jdGlvbigidiIsInRoaXMuaW1wbC4iK2ErIiA9IHYiKTpmdW5jdGlvbihiKXt0aGlzLmltcGxbYV09Yn19ZnVuY3Rpb24gbShhKXtyZXR1cm4gSCYmaihhKT9uZXcgRnVuY3Rpb24oInJldHVybiB0aGlzLmltcGwuIithKyIuYXBwbHkodGhpcy5pbXBsLCBhcmd1bWVudHMpIik6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsW2FdLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfX1mdW5jdGlvbiBuKGEsYil7dHJ5e3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEsYil9Y2F0Y2goYyl7cmV0dXJuIE99fWZ1bmN0aW9uIG8oYixjLGQpe2Zvcih2YXIgZT1MKGIpLGY9MDtmPGUubGVuZ3RoO2YrKyl7dmFyIGc9ZVtmXTtpZigicG9seW1lckJsYWNrTGlzdF8iIT09ZyYmIShnIGluIGN8fGIucG9seW1lckJsYWNrTGlzdF8mJmIucG9seW1lckJsYWNrTGlzdF9bZ10pKXtOJiZiLl9fbG9va3VwR2V0dGVyX18oZyk7dmFyIGgsaixvPW4oYixnKTtpZihkJiYiZnVuY3Rpb24iPT10eXBlb2Ygby52YWx1ZSljW2ddPW0oZyk7ZWxzZXt2YXIgcD1pKGcpO2g9cD9hLmdldEV2ZW50SGFuZGxlckdldHRlcihnKTprKGcpLChvLndyaXRhYmxlfHxvLnNldCkmJihqPXA/YS5nZXRFdmVudEhhbmRsZXJTZXR0ZXIoZyk6bChnKSksSyhjLGcse2dldDpoLHNldDpqLGNvbmZpZ3VyYWJsZTpvLmNvbmZpZ3VyYWJsZSxlbnVtZXJhYmxlOm8uZW51bWVyYWJsZX0pfX19fWZ1bmN0aW9uIHAoYSxiLGMpe3ZhciBlPWEucHJvdG90eXBlO3EoZSxiLGMpLGQoYixhKX1mdW5jdGlvbiBxKGEsYyxkKXt2YXIgZT1jLnByb3RvdHlwZTtiKHZvaWQgMD09PUUuZ2V0KGEpKSxFLnNldChhLGMpLEYuc2V0KGUsYSksZyhhLGUpLGQmJmgoZSxkKSxLKGUsImNvbnN0cnVjdG9yIix7dmFsdWU6Yyxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMH0pLGMucHJvdG90eXBlPWV9ZnVuY3Rpb24gcihhLGIpe3JldHVybiBFLmdldChiLnByb3RvdHlwZSk9PT1hfWZ1bmN0aW9uIHMoYSl7dmFyIGI9T2JqZWN0LmdldFByb3RvdHlwZU9mKGEpLGM9ZihiKSxkPXQoYyk7cmV0dXJuIHEoYixkLGEpLGR9ZnVuY3Rpb24gdChhKXtmdW5jdGlvbiBiKGIpe2EuY2FsbCh0aGlzLGIpfXZhciBjPU9iamVjdC5jcmVhdGUoYS5wcm90b3R5cGUpO3JldHVybiBjLmNvbnN0cnVjdG9yPWIsYi5wcm90b3R5cGU9YyxifWZ1bmN0aW9uIHUoYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBHLkV2ZW50VGFyZ2V0fHxhIGluc3RhbmNlb2YgRy5FdmVudHx8YSBpbnN0YW5jZW9mIEcuUmFuZ2V8fGEgaW5zdGFuY2VvZiBHLkRPTUltcGxlbWVudGF0aW9ufHxhIGluc3RhbmNlb2YgRy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkR8fEcuV2ViR0xSZW5kZXJpbmdDb250ZXh0JiZhIGluc3RhbmNlb2YgRy5XZWJHTFJlbmRlcmluZ0NvbnRleHR9ZnVuY3Rpb24gdihhKXtyZXR1cm4gUSYmYSBpbnN0YW5jZW9mIFF8fGEgaW5zdGFuY2VvZiBTfHxhIGluc3RhbmNlb2YgUnx8YSBpbnN0YW5jZW9mIFR8fGEgaW5zdGFuY2VvZiBVfHxhIGluc3RhbmNlb2YgUHx8YSBpbnN0YW5jZW9mIFZ8fFcmJmEgaW5zdGFuY2VvZiBXfHxYJiZhIGluc3RhbmNlb2YgWH1mdW5jdGlvbiB3KGEpe3JldHVybiBudWxsPT09YT9udWxsOihiKHYoYSkpLGEucG9seW1lcldyYXBwZXJffHwoYS5wb2x5bWVyV3JhcHBlcl89bmV3KGYoYSkpKGEpKSl9ZnVuY3Rpb24geChhKXtyZXR1cm4gbnVsbD09PWE/bnVsbDooYih1KGEpKSxhLmltcGwpfWZ1bmN0aW9uIHkoYSl7cmV0dXJuIGEmJnUoYSk/eChhKTphfWZ1bmN0aW9uIHooYSl7cmV0dXJuIGEmJiF1KGEpP3coYSk6YX1mdW5jdGlvbiBBKGEsYyl7bnVsbCE9PWMmJihiKHYoYSkpLGIodm9pZCAwPT09Y3x8dShjKSksYS5wb2x5bWVyV3JhcHBlcl89Yyl9ZnVuY3Rpb24gQihhLGIsYyl7SyhhLnByb3RvdHlwZSxiLHtnZXQ6Yyxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIEMoYSxiKXtCKGEsYixmdW5jdGlvbigpe3JldHVybiB3KHRoaXMuaW1wbFtiXSl9KX1mdW5jdGlvbiBEKGEsYil7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2IuZm9yRWFjaChmdW5jdGlvbihiKXthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3ZhciBhPXoodGhpcyk7cmV0dXJuIGFbYl0uYXBwbHkoYSxhcmd1bWVudHMpfX0pfSl9dmFyIEU9bmV3IFdlYWtNYXAsRj1uZXcgV2Vha01hcCxHPU9iamVjdC5jcmVhdGUobnVsbCksSD0hKCJzZWN1cml0eVBvbGljeSJpbiBkb2N1bWVudCl8fGRvY3VtZW50LnNlY3VyaXR5UG9saWN5LmFsbG93c0V2YWw7aWYoSCl0cnl7dmFyIEk9bmV3IEZ1bmN0aW9uKCIiLCJyZXR1cm4gdHJ1ZTsiKTtIPUkoKX1jYXRjaChKKXtIPSExfXZhciBLPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxMPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLE09T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtMKHdpbmRvdyk7dmFyIE49L0ZpcmVmb3gvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksTz17Z2V0OmZ1bmN0aW9uKCl7fSxzZXQ6ZnVuY3Rpb24oKXt9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfSxQPXdpbmRvdy5ET01JbXBsZW1lbnRhdGlvbixRPXdpbmRvdy5FdmVudFRhcmdldCxSPXdpbmRvdy5FdmVudCxTPXdpbmRvdy5Ob2RlLFQ9d2luZG93LldpbmRvdyxVPXdpbmRvdy5SYW5nZSxWPXdpbmRvdy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsVz13aW5kb3cuV2ViR0xSZW5kZXJpbmdDb250ZXh0LFg9d2luZG93LlNWR0VsZW1lbnRJbnN0YW5jZTthLmFzc2VydD1iLGEuY29uc3RydWN0b3JUYWJsZT1FLGEuZGVmaW5lR2V0dGVyPUIsYS5kZWZpbmVXcmFwR2V0dGVyPUMsYS5mb3J3YXJkTWV0aG9kc1RvV3JhcHBlcj1ELGEuaXNXcmFwcGVyPXUsYS5pc1dyYXBwZXJGb3I9cixhLm1peGluPWMsYS5uYXRpdmVQcm90b3R5cGVUYWJsZT1GLGEub25lT2Y9ZSxhLnJlZ2lzdGVyT2JqZWN0PXMsYS5yZWdpc3RlcldyYXBwZXI9cCxhLnJld3JhcD1BLGEudW53cmFwPXgsYS51bndyYXBJZk5lZWRlZD15LGEud3JhcD13LGEud3JhcElmTmVlZGVkPXosYS53cmFwcGVycz1HfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKCl7Zz0hMTt2YXIgYT1mLnNsaWNlKDApO2Y9W107Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXSgpfWZ1bmN0aW9uIGMoYSl7Zi5wdXNoKGEpLGd8fChnPSEwLGQoYiwwKSl9dmFyIGQsZT13aW5kb3cuTXV0YXRpb25PYnNlcnZlcixmPVtdLGc9ITE7aWYoZSl7dmFyIGg9MSxpPW5ldyBlKGIpLGo9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaCk7aS5vYnNlcnZlKGose2NoYXJhY3RlckRhdGE6ITB9KSxkPWZ1bmN0aW9uKCl7aD0oaCsxKSUyLGouZGF0YT1ofX1lbHNlIGQ9d2luZG93LnNldEltbWVkaWF0ZXx8d2luZG93LnNldFRpbWVvdXQ7YS5zZXRFbmRPZk1pY3JvdGFzaz1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKCl7cHx8KGsoYykscD0hMCl9ZnVuY3Rpb24gYygpe3A9ITE7ZG8gZm9yKHZhciBhPW8uc2xpY2UoKSxiPSExLGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQudGFrZVJlY29yZHMoKTtmKGQpLGUubGVuZ3RoJiYoZC5jYWxsYmFja18oZSxkKSxiPSEwKX13aGlsZShiKX1mdW5jdGlvbiBkKGEsYil7dGhpcy50eXBlPWEsdGhpcy50YXJnZXQ9Yix0aGlzLmFkZGVkTm9kZXM9bmV3IG0uTm9kZUxpc3QsdGhpcy5yZW1vdmVkTm9kZXM9bmV3IG0uTm9kZUxpc3QsdGhpcy5wcmV2aW91c1NpYmxpbmc9bnVsbCx0aGlzLm5leHRTaWJsaW5nPW51bGwsdGhpcy5hdHRyaWJ1dGVOYW1lPW51bGwsdGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9bnVsbCx0aGlzLm9sZFZhbHVlPW51bGx9ZnVuY3Rpb24gZShhLGIpe2Zvcig7YTthPWEucGFyZW50Tm9kZSl7dmFyIGM9bi5nZXQoYSk7aWYoYylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTtlLm9wdGlvbnMuc3VidHJlZSYmZS5hZGRUcmFuc2llbnRPYnNlcnZlcihiKX19fWZ1bmN0aW9uIGYoYSl7Zm9yKHZhciBiPTA7YjxhLm5vZGVzXy5sZW5ndGg7YisrKXt2YXIgYz1hLm5vZGVzX1tiXSxkPW4uZ2V0KGMpO2lmKCFkKXJldHVybjtmb3IodmFyIGU9MDtlPGQubGVuZ3RoO2UrKyl7dmFyIGY9ZFtlXTtmLm9ic2VydmVyPT09YSYmZi5yZW1vdmVUcmFuc2llbnRPYnNlcnZlcnMoKX19fWZ1bmN0aW9uIGcoYSxjLGUpe2Zvcih2YXIgZj1PYmplY3QuY3JlYXRlKG51bGwpLGc9T2JqZWN0LmNyZWF0ZShudWxsKSxoPWE7aDtoPWgucGFyZW50Tm9kZSl7dmFyIGk9bi5nZXQoaCk7aWYoaSlmb3IodmFyIGo9MDtqPGkubGVuZ3RoO2orKyl7dmFyIGs9aVtqXSxsPWsub3B0aW9ucztpZigoaD09PWF8fGwuc3VidHJlZSkmJiEoImF0dHJpYnV0ZXMiPT09YyYmIWwuYXR0cmlidXRlc3x8ImF0dHJpYnV0ZXMiPT09YyYmbC5hdHRyaWJ1dGVGaWx0ZXImJihudWxsIT09ZS5uYW1lc3BhY2V8fC0xPT09bC5hdHRyaWJ1dGVGaWx0ZXIuaW5kZXhPZihlLm5hbWUpKXx8ImNoYXJhY3RlckRhdGEiPT09YyYmIWwuY2hhcmFjdGVyRGF0YXx8ImNoaWxkTGlzdCI9PT1jJiYhbC5jaGlsZExpc3QpKXt2YXIgbT1rLm9ic2VydmVyO2ZbbS51aWRfXT1tLCgiYXR0cmlidXRlcyI9PT1jJiZsLmF0dHJpYnV0ZU9sZFZhbHVlfHwiY2hhcmFjdGVyRGF0YSI9PT1jJiZsLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSkmJihnW20udWlkX109ZS5vbGRWYWx1ZSl9fX12YXIgbz0hMTtmb3IodmFyIHAgaW4gZil7dmFyIG09ZltwXSxxPW5ldyBkKGMsYSk7Im5hbWUiaW4gZSYmIm5hbWVzcGFjZSJpbiBlJiYocS5hdHRyaWJ1dGVOYW1lPWUubmFtZSxxLmF0dHJpYnV0ZU5hbWVzcGFjZT1lLm5hbWVzcGFjZSksZS5hZGRlZE5vZGVzJiYocS5hZGRlZE5vZGVzPWUuYWRkZWROb2RlcyksZS5yZW1vdmVkTm9kZXMmJihxLnJlbW92ZWROb2Rlcz1lLnJlbW92ZWROb2RlcyksZS5wcmV2aW91c1NpYmxpbmcmJihxLnByZXZpb3VzU2libGluZz1lLnByZXZpb3VzU2libGluZyksZS5uZXh0U2libGluZyYmKHEubmV4dFNpYmxpbmc9ZS5uZXh0U2libGluZyksdm9pZCAwIT09Z1twXSYmKHEub2xkVmFsdWU9Z1twXSksbS5yZWNvcmRzXy5wdXNoKHEpLG89ITB9byYmYigpfWZ1bmN0aW9uIGgoYSl7aWYodGhpcy5jaGlsZExpc3Q9ISFhLmNoaWxkTGlzdCx0aGlzLnN1YnRyZWU9ISFhLnN1YnRyZWUsdGhpcy5hdHRyaWJ1dGVzPSJhdHRyaWJ1dGVzImluIGF8fCEoImF0dHJpYnV0ZU9sZFZhbHVlImluIGF8fCJhdHRyaWJ1dGVGaWx0ZXIiaW4gYSk/ISFhLmF0dHJpYnV0ZXM6ITAsdGhpcy5jaGFyYWN0ZXJEYXRhPSJjaGFyYWN0ZXJEYXRhT2xkVmFsdWUiaW4gYSYmISgiY2hhcmFjdGVyRGF0YSJpbiBhKT8hMDohIWEuY2hhcmFjdGVyRGF0YSwhdGhpcy5hdHRyaWJ1dGVzJiYoYS5hdHRyaWJ1dGVPbGRWYWx1ZXx8ImF0dHJpYnV0ZUZpbHRlciJpbiBhKXx8IXRoaXMuY2hhcmFjdGVyRGF0YSYmYS5jaGFyYWN0ZXJEYXRhT2xkVmFsdWUpdGhyb3cgbmV3IFR5cGVFcnJvcjtpZih0aGlzLmNoYXJhY3RlckRhdGE9ISFhLmNoYXJhY3RlckRhdGEsdGhpcy5hdHRyaWJ1dGVPbGRWYWx1ZT0hIWEuYXR0cmlidXRlT2xkVmFsdWUsdGhpcy5jaGFyYWN0ZXJEYXRhT2xkVmFsdWU9ISFhLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSwiYXR0cmlidXRlRmlsdGVyImluIGEpe2lmKG51bGw9PWEuYXR0cmlidXRlRmlsdGVyfHwib2JqZWN0IiE9dHlwZW9mIGEuYXR0cmlidXRlRmlsdGVyKXRocm93IG5ldyBUeXBlRXJyb3I7dGhpcy5hdHRyaWJ1dGVGaWx0ZXI9cS5jYWxsKGEuYXR0cmlidXRlRmlsdGVyKX1lbHNlIHRoaXMuYXR0cmlidXRlRmlsdGVyPW51bGx9ZnVuY3Rpb24gaShhKXt0aGlzLmNhbGxiYWNrXz1hLHRoaXMubm9kZXNfPVtdLHRoaXMucmVjb3Jkc189W10sdGhpcy51aWRfPSsrcixvLnB1c2godGhpcyl9ZnVuY3Rpb24gaihhLGIsYyl7dGhpcy5vYnNlcnZlcj1hLHRoaXMudGFyZ2V0PWIsdGhpcy5vcHRpb25zPWMsdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdfXZhciBrPWEuc2V0RW5kT2ZNaWNyb3Rhc2ssbD1hLndyYXBJZk5lZWRlZCxtPWEud3JhcHBlcnMsbj1uZXcgV2Vha01hcCxvPVtdLHA9ITEscT1BcnJheS5wcm90b3R5cGUuc2xpY2Uscj0wO2kucHJvdG90eXBlPXtvYnNlcnZlOmZ1bmN0aW9uKGEsYil7YT1sKGEpO3ZhciBjLGQ9bmV3IGgoYiksZT1uLmdldChhKTtlfHxuLnNldChhLGU9W10pO2Zvcih2YXIgZj0wO2Y8ZS5sZW5ndGg7ZisrKWVbZl0ub2JzZXJ2ZXI9PT10aGlzJiYoYz1lW2ZdLGMucmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzKCksYy5vcHRpb25zPWQpO2N8fChjPW5ldyBqKHRoaXMsYSxkKSxlLnB1c2goYyksdGhpcy5ub2Rlc18ucHVzaChhKSl9LGRpc2Nvbm5lY3Q6ZnVuY3Rpb24oKXt0aGlzLm5vZGVzXy5mb3JFYWNoKGZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1uLmdldChhKSxjPTA7YzxiLmxlbmd0aDtjKyspe3ZhciBkPWJbY107aWYoZC5vYnNlcnZlcj09PXRoaXMpe2Iuc3BsaWNlKGMsMSk7YnJlYWt9fX0sdGhpcyksdGhpcy5yZWNvcmRzXz1bXX0sdGFrZVJlY29yZHM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnJlY29yZHNfO3JldHVybiB0aGlzLnJlY29yZHNfPVtdLGF9fSxqLnByb3RvdHlwZT17YWRkVHJhbnNpZW50T2JzZXJ2ZXI6ZnVuY3Rpb24oYSl7aWYoYSE9PXRoaXMudGFyZ2V0KXt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChhKTt2YXIgYj1uLmdldChhKTtifHxuLnNldChhLGI9W10pLGIucHVzaCh0aGlzKX19LHJlbW92ZVRyYW5zaWVudE9ic2VydmVyczpmdW5jdGlvbigpe3ZhciBhPXRoaXMudHJhbnNpZW50T2JzZXJ2ZWROb2Rlczt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W107Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspZm9yKHZhciBjPWFbYl0sZD1uLmdldChjKSxlPTA7ZTxkLmxlbmd0aDtlKyspaWYoZFtlXT09PXRoaXMpe2Quc3BsaWNlKGUsMSk7YnJlYWt9fX0sYS5lbnF1ZXVlTXV0YXRpb249ZyxhLnJlZ2lzdGVyVHJhbnNpZW50T2JzZXJ2ZXJzPWUsYS53cmFwcGVycy5NdXRhdGlvbk9ic2VydmVyPWksYS53cmFwcGVycy5NdXRhdGlvblJlY29yZD1kfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEsYil7dGhpcy5yb290PWEsdGhpcy5wYXJlbnQ9Yn1mdW5jdGlvbiBjKGEsYil7aWYoYS50cmVlU2NvcGVfIT09Yil7YS50cmVlU2NvcGVfPWI7Zm9yKHZhciBkPWEuZmlyc3RDaGlsZDtkO2Q9ZC5uZXh0U2libGluZyljKGQsYil9fWZ1bmN0aW9uIGQoYSl7aWYoYS50cmVlU2NvcGVfKXJldHVybiBhLnRyZWVTY29wZV87dmFyIGMsZT1hLnBhcmVudE5vZGU7cmV0dXJuIGM9ZT9kKGUpOm5ldyBiKGEsbnVsbCksYS50cmVlU2NvcGVfPWN9Yi5wcm90b3R5cGU9e2dldCByZW5kZXJlcigpe3JldHVybiB0aGlzLnJvb3QgaW5zdGFuY2VvZiBhLndyYXBwZXJzLlNoYWRvd1Jvb3Q/YS5nZXRSZW5kZXJlckZvckhvc3QodGhpcy5yb290Lmhvc3QpOm51bGx9LGNvbnRhaW5zOmZ1bmN0aW9uKGEpe2Zvcig7YTthPWEucGFyZW50KWlmKGE9PT10aGlzKXJldHVybiEwO3JldHVybiExfX0sYS5UcmVlU2NvcGU9YixhLmdldFRyZWVTY29wZT1kLGEuc2V0VHJlZVNjb3BlPWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBQLlNoYWRvd1Jvb3R9ZnVuY3Rpb24gYyhhKXt2YXIgYj1hLmxvY2FsTmFtZTtyZXR1cm4iY29udGVudCI9PT1ifHwic2hhZG93Ij09PWJ9ZnVuY3Rpb24gZChhKXtyZXR1cm4hIWEuc2hhZG93Um9vdH1mdW5jdGlvbiBlKGEpe3ZhciBiO3JldHVybiBhLnBhcmVudE5vZGV8fChiPWEuZGVmYXVsdFZpZXcpJiZPKGIpfHxudWxsfWZ1bmN0aW9uIGYoZixnLGgpe2lmKGgubGVuZ3RoKXJldHVybiBoLnNoaWZ0KCk7aWYoYihmKSlyZXR1cm4gaihmKXx8Zi5ob3N0O3ZhciBpPWEuZXZlbnRQYXJlbnRzVGFibGUuZ2V0KGYpO2lmKGkpe2Zvcih2YXIgaz0xO2s8aS5sZW5ndGg7aysrKWhbay0xXT1pW2tdO3JldHVybiBpWzBdfWlmKGcmJmMoZikpe3ZhciBsPWYucGFyZW50Tm9kZTtpZihsJiZkKGwpKWZvcih2YXIgbT1hLmdldFNoYWRvd1RyZWVzKGwpLG49aihnKSxrPTA7azxtLmxlbmd0aDtrKyspaWYobVtrXS5jb250YWlucyhuKSlyZXR1cm4gbn1yZXR1cm4gZShmKX1mdW5jdGlvbiBnKGEpe2Zvcih2YXIgZD1bXSxlPWEsZz1bXSxpPVtdO2U7KXt2YXIgaj1udWxsO2lmKGMoZSkpe2o9aChkKTt2YXIgaz1kW2QubGVuZ3RoLTFdfHxlO2QucHVzaChrKX1lbHNlIGQubGVuZ3RofHxkLnB1c2goZSk7dmFyIGw9ZFtkLmxlbmd0aC0xXTtnLnB1c2goe3RhcmdldDpsLGN1cnJlbnRUYXJnZXQ6ZX0pLGIoZSkmJmQucG9wKCksZT1mKGUsaixpKX1yZXR1cm4gZ31mdW5jdGlvbiBoKGEpe2Zvcih2YXIgYj1hLmxlbmd0aC0xO2I+PTA7Yi0tKWlmKCFjKGFbYl0pKXJldHVybiBhW2JdO3JldHVybiBudWxsfWZ1bmN0aW9uIGkoYSxkKXtmb3IodmFyIGU9W107YTspe2Zvcih2YXIgZz1bXSxpPWQsaj12b2lkIDA7aTspe3ZhciBtPW51bGw7aWYoZy5sZW5ndGgpe2lmKGMoaSkmJihtPWgoZyksayhqKSkpe3ZhciBuPWdbZy5sZW5ndGgtMV07Zy5wdXNoKG4pfX1lbHNlIGcucHVzaChpKTtpZihsKGksYSkpcmV0dXJuIGdbZy5sZW5ndGgtMV07YihpKSYmZy5wb3AoKSxqPWksaT1mKGksbSxlKX1hPWIoYSk/YS5ob3N0OmEucGFyZW50Tm9kZX19ZnVuY3Rpb24gaihiKXtyZXR1cm4gYS5pbnNlcnRpb25QYXJlbnRUYWJsZS5nZXQoYil9ZnVuY3Rpb24gayhhKXtyZXR1cm4gaihhKX1mdW5jdGlvbiBsKGEsYil7cmV0dXJuIEsoYSk9PT1LKGIpfWZ1bmN0aW9uIG0oYSl7cmV0dXJuIFIuZ2V0KGEpP3ZvaWQgMDooUi5zZXQoYSwhMCksbihPKGEpLE8oYS50YXJnZXQpKSl9ZnVuY3Rpb24gbihiLGMpe2lmKFMuZ2V0KGIpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZFN0YXRlRXJyb3IiKTtTLnNldChiLCEwKSxhLnJlbmRlckFsbFBlbmRpbmcoKTt2YXIgZD1nKGMpO3JldHVybiJsb2FkIj09PWIudHlwZSYmMj09PWQubGVuZ3RoJiZkWzBdLnRhcmdldCBpbnN0YW5jZW9mIFAuRG9jdW1lbnQmJmQuc2hpZnQoKSwkLnNldChiLGQpLG8oYixkKSYmcChiLGQpJiZxKGIsZCksVy5zZXQoYix0Lk5PTkUpLFUuZGVsZXRlKGIsbnVsbCksUy5kZWxldGUoYiksYi5kZWZhdWx0UHJldmVudGVkfWZ1bmN0aW9uIG8oYSxiKXtmb3IodmFyIGMsZD1iLmxlbmd0aC0xO2Q+MDtkLS0pe3ZhciBlPWJbZF0udGFyZ2V0LGY9YltkXS5jdXJyZW50VGFyZ2V0O2lmKGUhPT1mJiYoYz10LkNBUFRVUklOR19QSEFTRSwhcihiW2RdLGEsYykpKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIHAoYSxiKXt2YXIgYz10LkFUX1RBUkdFVDtyZXR1cm4gcihiWzBdLGEsYyl9ZnVuY3Rpb24gcShhLGIpe2Zvcih2YXIgYyxkPWEuYnViYmxlcyxlPTE7ZTxiLmxlbmd0aDtlKyspe3ZhciBmPWJbZV0udGFyZ2V0LGc9YltlXS5jdXJyZW50VGFyZ2V0O2lmKGY9PT1nKWM9dC5BVF9UQVJHRVQ7ZWxzZXtpZighZHx8WS5nZXQoYSkpY29udGludWU7Yz10LkJVQkJMSU5HX1BIQVNFfWlmKCFyKGJbZV0sYSxjKSlyZXR1cm59fWZ1bmN0aW9uIHIoYSxiLGMpe3ZhciBkPWEudGFyZ2V0LGU9YS5jdXJyZW50VGFyZ2V0LGY9US5nZXQoZSk7aWYoIWYpcmV0dXJuITA7aWYoInJlbGF0ZWRUYXJnZXQiaW4gYil7dmFyIGc9TihiKTtpZihnLnJlbGF0ZWRUYXJnZXQpe3ZhciBoPU8oZy5yZWxhdGVkVGFyZ2V0KSxqPWkoZSxoKTtpZihqPT09ZClyZXR1cm4hMDtWLnNldChiLGopfX1XLnNldChiLGMpO3ZhciBrPWIudHlwZSxsPSExO1Quc2V0KGIsZCksVS5zZXQoYixlKTtmb3IodmFyIG09MDttPGYubGVuZ3RoO20rKyl7dmFyIG49ZlttXTtpZihuLnJlbW92ZWQpbD0hMDtlbHNlIGlmKCEobi50eXBlIT09a3x8IW4uY2FwdHVyZSYmYz09PXQuQ0FQVFVSSU5HX1BIQVNFfHxuLmNhcHR1cmUmJmM9PT10LkJVQkJMSU5HX1BIQVNFKSl0cnl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIG4uaGFuZGxlcj9uLmhhbmRsZXIuY2FsbChlLGIpOm4uaGFuZGxlci5oYW5kbGVFdmVudChiKSxZLmdldChiKSlyZXR1cm4hMX1jYXRjaChvKXt3aW5kb3cub25lcnJvcj93aW5kb3cub25lcnJvcihvLm1lc3NhZ2UpOmNvbnNvbGUuZXJyb3IobyxvLnN0YWNrKX19aWYobCl7dmFyIHA9Zi5zbGljZSgpO2YubGVuZ3RoPTA7Zm9yKHZhciBtPTA7bTxwLmxlbmd0aDttKyspcFttXS5yZW1vdmVkfHxmLnB1c2gocFttXSl9cmV0dXJuIVguZ2V0KGIpfWZ1bmN0aW9uIHMoYSxiLGMpe3RoaXMudHlwZT1hLHRoaXMuaGFuZGxlcj1iLHRoaXMuY2FwdHVyZT1Cb29sZWFuKGMpfWZ1bmN0aW9uIHQoYSxiKXtyZXR1cm4gYSBpbnN0YW5jZW9mIF8/dm9pZCh0aGlzLmltcGw9YSk6Tyh4KF8sIkV2ZW50IixhLGIpKX1mdW5jdGlvbiB1KGEpe3JldHVybiBhJiZhLnJlbGF0ZWRUYXJnZXQ/T2JqZWN0LmNyZWF0ZShhLHtyZWxhdGVkVGFyZ2V0Ont2YWx1ZTpOKGEucmVsYXRlZFRhcmdldCl9fSk6YX1mdW5jdGlvbiB2KGEsYixjKXt2YXIgZD13aW5kb3dbYV0sZT1mdW5jdGlvbihiLGMpe3JldHVybiBiIGluc3RhbmNlb2YgZD92b2lkKHRoaXMuaW1wbD1iKTpPKHgoZCxhLGIsYykpfTtpZihlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGIucHJvdG90eXBlKSxjJiZMKGUucHJvdG90eXBlLGMpLGQpdHJ5e00oZCxlLG5ldyBkKCJ0ZW1wIikpfWNhdGNoKGYpe00oZCxlLGRvY3VtZW50LmNyZWF0ZUV2ZW50KGEpKX1yZXR1cm4gZX1mdW5jdGlvbiB3KGEsYil7cmV0dXJuIGZ1bmN0aW9uKCl7YXJndW1lbnRzW2JdPU4oYXJndW1lbnRzW2JdKTt2YXIgYz1OKHRoaXMpO2NbYV0uYXBwbHkoYyxhcmd1bWVudHMpfX1mdW5jdGlvbiB4KGEsYixjLGQpe2lmKGliKXJldHVybiBuZXcgYShjLHUoZCkpO3ZhciBlPU4oZG9jdW1lbnQuY3JlYXRlRXZlbnQoYikpLGY9aGJbYl0sZz1bY107cmV0dXJuIE9iamVjdC5rZXlzKGYpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCE9ZCYmYSBpbiBkP2RbYV06ZlthXTsicmVsYXRlZFRhcmdldCI9PT1hJiYoYj1OKGIpKSxnLnB1c2goYil9KSxlWyJpbml0IitiXS5hcHBseShlLGcpLGV9ZnVuY3Rpb24geSgpe3QuY2FsbCh0aGlzKX1mdW5jdGlvbiB6KGEpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBhPyEwOmEmJmEuaGFuZGxlRXZlbnR9ZnVuY3Rpb24gQShhKXtzd2l0Y2goYSl7Y2FzZSJET01BdHRyTW9kaWZpZWQiOmNhc2UiRE9NQXR0cmlidXRlTmFtZUNoYW5nZWQiOmNhc2UiRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkIjpjYXNlIkRPTUVsZW1lbnROYW1lQ2hhbmdlZCI6Y2FzZSJET01Ob2RlSW5zZXJ0ZWQiOmNhc2UiRE9NTm9kZUluc2VydGVkSW50b0RvY3VtZW50IjpjYXNlIkRPTU5vZGVSZW1vdmVkIjpjYXNlIkRPTU5vZGVSZW1vdmVkRnJvbURvY3VtZW50IjpjYXNlIkRPTVN1YnRyZWVNb2RpZmllZCI6cmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gQihhKXt0aGlzLmltcGw9YX1mdW5jdGlvbiBDKGEpe3JldHVybiBhIGluc3RhbmNlb2YgUC5TaGFkb3dSb290JiYoYT1hLmhvc3QpLE4oYSl9ZnVuY3Rpb24gRChhLGIpe3ZhciBjPVEuZ2V0KGEpO2lmKGMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNbZF0ucmVtb3ZlZCYmY1tkXS50eXBlPT09YilyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBFKGEsYil7Zm9yKHZhciBjPU4oYSk7YztjPWMucGFyZW50Tm9kZSlpZihEKE8oYyksYikpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gRihhKXtKKGEsbGIpfWZ1bmN0aW9uIEcoYixjLGQsZSl7YS5yZW5kZXJBbGxQZW5kaW5nKCk7Zm9yKHZhciBmPU8obWIuY2FsbChjLmltcGwsZCxlKSksaD1nKGYsdGhpcyksaT0wO2k8aC5sZW5ndGg7aSsrKXt2YXIgaj1oW2ldO2lmKGouY3VycmVudFRhcmdldD09PWIpcmV0dXJuIGoudGFyZ2V0fXJldHVybiBudWxsfWZ1bmN0aW9uIEgoYSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGI9Wi5nZXQodGhpcyk7cmV0dXJuIGImJmJbYV0mJmJbYV0udmFsdWV8fG51bGx9fWZ1bmN0aW9uIEkoYSl7dmFyIGI9YS5zbGljZSgyKTtyZXR1cm4gZnVuY3Rpb24oYyl7dmFyIGQ9Wi5nZXQodGhpcyk7ZHx8KGQ9T2JqZWN0LmNyZWF0ZShudWxsKSxaLnNldCh0aGlzLGQpKTt2YXIgZT1kW2FdO2lmKGUmJnRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGUud3JhcHBlZCwhMSksImZ1bmN0aW9uIj09dHlwZW9mIGMpe3ZhciBmPWZ1bmN0aW9uKGIpe3ZhciBkPWMuY2FsbCh0aGlzLGIpO2Q9PT0hMT9iLnByZXZlbnREZWZhdWx0KCk6Im9uYmVmb3JldW5sb2FkIj09PWEmJiJzdHJpbmciPT10eXBlb2YgZCYmKGIucmV0dXJuVmFsdWU9ZCl9O3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihiLGYsITEpLGRbYV09e3ZhbHVlOmMsd3JhcHBlZDpmfX19fXZhciBKPWEuZm9yd2FyZE1ldGhvZHNUb1dyYXBwZXIsSz1hLmdldFRyZWVTY29wZSxMPWEubWl4aW4sTT1hLnJlZ2lzdGVyV3JhcHBlcixOPWEudW53cmFwLE89YS53cmFwLFA9YS53cmFwcGVycyxRPShuZXcgV2Vha01hcCxuZXcgV2Vha01hcCksUj1uZXcgV2Vha01hcCxTPW5ldyBXZWFrTWFwLFQ9bmV3IFdlYWtNYXAsVT1uZXcgV2Vha01hcCxWPW5ldyBXZWFrTWFwLFc9bmV3IFdlYWtNYXAsWD1uZXcgV2Vha01hcCxZPW5ldyBXZWFrTWFwLFo9bmV3IFdlYWtNYXAsJD1uZXcgV2Vha01hcDtzLnByb3RvdHlwZT17ZXF1YWxzOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmhhbmRsZXI9PT1hLmhhbmRsZXImJnRoaXMudHlwZT09PWEudHlwZSYmdGhpcy5jYXB0dXJlPT09YS5jYXB0dXJlfSxnZXQgcmVtb3ZlZCgpe3JldHVybiBudWxsPT09dGhpcy5oYW5kbGVyfSxyZW1vdmU6ZnVuY3Rpb24oKXt0aGlzLmhhbmRsZXI9bnVsbH19O3ZhciBfPXdpbmRvdy5FdmVudDtfLnByb3RvdHlwZS5wb2x5bWVyQmxhY2tMaXN0Xz17cmV0dXJuVmFsdWU6ITAsa2V5TG9jYXRpb246ITB9LHQucHJvdG90eXBlPXtnZXQgdGFyZ2V0KCl7cmV0dXJuIFQuZ2V0KHRoaXMpfSxnZXQgY3VycmVudFRhcmdldCgpe3JldHVybiBVLmdldCh0aGlzKX0sZ2V0IGV2ZW50UGhhc2UoKXtyZXR1cm4gVy5nZXQodGhpcyl9LGdldCBwYXRoKCl7dmFyIGE9bmV3IFAuTm9kZUxpc3QsYj0kLmdldCh0aGlzKTtpZihiKXtmb3IodmFyIGM9MCxkPWIubGVuZ3RoLTEsZT1LKFUuZ2V0KHRoaXMpKSxmPTA7ZD49ZjtmKyspe3ZhciBnPWJbZl0uY3VycmVudFRhcmdldCxoPUsoZyk7aC5jb250YWlucyhlKSYmKGYhPT1kfHxnIGluc3RhbmNlb2YgUC5Ob2RlKSYmKGFbYysrXT1nKX1hLmxlbmd0aD1jfXJldHVybiBhfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXtYLnNldCh0aGlzLCEwKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7WC5zZXQodGhpcywhMCksWS5zZXQodGhpcywhMCl9fSxNKF8sdCxkb2N1bWVudC5jcmVhdGVFdmVudCgiRXZlbnQiKSk7CnZhciBhYj12KCJVSUV2ZW50Iix0KSxiYj12KCJDdXN0b21FdmVudCIsdCksY2I9e2dldCByZWxhdGVkVGFyZ2V0KCl7cmV0dXJuIFYuZ2V0KHRoaXMpfHxPKE4odGhpcykucmVsYXRlZFRhcmdldCl9fSxkYj1MKHtpbml0TW91c2VFdmVudDp3KCJpbml0TW91c2VFdmVudCIsMTQpfSxjYiksZWI9TCh7aW5pdEZvY3VzRXZlbnQ6dygiaW5pdEZvY3VzRXZlbnQiLDUpfSxjYiksZmI9digiTW91c2VFdmVudCIsYWIsZGIpLGdiPXYoIkZvY3VzRXZlbnQiLGFiLGViKSxoYj1PYmplY3QuY3JlYXRlKG51bGwpLGliPWZ1bmN0aW9uKCl7dHJ5e25ldyB3aW5kb3cuRm9jdXNFdmVudCgiZm9jdXMiKX1jYXRjaChhKXtyZXR1cm4hMX1yZXR1cm4hMH0oKTtpZighaWIpe3ZhciBqYj1mdW5jdGlvbihhLGIsYyl7aWYoYyl7dmFyIGQ9aGJbY107Yj1MKEwoe30sZCksYil9aGJbYV09Yn07amIoIkV2ZW50Iix7YnViYmxlczohMSxjYW5jZWxhYmxlOiExfSksamIoIkN1c3RvbUV2ZW50Iix7ZGV0YWlsOm51bGx9LCJFdmVudCIpLGpiKCJVSUV2ZW50Iix7dmlldzpudWxsLGRldGFpbDowfSwiRXZlbnQiKSxqYigiTW91c2VFdmVudCIse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxjdHJsS2V5OiExLGFsdEtleTohMSxzaGlmdEtleTohMSxtZXRhS2V5OiExLGJ1dHRvbjowLHJlbGF0ZWRUYXJnZXQ6bnVsbH0sIlVJRXZlbnQiKSxqYigiRm9jdXNFdmVudCIse3JlbGF0ZWRUYXJnZXQ6bnVsbH0sIlVJRXZlbnQiKX15LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQucHJvdG90eXBlKSxMKHkucHJvdG90eXBlLHtnZXQgcmV0dXJuVmFsdWUoKXtyZXR1cm4gdGhpcy5pbXBsLnJldHVyblZhbHVlfSxzZXQgcmV0dXJuVmFsdWUoYSl7dGhpcy5pbXBsLnJldHVyblZhbHVlPWF9fSk7dmFyIGtiPXdpbmRvdy5FdmVudFRhcmdldCxsYj1bImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCJdO1tOb2RlLFdpbmRvd10uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnByb3RvdHlwZTtsYi5mb3JFYWNoKGZ1bmN0aW9uKGEpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShiLGErIl8iLHt2YWx1ZTpiW2FdfSl9KX0pLEIucHJvdG90eXBlPXthZGRFdmVudExpc3RlbmVyOmZ1bmN0aW9uKGEsYixjKXtpZih6KGIpJiYhQShhKSl7dmFyIGQ9bmV3IHMoYSxiLGMpLGU9US5nZXQodGhpcyk7aWYoZSl7Zm9yKHZhciBmPTA7ZjxlLmxlbmd0aDtmKyspaWYoZC5lcXVhbHMoZVtmXSkpcmV0dXJufWVsc2UgZT1bXSxRLnNldCh0aGlzLGUpO2UucHVzaChkKTt2YXIgZz1DKHRoaXMpO2cuYWRkRXZlbnRMaXN0ZW5lcl8oYSxtLCEwKX19LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiLGMpe2M9Qm9vbGVhbihjKTt2YXIgZD1RLmdldCh0aGlzKTtpZihkKXtmb3IodmFyIGU9MCxmPSExLGc9MDtnPGQubGVuZ3RoO2crKylkW2ddLnR5cGU9PT1hJiZkW2ddLmNhcHR1cmU9PT1jJiYoZSsrLGRbZ10uaGFuZGxlcj09PWImJihmPSEwLGRbZ10ucmVtb3ZlKCkpKTtpZihmJiYxPT09ZSl7dmFyIGg9Qyh0aGlzKTtoLnJlbW92ZUV2ZW50TGlzdGVuZXJfKGEsbSwhMCl9fX0sZGlzcGF0Y2hFdmVudDpmdW5jdGlvbihiKXt2YXIgYz1OKGIpLGQ9Yy50eXBlO1Iuc2V0KGMsITEpLGEucmVuZGVyQWxsUGVuZGluZygpO3ZhciBlO0UodGhpcyxkKXx8KGU9ZnVuY3Rpb24oKXt9LHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihkLGUsITApKTt0cnl7cmV0dXJuIE4odGhpcykuZGlzcGF0Y2hFdmVudF8oYyl9ZmluYWxseXtlJiZ0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZCxlLCEwKX19fSxrYiYmTShrYixCKTt2YXIgbWI9ZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludDthLmFkanVzdFJlbGF0ZWRUYXJnZXQ9aSxhLmVsZW1lbnRGcm9tUG9pbnQ9RyxhLmdldEV2ZW50SGFuZGxlckdldHRlcj1ILGEuZ2V0RXZlbnRIYW5kbGVyU2V0dGVyPUksYS53cmFwRXZlbnRUYXJnZXRNZXRob2RzPUYsYS53cmFwcGVycy5CZWZvcmVVbmxvYWRFdmVudD15LGEud3JhcHBlcnMuQ3VzdG9tRXZlbnQ9YmIsYS53cmFwcGVycy5FdmVudD10LGEud3JhcHBlcnMuRXZlbnRUYXJnZXQ9QixhLndyYXBwZXJzLkZvY3VzRXZlbnQ9Z2IsYS53cmFwcGVycy5Nb3VzZUV2ZW50PWZiLGEud3JhcHBlcnMuVUlFdmVudD1hYn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6ITF9KX1mdW5jdGlvbiBjKCl7dGhpcy5sZW5ndGg9MCxiKHRoaXMsImxlbmd0aCIpfWZ1bmN0aW9uIGQoYSl7aWYobnVsbD09YSlyZXR1cm4gYTtmb3IodmFyIGI9bmV3IGMsZD0wLGU9YS5sZW5ndGg7ZT5kO2QrKyliW2RdPWYoYVtkXSk7cmV0dXJuIGIubGVuZ3RoPWUsYn1mdW5jdGlvbiBlKGEsYil7YS5wcm90b3R5cGVbYl09ZnVuY3Rpb24oKXtyZXR1cm4gZCh0aGlzLmltcGxbYl0uYXBwbHkodGhpcy5pbXBsLGFyZ3VtZW50cykpfX12YXIgZj1hLndyYXA7Yy5wcm90b3R5cGU9e2l0ZW06ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19fSxiKGMucHJvdG90eXBlLCJpdGVtIiksYS53cmFwcGVycy5Ob2RlTGlzdD1jLGEuYWRkV3JhcE5vZGVMaXN0TWV0aG9kPWUsYS53cmFwTm9kZUxpc3Q9ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7YS53cmFwSFRNTENvbGxlY3Rpb249YS53cmFwTm9kZUxpc3QsYS53cmFwcGVycy5IVE1MQ29sbGVjdGlvbj1hLndyYXBwZXJzLk5vZGVMaXN0fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe0EoYSBpbnN0YW5jZW9mIHcpfWZ1bmN0aW9uIGMoYSl7dmFyIGI9bmV3IHk7cmV0dXJuIGJbMF09YSxiLmxlbmd0aD0xLGJ9ZnVuY3Rpb24gZChhLGIsYyl7QyhiLCJjaGlsZExpc3QiLHtyZW1vdmVkTm9kZXM6YyxwcmV2aW91c1NpYmxpbmc6YS5wcmV2aW91c1NpYmxpbmcsbmV4dFNpYmxpbmc6YS5uZXh0U2libGluZ30pfWZ1bmN0aW9uIGUoYSxiKXtDKGEsImNoaWxkTGlzdCIse3JlbW92ZWROb2RlczpifSl9ZnVuY3Rpb24gZihhLGIsZCxlKXtpZihhIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCl7dmFyIGY9aChhKTtOPSEwO2Zvcih2YXIgZz1mLmxlbmd0aC0xO2c+PTA7Zy0tKWEucmVtb3ZlQ2hpbGQoZltnXSksZltnXS5wYXJlbnROb2RlXz1iO049ITE7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspZltnXS5wcmV2aW91c1NpYmxpbmdfPWZbZy0xXXx8ZCxmW2ddLm5leHRTaWJsaW5nXz1mW2crMV18fGU7cmV0dXJuIGQmJihkLm5leHRTaWJsaW5nXz1mWzBdKSxlJiYoZS5wcmV2aW91c1NpYmxpbmdfPWZbZi5sZW5ndGgtMV0pLGZ9dmFyIGY9YyhhKSxpPWEucGFyZW50Tm9kZTtyZXR1cm4gaSYmaS5yZW1vdmVDaGlsZChhKSxhLnBhcmVudE5vZGVfPWIsYS5wcmV2aW91c1NpYmxpbmdfPWQsYS5uZXh0U2libGluZ189ZSxkJiYoZC5uZXh0U2libGluZ189YSksZSYmKGUucHJldmlvdXNTaWJsaW5nXz1hKSxmfWZ1bmN0aW9uIGcoYSl7aWYoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpcmV0dXJuIGgoYSk7dmFyIGI9YyhhKSxlPWEucGFyZW50Tm9kZTtyZXR1cm4gZSYmZChhLGUsYiksYn1mdW5jdGlvbiBoKGEpe2Zvcih2YXIgYj1uZXcgeSxjPTAsZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpYltjKytdPWQ7cmV0dXJuIGIubGVuZ3RoPWMsZShhLGIpLGJ9ZnVuY3Rpb24gaShhKXtyZXR1cm4gYX1mdW5jdGlvbiBqKGEsYil7SShhLGIpLGEubm9kZUlzSW5zZXJ0ZWRfKCl9ZnVuY3Rpb24gayhhLGIpe2Zvcih2YXIgYz1EKGIpLGQ9MDtkPGEubGVuZ3RoO2QrKylqKGFbZF0sYyl9ZnVuY3Rpb24gbChhKXtJKGEsbmV3IHooYSxudWxsKSl9ZnVuY3Rpb24gbShhKXtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKylsKGFbYl0pfWZ1bmN0aW9uIG4oYSxiKXt2YXIgYz1hLm5vZGVUeXBlPT09dy5ET0NVTUVOVF9OT0RFP2E6YS5vd25lckRvY3VtZW50O2MhPT1iLm93bmVyRG9jdW1lbnQmJmMuYWRvcHROb2RlKGIpfWZ1bmN0aW9uIG8oYixjKXtpZihjLmxlbmd0aCl7dmFyIGQ9Yi5vd25lckRvY3VtZW50O2lmKGQhPT1jWzBdLm93bmVyRG9jdW1lbnQpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYS5hZG9wdE5vZGVOb1JlbW92ZShjW2VdLGQpfX1mdW5jdGlvbiBwKGEsYil7byhhLGIpO3ZhciBjPWIubGVuZ3RoO2lmKDE9PT1jKXJldHVybiBKKGJbMF0pO2Zvcih2YXIgZD1KKGEub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpLGU9MDtjPmU7ZSsrKWQuYXBwZW5kQ2hpbGQoSihiW2VdKSk7cmV0dXJuIGR9ZnVuY3Rpb24gcShhKXtpZih2b2lkIDAhPT1hLmZpcnN0Q2hpbGRfKWZvcih2YXIgYj1hLmZpcnN0Q2hpbGRfO2I7KXt2YXIgYz1iO2I9Yi5uZXh0U2libGluZ18sYy5wYXJlbnROb2RlXz1jLnByZXZpb3VzU2libGluZ189Yy5uZXh0U2libGluZ189dm9pZCAwfWEuZmlyc3RDaGlsZF89YS5sYXN0Q2hpbGRfPXZvaWQgMH1mdW5jdGlvbiByKGEpe2lmKGEuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe2Zvcih2YXIgYj1hLmZpcnN0Q2hpbGQ7Yjspe0EoYi5wYXJlbnROb2RlPT09YSk7dmFyIGM9Yi5uZXh0U2libGluZyxkPUooYiksZT1kLnBhcmVudE5vZGU7ZSYmVS5jYWxsKGUsZCksYi5wcmV2aW91c1NpYmxpbmdfPWIubmV4dFNpYmxpbmdfPWIucGFyZW50Tm9kZV89bnVsbCxiPWN9YS5maXJzdENoaWxkXz1hLmxhc3RDaGlsZF89bnVsbH1lbHNlIGZvcih2YXIgYyxmPUooYSksZz1mLmZpcnN0Q2hpbGQ7ZzspYz1nLm5leHRTaWJsaW5nLFUuY2FsbChmLGcpLGc9Y31mdW5jdGlvbiBzKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmYi5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX1mdW5jdGlvbiB0KGEpe2Zvcih2YXIgYixjPTA7YzxhLmxlbmd0aDtjKyspYj1hW2NdLGIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKX1mdW5jdGlvbiB1KGEsYixjKXt2YXIgZDtpZihkPUsoYz9PLmNhbGwoYyxhLmltcGwsITEpOlAuY2FsbChhLmltcGwsITEpKSxiKXtmb3IodmFyIGU9YS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWQuYXBwZW5kQ2hpbGQodShlLCEwLGMpKTtpZihhIGluc3RhbmNlb2YgTS5IVE1MVGVtcGxhdGVFbGVtZW50KWZvcih2YXIgZj1kLmNvbnRlbnQsZT1hLmNvbnRlbnQuZmlyc3RDaGlsZDtlO2U9ZS5uZXh0U2libGluZylmLmFwcGVuZENoaWxkKHUoZSwhMCxjKSl9cmV0dXJuIGR9ZnVuY3Rpb24gdihhLGIpe2lmKCFifHxEKGEpIT09RChiKSlyZXR1cm4hMTtmb3IodmFyIGM9YjtjO2M9Yy5wYXJlbnROb2RlKWlmKGM9PT1hKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIHcoYSl7QShhIGluc3RhbmNlb2YgUSkseC5jYWxsKHRoaXMsYSksdGhpcy5wYXJlbnROb2RlXz12b2lkIDAsdGhpcy5maXJzdENoaWxkXz12b2lkIDAsdGhpcy5sYXN0Q2hpbGRfPXZvaWQgMCx0aGlzLm5leHRTaWJsaW5nXz12b2lkIDAsdGhpcy5wcmV2aW91c1NpYmxpbmdfPXZvaWQgMCx0aGlzLnRyZWVTY29wZV89dm9pZCAwfXZhciB4PWEud3JhcHBlcnMuRXZlbnRUYXJnZXQseT1hLndyYXBwZXJzLk5vZGVMaXN0LHo9YS5UcmVlU2NvcGUsQT1hLmFzc2VydCxCPWEuZGVmaW5lV3JhcEdldHRlcixDPWEuZW5xdWV1ZU11dGF0aW9uLEQ9YS5nZXRUcmVlU2NvcGUsRT1hLmlzV3JhcHBlcixGPWEubWl4aW4sRz1hLnJlZ2lzdGVyVHJhbnNpZW50T2JzZXJ2ZXJzLEg9YS5yZWdpc3RlcldyYXBwZXIsST1hLnNldFRyZWVTY29wZSxKPWEudW53cmFwLEs9YS53cmFwLEw9YS53cmFwSWZOZWVkZWQsTT1hLndyYXBwZXJzLE49ITEsTz1kb2N1bWVudC5pbXBvcnROb2RlLFA9d2luZG93Lk5vZGUucHJvdG90eXBlLmNsb25lTm9kZSxRPXdpbmRvdy5Ob2RlLFI9d2luZG93LkRvY3VtZW50RnJhZ21lbnQsUz0oUS5wcm90b3R5cGUuYXBwZW5kQ2hpbGQsUS5wcm90b3R5cGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24pLFQ9US5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlLFU9US5wcm90b3R5cGUucmVtb3ZlQ2hpbGQsVj1RLnByb3RvdHlwZS5yZXBsYWNlQ2hpbGQsVz0vVHJpZGVudC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxYPVc/ZnVuY3Rpb24oYSxiKXt0cnl7VS5jYWxsKGEsYil9Y2F0Y2goYyl7aWYoIShhIGluc3RhbmNlb2YgUikpdGhyb3cgY319OmZ1bmN0aW9uKGEsYil7VS5jYWxsKGEsYil9O3cucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoeC5wcm90b3R5cGUpLEYody5wcm90b3R5cGUse2FwcGVuZENoaWxkOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmluc2VydEJlZm9yZShhLG51bGwpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oYSxjKXtiKGEpO3ZhciBkO2M/RShjKT9kPUooYyk6KGQ9YyxjPUsoZCkpOihjPW51bGwsZD1udWxsKSxjJiZBKGMucGFyZW50Tm9kZT09PXRoaXMpO3ZhciBlLGg9Yz9jLnByZXZpb3VzU2libGluZzp0aGlzLmxhc3RDaGlsZCxpPSF0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpJiYhcyhhKTtpZihlPWk/ZyhhKTpmKGEsdGhpcyxoLGMpLGkpbih0aGlzLGEpLHEodGhpcyksVC5jYWxsKHRoaXMuaW1wbCxKKGEpLGQpO2Vsc2V7aHx8KHRoaXMuZmlyc3RDaGlsZF89ZVswXSksY3x8KHRoaXMubGFzdENoaWxkXz1lW2UubGVuZ3RoLTFdKTt2YXIgaj1kP2QucGFyZW50Tm9kZTp0aGlzLmltcGw7aj9ULmNhbGwoaixwKHRoaXMsZSksZCk6byh0aGlzLGUpfXJldHVybiBDKHRoaXMsImNoaWxkTGlzdCIse2FkZGVkTm9kZXM6ZSxuZXh0U2libGluZzpjLHByZXZpb3VzU2libGluZzpofSksayhlLHRoaXMpLGF9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKGEpe2lmKGIoYSksYS5wYXJlbnROb2RlIT09dGhpcyl7Zm9yKHZhciBkPSExLGU9KHRoaXMuY2hpbGROb2Rlcyx0aGlzLmZpcnN0Q2hpbGQpO2U7ZT1lLm5leHRTaWJsaW5nKWlmKGU9PT1hKXtkPSEwO2JyZWFrfWlmKCFkKXRocm93IG5ldyBFcnJvcigiTm90Rm91bmRFcnJvciIpfXZhciBmPUooYSksZz1hLm5leHRTaWJsaW5nLGg9YS5wcmV2aW91c1NpYmxpbmc7aWYodGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSl7dmFyIGk9dGhpcy5maXJzdENoaWxkLGo9dGhpcy5sYXN0Q2hpbGQsaz1mLnBhcmVudE5vZGU7ayYmWChrLGYpLGk9PT1hJiYodGhpcy5maXJzdENoaWxkXz1nKSxqPT09YSYmKHRoaXMubGFzdENoaWxkXz1oKSxoJiYoaC5uZXh0U2libGluZ189ZyksZyYmKGcucHJldmlvdXNTaWJsaW5nXz1oKSxhLnByZXZpb3VzU2libGluZ189YS5uZXh0U2libGluZ189YS5wYXJlbnROb2RlXz12b2lkIDB9ZWxzZSBxKHRoaXMpLFgodGhpcy5pbXBsLGYpO3JldHVybiBOfHxDKHRoaXMsImNoaWxkTGlzdCIse3JlbW92ZWROb2RlczpjKGEpLG5leHRTaWJsaW5nOmcscHJldmlvdXNTaWJsaW5nOmh9KSxHKHRoaXMsYSksYX0scmVwbGFjZUNoaWxkOmZ1bmN0aW9uKGEsZCl7YihhKTt2YXIgZTtpZihFKGQpP2U9SihkKTooZT1kLGQ9SyhlKSksZC5wYXJlbnROb2RlIT09dGhpcyl0aHJvdyBuZXcgRXJyb3IoIk5vdEZvdW5kRXJyb3IiKTt2YXIgaCxpPWQubmV4dFNpYmxpbmcsaj1kLnByZXZpb3VzU2libGluZyxtPSF0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpJiYhcyhhKTtyZXR1cm4gbT9oPWcoYSk6KGk9PT1hJiYoaT1hLm5leHRTaWJsaW5nKSxoPWYoYSx0aGlzLGosaSkpLG0/KG4odGhpcyxhKSxxKHRoaXMpLFYuY2FsbCh0aGlzLmltcGwsSihhKSxlKSk6KHRoaXMuZmlyc3RDaGlsZD09PWQmJih0aGlzLmZpcnN0Q2hpbGRfPWhbMF0pLHRoaXMubGFzdENoaWxkPT09ZCYmKHRoaXMubGFzdENoaWxkXz1oW2gubGVuZ3RoLTFdKSxkLnByZXZpb3VzU2libGluZ189ZC5uZXh0U2libGluZ189ZC5wYXJlbnROb2RlXz12b2lkIDAsZS5wYXJlbnROb2RlJiZWLmNhbGwoZS5wYXJlbnROb2RlLHAodGhpcyxoKSxlKSksQyh0aGlzLCJjaGlsZExpc3QiLHthZGRlZE5vZGVzOmgscmVtb3ZlZE5vZGVzOmMoZCksbmV4dFNpYmxpbmc6aSxwcmV2aW91c1NpYmxpbmc6an0pLGwoZCksayhoLHRoaXMpLGR9LG5vZGVJc0luc2VydGVkXzpmdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLmZpcnN0Q2hpbGQ7YTthPWEubmV4dFNpYmxpbmcpYS5ub2RlSXNJbnNlcnRlZF8oKX0saGFzQ2hpbGROb2RlczpmdW5jdGlvbigpe3JldHVybiBudWxsIT09dGhpcy5maXJzdENoaWxkfSxnZXQgcGFyZW50Tm9kZSgpe3JldHVybiB2b2lkIDAhPT10aGlzLnBhcmVudE5vZGVfP3RoaXMucGFyZW50Tm9kZV86Syh0aGlzLmltcGwucGFyZW50Tm9kZSl9LGdldCBmaXJzdENoaWxkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZmlyc3RDaGlsZF8/dGhpcy5maXJzdENoaWxkXzpLKHRoaXMuaW1wbC5maXJzdENoaWxkKX0sZ2V0IGxhc3RDaGlsZCgpe3JldHVybiB2b2lkIDAhPT10aGlzLmxhc3RDaGlsZF8/dGhpcy5sYXN0Q2hpbGRfOksodGhpcy5pbXBsLmxhc3RDaGlsZCl9LGdldCBuZXh0U2libGluZygpe3JldHVybiB2b2lkIDAhPT10aGlzLm5leHRTaWJsaW5nXz90aGlzLm5leHRTaWJsaW5nXzpLKHRoaXMuaW1wbC5uZXh0U2libGluZyl9LGdldCBwcmV2aW91c1NpYmxpbmcoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5wcmV2aW91c1NpYmxpbmdfP3RoaXMucHJldmlvdXNTaWJsaW5nXzpLKHRoaXMuaW1wbC5wcmV2aW91c1NpYmxpbmcpfSxnZXQgcGFyZW50RWxlbWVudCgpe2Zvcih2YXIgYT10aGlzLnBhcmVudE5vZGU7YSYmYS5ub2RlVHlwZSE9PXcuRUxFTUVOVF9OT0RFOylhPWEucGFyZW50Tm9kZTtyZXR1cm4gYX0sZ2V0IHRleHRDb250ZW50KCl7Zm9yKHZhciBhPSIiLGI9dGhpcy5maXJzdENoaWxkO2I7Yj1iLm5leHRTaWJsaW5nKWIubm9kZVR5cGUhPXcuQ09NTUVOVF9OT0RFJiYoYSs9Yi50ZXh0Q29udGVudCk7cmV0dXJuIGF9LHNldCB0ZXh0Q29udGVudChhKXt2YXIgYj1pKHRoaXMuY2hpbGROb2Rlcyk7aWYodGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSl7aWYocih0aGlzKSwiIiE9PWEpe3ZhciBjPXRoaXMuaW1wbC5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGEpO3RoaXMuYXBwZW5kQ2hpbGQoYyl9fWVsc2UgcSh0aGlzKSx0aGlzLmltcGwudGV4dENvbnRlbnQ9YTt2YXIgZD1pKHRoaXMuY2hpbGROb2Rlcyk7Qyh0aGlzLCJjaGlsZExpc3QiLHthZGRlZE5vZGVzOmQscmVtb3ZlZE5vZGVzOmJ9KSxtKGIpLGsoZCx0aGlzKX0sZ2V0IGNoaWxkTm9kZXMoKXtmb3IodmFyIGE9bmV3IHksYj0wLGM9dGhpcy5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKWFbYisrXT1jO3JldHVybiBhLmxlbmd0aD1iLGF9LGNsb25lTm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gdSh0aGlzLGEpfSxjb250YWluczpmdW5jdGlvbihhKXtyZXR1cm4gdih0aGlzLEwoYSkpfSxjb21wYXJlRG9jdW1lbnRQb3NpdGlvbjpmdW5jdGlvbihhKXtyZXR1cm4gUy5jYWxsKHRoaXMuaW1wbCxKKGEpKX0sbm9ybWFsaXplOmZ1bmN0aW9uKCl7Zm9yKHZhciBhLGIsYz1pKHRoaXMuY2hpbGROb2RlcyksZD1bXSxlPSIiLGY9MDtmPGMubGVuZ3RoO2YrKyliPWNbZl0sYi5ub2RlVHlwZT09PXcuVEVYVF9OT0RFP2F8fGIuZGF0YS5sZW5ndGg/YT8oZSs9Yi5kYXRhLGQucHVzaChiKSk6YT1iOnRoaXMucmVtb3ZlTm9kZShiKTooYSYmZC5sZW5ndGgmJihhLmRhdGErPWUsY2xlYW5VcE5vZGVzKGQpKSxkPVtdLGU9IiIsYT1udWxsLGIuY2hpbGROb2Rlcy5sZW5ndGgmJmIubm9ybWFsaXplKCkpO2EmJmQubGVuZ3RoJiYoYS5kYXRhKz1lLHQoZCkpfX0pLEIodywib3duZXJEb2N1bWVudCIpLEgoUSx3LGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSksZGVsZXRlIHcucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3IsZGVsZXRlIHcucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3JBbGwsdy5wcm90b3R5cGU9RihPYmplY3QuY3JlYXRlKHgucHJvdG90eXBlKSx3LnByb3RvdHlwZSksYS5jbG9uZU5vZGU9dSxhLm5vZGVXYXNBZGRlZD1qLGEubm9kZVdhc1JlbW92ZWQ9bCxhLm5vZGVzV2VyZUFkZGVkPWssYS5ub2Rlc1dlcmVSZW1vdmVkPW0sYS5zbmFwc2hvdE5vZGVMaXN0PWksYS53cmFwcGVycy5Ob2RlPXd9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSxjKXtmb3IodmFyIGQsZT1hLmZpcnN0RWxlbWVudENoaWxkO2U7KXtpZihlLm1hdGNoZXMoYykpcmV0dXJuIGU7aWYoZD1iKGUsYykpcmV0dXJuIGQ7ZT1lLm5leHRFbGVtZW50U2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBjKGEsYixkKXtmb3IodmFyIGU9YS5maXJzdEVsZW1lbnRDaGlsZDtlOyllLm1hdGNoZXMoYikmJihkW2QubGVuZ3RoKytdPWUpLGMoZSxiLGQpLGU9ZS5uZXh0RWxlbWVudFNpYmxpbmc7cmV0dXJuIGR9dmFyIGQ9e3F1ZXJ5U2VsZWN0b3I6ZnVuY3Rpb24oYSl7cmV0dXJuIGIodGhpcyxhKX0scXVlcnlTZWxlY3RvckFsbDpmdW5jdGlvbihhKXtyZXR1cm4gYyh0aGlzLGEsbmV3IE5vZGVMaXN0KX19LGU9e2dldEVsZW1lbnRzQnlUYWdOYW1lOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoYSl9LGdldEVsZW1lbnRzQnlDbGFzc05hbWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbCgiLiIrYSl9LGdldEVsZW1lbnRzQnlUYWdOYW1lTlM6ZnVuY3Rpb24oYSxiKXtpZigiKiI9PT1hKXJldHVybiB0aGlzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGIpO2Zvcih2YXIgYz1uZXcgTm9kZUxpc3QsZD10aGlzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGIpLGU9MCxmPTA7ZTxkLmxlbmd0aDtlKyspZFtlXS5uYW1lc3BhY2VVUkk9PT1hJiYoY1tmKytdPWRbZV0pO3JldHVybiBjLmxlbmd0aD1mLGN9fTthLkdldEVsZW1lbnRzQnlJbnRlcmZhY2U9ZSxhLlNlbGVjdG9yc0ludGVyZmFjZT1kfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2Zvcig7YSYmYS5ub2RlVHlwZSE9PU5vZGUuRUxFTUVOVF9OT0RFOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gYyhhKXtmb3IoO2EmJmEubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERTspYT1hLnByZXZpb3VzU2libGluZztyZXR1cm4gYX12YXIgZD1hLndyYXBwZXJzLk5vZGVMaXN0LGU9e2dldCBmaXJzdEVsZW1lbnRDaGlsZCgpe3JldHVybiBiKHRoaXMuZmlyc3RDaGlsZCl9LGdldCBsYXN0RWxlbWVudENoaWxkKCl7cmV0dXJuIGModGhpcy5sYXN0Q2hpbGQpfSxnZXQgY2hpbGRFbGVtZW50Q291bnQoKXtmb3IodmFyIGE9MCxiPXRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7YjtiPWIubmV4dEVsZW1lbnRTaWJsaW5nKWErKztyZXR1cm4gYX0sZ2V0IGNoaWxkcmVuKCl7Zm9yKHZhciBhPW5ldyBkLGI9MCxjPXRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7YztjPWMubmV4dEVsZW1lbnRTaWJsaW5nKWFbYisrXT1jO3JldHVybiBhLmxlbmd0aD1iLGF9fSxmPXtnZXQgbmV4dEVsZW1lbnRTaWJsaW5nKCl7cmV0dXJuIGIodGhpcy5uZXh0U2libGluZyl9LGdldCBwcmV2aW91c0VsZW1lbnRTaWJsaW5nKCl7cmV0dXJuIGModGhpcy5wcmV2aW91c1NpYmxpbmcpfX07YS5DaGlsZE5vZGVJbnRlcmZhY2U9ZixhLlBhcmVudE5vZGVJbnRlcmZhY2U9ZX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtkLmNhbGwodGhpcyxhKX12YXIgYz1hLkNoaWxkTm9kZUludGVyZmFjZSxkPWEud3JhcHBlcnMuTm9kZSxlPWEuZW5xdWV1ZU11dGF0aW9uLGY9YS5taXhpbixnPWEucmVnaXN0ZXJXcmFwcGVyLGg9d2luZG93LkNoYXJhY3RlckRhdGE7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShkLnByb3RvdHlwZSksZihiLnByb3RvdHlwZSx7Z2V0IHRleHRDb250ZW50KCl7cmV0dXJuIHRoaXMuZGF0YX0sc2V0IHRleHRDb250ZW50KGEpe3RoaXMuZGF0YT1hfSxnZXQgZGF0YSgpe3JldHVybiB0aGlzLmltcGwuZGF0YX0sc2V0IGRhdGEoYSl7dmFyIGI9dGhpcy5pbXBsLmRhdGE7ZSh0aGlzLCJjaGFyYWN0ZXJEYXRhIix7b2xkVmFsdWU6Yn0pLHRoaXMuaW1wbC5kYXRhPWF9fSksZihiLnByb3RvdHlwZSxjKSxnKGgsYixkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIikpLGEud3JhcHBlcnMuQ2hhcmFjdGVyRGF0YT1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3JldHVybiBhPj4+MH1mdW5jdGlvbiBjKGEpe2QuY2FsbCh0aGlzLGEpfXZhciBkPWEud3JhcHBlcnMuQ2hhcmFjdGVyRGF0YSxlPShhLmVucXVldWVNdXRhdGlvbixhLm1peGluKSxmPWEucmVnaXN0ZXJXcmFwcGVyLGc9d2luZG93LlRleHQ7Yy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShkLnByb3RvdHlwZSksZShjLnByb3RvdHlwZSx7c3BsaXRUZXh0OmZ1bmN0aW9uKGEpe2E9YihhKTt2YXIgYz10aGlzLmRhdGE7aWYoYT5jLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkluZGV4U2l6ZUVycm9yIik7dmFyIGQ9Yy5zbGljZSgwLGEpLGU9Yy5zbGljZShhKTt0aGlzLmRhdGE9ZDt2YXIgZj10aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZSk7cmV0dXJuIHRoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShmLHRoaXMubmV4dFNpYmxpbmcpLGZ9fSksZihnLGMsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpKSxhLndyYXBwZXJzLlRleHQ9Y30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihiLGMpe3ZhciBkPWIucGFyZW50Tm9kZTtpZihkJiZkLnNoYWRvd1Jvb3Qpe3ZhciBlPWEuZ2V0UmVuZGVyZXJGb3JIb3N0KGQpO2UuZGVwZW5kc09uQXR0cmlidXRlKGMpJiZlLmludmFsaWRhdGUoKX19ZnVuY3Rpb24gYyhhLGIsYyl7ayhhLCJhdHRyaWJ1dGVzIix7bmFtZTpiLG5hbWVzcGFjZTpudWxsLG9sZFZhbHVlOmN9KX1mdW5jdGlvbiBkKGEpe2guY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIGUoYSxjLGQpe3ZhciBlPWR8fGM7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYyx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW1wbFtjXX0sc2V0OmZ1bmN0aW9uKGEpe3RoaXMuaW1wbFtjXT1hLGIodGhpcyxlKX0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITB9KX12YXIgZj1hLkNoaWxkTm9kZUludGVyZmFjZSxnPWEuR2V0RWxlbWVudHNCeUludGVyZmFjZSxoPWEud3JhcHBlcnMuTm9kZSxpPWEuUGFyZW50Tm9kZUludGVyZmFjZSxqPWEuU2VsZWN0b3JzSW50ZXJmYWNlLGs9KGEuYWRkV3JhcE5vZGVMaXN0TWV0aG9kLGEuZW5xdWV1ZU11dGF0aW9uKSxsPWEubWl4aW4sbT0oYS5vbmVPZixhLnJlZ2lzdGVyV3JhcHBlciksbj1hLndyYXBwZXJzLG89d2luZG93LkVsZW1lbnQscD1bIm1hdGNoZXMiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciJdLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gby5wcm90b3R5cGVbYV19KSxxPXBbMF0scj1vLnByb3RvdHlwZVtxXTtkLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGgucHJvdG90eXBlKSxsKGQucHJvdG90eXBlLHtjcmVhdGVTaGFkb3dSb290OmZ1bmN0aW9uKCl7dmFyIGI9bmV3IG4uU2hhZG93Um9vdCh0aGlzKTt0aGlzLmltcGwucG9seW1lclNoYWRvd1Jvb3RfPWI7dmFyIGM9YS5nZXRSZW5kZXJlckZvckhvc3QodGhpcyk7cmV0dXJuIGMuaW52YWxpZGF0ZSgpLGJ9LGdldCBzaGFkb3dSb290KCl7cmV0dXJuIHRoaXMuaW1wbC5wb2x5bWVyU2hhZG93Um9vdF98fG51bGx9LHNldEF0dHJpYnV0ZTpmdW5jdGlvbihhLGQpe3ZhciBlPXRoaXMuaW1wbC5nZXRBdHRyaWJ1dGUoYSk7dGhpcy5pbXBsLnNldEF0dHJpYnV0ZShhLGQpLGModGhpcyxhLGUpLGIodGhpcyxhKX0scmVtb3ZlQXR0cmlidXRlOmZ1bmN0aW9uKGEpe3ZhciBkPXRoaXMuaW1wbC5nZXRBdHRyaWJ1dGUoYSk7dGhpcy5pbXBsLnJlbW92ZUF0dHJpYnV0ZShhKSxjKHRoaXMsYSxkKSxiKHRoaXMsYSl9LG1hdGNoZXM6ZnVuY3Rpb24oYSl7cmV0dXJuIHIuY2FsbCh0aGlzLmltcGwsYSl9fSkscC5mb3JFYWNoKGZ1bmN0aW9uKGEpeyJtYXRjaGVzIiE9PWEmJihkLnByb3RvdHlwZVthXT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5tYXRjaGVzKGEpfSl9KSxvLnByb3RvdHlwZS53ZWJraXRDcmVhdGVTaGFkb3dSb290JiYoZC5wcm90b3R5cGUud2Via2l0Q3JlYXRlU2hhZG93Um9vdD1kLnByb3RvdHlwZS5jcmVhdGVTaGFkb3dSb290KSxlKGQucHJvdG90eXBlLCJpZCIpLGUoZC5wcm90b3R5cGUsImNsYXNzTmFtZSIsImNsYXNzIiksbChkLnByb3RvdHlwZSxmKSxsKGQucHJvdG90eXBlLGcpLGwoZC5wcm90b3R5cGUsaSksbChkLnByb3RvdHlwZSxqKSxtKG8sZCxkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMobnVsbCwieCIpKSxhLm1hdGNoZXNOYW1lcz1wLGEud3JhcHBlcnMuRWxlbWVudD1kfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3N3aXRjaChhKXtjYXNlIiYiOnJldHVybiImYW1wOyI7Y2FzZSI8IjpyZXR1cm4iJmx0OyI7Y2FzZSI+IjpyZXR1cm4iJmd0OyI7Y2FzZSciJzpyZXR1cm4iJnF1b3Q7IjtjYXNlIsKgIjpyZXR1cm4iJm5ic3A7In19ZnVuY3Rpb24gYyhhKXtyZXR1cm4gYS5yZXBsYWNlKHosYil9ZnVuY3Rpb24gZChhKXtyZXR1cm4gYS5yZXBsYWNlKEEsYil9ZnVuY3Rpb24gZShhKXtmb3IodmFyIGI9e30sYz0wO2M8YS5sZW5ndGg7YysrKWJbYVtjXV09ITA7cmV0dXJuIGJ9ZnVuY3Rpb24gZihhLGIpe3N3aXRjaChhLm5vZGVUeXBlKXtjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOmZvcih2YXIgZSxmPWEudGFnTmFtZS50b0xvd2VyQ2FzZSgpLGg9IjwiK2YsaT1hLmF0dHJpYnV0ZXMsaj0wO2U9aVtqXTtqKyspaCs9IiAiK2UubmFtZSsnPSInK2MoZS52YWx1ZSkrJyInO3JldHVybiBoKz0iPiIsQltmXT9oOmgrZyhhKSsiPC8iK2YrIj4iO2Nhc2UgTm9kZS5URVhUX05PREU6dmFyIGs9YS5kYXRhO3JldHVybiBiJiZDW2IubG9jYWxOYW1lXT9rOmQoayk7Y2FzZSBOb2RlLkNPTU1FTlRfTk9ERTpyZXR1cm4iPCEtLSIrYS5kYXRhKyItLT4iO2RlZmF1bHQ6dGhyb3cgY29uc29sZS5lcnJvcihhKSxuZXcgRXJyb3IoIm5vdCBpbXBsZW1lbnRlZCIpfX1mdW5jdGlvbiBnKGEpe2EgaW5zdGFuY2VvZiB5LkhUTUxUZW1wbGF0ZUVsZW1lbnQmJihhPWEuY29udGVudCk7Zm9yKHZhciBiPSIiLGM9YS5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKWIrPWYoYyxhKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjKXt2YXIgZD1jfHwiZGl2IjthLnRleHRDb250ZW50PSIiO3ZhciBlPXcoYS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZCkpO2UuaW5uZXJIVE1MPWI7Zm9yKHZhciBmO2Y9ZS5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKHgoZikpfWZ1bmN0aW9uIGkoYSl7by5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24gaihhLGIpe3ZhciBjPXcoYS5jbG9uZU5vZGUoITEpKTtjLmlubmVySFRNTD1iO2Zvcih2YXIgZCxlPXcoZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKTtkPWMuZmlyc3RDaGlsZDspZS5hcHBlbmRDaGlsZChkKTtyZXR1cm4geChlKX1mdW5jdGlvbiBrKGIpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhLnJlbmRlckFsbFBlbmRpbmcoKSx0aGlzLmltcGxbYl19fWZ1bmN0aW9uIGwoYSl7cChpLGEsayhhKSl9ZnVuY3Rpb24gbShiKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5wcm90b3R5cGUsYix7Z2V0OmsoYiksc2V0OmZ1bmN0aW9uKGMpe2EucmVuZGVyQWxsUGVuZGluZygpLHRoaXMuaW1wbFtiXT1jfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIG4oYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGkucHJvdG90eXBlLGIse3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGEucmVuZGVyQWxsUGVuZGluZygpLHRoaXMuaW1wbFtiXS5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKX0sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITB9KX12YXIgbz1hLndyYXBwZXJzLkVsZW1lbnQscD1hLmRlZmluZUdldHRlcixxPWEuZW5xdWV1ZU11dGF0aW9uLHI9YS5taXhpbixzPWEubm9kZXNXZXJlQWRkZWQsdD1hLm5vZGVzV2VyZVJlbW92ZWQsdT1hLnJlZ2lzdGVyV3JhcHBlcix2PWEuc25hcHNob3ROb2RlTGlzdCx3PWEudW53cmFwLHg9YS53cmFwLHk9YS53cmFwcGVycyx6PS9bJlx1MDBBMCJdL2csQT0vWyZcdTAwQTA8Pl0vZyxCPWUoWyJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiY29tbWFuZCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJzb3VyY2UiLCJ0cmFjayIsIndiciJdKSxDPWUoWyJzdHlsZSIsInNjcmlwdCIsInhtcCIsImlmcmFtZSIsIm5vZW1iZWQiLCJub2ZyYW1lcyIsInBsYWludGV4dCIsIm5vc2NyaXB0Il0pLEQ9L01TSUUvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksRT13aW5kb3cuSFRNTEVsZW1lbnQsRj13aW5kb3cuSFRNTFRlbXBsYXRlRWxlbWVudDtpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG8ucHJvdG90eXBlKSxyKGkucHJvdG90eXBlLHtnZXQgaW5uZXJIVE1MKCl7cmV0dXJuIGcodGhpcyl9LHNldCBpbm5lckhUTUwoYSl7aWYoRCYmQ1t0aGlzLmxvY2FsTmFtZV0pcmV0dXJuIHZvaWQodGhpcy50ZXh0Q29udGVudD1hKTt2YXIgYj12KHRoaXMuY2hpbGROb2Rlcyk7dGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKT90aGlzIGluc3RhbmNlb2YgeS5IVE1MVGVtcGxhdGVFbGVtZW50P2godGhpcy5jb250ZW50LGEpOmgodGhpcyxhLHRoaXMudGFnTmFtZSk6IUYmJnRoaXMgaW5zdGFuY2VvZiB5LkhUTUxUZW1wbGF0ZUVsZW1lbnQ/aCh0aGlzLmNvbnRlbnQsYSk6dGhpcy5pbXBsLmlubmVySFRNTD1hO3ZhciBjPXYodGhpcy5jaGlsZE5vZGVzKTtxKHRoaXMsImNoaWxkTGlzdCIse2FkZGVkTm9kZXM6YyxyZW1vdmVkTm9kZXM6Yn0pLHQoYikscyhjLHRoaXMpfSxnZXQgb3V0ZXJIVE1MKCl7cmV0dXJuIGYodGhpcyx0aGlzLnBhcmVudE5vZGUpfSxzZXQgb3V0ZXJIVE1MKGEpe3ZhciBiPXRoaXMucGFyZW50Tm9kZTtpZihiKXtiLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpO3ZhciBjPWooYixhKTtiLnJlcGxhY2VDaGlsZChjLHRoaXMpfX0saW5zZXJ0QWRqYWNlbnRIVE1MOmZ1bmN0aW9uKGEsYil7dmFyIGMsZDtzd2l0Y2goU3RyaW5nKGEpLnRvTG93ZXJDYXNlKCkpe2Nhc2UiYmVmb3JlYmVnaW4iOmM9dGhpcy5wYXJlbnROb2RlLGQ9dGhpczticmVhaztjYXNlImFmdGVyZW5kIjpjPXRoaXMucGFyZW50Tm9kZSxkPXRoaXMubmV4dFNpYmxpbmc7YnJlYWs7Y2FzZSJhZnRlcmJlZ2luIjpjPXRoaXMsZD10aGlzLmZpcnN0Q2hpbGQ7YnJlYWs7Y2FzZSJiZWZvcmVlbmQiOmM9dGhpcyxkPW51bGw7YnJlYWs7ZGVmYXVsdDpyZXR1cm59dmFyIGU9aihjLGIpO2MuaW5zZXJ0QmVmb3JlKGUsZCl9fSksWyJjbGllbnRIZWlnaHQiLCJjbGllbnRMZWZ0IiwiY2xpZW50VG9wIiwiY2xpZW50V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwib2Zmc2V0V2lkdGgiLCJzY3JvbGxIZWlnaHQiLCJzY3JvbGxXaWR0aCJdLmZvckVhY2gobCksWyJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIl0uZm9yRWFjaChtKSxbImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImdldENsaWVudFJlY3RzIiwic2Nyb2xsSW50b1ZpZXciXS5mb3JFYWNoKG4pLHUoRSxpLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImIiKSksYS53cmFwcGVycy5IVE1MRWxlbWVudD1pLGEuZ2V0SW5uZXJIVE1MPWcsYS5zZXRJbm5lckhUTUw9aH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwLGc9d2luZG93LkhUTUxDYW52YXNFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldENvbnRleHQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmltcGwuZ2V0Q29udGV4dC5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKTtyZXR1cm4gYSYmZihhKX19KSxlKGcsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKSksYS53cmFwcGVycy5IVE1MQ2FudmFzRWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj13aW5kb3cuSFRNTENvbnRlbnRFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldCBzZWxlY3QoKXtyZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoInNlbGVjdCIpfSxzZXQgc2VsZWN0KGEpe3RoaXMuc2V0QXR0cmlidXRlKCJzZWxlY3QiLGEpfSxzZXRBdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiKXtjLnByb3RvdHlwZS5zZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLGEsYiksInNlbGVjdCI9PT1TdHJpbmcoYSkudG9Mb3dlckNhc2UoKSYmdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoITApfX0pLGYmJmUoZixiKSxhLndyYXBwZXJzLkhUTUxDb250ZW50RWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2QuY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIGMoYSxiKXtpZighKHRoaXMgaW5zdGFuY2VvZiBjKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJET00gb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi4iKTt2YXIgZT1mKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpKTtkLmNhbGwodGhpcyxlKSxnKGUsdGhpcyksdm9pZCAwIT09YSYmKGUud2lkdGg9YSksdm9pZCAwIT09YiYmKGUuaGVpZ2h0PWIpfXZhciBkPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW53cmFwLGc9YS5yZXdyYXAsaD13aW5kb3cuSFRNTEltYWdlRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxlKGgsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKSksYy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsYS53cmFwcGVycy5IVE1MSW1hZ2VFbGVtZW50PWIsYS53cmFwcGVycy5JbWFnZT1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj13aW5kb3cuSFRNTFNoYWRvd0VsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7fSksZiYmZShmLGIpLGEud3JhcHBlcnMuSFRNTFNoYWRvd0VsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtpZighYS5kZWZhdWx0VmlldylyZXR1cm4gYTt2YXIgYj1rLmdldChhKTtpZighYil7Zm9yKGI9YS5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIiIpO2IubGFzdENoaWxkOyliLnJlbW92ZUNoaWxkKGIubGFzdENoaWxkKTtrLnNldChhLGIpfXJldHVybiBifWZ1bmN0aW9uIGMoYSl7Zm9yKHZhciBjLGQ9YihhLm93bmVyRG9jdW1lbnQpLGU9aChkLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSk7Yz1hLmZpcnN0Q2hpbGQ7KWUuYXBwZW5kQ2hpbGQoYyk7cmV0dXJuIGV9ZnVuY3Rpb24gZChhKXtpZihlLmNhbGwodGhpcyxhKSwhbCl7dmFyIGI9YyhhKTtqLnNldCh0aGlzLGkoYikpfX12YXIgZT1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGY9YS5taXhpbixnPWEucmVnaXN0ZXJXcmFwcGVyLGg9YS51bndyYXAsaT1hLndyYXAsaj1uZXcgV2Vha01hcCxrPW5ldyBXZWFrTWFwLGw9d2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQ7ZC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksZihkLnByb3RvdHlwZSx7Z2V0IGNvbnRlbnQoKXtyZXR1cm4gbD9pKHRoaXMuaW1wbC5jb250ZW50KTpqLmdldCh0aGlzKX19KSxsJiZnKGwsZCksYS53cmFwcGVycy5IVE1MVGVtcGxhdGVFbGVtZW50PWR9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEucmVnaXN0ZXJXcmFwcGVyLGU9d2luZG93LkhUTUxNZWRpYUVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChlLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXVkaW8iKSksYS53cmFwcGVycy5IVE1MTWVkaWFFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7ZC5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24gYyhhKXtpZighKHRoaXMgaW5zdGFuY2VvZiBjKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJET00gb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi4iKTt2YXIgYj1mKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImF1ZGlvIikpO2QuY2FsbCh0aGlzLGIpLGcoYix0aGlzKSxiLnNldEF0dHJpYnV0ZSgicHJlbG9hZCIsImF1dG8iKSx2b2lkIDAhPT1hJiZiLnNldEF0dHJpYnV0ZSgic3JjIixhKX12YXIgZD1hLndyYXBwZXJzLkhUTUxNZWRpYUVsZW1lbnQsZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW53cmFwLGc9YS5yZXdyYXAsaD13aW5kb3cuSFRNTEF1ZGlvRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxlKGgsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhdWRpbyIpKSxjLnByb3RvdHlwZT1iLnByb3RvdHlwZSxhLndyYXBwZXJzLkhUTUxBdWRpb0VsZW1lbnQ9YixhLndyYXBwZXJzLkF1ZGlvPWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGEucmVwbGFjZSgvXHMrL2csIiAiKS50cmltKCl9ZnVuY3Rpb24gYyhhKXtlLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBkKGEsYixjLGYpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkRPTSBvYmplY3QgY29uc3RydWN0b3IgY2Fubm90IGJlIGNhbGxlZCBhcyBhIGZ1bmN0aW9uLiIpO3ZhciBnPWkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIikpO2UuY2FsbCh0aGlzLGcpLGgoZyx0aGlzKSx2b2lkIDAhPT1hJiYoZy50ZXh0PWEpLHZvaWQgMCE9PWImJmcuc2V0QXR0cmlidXRlKCJ2YWx1ZSIsYiksYz09PSEwJiZnLnNldEF0dHJpYnV0ZSgic2VsZWN0ZWQiLCIiKSxnLnNlbGVjdGVkPWY9PT0hMH12YXIgZT1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGY9YS5taXhpbixnPWEucmVnaXN0ZXJXcmFwcGVyLGg9YS5yZXdyYXAsaT1hLnVud3JhcCxqPWEud3JhcCxrPXdpbmRvdy5IVE1MT3B0aW9uRWxlbWVudDtjLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSxmKGMucHJvdG90eXBlLHtnZXQgdGV4dCgpe3JldHVybiBiKHRoaXMudGV4dENvbnRlbnQpfSxzZXQgdGV4dChhKXt0aGlzLnRleHRDb250ZW50PWIoU3RyaW5nKGEpKX0sZ2V0IGZvcm0oKXtyZXR1cm4gaihpKHRoaXMpLmZvcm0pfX0pLGcoayxjLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpKSxkLnByb3RvdHlwZT1jLnByb3RvdHlwZSxhLndyYXBwZXJzLkhUTUxPcHRpb25FbGVtZW50PWMsYS53cmFwcGVycy5PcHRpb249ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS51bndyYXAsZz1hLndyYXAsaD13aW5kb3cuSFRNTFNlbGVjdEVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7YWRkOmZ1bmN0aW9uKGEsYil7Im9iamVjdCI9PXR5cGVvZiBiJiYoYj1mKGIpKSxmKHRoaXMpLmFkZChmKGEpLGIpfSxyZW1vdmU6ZnVuY3Rpb24oYSl7Im9iamVjdCI9PXR5cGVvZiBhJiYoYT1mKGEpKSxmKHRoaXMpLnJlbW92ZShhKX0sZ2V0IGZvcm0oKXtyZXR1cm4gZyhmKHRoaXMpLmZvcm0pfX0pLGUoaCxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpKSxhLndyYXBwZXJzLkhUTUxTZWxlY3RFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW53cmFwLGc9YS53cmFwLGg9YS53cmFwSFRNTENvbGxlY3Rpb24saT13aW5kb3cuSFRNTFRhYmxlRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHtnZXQgY2FwdGlvbigpe3JldHVybiBnKGYodGhpcykuY2FwdGlvbil9LGNyZWF0ZUNhcHRpb246ZnVuY3Rpb24oKXtyZXR1cm4gZyhmKHRoaXMpLmNyZWF0ZUNhcHRpb24oKSl9LGdldCB0SGVhZCgpe3JldHVybiBnKGYodGhpcykudEhlYWQpfSxjcmVhdGVUSGVhZDpmdW5jdGlvbigpe3JldHVybiBnKGYodGhpcykuY3JlYXRlVEhlYWQoKSl9LGNyZWF0ZVRGb290OmZ1bmN0aW9uKCl7cmV0dXJuIGcoZih0aGlzKS5jcmVhdGVURm9vdCgpKX0sZ2V0IHRGb290KCl7cmV0dXJuIGcoZih0aGlzKS50Rm9vdCl9LGdldCB0Qm9kaWVzKCl7cmV0dXJuIGgoZih0aGlzKS50Qm9kaWVzKX0sY3JlYXRlVEJvZHk6ZnVuY3Rpb24oKXtyZXR1cm4gZyhmKHRoaXMpLmNyZWF0ZVRCb2R5KCkpfSxnZXQgcm93cygpe3JldHVybiBoKGYodGhpcykucm93cyl9LGluc2VydFJvdzpmdW5jdGlvbihhKXtyZXR1cm4gZyhmKHRoaXMpLmluc2VydFJvdyhhKSl9fSksZShpLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGFibGUiKSksYS53cmFwcGVycy5IVE1MVGFibGVFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEud3JhcEhUTUxDb2xsZWN0aW9uLGc9YS51bndyYXAsaD1hLndyYXAsaT13aW5kb3cuSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IHJvd3MoKXtyZXR1cm4gZihnKHRoaXMpLnJvd3MpfSxpbnNlcnRSb3c6ZnVuY3Rpb24oYSl7cmV0dXJuIGgoZyh0aGlzKS5pbnNlcnRSb3coYSkpfX0pLGUoaSxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRoZWFkIikpLGEud3JhcHBlcnMuSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwSFRNTENvbGxlY3Rpb24sZz1hLnVud3JhcCxoPWEud3JhcCxpPXdpbmRvdy5IVE1MVGFibGVSb3dFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldCBjZWxscygpe3JldHVybiBmKGcodGhpcykuY2VsbHMpfSxpbnNlcnRDZWxsOmZ1bmN0aW9uKGEpe3JldHVybiBoKGcodGhpcykuaW5zZXJ0Q2VsbChhKSl9fSksZShpLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidHIiKSksYS53cmFwcGVycy5IVE1MVGFibGVSb3dFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7c3dpdGNoKGEubG9jYWxOYW1lKXtjYXNlImNvbnRlbnQiOnJldHVybiBuZXcgYyhhKTtjYXNlInNoYWRvdyI6cmV0dXJuIG5ldyBlKGEpO2Nhc2UidGVtcGxhdGUiOnJldHVybiBuZXcgZihhKX1kLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxDb250ZW50RWxlbWVudCxkPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZT1hLndyYXBwZXJzLkhUTUxTaGFkb3dFbGVtZW50LGY9YS53cmFwcGVycy5IVE1MVGVtcGxhdGVFbGVtZW50LGc9KGEubWl4aW4sYS5yZWdpc3RlcldyYXBwZXIpLGg9d2luZG93LkhUTUxVbmtub3duRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxnKGgsYiksYS53cmFwcGVycy5IVE1MVW5rbm93bkVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7dmFyIGI9YS5yZWdpc3Rlck9iamVjdCxjPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoYywidGl0bGUiKSxlPWIoZCksZj1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZS5wcm90b3R5cGUpLmNvbnN0cnVjdG9yO2Eud3JhcHBlcnMuU1ZHRWxlbWVudD1mfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe20uY2FsbCh0aGlzLGEpfXZhciBjPWEubWl4aW4sZD1hLnJlZ2lzdGVyV3JhcHBlcixlPWEudW53cmFwLGY9YS53cmFwLGc9d2luZG93LlNWR1VzZUVsZW1lbnQsaD0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLGk9Zihkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoaCwiZyIpKSxqPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhoLCJ1c2UiKSxrPWkuY29uc3RydWN0b3IsbD1PYmplY3QuZ2V0UHJvdG90eXBlT2Yoay5wcm90b3R5cGUpLG09bC5jb25zdHJ1Y3RvcjtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGwpLCJpbnN0YW5jZVJvb3QiaW4gaiYmYyhiLnByb3RvdHlwZSx7Z2V0IGluc3RhbmNlUm9vdCgpe3JldHVybiBmKGUodGhpcykuaW5zdGFuY2VSb290KX0sZ2V0IGFuaW1hdGVkSW5zdGFuY2VSb290KCl7cmV0dXJuIGYoZSh0aGlzKS5hbmltYXRlZEluc3RhbmNlUm9vdCl9fSksZChnLGIsaiksYS53cmFwcGVycy5TVkdVc2VFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5FdmVudFRhcmdldCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEud3JhcCxnPXdpbmRvdy5TVkdFbGVtZW50SW5zdGFuY2U7ZyYmKGIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldCBjb3JyZXNwb25kaW5nRWxlbWVudCgpe3JldHVybiBmKHRoaXMuaW1wbC5jb3JyZXNwb25kaW5nRWxlbWVudCl9LGdldCBjb3JyZXNwb25kaW5nVXNlRWxlbWVudCgpe3JldHVybiBmKHRoaXMuaW1wbC5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCl9LGdldCBwYXJlbnROb2RlKCl7cmV0dXJuIGYodGhpcy5pbXBsLnBhcmVudE5vZGUpfSxnZXQgY2hpbGROb2Rlcygpe3Rocm93IG5ldyBFcnJvcigiTm90IGltcGxlbWVudGVkIil9LGdldCBmaXJzdENoaWxkKCl7cmV0dXJuIGYodGhpcy5pbXBsLmZpcnN0Q2hpbGQpfSxnZXQgbGFzdENoaWxkKCl7cmV0dXJuIGYodGhpcy5pbXBsLmxhc3RDaGlsZCl9LGdldCBwcmV2aW91c1NpYmxpbmcoKXtyZXR1cm4gZih0aGlzLmltcGwucHJldmlvdXNTaWJsaW5nKX0sZ2V0IG5leHRTaWJsaW5nKCl7cmV0dXJuIGYodGhpcy5pbXBsLm5leHRTaWJsaW5nKX19KSxlKGcsYiksYS53cmFwcGVycy5TVkdFbGVtZW50SW5zdGFuY2U9Yil9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7dGhpcy5pbXBsPWF9dmFyIGM9YS5taXhpbixkPWEucmVnaXN0ZXJXcmFwcGVyLGU9YS51bndyYXAsZj1hLnVud3JhcElmTmVlZGVkLGc9YS53cmFwLGg9d2luZG93LkNhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtjKGIucHJvdG90eXBlLHtnZXQgY2FudmFzKCl7cmV0dXJuIGcodGhpcy5pbXBsLmNhbnZhcyl9LGRyYXdJbWFnZTpmdW5jdGlvbigpe2FyZ3VtZW50c1swXT1mKGFyZ3VtZW50c1swXSksdGhpcy5pbXBsLmRyYXdJbWFnZS5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKX0sY3JlYXRlUGF0dGVybjpmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHNbMF09ZShhcmd1bWVudHNbMF0pLHRoaXMuaW1wbC5jcmVhdGVQYXR0ZXJuLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfX0pLGQoaCxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLmdldENvbnRleHQoIjJkIikpLGEud3JhcHBlcnMuQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEPWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7dGhpcy5pbXBsPWF9dmFyIGM9YS5taXhpbixkPWEucmVnaXN0ZXJXcmFwcGVyLGU9YS51bndyYXBJZk5lZWRlZCxmPWEud3JhcCxnPXdpbmRvdy5XZWJHTFJlbmRlcmluZ0NvbnRleHQ7aWYoZyl7YyhiLnByb3RvdHlwZSx7Z2V0IGNhbnZhcygpe3JldHVybiBmKHRoaXMuaW1wbC5jYW52YXMpfSx0ZXhJbWFnZTJEOmZ1bmN0aW9uKCl7YXJndW1lbnRzWzVdPWUoYXJndW1lbnRzWzVdKSx0aGlzLmltcGwudGV4SW1hZ2UyRC5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKX0sdGV4U3ViSW1hZ2UyRDpmdW5jdGlvbigpe2FyZ3VtZW50c1s2XT1lKGFyZ3VtZW50c1s2XSksdGhpcy5pbXBsLnRleFN1YkltYWdlMkQuYXBwbHkodGhpcy5pbXBsLGFyZ3VtZW50cyl9fSk7dmFyIGg9L1dlYktpdC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KT97ZHJhd2luZ0J1ZmZlckhlaWdodDpudWxsLGRyYXdpbmdCdWZmZXJXaWR0aDpudWxsfTp7fTtkKGcsYixoKSxhLndyYXBwZXJzLldlYkdMUmVuZGVyaW5nQ29udGV4dD1ifX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt0aGlzLmltcGw9YX12YXIgYz1hLnJlZ2lzdGVyV3JhcHBlcixkPWEudW53cmFwLGU9YS51bndyYXBJZk5lZWRlZCxmPWEud3JhcCxnPXdpbmRvdy5SYW5nZTtiLnByb3RvdHlwZT17Z2V0IHN0YXJ0Q29udGFpbmVyKCl7cmV0dXJuIGYodGhpcy5pbXBsLnN0YXJ0Q29udGFpbmVyKX0sZ2V0IGVuZENvbnRhaW5lcigpe3JldHVybiBmKHRoaXMuaW1wbC5lbmRDb250YWluZXIpfSxnZXQgY29tbW9uQW5jZXN0b3JDb250YWluZXIoKXtyZXR1cm4gZih0aGlzLmltcGwuY29tbW9uQW5jZXN0b3JDb250YWluZXIpfSxzZXRTdGFydDpmdW5jdGlvbihhLGIpe3RoaXMuaW1wbC5zZXRTdGFydChlKGEpLGIpfSxzZXRFbmQ6ZnVuY3Rpb24oYSxiKXt0aGlzLmltcGwuc2V0RW5kKGUoYSksYil9LHNldFN0YXJ0QmVmb3JlOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZXRTdGFydEJlZm9yZShlKGEpKX0sc2V0U3RhcnRBZnRlcjpmdW5jdGlvbihhKXt0aGlzLmltcGwuc2V0U3RhcnRBZnRlcihlKGEpKX0sc2V0RW5kQmVmb3JlOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZXRFbmRCZWZvcmUoZShhKSl9LHNldEVuZEFmdGVyOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZXRFbmRBZnRlcihlKGEpKX0sc2VsZWN0Tm9kZTpmdW5jdGlvbihhKXt0aGlzLmltcGwuc2VsZWN0Tm9kZShlKGEpKX0sc2VsZWN0Tm9kZUNvbnRlbnRzOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZWxlY3ROb2RlQ29udGVudHMoZShhKSl9LGNvbXBhcmVCb3VuZGFyeVBvaW50czpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmltcGwuY29tcGFyZUJvdW5kYXJ5UG9pbnRzKGEsZChiKSl9LGV4dHJhY3RDb250ZW50czpmdW5jdGlvbigpe3JldHVybiBmKHRoaXMuaW1wbC5leHRyYWN0Q29udGVudHMoKSl9LGNsb25lQ29udGVudHM6ZnVuY3Rpb24oKXtyZXR1cm4gZih0aGlzLmltcGwuY2xvbmVDb250ZW50cygpKX0saW5zZXJ0Tm9kZTpmdW5jdGlvbihhKXt0aGlzLmltcGwuaW5zZXJ0Tm9kZShlKGEpKX0sc3Vycm91bmRDb250ZW50czpmdW5jdGlvbihhKXt0aGlzLmltcGwuc3Vycm91bmRDb250ZW50cyhlKGEpKX0sY2xvbmVSYW5nZTpmdW5jdGlvbigpe3JldHVybiBmKHRoaXMuaW1wbC5jbG9uZVJhbmdlKCkpfSxpc1BvaW50SW5SYW5nZTpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmltcGwuaXNQb2ludEluUmFuZ2UoZShhKSxiKX0sY29tcGFyZVBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuaW1wbC5jb21wYXJlUG9pbnQoZShhKSxiKX0saW50ZXJzZWN0c05vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW1wbC5pbnRlcnNlY3RzTm9kZShlKGEpKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsLnRvU3RyaW5nKCl9fSxnLnByb3RvdHlwZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQmJihiLnByb3RvdHlwZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGYodGhpcy5pbXBsLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChhKSl9KSxjKHdpbmRvdy5SYW5nZSxiLGRvY3VtZW50LmNyZWF0ZVJhbmdlKCkpLGEud3JhcHBlcnMuUmFuZ2U9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7dmFyIGI9YS5HZXRFbGVtZW50c0J5SW50ZXJmYWNlLGM9YS5QYXJlbnROb2RlSW50ZXJmYWNlLGQ9YS5TZWxlY3RvcnNJbnRlcmZhY2UsZT1hLm1peGluLGY9YS5yZWdpc3Rlck9iamVjdCxnPWYoZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKTtlKGcucHJvdG90eXBlLGMpLGUoZy5wcm90b3R5cGUsZCksZShnLnByb3RvdHlwZSxiKTt2YXIgaD1mKGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiIpKTthLndyYXBwZXJzLkNvbW1lbnQ9aCxhLndyYXBwZXJzLkRvY3VtZW50RnJhZ21lbnQ9Z30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYj1rKGEuaW1wbC5vd25lckRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSk7Yy5jYWxsKHRoaXMsYiksaShiLHRoaXMpLHRoaXMudHJlZVNjb3BlXz1uZXcgZCh0aGlzLGcoYSkpO3ZhciBlPWEuc2hhZG93Um9vdDttLnNldCh0aGlzLGUpLGwuc2V0KHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5Eb2N1bWVudEZyYWdtZW50LGQ9YS5UcmVlU2NvcGUsZT1hLmVsZW1lbnRGcm9tUG9pbnQsZj1hLmdldElubmVySFRNTCxnPWEuZ2V0VHJlZVNjb3BlLGg9YS5taXhpbixpPWEucmV3cmFwLGo9YS5zZXRJbm5lckhUTUwsaz1hLnVud3JhcCxsPW5ldyBXZWFrTWFwLG09bmV3IFdlYWtNYXAsbj0vWyBcdFxuXHJcZl0vO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGgoYi5wcm90b3R5cGUse2dldCBpbm5lckhUTUwoKXtyZXR1cm4gZih0aGlzKX0sc2V0IGlubmVySFRNTChhKXtqKHRoaXMsYSksdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX0sZ2V0IG9sZGVyU2hhZG93Um9vdCgpe3JldHVybiBtLmdldCh0aGlzKXx8bnVsbH0sZ2V0IGhvc3QoKXtyZXR1cm4gbC5nZXQodGhpcyl8fG51bGx9LGludmFsaWRhdGVTaGFkb3dSZW5kZXJlcjpmdW5jdGlvbigpe3JldHVybiBsLmdldCh0aGlzKS5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX0sZWxlbWVudEZyb21Qb2ludDpmdW5jdGlvbihhLGIpe3JldHVybiBlKHRoaXMsdGhpcy5vd25lckRvY3VtZW50LGEsYil9LGdldEVsZW1lbnRCeUlkOmZ1bmN0aW9uKGEpe3JldHVybiBuLnRlc3QoYSk/bnVsbDp0aGlzLnF1ZXJ5U2VsZWN0b3IoJ1tpZD0iJythKyciXScpfX0pLGEud3JhcHBlcnMuU2hhZG93Um9vdD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2EucHJldmlvdXNTaWJsaW5nXz1hLnByZXZpb3VzU2libGluZyxhLm5leHRTaWJsaW5nXz1hLm5leHRTaWJsaW5nLGEucGFyZW50Tm9kZV89YS5wYXJlbnROb2RlfWZ1bmN0aW9uIGMoYSxjLGUpe3ZhciBmPUcoYSksZz1HKGMpLGg9ZT9HKGUpOm51bGw7aWYoZChjKSxiKGMpLGUpYS5maXJzdENoaWxkPT09ZSYmKGEuZmlyc3RDaGlsZF89ZSksZS5wcmV2aW91c1NpYmxpbmdfPWUucHJldmlvdXNTaWJsaW5nO2Vsc2V7YS5sYXN0Q2hpbGRfPWEubGFzdENoaWxkLGEubGFzdENoaWxkPT09YS5maXJzdENoaWxkJiYoYS5maXJzdENoaWxkXz1hLmZpcnN0Q2hpbGQpO3ZhciBpPUgoZi5sYXN0Q2hpbGQpO2kmJihpLm5leHRTaWJsaW5nXz1pLm5leHRTaWJsaW5nKX1mLmluc2VydEJlZm9yZShnLGgpfWZ1bmN0aW9uIGQoYSl7dmFyIGM9RyhhKSxkPWMucGFyZW50Tm9kZTtpZihkKXt2YXIgZT1IKGQpO2IoYSksYS5wcmV2aW91c1NpYmxpbmcmJihhLnByZXZpb3VzU2libGluZy5uZXh0U2libGluZ189YSksYS5uZXh0U2libGluZyYmKGEubmV4dFNpYmxpbmcucHJldmlvdXNTaWJsaW5nXz1hKSxlLmxhc3RDaGlsZD09PWEmJihlLmxhc3RDaGlsZF89YSksZS5maXJzdENoaWxkPT09YSYmKGUuZmlyc3RDaGlsZF89YSksZC5yZW1vdmVDaGlsZChjKX19ZnVuY3Rpb24gZShhLGIpe2coYikucHVzaChhKSx4KGEsYik7dmFyIGM9Si5nZXQoYSk7Y3x8Si5zZXQoYSxjPVtdKSxjLnB1c2goYil9ZnVuY3Rpb24gZihhKXtJLnNldChhLFtdKX1mdW5jdGlvbiBnKGEpe3ZhciBiPUkuZ2V0KGEpO3JldHVybiBifHxJLnNldChhLGI9W10pLGJ9ZnVuY3Rpb24gaChhKXtmb3IodmFyIGI9W10sYz0wLGQ9YS5maXJzdENoaWxkO2Q7ZD1kLm5leHRTaWJsaW5nKWJbYysrXT1kO3JldHVybiBifWZ1bmN0aW9uIGkoYSxiLGMpe2Zvcih2YXIgZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpaWYoYihkKSl7aWYoYyhkKT09PSExKXJldHVybn1lbHNlIGkoZCxiLGMpfWZ1bmN0aW9uIGooYSxiKXt2YXIgYz1iLmdldEF0dHJpYnV0ZSgic2VsZWN0Iik7aWYoIWMpcmV0dXJuITA7aWYoYz1jLnRyaW0oKSwhYylyZXR1cm4hMDtpZighKGEgaW5zdGFuY2VvZiB6KSlyZXR1cm4hMTtpZigiKiI9PT1jfHxjPT09YS5sb2NhbE5hbWUpcmV0dXJuITA7aWYoIU0udGVzdChjKSlyZXR1cm4hMTtpZigiOiI9PT1jWzBdJiYhTi50ZXN0KGMpKXJldHVybiExO3RyeXtyZXR1cm4gYS5tYXRjaGVzKGMpfWNhdGNoKGQpe3JldHVybiExfX1mdW5jdGlvbiBrKCl7Zm9yKHZhciBhPTA7YTxQLmxlbmd0aDthKyspe3ZhciBiPVBbYV0sYz1iLnBhcmVudFJlbmRlcmVyO2MmJmMuZGlydHl8fGIucmVuZGVyKCl9UD1bXX1mdW5jdGlvbiBsKCl7eT1udWxsLGsoKX1mdW5jdGlvbiBtKGEpe3ZhciBiPUwuZ2V0KGEpO3JldHVybiBifHwoYj1uZXcgcShhKSxMLnNldChhLGIpKSxifWZ1bmN0aW9uIG4oYSl7dmFyIGI9RShhKS5yb290O3JldHVybiBiIGluc3RhbmNlb2YgRD9iOm51bGx9ZnVuY3Rpb24gbyhhKXtyZXR1cm4gbShhLmhvc3QpfWZ1bmN0aW9uIHAoYSl7dGhpcy5za2lwPSExLHRoaXMubm9kZT1hLHRoaXMuY2hpbGROb2Rlcz1bXX1mdW5jdGlvbiBxKGEpe3RoaXMuaG9zdD1hLHRoaXMuZGlydHk9ITEsdGhpcy5pbnZhbGlkYXRlQXR0cmlidXRlcygpLHRoaXMuYXNzb2NpYXRlTm9kZShhKX1mdW5jdGlvbiByKGEpe3JldHVybiBhIGluc3RhbmNlb2YgQX1mdW5jdGlvbiBzKGEpe3JldHVybiBhIGluc3RhbmNlb2YgQX1mdW5jdGlvbiB0KGEpe3JldHVybiBhIGluc3RhbmNlb2YgQn1mdW5jdGlvbiB1KGEpe3JldHVybiBhIGluc3RhbmNlb2YgQn1mdW5jdGlvbiB2KGEpe3JldHVybiBhLnNoYWRvd1Jvb3QKfWZ1bmN0aW9uIHcoYSl7Zm9yKHZhciBiPVtdLGM9YS5zaGFkb3dSb290O2M7Yz1jLm9sZGVyU2hhZG93Um9vdCliLnB1c2goYyk7cmV0dXJuIGJ9ZnVuY3Rpb24geChhLGIpe0suc2V0KGEsYil9dmFyIHksej1hLndyYXBwZXJzLkVsZW1lbnQsQT1hLndyYXBwZXJzLkhUTUxDb250ZW50RWxlbWVudCxCPWEud3JhcHBlcnMuSFRNTFNoYWRvd0VsZW1lbnQsQz1hLndyYXBwZXJzLk5vZGUsRD1hLndyYXBwZXJzLlNoYWRvd1Jvb3QsRT0oYS5hc3NlcnQsYS5nZXRUcmVlU2NvcGUpLEY9KGEubWl4aW4sYS5vbmVPZiksRz1hLnVud3JhcCxIPWEud3JhcCxJPW5ldyBXZWFrTWFwLEo9bmV3IFdlYWtNYXAsSz1uZXcgV2Vha01hcCxMPW5ldyBXZWFrTWFwLE09L15bKi46I1thLXpBLVpffF0vLE49bmV3IFJlZ0V4cCgiXjooIitbImxpbmsiLCJ2aXNpdGVkIiwidGFyZ2V0IiwiZW5hYmxlZCIsImRpc2FibGVkIiwiY2hlY2tlZCIsImluZGV0ZXJtaW5hdGUiLCJudGgtY2hpbGQiLCJudGgtbGFzdC1jaGlsZCIsIm50aC1vZi10eXBlIiwibnRoLWxhc3Qtb2YtdHlwZSIsImZpcnN0LWNoaWxkIiwibGFzdC1jaGlsZCIsImZpcnN0LW9mLXR5cGUiLCJsYXN0LW9mLXR5cGUiLCJvbmx5LW9mLXR5cGUiXS5qb2luKCJ8IikrIikiKSxPPUYod2luZG93LFsicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic2V0VGltZW91dCJdKSxQPVtdLFE9bmV3IEFycmF5U3BsaWNlO1EuZXF1YWxzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIEcoYS5ub2RlKT09PWJ9LHAucHJvdG90eXBlPXthcHBlbmQ6ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IHAoYSk7cmV0dXJuIHRoaXMuY2hpbGROb2Rlcy5wdXNoKGIpLGJ9LHN5bmM6ZnVuY3Rpb24oYSl7aWYoIXRoaXMuc2tpcCl7Zm9yKHZhciBiPXRoaXMubm9kZSxlPXRoaXMuY2hpbGROb2RlcyxmPWgoRyhiKSksZz1hfHxuZXcgV2Vha01hcCxpPVEuY2FsY3VsYXRlU3BsaWNlcyhlLGYpLGo9MCxrPTAsbD0wLG09MDttPGkubGVuZ3RoO20rKyl7Zm9yKHZhciBuPWlbbV07bDxuLmluZGV4O2wrKylrKyssZVtqKytdLnN5bmMoZyk7Zm9yKHZhciBvPW4ucmVtb3ZlZC5sZW5ndGgscD0wO28+cDtwKyspe3ZhciBxPUgoZltrKytdKTtnLmdldChxKXx8ZChxKX1mb3IodmFyIHI9bi5hZGRlZENvdW50LHM9ZltrXSYmSChmW2tdKSxwPTA7cj5wO3ArKyl7dmFyIHQ9ZVtqKytdLHU9dC5ub2RlO2MoYix1LHMpLGcuc2V0KHUsITApLHQuc3luYyhnKX1sKz1yfWZvcih2YXIgbT1sO208ZS5sZW5ndGg7bSsrKWVbbV0uc3luYyhnKX19fSxxLnByb3RvdHlwZT17cmVuZGVyOmZ1bmN0aW9uKGEpe2lmKHRoaXMuZGlydHkpe3RoaXMuaW52YWxpZGF0ZUF0dHJpYnV0ZXMoKSx0aGlzLnRyZWVDb21wb3NpdGlvbigpO3ZhciBiPXRoaXMuaG9zdCxjPWIuc2hhZG93Um9vdDt0aGlzLmFzc29jaWF0ZU5vZGUoYik7Zm9yKHZhciBkPSFlLGU9YXx8bmV3IHAoYiksZj1jLmZpcnN0Q2hpbGQ7ZjtmPWYubmV4dFNpYmxpbmcpdGhpcy5yZW5kZXJOb2RlKGMsZSxmLCExKTtkJiZlLnN5bmMoKSx0aGlzLmRpcnR5PSExfX0sZ2V0IHBhcmVudFJlbmRlcmVyKCl7cmV0dXJuIEUodGhpcy5ob3N0KS5yZW5kZXJlcn0saW52YWxpZGF0ZTpmdW5jdGlvbigpe2lmKCF0aGlzLmRpcnR5KXtpZih0aGlzLmRpcnR5PSEwLFAucHVzaCh0aGlzKSx5KXJldHVybjt5PXdpbmRvd1tPXShsLDApfX0scmVuZGVyTm9kZTpmdW5jdGlvbihhLGIsYyxkKXtpZih2KGMpKXtiPWIuYXBwZW5kKGMpO3ZhciBlPW0oYyk7ZS5kaXJ0eT0hMCxlLnJlbmRlcihiKX1lbHNlIHIoYyk/dGhpcy5yZW5kZXJJbnNlcnRpb25Qb2ludChhLGIsYyxkKTp0KGMpP3RoaXMucmVuZGVyU2hhZG93SW5zZXJ0aW9uUG9pbnQoYSxiLGMpOnRoaXMucmVuZGVyQXNBbnlEb21UcmVlKGEsYixjLGQpfSxyZW5kZXJBc0FueURvbVRyZWU6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoYj1iLmFwcGVuZChjKSx2KGMpKXt2YXIgZT1tKGMpO2Iuc2tpcD0hZS5kaXJ0eSxlLnJlbmRlcihiKX1lbHNlIGZvcih2YXIgZj1jLmZpcnN0Q2hpbGQ7ZjtmPWYubmV4dFNpYmxpbmcpdGhpcy5yZW5kZXJOb2RlKGEsYixmLGQpfSxyZW5kZXJJbnNlcnRpb25Qb2ludDpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1nKGMpO2lmKGUubGVuZ3RoKXt0aGlzLmFzc29jaWF0ZU5vZGUoYyk7Zm9yKHZhciBmPTA7ZjxlLmxlbmd0aDtmKyspe3ZhciBoPWVbZl07cihoKSYmZD90aGlzLnJlbmRlckluc2VydGlvblBvaW50KGEsYixoLGQpOnRoaXMucmVuZGVyQXNBbnlEb21UcmVlKGEsYixoLGQpfX1lbHNlIHRoaXMucmVuZGVyRmFsbGJhY2tDb250ZW50KGEsYixjKTt0aGlzLmFzc29jaWF0ZU5vZGUoYy5wYXJlbnROb2RlKX0scmVuZGVyU2hhZG93SW5zZXJ0aW9uUG9pbnQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEub2xkZXJTaGFkb3dSb290O2lmKGQpe3goZCxjKSx0aGlzLmFzc29jaWF0ZU5vZGUoYy5wYXJlbnROb2RlKTtmb3IodmFyIGU9ZC5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKXRoaXMucmVuZGVyTm9kZShkLGIsZSwhMCl9ZWxzZSB0aGlzLnJlbmRlckZhbGxiYWNrQ29udGVudChhLGIsYyl9LHJlbmRlckZhbGxiYWNrQ29udGVudDpmdW5jdGlvbihhLGIsYyl7dGhpcy5hc3NvY2lhdGVOb2RlKGMpLHRoaXMuYXNzb2NpYXRlTm9kZShjLnBhcmVudE5vZGUpO2Zvcih2YXIgZD1jLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpdGhpcy5yZW5kZXJBc0FueURvbVRyZWUoYSxiLGQsITEpfSxpbnZhbGlkYXRlQXR0cmlidXRlczpmdW5jdGlvbigpe3RoaXMuYXR0cmlidXRlcz1PYmplY3QuY3JlYXRlKG51bGwpfSx1cGRhdGVEZXBlbmRlbnRBdHRyaWJ1dGVzOmZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiPXRoaXMuYXR0cmlidXRlczsvXC5cdysvLnRlc3QoYSkmJihiWyJjbGFzcyJdPSEwKSwvI1x3Ky8udGVzdChhKSYmKGIuaWQ9ITApLGEucmVwbGFjZSgvXFtccyooW15ccz1cfH5cXV0rKS9nLGZ1bmN0aW9uKGEsYyl7YltjXT0hMH0pfX0sZGVwZW5kc09uQXR0cmlidXRlOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmF0dHJpYnV0ZXNbYV19LGRpc3RyaWJ1dGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2koYSxzLGZ1bmN0aW9uKGEpe2YoYSksYy51cGRhdGVEZXBlbmRlbnRBdHRyaWJ1dGVzKGEuZ2V0QXR0cmlidXRlKCJzZWxlY3QiKSk7Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBnPWJbZF07dm9pZCAwIT09ZyYmaihnLGEpJiYoZShnLGEpLGJbZF09dm9pZCAwKX19KX0sdHJlZUNvbXBvc2l0aW9uOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPXRoaXMuaG9zdCxiPWEuc2hhZG93Um9vdCxjPVtdLGQ9YS5maXJzdENoaWxkO2Q7ZD1kLm5leHRTaWJsaW5nKWlmKHIoZCkpe3ZhciBlPWcoZCk7ZSYmZS5sZW5ndGh8fChlPWgoZCkpLGMucHVzaC5hcHBseShjLGUpfWVsc2UgYy5wdXNoKGQpO2Zvcih2YXIgZixqO2I7KXtpZihmPXZvaWQgMCxpKGIsdSxmdW5jdGlvbihhKXtyZXR1cm4gZj1hLCExfSksaj1mLHRoaXMuZGlzdHJpYnV0ZShiLGMpLGope3ZhciBrPWIub2xkZXJTaGFkb3dSb290O2lmKGspe2I9ayx4KGIsaik7Y29udGludWV9YnJlYWt9YnJlYWt9fSxhc3NvY2lhdGVOb2RlOmZ1bmN0aW9uKGEpe2EuaW1wbC5wb2x5bWVyU2hhZG93UmVuZGVyZXJfPXRoaXN9fSxDLnByb3RvdHlwZS5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXI9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmltcGwucG9seW1lclNoYWRvd1JlbmRlcmVyXztyZXR1cm4gYT8oYS5pbnZhbGlkYXRlKCksITApOiExfSxBLnByb3RvdHlwZS5nZXREaXN0cmlidXRlZE5vZGVzPWZ1bmN0aW9uKCl7cmV0dXJuIGsoKSxnKHRoaXMpfSxCLnByb3RvdHlwZS5ub2RlSXNJbnNlcnRlZF89QS5wcm90b3R5cGUubm9kZUlzSW5zZXJ0ZWRfPWZ1bmN0aW9uKCl7dGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKTt2YXIgYSxiPW4odGhpcyk7YiYmKGE9byhiKSksdGhpcy5pbXBsLnBvbHltZXJTaGFkb3dSZW5kZXJlcl89YSxhJiZhLmludmFsaWRhdGUoKX0sYS5ldmVudFBhcmVudHNUYWJsZT1KLGEuZ2V0UmVuZGVyZXJGb3JIb3N0PW0sYS5nZXRTaGFkb3dUcmVlcz13LGEuaW5zZXJ0aW9uUGFyZW50VGFibGU9SyxhLnJlbmRlckFsbFBlbmRpbmc9ayxhLnZpc3VhbD17aW5zZXJ0QmVmb3JlOmMscmVtb3ZlOmR9fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGIpe2lmKHdpbmRvd1tiXSl7ZCghYS53cmFwcGVyc1tiXSk7dmFyIGk9ZnVuY3Rpb24oYSl7Yy5jYWxsKHRoaXMsYSl9O2kucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGUoaS5wcm90b3R5cGUse2dldCBmb3JtKCl7cmV0dXJuIGgoZyh0aGlzKS5mb3JtKX19KSxmKHdpbmRvd1tiXSxpLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYi5zbGljZSg0LC03KSkpLGEud3JhcHBlcnNbYl09aX19dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEuYXNzZXJ0LGU9YS5taXhpbixmPWEucmVnaXN0ZXJXcmFwcGVyLGc9YS51bndyYXAsaD1hLndyYXAsaT1bIkhUTUxCdXR0b25FbGVtZW50IiwiSFRNTEZpZWxkU2V0RWxlbWVudCIsIkhUTUxJbnB1dEVsZW1lbnQiLCJIVE1MS2V5Z2VuRWxlbWVudCIsIkhUTUxMYWJlbEVsZW1lbnQiLCJIVE1MTGVnZW5kRWxlbWVudCIsIkhUTUxPYmplY3RFbGVtZW50IiwiSFRNTE91dHB1dEVsZW1lbnQiLCJIVE1MVGV4dEFyZWFFbGVtZW50Il07aS5mb3JFYWNoKGIpfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3RoaXMuaW1wbD1hfXt2YXIgYz1hLnJlZ2lzdGVyV3JhcHBlcixkPWEudW53cmFwLGU9YS51bndyYXBJZk5lZWRlZCxmPWEud3JhcDt3aW5kb3cuU2VsZWN0aW9ufWIucHJvdG90eXBlPXtnZXQgYW5jaG9yTm9kZSgpe3JldHVybiBmKHRoaXMuaW1wbC5hbmNob3JOb2RlKX0sZ2V0IGZvY3VzTm9kZSgpe3JldHVybiBmKHRoaXMuaW1wbC5mb2N1c05vZGUpfSxhZGRSYW5nZTpmdW5jdGlvbihhKXt0aGlzLmltcGwuYWRkUmFuZ2UoZChhKSl9LGNvbGxhcHNlOmZ1bmN0aW9uKGEsYil7dGhpcy5pbXBsLmNvbGxhcHNlKGUoYSksYil9LGNvbnRhaW5zTm9kZTpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmltcGwuY29udGFpbnNOb2RlKGUoYSksYil9LGV4dGVuZDpmdW5jdGlvbihhLGIpe3RoaXMuaW1wbC5leHRlbmQoZShhKSxiKX0sZ2V0UmFuZ2VBdDpmdW5jdGlvbihhKXtyZXR1cm4gZih0aGlzLmltcGwuZ2V0UmFuZ2VBdChhKSl9LHJlbW92ZVJhbmdlOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5yZW1vdmVSYW5nZShkKGEpKX0sc2VsZWN0QWxsQ2hpbGRyZW46ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnNlbGVjdEFsbENoaWxkcmVuKGUoYSkpfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmltcGwudG9TdHJpbmcoKX19LGMod2luZG93LlNlbGVjdGlvbixiLHdpbmRvdy5nZXRTZWxlY3Rpb24oKSksYS53cmFwcGVycy5TZWxlY3Rpb249Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtrLmNhbGwodGhpcyxhKSx0aGlzLnRyZWVTY29wZV89bmV3IHAodGhpcyxudWxsKX1mdW5jdGlvbiBjKGEpe3ZhciBjPWRvY3VtZW50W2FdO2IucHJvdG90eXBlW2FdPWZ1bmN0aW9uKCl7cmV0dXJuIEEoYy5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKSl9fWZ1bmN0aW9uIGQoYSxiKXtELmNhbGwoYi5pbXBsLHooYSkpLGUoYSxiKX1mdW5jdGlvbiBlKGEsYil7YS5zaGFkb3dSb290JiZiLmFkb3B0Tm9kZShhLnNoYWRvd1Jvb3QpLGEgaW5zdGFuY2VvZiBvJiZmKGEsYik7Zm9yKHZhciBjPWEuZmlyc3RDaGlsZDtjO2M9Yy5uZXh0U2libGluZyllKGMsYil9ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEub2xkZXJTaGFkb3dSb290O2MmJmIuYWRvcHROb2RlKGMpfWZ1bmN0aW9uIGcoYSl7dGhpcy5pbXBsPWF9ZnVuY3Rpb24gaChhLGIpe3ZhciBjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uW2JdO2EucHJvdG90eXBlW2JdPWZ1bmN0aW9uKCl7cmV0dXJuIEEoYy5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKSl9fWZ1bmN0aW9uIGkoYSxiKXt2YXIgYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbltiXTthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3JldHVybiBjLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfX12YXIgaj1hLkdldEVsZW1lbnRzQnlJbnRlcmZhY2Usaz1hLndyYXBwZXJzLk5vZGUsbD1hLlBhcmVudE5vZGVJbnRlcmZhY2UsbT1hLndyYXBwZXJzLlNlbGVjdGlvbixuPWEuU2VsZWN0b3JzSW50ZXJmYWNlLG89YS53cmFwcGVycy5TaGFkb3dSb290LHA9YS5UcmVlU2NvcGUscT1hLmNsb25lTm9kZSxyPWEuZGVmaW5lV3JhcEdldHRlcixzPWEuZWxlbWVudEZyb21Qb2ludCx0PWEuZm9yd2FyZE1ldGhvZHNUb1dyYXBwZXIsdT1hLm1hdGNoZXNOYW1lcyx2PWEubWl4aW4sdz1hLnJlZ2lzdGVyV3JhcHBlcix4PWEucmVuZGVyQWxsUGVuZGluZyx5PWEucmV3cmFwLHo9YS51bndyYXAsQT1hLndyYXAsQj1hLndyYXBFdmVudFRhcmdldE1ldGhvZHMsQz0oYS53cmFwTm9kZUxpc3QsbmV3IFdlYWtNYXApO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoay5wcm90b3R5cGUpLHIoYiwiZG9jdW1lbnRFbGVtZW50IikscihiLCJib2R5IikscihiLCJoZWFkIiksWyJjcmVhdGVDb21tZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVFdmVudCIsImNyZWF0ZUV2ZW50TlMiLCJjcmVhdGVSYW5nZSIsImNyZWF0ZVRleHROb2RlIiwiZ2V0RWxlbWVudEJ5SWQiXS5mb3JFYWNoKGMpO3ZhciBEPWRvY3VtZW50LmFkb3B0Tm9kZSxFPWRvY3VtZW50LmdldFNlbGVjdGlvbjtpZih2KGIucHJvdG90eXBlLHthZG9wdE5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucGFyZW50Tm9kZSYmYS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGEpLGQoYSx0aGlzKSxhfSxlbGVtZW50RnJvbVBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHModGhpcyx0aGlzLGEsYil9LGltcG9ydE5vZGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcShhLGIsdGhpcy5pbXBsKX0sZ2V0U2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHgoKSxuZXcgbShFLmNhbGwoeih0aGlzKSkpfX0pLGRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudCl7dmFyIEY9ZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50O2IucHJvdG90eXBlLnJlZ2lzdGVyRWxlbWVudD1mdW5jdGlvbihiLGMpe2Z1bmN0aW9uIGQoYSl7cmV0dXJuIGE/dm9pZCh0aGlzLmltcGw9YSk6Yy5leHRlbmRzP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYy5leHRlbmRzLGIpOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYil9dmFyIGU9Yy5wcm90b3R5cGU7aWYoYS5uYXRpdmVQcm90b3R5cGVUYWJsZS5nZXQoZSkpdGhyb3cgbmV3IEVycm9yKCJOb3RTdXBwb3J0ZWRFcnJvciIpO2Zvcih2YXIgZixnPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKSxoPVtdO2cmJiEoZj1hLm5hdGl2ZVByb3RvdHlwZVRhYmxlLmdldChnKSk7KWgucHVzaChnKSxnPU9iamVjdC5nZXRQcm90b3R5cGVPZihnKTtpZighZil0aHJvdyBuZXcgRXJyb3IoIk5vdFN1cHBvcnRlZEVycm9yIik7Zm9yKHZhciBpPU9iamVjdC5jcmVhdGUoZiksaj1oLmxlbmd0aC0xO2o+PTA7ai0tKWk9T2JqZWN0LmNyZWF0ZShpKTtbImNyZWF0ZWRDYWxsYmFjayIsImF0dGFjaGVkQ2FsbGJhY2siLCJkZXRhY2hlZENhbGxiYWNrIiwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1lW2FdO2ImJihpW2FdPWZ1bmN0aW9uKCl7QSh0aGlzKWluc3RhbmNlb2YgZHx8eSh0aGlzKSxiLmFwcGx5KEEodGhpcyksYXJndW1lbnRzKX0pfSk7dmFyIGs9e3Byb3RvdHlwZTppfTtjLmV4dGVuZHMmJihrLmV4dGVuZHM9Yy5leHRlbmRzKSxkLnByb3RvdHlwZT1lLGQucHJvdG90eXBlLmNvbnN0cnVjdG9yPWQsYS5jb25zdHJ1Y3RvclRhYmxlLnNldChpLGQpLGEubmF0aXZlUHJvdG90eXBlVGFibGUuc2V0KGUsaSk7Ri5jYWxsKHoodGhpcyksYixrKTtyZXR1cm4gZH0sdChbd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50XSxbInJlZ2lzdGVyRWxlbWVudCJdKX10KFt3aW5kb3cuSFRNTEJvZHlFbGVtZW50LHdpbmRvdy5IVE1MRG9jdW1lbnR8fHdpbmRvdy5Eb2N1bWVudCx3aW5kb3cuSFRNTEhlYWRFbGVtZW50LHdpbmRvdy5IVE1MSHRtbEVsZW1lbnRdLFsiYXBwZW5kQ2hpbGQiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImNvbnRhaW5zIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWVOUyIsImluc2VydEJlZm9yZSIsInF1ZXJ5U2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVtb3ZlQ2hpbGQiLCJyZXBsYWNlQ2hpbGQiXS5jb25jYXQodSkpLHQoW3dpbmRvdy5IVE1MRG9jdW1lbnR8fHdpbmRvdy5Eb2N1bWVudF0sWyJhZG9wdE5vZGUiLCJpbXBvcnROb2RlIiwiY29udGFpbnMiLCJjcmVhdGVDb21tZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVFdmVudCIsImNyZWF0ZUV2ZW50TlMiLCJjcmVhdGVSYW5nZSIsImNyZWF0ZVRleHROb2RlIiwiZWxlbWVudEZyb21Qb2ludCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0U2VsZWN0aW9uIl0pLHYoYi5wcm90b3R5cGUsaiksdihiLnByb3RvdHlwZSxsKSx2KGIucHJvdG90eXBlLG4pLHYoYi5wcm90b3R5cGUse2dldCBpbXBsZW1lbnRhdGlvbigpe3ZhciBhPUMuZ2V0KHRoaXMpO3JldHVybiBhP2E6KGE9bmV3IGcoeih0aGlzKS5pbXBsZW1lbnRhdGlvbiksQy5zZXQodGhpcyxhKSxhKX19KSx3KHdpbmRvdy5Eb2N1bWVudCxiLGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIikpLHdpbmRvdy5IVE1MRG9jdW1lbnQmJncod2luZG93LkhUTUxEb2N1bWVudCxiKSxCKFt3aW5kb3cuSFRNTEJvZHlFbGVtZW50LHdpbmRvdy5IVE1MRG9jdW1lbnR8fHdpbmRvdy5Eb2N1bWVudCx3aW5kb3cuSFRNTEhlYWRFbGVtZW50XSksaChnLCJjcmVhdGVEb2N1bWVudFR5cGUiKSxoKGcsImNyZWF0ZURvY3VtZW50IiksaChnLCJjcmVhdGVIVE1MRG9jdW1lbnQiKSxpKGcsImhhc0ZlYXR1cmUiKSx3KHdpbmRvdy5ET01JbXBsZW1lbnRhdGlvbixnKSx0KFt3aW5kb3cuRE9NSW1wbGVtZW50YXRpb25dLFsiY3JlYXRlRG9jdW1lbnRUeXBlIiwiY3JlYXRlRG9jdW1lbnQiLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJoYXNGZWF0dXJlIl0pLGEuYWRvcHROb2RlTm9SZW1vdmU9ZCxhLndyYXBwZXJzLkRPTUltcGxlbWVudGF0aW9uPWcsYS53cmFwcGVycy5Eb2N1bWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuRXZlbnRUYXJnZXQsZD1hLndyYXBwZXJzLlNlbGVjdGlvbixlPWEubWl4aW4sZj1hLnJlZ2lzdGVyV3JhcHBlcixnPWEucmVuZGVyQWxsUGVuZGluZyxoPWEudW53cmFwLGk9YS51bndyYXBJZk5lZWRlZCxqPWEud3JhcCxrPXdpbmRvdy5XaW5kb3csbD13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSxtPXdpbmRvdy5nZXRTZWxlY3Rpb247Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksay5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRTdHlsZT1mdW5jdGlvbihhLGIpe3JldHVybiBqKHRoaXN8fHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZShpKGEpLGIpfSxrLnByb3RvdHlwZS5nZXRTZWxlY3Rpb249ZnVuY3Rpb24oKXtyZXR1cm4gaih0aGlzfHx3aW5kb3cpLmdldFNlbGVjdGlvbigpfSxkZWxldGUgd2luZG93LmdldENvbXB1dGVkU3R5bGUsZGVsZXRlIHdpbmRvdy5nZXRTZWxlY3Rpb24sWyJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRpc3BhdGNoRXZlbnQiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2sucHJvdG90eXBlW2FdPWZ1bmN0aW9uKCl7dmFyIGI9aih0aGlzfHx3aW5kb3cpO3JldHVybiBiW2FdLmFwcGx5KGIsYXJndW1lbnRzKX0sZGVsZXRlIHdpbmRvd1thXX0pLGUoYi5wcm90b3R5cGUse2dldENvbXB1dGVkU3R5bGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZygpLGwuY2FsbChoKHRoaXMpLGkoYSksYil9LGdldFNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiBnKCksbmV3IGQobS5jYWxsKGgodGhpcykpKX19KSxmKGssYiksYS53cmFwcGVycy5XaW5kb3c9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7dmFyIGI9YS51bndyYXAsYz13aW5kb3cuRGF0YVRyYW5zZmVyfHx3aW5kb3cuQ2xpcGJvYXJkLGQ9Yy5wcm90b3R5cGUuc2V0RHJhZ0ltYWdlO2MucHJvdG90eXBlLnNldERyYWdJbWFnZT1mdW5jdGlvbihhLGMsZSl7ZC5jYWxsKHRoaXMsYihhKSxjLGUpfX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYj1jW2FdLGQ9d2luZG93W2JdO2lmKGQpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYSksZj1lLmNvbnN0cnVjdG9yO3dpbmRvd1tiXT1mfX12YXIgYz0oYS5pc1dyYXBwZXJGb3Ise2E6IkhUTUxBbmNob3JFbGVtZW50IixhcmVhOiJIVE1MQXJlYUVsZW1lbnQiLGF1ZGlvOiJIVE1MQXVkaW9FbGVtZW50IixiYXNlOiJIVE1MQmFzZUVsZW1lbnQiLGJvZHk6IkhUTUxCb2R5RWxlbWVudCIsYnI6IkhUTUxCUkVsZW1lbnQiLGJ1dHRvbjoiSFRNTEJ1dHRvbkVsZW1lbnQiLGNhbnZhczoiSFRNTENhbnZhc0VsZW1lbnQiLGNhcHRpb246IkhUTUxUYWJsZUNhcHRpb25FbGVtZW50Iixjb2w6IkhUTUxUYWJsZUNvbEVsZW1lbnQiLGNvbnRlbnQ6IkhUTUxDb250ZW50RWxlbWVudCIsZGF0YToiSFRNTERhdGFFbGVtZW50IixkYXRhbGlzdDoiSFRNTERhdGFMaXN0RWxlbWVudCIsZGVsOiJIVE1MTW9kRWxlbWVudCIsZGlyOiJIVE1MRGlyZWN0b3J5RWxlbWVudCIsZGl2OiJIVE1MRGl2RWxlbWVudCIsZGw6IkhUTUxETGlzdEVsZW1lbnQiLGVtYmVkOiJIVE1MRW1iZWRFbGVtZW50IixmaWVsZHNldDoiSFRNTEZpZWxkU2V0RWxlbWVudCIsZm9udDoiSFRNTEZvbnRFbGVtZW50Iixmb3JtOiJIVE1MRm9ybUVsZW1lbnQiLGZyYW1lOiJIVE1MRnJhbWVFbGVtZW50IixmcmFtZXNldDoiSFRNTEZyYW1lU2V0RWxlbWVudCIsaDE6IkhUTUxIZWFkaW5nRWxlbWVudCIsaGVhZDoiSFRNTEhlYWRFbGVtZW50IixocjoiSFRNTEhSRWxlbWVudCIsaHRtbDoiSFRNTEh0bWxFbGVtZW50IixpZnJhbWU6IkhUTUxJRnJhbWVFbGVtZW50IixpbWc6IkhUTUxJbWFnZUVsZW1lbnQiLGlucHV0OiJIVE1MSW5wdXRFbGVtZW50IixrZXlnZW46IkhUTUxLZXlnZW5FbGVtZW50IixsYWJlbDoiSFRNTExhYmVsRWxlbWVudCIsbGVnZW5kOiJIVE1MTGVnZW5kRWxlbWVudCIsbGk6IkhUTUxMSUVsZW1lbnQiLGxpbms6IkhUTUxMaW5rRWxlbWVudCIsbWFwOiJIVE1MTWFwRWxlbWVudCIsbWFycXVlZToiSFRNTE1hcnF1ZWVFbGVtZW50IixtZW51OiJIVE1MTWVudUVsZW1lbnQiLG1lbnVpdGVtOiJIVE1MTWVudUl0ZW1FbGVtZW50IixtZXRhOiJIVE1MTWV0YUVsZW1lbnQiLG1ldGVyOiJIVE1MTWV0ZXJFbGVtZW50IixvYmplY3Q6IkhUTUxPYmplY3RFbGVtZW50IixvbDoiSFRNTE9MaXN0RWxlbWVudCIsb3B0Z3JvdXA6IkhUTUxPcHRHcm91cEVsZW1lbnQiLG9wdGlvbjoiSFRNTE9wdGlvbkVsZW1lbnQiLG91dHB1dDoiSFRNTE91dHB1dEVsZW1lbnQiLHA6IkhUTUxQYXJhZ3JhcGhFbGVtZW50IixwYXJhbToiSFRNTFBhcmFtRWxlbWVudCIscHJlOiJIVE1MUHJlRWxlbWVudCIscHJvZ3Jlc3M6IkhUTUxQcm9ncmVzc0VsZW1lbnQiLHE6IkhUTUxRdW90ZUVsZW1lbnQiLHNjcmlwdDoiSFRNTFNjcmlwdEVsZW1lbnQiLHNlbGVjdDoiSFRNTFNlbGVjdEVsZW1lbnQiLHNoYWRvdzoiSFRNTFNoYWRvd0VsZW1lbnQiLHNvdXJjZToiSFRNTFNvdXJjZUVsZW1lbnQiLHNwYW46IkhUTUxTcGFuRWxlbWVudCIsc3R5bGU6IkhUTUxTdHlsZUVsZW1lbnQiLHRhYmxlOiJIVE1MVGFibGVFbGVtZW50Iix0Ym9keToiSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQiLHRlbXBsYXRlOiJIVE1MVGVtcGxhdGVFbGVtZW50Iix0ZXh0YXJlYToiSFRNTFRleHRBcmVhRWxlbWVudCIsdGhlYWQ6IkhUTUxUYWJsZVNlY3Rpb25FbGVtZW50Iix0aW1lOiJIVE1MVGltZUVsZW1lbnQiLHRpdGxlOiJIVE1MVGl0bGVFbGVtZW50Iix0cjoiSFRNTFRhYmxlUm93RWxlbWVudCIsdHJhY2s6IkhUTUxUcmFja0VsZW1lbnQiLHVsOiJIVE1MVUxpc3RFbGVtZW50Iix2aWRlbzoiSFRNTFZpZGVvRWxlbWVudCJ9KTtPYmplY3Qua2V5cyhjKS5mb3JFYWNoKGIpLE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEud3JhcHBlcnMpLmZvckVhY2goZnVuY3Rpb24oYil7d2luZG93W2JdPWEud3JhcHBlcnNbYl19KX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbigpe3dpbmRvdy53cmFwPVNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZCx3aW5kb3cudW53cmFwPVNoYWRvd0RPTVBvbHlmaWxsLnVud3JhcElmTmVlZGVkLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFbGVtZW50LnByb3RvdHlwZSwid2Via2l0U2hhZG93Um9vdCIsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihFbGVtZW50LnByb3RvdHlwZSwic2hhZG93Um9vdCIpKTt2YXIgYT1FbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTaGFkb3dSb290O0VsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3Q9ZnVuY3Rpb24oKXt2YXIgYj1hLmNhbGwodGhpcyk7cmV0dXJuIEN1c3RvbUVsZW1lbnRzLndhdGNoU2hhZG93KHRoaXMpLGJ9LEVsZW1lbnQucHJvdG90eXBlLndlYmtpdENyZWF0ZVNoYWRvd1Jvb3Q9RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhZG93Um9vdH0oKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEsYil7dmFyIGM9IiI7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYSxmdW5jdGlvbihhKXtjKz1hLnRleHRDb250ZW50KyJcblxuIn0pLGJ8fChjPWMucmVwbGFjZShsLCIiKSksY31mdW5jdGlvbiBjKGEpe3ZhciBiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7cmV0dXJuIGIudGV4dENvbnRlbnQ9YSxifWZ1bmN0aW9uIGQoYSl7dmFyIGI9YyhhKTtkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGIpO3ZhciBkPVtdO2lmKGIuc2hlZXQpdHJ5e2Q9Yi5zaGVldC5jc3NSdWxlc31jYXRjaChlKXt9ZWxzZSBjb25zb2xlLndhcm4oInNoZWV0IG5vdCBmb3VuZCIsYik7cmV0dXJuIGIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKSxkfWZ1bmN0aW9uIGUoKXt2LmluaXRpYWxpemVkPSEwLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodik7dmFyIGE9di5jb250ZW50RG9jdW1lbnQsYj1hLmNyZWF0ZUVsZW1lbnQoImJhc2UiKTtiLmhyZWY9ZG9jdW1lbnQuYmFzZVVSSSxhLmhlYWQuYXBwZW5kQ2hpbGQoYil9ZnVuY3Rpb24gZihhKXt2LmluaXRpYWxpemVkfHxlKCksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2KSxhKHYuY29udGVudERvY3VtZW50KSxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHYpfWZ1bmN0aW9uIGcoYSxiKXtpZihiKXt2YXIgZTtpZihhLm1hdGNoKCJAaW1wb3J0IikmJngpe3ZhciBnPWMoYSk7ZihmdW5jdGlvbihhKXthLmhlYWQuYXBwZW5kQ2hpbGQoZy5pbXBsKSxlPWcuc2hlZXQuY3NzUnVsZXMsYihlKX0pfWVsc2UgZT1kKGEpLGIoZSl9fWZ1bmN0aW9uIGgoYSl7YSYmaigpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGEpKX1mdW5jdGlvbiBpKGEsYil7dmFyIGQ9YyhhKTtkLnNldEF0dHJpYnV0ZShiLCIiKSxkLnNldEF0dHJpYnV0ZSh6LCIiKSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGQpfWZ1bmN0aW9uIGooKXtyZXR1cm4gd3x8KHc9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKSx3LnNldEF0dHJpYnV0ZSh6LCIiKSx3W3pdPSEwKSx3fXZhciBrPXtzdHJpY3RTdHlsaW5nOiExLHJlZ2lzdHJ5Ont9LHNoaW1TdHlsaW5nOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZT10aGlzLnByZXBhcmVSb290KGEsYyxkKSxmPXRoaXMuaXNUeXBlRXh0ZW5zaW9uKGQpLGc9dGhpcy5tYWtlU2NvcGVTZWxlY3RvcihjLGYpLGg9YihlLCEwKTtoPXRoaXMuc2NvcGVDc3NUZXh0KGgsZyksYSYmKGEuc2hpbW1lZFN0eWxlPWgpLHRoaXMuYWRkQ3NzVG9Eb2N1bWVudChoLGMpfSxzaGltU3R5bGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5zaGltQ3NzVGV4dChhLnRleHRDb250ZW50LGIpfSxzaGltQ3NzVGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBhPXRoaXMuaW5zZXJ0RGlyZWN0aXZlcyhhKSx0aGlzLnNjb3BlQ3NzVGV4dChhLGIpfSxtYWtlU2NvcGVTZWxlY3RvcjpmdW5jdGlvbihhLGIpe3JldHVybiBhP2I/Iltpcz0iK2ErIl0iOmE6IiJ9LGlzVHlwZUV4dGVuc2lvbjpmdW5jdGlvbihhKXtyZXR1cm4gYSYmYS5pbmRleE9mKCItIik8MH0scHJlcGFyZVJvb3Q6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMucmVnaXN0ZXJSb290KGEsYixjKTtyZXR1cm4gdGhpcy5yZXBsYWNlVGV4dEluU3R5bGVzKGQucm9vdFN0eWxlcyx0aGlzLmluc2VydERpcmVjdGl2ZXMpLHRoaXMucmVtb3ZlU3R5bGVzKGEsZC5yb290U3R5bGVzKSx0aGlzLnN0cmljdFN0eWxpbmcmJnRoaXMuYXBwbHlTY29wZVRvQ29udGVudChhLGIpLGQuc2NvcGVTdHlsZXN9LHJlbW92ZVN0eWxlczpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYyxkPTAsZT1iLmxlbmd0aDtlPmQmJihjPWJbZF0pO2QrKyljLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyl9LHJlZ2lzdGVyUm9vdDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5yZWdpc3RyeVtiXT17cm9vdDphLG5hbWU6YixleHRlbmRzTmFtZTpjfSxlPXRoaXMuZmluZFN0eWxlcyhhKTtkLnJvb3RTdHlsZXM9ZSxkLnNjb3BlU3R5bGVzPWQucm9vdFN0eWxlczt2YXIgZj10aGlzLnJlZ2lzdHJ5W2QuZXh0ZW5kc05hbWVdO3JldHVybiFmfHxhJiYhYS5xdWVyeVNlbGVjdG9yKCJzaGFkb3ciKXx8KGQuc2NvcGVTdHlsZXM9Zi5zY29wZVN0eWxlcy5jb25jYXQoZC5zY29wZVN0eWxlcykpLGR9LGZpbmRTdHlsZXM6ZnVuY3Rpb24oYSl7aWYoIWEpcmV0dXJuW107dmFyIGI9YS5xdWVyeVNlbGVjdG9yQWxsKCJzdHlsZSIpO3JldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYixmdW5jdGlvbihhKXtyZXR1cm4hYS5oYXNBdHRyaWJ1dGUoQSl9KX0sYXBwbHlTY29wZVRvQ29udGVudDpmdW5jdGlvbihhLGIpe2EmJihBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGEucXVlcnlTZWxlY3RvckFsbCgiKiIpLGZ1bmN0aW9uKGEpe2Euc2V0QXR0cmlidXRlKGIsIiIpfSksQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLnF1ZXJ5U2VsZWN0b3JBbGwoInRlbXBsYXRlIiksZnVuY3Rpb24oYSl7dGhpcy5hcHBseVNjb3BlVG9Db250ZW50KGEuY29udGVudCxiKX0sdGhpcykpfSxpbnNlcnREaXJlY3RpdmVzOmZ1bmN0aW9uKGEpe3JldHVybiBhPXRoaXMuaW5zZXJ0UG9seWZpbGxEaXJlY3RpdmVzSW5Dc3NUZXh0KGEpLHRoaXMuaW5zZXJ0UG9seWZpbGxSdWxlc0luQ3NzVGV4dChhKX0saW5zZXJ0UG9seWZpbGxEaXJlY3RpdmVzSW5Dc3NUZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShtLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIuc2xpY2UoMCwtMikrInsifSksYS5yZXBsYWNlKG4sZnVuY3Rpb24oYSxiKXtyZXR1cm4gYisiIHsifSl9LGluc2VydFBvbHlmaWxsUnVsZXNJbkNzc1RleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9YS5yZXBsYWNlKG8sZnVuY3Rpb24oYSxiKXtyZXR1cm4gYi5zbGljZSgwLC0xKX0pLGEucmVwbGFjZShwLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEucmVwbGFjZShiLCIiKS5yZXBsYWNlKGMsIiIpO3JldHVybiBkK2V9KX0sc2NvcGVDc3NUZXh0OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5leHRyYWN0VW5zY29wZWRSdWxlc0Zyb21Dc3NUZXh0KGEpO2lmKGE9dGhpcy5pbnNlcnRQb2x5ZmlsbEhvc3RJbkNzc1RleHQoYSksYT10aGlzLmNvbnZlcnRDb2xvbkhvc3QoYSksYT10aGlzLmNvbnZlcnRDb2xvbkFuY2VzdG9yKGEpLGE9dGhpcy5jb252ZXJ0Q29tYmluYXRvcnMoYSksYil7dmFyIGEsZD10aGlzO2coYSxmdW5jdGlvbihjKXthPWQuc2NvcGVSdWxlcyhjLGIpfSl9cmV0dXJuIGE9YSsiXG4iK2MsYS50cmltKCl9LGV4dHJhY3RVbnNjb3BlZFJ1bGVzRnJvbUNzc1RleHQ6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9IiI7Yj1xLmV4ZWMoYSk7KWMrPWJbMV0uc2xpY2UoMCwtMSkrIlxuXG4iO2Zvcig7Yj1yLmV4ZWMoYSk7KWMrPWJbMF0ucmVwbGFjZShiWzJdLCIiKS5yZXBsYWNlKGJbMV0sYlszXSkrIlxuXG4iO3JldHVybiBjfSxjb252ZXJ0Q29sb25Ib3N0OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNvbnZlcnRDb2xvblJ1bGUoYSxjc3NDb2xvbkhvc3RSZSx0aGlzLmNvbG9uSG9zdFBhcnRSZXBsYWNlcil9LGNvbnZlcnRDb2xvbkFuY2VzdG9yOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNvbnZlcnRDb2xvblJ1bGUoYSxjc3NDb2xvbkFuY2VzdG9yUmUsdGhpcy5jb2xvbkFuY2VzdG9yUGFydFJlcGxhY2VyKX0sY29udmVydENvbG9uUnVsZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGEucmVwbGFjZShiLGZ1bmN0aW9uKGEsYixkLGUpe2lmKGI9cG9seWZpbGxIb3N0Tm9Db21iaW5hdG9yLGQpe2Zvcih2YXIgZixnPWQuc3BsaXQoIiwiKSxoPVtdLGk9MCxqPWcubGVuZ3RoO2o+aSYmKGY9Z1tpXSk7aSsrKWY9Zi50cmltKCksaC5wdXNoKGMoYixmLGUpKTtyZXR1cm4gaC5qb2luKCIsIil9cmV0dXJuIGIrZX0pfSxjb2xvbkFuY2VzdG9yUGFydFJlcGxhY2VyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYi5tYXRjaChzKT90aGlzLmNvbG9uSG9zdFBhcnRSZXBsYWNlcihhLGIsYyk6YStiK2MrIiwgIitiKyIgIithK2N9LGNvbG9uSG9zdFBhcnRSZXBsYWNlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGErYi5yZXBsYWNlKHMsIiIpK2N9LGNvbnZlcnRDb21iaW5hdG9yczpmdW5jdGlvbihhKXtmb3IodmFyIGI9MDtiPGNvbWJpbmF0b3JzUmUubGVuZ3RoO2IrKylhPWEucmVwbGFjZShjb21iaW5hdG9yc1JlW2JdLCIgIik7cmV0dXJuIGF9LHNjb3BlUnVsZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz0iIjtyZXR1cm4gYSYmQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLGZ1bmN0aW9uKGEpe2Euc2VsZWN0b3JUZXh0JiZhLnN0eWxlJiZhLnN0eWxlLmNzc1RleHQ/KGMrPXRoaXMuc2NvcGVTZWxlY3RvcihhLnNlbGVjdG9yVGV4dCxiLHRoaXMuc3RyaWN0U3R5bGluZykrIiB7XG4JIixjKz10aGlzLnByb3BlcnRpZXNGcm9tUnVsZShhKSsiXG59XG5cbiIpOmEudHlwZT09PUNTU1J1bGUuTUVESUFfUlVMRT8oYys9IkBtZWRpYSAiK2EubWVkaWEubWVkaWFUZXh0KyIge1xuIixjKz10aGlzLnNjb3BlUnVsZXMoYS5jc3NSdWxlcyxiKSxjKz0iXG59XG5cbiIpOmEuY3NzVGV4dCYmKGMrPWEuY3NzVGV4dCsiXG5cbiIpfSx0aGlzKSxjfSxzY29wZVNlbGVjdG9yOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1bXSxlPWEuc3BsaXQoIiwiKTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2E9YS50cmltKCksdGhpcy5zZWxlY3Rvck5lZWRzU2NvcGluZyhhLGIpJiYoYT1jJiYhYS5tYXRjaChwb2x5ZmlsbEhvc3ROb0NvbWJpbmF0b3IpP3RoaXMuYXBwbHlTdHJpY3RTZWxlY3RvclNjb3BlKGEsYik6dGhpcy5hcHBseVNpbXBsZVNlbGVjdG9yU2NvcGUoYSxiKSksZC5wdXNoKGEpfSx0aGlzKSxkLmpvaW4oIiwgIil9LHNlbGVjdG9yTmVlZHNTY29waW5nOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5tYWtlU2NvcGVNYXRjaGVyKGIpO3JldHVybiFhLm1hdGNoKGMpfSxtYWtlU2NvcGVNYXRjaGVyOmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZSgvXFsvZywiXFxbIikucmVwbGFjZSgvXFsvZywiXFxdIiksbmV3IFJlZ0V4cCgiXigiK2ErIikiK3NlbGVjdG9yUmVTdWZmaXgsIm0iKX0sYXBwbHlTaW1wbGVTZWxlY3RvclNjb3BlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEubWF0Y2gocG9seWZpbGxIb3N0UmUpPyhhPWEucmVwbGFjZShwb2x5ZmlsbEhvc3ROb0NvbWJpbmF0b3IsYiksYS5yZXBsYWNlKHBvbHlmaWxsSG9zdFJlLGIrIiAiKSk6YisiICIrYX0sYXBwbHlTdHJpY3RTZWxlY3RvclNjb3BlOmZ1bmN0aW9uKGEsYil7Yj1iLnJlcGxhY2UoL1xbaXM9KFteXF1dKilcXS9nLCIkMSIpO3ZhciBjPVsiICIsIj4iLCIrIiwifiJdLGQ9YSxlPSJbIitiKyJdIjtyZXR1cm4gYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWQuc3BsaXQoYSk7ZD1iLm1hcChmdW5jdGlvbihhKXt2YXIgYj1hLnRyaW0oKS5yZXBsYWNlKHBvbHlmaWxsSG9zdFJlLCIiKTtyZXR1cm4gYiYmYy5pbmRleE9mKGIpPDAmJmIuaW5kZXhPZihlKTwwJiYoYT1iLnJlcGxhY2UoLyhbXjpdKikoOiopKC4qKS8sIiQxIitlKyIkMiQzIikpLGF9KS5qb2luKGEpfSksZH0saW5zZXJ0UG9seWZpbGxIb3N0SW5Dc3NUZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoaG9zdFJlLHMpLnJlcGxhY2UoY29sb25Ib3N0UmUscykucmVwbGFjZShjb2xvbkFuY2VzdG9yUmUsdCl9LHByb3BlcnRpZXNGcm9tUnVsZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5zdHlsZS5jb250ZW50JiYhYS5zdHlsZS5jb250ZW50Lm1hdGNoKC9bJyJdKy8pP2Euc3R5bGUuY3NzVGV4dC5yZXBsYWNlKC9jb250ZW50OlteO10qOy9nLCJjb250ZW50OiAnIithLnN0eWxlLmNvbnRlbnQrIic7Iik6YS5zdHlsZS5jc3NUZXh0fSxyZXBsYWNlVGV4dEluU3R5bGVzOmZ1bmN0aW9uKGEsYil7YSYmYiYmKGEgaW5zdGFuY2VvZiBBcnJheXx8KGE9W2FdKSxBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGEsZnVuY3Rpb24oYSl7YS50ZXh0Q29udGVudD1iLmNhbGwodGhpcyxhLnRleHRDb250ZW50KX0sdGhpcykpfSxhZGRDc3NUb0RvY3VtZW50OmZ1bmN0aW9uKGEsYil7YS5tYXRjaCgiQGltcG9ydCIpP2koYSxiKTpoKGEpfX0sbD0vXC9cKlteKl0qXCorKFteLypdW14qXSpcKispKlwvL2dpbSxtPS9cL1wqXHMqQHBvbHlmaWxsIChbXipdKlwqKyhbXi8qXVteKl0qXCorKSpcLykoW157XSo/KXsvZ2ltLG49L3BvbHlmaWxsLW5leHQtc2VsZWN0b3JbXn1dKmNvbnRlbnRcOltcc10qJyhbXiddKiknW159XSp9KFtee10qPyl7L2dpbSxvPS9cL1wqXHNAcG9seWZpbGwtcnVsZShbXipdKlwqKyhbXi8qXVteKl0qXCorKSopXC8vZ2ltLHA9Lyhwb2x5ZmlsbC1ydWxlKVtefV0qKGNvbnRlbnRcOltcc10qJyhbXiddKiknW147XSo7KVtefV0qfS9naW0scT0vXC9cKlxzQHBvbHlmaWxsLXVuc2NvcGVkLXJ1bGUoW14qXSpcKisoW14vKl1bXipdKlwqKykqKVwvL2dpbSxyPS8ocG9seWZpbGwtdW5zY29wZWQtcnVsZSlbXn1dKihjb250ZW50XDpbXHNdKicoW14nXSopJ1teO10qOylbXn1dKn0vZ2ltLHM9Ii1zaGFkb3djc3Nob3N0Iix0PSItc2hhZG93Y3NzYW5jZXN0b3IiLHU9IikoPzpcXCgoKD86XFwoW14pKF0qXFwpfFteKShdKikrPylcXCkpPyhbXix7XSopIjtjc3NDb2xvbkhvc3RSZT1uZXcgUmVnRXhwKCIoIitzK3UsImdpbSIpLGNzc0NvbG9uQW5jZXN0b3JSZT1uZXcgUmVnRXhwKCIoIit0K3UsImdpbSIpLHNlbGVjdG9yUmVTdWZmaXg9IihbPlxcc34rWy4sezpdW1xcc1xcU10qKT8kIixob3N0UmU9L0Bob3N0L2dpbSxjb2xvbkhvc3RSZT0vXDpob3N0L2dpbSxjb2xvbkFuY2VzdG9yUmU9L1w6YW5jZXN0b3IvZ2ltLHBvbHlmaWxsSG9zdE5vQ29tYmluYXRvcj1zKyItbm8tY29tYmluYXRvciIscG9seWZpbGxIb3N0UmU9bmV3IFJlZ0V4cChzLCJnaW0iKSxwb2x5ZmlsbEFuY2VzdG9yUmU9bmV3IFJlZ0V4cCh0LCJnaW0iKSxjb21iaW5hdG9yc1JlPVsvXF5cXi9nLC9cXi9nLC9cL3NoYWRvd1wvL2csL1wvc2hhZG93LWRlZXBcLy9nXTt2YXIgdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTt2LnN0eWxlLmRpc3BsYXk9Im5vbmUiO3ZhciB3LHg9bmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgiQ2hyb21lIikseT0ic2hpbS1zaGFkb3dkb20iLHo9InNoaW0tc2hhZG93ZG9tLWNzcyIsQT0ibm8tc2hpbSI7aWYod2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKXtoKCJzdHlsZSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuIik7dmFyIEI9d3JhcChkb2N1bWVudCksQz1CLnF1ZXJ5U2VsZWN0b3IoImhlYWQiKTtDLmluc2VydEJlZm9yZShqKCksQy5jaGlsZE5vZGVzWzBdKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixmdW5jdGlvbigpe3ZhciBiPWEudXJsUmVzb2x2ZXI7aWYod2luZG93LkhUTUxJbXBvcnRzJiYhSFRNTEltcG9ydHMudXNlTmF0aXZlKXt2YXIgYz0ibGlua1tyZWw9c3R5bGVzaGVldF1bIit5KyJdIixkPSJzdHlsZVsiK3krIl0iO0hUTUxJbXBvcnRzLmltcG9ydGVyLmRvY3VtZW50UHJlbG9hZFNlbGVjdG9ycys9IiwiK2MsSFRNTEltcG9ydHMuaW1wb3J0ZXIuaW1wb3J0c1ByZWxvYWRTZWxlY3RvcnMrPSIsIitjLEhUTUxJbXBvcnRzLnBhcnNlci5kb2N1bWVudFNlbGVjdG9ycz1bSFRNTEltcG9ydHMucGFyc2VyLmRvY3VtZW50U2VsZWN0b3JzLGMsZF0uam9pbigiLCIpO3ZhciBlPUhUTUxJbXBvcnRzLnBhcnNlci5wYXJzZUdlbmVyaWM7SFRNTEltcG9ydHMucGFyc2VyLnBhcnNlR2VuZXJpYz1mdW5jdGlvbihhKXtpZighYVt6XSl7dmFyIGM9YS5fX2ltcG9ydEVsZW1lbnR8fGE7aWYoIWMuaGFzQXR0cmlidXRlKHkpKXJldHVybiB2b2lkIGUuY2FsbCh0aGlzLGEpO2EuX19yZXNvdXJjZT8oYz1hLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKSxjLnRleHRDb250ZW50PWIucmVzb2x2ZUNzc1RleHQoYS5fX3Jlc291cmNlLGEuaHJlZikpOmIucmVzb2x2ZVN0eWxlKGMpLGMudGV4dENvbnRlbnQ9ay5zaGltU3R5bGUoYyksYy5yZW1vdmVBdHRyaWJ1dGUoeSwiIiksYy5zZXRBdHRyaWJ1dGUoeiwiIiksY1t6XT0hMCxjLnBhcmVudE5vZGUhPT1DJiYoYS5wYXJlbnROb2RlPT09Qz9DLnJlcGxhY2VDaGlsZChjLGEpOkMuYXBwZW5kQ2hpbGQoYykpLGMuX19pbXBvcnRQYXJzZWQ9ITAsdGhpcy5tYXJrUGFyc2luZ0NvbXBsZXRlKGEpfX07dmFyIGY9SFRNTEltcG9ydHMucGFyc2VyLmhhc1Jlc291cmNlO0hUTUxJbXBvcnRzLnBhcnNlci5oYXNSZXNvdXJjZT1mdW5jdGlvbihhKXtyZXR1cm4ibGluayI9PT1hLmxvY2FsTmFtZSYmInN0eWxlc2hlZXQiPT09YS5yZWwmJmEuaGFzQXR0cmlidXRlKHkpP2EuX19yZXNvdXJjZTpmLmNhbGwodGhpcyxhKX19fSl9YS5TaGFkb3dDU1M9a30od2luZG93LlBsYXRmb3JtKSk6IWZ1bmN0aW9uKCl7d2luZG93LnRlbXBsYXRlQ29udGVudD13aW5kb3cudGVtcGxhdGVDb250ZW50fHxmdW5jdGlvbihhKXtyZXR1cm4gYS5jb250ZW50fSx3aW5kb3cud3JhcD13aW5kb3cudW53cmFwPWZ1bmN0aW9uKGEpe3JldHVybiBhfTt2YXIgYT1FbGVtZW50LnByb3RvdHlwZS53ZWJraXRDcmVhdGVTaGFkb3dSb290O0VsZW1lbnQucHJvdG90eXBlLndlYmtpdENyZWF0ZVNoYWRvd1Jvb3Q9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLndlYmtpdFNoYWRvd1Jvb3QsYz1hLmNhbGwodGhpcyk7cmV0dXJuIGMub2xkZXJTaGFkb3dSb290PWIsYy5ob3N0PXRoaXMsQ3VzdG9tRWxlbWVudHMud2F0Y2hTaGFkb3codGhpcyksY30sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoRWxlbWVudC5wcm90b3R5cGUse3NoYWRvd1Jvb3Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLndlYmtpdFNoYWRvd1Jvb3R9fSxjcmVhdGVTaGFkb3dSb290Ont2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLndlYmtpdENyZWF0ZVNoYWRvd1Jvb3QoKX19fSksd2luZG93LnRlbXBsYXRlQ29udGVudD1mdW5jdGlvbihhKXtpZih3aW5kb3cuSFRNTFRlbXBsYXRlRWxlbWVudCYmSFRNTFRlbXBsYXRlRWxlbWVudC5ib290c3RyYXAmJkhUTUxUZW1wbGF0ZUVsZW1lbnQuYm9vdHN0cmFwKGEpLCFhLmNvbnRlbnQmJiFhLl9jb250ZW50KXtmb3IodmFyIGI9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO2EuZmlyc3RDaGlsZDspYi5hcHBlbmRDaGlsZChhLmZpcnN0Q2hpbGQpO2EuX2NvbnRlbnQ9Yn1yZXR1cm4gYS5jb250ZW50fHxhLl9jb250ZW50fX0oKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtyZXR1cm4gdm9pZCAwIT09bVthXX1mdW5jdGlvbiBjKCl7aC5jYWxsKHRoaXMpLHRoaXMuX2lzSW52YWxpZD0hMH1mdW5jdGlvbiBkKGEpe3JldHVybiIiPT1hJiZjLmNhbGwodGhpcyksYS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIGUoYSl7dmFyIGI9YS5jaGFyQ29kZUF0KDApO3JldHVybiBiPjMyJiYxMjc+YiYmLTE9PVszNCwzNSw2MCw2Miw2Myw5Nl0uaW5kZXhPZihiKT9hOmVuY29kZVVSSUNvbXBvbmVudChhKX1mdW5jdGlvbiBmKGEpe3ZhciBiPWEuY2hhckNvZGVBdCgwKTtyZXR1cm4gYj4zMiYmMTI3PmImJi0xPT1bMzQsMzUsNjAsNjIsOTZdLmluZGV4T2YoYik/YTplbmNvZGVVUklDb21wb25lbnQoYSl9ZnVuY3Rpb24gZyhhLGcsaCl7ZnVuY3Rpb24gaShhKXt0LnB1c2goYSl9dmFyIGo9Z3x8InNjaGVtZSBzdGFydCIsaz0wLGw9IiIscj0hMSxzPSExLHQ9W107YTpmb3IoOyhhW2stMV0hPW98fDA9PWspJiYhdGhpcy5faXNJbnZhbGlkOyl7dmFyIHU9YVtrXTtzd2l0Y2goail7Y2FzZSJzY2hlbWUgc3RhcnQiOmlmKCF1fHwhcC50ZXN0KHUpKXtpZihnKXtpKCJJbnZhbGlkIHNjaGVtZS4iKTticmVhayBhfWw9IiIsaj0ibm8gc2NoZW1lIjtjb250aW51ZX1sKz11LnRvTG93ZXJDYXNlKCksaj0ic2NoZW1lIjticmVhaztjYXNlInNjaGVtZSI6aWYodSYmcS50ZXN0KHUpKWwrPXUudG9Mb3dlckNhc2UoKTtlbHNle2lmKCI6IiE9dSl7aWYoZyl7aWYobz09dSlicmVhayBhO2koIkNvZGUgcG9pbnQgbm90IGFsbG93ZWQgaW4gc2NoZW1lOiAiK3UpO2JyZWFrIGF9bD0iIixrPTAsaj0ibm8gc2NoZW1lIjtjb250aW51ZX1pZih0aGlzLl9zY2hlbWU9bCxsPSIiLGcpYnJlYWsgYTtiKHRoaXMuX3NjaGVtZSkmJih0aGlzLl9pc1JlbGF0aXZlPSEwKSxqPSJmaWxlIj09dGhpcy5fc2NoZW1lPyJyZWxhdGl2ZSI6dGhpcy5faXNSZWxhdGl2ZSYmaCYmaC5fc2NoZW1lPT10aGlzLl9zY2hlbWU/InJlbGF0aXZlIG9yIGF1dGhvcml0eSI6dGhpcy5faXNSZWxhdGl2ZT8iYXV0aG9yaXR5IGZpcnN0IHNsYXNoIjoic2NoZW1lIGRhdGEifWJyZWFrO2Nhc2Uic2NoZW1lIGRhdGEiOiI/Ij09dT8ocXVlcnk9Ij8iLGo9InF1ZXJ5Iik6IiMiPT11Pyh0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQiKTpvIT11JiYiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJih0aGlzLl9zY2hlbWVEYXRhKz1lKHUpKTticmVhaztjYXNlIm5vIHNjaGVtZSI6aWYoaCYmYihoLl9zY2hlbWUpKXtqPSJyZWxhdGl2ZSI7Y29udGludWV9aSgiTWlzc2luZyBzY2hlbWUuIiksYy5jYWxsKHRoaXMpO2JyZWFrO2Nhc2UicmVsYXRpdmUgb3IgYXV0aG9yaXR5IjppZigiLyIhPXV8fCIvIiE9YVtrKzFdKXtpKCJFeHBlY3RlZCAvLCBnb3Q6ICIrdSksaj0icmVsYXRpdmUiO2NvbnRpbnVlfWo9ImF1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyI7YnJlYWs7Y2FzZSJyZWxhdGl2ZSI6aWYodGhpcy5faXNSZWxhdGl2ZT0hMCwiZmlsZSIhPXRoaXMuX3NjaGVtZSYmKHRoaXMuX3NjaGVtZT1oLl9zY2hlbWUpLG89PXUpe3RoaXMuX2hvc3Q9aC5faG9zdCx0aGlzLl9wb3J0PWguX3BvcnQsdGhpcy5fcGF0aD1oLl9wYXRoLnNsaWNlKCksdGhpcy5fcXVlcnk9aC5fcXVlcnk7YnJlYWsgYX1pZigiLyI9PXV8fCJcXCI9PXUpIlxcIj09dSYmaSgiXFwgaXMgYW4gaW52YWxpZCBjb2RlIHBvaW50LiIpLGo9InJlbGF0aXZlIHNsYXNoIjtlbHNlIGlmKCI/Ij09dSl0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0LHRoaXMuX3BhdGg9aC5fcGF0aC5zbGljZSgpLHRoaXMuX3F1ZXJ5PSI/IixqPSJxdWVyeSI7ZWxzZXtpZigiIyIhPXUpe3ZhciB2PWFbaysxXSx3PWFbaysyXTsoImZpbGUiIT10aGlzLl9zY2hlbWV8fCFwLnRlc3QodSl8fCI6IiE9diYmInwiIT12fHxvIT13JiYiLyIhPXcmJiJcXCIhPXcmJiI/IiE9dyYmIiMiIT13KSYmKHRoaXMuX2hvc3Q9aC5faG9zdCx0aGlzLl9wb3J0PWguX3BvcnQsdGhpcy5fcGF0aD1oLl9wYXRoLnNsaWNlKCksdGhpcy5fcGF0aC5wb3AoKSksaj0icmVsYXRpdmUgcGF0aCI7Y29udGludWV9dGhpcy5faG9zdD1oLl9ob3N0LHRoaXMuX3BvcnQ9aC5fcG9ydCx0aGlzLl9wYXRoPWguX3BhdGguc2xpY2UoKSx0aGlzLl9xdWVyeT1oLl9xdWVyeSx0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQifWJyZWFrO2Nhc2UicmVsYXRpdmUgc2xhc2giOmlmKCIvIiE9dSYmIlxcIiE9dSl7ImZpbGUiIT10aGlzLl9zY2hlbWUmJih0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0KSxqPSJyZWxhdGl2ZSBwYXRoIjtjb250aW51ZX0iXFwiPT11JiZpKCJcXCBpcyBhbiBpbnZhbGlkIGNvZGUgcG9pbnQuIiksaj0iZmlsZSI9PXRoaXMuX3NjaGVtZT8iZmlsZSBob3N0IjoiYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIjticmVhaztjYXNlImF1dGhvcml0eSBmaXJzdCBzbGFzaCI6aWYoIi8iIT11KXtpKCJFeHBlY3RlZCAnLycsIGdvdDogIit1KSxqPSJhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMiO2NvbnRpbnVlfWo9ImF1dGhvcml0eSBzZWNvbmQgc2xhc2giO2JyZWFrO2Nhc2UiYXV0aG9yaXR5IHNlY29uZCBzbGFzaCI6aWYoaj0iYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIiwiLyIhPXUpe2koIkV4cGVjdGVkICcvJywgZ290OiAiK3UpO2NvbnRpbnVlfWJyZWFrO2Nhc2UiYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIjppZigiLyIhPXUmJiJcXCIhPXUpe2o9ImF1dGhvcml0eSI7Y29udGludWV9aSgiRXhwZWN0ZWQgYXV0aG9yaXR5LCBnb3Q6ICIrdSk7YnJlYWs7Y2FzZSJhdXRob3JpdHkiOmlmKCJAIj09dSl7ciYmKGkoIkAgYWxyZWFkeSBzZWVuLiIpLGwrPSIlNDAiKSxyPSEwO2Zvcih2YXIgeD0wO3g8bC5sZW5ndGg7eCsrKXt2YXIgeT1sW3hdO2lmKCIJIiE9eSYmIlxuIiE9eSYmIlxyIiE9eSlpZigiOiIhPXl8fG51bGwhPT10aGlzLl9wYXNzd29yZCl7dmFyIHo9ZSh5KTtudWxsIT09dGhpcy5fcGFzc3dvcmQ/dGhpcy5fcGFzc3dvcmQrPXo6dGhpcy5fdXNlcm5hbWUrPXp9ZWxzZSB0aGlzLl9wYXNzd29yZD0iIjtlbHNlIGkoIkludmFsaWQgd2hpdGVzcGFjZSBpbiBhdXRob3JpdHkuIil9bD0iIn1lbHNle2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXUpe2stPWwubGVuZ3RoLGw9IiIsaj0iaG9zdCI7Y29udGludWV9bCs9dX1icmVhaztjYXNlImZpbGUgaG9zdCI6aWYobz09dXx8Ii8iPT11fHwiXFwiPT11fHwiPyI9PXV8fCIjIj09dSl7MiE9bC5sZW5ndGh8fCFwLnRlc3QobFswXSl8fCI6IiE9bFsxXSYmInwiIT1sWzFdPzA9PWwubGVuZ3RoP2o9InJlbGF0aXZlIHBhdGggc3RhcnQiOih0aGlzLl9ob3N0PWQuY2FsbCh0aGlzLGwpLGw9IiIsaj0icmVsYXRpdmUgcGF0aCBzdGFydCIpOmo9InJlbGF0aXZlIHBhdGgiO2NvbnRpbnVlfSIJIj09dXx8IlxuIj09dXx8IlxyIj09dT9pKCJJbnZhbGlkIHdoaXRlc3BhY2UgaW4gZmlsZSBob3N0LiIpOmwrPXU7YnJlYWs7Y2FzZSJob3N0IjpjYXNlImhvc3RuYW1lIjppZigiOiIhPXV8fHMpe2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXUpe2lmKHRoaXMuX2hvc3Q9ZC5jYWxsKHRoaXMsbCksbD0iIixqPSJyZWxhdGl2ZSBwYXRoIHN0YXJ0IixnKWJyZWFrIGE7Y29udGludWV9IgkiIT11JiYiXG4iIT11JiYiXHIiIT11PygiWyI9PXU/cz0hMDoiXSI9PXUmJihzPSExKSxsKz11KTppKCJJbnZhbGlkIGNvZGUgcG9pbnQgaW4gaG9zdC9ob3N0bmFtZTogIit1KX1lbHNlIGlmKHRoaXMuX2hvc3Q9ZC5jYWxsKHRoaXMsbCksbD0iIixqPSJwb3J0IiwiaG9zdG5hbWUiPT1nKWJyZWFrIGE7YnJlYWs7Y2FzZSJwb3J0IjppZigvWzAtOV0vLnRlc3QodSkpbCs9dTtlbHNle2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXV8fGcpe2lmKCIiIT1sKXt2YXIgQT1wYXJzZUludChsLDEwKTtBIT1tW3RoaXMuX3NjaGVtZV0mJih0aGlzLl9wb3J0PUErIiIpLGw9IiJ9aWYoZylicmVhayBhO2o9InJlbGF0aXZlIHBhdGggc3RhcnQiO2NvbnRpbnVlfSIJIj09dXx8IlxuIj09dXx8IlxyIj09dT9pKCJJbnZhbGlkIGNvZGUgcG9pbnQgaW4gcG9ydDogIit1KTpjLmNhbGwodGhpcyl9YnJlYWs7Y2FzZSJyZWxhdGl2ZSBwYXRoIHN0YXJ0IjppZigiXFwiPT11JiZpKCInXFwnIG5vdCBhbGxvd2VkIGluIHBhdGguIiksaj0icmVsYXRpdmUgcGF0aCIsIi8iIT11JiYiXFwiIT11KWNvbnRpbnVlO2JyZWFrO2Nhc2UicmVsYXRpdmUgcGF0aCI6aWYobyE9dSYmIi8iIT11JiYiXFwiIT11JiYoZ3x8Ij8iIT11JiYiIyIhPXUpKSIJIiE9dSYmIlxuIiE9dSYmIlxyIiE9dSYmKGwrPWUodSkpO2Vsc2V7IlxcIj09dSYmaSgiXFwgbm90IGFsbG93ZWQgaW4gcmVsYXRpdmUgcGF0aC4iKTt2YXIgQjsoQj1uW2wudG9Mb3dlckNhc2UoKV0pJiYobD1CKSwiLi4iPT1sPyh0aGlzLl9wYXRoLnBvcCgpLCIvIiE9dSYmIlxcIiE9dSYmdGhpcy5fcGF0aC5wdXNoKCIiKSk6Ii4iPT1sJiYiLyIhPXUmJiJcXCIhPXU/dGhpcy5fcGF0aC5wdXNoKCIiKToiLiIhPWwmJigiZmlsZSI9PXRoaXMuX3NjaGVtZSYmMD09dGhpcy5fcGF0aC5sZW5ndGgmJjI9PWwubGVuZ3RoJiZwLnRlc3QobFswXSkmJiJ8Ij09bFsxXSYmKGw9bFswXSsiOiIpLHRoaXMuX3BhdGgucHVzaChsKSksbD0iIiwiPyI9PXU/KHRoaXMuX3F1ZXJ5PSI/IixqPSJxdWVyeSIpOiIjIj09dSYmKHRoaXMuX2ZyYWdtZW50PSIjIixqPSJmcmFnbWVudCIpfWJyZWFrO2Nhc2UicXVlcnkiOmd8fCIjIiE9dT9vIT11JiYiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJih0aGlzLl9xdWVyeSs9Zih1KSk6KHRoaXMuX2ZyYWdtZW50PSIjIixqPSJmcmFnbWVudCIpO2JyZWFrO2Nhc2UiZnJhZ21lbnQiOm8hPXUmJiIJIiE9dSYmIlxuIiE9dSYmIlxyIiE9dSYmKHRoaXMuX2ZyYWdtZW50Kz11KX1rKyt9fWZ1bmN0aW9uIGgoKXt0aGlzLl9zY2hlbWU9IiIsdGhpcy5fc2NoZW1lRGF0YT0iIix0aGlzLl91c2VybmFtZT0iIix0aGlzLl9wYXNzd29yZD1udWxsLHRoaXMuX2hvc3Q9IiIsdGhpcy5fcG9ydD0iIix0aGlzLl9wYXRoPVtdLHRoaXMuX3F1ZXJ5PSIiLHRoaXMuX2ZyYWdtZW50PSIiLHRoaXMuX2lzSW52YWxpZD0hMSx0aGlzLl9pc1JlbGF0aXZlPSExfWZ1bmN0aW9uIGkoYSxiKXt2b2lkIDA9PT1ifHxiIGluc3RhbmNlb2YgaXx8KGI9bmV3IGkoU3RyaW5nKGIpKSksdGhpcy5fdXJsPWEsaC5jYWxsKHRoaXMpO3ZhciBjPWEucmVwbGFjZSgvXlsgXHRcclxuXGZdK3xbIFx0XHJcblxmXSskL2csIiIpO2cuY2FsbCh0aGlzLGMsbnVsbCxiKX12YXIgaj0hMTtpZighYS5mb3JjZUpVUkwpdHJ5e3ZhciBrPW5ldyBVUkwoImIiLCJodHRwOi8vYSIpO2o9Imh0dHA6Ly9hL2IiPT09ay5ocmVmfWNhdGNoKGwpe31pZighail7dmFyIG09T2JqZWN0LmNyZWF0ZShudWxsKTttLmZ0cD0yMSxtLmZpbGU9MCxtLmdvcGhlcj03MCxtLmh0dHA9ODAsbS5odHRwcz00NDMsbS53cz04MCxtLndzcz00NDM7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtuWyIlMmUiXT0iLiIsblsiLiUyZSJdPSIuLiIsblsiJTJlLiJdPSIuLiIsblsiJTJlJTJlIl09Ii4uIjt2YXIgbz12b2lkIDAscD0vW2EtekEtWl0vLHE9L1thLXpBLVowLTlcK1wtXC5dLztpLnByb3RvdHlwZT17Z2V0IGhyZWYoKXtpZih0aGlzLl9pc0ludmFsaWQpcmV0dXJuIHRoaXMuX3VybDt2YXIgYT0iIjtyZXR1cm4oIiIhPXRoaXMuX3VzZXJuYW1lfHxudWxsIT10aGlzLl9wYXNzd29yZCkmJihhPXRoaXMuX3VzZXJuYW1lKyhudWxsIT10aGlzLl9wYXNzd29yZD8iOiIrdGhpcy5fcGFzc3dvcmQ6IiIpKyJAIiksdGhpcy5wcm90b2NvbCsodGhpcy5faXNSZWxhdGl2ZT8iLy8iK2ErdGhpcy5ob3N0OiIiKSt0aGlzLnBhdGhuYW1lK3RoaXMuX3F1ZXJ5K3RoaXMuX2ZyYWdtZW50fSxzZXQgaHJlZihhKXtoLmNhbGwodGhpcyksZy5jYWxsKHRoaXMsYSl9LGdldCBwcm90b2NvbCgpe3JldHVybiB0aGlzLl9zY2hlbWUrIjoifSxzZXQgcHJvdG9jb2woYSl7dGhpcy5faXNJbnZhbGlkfHxnLmNhbGwodGhpcyxhKyI6Iiwic2NoZW1lIHN0YXJ0Iil9LGdldCBob3N0KCl7cmV0dXJuIHRoaXMuX2lzSW52YWxpZD8iIjp0aGlzLl9wb3J0P3RoaXMuX2hvc3QrIjoiK3RoaXMuX3BvcnQ6dGhpcy5faG9zdH0sc2V0IGhvc3QoYSl7IXRoaXMuX2lzSW52YWxpZCYmdGhpcy5faXNSZWxhdGl2ZSYmZy5jYWxsKHRoaXMsYSwiaG9zdCIpfSxnZXQgaG9zdG5hbWUoKXtyZXR1cm4gdGhpcy5faG9zdH0sc2V0IGhvc3RuYW1lKGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJmcuY2FsbCh0aGlzLGEsImhvc3RuYW1lIil9LGdldCBwb3J0KCl7cmV0dXJuIHRoaXMuX3BvcnR9LHNldCBwb3J0KGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJmcuY2FsbCh0aGlzLGEsInBvcnQiKX0sZ2V0IHBhdGhuYW1lKCl7cmV0dXJuIHRoaXMuX2lzSW52YWxpZD8iIjp0aGlzLl9pc1JlbGF0aXZlPyIvIit0aGlzLl9wYXRoLmpvaW4oIi8iKTp0aGlzLl9zY2hlbWVEYXRhfSxzZXQgcGF0aG5hbWUoYSl7IXRoaXMuX2lzSW52YWxpZCYmdGhpcy5faXNSZWxhdGl2ZSYmKHRoaXMuX3BhdGg9W10sZy5jYWxsKHRoaXMsYSwicmVsYXRpdmUgcGF0aCBzdGFydCIpKX0sZ2V0IHNlYXJjaCgpe3JldHVybiB0aGlzLl9pc0ludmFsaWR8fCF0aGlzLl9xdWVyeXx8Ij8iPT10aGlzLl9xdWVyeT8iIjp0aGlzLl9xdWVyeX0sc2V0IHNlYXJjaChhKXshdGhpcy5faXNJbnZhbGlkJiZ0aGlzLl9pc1JlbGF0aXZlJiYodGhpcy5fcXVlcnk9Ij8iLCI/Ij09YVswXSYmKGE9YS5zbGljZSgxKSksZy5jYWxsKHRoaXMsYSwicXVlcnkiKSl9LGdldCBoYXNoKCl7cmV0dXJuIHRoaXMuX2lzSW52YWxpZHx8IXRoaXMuX2ZyYWdtZW50fHwiIyI9PXRoaXMuX2ZyYWdtZW50PyIiOnRoaXMuX2ZyYWdtZW50fSxzZXQgaGFzaChhKXt0aGlzLl9pc0ludmFsaWR8fCh0aGlzLl9mcmFnbWVudD0iIyIsIiMiPT1hWzBdJiYoYT1hLnNsaWNlKDEpKSxnLmNhbGwodGhpcyxhLCJmcmFnbWVudCIpKX19LGEuVVJMPWl9fSh3aW5kb3cpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7Zm9yKHZhciBiPWF8fHt9LGQ9MTtkPGFyZ3VtZW50cy5sZW5ndGg7ZCsrKXt2YXIgZT1hcmd1bWVudHNbZF07dHJ5e2Zvcih2YXIgZiBpbiBlKWMoZixlLGIpfWNhdGNoKGcpe319cmV0dXJuIGJ9ZnVuY3Rpb24gYyhhLGIsYyl7dmFyIGU9ZChiLGEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShjLGEsZSl9ZnVuY3Rpb24gZChhLGIpe2lmKGEpe3ZhciBjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYSxiKTtyZXR1cm4gY3x8ZChPYmplY3QuZ2V0UHJvdG90eXBlT2YoYSksYil9fUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1jLnNsaWNlKCk7cmV0dXJuIGQucHVzaC5hcHBseShkLGFyZ3VtZW50cyksYi5hcHBseShhLGQpfX0pLGEubWl4aW49Yn0od2luZG93LlBsYXRmb3JtKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIsYyl7dmFyIGQ9InN0cmluZyI9PXR5cGVvZiBhP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYSk6YS5jbG9uZU5vZGUoITApO2lmKGQuaW5uZXJIVE1MPWIsYylmb3IodmFyIGUgaW4gYylkLnNldEF0dHJpYnV0ZShlLGNbZV0pO3JldHVybiBkfXZhciBjPURPTVRva2VuTGlzdC5wcm90b3R5cGUuYWRkLGQ9RE9NVG9rZW5MaXN0LnByb3RvdHlwZS5yZW1vdmU7RE9NVG9rZW5MaXN0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oKXtmb3IodmFyIGE9MDthPGFyZ3VtZW50cy5sZW5ndGg7YSsrKWMuY2FsbCh0aGlzLGFyZ3VtZW50c1thXSl9LERPTVRva2VuTGlzdC5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPTA7YTxhcmd1bWVudHMubGVuZ3RoO2ErKylkLmNhbGwodGhpcyxhcmd1bWVudHNbYV0pfSxET01Ub2tlbkxpc3QucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbihhLGIpezE9PWFyZ3VtZW50cy5sZW5ndGgmJihiPSF0aGlzLmNvbnRhaW5zKGEpKSxiP3RoaXMuYWRkKGEpOnRoaXMucmVtb3ZlKGEpfSxET01Ub2tlbkxpc3QucHJvdG90eXBlLnN3aXRjaD1mdW5jdGlvbihhLGIpe2EmJnRoaXMucmVtb3ZlKGEpLGImJnRoaXMuYWRkKGIpfTt2YXIgZT1mdW5jdGlvbigpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzKX0sZj13aW5kb3cuTmFtZWROb2RlTWFwfHx3aW5kb3cuTW96TmFtZWRBdHRyTWFwfHx7fTtpZihOb2RlTGlzdC5wcm90b3R5cGUuYXJyYXk9ZSxmLnByb3RvdHlwZS5hcnJheT1lLEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5hcnJheT1lLCF3aW5kb3cucGVyZm9ybWFuY2Upe3ZhciBnPURhdGUubm93KCk7d2luZG93LnBlcmZvcm1hbmNlPXtub3c6ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS1nfX19d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8KHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9ZnVuY3Rpb24oKXt2YXIgYT13aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lO3JldHVybiBhP2Z1bmN0aW9uKGIpe3JldHVybiBhKGZ1bmN0aW9uKCl7YihwZXJmb3JtYW5jZS5ub3coKSl9KX06ZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGEsMWUzLzYwKX19KCkpLHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZXx8KHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZT1mdW5jdGlvbigpe3JldHVybiB3aW5kb3cud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pDYW5jZWxBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oYSl7Y2xlYXJUaW1lb3V0KGEpfX0oKSk7dmFyIGg9W10saT1mdW5jdGlvbigpe2gucHVzaChhcmd1bWVudHMpfTt3aW5kb3cuUG9seW1lcj1pLGEuZGVsaXZlckRlY2xhcmF0aW9ucz1mdW5jdGlvbigpe3JldHVybiBhLmRlbGl2ZXJEZWNsYXJhdGlvbnM9ZnVuY3Rpb24oKXt0aHJvdyJQb3NzaWJsZSBhdHRlbXB0IHRvIGxvYWQgUG9seW1lciB0d2ljZSJ9LGh9LHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixmdW5jdGlvbigpe3dpbmRvdy5Qb2x5bWVyPT09aSYmKHdpbmRvdy5Qb2x5bWVyPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcignWW91IHRyaWVkIHRvIHVzZSBwb2x5bWVyIHdpdGhvdXQgbG9hZGluZyBpdCBmaXJzdC4gVG8gbG9hZCBwb2x5bWVyLCA8bGluayByZWw9ImltcG9ydCIgaHJlZj0iY29tcG9uZW50cy9wb2x5bWVyL3BvbHltZXIuaHRtbCI+Jyl9KX0pLGEuY3JlYXRlRE9NPWJ9KHdpbmRvdy5QbGF0Zm9ybSksd2luZG93LnRlbXBsYXRlQ29udGVudD13aW5kb3cudGVtcGxhdGVDb250ZW50fHxmdW5jdGlvbihhKXtyZXR1cm4gYS5jb250ZW50fSxmdW5jdGlvbihhKXthPWF8fCh3aW5kb3cuSW5zcGVjdG9yPXt9KTt2YXIgYjt3aW5kb3cuc2luc3BlY3Q9ZnVuY3Rpb24oYSxkKXtifHwoYj13aW5kb3cub3BlbigiIiwiU2hhZG93RE9NIEluc3BlY3RvciIsbnVsbCwhMCksYi5kb2N1bWVudC53cml0ZShjKSxiLmFwaT17c2hhZG93aXplOnNoYWRvd2l6ZX0pLGYoYXx8d3JhcChkb2N1bWVudC5ib2R5KSxkKX07dmFyIGM9WyI8IURPQ1RZUEUgaHRtbD4iLCI8aHRtbD4iLCIgIDxoZWFkPiIsIiAgICA8dGl0bGU+U2hhZG93RE9NIEluc3BlY3RvcjwvdGl0bGU+IiwiICAgIDxzdHlsZT4iLCIgICAgICBib2R5IHsiLCIgICAgICB9IiwiICAgICAgcHJlIHsiLCcgICAgICAgIGZvbnQ6IDlwdCAiQ291cmllciBOZXciLCBtb25vc3BhY2U7JywiICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07IiwiICAgICAgfSIsIiAgICAgIHRhZyB7IiwiICAgICAgICBjb2xvcjogcHVycGxlOyIsIiAgICAgIH0iLCIgICAgICB1bCB7IiwiICAgICAgICAgbWFyZ2luOiAwOyIsIiAgICAgICAgIHBhZGRpbmc6IDA7IiwiICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTsiLCIgICAgICB9IiwiICAgICAgbGkgeyIsIiAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsiLCIgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxOyIsIiAgICAgICAgIHBhZGRpbmc6IDRweCA2cHg7IiwiICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4OyIsIiAgICAgICAgIG1hcmdpbi1yaWdodDogNHB4OyIsIiAgICAgIH0iLCIgICAgPC9zdHlsZT4iLCIgIDwvaGVhZD4iLCIgIDxib2R5PiIsJyAgICA8dWwgaWQ9ImNydW1icyI+JywiICAgIDwvdWw+IiwnICAgIDxkaXYgaWQ9InRyZWUiPjwvZGl2PicsIiAgPC9ib2R5PiIsIjwvaHRtbD4iXS5qb2luKCJcbiIpLGQ9W10sZT1mdW5jdGlvbigpe3ZhciBhPWIuZG9jdW1lbnQsYz1hLnF1ZXJ5U2VsZWN0b3IoIiNjcnVtYnMiKTsKYy50ZXh0Q29udGVudD0iIjtmb3IodmFyIGUsZz0wO2U9ZFtnXTtnKyspe3ZhciBoPWEuY3JlYXRlRWxlbWVudCgiYSIpO2guaHJlZj0iIyIsaC50ZXh0Q29udGVudD1lLmxvY2FsTmFtZSxoLmlkeD1nLGgub25jbGljaz1mdW5jdGlvbihhKXtmb3IodmFyIGI7ZC5sZW5ndGg+dGhpcy5pZHg7KWI9ZC5wb3AoKTtmKGIuc2hhZG93fHxiLGIpLGEucHJldmVudERlZmF1bHQoKX0sYy5hcHBlbmRDaGlsZChhLmNyZWF0ZUVsZW1lbnQoImxpIikpLmFwcGVuZENoaWxkKGgpfX0sZj1mdW5jdGlvbihhLGMpe3ZhciBmPWIuZG9jdW1lbnQ7az1bXTt2YXIgZz1jfHxhO2QucHVzaChnKSxlKCksZi5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiN0cmVlIikuaW5uZXJIVE1MPSI8cHJlPiIraihhLGEuY2hpbGROb2RlcykrIjwvcHJlPiJ9LGc9QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKSxoPXtTVFlMRToxLFNDUklQVDoxLCIjY29tbWVudCI6MSxURU1QTEFURToxfSxpPWZ1bmN0aW9uKGEpe3JldHVybiBoW2Eubm9kZU5hbWVdfSxqPWZ1bmN0aW9uKGEsYixjKXtpZihpKGEpKXJldHVybiIiO3ZhciBkPWN8fCIiO2lmKGEubG9jYWxOYW1lfHwxMT09YS5ub2RlVHlwZSl7dmFyIGU9YS5sb2NhbE5hbWV8fCJzaGFkb3ctcm9vdCIsZj1kK2woYSk7ImNvbnRlbnQiPT1lJiYoYj1hLmdldERpc3RyaWJ1dGVkTm9kZXMoKSksZis9Ijxici8+Ijt2YXIgaD1kKyImbmJzcDsmbmJzcDsiO2coYixmdW5jdGlvbihhKXtmKz1qKGEsYS5jaGlsZE5vZGVzLGgpfSksZis9ZCx7YnI6MX1bZV18fChmKz0iPHRhZz4mbHQ7LyIrZSsiJmd0OzwvdGFnPiIsZis9Ijxici8+Iil9ZWxzZXt2YXIgaz1hLnRleHRDb250ZW50LnRyaW0oKTtmPWs/ZCsnIicraysnIjxici8+JzoiIn1yZXR1cm4gZn0saz1bXSxsPWZ1bmN0aW9uKGEpe3ZhciBiPSI8dGFnPiZsdDsiLGM9YS5sb2NhbE5hbWV8fCJzaGFkb3ctcm9vdCI7cmV0dXJuIGEud2Via2l0U2hhZG93Um9vdHx8YS5zaGFkb3dSb290PyhiKz0nIDxidXR0b24gaWR4PSInK2subGVuZ3RoKyciIG9uY2xpY2s9ImFwaS5zaGFkb3dpemUuY2FsbCh0aGlzKSI+JytjKyI8L2J1dHRvbj4iLGsucHVzaChhKSk6Yis9Y3x8InNoYWRvdy1yb290IixhLmF0dHJpYnV0ZXMmJmcoYS5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGEpe2IrPSIgIithLm5hbWUrKGEudmFsdWU/Jz0iJythLnZhbHVlKyciJzoiIil9KSxiKz0iJmd0OzwvdGFnPiJ9O3NoYWRvd2l6ZT1mdW5jdGlvbigpe3ZhciBhPU51bWJlcih0aGlzLmF0dHJpYnV0ZXMuaWR4LnZhbHVlKSxiPWtbYV07Yj9mKGIud2Via2l0U2hhZG93Um9vdHx8Yi5zaGFkb3dSb290LGIpOihjb25zb2xlLmxvZygiYmFkIHNoYWRvd2l6ZSBub2RlIiksY29uc29sZS5kaXIodGhpcykpfSxhLm91dHB1dD1qfSh3aW5kb3cuSW5zcGVjdG9yKSxmdW5jdGlvbigpe3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7YS50ZXh0Q29udGVudD0iYm9keSB7dHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluIDAuMnM7IH0gXG5ib2R5W3VucmVzb2x2ZWRdIHtvcGFjaXR5OiAwOyBkaXNwbGF5OiBibG9jazsgb3ZlcmZsb3c6IGhpZGRlbjsgfSBcbiI7dmFyIGI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiaGVhZCIpO2IuaW5zZXJ0QmVmb3JlKGEsYi5maXJzdENoaWxkKX0oUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxiKXtyZXR1cm4gYj1ifHxbXSxiLm1hcHx8KGI9W2JdKSxhLmFwcGx5KHRoaXMsYi5tYXAoZCkpfWZ1bmN0aW9uIGMoYSxjLGQpe3ZhciBlO3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuO2Nhc2UgMTplPW51bGw7YnJlYWs7Y2FzZSAyOmU9Yy5hcHBseSh0aGlzKTticmVhaztkZWZhdWx0OmU9YihkLGMpfWZbYV09ZX1mdW5jdGlvbiBkKGEpe3JldHVybiBmW2FdfWZ1bmN0aW9uIGUoYSxjKXtIVE1MSW1wb3J0cy53aGVuSW1wb3J0c1JlYWR5KGZ1bmN0aW9uKCl7YihjLGEpfSl9dmFyIGY9e307YS5tYXJzaGFsPWQsYS5tb2R1bGU9YyxhLnVzaW5nPWV9KHdpbmRvdyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtmLnRleHRDb250ZW50PWQrKyxlLnB1c2goYSl9ZnVuY3Rpb24gYygpe2Zvcig7ZS5sZW5ndGg7KWUuc2hpZnQoKSgpfXZhciBkPTAsZT1bXSxmPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcod2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fEpzTXV0YXRpb25PYnNlcnZlcikoYykub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSksYS5lbmRPZk1pY3JvdGFzaz1ifShQbGF0Zm9ybSksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGIsZCl7cmV0dXJuIGEucmVwbGFjZShkLGZ1bmN0aW9uKGEsZCxlLGYpe3ZhciBnPWUucmVwbGFjZSgvWyInXS9nLCIiKTtyZXR1cm4gZz1jKGIsZyksZCsiJyIrZysiJyIrZn0pfWZ1bmN0aW9uIGMoYSxiKXt2YXIgYz1uZXcgVVJMKGIsYSk7cmV0dXJuIGQoYy5ocmVmKX1mdW5jdGlvbiBkKGEpe3ZhciBiPWRvY3VtZW50LmJhc2VVUkksYz1uZXcgVVJMKGEsYik7cmV0dXJuIGMuaG9zdD09PWIuaG9zdCYmYy5wb3J0PT09Yi5wb3J0JiZjLnByb3RvY29sPT09Yi5wcm90b2NvbD9lKGIucGF0aG5hbWUsYy5wYXRobmFtZSk6YX1mdW5jdGlvbiBlKGEsYil7Zm9yKHZhciBjPWEuc3BsaXQoIi8iKSxkPWIuc3BsaXQoIi8iKTtjLmxlbmd0aCYmY1swXT09PWRbMF07KWMuc2hpZnQoKSxkLnNoaWZ0KCk7Zm9yKHZhciBlPTAsZj1jLmxlbmd0aC0xO2Y+ZTtlKyspZC51bnNoaWZ0KCIuLiIpO3JldHVybiBkLmpvaW4oIi8iKX12YXIgZj17cmVzb2x2ZURvbTpmdW5jdGlvbihhLGIpe2I9Ynx8YS5vd25lckRvY3VtZW50LmJhc2VVUkksdGhpcy5yZXNvbHZlQXR0cmlidXRlcyhhLGIpLHRoaXMucmVzb2x2ZVN0eWxlcyhhLGIpO3ZhciBjPWEucXVlcnlTZWxlY3RvckFsbCgidGVtcGxhdGUiKTtpZihjKWZvcih2YXIgZCxlPTAsZj1jLmxlbmd0aDtmPmUmJihkPWNbZV0pO2UrKylkLmNvbnRlbnQmJnRoaXMucmVzb2x2ZURvbShkLmNvbnRlbnQsYil9LHJlc29sdmVUZW1wbGF0ZTpmdW5jdGlvbihhKXt0aGlzLnJlc29sdmVEb20oYS5jb250ZW50LGEub3duZXJEb2N1bWVudC5iYXNlVVJJKX0scmVzb2x2ZVN0eWxlczpmdW5jdGlvbihhLGIpe3ZhciBjPWEucXVlcnlTZWxlY3RvckFsbCgic3R5bGUiKTtpZihjKWZvcih2YXIgZCxlPTAsZj1jLmxlbmd0aDtmPmUmJihkPWNbZV0pO2UrKyl0aGlzLnJlc29sdmVTdHlsZShkLGIpfSxyZXNvbHZlU3R5bGU6ZnVuY3Rpb24oYSxiKXtiPWJ8fGEub3duZXJEb2N1bWVudC5iYXNlVVJJLGEudGV4dENvbnRlbnQ9dGhpcy5yZXNvbHZlQ3NzVGV4dChhLnRleHRDb250ZW50LGIpfSxyZXNvbHZlQ3NzVGV4dDpmdW5jdGlvbihhLGMpe3JldHVybiBhPWIoYSxjLGcpLGIoYSxjLGgpfSxyZXNvbHZlQXR0cmlidXRlczpmdW5jdGlvbihhLGIpe2EuaGFzQXR0cmlidXRlcyYmYS5oYXNBdHRyaWJ1dGVzKCkmJnRoaXMucmVzb2x2ZUVsZW1lbnRBdHRyaWJ1dGVzKGEsYik7dmFyIGM9YSYmYS5xdWVyeVNlbGVjdG9yQWxsKGopO2lmKGMpZm9yKHZhciBkLGU9MCxmPWMubGVuZ3RoO2Y+ZSYmKGQ9Y1tlXSk7ZSsrKXRoaXMucmVzb2x2ZUVsZW1lbnRBdHRyaWJ1dGVzKGQsYil9LHJlc29sdmVFbGVtZW50QXR0cmlidXRlczpmdW5jdGlvbihhLGIpe2I9Ynx8YS5vd25lckRvY3VtZW50LmJhc2VVUkksaS5mb3JFYWNoKGZ1bmN0aW9uKGQpe3ZhciBlPWEuYXR0cmlidXRlc1tkXTtpZihlJiZlLnZhbHVlJiZlLnZhbHVlLnNlYXJjaChrKTwwKXt2YXIgZj1jKGIsZS52YWx1ZSk7ZS52YWx1ZT1mfX0pfX0sZz0vKHVybFwoKShbXildKikoXCkpL2csaD0vKEBpbXBvcnRbXHNdKyg/IXVybFwoKSkoW147XSopKDspL2csaT1bImhyZWYiLCJzcmMiLCJhY3Rpb24iXSxqPSJbIitpLmpvaW4oIl0sWyIpKyJdIixrPSJ7ey4qfX0iO2EudXJsUmVzb2x2ZXI9Zn0oUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7dS5wdXNoKGEpLHR8fCh0PSEwLHEoZCkpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCYmd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChhKXx8YX1mdW5jdGlvbiBkKCl7dD0hMTt2YXIgYT11O3U9W10sYS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudWlkXy1iLnVpZF99KTt2YXIgYj0hMTthLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9YS50YWtlUmVjb3JkcygpO2UoYSksYy5sZW5ndGgmJihhLmNhbGxiYWNrXyhjLGEpLGI9ITApfSksYiYmZCgpfWZ1bmN0aW9uIGUoYSl7YS5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgYz1wLmdldChiKTtjJiZjLmZvckVhY2goZnVuY3Rpb24oYil7Yi5vYnNlcnZlcj09PWEmJmIucmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzKCl9KX0pfWZ1bmN0aW9uIGYoYSxiKXtmb3IodmFyIGM9YTtjO2M9Yy5wYXJlbnROb2RlKXt2YXIgZD1wLmdldChjKTtpZihkKWZvcih2YXIgZT0wO2U8ZC5sZW5ndGg7ZSsrKXt2YXIgZj1kW2VdLGc9Zi5vcHRpb25zO2lmKGM9PT1hfHxnLnN1YnRyZWUpe3ZhciBoPWIoZyk7aCYmZi5lbnF1ZXVlKGgpfX19fWZ1bmN0aW9uIGcoYSl7dGhpcy5jYWxsYmFja189YSx0aGlzLm5vZGVzXz1bXSx0aGlzLnJlY29yZHNfPVtdLHRoaXMudWlkXz0rK3Z9ZnVuY3Rpb24gaChhLGIpe3RoaXMudHlwZT1hLHRoaXMudGFyZ2V0PWIsdGhpcy5hZGRlZE5vZGVzPVtdLHRoaXMucmVtb3ZlZE5vZGVzPVtdLHRoaXMucHJldmlvdXNTaWJsaW5nPW51bGwsdGhpcy5uZXh0U2libGluZz1udWxsLHRoaXMuYXR0cmlidXRlTmFtZT1udWxsLHRoaXMuYXR0cmlidXRlTmFtZXNwYWNlPW51bGwsdGhpcy5vbGRWYWx1ZT1udWxsfWZ1bmN0aW9uIGkoYSl7dmFyIGI9bmV3IGgoYS50eXBlLGEudGFyZ2V0KTtyZXR1cm4gYi5hZGRlZE5vZGVzPWEuYWRkZWROb2Rlcy5zbGljZSgpLGIucmVtb3ZlZE5vZGVzPWEucmVtb3ZlZE5vZGVzLnNsaWNlKCksYi5wcmV2aW91c1NpYmxpbmc9YS5wcmV2aW91c1NpYmxpbmcsYi5uZXh0U2libGluZz1hLm5leHRTaWJsaW5nLGIuYXR0cmlidXRlTmFtZT1hLmF0dHJpYnV0ZU5hbWUsYi5hdHRyaWJ1dGVOYW1lc3BhY2U9YS5hdHRyaWJ1dGVOYW1lc3BhY2UsYi5vbGRWYWx1ZT1hLm9sZFZhbHVlLGJ9ZnVuY3Rpb24gaihhLGIpe3JldHVybiB3PW5ldyBoKGEsYil9ZnVuY3Rpb24gayhhKXtyZXR1cm4geD94Oih4PWkodykseC5vbGRWYWx1ZT1hLHgpfWZ1bmN0aW9uIGwoKXt3PXg9dm9pZCAwfWZ1bmN0aW9uIG0oYSl7cmV0dXJuIGE9PT14fHxhPT09d31mdW5jdGlvbiBuKGEsYil7cmV0dXJuIGE9PT1iP2E6eCYmbShhKT94Om51bGx9ZnVuY3Rpb24gbyhhLGIsYyl7dGhpcy5vYnNlcnZlcj1hLHRoaXMudGFyZ2V0PWIsdGhpcy5vcHRpb25zPWMsdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdfXZhciBwPW5ldyBXZWFrTWFwLHE9d2luZG93Lm1zU2V0SW1tZWRpYXRlO2lmKCFxKXt2YXIgcj1bXSxzPVN0cmluZyhNYXRoLnJhbmRvbSgpKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24oYSl7aWYoYS5kYXRhPT09cyl7dmFyIGI9cjtyPVtdLGIuZm9yRWFjaChmdW5jdGlvbihhKXthKCl9KX19KSxxPWZ1bmN0aW9uKGEpe3IucHVzaChhKSx3aW5kb3cucG9zdE1lc3NhZ2UocywiKiIpfX12YXIgdD0hMSx1PVtdLHY9MDtnLnByb3RvdHlwZT17b2JzZXJ2ZTpmdW5jdGlvbihhLGIpe2lmKGE9YyhhKSwhYi5jaGlsZExpc3QmJiFiLmF0dHJpYnV0ZXMmJiFiLmNoYXJhY3RlckRhdGF8fGIuYXR0cmlidXRlT2xkVmFsdWUmJiFiLmF0dHJpYnV0ZXN8fGIuYXR0cmlidXRlRmlsdGVyJiZiLmF0dHJpYnV0ZUZpbHRlci5sZW5ndGgmJiFiLmF0dHJpYnV0ZXN8fGIuY2hhcmFjdGVyRGF0YU9sZFZhbHVlJiYhYi5jaGFyYWN0ZXJEYXRhKXRocm93IG5ldyBTeW50YXhFcnJvcjt2YXIgZD1wLmdldChhKTtkfHxwLnNldChhLGQ9W10pO2Zvcih2YXIgZSxmPTA7ZjxkLmxlbmd0aDtmKyspaWYoZFtmXS5vYnNlcnZlcj09PXRoaXMpe2U9ZFtmXSxlLnJlbW92ZUxpc3RlbmVycygpLGUub3B0aW9ucz1iO2JyZWFrfWV8fChlPW5ldyBvKHRoaXMsYSxiKSxkLnB1c2goZSksdGhpcy5ub2Rlc18ucHVzaChhKSksZS5hZGRMaXN0ZW5lcnMoKX0sZGlzY29ubmVjdDpmdW5jdGlvbigpe3RoaXMubm9kZXNfLmZvckVhY2goZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXAuZ2V0KGEpLGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9YltjXTtpZihkLm9ic2VydmVyPT09dGhpcyl7ZC5yZW1vdmVMaXN0ZW5lcnMoKSxiLnNwbGljZShjLDEpO2JyZWFrfX19LHRoaXMpLHRoaXMucmVjb3Jkc189W119LHRha2VSZWNvcmRzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWNvcmRzXztyZXR1cm4gdGhpcy5yZWNvcmRzXz1bXSxhfX07dmFyIHcseDtvLnByb3RvdHlwZT17ZW5xdWV1ZTpmdW5jdGlvbihhKXt2YXIgYz10aGlzLm9ic2VydmVyLnJlY29yZHNfLGQ9Yy5sZW5ndGg7aWYoYy5sZW5ndGg+MCl7dmFyIGU9Y1tkLTFdLGY9bihlLGEpO2lmKGYpcmV0dXJuIHZvaWQoY1tkLTFdPWYpfWVsc2UgYih0aGlzLm9ic2VydmVyKTtjW2RdPWF9LGFkZExpc3RlbmVyczpmdW5jdGlvbigpe3RoaXMuYWRkTGlzdGVuZXJzXyh0aGlzLnRhcmdldCl9LGFkZExpc3RlbmVyc186ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5vcHRpb25zO2IuYXR0cmlidXRlcyYmYS5hZGRFdmVudExpc3RlbmVyKCJET01BdHRyTW9kaWZpZWQiLHRoaXMsITApLGIuY2hhcmFjdGVyRGF0YSYmYS5hZGRFdmVudExpc3RlbmVyKCJET01DaGFyYWN0ZXJEYXRhTW9kaWZpZWQiLHRoaXMsITApLGIuY2hpbGRMaXN0JiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVJbnNlcnRlZCIsdGhpcywhMCksKGIuY2hpbGRMaXN0fHxiLnN1YnRyZWUpJiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVSZW1vdmVkIix0aGlzLCEwKX0scmVtb3ZlTGlzdGVuZXJzOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVMaXN0ZW5lcnNfKHRoaXMudGFyZ2V0KX0scmVtb3ZlTGlzdGVuZXJzXzpmdW5jdGlvbihhKXt2YXIgYj10aGlzLm9wdGlvbnM7Yi5hdHRyaWJ1dGVzJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUF0dHJNb2RpZmllZCIsdGhpcywhMCksYi5jaGFyYWN0ZXJEYXRhJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCIsdGhpcywhMCksYi5jaGlsZExpc3QmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZUluc2VydGVkIix0aGlzLCEwKSwoYi5jaGlsZExpc3R8fGIuc3VidHJlZSkmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZVJlbW92ZWQiLHRoaXMsITApfSxhZGRUcmFuc2llbnRPYnNlcnZlcjpmdW5jdGlvbihhKXtpZihhIT09dGhpcy50YXJnZXQpe3RoaXMuYWRkTGlzdGVuZXJzXyhhKSx0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChhKTt2YXIgYj1wLmdldChhKTtifHxwLnNldChhLGI9W10pLGIucHVzaCh0aGlzKX19LHJlbW92ZVRyYW5zaWVudE9ic2VydmVyczpmdW5jdGlvbigpe3ZhciBhPXRoaXMudHJhbnNpZW50T2JzZXJ2ZWROb2Rlczt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W10sYS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMucmVtb3ZlTGlzdGVuZXJzXyhhKTtmb3IodmFyIGI9cC5nZXQoYSksYz0wO2M8Yi5sZW5ndGg7YysrKWlmKGJbY109PT10aGlzKXtiLnNwbGljZShjLDEpO2JyZWFrfX0sdGhpcyl9LGhhbmRsZUV2ZW50OmZ1bmN0aW9uKGEpe3N3aXRjaChhLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGEudHlwZSl7Y2FzZSJET01BdHRyTW9kaWZpZWQiOnZhciBiPWEuYXR0ck5hbWUsYz1hLnJlbGF0ZWROb2RlLm5hbWVzcGFjZVVSSSxkPWEudGFyZ2V0LGU9bmV3IGooImF0dHJpYnV0ZXMiLGQpO2UuYXR0cmlidXRlTmFtZT1iLGUuYXR0cmlidXRlTmFtZXNwYWNlPWM7dmFyIGc9YS5hdHRyQ2hhbmdlPT09TXV0YXRpb25FdmVudC5BRERJVElPTj9udWxsOmEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4hYS5hdHRyaWJ1dGVzfHxhLmF0dHJpYnV0ZUZpbHRlciYmYS5hdHRyaWJ1dGVGaWx0ZXIubGVuZ3RoJiYtMT09PWEuYXR0cmlidXRlRmlsdGVyLmluZGV4T2YoYikmJi0xPT09YS5hdHRyaWJ1dGVGaWx0ZXIuaW5kZXhPZihjKT92b2lkIDA6YS5hdHRyaWJ1dGVPbGRWYWx1ZT9rKGcpOmV9KTticmVhaztjYXNlIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCI6dmFyIGQ9YS50YXJnZXQsZT1qKCJjaGFyYWN0ZXJEYXRhIixkKSxnPWEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4gYS5jaGFyYWN0ZXJEYXRhP2EuY2hhcmFjdGVyRGF0YU9sZFZhbHVlP2soZyk6ZTp2b2lkIDB9KTticmVhaztjYXNlIkRPTU5vZGVSZW1vdmVkIjp0aGlzLmFkZFRyYW5zaWVudE9ic2VydmVyKGEudGFyZ2V0KTtjYXNlIkRPTU5vZGVJbnNlcnRlZCI6dmFyIGgsaSxkPWEucmVsYXRlZE5vZGUsbT1hLnRhcmdldDsiRE9NTm9kZUluc2VydGVkIj09PWEudHlwZT8oaD1bbV0saT1bXSk6KGg9W10saT1bbV0pO3ZhciBuPW0ucHJldmlvdXNTaWJsaW5nLG89bS5uZXh0U2libGluZyxlPWooImNoaWxkTGlzdCIsZCk7ZS5hZGRlZE5vZGVzPWgsZS5yZW1vdmVkTm9kZXM9aSxlLnByZXZpb3VzU2libGluZz1uLGUubmV4dFNpYmxpbmc9byxmKGQsZnVuY3Rpb24oYSl7cmV0dXJuIGEuY2hpbGRMaXN0P2U6dm9pZCAwfSl9bCgpfX0sYS5Kc011dGF0aW9uT2JzZXJ2ZXI9ZyxhLk11dGF0aW9uT2JzZXJ2ZXJ8fChhLk11dGF0aW9uT2JzZXJ2ZXI9Zyl9KHRoaXMpLHdpbmRvdy5IVE1MSW1wb3J0cz13aW5kb3cuSFRNTEltcG9ydHN8fHtmbGFnczp7fX0sZnVuY3Rpb24oYSl7dmFyIGI9KGEucGF0aCxhLnhociksYz1hLmZsYWdzLGQ9ZnVuY3Rpb24oYSxiKXt0aGlzLmNhY2hlPXt9LHRoaXMub25sb2FkPWEsdGhpcy5vbmNvbXBsZXRlPWIsdGhpcy5pbmZsaWdodD0wLHRoaXMucGVuZGluZz17fX07ZC5wcm90b3R5cGU9e2FkZE5vZGVzOmZ1bmN0aW9uKGEpe3RoaXMuaW5mbGlnaHQrPWEubGVuZ3RoO2Zvcih2YXIgYixjPTAsZD1hLmxlbmd0aDtkPmMmJihiPWFbY10pO2MrKyl0aGlzLnJlcXVpcmUoYik7dGhpcy5jaGVja0RvbmUoKX0sYWRkTm9kZTpmdW5jdGlvbihhKXt0aGlzLmluZmxpZ2h0KyssdGhpcy5yZXF1aXJlKGEpLHRoaXMuY2hlY2tEb25lKCl9LHJlcXVpcmU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5zcmN8fGEuaHJlZjthLl9fbm9kZVVybD1iLHRoaXMuZGVkdXBlKGIsYSl8fHRoaXMuZmV0Y2goYixhKX0sZGVkdXBlOmZ1bmN0aW9uKGEsYil7aWYodGhpcy5wZW5kaW5nW2FdKXJldHVybiB0aGlzLnBlbmRpbmdbYV0ucHVzaChiKSwhMDtyZXR1cm4gdGhpcy5jYWNoZVthXT8odGhpcy5vbmxvYWQoYSxiLHRoaXMuY2FjaGVbYV0pLHRoaXMudGFpbCgpLCEwKToodGhpcy5wZW5kaW5nW2FdPVtiXSwhMSl9LGZldGNoOmZ1bmN0aW9uKGEsZCl7Yy5sb2FkJiZjb25zb2xlLmxvZygiZmV0Y2giLGEsZCk7dmFyIGU9ZnVuY3Rpb24oYixjKXt0aGlzLnJlY2VpdmUoYSxkLGIsYyl9LmJpbmQodGhpcyk7Yi5sb2FkKGEsZSl9LHJlY2VpdmU6ZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy5jYWNoZVthXT1kO2Zvcih2YXIgZSxmPXRoaXMucGVuZGluZ1thXSxnPTAsaD1mLmxlbmd0aDtoPmcmJihlPWZbZ10pO2crKyl0aGlzLm9ubG9hZChhLGUsZCksdGhpcy50YWlsKCk7dGhpcy5wZW5kaW5nW2FdPW51bGx9LHRhaWw6ZnVuY3Rpb24oKXstLXRoaXMuaW5mbGlnaHQsdGhpcy5jaGVja0RvbmUoKX0sY2hlY2tEb25lOmZ1bmN0aW9uKCl7dGhpcy5pbmZsaWdodHx8dGhpcy5vbmNvbXBsZXRlKCl9fSxiPWJ8fHthc3luYzohMCxvazpmdW5jdGlvbihhKXtyZXR1cm4gYS5zdGF0dXM+PTIwMCYmYS5zdGF0dXM8MzAwfHwzMDQ9PT1hLnN0YXR1c3x8MD09PWEuc3RhdHVzfSxsb2FkOmZ1bmN0aW9uKGMsZCxlKXt2YXIgZj1uZXcgWE1MSHR0cFJlcXVlc3Q7cmV0dXJuKGEuZmxhZ3MuZGVidWd8fGEuZmxhZ3MuYnVzdCkmJihjKz0iPyIrTWF0aC5yYW5kb20oKSksZi5vcGVuKCJHRVQiLGMsYi5hc3luYyksZi5hZGRFdmVudExpc3RlbmVyKCJyZWFkeXN0YXRlY2hhbmdlIixmdW5jdGlvbigpezQ9PT1mLnJlYWR5U3RhdGUmJmQuY2FsbChlLCFiLm9rKGYpJiZmLGYucmVzcG9uc2V8fGYucmVzcG9uc2VUZXh0LGMpfSksZi5zZW5kKCksZn0sbG9hZERvY3VtZW50OmZ1bmN0aW9uKGEsYixjKXt0aGlzLmxvYWQoYSxiLGMpLnJlc3BvbnNlVHlwZT0iZG9jdW1lbnQifX0sYS54aHI9YixhLkxvYWRlcj1kfSh3aW5kb3cuSFRNTEltcG9ydHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuImxpbmsiPT09YS5sb2NhbE5hbWUmJmEucmVsPT09Z31mdW5jdGlvbiBjKGEpe3ZhciBiLGM9ZChhKTt0cnl7Yj1idG9hKGMpfWNhdGNoKGUpe2I9YnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYykpKSxjb25zb2xlLndhcm4oIlNjcmlwdCBjb250YWluZWQgbm9uLWxhdGluIGNoYXJhY3RlcnMgdGhhdCB3ZXJlIGZvcmNlZCB0byBsYXRpbi4gU29tZSBjaGFyYWN0ZXJzIG1heSBiZSB3cm9uZy4iLGEpfXJldHVybiJkYXRhOnRleHQvamF2YXNjcmlwdDtiYXNlNjQsIitifWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGEudGV4dENvbnRlbnQrZShhKX1mdW5jdGlvbiBlKGEpe3ZhciBiPWEuX19ub2RlVXJsO2lmKCFiKXtiPWEub3duZXJEb2N1bWVudC5iYXNlVVJJO3ZhciBjPSJbIitNYXRoLmZsb29yKDFlMyooTWF0aC5yYW5kb20oKSsxKSkrIl0iLGQ9YS50ZXh0Q29udGVudC5tYXRjaCgvUG9seW1lclwoWyciXShbXiciXSopLyk7Yz1kJiZkWzFdfHxjLGIrPSIvIitjKyIuanMifXJldHVybiJcbi8vIyBzb3VyY2VVUkw9IitiKyJcbiJ9ZnVuY3Rpb24gZihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtyZXR1cm4gYi50ZXh0Q29udGVudD1hLnRleHRDb250ZW50LG4ucmVzb2x2ZVVybHNJblN0eWxlKGIpLGJ9dmFyIGc9ImltcG9ydCIsaD1hLmZsYWdzLGk9L1RyaWRlbnQvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaj13aW5kb3cuU2hhZG93RE9NUG9seWZpbGw/d2luZG93LlNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChkb2N1bWVudCk6ZG9jdW1lbnQsaz17ZG9jdW1lbnRTZWxlY3RvcnM6ImxpbmtbcmVsPSIrZysiXSIsaW1wb3J0c1NlbGVjdG9yczpbImxpbmtbcmVsPSIrZysiXSIsImxpbmtbcmVsPXN0eWxlc2hlZXRdIiwic3R5bGUiLCJzY3JpcHQ6bm90KFt0eXBlXSkiLCdzY3JpcHRbdHlwZT0idGV4dC9qYXZhc2NyaXB0Il0nXS5qb2luKCIsIiksbWFwOntsaW5rOiJwYXJzZUxpbmsiLHNjcmlwdDoicGFyc2VTY3JpcHQiLHN0eWxlOiJwYXJzZVN0eWxlIn0scGFyc2VOZXh0OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uZXh0VG9QYXJzZSgpO2EmJnRoaXMucGFyc2UoYSl9LHBhcnNlOmZ1bmN0aW9uKGEpe2lmKHRoaXMuaXNQYXJzZWQoYSkpcmV0dXJuIHZvaWQoaC5wYXJzZSYmY29uc29sZS5sb2coIlslc10gaXMgYWxyZWFkeSBwYXJzZWQiLGEubG9jYWxOYW1lKSk7dmFyIGI9dGhpc1t0aGlzLm1hcFthLmxvY2FsTmFtZV1dO2ImJih0aGlzLm1hcmtQYXJzaW5nKGEpLGIuY2FsbCh0aGlzLGEpKX0sbWFya1BhcnNpbmc6ZnVuY3Rpb24oYSl7aC5wYXJzZSYmY29uc29sZS5sb2coInBhcnNpbmciLGEpLHRoaXMucGFyc2luZ0VsZW1lbnQ9YX0sbWFya1BhcnNpbmdDb21wbGV0ZTpmdW5jdGlvbihhKXthLl9faW1wb3J0UGFyc2VkPSEwLGEuX19pbXBvcnRFbGVtZW50JiYoYS5fX2ltcG9ydEVsZW1lbnQuX19pbXBvcnRQYXJzZWQ9ITApLHRoaXMucGFyc2luZ0VsZW1lbnQ9bnVsbCxoLnBhcnNlJiZjb25zb2xlLmxvZygiY29tcGxldGVkIixhKSx0aGlzLnBhcnNlTmV4dCgpfSxwYXJzZUltcG9ydDpmdW5jdGlvbihhKXtpZihhLmltcG9ydC5fX2ltcG9ydFBhcnNlZD0hMCxIVE1MSW1wb3J0cy5fX2ltcG9ydHNQYXJzaW5nSG9vayYmSFRNTEltcG9ydHMuX19pbXBvcnRzUGFyc2luZ0hvb2soYSksYS5kaXNwYXRjaEV2ZW50KGEuX19yZXNvdXJjZT9uZXcgQ3VzdG9tRXZlbnQoImxvYWQiLHtidWJibGVzOiExfSk6bmV3IEN1c3RvbUV2ZW50KCJlcnJvciIse2J1YmJsZXM6ITF9KSksYS5fX3BlbmRpbmcpZm9yKHZhciBiO2EuX19wZW5kaW5nLmxlbmd0aDspYj1hLl9fcGVuZGluZy5zaGlmdCgpLGImJmIoe3RhcmdldDphfSk7dGhpcy5tYXJrUGFyc2luZ0NvbXBsZXRlKGEpfSxwYXJzZUxpbms6ZnVuY3Rpb24oYSl7YihhKT90aGlzLnBhcnNlSW1wb3J0KGEpOihhLmhyZWY9YS5ocmVmLHRoaXMucGFyc2VHZW5lcmljKGEpKX0scGFyc2VTdHlsZTpmdW5jdGlvbihhKXt2YXIgYj1hO2E9ZihhKSxhLl9faW1wb3J0RWxlbWVudD1iLHRoaXMucGFyc2VHZW5lcmljKGEpfSxwYXJzZUdlbmVyaWM6ZnVuY3Rpb24oYSl7dGhpcy50cmFja0VsZW1lbnQoYSksZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChhKX0sdHJhY2tFbGVtZW50OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPWZ1bmN0aW9uKGQpe2ImJmIoZCksYy5tYXJrUGFyc2luZ0NvbXBsZXRlKGEpfTtpZihhLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGQpLGEuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLGQpLGkmJiJzdHlsZSI9PT1hLmxvY2FsTmFtZSl7dmFyIGU9ITE7aWYoLTE9PWEudGV4dENvbnRlbnQuaW5kZXhPZigiQGltcG9ydCIpKWU9ITA7ZWxzZSBpZihhLnNoZWV0KXtlPSEwO2Zvcih2YXIgZixnPWEuc2hlZXQuY3NzUnVsZXMsaD1nP2cubGVuZ3RoOjAsaj0wO2g+aiYmKGY9Z1tqXSk7aisrKWYudHlwZT09PUNTU1J1bGUuSU1QT1JUX1JVTEUmJihlPWUmJkJvb2xlYW4oZi5zdHlsZVNoZWV0KSl9ZSYmYS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgibG9hZCIse2J1YmJsZXM6ITF9KSl9fSxwYXJzZVNjcmlwdDpmdW5jdGlvbihiKXt2YXIgZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtkLl9faW1wb3J0RWxlbWVudD1iLGQuc3JjPWIuc3JjP2Iuc3JjOmMoYiksYS5jdXJyZW50U2NyaXB0PWIsdGhpcy50cmFja0VsZW1lbnQoZCxmdW5jdGlvbigpe2QucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkKSxhLmN1cnJlbnRTY3JpcHQ9bnVsbH0pLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZCl9LG5leHRUb1BhcnNlOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMucGFyc2luZ0VsZW1lbnQmJnRoaXMubmV4dFRvUGFyc2VJbkRvYyhqKX0sbmV4dFRvUGFyc2VJbkRvYzpmdW5jdGlvbihhLGMpe2Zvcih2YXIgZCxlPWEucXVlcnlTZWxlY3RvckFsbCh0aGlzLnBhcnNlU2VsZWN0b3JzRm9yTm9kZShhKSksZj0wLGc9ZS5sZW5ndGg7Zz5mJiYoZD1lW2ZdKTtmKyspaWYoIXRoaXMuaXNQYXJzZWQoZCkpcmV0dXJuIHRoaXMuaGFzUmVzb3VyY2UoZCk/YihkKT90aGlzLm5leHRUb1BhcnNlSW5Eb2MoZC5pbXBvcnQsZCk6ZDp2b2lkIDA7cmV0dXJuIGN9LHBhcnNlU2VsZWN0b3JzRm9yTm9kZTpmdW5jdGlvbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnR8fGE7cmV0dXJuIGI9PT1qP3RoaXMuZG9jdW1lbnRTZWxlY3RvcnM6dGhpcy5pbXBvcnRzU2VsZWN0b3JzfSxpc1BhcnNlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5fX2ltcG9ydFBhcnNlZH0saGFzUmVzb3VyY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGIoYSkmJiFhLmltcG9ydD8hMTohMH19LGw9Lyh1cmxcKCkoW14pXSopKFwpKS9nLG09LyhAaW1wb3J0W1xzXSsoPyF1cmxcKCkpKFteO10qKSg7KS9nLG49e3Jlc29sdmVVcmxzSW5TdHlsZTpmdW5jdGlvbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQsYz1iLmNyZWF0ZUVsZW1lbnQoImEiKTtyZXR1cm4gYS50ZXh0Q29udGVudD10aGlzLnJlc29sdmVVcmxzSW5Dc3NUZXh0KGEudGV4dENvbnRlbnQsYyksYX0scmVzb2x2ZVVybHNJbkNzc1RleHQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLnJlcGxhY2VVcmxzKGEsYixsKTtyZXR1cm4gYz10aGlzLnJlcGxhY2VVcmxzKGMsYixtKX0scmVwbGFjZVVybHM6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhLnJlcGxhY2UoYyxmdW5jdGlvbihhLGMsZCxlKXt2YXIgZj1kLnJlcGxhY2UoL1siJ10vZywiIik7cmV0dXJuIGIuaHJlZj1mLGY9Yi5ocmVmLGMrIiciK2YrIiciK2V9KX19O2EucGFyc2VyPWssYS5wYXRoPW4sYS5pc0lFPWl9KEhUTUxJbXBvcnRzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe3JldHVybiBjKGEsbSl9ZnVuY3Rpb24gYyhhLGIpe3JldHVybiJsaW5rIj09PWEubG9jYWxOYW1lJiZhLmdldEF0dHJpYnV0ZSgicmVsIik9PT1ifWZ1bmN0aW9uIGQoYSxiKXt2YXIgYz1hO2MgaW5zdGFuY2VvZiBEb2N1bWVudHx8KGM9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KG0pKSxjLl9VUkw9Yjt2YXIgZD1jLmNyZWF0ZUVsZW1lbnQoImJhc2UiKTtkLnNldEF0dHJpYnV0ZSgiaHJlZiIsYiksYy5iYXNlVVJJfHwoYy5iYXNlVVJJPWIpO3ZhciBlPWMuY3JlYXRlRWxlbWVudCgibWV0YSIpO3JldHVybiBlLnNldEF0dHJpYnV0ZSgiY2hhcnNldCIsInV0Zi04IiksYy5oZWFkLmFwcGVuZENoaWxkKGUpLGMuaGVhZC5hcHBlbmRDaGlsZChkKSxhIGluc3RhbmNlb2YgRG9jdW1lbnR8fChjLmJvZHkuaW5uZXJIVE1MPWEpLHdpbmRvdy5IVE1MVGVtcGxhdGVFbGVtZW50JiZIVE1MVGVtcGxhdGVFbGVtZW50LmJvb3RzdHJhcCYmSFRNTFRlbXBsYXRlRWxlbWVudC5ib290c3RyYXAoYyksY31mdW5jdGlvbiBlKGEsYil7Yj1ifHxuLGcoZnVuY3Rpb24oKXtoKGEsYil9LGIpfWZ1bmN0aW9uIGYoYSl7cmV0dXJuImNvbXBsZXRlIj09PWEucmVhZHlTdGF0ZXx8YS5yZWFkeVN0YXRlPT09dX1mdW5jdGlvbiBnKGEsYil7aWYoZihiKSlhJiZhKCk7ZWxzZXt2YXIgYz1mdW5jdGlvbigpeygiY29tcGxldGUiPT09Yi5yZWFkeVN0YXRlfHxiLnJlYWR5U3RhdGU9PT11KSYmKGIucmVtb3ZlRXZlbnRMaXN0ZW5lcih2LGMpLGcoYSxiKSl9O2IuYWRkRXZlbnRMaXN0ZW5lcih2LGMpfX1mdW5jdGlvbiBoKGEsYil7ZnVuY3Rpb24gYygpe2Y9PWcmJnJlcXVlc3RBbmltYXRpb25GcmFtZShhKX1mdW5jdGlvbiBkKCl7ZisrLGMoKX12YXIgZT1iLnF1ZXJ5U2VsZWN0b3JBbGwoImxpbmtbcmVsPWltcG9ydF0iKSxmPTAsZz1lLmxlbmd0aDtpZihnKWZvcih2YXIgaCxqPTA7Zz5qJiYoaD1lW2pdKTtqKyspaShoKT9kLmNhbGwoaCk6KGguYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZCksaC5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsZCkpO2Vsc2UgYygpfWZ1bmN0aW9uIGkoYSl7cmV0dXJuIGs/YS5pbXBvcnQmJiJsb2FkaW5nIiE9PWEuaW1wb3J0LnJlYWR5U3RhdGU6YS5fX2ltcG9ydFBhcnNlZH12YXIgaj0iaW1wb3J0ImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpbmsiKSxrPWosbD1hLmZsYWdzLG09ImltcG9ydCIsbj13aW5kb3cuU2hhZG93RE9NUG9seWZpbGw/U2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGRvY3VtZW50KTpkb2N1bWVudDtpZihrKXZhciBvPXt9O2Vsc2UgdmFyIHA9KGEueGhyLGEuTG9hZGVyKSxxPWEucGFyc2VyLG89e2RvY3VtZW50czp7fSxkb2N1bWVudFByZWxvYWRTZWxlY3RvcnM6ImxpbmtbcmVsPSIrbSsiXSIsaW1wb3J0c1ByZWxvYWRTZWxlY3RvcnM6WyJsaW5rW3JlbD0iK20rIl0iXS5qb2luKCIsIiksbG9hZE5vZGU6ZnVuY3Rpb24oYSl7ci5hZGROb2RlKGEpfSxsb2FkU3VidHJlZTpmdW5jdGlvbihhKXt2YXIgYj10aGlzLm1hcnNoYWxOb2RlcyhhKTtyLmFkZE5vZGVzKGIpfSxtYXJzaGFsTm9kZXM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucXVlcnlTZWxlY3RvckFsbCh0aGlzLmxvYWRTZWxlY3RvcnNGb3JOb2RlKGEpKX0sbG9hZFNlbGVjdG9yc0Zvck5vZGU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5vd25lckRvY3VtZW50fHxhO3JldHVybiBiPT09bj90aGlzLmRvY3VtZW50UHJlbG9hZFNlbGVjdG9yczp0aGlzLmltcG9ydHNQcmVsb2FkU2VsZWN0b3JzfSxsb2FkZWQ6ZnVuY3Rpb24oYSxjLGUpe2lmKGwubG9hZCYmY29uc29sZS5sb2coImxvYWRlZCIsYSxjKSxjLl9fcmVzb3VyY2U9ZSxiKGMpKXt2YXIgZj10aGlzLmRvY3VtZW50c1thXTtmfHwoZj1kKGUsYSksZi5fX2ltcG9ydExpbms9Yyx0aGlzLmJvb3REb2N1bWVudChmKSx0aGlzLmRvY3VtZW50c1thXT1mKSxjLmltcG9ydD1mfXEucGFyc2VOZXh0KCl9LGJvb3REb2N1bWVudDpmdW5jdGlvbihhKXt0aGlzLmxvYWRTdWJ0cmVlKGEpLHRoaXMub2JzZXJ2ZShhKSxxLnBhcnNlTmV4dCgpfSxsb2FkZWRBbGw6ZnVuY3Rpb24oKXtxLnBhcnNlTmV4dCgpfX0scj1uZXcgcChvLmxvYWRlZC5iaW5kKG8pLG8ubG9hZGVkQWxsLmJpbmQobykpO3ZhciBzPXtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSFRNTEltcG9ydHMuY3VycmVudFNjcmlwdHx8ZG9jdW1lbnQuY3VycmVudFNjcmlwdH0sY29uZmlndXJhYmxlOiEwfTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQsIl9jdXJyZW50U2NyaXB0IixzKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobiwiX2N1cnJlbnRTY3JpcHQiLHMpLCFkb2N1bWVudC5iYXNlVVJJKXt2YXIgdD17Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVmfSxjb25maWd1cmFibGU6ITB9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShkb2N1bWVudCwiYmFzZVVSSSIsdCksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sImJhc2VVUkkiLHQpfXZhciB1PUhUTUxJbXBvcnRzLmlzSUU/ImNvbXBsZXRlIjoiaW50ZXJhY3RpdmUiLHY9InJlYWR5c3RhdGVjaGFuZ2UiO2EuaGFzTmF0aXZlPWosYS51c2VOYXRpdmU9ayxhLmltcG9ydGVyPW8sYS53aGVuSW1wb3J0c1JlYWR5PWUsYS5JTVBPUlRfTElOS19UWVBFPW0sYS5pc0ltcG9ydExvYWRlZD1pLGEuaW1wb3J0TG9hZGVyPXJ9KHdpbmRvdy5IVE1MSW1wb3J0cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtmb3IodmFyIGIsZD0wLGU9YS5sZW5ndGg7ZT5kJiYoYj1hW2RdKTtkKyspImNoaWxkTGlzdCI9PT1iLnR5cGUmJmIuYWRkZWROb2Rlcy5sZW5ndGgmJmMoYi5hZGRlZE5vZGVzKX1mdW5jdGlvbiBjKGEpe2Zvcih2YXIgYixlPTAsZz1hLmxlbmd0aDtnPmUmJihiPWFbZV0pO2UrKylkKGIpJiZmLmxvYWROb2RlKGIpLGIuY2hpbGRyZW4mJmIuY2hpbGRyZW4ubGVuZ3RoJiZjKGIuY2hpbGRyZW4pfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIDE9PT1hLm5vZGVUeXBlJiZnLmNhbGwoYSxmLmxvYWRTZWxlY3RvcnNGb3JOb2RlKGEpKX1mdW5jdGlvbiBlKGEpe2gub2JzZXJ2ZShhLHtjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pfXZhciBmPShhLklNUE9SVF9MSU5LX1RZUEUsYS5pbXBvcnRlciksZz1IVE1MRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc3x8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1zTWF0Y2hlc1NlbGVjdG9yLGg9bmV3IE11dGF0aW9uT2JzZXJ2ZXIoYik7YS5vYnNlcnZlPWUsZi5vYnNlcnZlPWV9KEhUTUxJbXBvcnRzKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXtIVE1MSW1wb3J0cy5pbXBvcnRlci5ib290RG9jdW1lbnQoYil9ImZ1bmN0aW9uIiE9dHlwZW9mIHdpbmRvdy5DdXN0b21FdmVudCYmKHdpbmRvdy5DdXN0b21FdmVudD1mdW5jdGlvbihhLGIpe3ZhciBjPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJIVE1MRXZlbnRzIik7cmV0dXJuIGMuaW5pdEV2ZW50KGEsYi5idWJibGVzPT09ITE/ITE6ITAsYi5jYW5jZWxhYmxlPT09ITE/ITE6ITAsYi5kZXRhaWwpLGN9KTt2YXIgYj13aW5kb3cuU2hhZG93RE9NUG9seWZpbGw/d2luZG93LlNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChkb2N1bWVudCk6ZG9jdW1lbnQ7SFRNTEltcG9ydHMud2hlbkltcG9ydHNSZWFkeShmdW5jdGlvbigpe0hUTUxJbXBvcnRzLnJlYWR5PSEwLEhUTUxJbXBvcnRzLnJlYWR5VGltZT0obmV3IERhdGUpLmdldFRpbWUoKSxiLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCJIVE1MSW1wb3J0c0xvYWRlZCIse2J1YmJsZXM6ITB9KSl9KSxIVE1MSW1wb3J0cy51c2VOYXRpdmV8fCgiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZXx8ImludGVyYWN0aXZlIj09PWRvY3VtZW50LnJlYWR5U3RhdGUmJiF3aW5kb3cuYXR0YWNoRXZlbnQ/YSgpOmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGEpKX0oKSx3aW5kb3cuQ3VzdG9tRWxlbWVudHM9d2luZG93LkN1c3RvbUVsZW1lbnRzfHx7ZmxhZ3M6e319LGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxjLGQpe3ZhciBlPWEuZmlyc3RFbGVtZW50Q2hpbGQ7aWYoIWUpZm9yKGU9YS5maXJzdENoaWxkO2UmJmUubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERTspZT1lLm5leHRTaWJsaW5nO2Zvcig7ZTspYyhlLGQpIT09ITAmJmIoZSxjLGQpLGU9ZS5uZXh0RWxlbWVudFNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gYyhhLGIpe2Zvcih2YXIgYz1hLnNoYWRvd1Jvb3Q7YzspZChjLGIpLGM9Yy5vbGRlclNoYWRvd1Jvb3R9ZnVuY3Rpb24gZChhLGQpe2IoYSxmdW5jdGlvbihhKXtyZXR1cm4gZChhKT8hMDp2b2lkIGMoYSxkKX0pLGMoYSxkKX1mdW5jdGlvbiBlKGEpe3JldHVybiBoKGEpPyhpKGEpLCEwKTp2b2lkIGwoYSl9ZnVuY3Rpb24gZihhKXtkKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGUoYSk/ITA6dm9pZCAwfSl9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gZShhKXx8ZihhKX1mdW5jdGlvbiBoKGIpe2lmKCFiLl9fdXBncmFkZWRfXyYmYi5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFKXt2YXIgYz1iLmdldEF0dHJpYnV0ZSgiaXMiKXx8Yi5sb2NhbE5hbWUsZD1hLnJlZ2lzdHJ5W2NdO2lmKGQpcmV0dXJuIEEuZG9tJiZjb25zb2xlLmdyb3VwKCJ1cGdyYWRlOiIsYi5sb2NhbE5hbWUpLGEudXBncmFkZShiKSxBLmRvbSYmY29uc29sZS5ncm91cEVuZCgpLCEwfX1mdW5jdGlvbiBpKGEpe2woYSkscihhKSYmZChhLGZ1bmN0aW9uKGEpe2woYSl9KX1mdW5jdGlvbiBqKGEpe2lmKEUucHVzaChhKSwhRCl7RD0hMDt2YXIgYj13aW5kb3cuUGxhdGZvcm0mJndpbmRvdy5QbGF0Zm9ybS5lbmRPZk1pY3JvdGFza3x8c2V0VGltZW91dDtiKGspfX1mdW5jdGlvbiBrKCl7RD0hMTtmb3IodmFyIGEsYj1FLGM9MCxkPWIubGVuZ3RoO2Q+YyYmKGE9YltjXSk7YysrKWEoKTtFPVtdfWZ1bmN0aW9uIGwoYSl7Qz9qKGZ1bmN0aW9uKCl7bShhKX0pOm0oYSl9ZnVuY3Rpb24gbShhKXsoYS5hdHRhY2hlZENhbGxiYWNrfHxhLmRldGFjaGVkQ2FsbGJhY2t8fGEuX191cGdyYWRlZF9fJiZBLmRvbSkmJihBLmRvbSYmY29uc29sZS5ncm91cCgiaW5zZXJ0ZWQ6IixhLmxvY2FsTmFtZSkscihhKSYmKGEuX19pbnNlcnRlZD0oYS5fX2luc2VydGVkfHwwKSsxLGEuX19pbnNlcnRlZDwxJiYoYS5fX2luc2VydGVkPTEpLGEuX19pbnNlcnRlZD4xP0EuZG9tJiZjb25zb2xlLndhcm4oImluc2VydGVkOiIsYS5sb2NhbE5hbWUsImluc2VydC9yZW1vdmUgY291bnQ6IixhLl9faW5zZXJ0ZWQpOmEuYXR0YWNoZWRDYWxsYmFjayYmKEEuZG9tJiZjb25zb2xlLmxvZygiaW5zZXJ0ZWQ6IixhLmxvY2FsTmFtZSksYS5hdHRhY2hlZENhbGxiYWNrKCkpKSxBLmRvbSYmY29uc29sZS5ncm91cEVuZCgpKX1mdW5jdGlvbiBuKGEpe28oYSksZChhLGZ1bmN0aW9uKGEpe28oYSl9KX1mdW5jdGlvbiBvKGEpe0M/aihmdW5jdGlvbigpe3AoYSl9KTpwKGEpfWZ1bmN0aW9uIHAoYSl7KGEuYXR0YWNoZWRDYWxsYmFja3x8YS5kZXRhY2hlZENhbGxiYWNrfHxhLl9fdXBncmFkZWRfXyYmQS5kb20pJiYoQS5kb20mJmNvbnNvbGUuZ3JvdXAoInJlbW92ZWQ6IixhLmxvY2FsTmFtZSkscihhKXx8KGEuX19pbnNlcnRlZD0oYS5fX2luc2VydGVkfHwwKS0xLGEuX19pbnNlcnRlZD4wJiYoYS5fX2luc2VydGVkPTApLGEuX19pbnNlcnRlZDwwP0EuZG9tJiZjb25zb2xlLndhcm4oInJlbW92ZWQ6IixhLmxvY2FsTmFtZSwiaW5zZXJ0L3JlbW92ZSBjb3VudDoiLGEuX19pbnNlcnRlZCk6YS5kZXRhY2hlZENhbGxiYWNrJiZhLmRldGFjaGVkQ2FsbGJhY2soKSksQS5kb20mJmNvbnNvbGUuZ3JvdXBFbmQoKSl9ZnVuY3Rpb24gcShhKXtyZXR1cm4gd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsP1NoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChhKTphfWZ1bmN0aW9uIHIoYSl7Zm9yKHZhciBiPWEsYz1xKGRvY3VtZW50KTtiOyl7aWYoYj09YylyZXR1cm4hMDtiPWIucGFyZW50Tm9kZXx8Yi5ob3N0fX1mdW5jdGlvbiBzKGEpe2lmKGEuc2hhZG93Um9vdCYmIWEuc2hhZG93Um9vdC5fX3dhdGNoZWQpe0EuZG9tJiZjb25zb2xlLmxvZygid2F0Y2hpbmcgc2hhZG93LXJvb3QgZm9yOiAiLGEubG9jYWxOYW1lKTtmb3IodmFyIGI9YS5zaGFkb3dSb290O2I7KXQoYiksYj1iLm9sZGVyU2hhZG93Um9vdH19ZnVuY3Rpb24gdChhKXthLl9fd2F0Y2hlZHx8KHcoYSksYS5fX3dhdGNoZWQ9ITApfWZ1bmN0aW9uIHUoYSl7aWYoQS5kb20pe3ZhciBiPWFbMF07aWYoYiYmImNoaWxkTGlzdCI9PT1iLnR5cGUmJmIuYWRkZWROb2RlcyYmYi5hZGRlZE5vZGVzKXtmb3IodmFyIGM9Yi5hZGRlZE5vZGVzWzBdO2MmJmMhPT1kb2N1bWVudCYmIWMuaG9zdDspYz1jLnBhcmVudE5vZGU7dmFyIGQ9YyYmKGMuVVJMfHxjLl9VUkx8fGMuaG9zdCYmYy5ob3N0LmxvY2FsTmFtZSl8fCIiO2Q9ZC5zcGxpdCgiLz8iKS5zaGlmdCgpLnNwbGl0KCIvIikucG9wKCl9Y29uc29sZS5ncm91cCgibXV0YXRpb25zICglZCkgWyVzXSIsYS5sZW5ndGgsZHx8IiIpfWEuZm9yRWFjaChmdW5jdGlvbihhKXsiY2hpbGRMaXN0Ij09PWEudHlwZSYmKEcoYS5hZGRlZE5vZGVzLGZ1bmN0aW9uKGEpe2EubG9jYWxOYW1lJiZnKGEpfSksRyhhLnJlbW92ZWROb2RlcyxmdW5jdGlvbihhKXthLmxvY2FsTmFtZSYmbihhKX0pKX0pLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCl9ZnVuY3Rpb24gdigpe3UoRi50YWtlUmVjb3JkcygpKSxrKCl9ZnVuY3Rpb24gdyhhKXtGLm9ic2VydmUoYSx7Y2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KX1mdW5jdGlvbiB4KGEpe3coYSl9ZnVuY3Rpb24geShhKXtBLmRvbSYmY29uc29sZS5ncm91cCgidXBncmFkZURvY3VtZW50OiAiLGEuYmFzZVVSSS5zcGxpdCgiLyIpLnBvcCgpKSxnKGEpLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCl9ZnVuY3Rpb24geihhKXthPXEoYSk7Zm9yKHZhciBiLGM9YS5xdWVyeVNlbGVjdG9yQWxsKCJsaW5rW3JlbD0iK0IrIl0iKSxkPTAsZT1jLmxlbmd0aDtlPmQmJihiPWNbZF0pO2QrKyliLmltcG9ydCYmYi5pbXBvcnQuX19wYXJzZWQmJnooYi5pbXBvcnQpO3koYSl9dmFyIEE9d2luZG93LmxvZ0ZsYWdzfHx7fSxCPXdpbmRvdy5IVE1MSW1wb3J0cz9IVE1MSW1wb3J0cy5JTVBPUlRfTElOS19UWVBFOiJub25lIixDPSF3aW5kb3cuTXV0YXRpb25PYnNlcnZlcnx8d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXI9PT13aW5kb3cuSnNNdXRhdGlvbk9ic2VydmVyO2EuaGFzUG9seWZpbGxNdXRhdGlvbnM9Qzt2YXIgRD0hMSxFPVtdLEY9bmV3IE11dGF0aW9uT2JzZXJ2ZXIodSksRz1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsLmJpbmQoQXJyYXkucHJvdG90eXBlLmZvckVhY2gpO2EuSU1QT1JUX0xJTktfVFlQRT1CLGEud2F0Y2hTaGFkb3c9cyxhLnVwZ3JhZGVEb2N1bWVudFRyZWU9eixhLnVwZ3JhZGVBbGw9ZyxhLnVwZ3JhZGVTdWJ0cmVlPWYsYS5pbnNlcnRlZE5vZGU9aSxhLm9ic2VydmVEb2N1bWVudD14LGEudXBncmFkZURvY3VtZW50PXksYS50YWtlUmVjb3Jkcz12fSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYixmKXt2YXIgZz1mfHx7fTtpZighYil0aHJvdyBuZXcgRXJyb3IoImRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudDogZmlyc3QgYXJndW1lbnQgYG5hbWVgIG11c3Qgbm90IGJlIGVtcHR5Iik7aWYoYi5pbmRleE9mKCItIik8MCl0aHJvdyBuZXcgRXJyb3IoImRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudDogZmlyc3QgYXJndW1lbnQgKCduYW1lJykgbXVzdCBjb250YWluIGEgZGFzaCAoJy0nKS4gQXJndW1lbnQgcHJvdmlkZWQgd2FzICciK1N0cmluZyhiKSsiJy4iKTtpZihtKGIpKXRocm93IG5ldyBFcnJvcigiRHVwbGljYXRlRGVmaW5pdGlvbkVycm9yOiBhIHR5cGUgd2l0aCBuYW1lICciK1N0cmluZyhiKSsiJyBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQiKTtpZighZy5wcm90b3R5cGUpdGhyb3cgbmV3IEVycm9yKCJPcHRpb25zIG1pc3NpbmcgcmVxdWlyZWQgcHJvdG90eXBlIHByb3BlcnR5Iik7cmV0dXJuIGcuX19uYW1lPWIudG9Mb3dlckNhc2UoKSxnLmxpZmVjeWNsZT1nLmxpZmVjeWNsZXx8e30sZy5hbmNlc3RyeT1jKGcuZXh0ZW5kcyksZChnKSxlKGcpLGsoZy5wcm90b3R5cGUpLG4oZy5fX25hbWUsZyksZy5jdG9yPW8oZyksZy5jdG9yLnByb3RvdHlwZT1nLnByb3RvdHlwZSxnLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1nLmN0b3IsYS5yZWFkeSYmYS51cGdyYWRlRG9jdW1lbnRUcmVlKGRvY3VtZW50KSxnLmN0b3J9ZnVuY3Rpb24gYyhhKXt2YXIgYj1tKGEpO3JldHVybiBiP2MoYi5leHRlbmRzKS5jb25jYXQoW2JdKTpbXX1mdW5jdGlvbiBkKGEpe2Zvcih2YXIgYixjPWEuZXh0ZW5kcyxkPTA7Yj1hLmFuY2VzdHJ5W2RdO2QrKyljPWIuaXMmJmIudGFnO2EudGFnPWN8fGEuX19uYW1lLGMmJihhLmlzPWEuX19uYW1lKX1mdW5jdGlvbiBlKGEpe2lmKCFPYmplY3QuX19wcm90b19fKXt2YXIgYj1IVE1MRWxlbWVudC5wcm90b3R5cGU7aWYoYS5pcyl7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChhLnRhZyk7Yj1PYmplY3QuZ2V0UHJvdG90eXBlT2YoYyl9Zm9yKHZhciBkLGU9YS5wcm90b3R5cGU7ZSYmZSE9PWI7KXt2YXIgZD1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk7ZS5fX3Byb3RvX189ZCxlPWR9fWEubmF0aXZlPWJ9ZnVuY3Rpb24gZihhKXtyZXR1cm4gZyh6KGEudGFnKSxhKX1mdW5jdGlvbiBnKGIsYyl7cmV0dXJuIGMuaXMmJmIuc2V0QXR0cmlidXRlKCJpcyIsYy5pcyksYi5yZW1vdmVBdHRyaWJ1dGUoInVucmVzb2x2ZWQiKSxoKGIsYyksYi5fX3VwZ3JhZGVkX189ITAsaihiKSxhLmluc2VydGVkTm9kZShiKSxhLnVwZ3JhZGVTdWJ0cmVlKGIpLGJ9ZnVuY3Rpb24gaChhLGIpe09iamVjdC5fX3Byb3RvX18/YS5fX3Byb3RvX189Yi5wcm90b3R5cGU6KGkoYSxiLnByb3RvdHlwZSxiLm5hdGl2ZSksYS5fX3Byb3RvX189Yi5wcm90b3R5cGUpfWZ1bmN0aW9uIGkoYSxiLGMpe2Zvcih2YXIgZD17fSxlPWI7ZSE9PWMmJmUhPT1IVE1MRWxlbWVudC5wcm90b3R5cGU7KXtmb3IodmFyIGYsZz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKSxoPTA7Zj1nW2hdO2grKylkW2ZdfHwoT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsZixPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsZikpLGRbZl09MSk7ZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSl9fWZ1bmN0aW9uIGooYSl7YS5jcmVhdGVkQ2FsbGJhY2smJmEuY3JlYXRlZENhbGxiYWNrKCl9ZnVuY3Rpb24gayhhKXtpZighYS5zZXRBdHRyaWJ1dGUuX3BvbHlmaWxsZWQpe3ZhciBiPWEuc2V0QXR0cmlidXRlO2Euc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGEsYyl7bC5jYWxsKHRoaXMsYSxjLGIpfTt2YXIgYz1hLnJlbW92ZUF0dHJpYnV0ZTthLnJlbW92ZUF0dHJpYnV0ZT1mdW5jdGlvbihhKXtsLmNhbGwodGhpcyxhLG51bGwsYyl9LGEuc2V0QXR0cmlidXRlLl9wb2x5ZmlsbGVkPSEwfX1mdW5jdGlvbiBsKGEsYixjKXt2YXIgZD10aGlzLmdldEF0dHJpYnV0ZShhKTtjLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgZT10aGlzLmdldEF0dHJpYnV0ZShhKTt0aGlzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayYmZSE9PWQmJnRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKGEsZCxlKX1mdW5jdGlvbiBtKGEpe3JldHVybiBhP3hbYS50b0xvd2VyQ2FzZSgpXTp2b2lkIDB9ZnVuY3Rpb24gbihhLGIpe3hbYV09Yn1mdW5jdGlvbiBvKGEpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBmKGEpfX1mdW5jdGlvbiBwKGEsYixjKXtyZXR1cm4gYT09PXk/cShiLGMpOkEoYSxiKX1mdW5jdGlvbiBxKGEsYil7dmFyIGM9bShifHxhKTtpZihjKXtpZihhPT1jLnRhZyYmYj09Yy5pcylyZXR1cm4gbmV3IGMuY3RvcjtpZighYiYmIWMuaXMpcmV0dXJuIG5ldyBjLmN0b3J9aWYoYil7dmFyIGQ9cShhKTtyZXR1cm4gZC5zZXRBdHRyaWJ1dGUoImlzIixiKSxkfXZhciBkPXooYSk7cmV0dXJuIGEuaW5kZXhPZigiLSIpPj0wJiZoKGQsSFRNTEVsZW1lbnQpLGR9ZnVuY3Rpb24gcihhKXtpZighYS5fX3VwZ3JhZGVkX18mJmEubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSl7dmFyIGI9YS5nZXRBdHRyaWJ1dGUoImlzIiksYz1tKGJ8fGEubG9jYWxOYW1lKTtpZihjKXtpZihiJiZjLnRhZz09YS5sb2NhbE5hbWUpcmV0dXJuIGcoYSxjKTtpZighYiYmIWMuZXh0ZW5kcylyZXR1cm4gZyhhLGMpfX19ZnVuY3Rpb24gcyhiKXt2YXIgYz1CLmNhbGwodGhpcyxiKTtyZXR1cm4gYS51cGdyYWRlQWxsKGMpLGN9YXx8KGE9d2luZG93LkN1c3RvbUVsZW1lbnRzPXtmbGFnczp7fX0pO3ZhciB0PWEuZmxhZ3MsdT1Cb29sZWFuKGRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudCksdj0hdC5yZWdpc3RlciYmdSYmIXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbDtpZih2KXt2YXIgdz1mdW5jdGlvbigpe307YS5yZWdpc3RyeT17fSxhLnVwZ3JhZGVFbGVtZW50PXcsYS53YXRjaFNoYWRvdz13LGEudXBncmFkZT13LGEudXBncmFkZUFsbD13LGEudXBncmFkZVN1YnRyZWU9dyxhLm9ic2VydmVEb2N1bWVudD13LGEudXBncmFkZURvY3VtZW50PXcsYS51cGdyYWRlRG9jdW1lbnRUcmVlPXcsYS50YWtlUmVjb3Jkcz13fWVsc2V7dmFyIHg9e30seT0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsej1kb2N1bWVudC5jcmVhdGVFbGVtZW50LmJpbmQoZG9jdW1lbnQpLEE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TLmJpbmQoZG9jdW1lbnQpLEI9Tm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlO2RvY3VtZW50LnJlZ2lzdGVyRWxlbWVudD1iLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ9cSxkb2N1bWVudC5jcmVhdGVFbGVtZW50TlM9cCxOb2RlLnByb3RvdHlwZS5jbG9uZU5vZGU9cyxhLnJlZ2lzdHJ5PXgsYS51cGdyYWRlPXJ9dmFyIEM7Qz1PYmplY3QuX19wcm90b19ffHx2P2Z1bmN0aW9uKGEsYil7cmV0dXJuIGEgaW5zdGFuY2VvZiBifTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1hO2M7KXtpZihjPT09Yi5wcm90b3R5cGUpcmV0dXJuITA7Yz1jLl9fcHJvdG9fX31yZXR1cm4hMX0sYS5pbnN0YW5jZW9mPUMsZG9jdW1lbnQucmVnaXN0ZXI9ZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50LGEuaGFzTmF0aXZlPXUsYS51c2VOYXRpdmU9dn0od2luZG93LkN1c3RvbUVsZW1lbnRzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe3JldHVybiJsaW5rIj09PWEubG9jYWxOYW1lJiZhLmdldEF0dHJpYnV0ZSgicmVsIik9PT1jfXZhciBjPWEuSU1QT1JUX0xJTktfVFlQRSxkPXtzZWxlY3RvcnM6WyJsaW5rW3JlbD0iK2MrIl0iXSxtYXA6e2xpbms6InBhcnNlTGluayJ9LHBhcnNlOmZ1bmN0aW9uKGEpe2lmKCFhLl9fcGFyc2VkKXthLl9fcGFyc2VkPSEwO3ZhciBiPWEucXVlcnlTZWxlY3RvckFsbChkLnNlbGVjdG9ycyk7ZShiLGZ1bmN0aW9uKGEpe2RbZC5tYXBbYS5sb2NhbE5hbWVdXShhKX0pLEN1c3RvbUVsZW1lbnRzLnVwZ3JhZGVEb2N1bWVudChhKSxDdXN0b21FbGVtZW50cy5vYnNlcnZlRG9jdW1lbnQoYSl9fSxwYXJzZUxpbms6ZnVuY3Rpb24oYSl7YihhKSYmdGhpcy5wYXJzZUltcG9ydChhKX0scGFyc2VJbXBvcnQ6ZnVuY3Rpb24oYSl7YS5pbXBvcnQmJmQucGFyc2UoYS5pbXBvcnQpfX0sZT1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsLmJpbmQoQXJyYXkucHJvdG90eXBlLmZvckVhY2gpO2EucGFyc2VyPWQsYS5JTVBPUlRfTElOS19UWVBFPWN9KHdpbmRvdy5DdXN0b21FbGVtZW50cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe0N1c3RvbUVsZW1lbnRzLnBhcnNlci5wYXJzZShkb2N1bWVudCksQ3VzdG9tRWxlbWVudHMudXBncmFkZURvY3VtZW50KGRvY3VtZW50KTt2YXIgYT13aW5kb3cuUGxhdGZvcm0mJlBsYXRmb3JtLmVuZE9mTWljcm90YXNrP1BsYXRmb3JtLmVuZE9mTWljcm90YXNrOnNldFRpbWVvdXQ7YShmdW5jdGlvbigpe0N1c3RvbUVsZW1lbnRzLnJlYWR5PSEwLEN1c3RvbUVsZW1lbnRzLnJlYWR5VGltZT1EYXRlLm5vdygpLHdpbmRvdy5IVE1MSW1wb3J0cyYmKEN1c3RvbUVsZW1lbnRzLmVsYXBzZWQ9Q3VzdG9tRWxlbWVudHMucmVhZHlUaW1lLUhUTUxJbXBvcnRzLnJlYWR5VGltZSksZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoIldlYkNvbXBvbmVudHNSZWFkeSIse2J1YmJsZXM6ITB9KSksd2luZG93LkhUTUxJbXBvcnRzJiYoSFRNTEltcG9ydHMuX19pbXBvcnRzUGFyc2luZ0hvb2s9ZnVuY3Rpb24oYSl7Q3VzdG9tRWxlbWVudHMucGFyc2VyLnBhcnNlKGEuaW1wb3J0KX0pfSl9aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHdpbmRvdy5DdXN0b21FdmVudCYmKHdpbmRvdy5DdXN0b21FdmVudD1mdW5jdGlvbihhKXt2YXIgYj1kb2N1bWVudC5jcmVhdGVFdmVudCgiSFRNTEV2ZW50cyIpO3JldHVybiBiLmluaXRFdmVudChhLCEwLCEwKSxifSksImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGV8fGEuZmxhZ3MuZWFnZXIpYigpO2Vsc2UgaWYoImludGVyYWN0aXZlIiE9PWRvY3VtZW50LnJlYWR5U3RhdGV8fHdpbmRvdy5hdHRhY2hFdmVudHx8d2luZG93LkhUTUxJbXBvcnRzJiYhd2luZG93LkhUTUxJbXBvcnRzLnJlYWR5KXt2YXIgYz13aW5kb3cuSFRNTEltcG9ydHMmJiFIVE1MSW1wb3J0cy5yZWFkeT8iSFRNTEltcG9ydHNMb2FkZWQiOiJET01Db250ZW50TG9hZGVkIjt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihjLGIpfWVsc2UgYigpfSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKCl7aWYod2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKXt2YXIgYT1bInVwZ3JhZGVBbGwiLCJ1cGdyYWRlU3VidHJlZSIsIm9ic2VydmVEb2N1bWVudCIsInVwZ3JhZGVEb2N1bWVudCJdLGI9e307YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2JbYV09Q3VzdG9tRWxlbWVudHNbYV19KSxhLmZvckVhY2goZnVuY3Rpb24oYSl7Q3VzdG9tRWxlbWVudHNbYV09ZnVuY3Rpb24oYyl7cmV0dXJuIGJbYV0od3JhcChjKSl9fSl9fSgpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7dGhpcy5yZWdleD1hfXZhciBjPWEuZW5kT2ZNaWNyb3Rhc2s7Yi5wcm90b3R5cGU9e2V4dHJhY3RVcmxzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjLGQsZT1bXTtjPXRoaXMucmVnZXguZXhlYyhhKTspZD1uZXcgVVJMKGNbMV0sYiksZS5wdXNoKHttYXRjaGVkOmNbMF0sdXJsOmQuaHJlZn0pO3JldHVybiBlfSxwcm9jZXNzOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLmV4dHJhY3RVcmxzKGEsYik7dGhpcy5mZXRjaChkLHt9LGMpfSxmZXRjaDpmdW5jdGlvbihhLGIsZCl7dmFyIGU9YS5sZW5ndGg7aWYoIWUpcmV0dXJuIGQoYik7Zm9yKHZhciBmLGcsaCxpPWZ1bmN0aW9uKCl7MD09PS0tZSYmZChiKX0saj1mdW5jdGlvbihhLGMpe3ZhciBkPWMubWF0Y2gsZT1kLnVybDtpZihhKXJldHVybiBiW2VdPSIiLGkoKTt2YXIgZj1jLnJlc3BvbnNlfHxjLnJlc3BvbnNlVGV4dDtiW2VdPWYsdGhpcy5mZXRjaCh0aGlzLmV4dHJhY3RVcmxzKGYsZSksYixpKX0saz0wO2U+aztrKyspZj1hW2tdLGg9Zi51cmwsYltoXT9jKGkpOihnPXRoaXMueGhyKGgsaix0aGlzKSxnLm1hdGNoPWYsYltoXT1nKX0seGhyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1uZXcgWE1MSHR0cFJlcXVlc3Q7cmV0dXJuIGQub3BlbigiR0VUIixhLCEwKSxkLnNlbmQoKSxkLm9ubG9hZD1mdW5jdGlvbigpe2IuY2FsbChjLG51bGwsZCl9LGQub25lcnJvcj1mdW5jdGlvbigpe2IuY2FsbChjLG51bGwsZCl9LGR9fSxhLkxvYWRlcj1ifSh3aW5kb3cuUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt0aGlzLmxvYWRlcj1uZXcgZCh0aGlzLnJlZ2V4KX12YXIgYz1hLnVybFJlc29sdmVyLGQ9YS5Mb2FkZXI7Yi5wcm90b3R5cGU9e3JlZ2V4Oi9AaW1wb3J0XHMrKD86dXJsKT9bIidcKF0qKFteJyJcKV0qKVsnIlwpXSo7L2cscmVzb2x2ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZnVuY3Rpb24oZCl7Yyh0aGlzLmZsYXR0ZW4oYSxiLGQpKX0uYmluZCh0aGlzKTt0aGlzLmxvYWRlci5wcm9jZXNzKGEsYixkKX0scmVzb2x2ZU5vZGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnRleHRDb250ZW50LGQ9YS5vd25lckRvY3VtZW50LmJhc2VVUkksZT1mdW5jdGlvbihjKXthLnRleHRDb250ZW50PWMsYihhKX07dGhpcy5yZXNvbHZlKGMsZCxlKX0sZmxhdHRlbjpmdW5jdGlvbihhLGIsZCl7Zm9yKHZhciBlLGYsZyxoPXRoaXMubG9hZGVyLmV4dHJhY3RVcmxzKGEsYiksaT0wO2k8aC5sZW5ndGg7aSsrKWU9aFtpXSxmPWUudXJsLGc9Yy5yZXNvbHZlQ3NzVGV4dChkW2ZdLGYpLGc9dGhpcy5mbGF0dGVuKGcsZixkKSxhPWEucmVwbGFjZShlLm1hdGNoZWQsZyk7cmV0dXJuIGF9LGxvYWRTdHlsZXM6ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKCl7ZSsrLGU9PT1mJiZiJiZiKCl9Zm9yKHZhciBkLGU9MCxmPWEubGVuZ3RoLGc9MDtmPmcmJihkPWFbZ10pO2crKyl0aGlzLnJlc29sdmVOb2RlKGQsYyl9fTt2YXIgZT1uZXcgYjthLnN0eWxlUmVzb2x2ZXI9ZX0od2luZG93LlBsYXRmb3JtKSxmdW5jdGlvbihhKXthPWF8fHt9LGEuZXh0ZXJuYWw9YS5leHRlcm5hbHx8e307dmFyIGI9e3NoYWRvdzpmdW5jdGlvbihhKXtyZXR1cm4gYT9hLnNoYWRvd1Jvb3R8fGEud2Via2l0U2hhZG93Um9vdDp2b2lkIDB9LGNhblRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYSYmQm9vbGVhbihhLmVsZW1lbnRGcm9tUG9pbnQpfSx0YXJnZXRpbmdTaGFkb3c6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5zaGFkb3coYSk7cmV0dXJuIHRoaXMuY2FuVGFyZ2V0KGIpP2I6dm9pZCAwfSxvbGRlclNoYWRvdzpmdW5jdGlvbihhKXt2YXIgYj1hLm9sZGVyU2hhZG93Um9vdDtpZighYil7dmFyIGM9YS5xdWVyeVNlbGVjdG9yKCJzaGFkb3ciKTtjJiYoYj1jLm9sZGVyU2hhZG93Um9vdCl9cmV0dXJuIGJ9LGFsbFNoYWRvd3M6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPVtdLGM9dGhpcy5zaGFkb3coYSk7YzspYi5wdXNoKGMpLGM9dGhpcy5vbGRlclNoYWRvdyhjKTtyZXR1cm4gYn0sc2VhcmNoUm9vdDpmdW5jdGlvbihhLGIsYyl7aWYoYSl7dmFyIGQsZSxmPWEuZWxlbWVudEZyb21Qb2ludChiLGMpO2ZvcihlPXRoaXMudGFyZ2V0aW5nU2hhZG93KGYpO2U7KXtpZihkPWUuZWxlbWVudEZyb21Qb2ludChiLGMpKXt2YXIgZz10aGlzLnRhcmdldGluZ1NoYWRvdyhkKTtyZXR1cm4gdGhpcy5zZWFyY2hSb290KGcsYixjKXx8ZH1lPXRoaXMub2xkZXJTaGFkb3coZSl9cmV0dXJuIGZ9fSxvd25lcjpmdW5jdGlvbihhKXtmb3IodmFyIGI9YTtiLnBhcmVudE5vZGU7KWI9Yi5wYXJlbnROb2RlO3JldHVybiBiLm5vZGVUeXBlIT1Ob2RlLkRPQ1VNRU5UX05PREUmJmIubm9kZVR5cGUhPU5vZGUuRE9DVU1FTlRfRlJBR01FTlRfTk9ERSYmKGI9ZG9jdW1lbnQpLGJ9LGZpbmRUYXJnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5jbGllbnRYLGM9YS5jbGllbnRZLGQ9dGhpcy5vd25lcihhLnRhcmdldCk7cmV0dXJuIGQuZWxlbWVudEZyb21Qb2ludChiLGMpfHwoZD1kb2N1bWVudCksdGhpcy5zZWFyY2hSb290KGQsYixjKX19O2EudGFyZ2V0RmluZGluZz1iLGEuZmluZFRhcmdldD1iLmZpbmRUYXJnZXQuYmluZChiKSx3aW5kb3cuUG9pbnRlckV2ZW50c1BvbHlmaWxsPWF9KHdpbmRvdy5Qb2ludGVyRXZlbnRzUG9seWZpbGwpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXtyZXR1cm4iYm9keSBeXiAiK2IoYSl9ZnVuY3Rpb24gYihhKXtyZXR1cm4nW3RvdWNoLWFjdGlvbj0iJythKyciXSd9ZnVuY3Rpb24gYyhhKXtyZXR1cm4ieyAtbXMtdG91Y2gtYWN0aW9uOiAiK2ErIjsgdG91Y2gtYWN0aW9uOiAiK2ErIjsgdG91Y2gtYWN0aW9uLWRlbGF5OiBub25lOyB9In12YXIgZD1bIm5vbmUiLCJhdXRvIiwicGFuLXgiLCJwYW4teSIse3J1bGU6InBhbi14IHBhbi15IixzZWxlY3RvcnM6WyJwYW4teCBwYW4teSIsInBhbi15IHBhbi14Il19XSxlPSIiO2QuZm9yRWFjaChmdW5jdGlvbihkKXtTdHJpbmcoZCk9PT1kPyhlKz1iKGQpK2MoZCkrIlxuIixlKz1hKGQpK2MoZCkrIlxuIik6KGUrPWQuc2VsZWN0b3JzLm1hcChiKStjKGQucnVsZSkrIlxuIixlKz1kLnNlbGVjdG9ycy5tYXAoYSkrYyhkLnJ1bGUpKyJcbiIpfSk7dmFyIGY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtmLnRleHRDb250ZW50PWUsZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChmKX0oKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEsZSl7ZT1lfHx7fTt2YXIgZj1lLmJ1dHRvbnM7aWYoIWQmJiFmJiYidG91Y2giIT09YSlzd2l0Y2goZS53aGljaCl7Y2FzZSAxOmY9MTticmVhaztjYXNlIDI6Zj00O2JyZWFrO2Nhc2UgMzpmPTI7YnJlYWs7ZGVmYXVsdDpmPTB9dmFyIGk7aWYoYylpPW5ldyBNb3VzZUV2ZW50KGEsZSk7ZWxzZXtpPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJNb3VzZUV2ZW50Iik7Zm9yKHZhciBqLGs9e30sbD0wO2w8Zy5sZW5ndGg7bCsrKWo9Z1tsXSxrW2pdPWVbal18fGhbbF07aS5pbml0TW91c2VFdmVudChhLGsuYnViYmxlcyxrLmNhbmNlbGFibGUsay52aWV3LGsuZGV0YWlsLGsuc2NyZWVuWCxrLnNjcmVlblksay5jbGllbnRYLGsuY2xpZW50WSxrLmN0cmxLZXksay5hbHRLZXksay5zaGlmdEtleSxrLm1ldGFLZXksay5idXR0b24say5yZWxhdGVkVGFyZ2V0KX1pLl9fcHJvdG9fXz1iLnByb3RvdHlwZSxkfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSwiYnV0dG9ucyIse2dldDpmdW5jdGlvbigpe3JldHVybiBmfSxlbnVtZXJhYmxlOiEwfSk7dmFyIG09MDtyZXR1cm4gbT1lLnByZXNzdXJlP2UucHJlc3N1cmU6Zj8uNTowLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGkse3BvaW50ZXJJZDp7dmFsdWU6ZS5wb2ludGVySWR8fDAsZW51bWVyYWJsZTohMH0sd2lkdGg6e3ZhbHVlOmUud2lkdGh8fDAsZW51bWVyYWJsZTohMH0saGVpZ2h0Ont2YWx1ZTplLmhlaWdodHx8MCxlbnVtZXJhYmxlOiEwfSxwcmVzc3VyZTp7dmFsdWU6bSxlbnVtZXJhYmxlOiEwfSx0aWx0WDp7dmFsdWU6ZS50aWx0WHx8MCxlbnVtZXJhYmxlOiEwfSx0aWx0WTp7dmFsdWU6ZS50aWx0WXx8MCxlbnVtZXJhYmxlOiEwfSxwb2ludGVyVHlwZTp7dmFsdWU6ZS5wb2ludGVyVHlwZXx8IiIsZW51bWVyYWJsZTohMH0saHdUaW1lc3RhbXA6e3ZhbHVlOmUuaHdUaW1lc3RhbXB8fDAsZW51bWVyYWJsZTohMH0saXNQcmltYXJ5Ont2YWx1ZTplLmlzUHJpbWFyeXx8ITEsZW51bWVyYWJsZTohMH19KSxpfXZhciBjPSExLGQ9ITE7dHJ5e3ZhciBlPW5ldyBNb3VzZUV2ZW50KCJjbGljayIse2J1dHRvbnM6MX0pO2M9ITAsZD0xPT09ZS5idXR0b25zLGU9bnVsbH1jYXRjaChmKXt9dmFyIGc9WyJidWJibGVzIiwiY2FuY2VsYWJsZSIsInZpZXciLCJkZXRhaWwiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwiY3RybEtleSIsImFsdEtleSIsInNoaWZ0S2V5IiwibWV0YUtleSIsImJ1dHRvbiIsInJlbGF0ZWRUYXJnZXQiXSxoPVshMSwhMSxudWxsLG51bGwsMCwwLDAsMCwhMSwhMSwhMSwhMSwwLG51bGxdO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoTW91c2VFdmVudC5wcm90b3R5cGUpLGEuUG9pbnRlckV2ZW50fHwoYS5Qb2ludGVyRXZlbnQ9Yil9KHdpbmRvdyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe2lmKGMpe3ZhciBhPW5ldyBNYXA7cmV0dXJuIGEucG9pbnRlcnM9ZCxhfXRoaXMua2V5cz1bXSx0aGlzLnZhbHVlcz1bXX12YXIgYz13aW5kb3cuTWFwJiZ3aW5kb3cuTWFwLnByb3RvdHlwZS5mb3JFYWNoLGQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zaXplfTtiLnByb3RvdHlwZT17c2V0OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5rZXlzLmluZGV4T2YoYSk7CmM+LTE/dGhpcy52YWx1ZXNbY109YjoodGhpcy5rZXlzLnB1c2goYSksdGhpcy52YWx1ZXMucHVzaChiKSl9LGhhczpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5rZXlzLmluZGV4T2YoYSk+LTF9LCJkZWxldGUiOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMua2V5cy5pbmRleE9mKGEpO2I+LTEmJih0aGlzLmtleXMuc3BsaWNlKGIsMSksdGhpcy52YWx1ZXMuc3BsaWNlKGIsMSkpfSxnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5rZXlzLmluZGV4T2YoYSk7cmV0dXJuIHRoaXMudmFsdWVzW2JdfSxjbGVhcjpmdW5jdGlvbigpe3RoaXMua2V5cy5sZW5ndGg9MCx0aGlzLnZhbHVlcy5sZW5ndGg9MH0sZm9yRWFjaDpmdW5jdGlvbihhLGIpe3RoaXMudmFsdWVzLmZvckVhY2goZnVuY3Rpb24oYyxkKXthLmNhbGwoYixjLHRoaXMua2V5c1tkXSx0aGlzKX0sdGhpcyl9LHBvaW50ZXJzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMua2V5cy5sZW5ndGh9fSxhLlBvaW50ZXJNYXA9Yn0od2luZG93LlBvaW50ZXJFdmVudHNQb2x5ZmlsbCksZnVuY3Rpb24oYSl7dmFyIGI9WyJidWJibGVzIiwiY2FuY2VsYWJsZSIsInZpZXciLCJkZXRhaWwiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwiY3RybEtleSIsImFsdEtleSIsInNoaWZ0S2V5IiwibWV0YUtleSIsImJ1dHRvbiIsInJlbGF0ZWRUYXJnZXQiLCJidXR0b25zIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJwb2ludGVyVHlwZSIsImh3VGltZXN0YW1wIiwiaXNQcmltYXJ5IiwidHlwZSIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJ3aGljaCJdLGM9WyExLCExLG51bGwsbnVsbCwwLDAsMCwwLCExLCExLCExLCExLDAsbnVsbCwwLDAsMCwwLDAsMCwwLCIiLDAsITEsIiIsbnVsbCxudWxsLDBdLGQ9InVuZGVmaW5lZCIhPXR5cGVvZiBTVkdFbGVtZW50SW5zdGFuY2UsZT17dGFyZ2V0czpuZXcgV2Vha01hcCxoYW5kbGVkRXZlbnRzOm5ldyBXZWFrTWFwLHBvaW50ZXJtYXA6bmV3IGEuUG9pbnRlck1hcCxldmVudE1hcDp7fSxldmVudFNvdXJjZXM6e30sZXZlbnRTb3VyY2VMaXN0OltdLHJlZ2lzdGVyU291cmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YixkPWMuZXZlbnRzO2QmJihkLmZvckVhY2goZnVuY3Rpb24oYSl7Y1thXSYmKHRoaXMuZXZlbnRNYXBbYV09Y1thXS5iaW5kKGMpKX0sdGhpcyksdGhpcy5ldmVudFNvdXJjZXNbYV09Yyx0aGlzLmV2ZW50U291cmNlTGlzdC5wdXNoKGMpKX0scmVnaXN0ZXI6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9dGhpcy5ldmVudFNvdXJjZUxpc3QubGVuZ3RoLGQ9MDtjPmQmJihiPXRoaXMuZXZlbnRTb3VyY2VMaXN0W2RdKTtkKyspYi5yZWdpc3Rlci5jYWxsKGIsYSl9LHVucmVnaXN0ZXI6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9dGhpcy5ldmVudFNvdXJjZUxpc3QubGVuZ3RoLGQ9MDtjPmQmJihiPXRoaXMuZXZlbnRTb3VyY2VMaXN0W2RdKTtkKyspYi51bnJlZ2lzdGVyLmNhbGwoYixhKX0sY29udGFpbnM6YS5leHRlcm5hbC5jb250YWluc3x8ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5jb250YWlucyhiKX0sZG93bjpmdW5jdGlvbihhKXthLmJ1YmJsZXM9ITAsdGhpcy5maXJlRXZlbnQoInBvaW50ZXJkb3duIixhKX0sbW92ZTpmdW5jdGlvbihhKXthLmJ1YmJsZXM9ITAsdGhpcy5maXJlRXZlbnQoInBvaW50ZXJtb3ZlIixhKX0sdXA6ZnVuY3Rpb24oYSl7YS5idWJibGVzPSEwLHRoaXMuZmlyZUV2ZW50KCJwb2ludGVydXAiLGEpfSxlbnRlcjpmdW5jdGlvbihhKXthLmJ1YmJsZXM9ITEsdGhpcy5maXJlRXZlbnQoInBvaW50ZXJlbnRlciIsYSl9LGxlYXZlOmZ1bmN0aW9uKGEpe2EuYnViYmxlcz0hMSx0aGlzLmZpcmVFdmVudCgicG9pbnRlcmxlYXZlIixhKX0sb3ZlcjpmdW5jdGlvbihhKXthLmJ1YmJsZXM9ITAsdGhpcy5maXJlRXZlbnQoInBvaW50ZXJvdmVyIixhKX0sb3V0OmZ1bmN0aW9uKGEpe2EuYnViYmxlcz0hMCx0aGlzLmZpcmVFdmVudCgicG9pbnRlcm91dCIsYSl9LGNhbmNlbDpmdW5jdGlvbihhKXthLmJ1YmJsZXM9ITAsdGhpcy5maXJlRXZlbnQoInBvaW50ZXJjYW5jZWwiLGEpfSxsZWF2ZU91dDpmdW5jdGlvbihhKXt0aGlzLm91dChhKSx0aGlzLmNvbnRhaW5zKGEudGFyZ2V0LGEucmVsYXRlZFRhcmdldCl8fHRoaXMubGVhdmUoYSl9LGVudGVyT3ZlcjpmdW5jdGlvbihhKXt0aGlzLm92ZXIoYSksdGhpcy5jb250YWlucyhhLnRhcmdldCxhLnJlbGF0ZWRUYXJnZXQpfHx0aGlzLmVudGVyKGEpfSxldmVudEhhbmRsZXI6ZnVuY3Rpb24oYSl7aWYoIXRoaXMuaGFuZGxlZEV2ZW50cy5nZXQoYSkpe3ZhciBiPWEudHlwZSxjPXRoaXMuZXZlbnRNYXAmJnRoaXMuZXZlbnRNYXBbYl07YyYmYyhhKSx0aGlzLmhhbmRsZWRFdmVudHMuc2V0KGEsITApfX0sbGlzdGVuOmZ1bmN0aW9uKGEsYil7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3RoaXMuYWRkRXZlbnQoYSxiKX0sdGhpcyl9LHVubGlzdGVuOmZ1bmN0aW9uKGEsYil7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3RoaXMucmVtb3ZlRXZlbnQoYSxiKX0sdGhpcyl9LGFkZEV2ZW50OmEuZXh0ZXJuYWwuYWRkRXZlbnR8fGZ1bmN0aW9uKGEsYil7YS5hZGRFdmVudExpc3RlbmVyKGIsdGhpcy5ib3VuZEhhbmRsZXIpfSxyZW1vdmVFdmVudDphLmV4dGVybmFsLnJlbW92ZUV2ZW50fHxmdW5jdGlvbihhLGIpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLHRoaXMuYm91bmRIYW5kbGVyKX0sbWFrZUV2ZW50OmZ1bmN0aW9uKGEsYil7dGhpcy5jYXB0dXJlSW5mbyYmKGIucmVsYXRlZFRhcmdldD1udWxsKTt2YXIgYz1uZXcgUG9pbnRlckV2ZW50KGEsYik7cmV0dXJuIGIucHJldmVudERlZmF1bHQmJihjLnByZXZlbnREZWZhdWx0PWIucHJldmVudERlZmF1bHQpLHRoaXMudGFyZ2V0cy5zZXQoYyx0aGlzLnRhcmdldHMuZ2V0KGIpfHxiLnRhcmdldCksY30sZmlyZUV2ZW50OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5tYWtlRXZlbnQoYSxiKTtyZXR1cm4gdGhpcy5kaXNwYXRjaEV2ZW50KGMpfSxjbG9uZUV2ZW50OmZ1bmN0aW9uKGEpe2Zvcih2YXIgZSxmPXt9LGc9MDtnPGIubGVuZ3RoO2crKyllPWJbZ10sZltlXT1hW2VdfHxjW2ddLCFkfHwidGFyZ2V0IiE9PWUmJiJyZWxhdGVkVGFyZ2V0IiE9PWV8fGZbZV1pbnN0YW5jZW9mIFNWR0VsZW1lbnRJbnN0YW5jZSYmKGZbZV09ZltlXS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIGEucHJldmVudERlZmF1bHQmJihmLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7YS5wcmV2ZW50RGVmYXVsdCgpfSksZn0sZ2V0VGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNhcHR1cmVJbmZvJiZ0aGlzLmNhcHR1cmVJbmZvLmlkPT09YS5wb2ludGVySWQ/dGhpcy5jYXB0dXJlSW5mby50YXJnZXQ6dGhpcy50YXJnZXRzLmdldChhKX0sc2V0Q2FwdHVyZTpmdW5jdGlvbihhLGIpe3RoaXMuY2FwdHVyZUluZm8mJnRoaXMucmVsZWFzZUNhcHR1cmUodGhpcy5jYXB0dXJlSW5mby5pZCksdGhpcy5jYXB0dXJlSW5mbz17aWQ6YSx0YXJnZXQ6Yn07dmFyIGM9bmV3IFBvaW50ZXJFdmVudCgiZ290cG9pbnRlcmNhcHR1cmUiLHtidWJibGVzOiEwfSk7dGhpcy5pbXBsaWNpdFJlbGVhc2U9dGhpcy5yZWxlYXNlQ2FwdHVyZS5iaW5kKHRoaXMsYSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcnVwIix0aGlzLmltcGxpY2l0UmVsZWFzZSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicG9pbnRlcmNhbmNlbCIsdGhpcy5pbXBsaWNpdFJlbGVhc2UpLHRoaXMudGFyZ2V0cy5zZXQoYyxiKSx0aGlzLmFzeW5jRGlzcGF0Y2hFdmVudChjKX0scmVsZWFzZUNhcHR1cmU6ZnVuY3Rpb24oYSl7aWYodGhpcy5jYXB0dXJlSW5mbyYmdGhpcy5jYXB0dXJlSW5mby5pZD09PWEpe3ZhciBiPW5ldyBQb2ludGVyRXZlbnQoImxvc3Rwb2ludGVyY2FwdHVyZSIse2J1YmJsZXM6ITB9KSxjPXRoaXMuY2FwdHVyZUluZm8udGFyZ2V0O3RoaXMuY2FwdHVyZUluZm89bnVsbCxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVydXAiLHRoaXMuaW1wbGljaXRSZWxlYXNlKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJwb2ludGVyY2FuY2VsIix0aGlzLmltcGxpY2l0UmVsZWFzZSksdGhpcy50YXJnZXRzLnNldChiLGMpLHRoaXMuYXN5bmNEaXNwYXRjaEV2ZW50KGIpfX0sZGlzcGF0Y2hFdmVudDphLmV4dGVybmFsLmRpc3BhdGNoRXZlbnR8fGZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZ2V0VGFyZ2V0KGEpO3JldHVybiBiP2IuZGlzcGF0Y2hFdmVudChhKTp2b2lkIDB9LGFzeW5jRGlzcGF0Y2hFdmVudDpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KHRoaXMuZGlzcGF0Y2hFdmVudC5iaW5kKHRoaXMsYSksMCl9fTtlLmJvdW5kSGFuZGxlcj1lLmV2ZW50SGFuZGxlci5iaW5kKGUpLGEuZGlzcGF0Y2hlcj1lLGEucmVnaXN0ZXI9ZS5yZWdpc3Rlci5iaW5kKGUpLGEudW5yZWdpc3Rlcj1lLnVucmVnaXN0ZXIuYmluZChlKX0od2luZG93LlBvaW50ZXJFdmVudHNQb2x5ZmlsbCksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGIsYyxkKXt0aGlzLmFkZENhbGxiYWNrPWEuYmluZChkKSx0aGlzLnJlbW92ZUNhbGxiYWNrPWIuYmluZChkKSx0aGlzLmNoYW5nZWRDYWxsYmFjaz1jLmJpbmQoZCksZyYmKHRoaXMub2JzZXJ2ZXI9bmV3IGcodGhpcy5tdXRhdGlvbldhdGNoZXIuYmluZCh0aGlzKSkpfXZhciBjPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwuYmluZChBcnJheS5wcm90b3R5cGUuZm9yRWFjaCksZD1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwuYmluZChBcnJheS5wcm90b3R5cGUubWFwKSxlPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsLmJpbmQoQXJyYXkucHJvdG90eXBlLnNsaWNlKSxmPUFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5maWx0ZXIpLGc9d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLGg9Ilt0b3VjaC1hY3Rpb25dIixpPXtzdWJ0cmVlOiEwLGNoaWxkTGlzdDohMCxhdHRyaWJ1dGVzOiEwLGF0dHJpYnV0ZU9sZFZhbHVlOiEwLGF0dHJpYnV0ZUZpbHRlcjpbInRvdWNoLWFjdGlvbiJdfTtiLnByb3RvdHlwZT17d2F0Y2hTdWJ0cmVlOmZ1bmN0aW9uKGIpe2EudGFyZ2V0RmluZGluZy5jYW5UYXJnZXQoYikmJnRoaXMub2JzZXJ2ZXIub2JzZXJ2ZShiLGkpfSxlbmFibGVPblN1YnRyZWU6ZnVuY3Rpb24oYSl7dGhpcy53YXRjaFN1YnRyZWUoYSksYT09PWRvY3VtZW50JiYiY29tcGxldGUiIT09ZG9jdW1lbnQucmVhZHlTdGF0ZT90aGlzLmluc3RhbGxPbkxvYWQoKTp0aGlzLmluc3RhbGxOZXdTdWJ0cmVlKGEpfSxpbnN0YWxsTmV3U3VidHJlZTpmdW5jdGlvbihhKXtjKHRoaXMuZmluZEVsZW1lbnRzKGEpLHRoaXMuYWRkRWxlbWVudCx0aGlzKX0sZmluZEVsZW1lbnRzOmZ1bmN0aW9uKGEpe3JldHVybiBhLnF1ZXJ5U2VsZWN0b3JBbGw/YS5xdWVyeVNlbGVjdG9yQWxsKGgpOltdfSxyZW1vdmVFbGVtZW50OmZ1bmN0aW9uKGEpe3RoaXMucmVtb3ZlQ2FsbGJhY2soYSl9LGFkZEVsZW1lbnQ6ZnVuY3Rpb24oYSl7dGhpcy5hZGRDYWxsYmFjayhhKX0sZWxlbWVudENoYW5nZWQ6ZnVuY3Rpb24oYSxiKXt0aGlzLmNoYW5nZWRDYWxsYmFjayhhLGIpfSxjb25jYXRMaXN0czpmdW5jdGlvbihhLGIpe3JldHVybiBhLmNvbmNhdChlKGIpKX0saW5zdGFsbE9uTG9hZDpmdW5jdGlvbigpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInJlYWR5c3RhdGVjaGFuZ2UiLGZ1bmN0aW9uKCl7ImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGUmJnRoaXMuaW5zdGFsbE5ld1N1YnRyZWUoZG9jdW1lbnQpfS5iaW5kKHRoaXMpKX0saXNFbGVtZW50OmZ1bmN0aW9uKGEpe3JldHVybiBhLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREV9LGZsYXR0ZW5NdXRhdGlvblRyZWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZChhLHRoaXMuZmluZEVsZW1lbnRzLHRoaXMpO3JldHVybiBiLnB1c2goZihhLHRoaXMuaXNFbGVtZW50KSksYi5yZWR1Y2UodGhpcy5jb25jYXRMaXN0cyxbXSl9LG11dGF0aW9uV2F0Y2hlcjpmdW5jdGlvbihhKXthLmZvckVhY2godGhpcy5tdXRhdGlvbkhhbmRsZXIsdGhpcyl9LG11dGF0aW9uSGFuZGxlcjpmdW5jdGlvbihhKXtpZigiY2hpbGRMaXN0Ij09PWEudHlwZSl7dmFyIGI9dGhpcy5mbGF0dGVuTXV0YXRpb25UcmVlKGEuYWRkZWROb2Rlcyk7Yi5mb3JFYWNoKHRoaXMuYWRkRWxlbWVudCx0aGlzKTt2YXIgYz10aGlzLmZsYXR0ZW5NdXRhdGlvblRyZWUoYS5yZW1vdmVkTm9kZXMpO2MuZm9yRWFjaCh0aGlzLnJlbW92ZUVsZW1lbnQsdGhpcyl9ZWxzZSJhdHRyaWJ1dGVzIj09PWEudHlwZSYmdGhpcy5lbGVtZW50Q2hhbmdlZChhLnRhcmdldCxhLm9sZFZhbHVlKX19LGd8fChiLnByb3RvdHlwZS53YXRjaFN1YnRyZWU9ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlBvaW50ZXJFdmVudHNQb2x5ZmlsbDogTXV0YXRpb25PYnNlcnZlcnMgbm90IGZvdW5kLCB0b3VjaC1hY3Rpb24gd2lsbCBub3QgYmUgZHluYW1pY2FsbHkgZGV0ZWN0ZWQiKX0pLGEuSW5zdGFsbGVyPWJ9KHdpbmRvdy5Qb2ludGVyRXZlbnRzUG9seWZpbGwpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzcGF0Y2hlcixjPWIucG9pbnRlcm1hcCxkPTI1LGU9e1BPSU5URVJfSUQ6MSxQT0lOVEVSX1RZUEU6Im1vdXNlIixldmVudHM6WyJtb3VzZWRvd24iLCJtb3VzZW1vdmUiLCJtb3VzZXVwIiwibW91c2VvdmVyIiwibW91c2VvdXQiXSxyZWdpc3RlcjpmdW5jdGlvbihhKXtiLmxpc3RlbihhLHRoaXMuZXZlbnRzKX0sdW5yZWdpc3RlcjpmdW5jdGlvbihhKXtiLnVubGlzdGVuKGEsdGhpcy5ldmVudHMpfSxsYXN0VG91Y2hlczpbXSxpc0V2ZW50U2ltdWxhdGVkRnJvbVRvdWNoOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPXRoaXMubGFzdFRvdWNoZXMsZT1hLmNsaWVudFgsZj1hLmNsaWVudFksZz0wLGg9Yy5sZW5ndGg7aD5nJiYoYj1jW2ddKTtnKyspe3ZhciBpPU1hdGguYWJzKGUtYi54KSxqPU1hdGguYWJzKGYtYi55KTtpZihkPj1pJiZkPj1qKXJldHVybiEwfX0scHJlcGFyZUV2ZW50OmZ1bmN0aW9uKGEpe3ZhciBjPWIuY2xvbmVFdmVudChhKSxkPWMucHJldmVudERlZmF1bHQ7cmV0dXJuIGMucHJldmVudERlZmF1bHQ9ZnVuY3Rpb24oKXthLnByZXZlbnREZWZhdWx0KCksZCgpfSxjLnBvaW50ZXJJZD10aGlzLlBPSU5URVJfSUQsYy5pc1ByaW1hcnk9ITAsYy5wb2ludGVyVHlwZT10aGlzLlBPSU5URVJfVFlQRSxjfSxtb3VzZWRvd246ZnVuY3Rpb24oYSl7aWYoIXRoaXMuaXNFdmVudFNpbXVsYXRlZEZyb21Ub3VjaChhKSl7dmFyIGQ9Yy5oYXModGhpcy5QT0lOVEVSX0lEKTtkJiZ0aGlzLmNhbmNlbChhKTt2YXIgZT10aGlzLnByZXBhcmVFdmVudChhKTtjLnNldCh0aGlzLlBPSU5URVJfSUQsYSksYi5kb3duKGUpfX0sbW91c2Vtb3ZlOmZ1bmN0aW9uKGEpe2lmKCF0aGlzLmlzRXZlbnRTaW11bGF0ZWRGcm9tVG91Y2goYSkpe3ZhciBjPXRoaXMucHJlcGFyZUV2ZW50KGEpO2IubW92ZShjKX19LG1vdXNldXA6ZnVuY3Rpb24oYSl7aWYoIXRoaXMuaXNFdmVudFNpbXVsYXRlZEZyb21Ub3VjaChhKSl7dmFyIGQ9Yy5nZXQodGhpcy5QT0lOVEVSX0lEKTtpZihkJiZkLmJ1dHRvbj09PWEuYnV0dG9uKXt2YXIgZT10aGlzLnByZXBhcmVFdmVudChhKTtiLnVwKGUpLHRoaXMuY2xlYW51cE1vdXNlKCl9fX0sbW91c2VvdmVyOmZ1bmN0aW9uKGEpe2lmKCF0aGlzLmlzRXZlbnRTaW11bGF0ZWRGcm9tVG91Y2goYSkpe3ZhciBjPXRoaXMucHJlcGFyZUV2ZW50KGEpO2IuZW50ZXJPdmVyKGMpfX0sbW91c2VvdXQ6ZnVuY3Rpb24oYSl7aWYoIXRoaXMuaXNFdmVudFNpbXVsYXRlZEZyb21Ub3VjaChhKSl7dmFyIGM9dGhpcy5wcmVwYXJlRXZlbnQoYSk7Yi5sZWF2ZU91dChjKX19LGNhbmNlbDpmdW5jdGlvbihhKXt2YXIgYz10aGlzLnByZXBhcmVFdmVudChhKTtiLmNhbmNlbChjKSx0aGlzLmNsZWFudXBNb3VzZSgpfSxjbGVhbnVwTW91c2U6ZnVuY3Rpb24oKXtjWyJkZWxldGUiXSh0aGlzLlBPSU5URVJfSUQpfX07YS5tb3VzZUV2ZW50cz1lfSh3aW5kb3cuUG9pbnRlckV2ZW50c1BvbHlmaWxsKSxmdW5jdGlvbihhKXt2YXIgYixjPWEuZGlzcGF0Y2hlcixkPWEuZmluZFRhcmdldCxlPWEudGFyZ2V0RmluZGluZy5hbGxTaGFkb3dzLmJpbmQoYS50YXJnZXRGaW5kaW5nKSxmPWMucG9pbnRlcm1hcCxnPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5tYXApLGg9MjUwMCxpPTIwMCxqPSJ0b3VjaC1hY3Rpb24iLGs9ITEsbD17c2Nyb2xsVHlwZTpuZXcgV2Vha01hcCxldmVudHM6WyJ0b3VjaHN0YXJ0IiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJ0b3VjaGNhbmNlbCJdLHJlZ2lzdGVyOmZ1bmN0aW9uKGEpe2s/Yy5saXN0ZW4oYSx0aGlzLmV2ZW50cyk6Yi5lbmFibGVPblN1YnRyZWUoYSl9LHVucmVnaXN0ZXI6ZnVuY3Rpb24oYSl7ayYmYy51bmxpc3RlbihhLHRoaXMuZXZlbnRzKX0sZWxlbWVudEFkZGVkOmZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKGopLGQ9dGhpcy50b3VjaEFjdGlvblRvU2Nyb2xsVHlwZShiKTtkJiYodGhpcy5zY3JvbGxUeXBlLnNldChhLGQpLGMubGlzdGVuKGEsdGhpcy5ldmVudHMpLGUoYSkuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLnNjcm9sbFR5cGUuc2V0KGEsZCksYy5saXN0ZW4oYSx0aGlzLmV2ZW50cyl9LHRoaXMpKX0sZWxlbWVudFJlbW92ZWQ6ZnVuY3Rpb24oYSl7dGhpcy5zY3JvbGxUeXBlWyJkZWxldGUiXShhKSxjLnVubGlzdGVuKGEsdGhpcy5ldmVudHMpLGUoYSkuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLnNjcm9sbFR5cGVbImRlbGV0ZSJdKGEpLGMudW5saXN0ZW4oYSx0aGlzLmV2ZW50cyl9LHRoaXMpfSxlbGVtZW50Q2hhbmdlZDpmdW5jdGlvbihhLGIpe3ZhciBjPWEuZ2V0QXR0cmlidXRlKGopLGQ9dGhpcy50b3VjaEFjdGlvblRvU2Nyb2xsVHlwZShjKSxmPXRoaXMudG91Y2hBY3Rpb25Ub1Njcm9sbFR5cGUoYik7ZCYmZj8odGhpcy5zY3JvbGxUeXBlLnNldChhLGQpLGUoYSkuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLnNjcm9sbFR5cGUuc2V0KGEsZCl9LHRoaXMpKTpmP3RoaXMuZWxlbWVudFJlbW92ZWQoYSk6ZCYmdGhpcy5lbGVtZW50QWRkZWQoYSl9LHNjcm9sbFR5cGVzOntFTUlUVEVSOiJub25lIixYU0NST0xMRVI6InBhbi14IixZU0NST0xMRVI6InBhbi15IixTQ1JPTExFUjovXig/OnBhbi14IHBhbi15KXwoPzpwYW4teSBwYW4teCl8YXV0byQvfSx0b3VjaEFjdGlvblRvU2Nyb2xsVHlwZTpmdW5jdGlvbihhKXt2YXIgYj1hLGM9dGhpcy5zY3JvbGxUeXBlcztyZXR1cm4ibm9uZSI9PT1iPyJub25lIjpiPT09Yy5YU0NST0xMRVI/IlgiOmI9PT1jLllTQ1JPTExFUj8iWSI6Yy5TQ1JPTExFUi5leGVjKGIpPyJYWSI6dm9pZCAwfSxQT0lOVEVSX1RZUEU6InRvdWNoIixmaXJzdFRvdWNoOm51bGwsaXNQcmltYXJ5VG91Y2g6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZmlyc3RUb3VjaD09PWEuaWRlbnRpZmllcn0sc2V0UHJpbWFyeVRvdWNoOmZ1bmN0aW9uKGEpeygwPT09Zi5wb2ludGVycygpfHwxPT09Zi5wb2ludGVycygpJiZmLmhhcygxKSkmJih0aGlzLmZpcnN0VG91Y2g9YS5pZGVudGlmaWVyLHRoaXMuZmlyc3RYWT17WDphLmNsaWVudFgsWTphLmNsaWVudFl9LHRoaXMuc2Nyb2xsaW5nPSExLHRoaXMuY2FuY2VsUmVzZXRDbGlja0NvdW50KCkpfSxyZW1vdmVQcmltYXJ5UG9pbnRlcjpmdW5jdGlvbihhKXthLmlzUHJpbWFyeSYmKHRoaXMuZmlyc3RUb3VjaD1udWxsLHRoaXMuZmlyc3RYWT1udWxsLHRoaXMucmVzZXRDbGlja0NvdW50KCkpfSxjbGlja0NvdW50OjAscmVzZXRJZDpudWxsLHJlc2V0Q2xpY2tDb3VudDpmdW5jdGlvbigpe3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5jbGlja0NvdW50PTAsdGhpcy5yZXNldElkPW51bGx9LmJpbmQodGhpcyk7dGhpcy5yZXNldElkPXNldFRpbWVvdXQoYSxpKX0sY2FuY2VsUmVzZXRDbGlja0NvdW50OmZ1bmN0aW9uKCl7dGhpcy5yZXNldElkJiZjbGVhclRpbWVvdXQodGhpcy5yZXNldElkKX0sdHlwZVRvQnV0dG9uczpmdW5jdGlvbihhKXt2YXIgYj0wO3JldHVybigidG91Y2hzdGFydCI9PT1hfHwidG91Y2htb3ZlIj09PWEpJiYoYj0xKSxifSx0b3VjaFRvUG9pbnRlcjpmdW5jdGlvbihhKXt2YXIgYj1jLmNsb25lRXZlbnQoYSk7cmV0dXJuIGIucG9pbnRlcklkPWEuaWRlbnRpZmllcisyLGIudGFyZ2V0PWQoYiksYi5idWJibGVzPSEwLGIuY2FuY2VsYWJsZT0hMCxiLmRldGFpbD10aGlzLmNsaWNrQ291bnQsYi5idXR0b249MCxiLmJ1dHRvbnM9dGhpcy50eXBlVG9CdXR0b25zKHRoaXMuY3VycmVudFRvdWNoRXZlbnQpLGIud2lkdGg9YS53ZWJraXRSYWRpdXNYfHxhLnJhZGl1c1h8fDAsYi5oZWlnaHQ9YS53ZWJraXRSYWRpdXNZfHxhLnJhZGl1c1l8fDAsYi5wcmVzc3VyZT1hLndlYmtpdEZvcmNlfHxhLmZvcmNlfHwuNSxiLmlzUHJpbWFyeT10aGlzLmlzUHJpbWFyeVRvdWNoKGEpLGIucG9pbnRlclR5cGU9dGhpcy5QT0lOVEVSX1RZUEUsYn0scHJvY2Vzc1RvdWNoZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmNoYW5nZWRUb3VjaGVzO3RoaXMuY3VycmVudFRvdWNoRXZlbnQ9YS50eXBlO3ZhciBkPWcoYyx0aGlzLnRvdWNoVG9Qb2ludGVyLHRoaXMpO2QuZm9yRWFjaChmdW5jdGlvbihiKXtiLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7dGhpcy5zY3JvbGxpbmc9ITEsdGhpcy5maXJzdFhZPW51bGwsYS5wcmV2ZW50RGVmYXVsdCgpfX0sdGhpcyksZC5mb3JFYWNoKGIsdGhpcyl9LHNob3VsZFNjcm9sbDpmdW5jdGlvbihhKXtpZih0aGlzLmZpcnN0WFkpe3ZhciBiLGM9dGhpcy5zY3JvbGxUeXBlLmdldChhLmN1cnJlbnRUYXJnZXQpO2lmKCJub25lIj09PWMpYj0hMTtlbHNlIGlmKCJYWSI9PT1jKWI9ITA7ZWxzZXt2YXIgZD1hLmNoYW5nZWRUb3VjaGVzWzBdLGU9YyxmPSJZIj09PWM/IlgiOiJZIixnPU1hdGguYWJzKGRbImNsaWVudCIrZV0tdGhpcy5maXJzdFhZW2VdKSxoPU1hdGguYWJzKGRbImNsaWVudCIrZl0tdGhpcy5maXJzdFhZW2ZdKTtiPWc+PWh9cmV0dXJuIHRoaXMuZmlyc3RYWT1udWxsLGJ9fSxmaW5kVG91Y2g6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGMsZD0wLGU9YS5sZW5ndGg7ZT5kJiYoYz1hW2RdKTtkKyspaWYoYy5pZGVudGlmaWVyPT09YilyZXR1cm4hMH0sdmFjdXVtVG91Y2hlczpmdW5jdGlvbihhKXt2YXIgYj1hLnRvdWNoZXM7aWYoZi5wb2ludGVycygpPj1iLmxlbmd0aCl7dmFyIGM9W107Zi5mb3JFYWNoKGZ1bmN0aW9uKGEsZCl7aWYoMSE9PWQmJiF0aGlzLmZpbmRUb3VjaChiLGQtMikpe3ZhciBlPWEub3V0O2MucHVzaCh0aGlzLnRvdWNoVG9Qb2ludGVyKGUpKX19LHRoaXMpLGMuZm9yRWFjaCh0aGlzLmNhbmNlbE91dCx0aGlzKX19LHRvdWNoc3RhcnQ6ZnVuY3Rpb24oYSl7dGhpcy52YWN1dW1Ub3VjaGVzKGEpLHRoaXMuc2V0UHJpbWFyeVRvdWNoKGEuY2hhbmdlZFRvdWNoZXNbMF0pLHRoaXMuZGVkdXBTeW50aE1vdXNlKGEpLHRoaXMuc2Nyb2xsaW5nfHwodGhpcy5jbGlja0NvdW50KyssdGhpcy5wcm9jZXNzVG91Y2hlcyhhLHRoaXMub3ZlckRvd24pKX0sb3ZlckRvd246ZnVuY3Rpb24oYSl7Zi5zZXQoYS5wb2ludGVySWQse3RhcmdldDphLnRhcmdldCxvdXQ6YSxvdXRUYXJnZXQ6YS50YXJnZXR9KTtjLm92ZXIoYSksYy5lbnRlcihhKSxjLmRvd24oYSl9LHRvdWNobW92ZTpmdW5jdGlvbihhKXt0aGlzLnNjcm9sbGluZ3x8KHRoaXMuc2hvdWxkU2Nyb2xsKGEpPyh0aGlzLnNjcm9sbGluZz0hMCx0aGlzLnRvdWNoY2FuY2VsKGEpKTooYS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMucHJvY2Vzc1RvdWNoZXMoYSx0aGlzLm1vdmVPdmVyT3V0KSkpfSxtb3ZlT3Zlck91dDpmdW5jdGlvbihhKXt2YXIgYj1hLGQ9Zi5nZXQoYi5wb2ludGVySWQpO2lmKGQpe3ZhciBlPWQub3V0LGc9ZC5vdXRUYXJnZXQ7Yy5tb3ZlKGIpLGUmJmchPT1iLnRhcmdldCYmKGUucmVsYXRlZFRhcmdldD1iLnRhcmdldCxiLnJlbGF0ZWRUYXJnZXQ9ZyxlLnRhcmdldD1nLGIudGFyZ2V0PyhjLmxlYXZlT3V0KGUpLGMuZW50ZXJPdmVyKGIpKTooYi50YXJnZXQ9ZyxiLnJlbGF0ZWRUYXJnZXQ9bnVsbCx0aGlzLmNhbmNlbE91dChiKSkpLGQub3V0PWIsZC5vdXRUYXJnZXQ9Yi50YXJnZXR9fSx0b3VjaGVuZDpmdW5jdGlvbihhKXt0aGlzLmRlZHVwU3ludGhNb3VzZShhKSx0aGlzLnByb2Nlc3NUb3VjaGVzKGEsdGhpcy51cE91dCl9LHVwT3V0OmZ1bmN0aW9uKGEpe3RoaXMuc2Nyb2xsaW5nfHwoYy51cChhKSxjLm91dChhKSxjLmxlYXZlKGEpKSx0aGlzLmNsZWFuVXBQb2ludGVyKGEpfSx0b3VjaGNhbmNlbDpmdW5jdGlvbihhKXt0aGlzLnByb2Nlc3NUb3VjaGVzKGEsdGhpcy5jYW5jZWxPdXQpfSxjYW5jZWxPdXQ6ZnVuY3Rpb24oYSl7Yy5jYW5jZWwoYSksYy5vdXQoYSksYy5sZWF2ZShhKSx0aGlzLmNsZWFuVXBQb2ludGVyKGEpfSxjbGVhblVwUG9pbnRlcjpmdW5jdGlvbihhKXtmWyJkZWxldGUiXShhLnBvaW50ZXJJZCksdGhpcy5yZW1vdmVQcmltYXJ5UG9pbnRlcihhKX0sZGVkdXBTeW50aE1vdXNlOmZ1bmN0aW9uKGIpe3ZhciBjPWEubW91c2VFdmVudHMubGFzdFRvdWNoZXMsZD1iLmNoYW5nZWRUb3VjaGVzWzBdO2lmKHRoaXMuaXNQcmltYXJ5VG91Y2goZCkpe3ZhciBlPXt4OmQuY2xpZW50WCx5OmQuY2xpZW50WX07Yy5wdXNoKGUpO3ZhciBmPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5pbmRleE9mKGIpO2M+LTEmJmEuc3BsaWNlKGMsMSl9LmJpbmQobnVsbCxjLGUpO3NldFRpbWVvdXQoZixoKX19fTtrfHwoYj1uZXcgYS5JbnN0YWxsZXIobC5lbGVtZW50QWRkZWQsbC5lbGVtZW50UmVtb3ZlZCxsLmVsZW1lbnRDaGFuZ2VkLGwpKSxhLnRvdWNoRXZlbnRzPWx9KHdpbmRvdy5Qb2ludGVyRXZlbnRzUG9seWZpbGwpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzcGF0Y2hlcixjPWIucG9pbnRlcm1hcCxkPXdpbmRvdy5NU1BvaW50ZXJFdmVudCYmIm51bWJlciI9PXR5cGVvZiB3aW5kb3cuTVNQb2ludGVyRXZlbnQuTVNQT0lOVEVSX1RZUEVfTU9VU0UsZT17ZXZlbnRzOlsiTVNQb2ludGVyRG93biIsIk1TUG9pbnRlck1vdmUiLCJNU1BvaW50ZXJVcCIsIk1TUG9pbnRlck91dCIsIk1TUG9pbnRlck92ZXIiLCJNU1BvaW50ZXJDYW5jZWwiLCJNU0dvdFBvaW50ZXJDYXB0dXJlIiwiTVNMb3N0UG9pbnRlckNhcHR1cmUiXSxyZWdpc3RlcjpmdW5jdGlvbihhKXtiLmxpc3RlbihhLHRoaXMuZXZlbnRzKX0sdW5yZWdpc3RlcjpmdW5jdGlvbihhKXtiLnVubGlzdGVuKGEsdGhpcy5ldmVudHMpfSxQT0lOVEVSX1RZUEVTOlsiIiwidW5hdmFpbGFibGUiLCJ0b3VjaCIsInBlbiIsIm1vdXNlIl0scHJlcGFyZUV2ZW50OmZ1bmN0aW9uKGEpe3ZhciBjPWE7cmV0dXJuIGQmJihjPWIuY2xvbmVFdmVudChhKSxjLnBvaW50ZXJUeXBlPXRoaXMuUE9JTlRFUl9UWVBFU1thLnBvaW50ZXJUeXBlXSksY30sY2xlYW51cDpmdW5jdGlvbihhKXtjWyJkZWxldGUiXShhKX0sTVNQb2ludGVyRG93bjpmdW5jdGlvbihhKXtjLnNldChhLnBvaW50ZXJJZCxhKTt2YXIgZD10aGlzLnByZXBhcmVFdmVudChhKTtiLmRvd24oZCl9LE1TUG9pbnRlck1vdmU6ZnVuY3Rpb24oYSl7dmFyIGM9dGhpcy5wcmVwYXJlRXZlbnQoYSk7Yi5tb3ZlKGMpfSxNU1BvaW50ZXJVcDpmdW5jdGlvbihhKXt2YXIgYz10aGlzLnByZXBhcmVFdmVudChhKTtiLnVwKGMpLHRoaXMuY2xlYW51cChhLnBvaW50ZXJJZCl9LE1TUG9pbnRlck91dDpmdW5jdGlvbihhKXt2YXIgYz10aGlzLnByZXBhcmVFdmVudChhKTtiLmxlYXZlT3V0KGMpfSxNU1BvaW50ZXJPdmVyOmZ1bmN0aW9uKGEpe3ZhciBjPXRoaXMucHJlcGFyZUV2ZW50KGEpO2IuZW50ZXJPdmVyKGMpfSxNU1BvaW50ZXJDYW5jZWw6ZnVuY3Rpb24oYSl7dmFyIGM9dGhpcy5wcmVwYXJlRXZlbnQoYSk7Yi5jYW5jZWwoYyksdGhpcy5jbGVhbnVwKGEucG9pbnRlcklkKX0sTVNMb3N0UG9pbnRlckNhcHR1cmU6ZnVuY3Rpb24oYSl7dmFyIGM9Yi5tYWtlRXZlbnQoImxvc3Rwb2ludGVyY2FwdHVyZSIsYSk7Yi5kaXNwYXRjaEV2ZW50KGMpfSxNU0dvdFBvaW50ZXJDYXB0dXJlOmZ1bmN0aW9uKGEpe3ZhciBjPWIubWFrZUV2ZW50KCJnb3Rwb2ludGVyY2FwdHVyZSIsYSk7Yi5kaXNwYXRjaEV2ZW50KGMpfX07YS5tc0V2ZW50cz1lfSh3aW5kb3cuUG9pbnRlckV2ZW50c1BvbHlmaWxsKSxmdW5jdGlvbihhKXt2YXIgYj1hLmRpc3BhdGNoZXI7aWYodm9pZCAwPT09d2luZG93Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCl7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdy5uYXZpZ2F0b3IsInBvaW50ZXJFbmFibGVkIix7dmFsdWU6ITAsZW51bWVyYWJsZTohMH0pLHdpbmRvdy5uYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZCl7dmFyIGM9d2luZG93Lm5hdmlnYXRvci5tc01heFRvdWNoUG9pbnRzO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3cubmF2aWdhdG9yLCJtYXhUb3VjaFBvaW50cyIse3ZhbHVlOmMsZW51bWVyYWJsZTohMH0pLGIucmVnaXN0ZXJTb3VyY2UoIm1zIixhLm1zRXZlbnRzKX1lbHNlIGIucmVnaXN0ZXJTb3VyY2UoIm1vdXNlIixhLm1vdXNlRXZlbnRzKSx2b2lkIDAhPT13aW5kb3cub250b3VjaHN0YXJ0JiZiLnJlZ2lzdGVyU291cmNlKCJ0b3VjaCIsYS50b3VjaEV2ZW50cyk7Yi5yZWdpc3Rlcihkb2N1bWVudCl9fSh3aW5kb3cuUG9pbnRlckV2ZW50c1BvbHlmaWxsKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe2lmKCFlLnBvaW50ZXJtYXAuaGFzKGEpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZFBvaW50ZXJJZCIpfXZhciBjLGQsZT1hLmRpc3BhdGNoZXIsZj13aW5kb3cubmF2aWdhdG9yO2YubXNQb2ludGVyRW5hYmxlZD8oYz1mdW5jdGlvbihhKXtiKGEpLHRoaXMubXNTZXRQb2ludGVyQ2FwdHVyZShhKX0sZD1mdW5jdGlvbihhKXtiKGEpLHRoaXMubXNSZWxlYXNlUG9pbnRlckNhcHR1cmUoYSl9KTooYz1mdW5jdGlvbihhKXtiKGEpLGUuc2V0Q2FwdHVyZShhLHRoaXMpfSxkPWZ1bmN0aW9uKGEpe2IoYSksZS5yZWxlYXNlQ2FwdHVyZShhLHRoaXMpfSksd2luZG93LkVsZW1lbnQmJiFFbGVtZW50LnByb3RvdHlwZS5zZXRQb2ludGVyQ2FwdHVyZSYmT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoRWxlbWVudC5wcm90b3R5cGUse3NldFBvaW50ZXJDYXB0dXJlOnt2YWx1ZTpjfSxyZWxlYXNlUG9pbnRlckNhcHR1cmU6e3ZhbHVlOmR9fSl9KHdpbmRvdy5Qb2ludGVyRXZlbnRzUG9seWZpbGwpLFBvaW50ZXJHZXN0dXJlRXZlbnQucHJvdG90eXBlLnByZXZlbnRUYXA9ZnVuY3Rpb24oKXt0aGlzLnRhcFByZXZlbnRlZD0hMH0sZnVuY3Rpb24oYSl7YT1hfHx7fSxhLnV0aWxzPXtMQ0E6e2ZpbmQ6ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gYTtpZihhLmNvbnRhaW5zKXtpZihhLmNvbnRhaW5zKGIpKXJldHVybiBhO2lmKGIuY29udGFpbnMoYSkpcmV0dXJuIGJ9dmFyIGM9dGhpcy5kZXB0aChhKSxkPXRoaXMuZGVwdGgoYiksZT1jLWQ7Zm9yKGU+MD9hPXRoaXMud2FsayhhLGUpOmI9dGhpcy53YWxrKGIsLWUpO2EmJmImJmEhPT1iOylhPXRoaXMud2FsayhhLDEpLGI9dGhpcy53YWxrKGIsMSk7cmV0dXJuIGF9LHdhbGs6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtiPmM7YysrKWE9YS5wYXJlbnROb2RlO3JldHVybiBhfSxkZXB0aDpmdW5jdGlvbihhKXtmb3IodmFyIGI9MDthOyliKyssYT1hLnBhcmVudE5vZGU7cmV0dXJuIGJ9fX0sYS5maW5kTENBPWZ1bmN0aW9uKGIsYyl7cmV0dXJuIGEudXRpbHMuTENBLmZpbmQoYixjKX0sd2luZG93LlBvaW50ZXJHZXN0dXJlcz1hfSh3aW5kb3cuUG9pbnRlckdlc3R1cmVzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7aWYoYyl7dmFyIGE9bmV3IE1hcDtyZXR1cm4gYS5wb2ludGVycz1kLGF9dGhpcy5rZXlzPVtdLHRoaXMudmFsdWVzPVtdfXZhciBjPXdpbmRvdy5NYXAmJndpbmRvdy5NYXAucHJvdG90eXBlLmZvckVhY2gsZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNpemV9O2IucHJvdG90eXBlPXtzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmtleXMuaW5kZXhPZihhKTtjPi0xP3RoaXMudmFsdWVzW2NdPWI6KHRoaXMua2V5cy5wdXNoKGEpLHRoaXMudmFsdWVzLnB1c2goYikpfSxoYXM6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMua2V5cy5pbmRleE9mKGEpPi0xfSwiZGVsZXRlIjpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmtleXMuaW5kZXhPZihhKTtiPi0xJiYodGhpcy5rZXlzLnNwbGljZShiLDEpLHRoaXMudmFsdWVzLnNwbGljZShiLDEpKX0sZ2V0OmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMua2V5cy5pbmRleE9mKGEpO3JldHVybiB0aGlzLnZhbHVlc1tiXX0sY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLmtleXMubGVuZ3RoPTAsdGhpcy52YWx1ZXMubGVuZ3RoPTB9LGZvckVhY2g6ZnVuY3Rpb24oYSxiKXt0aGlzLnZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKGMsZCl7YS5jYWxsKGIsYyx0aGlzLmtleXNbZF0sdGhpcyl9LHRoaXMpfSxwb2ludGVyczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmtleXMubGVuZ3RofX0sYS5Qb2ludGVyTWFwPWJ9KHdpbmRvdy5Qb2ludGVyR2VzdHVyZXMpLGZ1bmN0aW9uKGEpe3ZhciBiPVsiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ2aWV3IiwiZGV0YWlsIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsImN0cmxLZXkiLCJhbHRLZXkiLCJzaGlmdEtleSIsIm1ldGFLZXkiLCJidXR0b24iLCJyZWxhdGVkVGFyZ2V0IiwiYnV0dG9ucyIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwicG9pbnRlclR5cGUiLCJod1RpbWVzdGFtcCIsImlzUHJpbWFyeSIsInR5cGUiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0Iiwic2NyZWVuWCIsInNjcmVlblkiLCJwYWdlWCIsInBhZ2VZIiwidGFwUHJldmVudGVkIl0sYz1bITEsITEsbnVsbCxudWxsLDAsMCwwLDAsITEsITEsITEsITEsMCxudWxsLDAsMCwwLDAsMCwwLDAsIiIsMCwhMSwiIixudWxsLG51bGwsMCwwLDAsMF0sZD17aGFuZGxlZEV2ZW50czpuZXcgV2Vha01hcCx0YXJnZXRzOm5ldyBXZWFrTWFwLGhhbmRsZXJzOnt9LHJlY29nbml6ZXJzOnt9LGV2ZW50czp7fSxyZWdpc3RlclJlY29nbml6ZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iO3RoaXMucmVjb2duaXplcnNbYV09YyxjLmV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGEpe2lmKGNbYV0pe3RoaXMuZXZlbnRzW2FdPSEwO3ZhciBiPWNbYV0uYmluZChjKTt0aGlzLmFkZEhhbmRsZXIoYSxiKX19LHRoaXMpfSxhZGRIYW5kbGVyOmZ1bmN0aW9uKGEsYil7dmFyIGM9YTt0aGlzLmhhbmRsZXJzW2NdfHwodGhpcy5oYW5kbGVyc1tjXT1bXSksdGhpcy5oYW5kbGVyc1tjXS5wdXNoKGIpfSxyZWdpc3RlclRhcmdldDpmdW5jdGlvbihhKXt0aGlzLmxpc3RlbihPYmplY3Qua2V5cyh0aGlzLmV2ZW50cyksYSl9LHVucmVnaXN0ZXJUYXJnZXQ6ZnVuY3Rpb24oYSl7dGhpcy51bmxpc3RlbihPYmplY3Qua2V5cyh0aGlzLmV2ZW50cyksYSl9LGV2ZW50SGFuZGxlcjpmdW5jdGlvbihhKXtpZighdGhpcy5oYW5kbGVkRXZlbnRzLmdldChhKSl7dmFyIGI9YS50eXBlLGM9dGhpcy5oYW5kbGVyc1tiXTtjJiZ0aGlzLm1ha2VRdWV1ZShjLGEpLHRoaXMuaGFuZGxlZEV2ZW50cy5zZXQoYSwhMCl9fSxtYWtlUXVldWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmNsb25lRXZlbnQoYik7c2V0VGltZW91dCh0aGlzLnJ1blF1ZXVlLmJpbmQodGhpcyxhLGMpLDApfSxydW5RdWV1ZTpmdW5jdGlvbihhLGIpe3RoaXMuY3VycmVudFBvaW50ZXJJZD1iLnBvaW50ZXJJZDtmb3IodmFyIGMsZD0wLGU9YS5sZW5ndGg7ZT5kJiYoYz1hW2RdKTtkKyspYyhiKTt0aGlzLmN1cnJlbnRQb2ludGVySWQ9MH0sbGlzdGVuOmZ1bmN0aW9uKGEsYil7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMuYWRkRXZlbnQoYSx0aGlzLmJvdW5kSGFuZGxlciwhMSxiKX0sdGhpcyl9LHVubGlzdGVuOmZ1bmN0aW9uKGEpe2EuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLnJlbW92ZUV2ZW50KGEsdGhpcy5ib3VuZEhhbmRsZXIsITEsaW5UYXJnZXQpfSx0aGlzKX0sYWRkRXZlbnQ6ZnVuY3Rpb24oYSxiLGMsZCl7ZC5hZGRFdmVudExpc3RlbmVyKGEsYixjKX0scmVtb3ZlRXZlbnQ6ZnVuY3Rpb24oYSxiLGMsZCl7ZC5yZW1vdmVFdmVudExpc3RlbmVyKGEsYixjKX0sbWFrZUV2ZW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBQb2ludGVyR2VzdHVyZUV2ZW50KGEsYil9LGNsb25lRXZlbnQ6ZnVuY3Rpb24oYSl7Zm9yKHZhciBkLGU9e30sZj0wO2Y8Yi5sZW5ndGg7ZisrKWQ9YltmXSxlW2RdPWFbZF18fGNbZl07cmV0dXJuIGV9LGRpc3BhdGNoRXZlbnQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz1ifHx0aGlzLnRhcmdldHMuZ2V0KGEpO2MmJihjLmRpc3BhdGNoRXZlbnQoYSksYS50YXBQcmV2ZW50ZWQmJnRoaXMucHJldmVudFRhcCh0aGlzLmN1cnJlbnRQb2ludGVySWQpKX0sYXN5bmNEaXNwYXRjaEV2ZW50OmZ1bmN0aW9uKGEsYil7dmFyIGM9ZnVuY3Rpb24oKXt0aGlzLmRpc3BhdGNoRXZlbnQoYSxiKX0uYmluZCh0aGlzKTtzZXRUaW1lb3V0KGMsMCl9LHByZXZlbnRUYXA6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5yZWNvZ25pemVycy50YXA7YiYmYi5wcmV2ZW50VGFwKGEpfX07ZC5ib3VuZEhhbmRsZXI9ZC5ldmVudEhhbmRsZXIuYmluZChkKSxkLnJlZ2lzdGVyUXVldWU9W10sZC5pbW1lZGlhdGVSZWdpc3Rlcj0hMSxhLmRpc3BhdGNoZXI9ZCxhLnJlZ2lzdGVyPWZ1bmN0aW9uKGIpe2lmKGQuaW1tZWRpYXRlUmVnaXN0ZXIpe3ZhciBjPXdpbmRvdy5Qb2ludGVyRXZlbnRzUG9seWZpbGw7YyYmYy5yZWdpc3RlcihiKSxhLmRpc3BhdGNoZXIucmVnaXN0ZXJUYXJnZXQoYil9ZWxzZSBkLnJlZ2lzdGVyUXVldWUucHVzaChiKX0sYS5yZWdpc3Rlcihkb2N1bWVudCl9KHdpbmRvdy5Qb2ludGVyR2VzdHVyZXMpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzcGF0Y2hlcixjPXtIT0xEX0RFTEFZOjIwMCxXSUdHTEVfVEhSRVNIT0xEOjE2LGV2ZW50czpbInBvaW50ZXJkb3duIiwicG9pbnRlcm1vdmUiLCJwb2ludGVydXAiLCJwb2ludGVyY2FuY2VsIl0saGVsZFBvaW50ZXI6bnVsbCxob2xkSm9iOm51bGwscHVsc2U6ZnVuY3Rpb24oKXt2YXIgYT1EYXRlLm5vdygpLXRoaXMuaGVsZFBvaW50ZXIudGltZVN0YW1wLGI9dGhpcy5oZWxkPyJob2xkcHVsc2UiOiJob2xkIjt0aGlzLmZpcmVIb2xkKGIsYSksdGhpcy5oZWxkPSEwfSxjYW5jZWw6ZnVuY3Rpb24oKXtjbGVhckludGVydmFsKHRoaXMuaG9sZEpvYiksdGhpcy5oZWxkJiZ0aGlzLmZpcmVIb2xkKCJyZWxlYXNlIiksdGhpcy5oZWxkPSExLHRoaXMuaGVsZFBvaW50ZXI9bnVsbCx0aGlzLnRhcmdldD1udWxsLHRoaXMuaG9sZEpvYj1udWxsfSxwb2ludGVyZG93bjpmdW5jdGlvbihhKXthLmlzUHJpbWFyeSYmIXRoaXMuaGVsZFBvaW50ZXImJih0aGlzLmhlbGRQb2ludGVyPWEsdGhpcy50YXJnZXQ9YS50YXJnZXQsdGhpcy5ob2xkSm9iPXNldEludGVydmFsKHRoaXMucHVsc2UuYmluZCh0aGlzKSx0aGlzLkhPTERfREVMQVkpKX0scG9pbnRlcnVwOmZ1bmN0aW9uKGEpe3RoaXMuaGVsZFBvaW50ZXImJnRoaXMuaGVsZFBvaW50ZXIucG9pbnRlcklkPT09YS5wb2ludGVySWQmJnRoaXMuY2FuY2VsKCl9LHBvaW50ZXJjYW5jZWw6ZnVuY3Rpb24oKXt0aGlzLmNhbmNlbCgpfSxwb2ludGVybW92ZTpmdW5jdGlvbihhKXtpZih0aGlzLmhlbGRQb2ludGVyJiZ0aGlzLmhlbGRQb2ludGVyLnBvaW50ZXJJZD09PWEucG9pbnRlcklkKXt2YXIgYj1hLmNsaWVudFgtdGhpcy5oZWxkUG9pbnRlci5jbGllbnRYLGM9YS5jbGllbnRZLXRoaXMuaGVsZFBvaW50ZXIuY2xpZW50WTtiKmIrYypjPnRoaXMuV0lHR0xFX1RIUkVTSE9MRCYmdGhpcy5jYW5jZWwoKX19LGZpcmVIb2xkOmZ1bmN0aW9uKGEsYyl7dmFyIGQ9e3BvaW50ZXJUeXBlOnRoaXMuaGVsZFBvaW50ZXIucG9pbnRlclR5cGUsY2xpZW50WDp0aGlzLmhlbGRQb2ludGVyLmNsaWVudFgsY2xpZW50WTp0aGlzLmhlbGRQb2ludGVyLmNsaWVudFl9O2MmJihkLmhvbGRUaW1lPWMpO3ZhciBlPWIubWFrZUV2ZW50KGEsZCk7Yi5kaXNwYXRjaEV2ZW50KGUsdGhpcy50YXJnZXQpLGUudGFwUHJldmVudGVkJiZiLnByZXZlbnRUYXAodGhpcy5oZWxkUG9pbnRlci5wb2ludGVySWQpfX07Yi5yZWdpc3RlclJlY29nbml6ZXIoImhvbGQiLGMpfSh3aW5kb3cuUG9pbnRlckdlc3R1cmVzKSxmdW5jdGlvbihhKXt2YXIgYj1hLmRpc3BhdGNoZXIsYz1uZXcgYS5Qb2ludGVyTWFwLGQ9e2V2ZW50czpbInBvaW50ZXJkb3duIiwicG9pbnRlcm1vdmUiLCJwb2ludGVydXAiLCJwb2ludGVyY2FuY2VsIl0sV0lHR0xFX1RIUkVTSE9MRDo0LGNsYW1wRGlyOmZ1bmN0aW9uKGEpe3JldHVybiBhPjA/MTotMX0sY2FsY1Bvc2l0aW9uRGVsdGE6ZnVuY3Rpb24oYSxiKXt2YXIgYz0wLGQ9MDtyZXR1cm4gYSYmYiYmKGM9Yi5wYWdlWC1hLnBhZ2VYLGQ9Yi5wYWdlWS1hLnBhZ2VZKSx7eDpjLHk6ZH19LGZpcmVUcmFjazpmdW5jdGlvbihhLGMsZCl7dmFyIGU9ZCxmPXRoaXMuY2FsY1Bvc2l0aW9uRGVsdGEoZS5kb3duRXZlbnQsYyksZz10aGlzLmNhbGNQb3NpdGlvbkRlbHRhKGUubGFzdE1vdmVFdmVudCxjKTtnLngmJihlLnhEaXJlY3Rpb249dGhpcy5jbGFtcERpcihnLngpKSxnLnkmJihlLnlEaXJlY3Rpb249dGhpcy5jbGFtcERpcihnLnkpKTt2YXIgaD17ZHg6Zi54LGR5OmYueSxkZHg6Zy54LGRkeTpnLnksY2xpZW50WDpjLmNsaWVudFgsY2xpZW50WTpjLmNsaWVudFkscGFnZVg6Yy5wYWdlWCxwYWdlWTpjLnBhZ2VZLHNjcmVlblg6Yy5zY3JlZW5YLHNjcmVlblk6Yy5zY3JlZW5ZLHhEaXJlY3Rpb246ZS54RGlyZWN0aW9uLHlEaXJlY3Rpb246ZS55RGlyZWN0aW9uLHRyYWNrSW5mbzplLnRyYWNrSW5mbyxyZWxhdGVkVGFyZ2V0OmMudGFyZ2V0LHBvaW50ZXJUeXBlOmMucG9pbnRlclR5cGV9LGk9Yi5tYWtlRXZlbnQoYSxoKTtlLmxhc3RNb3ZlRXZlbnQ9YyxiLmRpc3BhdGNoRXZlbnQoaSxlLmRvd25UYXJnZXQpfSxwb2ludGVyZG93bjpmdW5jdGlvbihhKXtpZihhLmlzUHJpbWFyeSYmKCJtb3VzZSI9PT1hLnBvaW50ZXJUeXBlPzE9PT1hLmJ1dHRvbnM6ITApKXt2YXIgYj17ZG93bkV2ZW50OmEsZG93blRhcmdldDphLnRhcmdldCx0cmFja0luZm86e30sbGFzdE1vdmVFdmVudDpudWxsLHhEaXJlY3Rpb246MCx5RGlyZWN0aW9uOjAsdHJhY2tpbmc6ITF9O2Muc2V0KGEucG9pbnRlcklkLGIpfX0scG9pbnRlcm1vdmU6ZnVuY3Rpb24oYSl7dmFyIGI9Yy5nZXQoYS5wb2ludGVySWQpO2lmKGIpaWYoYi50cmFja2luZyl0aGlzLmZpcmVUcmFjaygidHJhY2siLGEsYik7ZWxzZXt2YXIgZD10aGlzLmNhbGNQb3NpdGlvbkRlbHRhKGIuZG93bkV2ZW50LGEpLGU9ZC54KmQueCtkLnkqZC55O2U+dGhpcy5XSUdHTEVfVEhSRVNIT0xEJiYoYi50cmFja2luZz0hMCx0aGlzLmZpcmVUcmFjaygidHJhY2tzdGFydCIsYi5kb3duRXZlbnQsYiksdGhpcy5maXJlVHJhY2soInRyYWNrIixhLGIpKX19LHBvaW50ZXJ1cDpmdW5jdGlvbihhKXt2YXIgYj1jLmdldChhLnBvaW50ZXJJZCk7YiYmKGIudHJhY2tpbmcmJnRoaXMuZmlyZVRyYWNrKCJ0cmFja2VuZCIsYSxiKSxjLmRlbGV0ZShhLnBvaW50ZXJJZCkpfSxwb2ludGVyY2FuY2VsOmZ1bmN0aW9uKGEpe3RoaXMucG9pbnRlcnVwKGEpfX07Yi5yZWdpc3RlclJlY29nbml6ZXIoInRyYWNrIixkKX0od2luZG93LlBvaW50ZXJHZXN0dXJlcyksZnVuY3Rpb24oYSl7dmFyIGI9YS5kaXNwYXRjaGVyLGM9e01JTl9WRUxPQ0lUWTouNSxNQVhfUVVFVUU6NCxtb3ZlUXVldWU6W10sdGFyZ2V0Om51bGwscG9pbnRlcklkOm51bGwsZXZlbnRzOlsicG9pbnRlcmRvd24iLCJwb2ludGVybW92ZSIsInBvaW50ZXJ1cCIsInBvaW50ZXJjYW5jZWwiXSxwb2ludGVyZG93bjpmdW5jdGlvbihhKXthLmlzUHJpbWFyeSYmIXRoaXMucG9pbnRlcklkJiYodGhpcy5wb2ludGVySWQ9YS5wb2ludGVySWQsdGhpcy50YXJnZXQ9YS50YXJnZXQsdGhpcy5hZGRNb3ZlKGEpKX0scG9pbnRlcm1vdmU6ZnVuY3Rpb24oYSl7YS5wb2ludGVySWQ9PT10aGlzLnBvaW50ZXJJZCYmdGhpcy5hZGRNb3ZlKGEpfSxwb2ludGVydXA6ZnVuY3Rpb24oYSl7YS5wb2ludGVySWQ9PT10aGlzLnBvaW50ZXJJZCYmdGhpcy5maXJlRmxpY2soYSksdGhpcy5jbGVhbnVwKCl9LHBvaW50ZXJjYW5jZWw6ZnVuY3Rpb24oKXt0aGlzLmNsZWFudXAoKX0sY2xlYW51cDpmdW5jdGlvbigpe3RoaXMubW92ZVF1ZXVlPVtdLHRoaXMudGFyZ2V0PW51bGwsdGhpcy5wb2ludGVySWQ9bnVsbH0sYWRkTW92ZTpmdW5jdGlvbihhKXt0aGlzLm1vdmVRdWV1ZS5sZW5ndGg+PXRoaXMuTUFYX1FVRVVFJiZ0aGlzLm1vdmVRdWV1ZS5zaGlmdCgpLHRoaXMubW92ZVF1ZXVlLnB1c2goYSl9LGZpcmVGbGljazpmdW5jdGlvbihhKXtmb3IodmFyIGMsZCxlLGYsZyxoLGksaj1hLGs9dGhpcy5tb3ZlUXVldWUubGVuZ3RoLGw9MCxtPTAsbj0wLG89MDtrPm8mJihpPXRoaXMubW92ZVF1ZXVlW29dKTtvKyspYz1qLnRpbWVTdGFtcC1pLnRpbWVTdGFtcCxkPWouY2xpZW50WC1pLmNsaWVudFgsZT1qLmNsaWVudFktaS5jbGllbnRZLGY9ZC9jLGc9ZS9jLGg9TWF0aC5zcXJ0KGYqZitnKmcpLGg+biYmKGw9ZixtPWcsbj1oKTt2YXIgcD1NYXRoLmFicyhsKT5NYXRoLmFicyhtKT8ieCI6InkiLHE9dGhpcy5jYWxjQW5nbGUobCxtKTtpZihNYXRoLmFicyhuKT49dGhpcy5NSU5fVkVMT0NJVFkpe3ZhciByPWIubWFrZUV2ZW50KCJmbGljayIse3hWZWxvY2l0eTpsLHlWZWxvY2l0eTptLHZlbG9jaXR5Om4sYW5nbGU6cSxtYWpvckF4aXM6cCxwb2ludGVyVHlwZTphLnBvaW50ZXJUeXBlfSk7Yi5kaXNwYXRjaEV2ZW50KHIsdGhpcy50YXJnZXQpfX0sY2FsY0FuZ2xlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIDE4MCpNYXRoLmF0YW4yKGIsYSkvTWF0aC5QSX19O2IucmVnaXN0ZXJSZWNvZ25pemVyKCJmbGljayIsYyl9KHdpbmRvdy5Qb2ludGVyR2VzdHVyZXMpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzcGF0Y2hlcixjPW5ldyBhLlBvaW50ZXJNYXAsZD0xODAvTWF0aC5QSSxlPXtldmVudHM6WyJwb2ludGVyZG93biIsInBvaW50ZXJtb3ZlIiwicG9pbnRlcnVwIiwicG9pbnRlcmNhbmNlbCJdLHJlZmVyZW5jZTp7fSxwb2ludGVyZG93bjpmdW5jdGlvbihiKXtpZihjLnNldChiLnBvaW50ZXJJZCxiKSwyPT1jLnBvaW50ZXJzKCkpe3ZhciBkPXRoaXMuY2FsY0Nob3JkKCksZT10aGlzLmNhbGNBbmdsZShkKTt0aGlzLnJlZmVyZW5jZT17YW5nbGU6ZSxkaWFtZXRlcjpkLmRpYW1ldGVyLHRhcmdldDphLmZpbmRMQ0EoZC5hLnRhcmdldCxkLmIudGFyZ2V0KX19fSxwb2ludGVydXA6ZnVuY3Rpb24oYSl7Yy5kZWxldGUoYS5wb2ludGVySWQpfSxwb2ludGVybW92ZTpmdW5jdGlvbihhKXtjLmhhcyhhLnBvaW50ZXJJZCkmJihjLnNldChhLnBvaW50ZXJJZCxhKSxjLnBvaW50ZXJzKCk+MSYmdGhpcy5jYWxjUGluY2hSb3RhdGUoKSl9LHBvaW50ZXJjYW5jZWw6ZnVuY3Rpb24oYSl7dGhpcy5wb2ludGVydXAoYSl9LGRpc3BhdGNoUGluY2g6ZnVuY3Rpb24oYSxjKXt2YXIgZD1hL3RoaXMucmVmZXJlbmNlLmRpYW1ldGVyLGU9Yi5tYWtlRXZlbnQoInBpbmNoIix7c2NhbGU6ZCxjZW50ZXJYOmMuY2VudGVyLngsY2VudGVyWTpjLmNlbnRlci55fSk7Yi5kaXNwYXRjaEV2ZW50KGUsdGhpcy5yZWZlcmVuY2UudGFyZ2V0KX0sZGlzcGF0Y2hSb3RhdGU6ZnVuY3Rpb24oYSxjKXt2YXIgZD1NYXRoLnJvdW5kKChhLXRoaXMucmVmZXJlbmNlLmFuZ2xlKSUzNjApLGU9Yi5tYWtlRXZlbnQoInJvdGF0ZSIse2FuZ2xlOmQsY2VudGVyWDpjLmNlbnRlci54LGNlbnRlclk6Yy5jZW50ZXIueX0pO2IuZGlzcGF0Y2hFdmVudChlLHRoaXMucmVmZXJlbmNlLnRhcmdldCl9LGNhbGNQaW5jaFJvdGF0ZTpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY2FsY0Nob3JkKCksYj1hLmRpYW1ldGVyLGM9dGhpcy5jYWxjQW5nbGUoYSk7YiE9dGhpcy5yZWZlcmVuY2UuZGlhbWV0ZXImJnRoaXMuZGlzcGF0Y2hQaW5jaChiLGEpLGMhPXRoaXMucmVmZXJlbmNlLmFuZ2xlJiZ0aGlzLmRpc3BhdGNoUm90YXRlKGMsYSl9LGNhbGNDaG9yZDpmdW5jdGlvbigpe3ZhciBhPVtdO2MuZm9yRWFjaChmdW5jdGlvbihiKXthLnB1c2goYil9KTtmb3IodmFyIGIsZCxlLGY9MCxnPXthOmFbMF0sYjphWzFdfSxoPTA7aDxhLmxlbmd0aDtoKyspZm9yKHZhciBpPWFbaF0saj1oKzE7ajxhLmxlbmd0aDtqKyspe3ZhciBrPWFbal07Yj1NYXRoLmFicyhpLmNsaWVudFgtay5jbGllbnRYKSxkPU1hdGguYWJzKGkuY2xpZW50WS1rLmNsaWVudFkpLGU9YitkLGU+ZiYmKGY9ZSxnPXthOmksYjprfSl9cmV0dXJuIGI9TWF0aC5hYnMoZy5hLmNsaWVudFgrZy5iLmNsaWVudFgpLzIsZD1NYXRoLmFicyhnLmEuY2xpZW50WStnLmIuY2xpZW50WSkvMixnLmNlbnRlcj17eDpiLHk6ZH0sZy5kaWFtZXRlcj1mLGd9LGNhbGNBbmdsZTpmdW5jdGlvbihhKXt2YXIgYj1hLmEuY2xpZW50WC1hLmIuY2xpZW50WCxjPWEuYS5jbGllbnRZLWEuYi5jbGllbnRZO3JldHVybigzNjArTWF0aC5hdGFuMihjLGIpKmQpJTM2MH19O2IucmVnaXN0ZXJSZWNvZ25pemVyKCJwaW5jaCIsZSl9KHdpbmRvdy5Qb2ludGVyR2VzdHVyZXMpLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzcGF0Y2hlcixjPW5ldyBhLlBvaW50ZXJNYXAsZD17ZXZlbnRzOlsicG9pbnRlcmRvd24iLCJwb2ludGVybW92ZSIsInBvaW50ZXJ1cCIsInBvaW50ZXJjYW5jZWwiLCJrZXl1cCJdLHBvaW50ZXJkb3duOmZ1bmN0aW9uKGEpe2EuaXNQcmltYXJ5JiYhYS50YXBQcmV2ZW50ZWQmJmMuc2V0KGEucG9pbnRlcklkLHt0YXJnZXQ6YS50YXJnZXQsYnV0dG9uczphLmJ1dHRvbnMseDphLmNsaWVudFgseTphLmNsaWVudFl9KX0scG9pbnRlcm1vdmU6ZnVuY3Rpb24oYSl7aWYoYS5pc1ByaW1hcnkpe3ZhciBiPWMuZ2V0KGEucG9pbnRlcklkKTtiJiZhLnRhcFByZXZlbnRlZCYmYy5kZWxldGUoYS5wb2ludGVySWQpfX0sc2hvdWxkVGFwOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudGFwUHJldmVudGVkP3ZvaWQgMDoibW91c2UiPT09YS5wb2ludGVyVHlwZT8xPT09Yi5idXR0b25zOiEwfSxwb2ludGVydXA6ZnVuY3Rpb24oZCl7dmFyIGU9Yy5nZXQoZC5wb2ludGVySWQpO2lmKGUmJnRoaXMuc2hvdWxkVGFwKGQsZSkpe3ZhciBmPWEuZmluZExDQShlLnRhcmdldCxkLnRhcmdldCk7aWYoZil7dmFyIGc9Yi5tYWtlRXZlbnQoInRhcCIse3g6ZC5jbGllbnRYLHk6ZC5jbGllbnRZLGRldGFpbDpkLmRldGFpbCxwb2ludGVyVHlwZTpkLnBvaW50ZXJUeXBlfSk7Yi5kaXNwYXRjaEV2ZW50KGcsZil9fWMuZGVsZXRlKGQucG9pbnRlcklkKX0scG9pbnRlcmNhbmNlbDpmdW5jdGlvbihhKXtjLmRlbGV0ZShhLnBvaW50ZXJJZCl9LGtleXVwOmZ1bmN0aW9uKGEpe3ZhciBjPWEua2V5Q29kZTtpZigzMj09PWMpe3ZhciBkPWEudGFyZ2V0O2QgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50fHxkIGluc3RhbmNlb2YgSFRNTFRleHRBcmVhRWxlbWVudHx8Yi5kaXNwYXRjaEV2ZW50KGIubWFrZUV2ZW50KCJ0YXAiLHt4OjAseTowLGRldGFpbDowLHBvaW50ZXJUeXBlOiJ1bmF2YWlsYWJsZSJ9KSxkKX19LHByZXZlbnRUYXA6ZnVuY3Rpb24oYSl7Yy5kZWxldGUoYSl9fTtiLnJlZ2lzdGVyUmVjb2duaXplcigidGFwIixkKX0od2luZG93LlBvaW50ZXJHZXN0dXJlcyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe2MuaW1tZWRpYXRlUmVnaXN0ZXI9ITA7dmFyIGI9Yy5yZWdpc3RlclF1ZXVlO2IuZm9yRWFjaChhLnJlZ2lzdGVyKSxiLmxlbmd0aD0wfXZhciBjPWEuZGlzcGF0Y2hlcjsiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZT9iKCk6ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicmVhZHlzdGF0ZWNoYW5nZSIsZnVuY3Rpb24oKXsiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmYigpfSl9KHdpbmRvdy5Qb2ludGVyR2VzdHVyZXMpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGEoYSl7Zm9yKDthLnBhcmVudE5vZGU7KWE9YS5wYXJlbnROb2RlO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBhLmdldEVsZW1lbnRCeUlkP2E6bnVsbH1mdW5jdGlvbiBiKGEsYil7dmFyIGM9YS5iaW5kaW5ncztpZighYylyZXR1cm4gdm9pZChhLmJpbmRpbmdzPXt9KTt2YXIgZD1jW2JdO2QmJihkLmNsb3NlKCksY1tiXT12b2lkIDApfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIG51bGw9PWE/IiI6YX1mdW5jdGlvbiBkKGEsYil7YS5kYXRhPWMoYil9ZnVuY3Rpb24gZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIGQoYSxiKX19ZnVuY3Rpb24gZihhLGIsZCxlKXtyZXR1cm4gZD92b2lkKGU/YS5zZXRBdHRyaWJ1dGUoYiwiIik6YS5yZW1vdmVBdHRyaWJ1dGUoYikpOnZvaWQgYS5zZXRBdHRyaWJ1dGUoYixjKGUpKX1mdW5jdGlvbiBnKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCl7ZihhLGIsYyxkKX19ZnVuY3Rpb24gaChhKXtzd2l0Y2goYS50eXBlKXtjYXNlImNoZWNrYm94IjpyZXR1cm4gcztjYXNlInJhZGlvIjpjYXNlInNlbGVjdC1tdWx0aXBsZSI6Y2FzZSJzZWxlY3Qtb25lIjpyZXR1cm4iY2hhbmdlIjtjYXNlInJhbmdlIjppZigvVHJpZGVudHxNU0lFLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKXJldHVybiJjaGFuZ2UiO2RlZmF1bHQ6cmV0dXJuImlucHV0In19ZnVuY3Rpb24gaShhLGIsZCxlKXthW2JdPShlfHxjKShkKX1mdW5jdGlvbiBqKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCl7cmV0dXJuIGkoYSxiLGQsYyl9fWZ1bmN0aW9uIGsoKXt9ZnVuY3Rpb24gbChhLGIsYyxkKXtmdW5jdGlvbiBlKCl7Yy5zZXRWYWx1ZShhW2JdKSxjLmRpc2NhcmRDaGFuZ2VzKCksKGR8fGspKGEpLFBsYXRmb3JtLnBlcmZvcm1NaWNyb3Rhc2tDaGVja3BvaW50KCl9dmFyIGY9aChhKTthLmFkZEV2ZW50TGlzdGVuZXIoZixlKTt2YXIgZz1jLmNsb3NlO2MuY2xvc2U9ZnVuY3Rpb24oKXtnJiYoYS5yZW1vdmVFdmVudExpc3RlbmVyKGYsZSksYy5jbG9zZT1nLGMuY2xvc2UoKSxnPXZvaWQgMCl9fWZ1bmN0aW9uIG0oYSl7cmV0dXJuIEJvb2xlYW4oYSl9ZnVuY3Rpb24gbihiKXtpZihiLmZvcm0pcmV0dXJuIHIoYi5mb3JtLmVsZW1lbnRzLGZ1bmN0aW9uKGEpe3JldHVybiBhIT1iJiYiSU5QVVQiPT1hLnRhZ05hbWUmJiJyYWRpbyI9PWEudHlwZSYmYS5uYW1lPT1iLm5hbWV9KTt2YXIgYz1hKGIpO2lmKCFjKXJldHVybltdO3ZhciBkPWMucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT0icmFkaW8iXVtuYW1lPSInK2IubmFtZSsnIl0nKTtyZXR1cm4gcihkLGZ1bmN0aW9uKGEpe3JldHVybiBhIT1iJiYhYS5mb3JtfSl9ZnVuY3Rpb24gbyhhKXsiSU5QVVQiPT09YS50YWdOYW1lJiYicmFkaW8iPT09YS50eXBlJiZuKGEpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5iaW5kaW5ncy5jaGVja2VkO2ImJmIuc2V0VmFsdWUoITEpfSl9ZnVuY3Rpb24gcChhLGIpe3ZhciBkLGUsZixnPWEucGFyZW50Tm9kZTtnIGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQmJmcuYmluZGluZ3MmJmcuYmluZGluZ3MudmFsdWUmJihkPWcsZT1kLmJpbmRpbmdzLnZhbHVlLGY9ZC52YWx1ZSksYS52YWx1ZT1jKGIpLGQmJmQudmFsdWUhPWYmJihlLnNldFZhbHVlKGQudmFsdWUpLGUuZGlzY2FyZENoYW5nZXMoKSxQbGF0Zm9ybS5wZXJmb3JtTWljcm90YXNrQ2hlY2twb2ludCgpKX1mdW5jdGlvbiBxKGEpe3JldHVybiBmdW5jdGlvbihiKXtwKGEsYil9fXZhciByPUFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5maWx0ZXIpO05vZGUucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSxiKXtjb25zb2xlLmVycm9yKCJVbmhhbmRsZWQgYmluZGluZyB0byBOb2RlOiAiLHRoaXMsYSxiKX0sTm9kZS5wcm90b3R5cGUudW5iaW5kPWZ1bmN0aW9uKGEpe2IodGhpcyxhKX0sTm9kZS5wcm90b3R5cGUudW5iaW5kQWxsPWZ1bmN0aW9uKCl7aWYodGhpcy5iaW5kaW5ncyl7Zm9yKHZhciBhPU9iamVjdC5rZXlzKHRoaXMuYmluZGluZ3MpLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9dGhpcy5iaW5kaW5nc1thW2JdXTtjJiZjLmNsb3NlKCl9dGhpcy5iaW5kaW5ncz17fX19LFRleHQucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSxjLGYpe3JldHVybiJ0ZXh0Q29udGVudCIhPT1hP05vZGUucHJvdG90eXBlLmJpbmQuY2FsbCh0aGlzLGEsYyxmKTpmP2QodGhpcyxjKTooYih0aGlzLCJ0ZXh0Q29udGVudCIpLGQodGhpcyxjLm9wZW4oZSh0aGlzKSkpLHRoaXMuYmluZGluZ3MudGV4dENvbnRlbnQ9Yyl9LEVsZW1lbnQucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPSI/Ij09YVthLmxlbmd0aC0xXTtyZXR1cm4gZSYmKHRoaXMucmVtb3ZlQXR0cmlidXRlKGEpLGE9YS5zbGljZSgwLC0xKSksZD9mKHRoaXMsYSxlLGMpOihiKHRoaXMsYSksZih0aGlzLGEsZSxjLm9wZW4oZyh0aGlzLGEsZSkpKSx0aGlzLmJpbmRpbmdzW2FdPWMpfTt2YXIgczshZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxiPWEuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSk7Yi5zZXRBdHRyaWJ1dGUoInR5cGUiLCJjaGVja2JveCIpO3ZhciBjLGQ9MDtiLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIixmdW5jdGlvbigpe2QrKyxjPWN8fCJjbGljayJ9KSxiLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsZnVuY3Rpb24oKXtkKyssYz1jfHwiY2hhbmdlIn0pO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJNb3VzZUV2ZW50Iik7ZS5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCwwLDAsITEsITEsITEsITEsMCxudWxsKSxiLmRpc3BhdGNoRXZlbnQoZSkscz0xPT1kPyJjaGFuZ2UiOmN9KCksSFRNTElucHV0RWxlbWVudC5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihhLGQsZSl7aWYoInZhbHVlIiE9PWEmJiJjaGVja2VkIiE9PWEpcmV0dXJuIEhUTUxFbGVtZW50LnByb3RvdHlwZS5iaW5kLmNhbGwodGhpcyxhLGQsZSk7dGhpcy5yZW1vdmVBdHRyaWJ1dGUoYSk7dmFyIGY9ImNoZWNrZWQiPT1hP206YyxnPSJjaGVja2VkIj09YT9vOms7cmV0dXJuIGU/aSh0aGlzLGEsZCxmKTooYih0aGlzLGEpLGwodGhpcyxhLGQsZyksaSh0aGlzLGEsZC5vcGVuKGoodGhpcyxhLGYpKSxmKSx0aGlzLmJpbmRpbmdzW2FdPWQpfSxIVE1MVGV4dEFyZWFFbGVtZW50LnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEsZCxlKXtyZXR1cm4idmFsdWUiIT09YT9IVE1MRWxlbWVudC5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsYSxkLGUpOih0aGlzLnJlbW92ZUF0dHJpYnV0ZSgidmFsdWUiKSxlP2kodGhpcywidmFsdWUiLGQpOihiKHRoaXMsInZhbHVlIiksbCh0aGlzLCJ2YWx1ZSIsZCksaSh0aGlzLCJ2YWx1ZSIsZC5vcGVuKGoodGhpcywidmFsdWUiLGMpKSksdGhpcy5iaW5kaW5ncy52YWx1ZT1kKSl9LEhUTUxPcHRpb25FbGVtZW50LnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEsYyxkKXtyZXR1cm4idmFsdWUiIT09YT9IVE1MRWxlbWVudC5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsYSxjLGQpOih0aGlzLnJlbW92ZUF0dHJpYnV0ZSgidmFsdWUiKSxkP3AodGhpcyxjKTooYih0aGlzLCJ2YWx1ZSIpLGwodGhpcywidmFsdWUiLGMpLHAodGhpcyxjLm9wZW4ocSh0aGlzKSkpLHRoaXMuYmluZGluZ3MudmFsdWU9YykpfSxIVE1MU2VsZWN0RWxlbWVudC5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihhLGMsZCl7cmV0dXJuInNlbGVjdGVkaW5kZXgiPT09YSYmKGE9InNlbGVjdGVkSW5kZXgiKSwic2VsZWN0ZWRJbmRleCIhPT1hJiYidmFsdWUiIT09YT9IVE1MRWxlbWVudC5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsYSxjLGQpOih0aGlzLnJlbW92ZUF0dHJpYnV0ZShhKSxkP2kodGhpcyxhLGMpOihiKHRoaXMsYSksbCh0aGlzLGEsYyksaSh0aGlzLGEsYy5vcGVuKGoodGhpcyxhKSkpLHRoaXMuYmluZGluZ3NbYV09YykpfX0odGhpcyksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7aWYoIWEpdGhyb3cgbmV3IEVycm9yKCJBc3NlcnRpb24gZmFpbGVkIil9ZnVuY3Rpb24gYyhhKXtmb3IodmFyIGI7Yj1hLnBhcmVudE5vZGU7KWE9YjtyZXR1cm4gYX1mdW5jdGlvbiBkKGEsYil7aWYoYil7Zm9yKHZhciBkLGU9IiMiK2I7IWQmJihhPWMoYSksYS5wcm90b0NvbnRlbnRfP2Q9YS5wcm90b0NvbnRlbnRfLnF1ZXJ5U2VsZWN0b3IoZSk6YS5nZXRFbGVtZW50QnlJZCYmKGQ9YS5nZXRFbGVtZW50QnlJZChiKSksIWQmJmEudGVtcGxhdGVDcmVhdG9yXyk7KWE9YS50ZW1wbGF0ZUNyZWF0b3JfO3JldHVybiBkfX1mdW5jdGlvbiBlKGEpe3JldHVybiJ0ZW1wbGF0ZSI9PWEudGFnTmFtZSYmImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj09YS5uYW1lc3BhY2VVUkl9ZnVuY3Rpb24gZihhKXtyZXR1cm4iVEVNUExBVEUiPT1hLnRhZ05hbWUmJiJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj09YS5uYW1lc3BhY2VVUkl9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gQm9vbGVhbihKW2EudGFnTmFtZV0mJmEuaGFzQXR0cmlidXRlKCJ0ZW1wbGF0ZSIpKX1mdW5jdGlvbiBoKGEpe3JldHVybiB2b2lkIDA9PT1hLmlzVGVtcGxhdGVfJiYoYS5pc1RlbXBsYXRlXz0iVEVNUExBVEUiPT1hLnRhZ05hbWV8fGcoYSkpLGEuaXNUZW1wbGF0ZV99ZnVuY3Rpb24gaShhLGIpe3ZhciBjPWEucXVlcnlTZWxlY3RvckFsbChMKTtoKGEpJiZiKGEpLEUoYyxiKX1mdW5jdGlvbiBqKGEpe2Z1bmN0aW9uIGIoYSl7SFRNTFRlbXBsYXRlRWxlbWVudC5kZWNvcmF0ZShhKXx8aihhLmNvbnRlbnQpfWkoYSxiKX1mdW5jdGlvbiBrKGEsYil7T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYikuZm9yRWFjaChmdW5jdGlvbihjKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxjLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYixjKSl9KX1mdW5jdGlvbiBsKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudDtpZighYi5kZWZhdWx0VmlldylyZXR1cm4gYjt2YXIgYz1iLnRlbXBsYXRlQ29udGVudHNPd25lcl87aWYoIWMpe2ZvcihjPWIuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKTtjLmxhc3RDaGlsZDspYy5yZW1vdmVDaGlsZChjLmxhc3RDaGlsZCk7Yi50ZW1wbGF0ZUNvbnRlbnRzT3duZXJfPWN9cmV0dXJuIGN9ZnVuY3Rpb24gbShhKXtpZighYS5zdGFnaW5nRG9jdW1lbnRfKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQ7aWYoIWIuc3RhZ2luZ0RvY3VtZW50Xyl7Yi5zdGFnaW5nRG9jdW1lbnRfPWIuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKTt2YXIgYz1iLnN0YWdpbmdEb2N1bWVudF8uY3JlYXRlRWxlbWVudCgiYmFzZSIpO2MuaHJlZj1kb2N1bWVudC5iYXNlVVJJLGIuc3RhZ2luZ0RvY3VtZW50Xy5oZWFkLmFwcGVuZENoaWxkKGMpLGIuc3RhZ2luZ0RvY3VtZW50Xy5zdGFnaW5nRG9jdW1lbnRfPWIuc3RhZ2luZ0RvY3VtZW50X31hLnN0YWdpbmdEb2N1bWVudF89Yi5zdGFnaW5nRG9jdW1lbnRffXJldHVybiBhLnN0YWdpbmdEb2N1bWVudF99ZnVuY3Rpb24gbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGVtcGxhdGUiKTthLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYSk7Zm9yKHZhciBjPWEuYXR0cmlidXRlcyxkPWMubGVuZ3RoO2QtLT4wOyl7dmFyIGU9Y1tkXTtJW2UubmFtZV0mJigidGVtcGxhdGUiIT09ZS5uYW1lJiZiLnNldEF0dHJpYnV0ZShlLm5hbWUsZS52YWx1ZSksYS5yZW1vdmVBdHRyaWJ1dGUoZS5uYW1lKSl9cmV0dXJuIGJ9ZnVuY3Rpb24gbyhhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGVtcGxhdGUiKTthLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYSk7Zm9yKHZhciBjPWEuYXR0cmlidXRlcyxkPWMubGVuZ3RoO2QtLT4wOyl7dmFyIGU9Y1tkXTtiLnNldEF0dHJpYnV0ZShlLm5hbWUsZS52YWx1ZSksYS5yZW1vdmVBdHRyaWJ1dGUoZS5uYW1lKQp9cmV0dXJuIGEucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKSxifWZ1bmN0aW9uIHAoYSxiLGMpe3ZhciBkPWEuY29udGVudDtpZihjKXJldHVybiB2b2lkIGQuYXBwZW5kQ2hpbGQoYik7Zm9yKHZhciBlO2U9Yi5maXJzdENoaWxkOylkLmFwcGVuZENoaWxkKGUpfWZ1bmN0aW9uIHEoYSl7Tj9hLl9fcHJvdG9fXz1IVE1MVGVtcGxhdGVFbGVtZW50LnByb3RvdHlwZTprKGEsSFRNTFRlbXBsYXRlRWxlbWVudC5wcm90b3R5cGUpfWZ1bmN0aW9uIHIoYSl7YS5zZXRNb2RlbEZuX3x8KGEuc2V0TW9kZWxGbl89ZnVuY3Rpb24oKXthLnNldE1vZGVsRm5TY2hlZHVsZWRfPSExO3ZhciBiPXooYSxhLmRlbGVnYXRlXyYmYS5kZWxlZ2F0ZV8ucHJlcGFyZUJpbmRpbmcpO3coYSxiLGEubW9kZWxfKX0pLGEuc2V0TW9kZWxGblNjaGVkdWxlZF98fChhLnNldE1vZGVsRm5TY2hlZHVsZWRfPSEwLE9ic2VydmVyLnJ1bkVPTV8oYS5zZXRNb2RlbEZuXykpfWZ1bmN0aW9uIHMoYSxiLGMsZCl7aWYoYSYmYS5sZW5ndGgpe2Zvcih2YXIgZSxmPWEubGVuZ3RoLGc9MCxoPTAsaT0wLGo9ITA7Zj5oOyl7dmFyIGc9YS5pbmRleE9mKCJ7eyIsaCksaz1hLmluZGV4T2YoIltbIixoKSxsPSExLG09In19IjtpZihrPj0wJiYoMD5nfHxnPmspJiYoZz1rLGw9ITAsbT0iXV0iKSxpPTA+Zz8tMTphLmluZGV4T2YobSxnKzIpLDA+aSl7aWYoIWUpcmV0dXJuO2UucHVzaChhLnNsaWNlKGgpKTticmVha31lPWV8fFtdLGUucHVzaChhLnNsaWNlKGgsZykpO3ZhciBuPWEuc2xpY2UoZysyLGkpLnRyaW0oKTtlLnB1c2gobCksaj1qJiZsLGUucHVzaChQYXRoLmdldChuKSk7dmFyIG89ZCYmZChuLGIsYyk7ZS5wdXNoKG8pLGg9aSsyfXJldHVybiBoPT09ZiYmZS5wdXNoKCIiKSxlLmhhc09uZVBhdGg9NT09PWUubGVuZ3RoLGUuaXNTaW1wbGVQYXRoPWUuaGFzT25lUGF0aCYmIiI9PWVbMF0mJiIiPT1lWzRdLGUub25seU9uZVRpbWU9aixlLmNvbWJpbmF0b3I9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWVbMF0sYz0xO2M8ZS5sZW5ndGg7Yys9NCl7dmFyIGQ9ZS5oYXNPbmVQYXRoP2E6YVsoYy0xKS80XTt2b2lkIDAhPT1kJiYoYis9ZCksYis9ZVtjKzNdfXJldHVybiBifSxlfX1mdW5jdGlvbiB0KGEsYixjLGQpe2lmKGIuaGFzT25lUGF0aCl7dmFyIGU9YlszXSxmPWU/ZShkLGMsITApOmJbMl0uZ2V0VmFsdWVGcm9tKGQpO3JldHVybiBiLmlzU2ltcGxlUGF0aD9mOmIuY29tYmluYXRvcihmKX1mb3IodmFyIGc9W10saD0xO2g8Yi5sZW5ndGg7aCs9NCl7dmFyIGU9YltoKzJdO2dbKGgtMSkvNF09ZT9lKGQsYyk6YltoKzFdLmdldFZhbHVlRnJvbShkKX1yZXR1cm4gYi5jb21iaW5hdG9yKGcpfWZ1bmN0aW9uIHUoYSxiLGMsZCl7dmFyIGU9YlszXSxmPWU/ZShkLGMsITEpOm5ldyBQYXRoT2JzZXJ2ZXIoZCxiWzJdKTtyZXR1cm4gYi5pc1NpbXBsZVBhdGg/ZjpuZXcgT2JzZXJ2ZXJUcmFuc2Zvcm0oZixiLmNvbWJpbmF0b3IpfWZ1bmN0aW9uIHYoYSxiLGMsZCl7aWYoYi5vbmx5T25lVGltZSlyZXR1cm4gdChhLGIsYyxkKTtpZihiLmhhc09uZVBhdGgpcmV0dXJuIHUoYSxiLGMsZCk7Zm9yKHZhciBlPW5ldyBDb21wb3VuZE9ic2VydmVyLGY9MTtmPGIubGVuZ3RoO2YrPTQpe3ZhciBnPWJbZl0saD1iW2YrMl07aWYoaCl7dmFyIGk9aChkLGMsZyk7Zz9lLmFkZFBhdGgoaSk6ZS5hZGRPYnNlcnZlcihpKX1lbHNle3ZhciBqPWJbZisxXTtnP2UuYWRkUGF0aChqLmdldFZhbHVlRnJvbShkKSk6ZS5hZGRQYXRoKGQsail9fXJldHVybiBuZXcgT2JzZXJ2ZXJUcmFuc2Zvcm0oZSxiLmNvbWJpbmF0b3IpfWZ1bmN0aW9uIHcoYSxiLGMsZCl7Zm9yKHZhciBlPTA7ZTxiLmxlbmd0aDtlKz0yKXt2YXIgZj1iW2VdLGc9YltlKzFdLGg9dihmLGcsYSxjKSxpPWEuYmluZChmLGgsZy5vbmx5T25lVGltZSk7aSYmZCYmZC5wdXNoKGkpfWlmKGIuaXNUZW1wbGF0ZSl7YS5tb2RlbF89Yzt2YXIgaj1hLnByb2Nlc3NCaW5kaW5nRGlyZWN0aXZlc18oYik7ZCYmaiYmZC5wdXNoKGopfX1mdW5jdGlvbiB4KGEsYixjKXt2YXIgZD1hLmdldEF0dHJpYnV0ZShiKTtyZXR1cm4gcygiIj09ZD8ie3t9fSI6ZCxiLGEsYyl9ZnVuY3Rpb24geShhLGMpe2IoYSk7Zm9yKHZhciBkPVtdLGU9MDtlPGEuYXR0cmlidXRlcy5sZW5ndGg7ZSsrKXtmb3IodmFyIGY9YS5hdHRyaWJ1dGVzW2VdLGc9Zi5uYW1lLGk9Zi52YWx1ZTsiXyI9PT1nWzBdOylnPWcuc3Vic3RyaW5nKDEpO2lmKCFoKGEpfHxnIT09SCYmZyE9PUYmJmchPT1HKXt2YXIgaj1zKGksZyxhLGMpO2omJmQucHVzaChnLGopfX1yZXR1cm4gaChhKSYmKGQuaXNUZW1wbGF0ZT0hMCxkLmlmPXgoYSxILGMpLGQuYmluZD14KGEsRixjKSxkLnJlcGVhdD14KGEsRyxjKSwhZC5pZnx8ZC5iaW5kfHxkLnJlcGVhdHx8KGQuYmluZD1zKCJ7e319IixGLGEsYykpKSxkfWZ1bmN0aW9uIHooYSxiKXtpZihhLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUpcmV0dXJuIHkoYSxiKTtpZihhLm5vZGVUeXBlPT09Tm9kZS5URVhUX05PREUpe3ZhciBjPXMoYS5kYXRhLCJ0ZXh0Q29udGVudCIsYSxiKTtpZihjKXJldHVyblsidGV4dENvbnRlbnQiLGNdfXJldHVybltdfWZ1bmN0aW9uIEEoYSxiLGMsZCxlLGYsZyl7Zm9yKHZhciBoPWIuYXBwZW5kQ2hpbGQoYy5pbXBvcnROb2RlKGEsITEpKSxpPTAsaj1hLmZpcnN0Q2hpbGQ7ajtqPWoubmV4dFNpYmxpbmcpQShqLGgsYyxkLmNoaWxkcmVuW2krK10sZSxmLGcpO3JldHVybiBkLmlzVGVtcGxhdGUmJihIVE1MVGVtcGxhdGVFbGVtZW50LmRlY29yYXRlKGgsYSksZiYmaC5zZXREZWxlZ2F0ZV8oZikpLHcoaCxkLGUsZyksaH1mdW5jdGlvbiBCKGEsYil7dmFyIGM9eihhLGIpO2MuY2hpbGRyZW49e307Zm9yKHZhciBkPTAsZT1hLmZpcnN0Q2hpbGQ7ZTtlPWUubmV4dFNpYmxpbmcpYy5jaGlsZHJlbltkKytdPUIoZSxiKTtyZXR1cm4gY31mdW5jdGlvbiBDKGEpe3RoaXMuY2xvc2VkPSExLHRoaXMudGVtcGxhdGVFbGVtZW50Xz1hLHRoaXMudGVybWluYXRvcnM9W10sdGhpcy5kZXBzPXZvaWQgMCx0aGlzLml0ZXJhdGVkVmFsdWU9W10sdGhpcy5wcmVzZW50VmFsdWU9dm9pZCAwLHRoaXMuYXJyYXlPYnNlcnZlcj12b2lkIDB9dmFyIEQsRT1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsLmJpbmQoQXJyYXkucHJvdG90eXBlLmZvckVhY2gpO2EuTWFwJiYiZnVuY3Rpb24iPT10eXBlb2YgYS5NYXAucHJvdG90eXBlLmZvckVhY2g/RD1hLk1hcDooRD1mdW5jdGlvbigpe3RoaXMua2V5cz1bXSx0aGlzLnZhbHVlcz1bXX0sRC5wcm90b3R5cGU9e3NldDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMua2V5cy5pbmRleE9mKGEpOzA+Yz8odGhpcy5rZXlzLnB1c2goYSksdGhpcy52YWx1ZXMucHVzaChiKSk6dGhpcy52YWx1ZXNbY109Yn0sZ2V0OmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMua2V5cy5pbmRleE9mKGEpO2lmKCEoMD5iKSlyZXR1cm4gdGhpcy52YWx1ZXNbYl19LCJkZWxldGUiOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMua2V5cy5pbmRleE9mKGEpO3JldHVybiAwPmI/ITE6KHRoaXMua2V5cy5zcGxpY2UoYiwxKSx0aGlzLnZhbHVlcy5zcGxpY2UoYiwxKSwhMCl9LGZvckVhY2g6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPHRoaXMua2V5cy5sZW5ndGg7YysrKWEuY2FsbChifHx0aGlzLHRoaXMudmFsdWVzW2NdLHRoaXMua2V5c1tjXSx0aGlzKX19KTsiZnVuY3Rpb24iIT10eXBlb2YgZG9jdW1lbnQuY29udGFpbnMmJihEb2N1bWVudC5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT10aGlzfHxhLnBhcmVudE5vZGU9PT10aGlzPyEwOnRoaXMuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zKGEpfSk7dmFyIEY9ImJpbmQiLEc9InJlcGVhdCIsSD0iaWYiLEk9e3RlbXBsYXRlOiEwLHJlcGVhdDohMCxiaW5kOiEwLHJlZjohMH0sSj17VEhFQUQ6ITAsVEJPRFk6ITAsVEZPT1Q6ITAsVEg6ITAsVFI6ITAsVEQ6ITAsQ09MR1JPVVA6ITAsQ09MOiEwLENBUFRJT046ITAsT1BUSU9OOiEwLE9QVEdST1VQOiEwfSxLPSJ1bmRlZmluZWQiIT10eXBlb2YgSFRNTFRlbXBsYXRlRWxlbWVudDtLJiYhZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZW1wbGF0ZSIpLGI9YS5jb250ZW50Lm93bmVyRG9jdW1lbnQsYz1iLmFwcGVuZENoaWxkKGIuY3JlYXRlRWxlbWVudCgiaHRtbCIpKSxkPWMuYXBwZW5kQ2hpbGQoYi5jcmVhdGVFbGVtZW50KCJoZWFkIikpLGU9Yi5jcmVhdGVFbGVtZW50KCJiYXNlIik7ZS5ocmVmPWRvY3VtZW50LmJhc2VVUkksZC5hcHBlbmRDaGlsZChlKX0oKTt2YXIgTD0idGVtcGxhdGUsICIrT2JqZWN0LmtleXMoSikubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBhLnRvTG93ZXJDYXNlKCkrIlt0ZW1wbGF0ZV0ifSkuam9pbigiLCAiKTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixmdW5jdGlvbigpe2ooZG9jdW1lbnQpLFBsYXRmb3JtLnBlcmZvcm1NaWNyb3Rhc2tDaGVja3BvaW50KCl9LCExKSxLfHwoYS5IVE1MVGVtcGxhdGVFbGVtZW50PWZ1bmN0aW9uKCl7dGhyb3cgVHlwZUVycm9yKCJJbGxlZ2FsIGNvbnN0cnVjdG9yIil9KTt2YXIgTSxOPSJfX3Byb3RvX18iaW57fTsiZnVuY3Rpb24iPT10eXBlb2YgTXV0YXRpb25PYnNlcnZlciYmKE09bmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXS50YXJnZXQucmVmQ2hhbmdlZF8oKX0pKSxIVE1MVGVtcGxhdGVFbGVtZW50LmRlY29yYXRlPWZ1bmN0aW9uKGEsYyl7aWYoYS50ZW1wbGF0ZUlzRGVjb3JhdGVkXylyZXR1cm4hMTt2YXIgZD1hO2QudGVtcGxhdGVJc0RlY29yYXRlZF89ITA7dmFyIGg9ZihkKSYmSyxpPWgsaz0haCxtPSExO2lmKGh8fChnKGQpPyhiKCFjKSxkPW4oYSksZC50ZW1wbGF0ZUlzRGVjb3JhdGVkXz0hMCxoPUssbT0hMCk6ZShkKSYmKGQ9byhhKSxkLnRlbXBsYXRlSXNEZWNvcmF0ZWRfPSEwLGg9SykpLCFoKXtxKGQpO3ZhciByPWwoZCk7ZC5jb250ZW50Xz1yLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKX1yZXR1cm4gYz9kLmluc3RhbmNlUmVmXz1jOms/cChkLGEsbSk6aSYmaihkLmNvbnRlbnQpLCEwfSxIVE1MVGVtcGxhdGVFbGVtZW50LmJvb3RzdHJhcD1qO3ZhciBPPWEuSFRNTFVua25vd25FbGVtZW50fHxIVE1MRWxlbWVudCxQPXtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb250ZW50X30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9O0t8fChIVE1MVGVtcGxhdGVFbGVtZW50LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKE8ucHJvdG90eXBlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSFRNTFRlbXBsYXRlRWxlbWVudC5wcm90b3R5cGUsImNvbnRlbnQiLFApKSxrKEhUTUxUZW1wbGF0ZUVsZW1lbnQucHJvdG90eXBlLHtiaW5kOmZ1bmN0aW9uKGEsYixjKXtpZigicmVmIiE9YSlyZXR1cm4gRWxlbWVudC5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsYSxiLGMpO3ZhciBkPXRoaXMsZT1jP2I6Yi5vcGVuKGZ1bmN0aW9uKGEpe2Quc2V0QXR0cmlidXRlKCJyZWYiLGEpLGQucmVmQ2hhbmdlZF8oKX0pO3JldHVybiB0aGlzLnNldEF0dHJpYnV0ZSgicmVmIixlKSx0aGlzLnJlZkNoYW5nZWRfKCksYz92b2lkIDA6KHRoaXMudW5iaW5kKCJyZWYiKSx0aGlzLmJpbmRpbmdzLnJlZj1iKX0scHJvY2Vzc0JpbmRpbmdEaXJlY3RpdmVzXzpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pdGVyYXRvcl8mJnRoaXMuaXRlcmF0b3JfLmNsb3NlRGVwcygpLGEuaWZ8fGEuYmluZHx8YS5yZXBlYXQ/KHRoaXMuaXRlcmF0b3JffHwodGhpcy5pdGVyYXRvcl89bmV3IEModGhpcyksdGhpcy5iaW5kaW5ncz10aGlzLmJpbmRpbmdzfHx7fSx0aGlzLmJpbmRpbmdzLml0ZXJhdG9yPXRoaXMuaXRlcmF0b3JfKSx0aGlzLml0ZXJhdG9yXy51cGRhdGVEZXBlbmRlbmNpZXMoYSx0aGlzLm1vZGVsXyksTSYmTS5vYnNlcnZlKHRoaXMse2F0dHJpYnV0ZXM6ITAsYXR0cmlidXRlRmlsdGVyOlsicmVmIl19KSx0aGlzLml0ZXJhdG9yXyk6dm9pZCh0aGlzLml0ZXJhdG9yXyYmKHRoaXMuaXRlcmF0b3JfLmNsb3NlKCksdGhpcy5pdGVyYXRvcl89dm9pZCAwLHRoaXMuYmluZGluZ3MuaXRlcmF0b3I9dm9pZCAwKSl9LGNyZWF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQpe2ImJihjPXRoaXMubmV3RGVsZWdhdGVfKGIpKSx0aGlzLnJlZkNvbnRlbnRffHwodGhpcy5yZWZDb250ZW50Xz10aGlzLnJlZl8uY29udGVudCk7dmFyIGU9dGhpcy5yZWZDb250ZW50XyxmPXRoaXMuYmluZGluZ01hcF87ZiYmZi5jb250ZW50PT09ZXx8KGY9QihlLGMmJmMucHJlcGFyZUJpbmRpbmcpfHxbXSxmLmNvbnRlbnQ9ZSx0aGlzLmJpbmRpbmdNYXBfPWYpO3ZhciBnPW0odGhpcyksaD1nLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtoLnRlbXBsYXRlQ3JlYXRvcl89dGhpcyxoLnByb3RvQ29udGVudF89ZTtmb3IodmFyIGk9e2ZpcnN0Tm9kZTpudWxsLGxhc3ROb2RlOm51bGwsbW9kZWw6YX0saj0wLGs9ZS5maXJzdENoaWxkO2s7az1rLm5leHRTaWJsaW5nKXt2YXIgbD1BKGssaCxnLGYuY2hpbGRyZW5baisrXSxhLGMsZCk7bC50ZW1wbGF0ZUluc3RhbmNlXz1pfXJldHVybiBpLmZpcnN0Tm9kZT1oLmZpcnN0Q2hpbGQsaS5sYXN0Tm9kZT1oLmxhc3RDaGlsZCxoLnRlbXBsYXRlQ3JlYXRvcl89dm9pZCAwLGgucHJvdG9Db250ZW50Xz12b2lkIDAsaH0sZ2V0IG1vZGVsKCl7cmV0dXJuIHRoaXMubW9kZWxffSxzZXQgbW9kZWwoYSl7dGhpcy5tb2RlbF89YSxyKHRoaXMpfSxnZXQgYmluZGluZ0RlbGVnYXRlKCl7cmV0dXJuIHRoaXMuZGVsZWdhdGVfJiZ0aGlzLmRlbGVnYXRlXy5yYXd9LHJlZkNoYW5nZWRfOmZ1bmN0aW9uKCl7dGhpcy5pdGVyYXRvcl8mJnRoaXMucmVmQ29udGVudF8hPT10aGlzLnJlZl8uY29udGVudCYmKHRoaXMucmVmQ29udGVudF89dm9pZCAwLHRoaXMuaXRlcmF0b3JfLnZhbHVlQ2hhbmdlZCgpLHRoaXMuaXRlcmF0b3JfLnVwZGF0ZUl0ZXJhdGVkVmFsdWUoKSl9LGNsZWFyOmZ1bmN0aW9uKCl7dGhpcy5tb2RlbF89dm9pZCAwLHRoaXMuZGVsZWdhdGVfPXZvaWQgMCx0aGlzLmJpbmRpbmdzXz12b2lkIDAsdGhpcy5yZWZDb250ZW50Xz12b2lkIDAsdGhpcy5pdGVyYXRvcl8mJih0aGlzLml0ZXJhdG9yXy52YWx1ZUNoYW5nZWQoKSx0aGlzLml0ZXJhdG9yXy5jbG9zZSgpLHRoaXMuaXRlcmF0b3JfPXZvaWQgMCl9LHNldERlbGVnYXRlXzpmdW5jdGlvbihhKXt0aGlzLmRlbGVnYXRlXz1hLHRoaXMuYmluZGluZ01hcF89dm9pZCAwLHRoaXMuaXRlcmF0b3JfJiYodGhpcy5pdGVyYXRvcl8uaW5zdGFuY2VQb3NpdGlvbkNoYW5nZWRGbl89dm9pZCAwLHRoaXMuaXRlcmF0b3JfLmluc3RhbmNlTW9kZWxGbl89dm9pZCAwKX0sbmV3RGVsZWdhdGVfOmZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYil7dmFyIGM9YSYmYVtiXTtpZigiZnVuY3Rpb24iPT10eXBlb2YgYylyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYy5hcHBseShhLGFyZ3VtZW50cyl9fXJldHVybiBhP3tyYXc6YSxwcmVwYXJlQmluZGluZzpiKCJwcmVwYXJlQmluZGluZyIpLHByZXBhcmVJbnN0YW5jZU1vZGVsOmIoInByZXBhcmVJbnN0YW5jZU1vZGVsIikscHJlcGFyZUluc3RhbmNlUG9zaXRpb25DaGFuZ2VkOmIoInByZXBhcmVJbnN0YW5jZVBvc2l0aW9uQ2hhbmdlZCIpfTp7fX0sc2V0IGJpbmRpbmdEZWxlZ2F0ZShhKXtpZih0aGlzLmRlbGVnYXRlXyl0aHJvdyBFcnJvcigiVGVtcGxhdGUgbXVzdCBiZSBjbGVhcmVkIGJlZm9yZSBhIG5ldyBiaW5kaW5nRGVsZWdhdGUgY2FuIGJlIGFzc2lnbmVkIik7dGhpcy5zZXREZWxlZ2F0ZV8odGhpcy5uZXdEZWxlZ2F0ZV8oYSkpfSxnZXQgcmVmXygpe3ZhciBhPWQodGhpcyx0aGlzLmdldEF0dHJpYnV0ZSgicmVmIikpO2lmKGF8fChhPXRoaXMuaW5zdGFuY2VSZWZfKSwhYSlyZXR1cm4gdGhpczt2YXIgYj1hLnJlZl87cmV0dXJuIGI/YjphfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwidGVtcGxhdGVJbnN0YW5jZSIse2dldDpmdW5jdGlvbigpe3ZhciBhPXRoaXMudGVtcGxhdGVJbnN0YW5jZV87cmV0dXJuIGE/YTp0aGlzLnBhcmVudE5vZGU/dGhpcy5wYXJlbnROb2RlLnRlbXBsYXRlSW5zdGFuY2U6dm9pZCAwfX0pLEMucHJvdG90eXBlPXtjbG9zZURlcHM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmRlcHM7YSYmKGEuaWZPbmVUaW1lPT09ITEmJmEuaWZWYWx1ZS5jbG9zZSgpLGEub25lVGltZT09PSExJiZhLnZhbHVlLmNsb3NlKCkpfSx1cGRhdGVEZXBlbmRlbmNpZXM6ZnVuY3Rpb24oYSxiKXt0aGlzLmNsb3NlRGVwcygpO3ZhciBjPXRoaXMuZGVwcz17fSxkPXRoaXMudGVtcGxhdGVFbGVtZW50XztpZihhLmlmKXtpZihjLmhhc0lmPSEwLGMuaWZPbmVUaW1lPWEuaWYub25seU9uZVRpbWUsYy5pZlZhbHVlPXYoSCxhLmlmLGQsYiksYy5pZk9uZVRpbWUmJiFjLmlmVmFsdWUpcmV0dXJuIHZvaWQgdGhpcy51cGRhdGVJdGVyYXRlZFZhbHVlKCk7Yy5pZk9uZVRpbWV8fGMuaWZWYWx1ZS5vcGVuKHRoaXMudXBkYXRlSXRlcmF0ZWRWYWx1ZSx0aGlzKX1hLnJlcGVhdD8oYy5yZXBlYXQ9ITAsYy5vbmVUaW1lPWEucmVwZWF0Lm9ubHlPbmVUaW1lLGMudmFsdWU9dihHLGEucmVwZWF0LGQsYikpOihjLnJlcGVhdD0hMSxjLm9uZVRpbWU9YS5iaW5kLm9ubHlPbmVUaW1lLGMudmFsdWU9dihGLGEuYmluZCxkLGIpKSxjLm9uZVRpbWV8fGMudmFsdWUub3Blbih0aGlzLnVwZGF0ZUl0ZXJhdGVkVmFsdWUsdGhpcyksdGhpcy51cGRhdGVJdGVyYXRlZFZhbHVlKCl9LHVwZGF0ZUl0ZXJhdGVkVmFsdWU6ZnVuY3Rpb24oKXtpZih0aGlzLmRlcHMuaGFzSWYpe3ZhciBhPXRoaXMuZGVwcy5pZlZhbHVlO2lmKHRoaXMuZGVwcy5pZk9uZVRpbWV8fChhPWEuZGlzY2FyZENoYW5nZXMoKSksIWEpcmV0dXJuIHZvaWQgdGhpcy52YWx1ZUNoYW5nZWQoKX12YXIgYj10aGlzLmRlcHMudmFsdWU7dGhpcy5kZXBzLm9uZVRpbWV8fChiPWIuZGlzY2FyZENoYW5nZXMoKSksdGhpcy5kZXBzLnJlcGVhdHx8KGI9W2JdKTt2YXIgYz10aGlzLmRlcHMucmVwZWF0JiYhdGhpcy5kZXBzLm9uZVRpbWUmJkFycmF5LmlzQXJyYXkoYik7dGhpcy52YWx1ZUNoYW5nZWQoYixjKX0sdmFsdWVDaGFuZ2VkOmZ1bmN0aW9uKGEsYil7QXJyYXkuaXNBcnJheShhKXx8KGE9W10pLGEhPT10aGlzLml0ZXJhdGVkVmFsdWUmJih0aGlzLnVub2JzZXJ2ZSgpLHRoaXMucHJlc2VudFZhbHVlPWEsYiYmKHRoaXMuYXJyYXlPYnNlcnZlcj1uZXcgQXJyYXlPYnNlcnZlcih0aGlzLnByZXNlbnRWYWx1ZSksdGhpcy5hcnJheU9ic2VydmVyLm9wZW4odGhpcy5oYW5kbGVTcGxpY2VzLHRoaXMpKSx0aGlzLmhhbmRsZVNwbGljZXMoQXJyYXlPYnNlcnZlci5jYWxjdWxhdGVTcGxpY2VzKHRoaXMucHJlc2VudFZhbHVlLHRoaXMuaXRlcmF0ZWRWYWx1ZSkpKX0sZ2V0VGVybWluYXRvckF0OmZ1bmN0aW9uKGEpe2lmKC0xPT1hKXJldHVybiB0aGlzLnRlbXBsYXRlRWxlbWVudF87dmFyIGI9dGhpcy50ZXJtaW5hdG9yc1syKmFdO2lmKGIubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERXx8dGhpcy50ZW1wbGF0ZUVsZW1lbnRfPT09YilyZXR1cm4gYjt2YXIgYz1iLml0ZXJhdG9yXztyZXR1cm4gYz9jLmdldFRlcm1pbmF0b3JBdChjLnRlcm1pbmF0b3JzLmxlbmd0aC8yLTEpOmJ9LGluc2VydEluc3RhbmNlQXQ6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcy5nZXRUZXJtaW5hdG9yQXQoYS0xKSxmPWU7Yj9mPWIubGFzdENoaWxkfHxmOmMmJihmPWNbYy5sZW5ndGgtMV18fGYpLHRoaXMudGVybWluYXRvcnMuc3BsaWNlKDIqYSwwLGYsZCk7dmFyIGc9dGhpcy50ZW1wbGF0ZUVsZW1lbnRfLnBhcmVudE5vZGUsaD1lLm5leHRTaWJsaW5nO2lmKGIpZy5pbnNlcnRCZWZvcmUoYixoKTtlbHNlIGlmKGMpZm9yKHZhciBpPTA7aTxjLmxlbmd0aDtpKyspZy5pbnNlcnRCZWZvcmUoY1tpXSxoKX0sZXh0cmFjdEluc3RhbmNlQXQ6ZnVuY3Rpb24oYSl7dmFyIGI9W10sYz10aGlzLmdldFRlcm1pbmF0b3JBdChhLTEpLGQ9dGhpcy5nZXRUZXJtaW5hdG9yQXQoYSk7Yi5pbnN0YW5jZUJpbmRpbmdzPXRoaXMudGVybWluYXRvcnNbMiphKzFdLHRoaXMudGVybWluYXRvcnMuc3BsaWNlKDIqYSwyKTtmb3IodmFyIGU9dGhpcy50ZW1wbGF0ZUVsZW1lbnRfLnBhcmVudE5vZGU7ZCE9PWM7KXt2YXIgZj1jLm5leHRTaWJsaW5nO2Y9PWQmJihkPWMpLGUucmVtb3ZlQ2hpbGQoZiksYi5wdXNoKGYpfXJldHVybiBifSxnZXREZWxlZ2F0ZUZuOmZ1bmN0aW9uKGEpe3JldHVybiBhPWEmJmEodGhpcy50ZW1wbGF0ZUVsZW1lbnRfKSwiZnVuY3Rpb24iPT10eXBlb2YgYT9hOm51bGx9LGhhbmRsZVNwbGljZXM6ZnVuY3Rpb24oYSl7aWYoIXRoaXMuY2xvc2VkJiZhLmxlbmd0aCl7dmFyIGI9dGhpcy50ZW1wbGF0ZUVsZW1lbnRfO2lmKCFiLnBhcmVudE5vZGUpcmV0dXJuIHZvaWQgdGhpcy5jbG9zZSgpO0FycmF5T2JzZXJ2ZXIuYXBwbHlTcGxpY2VzKHRoaXMuaXRlcmF0ZWRWYWx1ZSx0aGlzLnByZXNlbnRWYWx1ZSxhKTt2YXIgYz1iLmRlbGVnYXRlXzt2b2lkIDA9PT10aGlzLmluc3RhbmNlTW9kZWxGbl8mJih0aGlzLmluc3RhbmNlTW9kZWxGbl89dGhpcy5nZXREZWxlZ2F0ZUZuKGMmJmMucHJlcGFyZUluc3RhbmNlTW9kZWwpKSx2b2lkIDA9PT10aGlzLmluc3RhbmNlUG9zaXRpb25DaGFuZ2VkRm5fJiYodGhpcy5pbnN0YW5jZVBvc2l0aW9uQ2hhbmdlZEZuXz10aGlzLmdldERlbGVnYXRlRm4oYyYmYy5wcmVwYXJlSW5zdGFuY2VQb3NpdGlvbkNoYW5nZWQpKTt2YXIgZD1uZXcgRCxlPTA7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EucmVtb3ZlZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBjPXRoaXMuZXh0cmFjdEluc3RhbmNlQXQoYS5pbmRleCtlKTtkLnNldChiLGMpfSx0aGlzKSxlLT1hLmFkZGVkQ291bnR9LHRoaXMpLGEuZm9yRWFjaChmdW5jdGlvbihhKXtmb3IodmFyIGU9YS5pbmRleDtlPGEuaW5kZXgrYS5hZGRlZENvdW50O2UrKyl7dmFyIGYsZz10aGlzLml0ZXJhdGVkVmFsdWVbZV0saD12b2lkIDAsaT1kLmdldChnKTtpPyhkLmRlbGV0ZShnKSxmPWkuaW5zdGFuY2VCaW5kaW5ncyk6KGY9W10sdGhpcy5pbnN0YW5jZU1vZGVsRm5fJiYoZz10aGlzLmluc3RhbmNlTW9kZWxGbl8oZykpLHZvaWQgMCE9PWcmJihoPWIuY3JlYXRlSW5zdGFuY2UoZyx2b2lkIDAsYyxmKSkpLHRoaXMuaW5zZXJ0SW5zdGFuY2VBdChlLGgsaSxmKX19LHRoaXMpLGQuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLmNsb3NlSW5zdGFuY2VCaW5kaW5ncyhhLmluc3RhbmNlQmluZGluZ3MpfSx0aGlzKSx0aGlzLmluc3RhbmNlUG9zaXRpb25DaGFuZ2VkRm5fJiZ0aGlzLnJlcG9ydEluc3RhbmNlc01vdmVkKGEpfX0scmVwb3J0SW5zdGFuY2VNb3ZlZDpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmdldFRlcm1pbmF0b3JBdChhLTEpLGM9dGhpcy5nZXRUZXJtaW5hdG9yQXQoYSk7aWYoYiE9PWMpe3ZhciBkPWIubmV4dFNpYmxpbmcudGVtcGxhdGVJbnN0YW5jZTt0aGlzLmluc3RhbmNlUG9zaXRpb25DaGFuZ2VkRm5fKGQsYSl9fSxyZXBvcnRJbnN0YW5jZXNNb3ZlZDpmdW5jdGlvbihhKXtmb3IodmFyIGI9MCxjPTAsZD0wO2Q8YS5sZW5ndGg7ZCsrKXt2YXIgZT1hW2RdO2lmKDAhPWMpZm9yKDtiPGUuaW5kZXg7KXRoaXMucmVwb3J0SW5zdGFuY2VNb3ZlZChiKSxiKys7ZWxzZSBiPWUuaW5kZXg7Zm9yKDtiPGUuaW5kZXgrZS5hZGRlZENvdW50Oyl0aGlzLnJlcG9ydEluc3RhbmNlTW92ZWQoYiksYisrO2MrPWUuYWRkZWRDb3VudC1lLnJlbW92ZWQubGVuZ3RofWlmKDAhPWMpZm9yKHZhciBmPXRoaXMudGVybWluYXRvcnMubGVuZ3RoLzI7Zj5iOyl0aGlzLnJlcG9ydEluc3RhbmNlTW92ZWQoYiksYisrfSxjbG9zZUluc3RhbmNlQmluZGluZ3M6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXS5jbG9zZSgpfSx1bm9ic2VydmU6ZnVuY3Rpb24oKXt0aGlzLmFycmF5T2JzZXJ2ZXImJih0aGlzLmFycmF5T2JzZXJ2ZXIuY2xvc2UoKSx0aGlzLmFycmF5T2JzZXJ2ZXI9dm9pZCAwKX0sY2xvc2U6ZnVuY3Rpb24oKXtpZighdGhpcy5jbG9zZWQpe3RoaXMudW5vYnNlcnZlKCk7Zm9yKHZhciBhPTE7YTx0aGlzLnRlcm1pbmF0b3JzLmxlbmd0aDthKz0yKXRoaXMuY2xvc2VJbnN0YW5jZUJpbmRpbmdzKHRoaXMudGVybWluYXRvcnNbYV0pO3RoaXMudGVybWluYXRvcnMubGVuZ3RoPTAsdGhpcy5jbG9zZURlcHMoKSx0aGlzLnRlbXBsYXRlRWxlbWVudF8uaXRlcmF0b3JfPXZvaWQgMCx0aGlzLmNsb3NlZD0hMH19fSxIVE1MVGVtcGxhdGVFbGVtZW50LmZvckFsbFRlbXBsYXRlc0Zyb21fPWl9KHRoaXMpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEsYil7aWYoIWEpdGhyb3cgbmV3IEVycm9yKCJBU1NFUlQ6ICIrYil9ZnVuY3Rpb24gYyhhKXtyZXR1cm4gYT49NDgmJjU3Pj1hfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIDMyPT09YXx8OT09PWF8fDExPT09YXx8MTI9PT1hfHwxNjA9PT1hfHxhPj01NzYwJiYi4ZqA4aCO4oCA4oCB4oCC4oCD4oCE4oCF4oCG4oCH4oCI4oCJ4oCK4oCv4oGf44CA77u/Ii5pbmRleE9mKFN0cmluZy5mcm9tQ2hhckNvZGUoYSkpPjB9ZnVuY3Rpb24gZShhKXtyZXR1cm4gMTA9PT1hfHwxMz09PWF8fDgyMzI9PT1hfHw4MjMzPT09YX1mdW5jdGlvbiBmKGEpe3JldHVybiAzNj09PWF8fDk1PT09YXx8YT49NjUmJjkwPj1hfHxhPj05NyYmMTIyPj1hfWZ1bmN0aW9uIGcoYSl7cmV0dXJuIDM2PT09YXx8OTU9PT1hfHxhPj02NSYmOTA+PWF8fGE+PTk3JiYxMjI+PWF8fGE+PTQ4JiY1Nz49YX1mdW5jdGlvbiBoKGEpe3JldHVybiJ0aGlzIj09PWF9ZnVuY3Rpb24gaSgpe2Zvcig7WT5YJiZkKFcuY2hhckNvZGVBdChYKSk7KSsrWH1mdW5jdGlvbiBqKCl7dmFyIGEsYjtmb3IoYT1YKys7WT5YJiYoYj1XLmNoYXJDb2RlQXQoWCksZyhiKSk7KSsrWDtyZXR1cm4gVy5zbGljZShhLFgpfWZ1bmN0aW9uIGsoKXt2YXIgYSxiLGM7cmV0dXJuIGE9WCxiPWooKSxjPTE9PT1iLmxlbmd0aD9TLklkZW50aWZpZXI6aChiKT9TLktleXdvcmQ6Im51bGwiPT09Yj9TLk51bGxMaXRlcmFsOiJ0cnVlIj09PWJ8fCJmYWxzZSI9PT1iP1MuQm9vbGVhbkxpdGVyYWw6Uy5JZGVudGlmaWVyLHt0eXBlOmMsdmFsdWU6YixyYW5nZTpbYSxYXX19ZnVuY3Rpb24gbCgpe3ZhciBhLGIsYz1YLGQ9Vy5jaGFyQ29kZUF0KFgpLGU9V1tYXTtzd2l0Y2goZCl7Y2FzZSA0NjpjYXNlIDQwOmNhc2UgNDE6Y2FzZSA1OTpjYXNlIDQ0OmNhc2UgMTIzOmNhc2UgMTI1OmNhc2UgOTE6Y2FzZSA5MzpjYXNlIDU4OmNhc2UgNjM6cmV0dXJuKytYLHt0eXBlOlMuUHVuY3R1YXRvcix2YWx1ZTpTdHJpbmcuZnJvbUNoYXJDb2RlKGQpLHJhbmdlOltjLFhdfTtkZWZhdWx0OmlmKGE9Vy5jaGFyQ29kZUF0KFgrMSksNjE9PT1hKXN3aXRjaChkKXtjYXNlIDM3OmNhc2UgMzg6Y2FzZSA0MjpjYXNlIDQzOmNhc2UgNDU6Y2FzZSA0NzpjYXNlIDYwOmNhc2UgNjI6Y2FzZSAxMjQ6cmV0dXJuIFgrPTIse3R5cGU6Uy5QdW5jdHVhdG9yLHZhbHVlOlN0cmluZy5mcm9tQ2hhckNvZGUoZCkrU3RyaW5nLmZyb21DaGFyQ29kZShhKSxyYW5nZTpbYyxYXX07Y2FzZSAzMzpjYXNlIDYxOnJldHVybiBYKz0yLDYxPT09Vy5jaGFyQ29kZUF0KFgpJiYrK1gse3R5cGU6Uy5QdW5jdHVhdG9yLHZhbHVlOlcuc2xpY2UoYyxYKSxyYW5nZTpbYyxYXX19fXJldHVybiBiPVdbWCsxXSxlPT09YiYmIiZ8Ii5pbmRleE9mKGUpPj0wPyhYKz0yLHt0eXBlOlMuUHVuY3R1YXRvcix2YWx1ZTplK2IscmFuZ2U6W2MsWF19KToiPD49ISstKiUmfF4vIi5pbmRleE9mKGUpPj0wPygrK1gse3R5cGU6Uy5QdW5jdHVhdG9yLHZhbHVlOmUscmFuZ2U6W2MsWF19KTp2b2lkIHMoe30sVi5VbmV4cGVjdGVkVG9rZW4sIklMTEVHQUwiKX1mdW5jdGlvbiBtKCl7dmFyIGEsZCxlO2lmKGU9V1tYXSxiKGMoZS5jaGFyQ29kZUF0KDApKXx8Ii4iPT09ZSwiTnVtZXJpYyBsaXRlcmFsIG11c3Qgc3RhcnQgd2l0aCBhIGRlY2ltYWwgZGlnaXQgb3IgYSBkZWNpbWFsIHBvaW50IiksZD1YLGE9IiIsIi4iIT09ZSl7Zm9yKGE9V1tYKytdLGU9V1tYXSwiMCI9PT1hJiZlJiZjKGUuY2hhckNvZGVBdCgwKSkmJnMoe30sVi5VbmV4cGVjdGVkVG9rZW4sIklMTEVHQUwiKTtjKFcuY2hhckNvZGVBdChYKSk7KWErPVdbWCsrXTtlPVdbWF19aWYoIi4iPT09ZSl7Zm9yKGErPVdbWCsrXTtjKFcuY2hhckNvZGVBdChYKSk7KWErPVdbWCsrXTtlPVdbWF19aWYoImUiPT09ZXx8IkUiPT09ZSlpZihhKz1XW1grK10sZT1XW1hdLCgiKyI9PT1lfHwiLSI9PT1lKSYmKGErPVdbWCsrXSksYyhXLmNoYXJDb2RlQXQoWCkpKWZvcig7YyhXLmNoYXJDb2RlQXQoWCkpOylhKz1XW1grK107ZWxzZSBzKHt9LFYuVW5leHBlY3RlZFRva2VuLCJJTExFR0FMIik7cmV0dXJuIGYoVy5jaGFyQ29kZUF0KFgpKSYmcyh7fSxWLlVuZXhwZWN0ZWRUb2tlbiwiSUxMRUdBTCIpLHt0eXBlOlMuTnVtZXJpY0xpdGVyYWwsdmFsdWU6cGFyc2VGbG9hdChhKSxyYW5nZTpbZCxYXX19ZnVuY3Rpb24gbigpe3ZhciBhLGMsZCxmPSIiLGc9ITE7Zm9yKGE9V1tYXSxiKCInIj09PWF8fCciJz09PWEsIlN0cmluZyBsaXRlcmFsIG11c3Qgc3RhcnRzIHdpdGggYSBxdW90ZSIpLGM9WCwrK1g7WT5YOyl7aWYoZD1XW1grK10sZD09PWEpe2E9IiI7YnJlYWt9aWYoIlxcIj09PWQpaWYoZD1XW1grK10sZCYmZShkLmNoYXJDb2RlQXQoMCkpKSJcciI9PT1kJiYiXG4iPT09V1tYXSYmKytYO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UibiI6Zis9IlxuIjticmVhaztjYXNlInIiOmYrPSJcciI7YnJlYWs7Y2FzZSJ0IjpmKz0iCSI7YnJlYWs7Y2FzZSJiIjpmKz0iXGIiO2JyZWFrO2Nhc2UiZiI6Zis9IlxmIjticmVhaztjYXNlInYiOmYrPSILIjticmVhaztkZWZhdWx0OmYrPWR9ZWxzZXtpZihlKGQuY2hhckNvZGVBdCgwKSkpYnJlYWs7Zis9ZH19cmV0dXJuIiIhPT1hJiZzKHt9LFYuVW5leHBlY3RlZFRva2VuLCJJTExFR0FMIikse3R5cGU6Uy5TdHJpbmdMaXRlcmFsLHZhbHVlOmYsb2N0YWw6ZyxyYW5nZTpbYyxYXX19ZnVuY3Rpb24gbyhhKXtyZXR1cm4gYS50eXBlPT09Uy5JZGVudGlmaWVyfHxhLnR5cGU9PT1TLktleXdvcmR8fGEudHlwZT09PVMuQm9vbGVhbkxpdGVyYWx8fGEudHlwZT09PVMuTnVsbExpdGVyYWx9ZnVuY3Rpb24gcCgpe3ZhciBhO3JldHVybiBpKCksWD49WT97dHlwZTpTLkVPRixyYW5nZTpbWCxYXX06KGE9Vy5jaGFyQ29kZUF0KFgpLDQwPT09YXx8NDE9PT1hfHw1OD09PWE/bCgpOjM5PT09YXx8MzQ9PT1hP24oKTpmKGEpP2soKTo0Nj09PWE/YyhXLmNoYXJDb2RlQXQoWCsxKSk/bSgpOmwoKTpjKGEpP20oKTpsKCkpfWZ1bmN0aW9uIHEoKXt2YXIgYTtyZXR1cm4gYT0kLFg9YS5yYW5nZVsxXSwkPXAoKSxYPWEucmFuZ2VbMV0sYX1mdW5jdGlvbiByKCl7dmFyIGE7YT1YLCQ9cCgpLFg9YX1mdW5jdGlvbiBzKGEsYyl7dmFyIGQsZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMiksZj1jLnJlcGxhY2UoLyUoXGQpL2csZnVuY3Rpb24oYSxjKXtyZXR1cm4gYihjPGUubGVuZ3RoLCJNZXNzYWdlIHJlZmVyZW5jZSBtdXN0IGJlIGluIHJhbmdlIiksZVtjXX0pO3Rocm93IGQ9bmV3IEVycm9yKGYpLGQuaW5kZXg9WCxkLmRlc2NyaXB0aW9uPWYsZH1mdW5jdGlvbiB0KGEpe3MoYSxWLlVuZXhwZWN0ZWRUb2tlbixhLnZhbHVlKX1mdW5jdGlvbiB1KGEpe3ZhciBiPXEoKTsoYi50eXBlIT09Uy5QdW5jdHVhdG9yfHxiLnZhbHVlIT09YSkmJnQoYil9ZnVuY3Rpb24gdihhKXtyZXR1cm4gJC50eXBlPT09Uy5QdW5jdHVhdG9yJiYkLnZhbHVlPT09YX1mdW5jdGlvbiB3KGEpe3JldHVybiAkLnR5cGU9PT1TLktleXdvcmQmJiQudmFsdWU9PT1hfWZ1bmN0aW9uIHgoKXt2YXIgYT1bXTtmb3IodSgiWyIpOyF2KCJdIik7KXYoIiwiKT8ocSgpLGEucHVzaChudWxsKSk6KGEucHVzaChiYigpKSx2KCJdIil8fHUoIiwiKSk7cmV0dXJuIHUoIl0iKSxaLmNyZWF0ZUFycmF5RXhwcmVzc2lvbihhKX1mdW5jdGlvbiB5KCl7dmFyIGE7cmV0dXJuIGkoKSxhPXEoKSxhLnR5cGU9PT1TLlN0cmluZ0xpdGVyYWx8fGEudHlwZT09PVMuTnVtZXJpY0xpdGVyYWw/Wi5jcmVhdGVMaXRlcmFsKGEpOlouY3JlYXRlSWRlbnRpZmllcihhLnZhbHVlKX1mdW5jdGlvbiB6KCl7dmFyIGEsYjtyZXR1cm4gYT0kLGkoKSwoYS50eXBlPT09Uy5FT0Z8fGEudHlwZT09PVMuUHVuY3R1YXRvcikmJnQoYSksYj15KCksdSgiOiIpLFouY3JlYXRlUHJvcGVydHkoImluaXQiLGIsYmIoKSl9ZnVuY3Rpb24gQSgpe3ZhciBhPVtdO2Zvcih1KCJ7Iik7IXYoIn0iKTspYS5wdXNoKHooKSksdigifSIpfHx1KCIsIik7cmV0dXJuIHUoIn0iKSxaLmNyZWF0ZU9iamVjdEV4cHJlc3Npb24oYSl9ZnVuY3Rpb24gQigpe3ZhciBhO3JldHVybiB1KCIoIiksYT1iYigpLHUoIikiKSxhfWZ1bmN0aW9uIEMoKXt2YXIgYSxiLGM7cmV0dXJuIHYoIigiKT9CKCk6KGE9JC50eXBlLGE9PT1TLklkZW50aWZpZXI/Yz1aLmNyZWF0ZUlkZW50aWZpZXIocSgpLnZhbHVlKTphPT09Uy5TdHJpbmdMaXRlcmFsfHxhPT09Uy5OdW1lcmljTGl0ZXJhbD9jPVouY3JlYXRlTGl0ZXJhbChxKCkpOmE9PT1TLktleXdvcmQ/dygidGhpcyIpJiYocSgpLGM9Wi5jcmVhdGVUaGlzRXhwcmVzc2lvbigpKTphPT09Uy5Cb29sZWFuTGl0ZXJhbD8oYj1xKCksYi52YWx1ZT0idHJ1ZSI9PT1iLnZhbHVlLGM9Wi5jcmVhdGVMaXRlcmFsKGIpKTphPT09Uy5OdWxsTGl0ZXJhbD8oYj1xKCksYi52YWx1ZT1udWxsLGM9Wi5jcmVhdGVMaXRlcmFsKGIpKTp2KCJbIik/Yz14KCk6digieyIpJiYoYz1BKCkpLGM/Yzp2b2lkIHQocSgpKSl9ZnVuY3Rpb24gRCgpe3ZhciBhPVtdO2lmKHUoIigiKSwhdigiKSIpKWZvcig7WT5YJiYoYS5wdXNoKGJiKCkpLCF2KCIpIikpOyl1KCIsIik7cmV0dXJuIHUoIikiKSxhfWZ1bmN0aW9uIEUoKXt2YXIgYTtyZXR1cm4gYT1xKCksbyhhKXx8dChhKSxaLmNyZWF0ZUlkZW50aWZpZXIoYS52YWx1ZSl9ZnVuY3Rpb24gRigpe3JldHVybiB1KCIuIiksRSgpfWZ1bmN0aW9uIEcoKXt2YXIgYTtyZXR1cm4gdSgiWyIpLGE9YmIoKSx1KCJdIiksYX1mdW5jdGlvbiBIKCl7dmFyIGEsYjtmb3IoYT1DKCk7digiLiIpfHx2KCJbIik7KXYoIlsiKT8oYj1HKCksYT1aLmNyZWF0ZU1lbWJlckV4cHJlc3Npb24oIlsiLGEsYikpOihiPUYoKSxhPVouY3JlYXRlTWVtYmVyRXhwcmVzc2lvbigiLiIsYSxiKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSSgpe3ZhciBhLGI7cmV0dXJuICQudHlwZSE9PVMuUHVuY3R1YXRvciYmJC50eXBlIT09Uy5LZXl3b3JkP2I9YWIoKTp2KCIrIil8fHYoIi0iKXx8digiISIpPyhhPXEoKSxiPUkoKSxiPVouY3JlYXRlVW5hcnlFeHByZXNzaW9uKGEudmFsdWUsYikpOncoImRlbGV0ZSIpfHx3KCJ2b2lkIil8fHcoInR5cGVvZiIpP3Moe30sVi5VbmV4cGVjdGVkVG9rZW4pOmI9YWIoKSxifWZ1bmN0aW9uIEooYSl7dmFyIGI9MDtpZihhLnR5cGUhPT1TLlB1bmN0dWF0b3ImJmEudHlwZSE9PVMuS2V5d29yZClyZXR1cm4gMDtzd2l0Y2goYS52YWx1ZSl7Y2FzZSJ8fCI6Yj0xO2JyZWFrO2Nhc2UiJiYiOmI9MjticmVhaztjYXNlIj09IjpjYXNlIiE9IjpjYXNlIj09PSI6Y2FzZSIhPT0iOmI9NjticmVhaztjYXNlIjwiOmNhc2UiPiI6Y2FzZSI8PSI6Y2FzZSI+PSI6Y2FzZSJpbnN0YW5jZW9mIjpiPTc7YnJlYWs7Y2FzZSJpbiI6Yj03O2JyZWFrO2Nhc2UiKyI6Y2FzZSItIjpiPTk7YnJlYWs7Y2FzZSIqIjpjYXNlIi8iOmNhc2UiJSI6Yj0xMX1yZXR1cm4gYn1mdW5jdGlvbiBLKCl7dmFyIGEsYixjLGQsZSxmLGcsaDtpZihnPUkoKSxiPSQsYz1KKGIpLDA9PT1jKXJldHVybiBnO2ZvcihiLnByZWM9YyxxKCksZT1JKCksZD1bZyxiLGVdOyhjPUooJCkpPjA7KXtmb3IoO2QubGVuZ3RoPjImJmM8PWRbZC5sZW5ndGgtMl0ucHJlYzspZT1kLnBvcCgpLGY9ZC5wb3AoKS52YWx1ZSxnPWQucG9wKCksYT1aLmNyZWF0ZUJpbmFyeUV4cHJlc3Npb24oZixnLGUpLGQucHVzaChhKTtiPXEoKSxiLnByZWM9YyxkLnB1c2goYiksYT1JKCksZC5wdXNoKGEpfWZvcihoPWQubGVuZ3RoLTEsYT1kW2hdO2g+MTspYT1aLmNyZWF0ZUJpbmFyeUV4cHJlc3Npb24oZFtoLTFdLnZhbHVlLGRbaC0yXSxhKSxoLT0yO3JldHVybiBhfWZ1bmN0aW9uIEwoKXt2YXIgYSxiLGM7cmV0dXJuIGE9SygpLHYoIj8iKSYmKHEoKSxiPUwoKSx1KCI6IiksYz1MKCksYT1aLmNyZWF0ZUNvbmRpdGlvbmFsRXhwcmVzc2lvbihhLGIsYykpLGF9ZnVuY3Rpb24gTSgpe3ZhciBhLGI7cmV0dXJuIGE9cSgpLGEudHlwZSE9PVMuSWRlbnRpZmllciYmdChhKSxiPXYoIigiKT9EKCk6W10sWi5jcmVhdGVGaWx0ZXIoYS52YWx1ZSxiKX1mdW5jdGlvbiBOKCl7Zm9yKDt2KCJ8Iik7KXEoKSxNKCl9ZnVuY3Rpb24gTygpe2koKSxyKCk7dmFyIGE9YmIoKTthJiYoIiwiPT09JC52YWx1ZXx8ImluIj09JC52YWx1ZSYmYS50eXBlPT09VS5JZGVudGlmaWVyP1EoYSk6KE4oKSwiYXMiPT09JC52YWx1ZT9QKGEpOlouY3JlYXRlVG9wTGV2ZWwoYSkpKSwkLnR5cGUhPT1TLkVPRiYmdCgkKX1mdW5jdGlvbiBQKGEpe3EoKTt2YXIgYj1xKCkudmFsdWU7Wi5jcmVhdGVBc0V4cHJlc3Npb24oYSxiKX1mdW5jdGlvbiBRKGEpe3ZhciBiOyIsIj09PSQudmFsdWUmJihxKCksJC50eXBlIT09Uy5JZGVudGlmaWVyJiZ0KCQpLGI9cSgpLnZhbHVlKSxxKCk7dmFyIGM9YmIoKTtOKCksWi5jcmVhdGVJbkV4cHJlc3Npb24oYS5uYW1lLGIsYyl9ZnVuY3Rpb24gUihhLGIpe3JldHVybiBaPWIsVz1hLFg9MCxZPVcubGVuZ3RoLCQ9bnVsbCxfPXtsYWJlbFNldDp7fX0sTygpfXZhciBTLFQsVSxWLFcsWCxZLFosJCxfO1M9e0Jvb2xlYW5MaXRlcmFsOjEsRU9GOjIsSWRlbnRpZmllcjozLEtleXdvcmQ6NCxOdWxsTGl0ZXJhbDo1LE51bWVyaWNMaXRlcmFsOjYsUHVuY3R1YXRvcjo3LFN0cmluZ0xpdGVyYWw6OH0sVD17fSxUW1MuQm9vbGVhbkxpdGVyYWxdPSJCb29sZWFuIixUW1MuRU9GXT0iPGVuZD4iLFRbUy5JZGVudGlmaWVyXT0iSWRlbnRpZmllciIsVFtTLktleXdvcmRdPSJLZXl3b3JkIixUW1MuTnVsbExpdGVyYWxdPSJOdWxsIixUW1MuTnVtZXJpY0xpdGVyYWxdPSJOdW1lcmljIixUW1MuUHVuY3R1YXRvcl09IlB1bmN0dWF0b3IiLFRbUy5TdHJpbmdMaXRlcmFsXT0iU3RyaW5nIixVPXtBcnJheUV4cHJlc3Npb246IkFycmF5RXhwcmVzc2lvbiIsQmluYXJ5RXhwcmVzc2lvbjoiQmluYXJ5RXhwcmVzc2lvbiIsQ2FsbEV4cHJlc3Npb246IkNhbGxFeHByZXNzaW9uIixDb25kaXRpb25hbEV4cHJlc3Npb246IkNvbmRpdGlvbmFsRXhwcmVzc2lvbiIsRW1wdHlTdGF0ZW1lbnQ6IkVtcHR5U3RhdGVtZW50IixFeHByZXNzaW9uU3RhdGVtZW50OiJFeHByZXNzaW9uU3RhdGVtZW50IixJZGVudGlmaWVyOiJJZGVudGlmaWVyIixMaXRlcmFsOiJMaXRlcmFsIixMYWJlbGVkU3RhdGVtZW50OiJMYWJlbGVkU3RhdGVtZW50IixMb2dpY2FsRXhwcmVzc2lvbjoiTG9naWNhbEV4cHJlc3Npb24iLE1lbWJlckV4cHJlc3Npb246Ik1lbWJlckV4cHJlc3Npb24iLE9iamVjdEV4cHJlc3Npb246Ik9iamVjdEV4cHJlc3Npb24iLFByb2dyYW06IlByb2dyYW0iLFByb3BlcnR5OiJQcm9wZXJ0eSIsVGhpc0V4cHJlc3Npb246IlRoaXNFeHByZXNzaW9uIixVbmFyeUV4cHJlc3Npb246IlVuYXJ5RXhwcmVzc2lvbiJ9LFY9e1VuZXhwZWN0ZWRUb2tlbjoiVW5leHBlY3RlZCB0b2tlbiAlMCIsVW5rbm93bkxhYmVsOiJVbmRlZmluZWQgbGFiZWwgJyUwJyIsUmVkZWNsYXJhdGlvbjoiJTAgJyUxJyBoYXMgYWxyZWFkeSBiZWVuIGRlY2xhcmVkIn07dmFyIGFiPUgsYmI9TDthLmVzcHJpbWE9e3BhcnNlOlJ9fSh0aGlzKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIsZCxlKXt2YXIgZjt0cnl7aWYoZj1jKGEpLGYuc2NvcGVJZGVudCYmKGQubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERXx8IlRFTVBMQVRFIiE9PWQudGFnTmFtZXx8ImJpbmQiIT09YiYmInJlcGVhdCIhPT1iKSl0aHJvdyBFcnJvcigiYXMgYW5kIGluIGNhbiBvbmx5IGJlIHVzZWQgd2l0aGluIDx0ZW1wbGF0ZSBiaW5kL3JlcGVhdD4iKX1jYXRjaChnKXtyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKCJJbnZhbGlkIGV4cHJlc3Npb24gc3ludGF4OiAiK2EsZyl9cmV0dXJuIGZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mLmdldEJpbmRpbmcoYSxlLGMpO3JldHVybiBmLnNjb3BlSWRlbnQmJmQmJihiLnBvbHltZXJFeHByZXNzaW9uU2NvcGVJZGVudF89Zi5zY29wZUlkZW50LGYuaW5kZXhJZGVudCYmKGIucG9seW1lckV4cHJlc3Npb25JbmRleElkZW50Xz1mLmluZGV4SWRlbnQpKSxkfX1mdW5jdGlvbiBjKGEpe3ZhciBiPXNbYV07aWYoIWIpe3ZhciBjPW5ldyBqO2VzcHJpbWEucGFyc2UoYSxjKSxiPW5ldyBsKGMpLHNbYV09Yn1yZXR1cm4gYn1mdW5jdGlvbiBkKGEpe3RoaXMudmFsdWU9YSx0aGlzLnZhbHVlRm5fPXZvaWQgMH1mdW5jdGlvbiBlKGEpe3RoaXMubmFtZT1hLHRoaXMucGF0aD1QYXRoLmdldChhKX1mdW5jdGlvbiBmKGEsYixjKXsiWyI9PWMmJmIgaW5zdGFuY2VvZiBkJiZQYXRoLmdldChiLnZhbHVlKS52YWxpZCYmKGM9Ii4iLGI9bmV3IGUoYi52YWx1ZSkpLHRoaXMuZHluYW1pY0RlcHM9ImZ1bmN0aW9uIj09dHlwZW9mIGF8fGEuZHluYW1pYyx0aGlzLmR5bmFtaWM9ImZ1bmN0aW9uIj09dHlwZW9mIGJ8fGIuZHluYW1pY3x8IlsiPT1jLHRoaXMuc2ltcGxlUGF0aD0hdGhpcy5keW5hbWljJiYhdGhpcy5keW5hbWljRGVwcyYmYiBpbnN0YW5jZW9mIGUmJihhIGluc3RhbmNlb2YgZnx8YSBpbnN0YW5jZW9mIGUpLHRoaXMub2JqZWN0PXRoaXMuc2ltcGxlUGF0aD9hOmkoYSksdGhpcy5wcm9wZXJ0eT0iLiI9PWM/YjppKGIpfWZ1bmN0aW9uIGcoYSxiKXt0aGlzLm5hbWU9YSx0aGlzLmFyZ3M9W107Zm9yKHZhciBjPTA7YzxiLmxlbmd0aDtjKyspdGhpcy5hcmdzW2NdPWkoYltjXSl9ZnVuY3Rpb24gaCgpe3Rocm93IEVycm9yKCJOb3QgSW1wbGVtZW50ZWQiKX1mdW5jdGlvbiBpKGEpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBhP2E6YS52YWx1ZUZuKCl9ZnVuY3Rpb24gaigpe3RoaXMuZXhwcmVzc2lvbj1udWxsLHRoaXMuZmlsdGVycz1bXSx0aGlzLmRlcHM9e30sdGhpcy5jdXJyZW50UGF0aD12b2lkIDAsdGhpcy5zY29wZUlkZW50PXZvaWQgMCx0aGlzLmluZGV4SWRlbnQ9dm9pZCAwLHRoaXMuZHluYW1pY0RlcHM9ITF9ZnVuY3Rpb24gayhhKXt0aGlzLnZhbHVlXz1hfWZ1bmN0aW9uIGwoYSl7aWYodGhpcy5zY29wZUlkZW50PWEuc2NvcGVJZGVudCx0aGlzLmluZGV4SWRlbnQ9YS5pbmRleElkZW50LCFhLmV4cHJlc3Npb24pdGhyb3cgRXJyb3IoIk5vIGV4cHJlc3Npb24gZm91bmQuIik7dGhpcy5leHByZXNzaW9uPWEuZXhwcmVzc2lvbixpKHRoaXMuZXhwcmVzc2lvbiksdGhpcy5maWx0ZXJzPWEuZmlsdGVycyx0aGlzLmR5bmFtaWNEZXBzPWEuZHluYW1pY0RlcHN9ZnVuY3Rpb24gbShhKXtyZXR1cm4gU3RyaW5nKGEpLnJlcGxhY2UoL1tBLVpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIi0iK2EudG9Mb3dlckNhc2UoKX0pfWZ1bmN0aW9uIG4oYSl7cmV0dXJuIm8iPT09YVswXSYmIm4iPT09YVsxXSYmIi0iPT09YVsyXX1mdW5jdGlvbiBvKGEsYil7Zm9yKDthW3ddJiYhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsYik7KWE9YVt3XTtyZXR1cm4gYX1mdW5jdGlvbiBwKGEsYil7aWYoMD09Yi5sZW5ndGgpcmV0dXJuIHZvaWQgMDtpZigxPT1iLmxlbmd0aClyZXR1cm4gbyhhLGJbMF0pO2Zvcih2YXIgYz0wO251bGwhPWEmJmM8Yi5sZW5ndGgtMTtjKyspYT1hW2JbY11dO3JldHVybiBhfWZ1bmN0aW9uIHEoYSxiLGMpe3ZhciBkPWIuc3Vic3RyaW5nKDMpO3JldHVybiBkPXZbZF18fGQsZnVuY3Rpb24oYixlLGYpe2Z1bmN0aW9uIGcoKXtyZXR1cm4ie3sgIithKyIgfX0ifXZhciBoLGksajtyZXR1cm4gaj0iZnVuY3Rpb24iPT10eXBlb2YgYy5yZXNvbHZlRXZlbnRIYW5kbGVyP2Z1bmN0aW9uKGQpe2g9aHx8Yy5yZXNvbHZlRXZlbnRIYW5kbGVyKGIsYSxlKSxoKGQsZC5kZXRhaWwsZC5jdXJyZW50VGFyZ2V0KSxQbGF0Zm9ybSYmImZ1bmN0aW9uIj09dHlwZW9mIFBsYXRmb3JtLmZsdXNoJiZQbGF0Zm9ybS5mbHVzaCgpfTpmdW5jdGlvbihjKXtoPWh8fGEuZ2V0VmFsdWVGcm9tKGIpLGk9aXx8cChiLGEsZSksaC5hcHBseShpLFtjLGMuZGV0YWlsLGMuY3VycmVudFRhcmdldF0pLFBsYXRmb3JtJiYiZnVuY3Rpb24iPT10eXBlb2YgUGxhdGZvcm0uZmx1c2gmJlBsYXRmb3JtLmZsdXNoKCl9LGUuYWRkRXZlbnRMaXN0ZW5lcihkLGopLGY/dm9pZCAwOntvcGVuOmcsZGlzY2FyZENoYW5nZXM6ZyxjbG9zZTpmdW5jdGlvbigpe2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGopfX19fWZ1bmN0aW9uIHIoKXt9dmFyIHM9T2JqZWN0LmNyZWF0ZShudWxsKTtkLnByb3RvdHlwZT17dmFsdWVGbjpmdW5jdGlvbigpe2lmKCF0aGlzLnZhbHVlRm5fKXt2YXIgYT10aGlzLnZhbHVlO3RoaXMudmFsdWVGbl89ZnVuY3Rpb24oKXtyZXR1cm4gYX19cmV0dXJuIHRoaXMudmFsdWVGbl99fSxlLnByb3RvdHlwZT17dmFsdWVGbjpmdW5jdGlvbigpe2lmKCF0aGlzLnZhbHVlRm5fKXt2YXIgYT0odGhpcy5uYW1lLHRoaXMucGF0aCk7dGhpcy52YWx1ZUZuXz1mdW5jdGlvbihiLGMpe3JldHVybiBjJiZjLmFkZFBhdGgoYixhKSxhLmdldFZhbHVlRnJvbShiKX19cmV0dXJuIHRoaXMudmFsdWVGbl99LHNldFZhbHVlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIDE9PXRoaXMucGF0aC5sZW5ndGgsYT1vKGEsdGhpcy5wYXRoWzBdKSx0aGlzLnBhdGguc2V0VmFsdWVGcm9tKGEsYil9fSxmLnByb3RvdHlwZT17Z2V0IGZ1bGxQYXRoKCl7aWYoIXRoaXMuZnVsbFBhdGhfKXt2YXIgYT10aGlzLm9iamVjdCBpbnN0YW5jZW9mIGU/dGhpcy5vYmplY3QubmFtZTp0aGlzLm9iamVjdC5mdWxsUGF0aDt0aGlzLmZ1bGxQYXRoXz1QYXRoLmdldChhKyIuIit0aGlzLnByb3BlcnR5Lm5hbWUpfXJldHVybiB0aGlzLmZ1bGxQYXRoX30sdmFsdWVGbjpmdW5jdGlvbigpe2lmKCF0aGlzLnZhbHVlRm5fKXt2YXIgYT10aGlzLm9iamVjdDtpZih0aGlzLnNpbXBsZVBhdGgpe3ZhciBiPXRoaXMuZnVsbFBhdGg7dGhpcy52YWx1ZUZuXz1mdW5jdGlvbihhLGMpe3JldHVybiBjJiZjLmFkZFBhdGgoYSxiKSxiLmdldFZhbHVlRnJvbShhKX19ZWxzZSBpZih0aGlzLnByb3BlcnR5IGluc3RhbmNlb2YgZSl7dmFyIGI9UGF0aC5nZXQodGhpcy5wcm9wZXJ0eS5uYW1lKTt0aGlzLnZhbHVlRm5fPWZ1bmN0aW9uKGMsZCl7dmFyIGU9YShjLGQpO3JldHVybiBkJiZkLmFkZFBhdGgoZSxiKSxiLmdldFZhbHVlRnJvbShlKX19ZWxzZXt2YXIgYz10aGlzLnByb3BlcnR5O3RoaXMudmFsdWVGbl89ZnVuY3Rpb24oYixkKXt2YXIgZT1hKGIsZCksZj1jKGIsZCk7cmV0dXJuIGQmJmQuYWRkUGF0aChlLGYpLGU/ZVtmXTp2b2lkIDB9fX1yZXR1cm4gdGhpcy52YWx1ZUZuX30sc2V0VmFsdWU6ZnVuY3Rpb24oYSxiKXtpZih0aGlzLnNpbXBsZVBhdGgpcmV0dXJuIHRoaXMuZnVsbFBhdGguc2V0VmFsdWVGcm9tKGEsYiksYjt2YXIgYz10aGlzLm9iamVjdChhKSxkPXRoaXMucHJvcGVydHkgaW5zdGFuY2VvZiBlP3RoaXMucHJvcGVydHkubmFtZTp0aGlzLnByb3BlcnR5KGEpO3JldHVybiBjW2RdPWJ9fSxnLnByb3RvdHlwZT17dHJhbnNmb3JtOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9Y1t0aGlzLm5hbWVdLGc9ZDtpZihmKWc9dm9pZCAwO2Vsc2UgaWYoZj1nW3RoaXMubmFtZV0sIWYpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiQ2Fubm90IGZpbmQgZmlsdGVyOiAiK3RoaXMubmFtZSk7aWYoYj9mPWYudG9Nb2RlbDoiZnVuY3Rpb24iPT10eXBlb2YgZi50b0RPTSYmKGY9Zi50b0RPTSksImZ1bmN0aW9uIiE9dHlwZW9mIGYpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiTm8gIisoYj8idG9Nb2RlbCI6InRvRE9NIikrIiBmb3VuZCBvbiIrdGhpcy5uYW1lKTtmb3IodmFyIGg9W2FdLGo9MDtqPHRoaXMuYXJncy5sZW5ndGg7aisrKWhbaisxXT1pKHRoaXMuYXJnc1tqXSkoZCxlKTtyZXR1cm4gZi5hcHBseShnLGgpfX07dmFyIHQ9eyIrIjpmdW5jdGlvbihhKXtyZXR1cm4rYX0sIi0iOmZ1bmN0aW9uKGEpe3JldHVybi1hfSwiISI6ZnVuY3Rpb24oYSl7cmV0dXJuIWF9fSx1PXsiKyI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYStifSwiLSI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1ifSwiKiI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSpifSwiLyI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS9ifSwiJSI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSVifSwiPCI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj5hfSwiPiI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT5ifSwiPD0iOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGI+PWF9LCI+PSI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT49Yn0sIj09IjpmdW5jdGlvbihhLGIpe3JldHVybiBhPT1ifSwiIT0iOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEhPWJ9LCI9PT0iOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1ifSwiIT09IjpmdW5jdGlvbihhLGIpe3JldHVybiBhIT09Yn0sIiYmIjpmdW5jdGlvbihhLGIpe3JldHVybiBhJiZifSwifHwiOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGF8fGJ9fTtqLnByb3RvdHlwZT17Y3JlYXRlVW5hcnlFeHByZXNzaW9uOmZ1bmN0aW9uKGEsYil7aWYoIXRbYV0pdGhyb3cgRXJyb3IoIkRpc2FsbG93ZWQgb3BlcmF0b3I6ICIrYSk7cmV0dXJuIGI9aShiKSxmdW5jdGlvbihjLGQpe3JldHVybiB0W2FdKGIoYyxkKSl9fSxjcmVhdGVCaW5hcnlFeHByZXNzaW9uOmZ1bmN0aW9uKGEsYixjKXtpZighdVthXSl0aHJvdyBFcnJvcigiRGlzYWxsb3dlZCBvcGVyYXRvcjogIithKTtyZXR1cm4gYj1pKGIpLGM9aShjKSxmdW5jdGlvbihkLGUpe3JldHVybiB1W2FdKGIoZCxlKSxjKGQsZSkpfX0sY3JlYXRlQ29uZGl0aW9uYWxFeHByZXNzaW9uOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYT1pKGEpLGI9aShiKSxjPWkoYyksZnVuY3Rpb24oZCxlKXtyZXR1cm4gYShkLGUpP2IoZCxlKTpjKGQsZSl9fSxjcmVhdGVJZGVudGlmaWVyOmZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBlKGEpO3JldHVybiBiLnR5cGU9IklkZW50aWZpZXIiLGJ9LGNyZWF0ZU1lbWJlckV4cHJlc3Npb246ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW5ldyBmKGIsYyxhKTtyZXR1cm4gZC5keW5hbWljRGVwcyYmKHRoaXMuZHluYW1pY0RlcHM9ITApLGR9LGNyZWF0ZUxpdGVyYWw6ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBkKGEudmFsdWUpfSxjcmVhdGVBcnJheUV4cHJlc3Npb246ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXT1pKGFbYl0pO3JldHVybiBmdW5jdGlvbihiLGMpe2Zvcih2YXIgZD1bXSxlPTA7ZTxhLmxlbmd0aDtlKyspZC5wdXNoKGFbZV0oYixjKSk7cmV0dXJuIGR9fSxjcmVhdGVQcm9wZXJ0eTpmdW5jdGlvbihhLGIsYyl7cmV0dXJue2tleTpiIGluc3RhbmNlb2YgZT9iLm5hbWU6Yi52YWx1ZSx2YWx1ZTpjfX0sY3JlYXRlT2JqZWN0RXhwcmVzc2lvbjpmdW5jdGlvbihhKXtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKylhW2JdLnZhbHVlPWkoYVtiXS52YWx1ZSk7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7Zm9yKHZhciBkPXt9LGU9MDtlPGEubGVuZ3RoO2UrKylkW2FbZV0ua2V5XT1hW2VdLnZhbHVlKGIsYyk7cmV0dXJuIGR9fSxjcmVhdGVGaWx0ZXI6ZnVuY3Rpb24oYSxiKXt0aGlzLmZpbHRlcnMucHVzaChuZXcgZyhhLGIpKX0sY3JlYXRlQXNFeHByZXNzaW9uOmZ1bmN0aW9uKGEsYil7dGhpcy5leHByZXNzaW9uPWEsdGhpcy5zY29wZUlkZW50PWJ9LGNyZWF0ZUluRXhwcmVzc2lvbjpmdW5jdGlvbihhLGIsYyl7dGhpcy5leHByZXNzaW9uPWMsdGhpcy5zY29wZUlkZW50PWEsdGhpcy5pbmRleElkZW50PWJ9LGNyZWF0ZVRvcExldmVsOmZ1bmN0aW9uKGEpe3RoaXMuZXhwcmVzc2lvbj1hfSxjcmVhdGVUaGlzRXhwcmVzc2lvbjpofSxrLnByb3RvdHlwZT17b3BlbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlX30sZGlzY2FyZENoYW5nZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZV99LGRlbGl2ZXI6ZnVuY3Rpb24oKXt9LGNsb3NlOmZ1bmN0aW9uKCl7fX0sbC5wcm90b3R5cGU9e2dldEJpbmRpbmc6ZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoKXtnLmR5bmFtaWNEZXBzJiZmLnN0YXJ0UmVzZXQoKTt2YXIgYz1nLmdldFZhbHVlKGEsZy5keW5hbWljRGVwcz9mOnZvaWQgMCxiKTtyZXR1cm4gZy5keW5hbWljRGVwcyYmZi5maW5pc2hSZXNldCgpLGN9ZnVuY3Rpb24gZShjKXtyZXR1cm4gZy5zZXRWYWx1ZShhLGMsYiksY31pZihjKXJldHVybiB0aGlzLmdldFZhbHVlKGEsdm9pZCAwLGIpO3ZhciBmPW5ldyBDb21wb3VuZE9ic2VydmVyO3RoaXMuZ2V0VmFsdWUoYSxmLGIpO3ZhciBnPXRoaXM7cmV0dXJuIG5ldyBPYnNlcnZlclRyYW5zZm9ybShmLGQsZSwhMCl9LGdldFZhbHVlOmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9aSh0aGlzLmV4cHJlc3Npb24pKGEsYiksZT0wO2U8dGhpcy5maWx0ZXJzLmxlbmd0aDtlKyspZD10aGlzLmZpbHRlcnNbZV0udHJhbnNmb3JtKGQsITEsYyxhLGIpO3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPXRoaXMuZmlsdGVycz90aGlzLmZpbHRlcnMubGVuZ3RoOjA7ZC0tPjA7KWI9dGhpcy5maWx0ZXJzW2RdLnRyYW5zZm9ybShiLCEwLGMsYSk7cmV0dXJuIHRoaXMuZXhwcmVzc2lvbi5zZXRWYWx1ZT90aGlzLmV4cHJlc3Npb24uc2V0VmFsdWUoYSxiKTp2b2lkIDB9fTt2YXIgdj17fTtbIndlYmtpdEFuaW1hdGlvblN0YXJ0Iiwid2Via2l0QW5pbWF0aW9uRW5kIiwid2Via2l0VHJhbnNpdGlvbkVuZCIsIkRPTUZvY3VzT3V0IiwiRE9NRm9jdXNJbiIsIkRPTU1vdXNlU2Nyb2xsIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2W2EudG9Mb3dlckNhc2UoKV09YX0pO3ZhciB3PSJAIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtyLnByb3RvdHlwZT17c3R5bGVPYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI9W107Zm9yKHZhciBjIGluIGEpYi5wdXNoKG0oYykrIjogIithW2NdKTtyZXR1cm4gYi5qb2luKCI7ICIpfSx0b2tlbkxpc3Q6ZnVuY3Rpb24oYSl7dmFyIGI9W107Zm9yKHZhciBjIGluIGEpYVtjXSYmYi5wdXNoKGMpO3JldHVybiBiLmpvaW4oIiAiKX0scHJlcGFyZUluc3RhbmNlUG9zaXRpb25DaGFuZ2VkOmZ1bmN0aW9uKGEpe3ZhciBiPWEucG9seW1lckV4cHJlc3Npb25JbmRleElkZW50XztpZihiKXJldHVybiBmdW5jdGlvbihhLGMpe2EubW9kZWxbYl09Y319LHByZXBhcmVCaW5kaW5nOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZT1QYXRoLmdldChhKTtpZihuKGMpKXJldHVybiBlLnZhbGlkP3EoZSxjLHRoaXMpOnZvaWQgY29uc29sZS5lcnJvcigib24tKiBiaW5kaW5ncyBtdXN0IGJlIHNpbXBsZSBwYXRoIGV4cHJlc3Npb25zIik7e2lmKCFlLnZhbGlkKXJldHVybiBiKGEsYyxkLHRoaXMpO2lmKDE9PWUubGVuZ3RoKXJldHVybiBmdW5jdGlvbihhLGIsYyl7aWYoYylyZXR1cm4gZS5nZXRWYWx1ZUZyb20oYSk7dmFyIGQ9byhhLGVbMF0pO3JldHVybiBuZXcgUGF0aE9ic2VydmVyKGQsZSl9fX0scHJlcGFyZUluc3RhbmNlTW9kZWw6ZnVuY3Rpb24oYSl7dmFyIGI9YS5wb2x5bWVyRXhwcmVzc2lvblNjb3BlSWRlbnRfO2lmKGIpe3ZhciBjPWEudGVtcGxhdGVJbnN0YW5jZT9hLnRlbXBsYXRlSW5zdGFuY2UubW9kZWw6YS5tb2RlbCxkPWEucG9seW1lckV4cHJlc3Npb25JbmRleElkZW50XztyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGU9T2JqZWN0LmNyZWF0ZShjKTtyZXR1cm4gZVtiXT1hLGVbZF09dm9pZCAwLGVbd109YyxlfX19fSxhLlBvbHltZXJFeHByZXNzaW9ucz1yLGEuZXhwb3NlR2V0RXhwcmVzc2lvbiYmKGEuZ2V0RXhwcmVzc2lvbl89YyksYS5Qb2x5bWVyRXhwcmVzc2lvbnMucHJlcGFyZUV2ZW50QmluZGluZz1xfSh0aGlzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7ZXx8KGU9ITAsYS5lbmRPZk1pY3JvdGFzayhmdW5jdGlvbigpe2U9ITEsbG9nRmxhZ3MuZGF0YSYmY29uc29sZS5ncm91cCgiUGxhdGZvcm0uZmx1c2goKSIpLGEucGVyZm9ybU1pY3JvdGFza0NoZWNrcG9pbnQoKSxsb2dGbGFncy5kYXRhJiZjb25zb2xlLmdyb3VwRW5kKCl9KSl9dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtjLnRleHRDb250ZW50PSJ0ZW1wbGF0ZSB7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O30gLyogaW5qZWN0ZWQgYnkgcGxhdGZvcm0uanMgKi8iO3ZhciBkPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImhlYWQiKTtkLmluc2VydEJlZm9yZShjLGQuZmlyc3RDaGlsZCk7dmFyIGUsZj0xMjU7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIldlYkNvbXBvbmVudHNSZWFkeSIsZnVuY3Rpb24oKXtiKCksT2JzZXJ2ZXIuaGFzT2JqZWN0T2JzZXJ2ZXx8KGEuZmx1c2hQb2xsPXNldEludGVydmFsKGIsZikpfSksd2luZG93LkN1c3RvbUVsZW1lbnRzJiYhQ3VzdG9tRWxlbWVudHMudXNlTmF0aXZlKXt2YXIgZz1Eb2N1bWVudC5wcm90b3R5cGUuaW1wb3J0Tm9kZTtEb2N1bWVudC5wcm90b3R5cGUuaW1wb3J0Tm9kZT1mdW5jdGlvbihhLGIpe3ZhciBjPWcuY2FsbCh0aGlzLGEsYik7cmV0dXJuIEN1c3RvbUVsZW1lbnRzLnVwZ3JhZGVBbGwoYyksY319YS5mbHVzaD1ifSh3aW5kb3cuUGxhdGZvcm0pOwovLyMgc291cmNlTWFwcGluZ1VSTD1wbGF0Zm9ybS5qcy5tYXA=",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sun, 09 Nov 2014 03:30:55 GMT",
                    "Content-Length": "191129",
                    "Date": "Sun, 09 Nov 2014 03:30:57 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}