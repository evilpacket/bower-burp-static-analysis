{
    "url": "http://localhost:9999/DeadHeadRussell/ObjectId.js/src/main/javascript/Objectid.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cookie manipulation (DOM-based)",
    "issueType": 5245696,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based cookie manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the value of a cookie in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will set an arbitrary value in the user's cookie.<br><br>The potential impact of the vulnerability depends on the role that the cookie plays within the application. If the cookie is used to control the behavior that results from certain user actions (for example, a 'production' versus 'demo' mode setting), then the attacker may be able to cause the user to perform unintended actions by manipulating the cookie's value. If the cookie is used to track the user's session, then the attacker may be able to perform a session fixation attack, in which they set the cookie's value to a valid token that they have obtained from the application, and then hijack the session during the victim user's subsequent interaction with the application.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cookie manipulation vulnerabilities is not to dynamically write to cookies using data that originated from any untrusted source. This behavior should never be implemented for cookies that have any role in controlling privileged actions or user sessions within the application.",
    "issueDetail": "The application may be vulnerable to DOM-based cookie manipulation. Data is read from <b>document.cookie</b> and written to <b>document.cookie</b> via the following statements:<ul><li>var cookieList = document.cookie.split('; ');</li><li>var cookie = cookieList[i].split('=');</li><li>machine = cookie[1];</li><li>document.cookie = 'mongoMachineId=' + machine + ';expires=Tue, 19 Jan 2038 05:00:00 GMT';</li></ul>Because the data originates from a cookie, the application's behavior is not trivial to exploit in an attack against another user. Typically, you will need to find a means of setting an arbitrary cookie value in the victim's browser in order to exploit the vulnerability. Applications often contain \"cookie-forcing\" conditions which make this possible, and such a condition in any related domain or subdomain can potentially be used for this purpose. Nonetheless, this limitation somewhat mitigates the impact of the vulnerability. ",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/DeadHeadRussell/ObjectId.js/src/main/javascript/Objectid.js",
                "path": "/DeadHeadRussell/ObjectId.js/src/main/javascript/Objectid.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9EZWFkSGVhZFJ1c3NlbGwvT2JqZWN0SWQuanMvc3JjL21haW4vamF2YXNjcmlwdC9PYmplY3RpZC5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNDQ0Ng0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KRGF0ZTogRnJpLCAwNyBOb3YgMjAxNCAyMToxNToyMiBHTVQNCkxhc3QtTW9kaWZpZWQ6IEZyaSwgMDcgTm92IDIwMTQgMjE6MTU6MjIgR01UDQoNCi8qCioKKiBDb3B5cmlnaHQgKGMpIDIwMTEtMjAxNC0gSnVzdGluIERlYXJpbmcgKHppcHB5MTk4MUBnbWFpbC5jb20pCiogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIChodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocCkKKiBhbmQgR1BMIChodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL2dwbC1saWNlbnNlLnBocCkgdmVyc2lvbiAyIGxpY2Vuc2VzLgoqIFRoaXMgc29mdHdhcmUgaXMgbm90IGRpc3RyaWJ1dGVkIHVuZGVyIHZlcnNpb24gMyBvciBsYXRlciBvZiB0aGUgR1BMLgoqCiogVmVyc2lvbiAxLjAuMgoqCiovCgooZnVuY3Rpb24oKSB7CgogICAgLyoqCiAgICAgKiBKYXZhc2NyaXB0IGNsYXNzIHRoYXQgbWltaWNzIGhvdyBXQ0Ygc2VyaWFsaXplcyBhIG9iamVjdCBvZiB0eXBlIE1vbmdvREIuQnNvbi5PYmplY3RJZAogICAgICogYW5kIGNvbnZlcnRzIGJldHdlZW4gdGhhdCBmb3JtYXQgYW5kIHRoZSBzdGFuZGFyZCAyNCBjaGFyYWN0ZXIgcmVwcmVzZW50YXRpb24uCiAgICAqLwogICAgdmFyIE9iamVjdElkID0gKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgaW5jcmVtZW50ID0gMDsKICAgICAgICB2YXIgcGlkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDMyNzY3KSk7CiAgICAgICAgdmFyIG1hY2hpbmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoMTY3NzcyMTYpKTsKCiAgICAgICAgaWYgKHR5cGVvZiAobG9jYWxTdG9yYWdlKSAhPSAndW5kZWZpbmVkJykgewogICAgICAgICAgICB2YXIgbW9uZ29NYWNoaW5lSWQgPSBwYXJzZUludChsb2NhbFN0b3JhZ2VbJ21vbmdvTWFjaGluZUlkJ10pOwogICAgICAgICAgICBpZiAobW9uZ29NYWNoaW5lSWQgPj0gMCAmJiBtb25nb01hY2hpbmVJZCA8PSAxNjc3NzIxNSkgewogICAgICAgICAgICAgICAgbWFjaGluZSA9IE1hdGguZmxvb3IobG9jYWxTdG9yYWdlWydtb25nb01hY2hpbmVJZCddKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBKdXN0IGFsd2F5cyBzdGljayB0aGUgdmFsdWUgaW4uCiAgICAgICAgICAgIGxvY2FsU3RvcmFnZVsnbW9uZ29NYWNoaW5lSWQnXSA9IG1hY2hpbmU7CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICdtb25nb01hY2hpbmVJZD0nICsgbWFjaGluZSArICc7ZXhwaXJlcz1UdWUsIDE5IEphbiAyMDM4IDA1OjAwOjAwIEdNVCcKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHZhciBjb29raWVMaXN0ID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7ICcpOwogICAgICAgICAgICBmb3IgKHZhciBpIGluIGNvb2tpZUxpc3QpIHsKICAgICAgICAgICAgICAgIHZhciBjb29raWUgPSBjb29raWVMaXN0W2ldLnNwbGl0KCc9Jyk7CiAgICAgICAgICAgICAgICBpZiAoY29va2llWzBdID09ICdtb25nb01hY2hpbmVJZCcgJiYgY29va2llWzFdID49IDAgJiYgY29va2llWzFdIDw9IDE2Nzc3MjE1KSB7CiAgICAgICAgICAgICAgICAgICAgbWFjaGluZSA9IGNvb2tpZVsxXTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSAnbW9uZ29NYWNoaW5lSWQ9JyArIG1hY2hpbmUgKyAnO2V4cGlyZXM9VHVlLCAxOSBKYW4gMjAzOCAwNTowMDowMCBHTVQnOwoKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIE9iaklkKCkgewogICAgICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgT2JqZWN0SWQpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IE9iamVjdElkKGFyZ3VtZW50c1swXSwgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0sIGFyZ3VtZW50c1szXSkudG9TdHJpbmcoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHR5cGVvZiAoYXJndW1lbnRzWzBdKSA9PSAnb2JqZWN0JykgewogICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXAgPSBhcmd1bWVudHNbMF0udGltZXN0YW1wOwogICAgICAgICAgICAgICAgdGhpcy5tYWNoaW5lID0gYXJndW1lbnRzWzBdLm1hY2hpbmU7CiAgICAgICAgICAgICAgICB0aGlzLnBpZCA9IGFyZ3VtZW50c1swXS5waWQ7CiAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudCA9IGFyZ3VtZW50c1swXS5pbmNyZW1lbnQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIChhcmd1bWVudHNbMF0pID09ICdzdHJpbmcnICYmIGFyZ3VtZW50c1swXS5sZW5ndGggPT0gMjQpIHsKICAgICAgICAgICAgICAgIHRoaXMudGltZXN0YW1wID0gTnVtYmVyKCcweCcgKyBhcmd1bWVudHNbMF0uc3Vic3RyKDAsIDgpKSwKICAgICAgICAgICAgICAgIHRoaXMubWFjaGluZSA9IE51bWJlcignMHgnICsgYXJndW1lbnRzWzBdLnN1YnN0cig4LCA2KSksCiAgICAgICAgICAgICAgICB0aGlzLnBpZCA9IE51bWJlcignMHgnICsgYXJndW1lbnRzWzBdLnN1YnN0cigxNCwgNCkpLAogICAgICAgICAgICAgICAgdGhpcy5pbmNyZW1lbnQgPSBOdW1iZXIoJzB4JyArIGFyZ3VtZW50c1swXS5zdWJzdHIoMTgsIDYpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gNCAmJiBhcmd1bWVudHNbMF0gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXAgPSBhcmd1bWVudHNbMF07CiAgICAgICAgICAgICAgICB0aGlzLm1hY2hpbmUgPSBhcmd1bWVudHNbMV07CiAgICAgICAgICAgICAgICB0aGlzLnBpZCA9IGFyZ3VtZW50c1syXTsKICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50ID0gYXJndW1lbnRzWzNdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXAgPSBNYXRoLmZsb29yKG5ldyBEYXRlKCkudmFsdWVPZigpIC8gMTAwMCk7CiAgICAgICAgICAgICAgICB0aGlzLm1hY2hpbmUgPSBtYWNoaW5lOwogICAgICAgICAgICAgICAgdGhpcy5waWQgPSBwaWQ7CiAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudCA9IGluY3JlbWVudCsrOwogICAgICAgICAgICAgICAgaWYgKGluY3JlbWVudCA+IDB4ZmZmZmZmKSB7CiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50ID0gMDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgcmV0dXJuIE9iaklkOwogICAgfSkoKTsKCiAgICBPYmplY3RJZC5wcm90b3R5cGUuZ2V0RGF0ZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gbmV3IERhdGUodGhpcy50aW1lc3RhbXAgKiAxMDAwKTsKICAgIH07CgogICAgT2JqZWN0SWQucHJvdG90eXBlLnRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHN0ck9pZCA9IHRoaXMudG9TdHJpbmcoKTsKICAgICAgICB2YXIgYXJyYXkgPSBbXTsKICAgICAgICB2YXIgaTsKICAgICAgICBmb3IoaSA9IDA7IGkgPCAxMjsgaSsrKSB7CiAgICAgICAgICAgIGFycmF5W2ldID0gcGFyc2VJbnQoc3RyT2lkLnNsaWNlKGkqMiwgaSoyKzIpLCAxNik7CiAgICAgICAgfQogICAgICAgIHJldHVybiBhcnJheTsKICAgIH07CgogICAgLyoqCiAgICAqIFR1cm5zIGEgV0NGIHJlcHJlc2VudGF0aW9uIG9mIGEgQlNPTiBPYmplY3RJZCBpbnRvIGEgMjQgY2hhcmFjdGVyIHN0cmluZyByZXByZXNlbnRhdGlvbi4KICAgICovCiAgICBPYmplY3RJZC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHRpbWVzdGFtcCA9IHRoaXMudGltZXN0YW1wLnRvU3RyaW5nKDE2KTsKICAgICAgICB2YXIgbWFjaGluZSA9IHRoaXMubWFjaGluZS50b1N0cmluZygxNik7CiAgICAgICAgdmFyIHBpZCA9IHRoaXMucGlkLnRvU3RyaW5nKDE2KTsKICAgICAgICB2YXIgaW5jcmVtZW50ID0gdGhpcy5pbmNyZW1lbnQudG9TdHJpbmcoMTYpOwogICAgICAgIHJldHVybiAnMDAwMDAwMDAnLnN1YnN0cigwLCA4IC0gdGltZXN0YW1wLmxlbmd0aCkgKyB0aW1lc3RhbXAgKwogICAgICAgICAgICAgICAnMDAwMDAwJy5zdWJzdHIoMCwgNiAtIG1hY2hpbmUubGVuZ3RoKSArIG1hY2hpbmUgKwogICAgICAgICAgICAgICAnMDAwMCcuc3Vic3RyKDAsIDQgLSBwaWQubGVuZ3RoKSArIHBpZCArCiAgICAgICAgICAgICAgICcwMDAwMDAnLnN1YnN0cigwLCA2IC0gaW5jcmVtZW50Lmxlbmd0aCkgKyBpbmNyZW1lbnQ7CiAgICB9OwoKICAgIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHsKICAgICAgICAgICAgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gT2JqZWN0SWQ7CiAgICAgICAgfQogICAgICAgIGV4cG9ydHMuT2JqZWN0SWQgPSBPYmplY3RJZDsKICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5PYmplY3RJZCA9IE9iamVjdElkOwogICAgfQoKfSkuY2FsbCh0aGlzKTsKCg==",
                "body": "LyoKKgoqIENvcHlyaWdodCAoYykgMjAxMS0yMDE0LSBKdXN0aW4gRGVhcmluZyAoemlwcHkxOTgxQGdtYWlsLmNvbSkKKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwKQoqIGFuZCBHUEwgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvZ3BsLWxpY2Vuc2UucGhwKSB2ZXJzaW9uIDIgbGljZW5zZXMuCiogVGhpcyBzb2Z0d2FyZSBpcyBub3QgZGlzdHJpYnV0ZWQgdW5kZXIgdmVyc2lvbiAzIG9yIGxhdGVyIG9mIHRoZSBHUEwuCioKKiBWZXJzaW9uIDEuMC4yCioKKi8KCihmdW5jdGlvbigpIHsKCiAgICAvKioKICAgICAqIEphdmFzY3JpcHQgY2xhc3MgdGhhdCBtaW1pY3MgaG93IFdDRiBzZXJpYWxpemVzIGEgb2JqZWN0IG9mIHR5cGUgTW9uZ29EQi5Cc29uLk9iamVjdElkCiAgICAgKiBhbmQgY29udmVydHMgYmV0d2VlbiB0aGF0IGZvcm1hdCBhbmQgdGhlIHN0YW5kYXJkIDI0IGNoYXJhY3RlciByZXByZXNlbnRhdGlvbi4KICAgICovCiAgICB2YXIgT2JqZWN0SWQgPSAoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBpbmNyZW1lbnQgPSAwOwogICAgICAgIHZhciBwaWQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoMzI3NjcpKTsKICAgICAgICB2YXIgbWFjaGluZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgxNjc3NzIxNikpOwoKICAgICAgICBpZiAodHlwZW9mIChsb2NhbFN0b3JhZ2UpICE9ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgIHZhciBtb25nb01hY2hpbmVJZCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZVsnbW9uZ29NYWNoaW5lSWQnXSk7CiAgICAgICAgICAgIGlmIChtb25nb01hY2hpbmVJZCA+PSAwICYmIG1vbmdvTWFjaGluZUlkIDw9IDE2Nzc3MjE1KSB7CiAgICAgICAgICAgICAgICBtYWNoaW5lID0gTWF0aC5mbG9vcihsb2NhbFN0b3JhZ2VbJ21vbmdvTWFjaGluZUlkJ10pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIEp1c3QgYWx3YXlzIHN0aWNrIHRoZSB2YWx1ZSBpbi4KICAgICAgICAgICAgbG9jYWxTdG9yYWdlWydtb25nb01hY2hpbmVJZCddID0gbWFjaGluZTsKICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gJ21vbmdvTWFjaGluZUlkPScgKyBtYWNoaW5lICsgJztleHBpcmVzPVR1ZSwgMTkgSmFuIDIwMzggMDU6MDA6MDAgR01UJwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgdmFyIGNvb2tpZUxpc3QgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJyk7CiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gY29va2llTGlzdCkgewogICAgICAgICAgICAgICAgdmFyIGNvb2tpZSA9IGNvb2tpZUxpc3RbaV0uc3BsaXQoJz0nKTsKICAgICAgICAgICAgICAgIGlmIChjb29raWVbMF0gPT0gJ21vbmdvTWFjaGluZUlkJyAmJiBjb29raWVbMV0gPj0gMCAmJiBjb29raWVbMV0gPD0gMTY3NzcyMTUpIHsKICAgICAgICAgICAgICAgICAgICBtYWNoaW5lID0gY29va2llWzFdOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICdtb25nb01hY2hpbmVJZD0nICsgbWFjaGluZSArICc7ZXhwaXJlcz1UdWUsIDE5IEphbiAyMDM4IDA1OjAwOjAwIEdNVCc7CgogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gT2JqSWQoKSB7CiAgICAgICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBPYmplY3RJZCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBuZXcgT2JqZWN0SWQoYXJndW1lbnRzWzBdLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSwgYXJndW1lbnRzWzNdKS50b1N0cmluZygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodHlwZW9mIChhcmd1bWVudHNbMF0pID09ICdvYmplY3QnKSB7CiAgICAgICAgICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IGFyZ3VtZW50c1swXS50aW1lc3RhbXA7CiAgICAgICAgICAgICAgICB0aGlzLm1hY2hpbmUgPSBhcmd1bWVudHNbMF0ubWFjaGluZTsKICAgICAgICAgICAgICAgIHRoaXMucGlkID0gYXJndW1lbnRzWzBdLnBpZDsKICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50ID0gYXJndW1lbnRzWzBdLmluY3JlbWVudDsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgKGFyZ3VtZW50c1swXSkgPT0gJ3N0cmluZycgJiYgYXJndW1lbnRzWzBdLmxlbmd0aCA9PSAyNCkgewogICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXAgPSBOdW1iZXIoJzB4JyArIGFyZ3VtZW50c1swXS5zdWJzdHIoMCwgOCkpLAogICAgICAgICAgICAgICAgdGhpcy5tYWNoaW5lID0gTnVtYmVyKCcweCcgKyBhcmd1bWVudHNbMF0uc3Vic3RyKDgsIDYpKSwKICAgICAgICAgICAgICAgIHRoaXMucGlkID0gTnVtYmVyKCcweCcgKyBhcmd1bWVudHNbMF0uc3Vic3RyKDE0LCA0KSksCiAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudCA9IE51bWJlcignMHgnICsgYXJndW1lbnRzWzBdLnN1YnN0cigxOCwgNikpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PSA0ICYmIGFyZ3VtZW50c1swXSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IGFyZ3VtZW50c1swXTsKICAgICAgICAgICAgICAgIHRoaXMubWFjaGluZSA9IGFyZ3VtZW50c1sxXTsKICAgICAgICAgICAgICAgIHRoaXMucGlkID0gYXJndW1lbnRzWzJdOwogICAgICAgICAgICAgICAgdGhpcy5pbmNyZW1lbnQgPSBhcmd1bWVudHNbM107CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IE1hdGguZmxvb3IobmV3IERhdGUoKS52YWx1ZU9mKCkgLyAxMDAwKTsKICAgICAgICAgICAgICAgIHRoaXMubWFjaGluZSA9IG1hY2hpbmU7CiAgICAgICAgICAgICAgICB0aGlzLnBpZCA9IHBpZDsKICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50ID0gaW5jcmVtZW50Kys7CiAgICAgICAgICAgICAgICBpZiAoaW5jcmVtZW50ID4gMHhmZmZmZmYpIHsKICAgICAgICAgICAgICAgICAgICBpbmNyZW1lbnQgPSAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICByZXR1cm4gT2JqSWQ7CiAgICB9KSgpOwoKICAgIE9iamVjdElkLnByb3RvdHlwZS5nZXREYXRlID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLnRpbWVzdGFtcCAqIDEwMDApOwogICAgfTsKCiAgICBPYmplY3RJZC5wcm90b3R5cGUudG9BcnJheSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgc3RyT2lkID0gdGhpcy50b1N0cmluZygpOwogICAgICAgIHZhciBhcnJheSA9IFtdOwogICAgICAgIHZhciBpOwogICAgICAgIGZvcihpID0gMDsgaSA8IDEyOyBpKyspIHsKICAgICAgICAgICAgYXJyYXlbaV0gPSBwYXJzZUludChzdHJPaWQuc2xpY2UoaSoyLCBpKjIrMiksIDE2KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGFycmF5OwogICAgfTsKCiAgICAvKioKICAgICogVHVybnMgYSBXQ0YgcmVwcmVzZW50YXRpb24gb2YgYSBCU09OIE9iamVjdElkIGludG8gYSAyNCBjaGFyYWN0ZXIgc3RyaW5nIHJlcHJlc2VudGF0aW9uLgogICAgKi8KICAgIE9iamVjdElkLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgdGltZXN0YW1wID0gdGhpcy50aW1lc3RhbXAudG9TdHJpbmcoMTYpOwogICAgICAgIHZhciBtYWNoaW5lID0gdGhpcy5tYWNoaW5lLnRvU3RyaW5nKDE2KTsKICAgICAgICB2YXIgcGlkID0gdGhpcy5waWQudG9TdHJpbmcoMTYpOwogICAgICAgIHZhciBpbmNyZW1lbnQgPSB0aGlzLmluY3JlbWVudC50b1N0cmluZygxNik7CiAgICAgICAgcmV0dXJuICcwMDAwMDAwMCcuc3Vic3RyKDAsIDggLSB0aW1lc3RhbXAubGVuZ3RoKSArIHRpbWVzdGFtcCArCiAgICAgICAgICAgICAgICcwMDAwMDAnLnN1YnN0cigwLCA2IC0gbWFjaGluZS5sZW5ndGgpICsgbWFjaGluZSArCiAgICAgICAgICAgICAgICcwMDAwJy5zdWJzdHIoMCwgNCAtIHBpZC5sZW5ndGgpICsgcGlkICsKICAgICAgICAgICAgICAgJzAwMDAwMCcuc3Vic3RyKDAsIDYgLSBpbmNyZW1lbnQubGVuZ3RoKSArIGluY3JlbWVudDsKICAgIH07CgogICAgaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJykgewogICAgICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykgewogICAgICAgICAgICBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBPYmplY3RJZDsKICAgICAgICB9CiAgICAgICAgZXhwb3J0cy5PYmplY3RJZCA9IE9iamVjdElkOwogICAgfSBlbHNlIHsKICAgICAgICB0aGlzLk9iamVjdElkID0gT2JqZWN0SWQ7CiAgICB9Cgp9KS5jYWxsKHRoaXMpOwoK",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 21:15:22 GMT",
                    "Content-Length": "4446",
                    "Date": "Fri, 07 Nov 2014 21:15:22 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}