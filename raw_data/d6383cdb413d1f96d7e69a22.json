{
    "url": "http://localhost:9999/nsisodiya/x-checkbox/bower_components/platform/platform.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>the 'baseURI' property of a DOM element</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>b.href=document.baseURI,a.head.appendChild(b)</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/nsisodiya/x-checkbox/bower_components/platform/platform.js",
                "path": "/nsisodiya/x-checkbox/bower_components/platform/platform.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9uc2lzb2RpeWEveC1jaGVja2JveC9ib3dlcl9jb21wb25lbnRzL3BsYXRmb3JtL3BsYXRmb3JtLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogMTMxOTgzDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBTdW4sIDA5IE5vdiAyMDE0IDAzOjI1OjEwIEdNVA0KTGFzdC1Nb2RpZmllZDogU3VuLCAwOSBOb3YgMjAxNCAwMzoyNToxMCBHTVQNCg0KLyoqCiAqIEBsaWNlbnNlCiAqIENvcHlyaWdodCAoYykgMjAxNCBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIFRoaXMgY29kZSBtYXkgb25seSBiZSB1c2VkIHVuZGVyIHRoZSBCU0Qgc3R5bGUgbGljZW5zZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQKICogVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQKICogVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9DT05UUklCVVRPUlMudHh0CiAqIENvZGUgZGlzdHJpYnV0ZWQgYnkgR29vZ2xlIGFzIHBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvCiAqIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0CiAqLwovLyBAdmVyc2lvbjogMC40LjAKCndpbmRvdy5QbGF0Zm9ybT13aW5kb3cuUGxhdGZvcm18fHt9LHdpbmRvdy5sb2dGbGFncz13aW5kb3cubG9nRmxhZ3N8fHt9LGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmxhZ3N8fHt9O2xvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpLmZvckVhY2goZnVuY3Rpb24oYSl7YT1hLnNwbGl0KCI9IiksYVswXSYmKGJbYVswXV09YVsxXXx8ITApfSk7dmFyIGM9ZG9jdW1lbnQuY3VycmVudFNjcmlwdHx8ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYyo9InBsYXRmb3JtLmpzIl0nKTtpZihjKWZvcih2YXIgZCxlPWMuYXR0cmlidXRlcyxmPTA7ZjxlLmxlbmd0aDtmKyspZD1lW2ZdLCJzcmMiIT09ZC5uYW1lJiYoYltkLm5hbWVdPWQudmFsdWV8fCEwKTtiLmxvZyYmYi5sb2cuc3BsaXQoIiwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dpbmRvdy5sb2dGbGFnc1thXT0hMH0pLGIuc2hhZG93PWIuc2hhZG93fHxiLnNoYWRvd2RvbXx8Yi5wb2x5ZmlsbCxiLnNoYWRvdz0ibmF0aXZlIj09PWIuc2hhZG93PyExOmIuc2hhZG93fHwhSFRNTEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3QsYi5zaGFkb3cmJmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoInNjcmlwdCIpLmxlbmd0aD4xJiZjb25zb2xlLndhcm4oInBsYXRmb3JtLmpzIGlzIG5vdCB0aGUgZmlyc3Qgc2NyaXB0IG9uIHRoZSBwYWdlLiBTZWUgaHR0cDovL3d3dy5wb2x5bWVyLXByb2plY3Qub3JnL2RvY3Mvc3RhcnQvcGxhdGZvcm0uaHRtbCNzZXR1cCBmb3IgZGV0YWlscy4iKSxiLnJlZ2lzdGVyJiYod2luZG93LkN1c3RvbUVsZW1lbnRzPXdpbmRvdy5DdXN0b21FbGVtZW50c3x8e2ZsYWdzOnt9fSx3aW5kb3cuQ3VzdG9tRWxlbWVudHMuZmxhZ3MucmVnaXN0ZXI9Yi5yZWdpc3RlciksYi5pbXBvcnRzJiYod2luZG93LkhUTUxJbXBvcnRzPXdpbmRvdy5IVE1MSW1wb3J0c3x8e2ZsYWdzOnt9fSx3aW5kb3cuSFRNTEltcG9ydHMuZmxhZ3MuaW1wb3J0cz1iLmltcG9ydHMpLGEuZmxhZ3M9Yn0oUGxhdGZvcm0pLCJ1bmRlZmluZWQiPT10eXBlb2YgV2Vha01hcCYmIWZ1bmN0aW9uKCl7dmFyIGE9T2JqZWN0LmRlZmluZVByb3BlcnR5LGI9RGF0ZS5ub3coKSUxZTksYz1mdW5jdGlvbigpe3RoaXMubmFtZT0iX19zdCIrKDFlOSpNYXRoLnJhbmRvbSgpPj4+MCkrKGIrKyArIl9fIil9O2MucHJvdG90eXBlPXtzZXQ6ZnVuY3Rpb24oYixjKXt2YXIgZD1iW3RoaXMubmFtZV07ZCYmZFswXT09PWI/ZFsxXT1jOmEoYix0aGlzLm5hbWUse3ZhbHVlOltiLGNdLHdyaXRhYmxlOiEwfSl9LGdldDpmdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4oYj1hW3RoaXMubmFtZV0pJiZiWzBdPT09YT9iWzFdOnZvaWQgMH0sImRlbGV0ZSI6ZnVuY3Rpb24oYSl7dmFyIGI9YVt0aGlzLm5hbWVdO2lmKCFiKXJldHVybiExO3ZhciBjPWJbMF09PT1hO3JldHVybiBiWzBdPWJbMV09dm9pZCAwLGN9LGhhczpmdW5jdGlvbihhKXt2YXIgYj1hW3RoaXMubmFtZV07cmV0dXJuIGI/YlswXT09PWE6ITF9fSx3aW5kb3cuV2Vha01hcD1jfSgpLFBsYXRmb3JtLmZsYWdzLnNoYWRvdz8oIWZ1bmN0aW9uKGdsb2JhbCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGRldGVjdE9iamVjdE9ic2VydmUoKXtmdW5jdGlvbiBhKGEpe2I9YX1pZigiZnVuY3Rpb24iIT10eXBlb2YgT2JqZWN0Lm9ic2VydmV8fCJmdW5jdGlvbiIhPXR5cGVvZiBBcnJheS5vYnNlcnZlKXJldHVybiExO3ZhciBiPVtdLGM9e30sZD1bXTtyZXR1cm4gT2JqZWN0Lm9ic2VydmUoYyxhKSxBcnJheS5vYnNlcnZlKGQsYSksYy5pZD0xLGMuaWQ9MixkZWxldGUgYy5pZCxkLnB1c2goMSwyKSxkLmxlbmd0aD0wLE9iamVjdC5kZWxpdmVyQ2hhbmdlUmVjb3JkcyhhKSw1IT09Yi5sZW5ndGg/ITE6ImFkZCIhPWJbMF0udHlwZXx8InVwZGF0ZSIhPWJbMV0udHlwZXx8ImRlbGV0ZSIhPWJbMl0udHlwZXx8InNwbGljZSIhPWJbM10udHlwZXx8InNwbGljZSIhPWJbNF0udHlwZT8hMTooT2JqZWN0LnVub2JzZXJ2ZShjLGEpLEFycmF5LnVub2JzZXJ2ZShkLGEpLCEwKX1mdW5jdGlvbiBkZXRlY3RFdmFsKCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjaHJvbWUmJmNocm9tZS5hcHAmJmNocm9tZS5hcHAucnVudGltZSlyZXR1cm4hMTtpZihuYXZpZ2F0b3IuZ2V0RGV2aWNlU3RvcmFnZSlyZXR1cm4hMTt0cnl7dmFyIGE9bmV3IEZ1bmN0aW9uKCIiLCJyZXR1cm4gdHJ1ZTsiKTtyZXR1cm4gYSgpfWNhdGNoKGIpe3JldHVybiExfX1mdW5jdGlvbiBpc0luZGV4KGEpe3JldHVybithPT09YT4+PjB9ZnVuY3Rpb24gdG9OdW1iZXIoYSl7cmV0dXJuK2F9ZnVuY3Rpb24gaXNPYmplY3QoYSl7cmV0dXJuIGE9PT1PYmplY3QoYSl9ZnVuY3Rpb24gYXJlU2FtZVZhbHVlKGEsYil7cmV0dXJuIGE9PT1iPzAhPT1hfHwxL2E9PT0xL2I6bnVtYmVySXNOYU4oYSkmJm51bWJlcklzTmFOKGIpPyEwOmEhPT1hJiZiIT09Yn1mdW5jdGlvbiBnZXRQYXRoQ2hhclR5cGUoYSl7aWYodm9pZCAwPT09YSlyZXR1cm4iZW9mIjt2YXIgYj1hLmNoYXJDb2RlQXQoMCk7c3dpdGNoKGIpe2Nhc2UgOTE6Y2FzZSA5MzpjYXNlIDQ2OmNhc2UgMzQ6Y2FzZSAzOTpjYXNlIDQ4OnJldHVybiBhO2Nhc2UgOTU6Y2FzZSAzNjpyZXR1cm4iaWRlbnQiO2Nhc2UgMzI6Y2FzZSA5OmNhc2UgMTA6Y2FzZSAxMzpjYXNlIDE2MDpjYXNlIDY1Mjc5OmNhc2UgODIzMjpjYXNlIDgyMzM6cmV0dXJuIndzIn1yZXR1cm4gYj49OTcmJjEyMj49Ynx8Yj49NjUmJjkwPj1iPyJpZGVudCI6Yj49NDkmJjU3Pj1iPyJudW1iZXIiOiJlbHNlIn1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIHBhcnNlUGF0aChhKXtmdW5jdGlvbiBiKCl7aWYoIShrPj1hLmxlbmd0aCkpe3ZhciBiPWFbaysxXTtyZXR1cm4iaW5TaW5nbGVRdW90ZSI9PWwmJiInIj09Ynx8ImluRG91YmxlUXVvdGUiPT1sJiYnIic9PWI/KGsrKyxkPWIsbS5hcHBlbmQoKSwhMCk6dm9pZCAwfX1mb3IodmFyIGMsZCxlLGYsZyxoLGksaj1bXSxrPS0xLGw9ImJlZm9yZVBhdGgiLG09e3B1c2g6ZnVuY3Rpb24oKXt2b2lkIDAhPT1lJiYoai5wdXNoKGUpLGU9dm9pZCAwKX0sYXBwZW5kOmZ1bmN0aW9uKCl7dm9pZCAwPT09ZT9lPWQ6ZSs9ZH19O2w7KWlmKGsrKyxjPWFba10sIlxcIiE9Y3x8IWIobCkpe2lmKGY9Z2V0UGF0aENoYXJUeXBlKGMpLGk9cGF0aFN0YXRlTWFjaGluZVtsXSxnPWlbZl18fGlbImVsc2UiXXx8ImVycm9yIiwiZXJyb3IiPT1nKXJldHVybjtpZihsPWdbMF0saD1tW2dbMV1dfHxub29wLGQ9dm9pZCAwPT09Z1syXT9jOmdbMl0saCgpLCJhZnRlclBhdGgiPT09bClyZXR1cm4gan19ZnVuY3Rpb24gaXNJZGVudChhKXtyZXR1cm4gaWRlbnRSZWdFeHAudGVzdChhKX1mdW5jdGlvbiBQYXRoKGEsYil7aWYoYiE9PWNvbnN0cnVjdG9ySXNQcml2YXRlKXRocm93IEVycm9yKCJVc2UgUGF0aC5nZXQgdG8gcmV0cmlldmUgcGF0aCBvYmplY3RzIik7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspdGhpcy5wdXNoKFN0cmluZyhhW2NdKSk7aGFzRXZhbCYmdGhpcy5sZW5ndGgmJih0aGlzLmdldFZhbHVlRnJvbT10aGlzLmNvbXBpbGVkR2V0VmFsdWVGcm9tRm4oKSl9ZnVuY3Rpb24gZ2V0UGF0aChhKXtpZihhIGluc3RhbmNlb2YgUGF0aClyZXR1cm4gYTtpZigobnVsbD09YXx8MD09YS5sZW5ndGgpJiYoYT0iIiksInN0cmluZyIhPXR5cGVvZiBhKXtpZihpc0luZGV4KGEubGVuZ3RoKSlyZXR1cm4gbmV3IFBhdGgoYSxjb25zdHJ1Y3RvcklzUHJpdmF0ZSk7YT1TdHJpbmcoYSl9dmFyIGI9cGF0aENhY2hlW2FdO2lmKGIpcmV0dXJuIGI7dmFyIGM9cGFyc2VQYXRoKGEpO2lmKCFjKXJldHVybiBpbnZhbGlkUGF0aDt2YXIgYj1uZXcgUGF0aChjLGNvbnN0cnVjdG9ySXNQcml2YXRlKTtyZXR1cm4gcGF0aENhY2hlW2FdPWIsYn1mdW5jdGlvbiBmb3JtYXRBY2Nlc3NvcihhKXtyZXR1cm4gaXNJbmRleChhKT8iWyIrYSsiXSI6J1siJythLnJlcGxhY2UoLyIvZywnXFwiJykrJyJdJ31mdW5jdGlvbiBkaXJ0eUNoZWNrKGEpe2Zvcih2YXIgYj0wO01BWF9ESVJUWV9DSEVDS19DWUNMRVM+YiYmYS5jaGVja18oKTspYisrO3JldHVybiB0ZXN0aW5nRXhwb3NlQ3ljbGVDb3VudCYmKGdsb2JhbC5kaXJ0eUNoZWNrQ3ljbGVDb3VudD1iKSxiPjB9ZnVuY3Rpb24gb2JqZWN0SXNFbXB0eShhKXtmb3IodmFyIGIgaW4gYSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBkaWZmSXNFbXB0eShhKXtyZXR1cm4gb2JqZWN0SXNFbXB0eShhLmFkZGVkKSYmb2JqZWN0SXNFbXB0eShhLnJlbW92ZWQpJiZvYmplY3RJc0VtcHR5KGEuY2hhbmdlZCl9ZnVuY3Rpb24gZGlmZk9iamVjdEZyb21PbGRPYmplY3QoYSxiKXt2YXIgYz17fSxkPXt9LGU9e307Zm9yKHZhciBmIGluIGIpe3ZhciBnPWFbZl07KHZvaWQgMD09PWd8fGchPT1iW2ZdKSYmKGYgaW4gYT9nIT09YltmXSYmKGVbZl09Zyk6ZFtmXT12b2lkIDApfWZvcih2YXIgZiBpbiBhKWYgaW4gYnx8KGNbZl09YVtmXSk7cmV0dXJuIEFycmF5LmlzQXJyYXkoYSkmJmEubGVuZ3RoIT09Yi5sZW5ndGgmJihlLmxlbmd0aD1hLmxlbmd0aCkse2FkZGVkOmMscmVtb3ZlZDpkLGNoYW5nZWQ6ZX19ZnVuY3Rpb24gcnVuRU9NVGFza3MoKXtpZighZW9tVGFza3MubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgYT0wO2E8ZW9tVGFza3MubGVuZ3RoO2ErKyllb21UYXNrc1thXSgpO3JldHVybiBlb21UYXNrcy5sZW5ndGg9MCwhMH1mdW5jdGlvbiBuZXdPYnNlcnZlZE9iamVjdCgpe2Z1bmN0aW9uIGEoYSl7YiYmYi5zdGF0ZV89PT1PUEVORUQmJiFkJiZiLmNoZWNrXyhhKX12YXIgYixjLGQ9ITEsZT0hMDtyZXR1cm57b3BlbjpmdW5jdGlvbihjKXtpZihiKXRocm93IEVycm9yKCJPYnNlcnZlZE9iamVjdCBpbiB1c2UiKTtlfHxPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMoYSksYj1jLGU9ITF9LG9ic2VydmU6ZnVuY3Rpb24oYixkKXtjPWIsZD9BcnJheS5vYnNlcnZlKGMsYSk6T2JqZWN0Lm9ic2VydmUoYyxhKX0sZGVsaXZlcjpmdW5jdGlvbihiKXtkPWIsT2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzKGEpLGQ9ITF9LGNsb3NlOmZ1bmN0aW9uKCl7Yj12b2lkIDAsT2JqZWN0LnVub2JzZXJ2ZShjLGEpLG9ic2VydmVkT2JqZWN0Q2FjaGUucHVzaCh0aGlzKX19fWZ1bmN0aW9uIGdldE9ic2VydmVkT2JqZWN0KGEsYixjKXt2YXIgZD1vYnNlcnZlZE9iamVjdENhY2hlLnBvcCgpfHxuZXdPYnNlcnZlZE9iamVjdCgpO3JldHVybiBkLm9wZW4oYSksZC5vYnNlcnZlKGIsYyksZH1mdW5jdGlvbiBuZXdPYnNlcnZlZFNldCgpe2Z1bmN0aW9uIGEoYixmKXtiJiYoYj09PWQmJihlW2ZdPSEwKSxoLmluZGV4T2YoYik8MCYmKGgucHVzaChiKSxPYmplY3Qub2JzZXJ2ZShiLGMpKSxhKE9iamVjdC5nZXRQcm90b3R5cGVPZihiKSxmKSl9ZnVuY3Rpb24gYihhKXtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtpZihjLm9iamVjdCE9PWR8fGVbYy5uYW1lXXx8InNldFByb3RvdHlwZSI9PT1jLnR5cGUpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gYyhjKXtpZighYihjKSl7Zm9yKHZhciBkLGU9MDtlPGcubGVuZ3RoO2UrKylkPWdbZV0sZC5zdGF0ZV89PU9QRU5FRCYmZC5pdGVyYXRlT2JqZWN0c18oYSk7Zm9yKHZhciBlPTA7ZTxnLmxlbmd0aDtlKyspZD1nW2VdLGQuc3RhdGVfPT1PUEVORUQmJmQuY2hlY2tfKCl9fXZhciBkLGUsZj0wLGc9W10saD1bXSxpPXtvYmplY3Q6dm9pZCAwLG9iamVjdHM6aCxvcGVuOmZ1bmN0aW9uKGIsYyl7ZHx8KGQ9YyxlPXt9KSxnLnB1c2goYiksZisrLGIuaXRlcmF0ZU9iamVjdHNfKGEpfSxjbG9zZTpmdW5jdGlvbigpe2lmKGYtLSwhKGY+MCkpe2Zvcih2YXIgYT0wO2E8aC5sZW5ndGg7YSsrKU9iamVjdC51bm9ic2VydmUoaFthXSxjKSxPYnNlcnZlci51bm9ic2VydmVkQ291bnQrKztnLmxlbmd0aD0wLGgubGVuZ3RoPTAsZD12b2lkIDAsZT12b2lkIDAsb2JzZXJ2ZWRTZXRDYWNoZS5wdXNoKHRoaXMpfX19O3JldHVybiBpfWZ1bmN0aW9uIGdldE9ic2VydmVkU2V0KGEsYil7cmV0dXJuIGxhc3RPYnNlcnZlZFNldCYmbGFzdE9ic2VydmVkU2V0Lm9iamVjdD09PWJ8fChsYXN0T2JzZXJ2ZWRTZXQ9b2JzZXJ2ZWRTZXRDYWNoZS5wb3AoKXx8bmV3T2JzZXJ2ZWRTZXQoKSxsYXN0T2JzZXJ2ZWRTZXQub2JqZWN0PWIpLGxhc3RPYnNlcnZlZFNldC5vcGVuKGEsYiksbGFzdE9ic2VydmVkU2V0fWZ1bmN0aW9uIE9ic2VydmVyKCl7dGhpcy5zdGF0ZV89VU5PUEVORUQsdGhpcy5jYWxsYmFja189dm9pZCAwLHRoaXMudGFyZ2V0Xz12b2lkIDAsdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwLHRoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmlkXz1uZXh0T2JzZXJ2ZXJJZCsrfWZ1bmN0aW9uIGFkZFRvQWxsKGEpe09ic2VydmVyLl9hbGxPYnNlcnZlcnNDb3VudCsrLGNvbGxlY3RPYnNlcnZlcnMmJmFsbE9ic2VydmVycy5wdXNoKGEpfWZ1bmN0aW9uIHJlbW92ZUZyb21BbGwoKXtPYnNlcnZlci5fYWxsT2JzZXJ2ZXJzQ291bnQtLX1mdW5jdGlvbiBPYmplY3RPYnNlcnZlcihhKXtPYnNlcnZlci5jYWxsKHRoaXMpLHRoaXMudmFsdWVfPWEsdGhpcy5vbGRPYmplY3RfPXZvaWQgMH1mdW5jdGlvbiBBcnJheU9ic2VydmVyKGEpe2lmKCFBcnJheS5pc0FycmF5KGEpKXRocm93IEVycm9yKCJQcm92aWRlZCBvYmplY3QgaXMgbm90IGFuIEFycmF5Iik7T2JqZWN0T2JzZXJ2ZXIuY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIFBhdGhPYnNlcnZlcihhLGIpe09ic2VydmVyLmNhbGwodGhpcyksdGhpcy5vYmplY3RfPWEsdGhpcy5wYXRoXz1nZXRQYXRoKGIpLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMH1mdW5jdGlvbiBDb21wb3VuZE9ic2VydmVyKGEpe09ic2VydmVyLmNhbGwodGhpcyksdGhpcy5yZXBvcnRDaGFuZ2VzT25PcGVuXz1hLHRoaXMudmFsdWVfPVtdLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCx0aGlzLm9ic2VydmVkXz1bXX1mdW5jdGlvbiBpZGVudEZuKGEpe3JldHVybiBhfWZ1bmN0aW9uIE9ic2VydmVyVHJhbnNmb3JtKGEsYixjLGQpe3RoaXMuY2FsbGJhY2tfPXZvaWQgMCx0aGlzLnRhcmdldF89dm9pZCAwLHRoaXMudmFsdWVfPXZvaWQgMCx0aGlzLm9ic2VydmFibGVfPWEsdGhpcy5nZXRWYWx1ZUZuXz1ifHxpZGVudEZuLHRoaXMuc2V0VmFsdWVGbl89Y3x8aWRlbnRGbix0aGlzLmRvbnRQYXNzVGhyb3VnaFNldF89ZH1mdW5jdGlvbiBkaWZmT2JqZWN0RnJvbUNoYW5nZVJlY29yZHMoYSxiLGMpe2Zvcih2YXIgZD17fSxlPXt9LGY9MDtmPGIubGVuZ3RoO2YrKyl7dmFyIGc9YltmXTtleHBlY3RlZFJlY29yZFR5cGVzW2cudHlwZV0/KGcubmFtZSBpbiBjfHwoY1tnLm5hbWVdPWcub2xkVmFsdWUpLCJ1cGRhdGUiIT1nLnR5cGUmJigiYWRkIiE9Zy50eXBlP2cubmFtZSBpbiBkPyhkZWxldGUgZFtnLm5hbWVdLGRlbGV0ZSBjW2cubmFtZV0pOmVbZy5uYW1lXT0hMDpnLm5hbWUgaW4gZT9kZWxldGUgZVtnLm5hbWVdOmRbZy5uYW1lXT0hMCkpOihjb25zb2xlLmVycm9yKCJVbmtub3duIGNoYW5nZVJlY29yZCB0eXBlOiAiK2cudHlwZSksY29uc29sZS5lcnJvcihnKSl9Zm9yKHZhciBoIGluIGQpZFtoXT1hW2hdO2Zvcih2YXIgaCBpbiBlKWVbaF09dm9pZCAwO3ZhciBpPXt9O2Zvcih2YXIgaCBpbiBjKWlmKCEoaCBpbiBkfHxoIGluIGUpKXt2YXIgaj1hW2hdO2NbaF0hPT1qJiYoaVtoXT1qKX1yZXR1cm57YWRkZWQ6ZCxyZW1vdmVkOmUsY2hhbmdlZDppfX1mdW5jdGlvbiBuZXdTcGxpY2UoYSxiLGMpe3JldHVybntpbmRleDphLHJlbW92ZWQ6YixhZGRlZENvdW50OmN9fWZ1bmN0aW9uIEFycmF5U3BsaWNlKCl7fWZ1bmN0aW9uIGNhbGNTcGxpY2VzKGEsYixjLGQsZSxmKXtyZXR1cm4gYXJyYXlTcGxpY2UuY2FsY1NwbGljZXMoYSxiLGMsZCxlLGYpfWZ1bmN0aW9uIGludGVyc2VjdChhLGIsYyxkKXtyZXR1cm4gYz5ifHxhPmQ/LTE6Yj09Y3x8ZD09YT8wOmM+YT9kPmI/Yi1jOmQtYzpiPmQ/ZC1hOmItYX1mdW5jdGlvbiBtZXJnZVNwbGljZShhLGIsYyxkKXtmb3IodmFyIGU9bmV3U3BsaWNlKGIsYyxkKSxmPSExLGc9MCxoPTA7aDxhLmxlbmd0aDtoKyspe3ZhciBpPWFbaF07aWYoaS5pbmRleCs9ZywhZil7dmFyIGo9aW50ZXJzZWN0KGUuaW5kZXgsZS5pbmRleCtlLnJlbW92ZWQubGVuZ3RoLGkuaW5kZXgsaS5pbmRleCtpLmFkZGVkQ291bnQpO2lmKGo+PTApe2Euc3BsaWNlKGgsMSksaC0tLGctPWkuYWRkZWRDb3VudC1pLnJlbW92ZWQubGVuZ3RoLGUuYWRkZWRDb3VudCs9aS5hZGRlZENvdW50LWo7dmFyIGs9ZS5yZW1vdmVkLmxlbmd0aCtpLnJlbW92ZWQubGVuZ3RoLWo7aWYoZS5hZGRlZENvdW50fHxrKXt2YXIgYz1pLnJlbW92ZWQ7aWYoZS5pbmRleDxpLmluZGV4KXt2YXIgbD1lLnJlbW92ZWQuc2xpY2UoMCxpLmluZGV4LWUuaW5kZXgpO0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGwsYyksYz1sfWlmKGUuaW5kZXgrZS5yZW1vdmVkLmxlbmd0aD5pLmluZGV4K2kuYWRkZWRDb3VudCl7dmFyIG09ZS5yZW1vdmVkLnNsaWNlKGkuaW5kZXgraS5hZGRlZENvdW50LWUuaW5kZXgpO0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGMsbSl9ZS5yZW1vdmVkPWMsaS5pbmRleDxlLmluZGV4JiYoZS5pbmRleD1pLmluZGV4KX1lbHNlIGY9ITB9ZWxzZSBpZihlLmluZGV4PGkuaW5kZXgpe2Y9ITAsYS5zcGxpY2UoaCwwLGUpLGgrKzt2YXIgbj1lLmFkZGVkQ291bnQtZS5yZW1vdmVkLmxlbmd0aDtpLmluZGV4Kz1uLGcrPW59fX1mfHxhLnB1c2goZSl9ZnVuY3Rpb24gY3JlYXRlSW5pdGlhbFNwbGljZXMoYSxiKXtmb3IodmFyIGM9W10sZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO3N3aXRjaChlLnR5cGUpe2Nhc2Uic3BsaWNlIjptZXJnZVNwbGljZShjLGUuaW5kZXgsZS5yZW1vdmVkLnNsaWNlKCksZS5hZGRlZENvdW50KTticmVhaztjYXNlImFkZCI6Y2FzZSJ1cGRhdGUiOmNhc2UiZGVsZXRlIjppZighaXNJbmRleChlLm5hbWUpKWNvbnRpbnVlO3ZhciBmPXRvTnVtYmVyKGUubmFtZSk7aWYoMD5mKWNvbnRpbnVlO21lcmdlU3BsaWNlKGMsZixbZS5vbGRWYWx1ZV0sMSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCJVbmV4cGVjdGVkIHJlY29yZCB0eXBlOiAiK0pTT04uc3RyaW5naWZ5KGUpKX19cmV0dXJuIGN9ZnVuY3Rpb24gcHJvamVjdEFycmF5U3BsaWNlcyhhLGIpe3ZhciBjPVtdO3JldHVybiBjcmVhdGVJbml0aWFsU3BsaWNlcyhhLGIpLmZvckVhY2goZnVuY3Rpb24oYil7cmV0dXJuIDE9PWIuYWRkZWRDb3VudCYmMT09Yi5yZW1vdmVkLmxlbmd0aD92b2lkKGIucmVtb3ZlZFswXSE9PWFbYi5pbmRleF0mJmMucHVzaChiKSk6dm9pZChjPWMuY29uY2F0KGNhbGNTcGxpY2VzKGEsYi5pbmRleCxiLmluZGV4K2IuYWRkZWRDb3VudCxiLnJlbW92ZWQsMCxiLnJlbW92ZWQubGVuZ3RoKSkpfSksY312YXIgdGVzdGluZ0V4cG9zZUN5Y2xlQ291bnQ9Z2xvYmFsLnRlc3RpbmdFeHBvc2VDeWNsZUNvdW50LGhhc09ic2VydmU9ZGV0ZWN0T2JqZWN0T2JzZXJ2ZSgpLGhhc0V2YWw9ZGV0ZWN0RXZhbCgpLG51bWJlcklzTmFOPWdsb2JhbC5OdW1iZXIuaXNOYU58fGZ1bmN0aW9uKGEpe3JldHVybiJudW1iZXIiPT10eXBlb2YgYSYmZ2xvYmFsLmlzTmFOKGEpfSxjcmVhdGVPYmplY3Q9Il9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKGEpe3JldHVybiBhfTpmdW5jdGlvbihhKXt2YXIgYj1hLl9fcHJvdG9fXztpZighYilyZXR1cm4gYTt2YXIgYz1PYmplY3QuY3JlYXRlKGIpO3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShjLGIsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLGIpKX0pLGN9LGlkZW50U3RhcnQ9IlskX2EtekEtWl0iLGlkZW50UGFydD0iWyRfYS16QS1aMC05XSIsaWRlbnRSZWdFeHA9bmV3IFJlZ0V4cCgiXiIraWRlbnRTdGFydCsiKyIraWRlbnRQYXJ0KyIqJCIpLHBhdGhTdGF0ZU1hY2hpbmU9e2JlZm9yZVBhdGg6e3dzOlsiYmVmb3JlUGF0aCJdLGlkZW50OlsiaW5JZGVudCIsImFwcGVuZCJdLCJbIjpbImJlZm9yZUVsZW1lbnQiXSxlb2Y6WyJhZnRlclBhdGgiXX0saW5QYXRoOnt3czpbImluUGF0aCJdLCIuIjpbImJlZm9yZUlkZW50Il0sIlsiOlsiYmVmb3JlRWxlbWVudCJdLGVvZjpbImFmdGVyUGF0aCJdfSxiZWZvcmVJZGVudDp7d3M6WyJiZWZvcmVJZGVudCJdLGlkZW50OlsiaW5JZGVudCIsImFwcGVuZCJdfSxpbklkZW50OntpZGVudDpbImluSWRlbnQiLCJhcHBlbmQiXSwwOlsiaW5JZGVudCIsImFwcGVuZCJdLG51bWJlcjpbImluSWRlbnQiLCJhcHBlbmQiXSx3czpbImluUGF0aCIsInB1c2giXSwiLiI6WyJiZWZvcmVJZGVudCIsInB1c2giXSwiWyI6WyJiZWZvcmVFbGVtZW50IiwicHVzaCJdLGVvZjpbImFmdGVyUGF0aCIsInB1c2giXX0sYmVmb3JlRWxlbWVudDp7d3M6WyJiZWZvcmVFbGVtZW50Il0sMDpbImFmdGVyWmVybyIsImFwcGVuZCJdLG51bWJlcjpbImluSW5kZXgiLCJhcHBlbmQiXSwiJyI6WyJpblNpbmdsZVF1b3RlIiwiYXBwZW5kIiwiIl0sJyInOlsiaW5Eb3VibGVRdW90ZSIsImFwcGVuZCIsIiJdfSxhZnRlclplcm86e3dzOlsiYWZ0ZXJFbGVtZW50IiwicHVzaCJdLCJdIjpbImluUGF0aCIsInB1c2giXX0saW5JbmRleDp7MDpbImluSW5kZXgiLCJhcHBlbmQiXSxudW1iZXI6WyJpbkluZGV4IiwiYXBwZW5kIl0sd3M6WyJhZnRlckVsZW1lbnQiXSwiXSI6WyJpblBhdGgiLCJwdXNoIl19LGluU2luZ2xlUXVvdGU6eyInIjpbImFmdGVyRWxlbWVudCJdLGVvZjpbImVycm9yIl0sImVsc2UiOlsiaW5TaW5nbGVRdW90ZSIsImFwcGVuZCJdfSxpbkRvdWJsZVF1b3RlOnsnIic6WyJhZnRlckVsZW1lbnQiXSxlb2Y6WyJlcnJvciJdLCJlbHNlIjpbImluRG91YmxlUXVvdGUiLCJhcHBlbmQiXX0sYWZ0ZXJFbGVtZW50Ont3czpbImFmdGVyRWxlbWVudCJdLCJdIjpbImluUGF0aCIsInB1c2giXX19LGNvbnN0cnVjdG9ySXNQcml2YXRlPXt9LHBhdGhDYWNoZT17fTtQYXRoLmdldD1nZXRQYXRoLFBhdGgucHJvdG90eXBlPWNyZWF0ZU9iamVjdCh7X19wcm90b19fOltdLHZhbGlkOiEwLHRvU3RyaW5nOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPSIiLGI9MDtiPHRoaXMubGVuZ3RoO2IrKyl7dmFyIGM9dGhpc1tiXTthKz1pc0lkZW50KGMpP2I/Ii4iK2M6Yzpmb3JtYXRBY2Nlc3NvcihjKX1yZXR1cm4gYX0sZ2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8dGhpcy5sZW5ndGg7YisrKXtpZihudWxsPT1hKXJldHVybjthPWFbdGhpc1tiXV19cmV0dXJuIGF9LGl0ZXJhdGVPYmplY3RzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7Yzx0aGlzLmxlbmd0aDtjKyspe2lmKGMmJihhPWFbdGhpc1tjLTFdXSksIWlzT2JqZWN0KGEpKXJldHVybjtiKGEsdGhpc1swXSl9fSxjb21waWxlZEdldFZhbHVlRnJvbUZuOmZ1bmN0aW9uKCl7dmFyIGE9IiIsYj0ib2JqIjthKz0iaWYgKG9iaiAhPSBudWxsIjtmb3IodmFyIGMsZD0wO2Q8dGhpcy5sZW5ndGgtMTtkKyspYz10aGlzW2RdLGIrPWlzSWRlbnQoYyk/Ii4iK2M6Zm9ybWF0QWNjZXNzb3IoYyksYSs9IiAmJlxuICAgICAiK2IrIiAhPSBudWxsIjthKz0iKVxuIjt2YXIgYz10aGlzW2RdO3JldHVybiBiKz1pc0lkZW50KGMpPyIuIitjOmZvcm1hdEFjY2Vzc29yKGMpLGErPSIgIHJldHVybiAiK2IrIjtcbmVsc2VcbiAgcmV0dXJuIHVuZGVmaW5lZDsiLG5ldyBGdW5jdGlvbigib2JqIixhKX0sc2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEsYil7aWYoIXRoaXMubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgYz0wO2M8dGhpcy5sZW5ndGgtMTtjKyspe2lmKCFpc09iamVjdChhKSlyZXR1cm4hMTthPWFbdGhpc1tjXV19cmV0dXJuIGlzT2JqZWN0KGEpPyhhW3RoaXNbY11dPWIsITApOiExfX0pO3ZhciBpbnZhbGlkUGF0aD1uZXcgUGF0aCgiIixjb25zdHJ1Y3RvcklzUHJpdmF0ZSk7aW52YWxpZFBhdGgudmFsaWQ9ITEsaW52YWxpZFBhdGguZ2V0VmFsdWVGcm9tPWludmFsaWRQYXRoLnNldFZhbHVlRnJvbT1mdW5jdGlvbigpe307dmFyIE1BWF9ESVJUWV9DSEVDS19DWUNMRVM9MWUzLGVvbVRhc2tzPVtdLHJ1bkVPTT1oYXNPYnNlcnZlP2Z1bmN0aW9uKCl7dmFyIGE9e3BpbmdQb25nOiEwfSxiPSExO3JldHVybiBPYmplY3Qub2JzZXJ2ZShhLGZ1bmN0aW9uKCl7cnVuRU9NVGFza3MoKSxiPSExfSksZnVuY3Rpb24oYyl7ZW9tVGFza3MucHVzaChjKSxifHwoYj0hMCxhLnBpbmdQb25nPSFhLnBpbmdQb25nKX19KCk6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oYSl7ZW9tVGFza3MucHVzaChhKX19KCksb2JzZXJ2ZWRPYmplY3RDYWNoZT1bXSxvYnNlcnZlZFNldENhY2hlPVtdLGxhc3RPYnNlcnZlZFNldCxVTk9QRU5FRD0wLE9QRU5FRD0xLENMT1NFRD0yLFJFU0VUVElORz0zLG5leHRPYnNlcnZlcklkPTE7T2JzZXJ2ZXIucHJvdG90eXBlPXtvcGVuOmZ1bmN0aW9uKGEsYil7aWYodGhpcy5zdGF0ZV8hPVVOT1BFTkVEKXRocm93IEVycm9yKCJPYnNlcnZlciBoYXMgYWxyZWFkeSBiZWVuIG9wZW5lZC4iKTtyZXR1cm4gYWRkVG9BbGwodGhpcyksdGhpcy5jYWxsYmFja189YSx0aGlzLnRhcmdldF89Yix0aGlzLmNvbm5lY3RfKCksdGhpcy5zdGF0ZV89T1BFTkVELHRoaXMudmFsdWVffSxjbG9zZTpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1PUEVORUQmJihyZW1vdmVGcm9tQWxsKHRoaXMpLHRoaXMuZGlzY29ubmVjdF8oKSx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5jYWxsYmFja189dm9pZCAwLHRoaXMudGFyZ2V0Xz12b2lkIDAsdGhpcy5zdGF0ZV89Q0xPU0VEKX0sZGVsaXZlcjpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1PUEVORUQmJmRpcnR5Q2hlY2sodGhpcyl9LHJlcG9ydF86ZnVuY3Rpb24oYSl7dHJ5e3RoaXMuY2FsbGJhY2tfLmFwcGx5KHRoaXMudGFyZ2V0XyxhKX1jYXRjaChiKXtPYnNlcnZlci5fZXJyb3JUaHJvd25EdXJpbmdDYWxsYmFjaz0hMCxjb25zb2xlLmVycm9yKCJFeGNlcHRpb24gY2F1Z2h0IGR1cmluZyBvYnNlcnZlciBjYWxsYmFjazogIisoYi5zdGFja3x8YikpfX0sZGlzY2FyZENoYW5nZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGVja18odm9pZCAwLCEwKSx0aGlzLnZhbHVlX319O3ZhciBjb2xsZWN0T2JzZXJ2ZXJzPSFoYXNPYnNlcnZlLGFsbE9ic2VydmVycztPYnNlcnZlci5fYWxsT2JzZXJ2ZXJzQ291bnQ9MCxjb2xsZWN0T2JzZXJ2ZXJzJiYoYWxsT2JzZXJ2ZXJzPVtdKTt2YXIgcnVubmluZ01pY3JvdGFza0NoZWNrcG9pbnQ9ITEsaGFzRGVidWdGb3JjZUZ1bGxEZWxpdmVyeT1oYXNPYnNlcnZlJiZoYXNFdmFsJiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gZXZhbCgiJVJ1bk1pY3JvdGFza3MoKSIpLCEwfWNhdGNoKGV4KXtyZXR1cm4hMX19KCk7Z2xvYmFsLlBsYXRmb3JtPWdsb2JhbC5QbGF0Zm9ybXx8e30sZ2xvYmFsLlBsYXRmb3JtLnBlcmZvcm1NaWNyb3Rhc2tDaGVja3BvaW50PWZ1bmN0aW9uKCl7aWYoIXJ1bm5pbmdNaWNyb3Rhc2tDaGVja3BvaW50KXtpZihoYXNEZWJ1Z0ZvcmNlRnVsbERlbGl2ZXJ5KXJldHVybiB2b2lkIGV2YWwoIiVSdW5NaWNyb3Rhc2tzKCkiKTtpZihjb2xsZWN0T2JzZXJ2ZXJzKXtydW5uaW5nTWljcm90YXNrQ2hlY2twb2ludD0hMDt2YXIgY3ljbGVzPTAsYW55Q2hhbmdlZCx0b0NoZWNrO2Rve2N5Y2xlcysrLHRvQ2hlY2s9YWxsT2JzZXJ2ZXJzLGFsbE9ic2VydmVycz1bXSxhbnlDaGFuZ2VkPSExO2Zvcih2YXIgaT0wO2k8dG9DaGVjay5sZW5ndGg7aSsrKXt2YXIgb2JzZXJ2ZXI9dG9DaGVja1tpXTtvYnNlcnZlci5zdGF0ZV89PU9QRU5FRCYmKG9ic2VydmVyLmNoZWNrXygpJiYoYW55Q2hhbmdlZD0hMCksYWxsT2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpKX1ydW5FT01UYXNrcygpJiYoYW55Q2hhbmdlZD0hMCl9d2hpbGUoTUFYX0RJUlRZX0NIRUNLX0NZQ0xFUz5jeWNsZXMmJmFueUNoYW5nZWQpO3Rlc3RpbmdFeHBvc2VDeWNsZUNvdW50JiYoZ2xvYmFsLmRpcnR5Q2hlY2tDeWNsZUNvdW50PWN5Y2xlcykscnVubmluZ01pY3JvdGFza0NoZWNrcG9pbnQ9ITF9fX0sY29sbGVjdE9ic2VydmVycyYmKGdsb2JhbC5QbGF0Zm9ybS5jbGVhck9ic2VydmVycz1mdW5jdGlvbigpe2FsbE9ic2VydmVycz1bXX0pLE9iamVjdE9ic2VydmVyLnByb3RvdHlwZT1jcmVhdGVPYmplY3Qoe19fcHJvdG9fXzpPYnNlcnZlci5wcm90b3R5cGUsYXJyYXlPYnNlcnZlOiExLGNvbm5lY3RfOmZ1bmN0aW9uKCl7aGFzT2JzZXJ2ZT90aGlzLmRpcmVjdE9ic2VydmVyXz1nZXRPYnNlcnZlZE9iamVjdCh0aGlzLHRoaXMudmFsdWVfLHRoaXMuYXJyYXlPYnNlcnZlKTp0aGlzLm9sZE9iamVjdF89dGhpcy5jb3B5T2JqZWN0KHRoaXMudmFsdWVfKX0sY29weU9iamVjdDpmdW5jdGlvbihhKXt2YXIgYj1BcnJheS5pc0FycmF5KGEpP1tdOnt9O2Zvcih2YXIgYyBpbiBhKWJbY109YVtjXTtyZXR1cm4gQXJyYXkuaXNBcnJheShhKSYmKGIubGVuZ3RoPWEubGVuZ3RoKSxifSxjaGVja186ZnVuY3Rpb24oYSl7dmFyIGIsYztpZihoYXNPYnNlcnZlKXtpZighYSlyZXR1cm4hMTtjPXt9LGI9ZGlmZk9iamVjdEZyb21DaGFuZ2VSZWNvcmRzKHRoaXMudmFsdWVfLGEsYyl9ZWxzZSBjPXRoaXMub2xkT2JqZWN0XyxiPWRpZmZPYmplY3RGcm9tT2xkT2JqZWN0KHRoaXMudmFsdWVfLHRoaXMub2xkT2JqZWN0Xyk7cmV0dXJuIGRpZmZJc0VtcHR5KGIpPyExOihoYXNPYnNlcnZlfHwodGhpcy5vbGRPYmplY3RfPXRoaXMuY29weU9iamVjdCh0aGlzLnZhbHVlXykpLHRoaXMucmVwb3J0XyhbYi5hZGRlZHx8e30sYi5yZW1vdmVkfHx7fSxiLmNoYW5nZWR8fHt9LGZ1bmN0aW9uKGEpe3JldHVybiBjW2FdfV0pLCEwKX0sZGlzY29ubmVjdF86ZnVuY3Rpb24oKXtoYXNPYnNlcnZlPyh0aGlzLmRpcmVjdE9ic2VydmVyXy5jbG9zZSgpLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCk6dGhpcy5vbGRPYmplY3RfPXZvaWQgMH0sZGVsaXZlcjpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1PUEVORUQmJihoYXNPYnNlcnZlP3RoaXMuZGlyZWN0T2JzZXJ2ZXJfLmRlbGl2ZXIoITEpOmRpcnR5Q2hlY2sodGhpcykpfSxkaXNjYXJkQ2hhbmdlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRpcmVjdE9ic2VydmVyXz90aGlzLmRpcmVjdE9ic2VydmVyXy5kZWxpdmVyKCEwKTp0aGlzLm9sZE9iamVjdF89dGhpcy5jb3B5T2JqZWN0KHRoaXMudmFsdWVfKSx0aGlzLnZhbHVlX319KSxBcnJheU9ic2VydmVyLnByb3RvdHlwZT1jcmVhdGVPYmplY3Qoe19fcHJvdG9fXzpPYmplY3RPYnNlcnZlci5wcm90b3R5cGUsYXJyYXlPYnNlcnZlOiEwLGNvcHlPYmplY3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuc2xpY2UoKX0sY2hlY2tfOmZ1bmN0aW9uKGEpe3ZhciBiO2lmKGhhc09ic2VydmUpe2lmKCFhKXJldHVybiExO2I9cHJvamVjdEFycmF5U3BsaWNlcyh0aGlzLnZhbHVlXyxhKX1lbHNlIGI9Y2FsY1NwbGljZXModGhpcy52YWx1ZV8sMCx0aGlzLnZhbHVlXy5sZW5ndGgsdGhpcy5vbGRPYmplY3RfLDAsdGhpcy5vbGRPYmplY3RfLmxlbmd0aCk7cmV0dXJuIGImJmIubGVuZ3RoPyhoYXNPYnNlcnZlfHwodGhpcy5vbGRPYmplY3RfPXRoaXMuY29weU9iamVjdCh0aGlzLnZhbHVlXykpLHRoaXMucmVwb3J0XyhbYl0pLCEwKTohMX19KSxBcnJheU9ic2VydmVyLmFwcGx5U3BsaWNlcz1mdW5jdGlvbihhLGIsYyl7Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe2Zvcih2YXIgZD1bYy5pbmRleCxjLnJlbW92ZWQubGVuZ3RoXSxlPWMuaW5kZXg7ZTxjLmluZGV4K2MuYWRkZWRDb3VudDspZC5wdXNoKGJbZV0pLGUrKztBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KGEsZCl9KX0sUGF0aE9ic2VydmVyLnByb3RvdHlwZT1jcmVhdGVPYmplY3Qoe19fcHJvdG9fXzpPYnNlcnZlci5wcm90b3R5cGUsZ2V0IHBhdGgoKXtyZXR1cm4gdGhpcy5wYXRoX30sY29ubmVjdF86ZnVuY3Rpb24oKXtoYXNPYnNlcnZlJiYodGhpcy5kaXJlY3RPYnNlcnZlcl89Z2V0T2JzZXJ2ZWRTZXQodGhpcyx0aGlzLm9iamVjdF8pKSx0aGlzLmNoZWNrXyh2b2lkIDAsITApfSxkaXNjb25uZWN0XzpmdW5jdGlvbigpe3RoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmRpcmVjdE9ic2VydmVyXyYmKHRoaXMuZGlyZWN0T2JzZXJ2ZXJfLmNsb3NlKHRoaXMpLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCl9LGl0ZXJhdGVPYmplY3RzXzpmdW5jdGlvbihhKXt0aGlzLnBhdGhfLml0ZXJhdGVPYmplY3RzKHRoaXMub2JqZWN0XyxhKX0sY2hlY2tfOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy52YWx1ZV87cmV0dXJuIHRoaXMudmFsdWVfPXRoaXMucGF0aF8uZ2V0VmFsdWVGcm9tKHRoaXMub2JqZWN0XyksYnx8YXJlU2FtZVZhbHVlKHRoaXMudmFsdWVfLGMpPyExOih0aGlzLnJlcG9ydF8oW3RoaXMudmFsdWVfLGMsdGhpc10pLCEwKX0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7dGhpcy5wYXRoXyYmdGhpcy5wYXRoXy5zZXRWYWx1ZUZyb20odGhpcy5vYmplY3RfLGEpfX0pO3ZhciBvYnNlcnZlclNlbnRpbmVsPXt9O0NvbXBvdW5kT2JzZXJ2ZXIucHJvdG90eXBlPWNyZWF0ZU9iamVjdCh7X19wcm90b19fOk9ic2VydmVyLnByb3RvdHlwZSxjb25uZWN0XzpmdW5jdGlvbigpe2lmKGhhc09ic2VydmUpe2Zvcih2YXIgYSxiPSExLGM9MDtjPHRoaXMub2JzZXJ2ZWRfLmxlbmd0aDtjKz0yKWlmKGE9dGhpcy5vYnNlcnZlZF9bY10sYSE9PW9ic2VydmVyU2VudGluZWwpe2I9ITA7YnJlYWt9YiYmKHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPWdldE9ic2VydmVkU2V0KHRoaXMsYSkpfXRoaXMuY2hlY2tfKHZvaWQgMCwhdGhpcy5yZXBvcnRDaGFuZ2VzT25PcGVuXyl9LGRpc2Nvbm5lY3RfOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPTA7YTx0aGlzLm9ic2VydmVkXy5sZW5ndGg7YSs9Mil0aGlzLm9ic2VydmVkX1thXT09PW9ic2VydmVyU2VudGluZWwmJnRoaXMub2JzZXJ2ZWRfW2ErMV0uY2xvc2UoKTt0aGlzLm9ic2VydmVkXy5sZW5ndGg9MCx0aGlzLnZhbHVlXy5sZW5ndGg9MCx0aGlzLmRpcmVjdE9ic2VydmVyXyYmKHRoaXMuZGlyZWN0T2JzZXJ2ZXJfLmNsb3NlKHRoaXMpLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCl9LGFkZFBhdGg6ZnVuY3Rpb24oYSxiKXtpZih0aGlzLnN0YXRlXyE9VU5PUEVORUQmJnRoaXMuc3RhdGVfIT1SRVNFVFRJTkcpdGhyb3cgRXJyb3IoIkNhbm5vdCBhZGQgcGF0aHMgb25jZSBzdGFydGVkLiIpO3ZhciBiPWdldFBhdGgoYik7aWYodGhpcy5vYnNlcnZlZF8ucHVzaChhLGIpLHRoaXMucmVwb3J0Q2hhbmdlc09uT3Blbl8pe3ZhciBjPXRoaXMub2JzZXJ2ZWRfLmxlbmd0aC8yLTE7dGhpcy52YWx1ZV9bY109Yi5nZXRWYWx1ZUZyb20oYSl9fSxhZGRPYnNlcnZlcjpmdW5jdGlvbihhKXtpZih0aGlzLnN0YXRlXyE9VU5PUEVORUQmJnRoaXMuc3RhdGVfIT1SRVNFVFRJTkcpdGhyb3cgRXJyb3IoIkNhbm5vdCBhZGQgb2JzZXJ2ZXJzIG9uY2Ugc3RhcnRlZC4iKTtpZih0aGlzLm9ic2VydmVkXy5wdXNoKG9ic2VydmVyU2VudGluZWwsYSksdGhpcy5yZXBvcnRDaGFuZ2VzT25PcGVuXyl7dmFyIGI9dGhpcy5vYnNlcnZlZF8ubGVuZ3RoLzItMTt0aGlzLnZhbHVlX1tiXT1hLm9wZW4odGhpcy5kZWxpdmVyLHRoaXMpfX0sc3RhcnRSZXNldDpmdW5jdGlvbigpe2lmKHRoaXMuc3RhdGVfIT1PUEVORUQpdGhyb3cgRXJyb3IoIkNhbiBvbmx5IHJlc2V0IHdoaWxlIG9wZW4iKTt0aGlzLnN0YXRlXz1SRVNFVFRJTkcsdGhpcy5kaXNjb25uZWN0XygpfSxmaW5pc2hSZXNldDpmdW5jdGlvbigpe2lmKHRoaXMuc3RhdGVfIT1SRVNFVFRJTkcpdGhyb3cgRXJyb3IoIkNhbiBvbmx5IGZpbmlzaFJlc2V0IGFmdGVyIHN0YXJ0UmVzZXQiKTtyZXR1cm4gdGhpcy5zdGF0ZV89T1BFTkVELHRoaXMuY29ubmVjdF8oKSx0aGlzLnZhbHVlX30saXRlcmF0ZU9iamVjdHNfOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPTA7Yzx0aGlzLm9ic2VydmVkXy5sZW5ndGg7Yys9MiliPXRoaXMub2JzZXJ2ZWRfW2NdLGIhPT1vYnNlcnZlclNlbnRpbmVsJiZ0aGlzLm9ic2VydmVkX1tjKzFdLml0ZXJhdGVPYmplY3RzKGIsYSl9LGNoZWNrXzpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYyxkPTA7ZDx0aGlzLm9ic2VydmVkXy5sZW5ndGg7ZCs9Mil7dmFyIGUsZj10aGlzLm9ic2VydmVkX1tkXSxnPXRoaXMub2JzZXJ2ZWRfW2QrMV07aWYoZj09PW9ic2VydmVyU2VudGluZWwpe3ZhciBoPWc7ZT10aGlzLnN0YXRlXz09PVVOT1BFTkVEP2gub3Blbih0aGlzLmRlbGl2ZXIsdGhpcyk6aC5kaXNjYXJkQ2hhbmdlcygpfWVsc2UgZT1nLmdldFZhbHVlRnJvbShmKTtiP3RoaXMudmFsdWVfW2QvMl09ZTphcmVTYW1lVmFsdWUoZSx0aGlzLnZhbHVlX1tkLzJdKXx8KGM9Y3x8W10sY1tkLzJdPXRoaXMudmFsdWVfW2QvMl0sdGhpcy52YWx1ZV9bZC8yXT1lKX1yZXR1cm4gYz8odGhpcy5yZXBvcnRfKFt0aGlzLnZhbHVlXyxjLHRoaXMub2JzZXJ2ZWRfXSksITApOiExfX0pLE9ic2VydmVyVHJhbnNmb3JtLnByb3RvdHlwZT17b3BlbjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmNhbGxiYWNrXz1hLHRoaXMudGFyZ2V0Xz1iLHRoaXMudmFsdWVfPXRoaXMuZ2V0VmFsdWVGbl8odGhpcy5vYnNlcnZhYmxlXy5vcGVuKHRoaXMub2JzZXJ2ZWRDYWxsYmFja18sdGhpcykpLHRoaXMudmFsdWVffSxvYnNlcnZlZENhbGxiYWNrXzpmdW5jdGlvbihhKXtpZihhPXRoaXMuZ2V0VmFsdWVGbl8oYSksIWFyZVNhbWVWYWx1ZShhLHRoaXMudmFsdWVfKSl7dmFyIGI9dGhpcy52YWx1ZV87dGhpcy52YWx1ZV89YSx0aGlzLmNhbGxiYWNrXy5jYWxsKHRoaXMudGFyZ2V0Xyx0aGlzLnZhbHVlXyxiKX19LGRpc2NhcmRDaGFuZ2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVfPXRoaXMuZ2V0VmFsdWVGbl8odGhpcy5vYnNlcnZhYmxlXy5kaXNjYXJkQ2hhbmdlcygpKSx0aGlzLnZhbHVlX30sZGVsaXZlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9ic2VydmFibGVfLmRlbGl2ZXIoKX0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9dGhpcy5zZXRWYWx1ZUZuXyhhKSwhdGhpcy5kb250UGFzc1Rocm91Z2hTZXRfJiZ0aGlzLm9ic2VydmFibGVfLnNldFZhbHVlP3RoaXMub2JzZXJ2YWJsZV8uc2V0VmFsdWUoYSk6dm9pZCAwfSxjbG9zZTpmdW5jdGlvbigpe3RoaXMub2JzZXJ2YWJsZV8mJnRoaXMub2JzZXJ2YWJsZV8uY2xvc2UoKSx0aGlzLmNhbGxiYWNrXz12b2lkIDAsdGhpcy50YXJnZXRfPXZvaWQgMCx0aGlzLm9ic2VydmFibGVfPXZvaWQgMCx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5nZXRWYWx1ZUZuXz12b2lkIDAsdGhpcy5zZXRWYWx1ZUZuXz12b2lkIDB9fTt2YXIgZXhwZWN0ZWRSZWNvcmRUeXBlcz17YWRkOiEwLHVwZGF0ZTohMCwiZGVsZXRlIjohMH0sRURJVF9MRUFWRT0wLEVESVRfVVBEQVRFPTEsRURJVF9BREQ9MixFRElUX0RFTEVURT0zO0FycmF5U3BsaWNlLnByb3RvdHlwZT17Y2FsY0VkaXREaXN0YW5jZXM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Zvcih2YXIgZz1mLWUrMSxoPWMtYisxLGk9bmV3IEFycmF5KGcpLGo9MDtnPmo7aisrKWlbal09bmV3IEFycmF5KGgpLGlbal1bMF09ajtmb3IodmFyIGs9MDtoPms7aysrKWlbMF1ba109aztmb3IodmFyIGo9MTtnPmo7aisrKWZvcih2YXIgaz0xO2g+aztrKyspaWYodGhpcy5lcXVhbHMoYVtiK2stMV0sZFtlK2otMV0pKWlbal1ba109aVtqLTFdW2stMV07ZWxzZXt2YXIgbD1pW2otMV1ba10rMSxtPWlbal1bay0xXSsxO2lbal1ba109bT5sP2w6bX1yZXR1cm4gaX0sc3BsaWNlT3BlcmF0aW9uc0Zyb21FZGl0RGlzdGFuY2VzOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1hLmxlbmd0aC0xLGM9YVswXS5sZW5ndGgtMSxkPWFbYl1bY10sZT1bXTtiPjB8fGM+MDspaWYoMCE9YilpZigwIT1jKXt2YXIgZixnPWFbYi0xXVtjLTFdLGg9YVtiLTFdW2NdLGk9YVtiXVtjLTFdO2Y9aT5oP2c+aD9oOmc6Zz5pP2k6ZyxmPT1nPyhnPT1kP2UucHVzaChFRElUX0xFQVZFKTooZS5wdXNoKEVESVRfVVBEQVRFKSxkPWcpLGItLSxjLS0pOmY9PWg/KGUucHVzaChFRElUX0RFTEVURSksYi0tLGQ9aCk6KGUucHVzaChFRElUX0FERCksYy0tLGQ9aSl9ZWxzZSBlLnB1c2goRURJVF9ERUxFVEUpLGItLTtlbHNlIGUucHVzaChFRElUX0FERCksYy0tO3JldHVybiBlLnJldmVyc2UoKSxlfSxjYWxjU3BsaWNlczpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9MCxoPTAsaT1NYXRoLm1pbihjLWIsZi1lKTtpZigwPT1iJiYwPT1lJiYoZz10aGlzLnNoYXJlZFByZWZpeChhLGQsaSkpLGM9PWEubGVuZ3RoJiZmPT1kLmxlbmd0aCYmKGg9dGhpcy5zaGFyZWRTdWZmaXgoYSxkLGktZykpLGIrPWcsZSs9ZyxjLT1oLGYtPWgsYy1iPT0wJiZmLWU9PTApcmV0dXJuW107aWYoYj09Yyl7Zm9yKHZhciBqPW5ld1NwbGljZShiLFtdLDApO2Y+ZTspai5yZW1vdmVkLnB1c2goZFtlKytdKTtyZXR1cm5bal19aWYoZT09ZilyZXR1cm5bbmV3U3BsaWNlKGIsW10sYy1iKV07Zm9yKHZhciBrPXRoaXMuc3BsaWNlT3BlcmF0aW9uc0Zyb21FZGl0RGlzdGFuY2VzKHRoaXMuY2FsY0VkaXREaXN0YW5jZXMoYSxiLGMsZCxlLGYpKSxqPXZvaWQgMCxsPVtdLG09YixuPWUsbz0wO288ay5sZW5ndGg7bysrKXN3aXRjaChrW29dKXtjYXNlIEVESVRfTEVBVkU6aiYmKGwucHVzaChqKSxqPXZvaWQgMCksbSsrLG4rKzticmVhaztjYXNlIEVESVRfVVBEQVRFOmp8fChqPW5ld1NwbGljZShtLFtdLDApKSxqLmFkZGVkQ291bnQrKyxtKyssai5yZW1vdmVkLnB1c2goZFtuXSksbisrO2JyZWFrO2Nhc2UgRURJVF9BREQ6anx8KGo9bmV3U3BsaWNlKG0sW10sMCkpLGouYWRkZWRDb3VudCsrLG0rKzticmVhaztjYXNlIEVESVRfREVMRVRFOmp8fChqPW5ld1NwbGljZShtLFtdLDApKSxqLnJlbW92ZWQucHVzaChkW25dKSxuKyt9cmV0dXJuIGomJmwucHVzaChqKSxsfSxzaGFyZWRQcmVmaXg6ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD0wO2M+ZDtkKyspaWYoIXRoaXMuZXF1YWxzKGFbZF0sYltkXSkpcmV0dXJuIGQ7cmV0dXJuIGN9LHNoYXJlZFN1ZmZpeDpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWEubGVuZ3RoLGU9Yi5sZW5ndGgsZj0wO2M+ZiYmdGhpcy5lcXVhbHMoYVstLWRdLGJbLS1lXSk7KWYrKztyZXR1cm4gZn0sY2FsY3VsYXRlU3BsaWNlczpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmNhbGNTcGxpY2VzKGEsMCxhLmxlbmd0aCxiLDAsYi5sZW5ndGgpfSxlcXVhbHM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09PWJ9fTt2YXIgYXJyYXlTcGxpY2U9bmV3IEFycmF5U3BsaWNlO2dsb2JhbC5PYnNlcnZlcj1PYnNlcnZlcixnbG9iYWwuT2JzZXJ2ZXIucnVuRU9NXz1ydW5FT00sZ2xvYmFsLk9ic2VydmVyLm9ic2VydmVyU2VudGluZWxfPW9ic2VydmVyU2VudGluZWwsZ2xvYmFsLk9ic2VydmVyLmhhc09iamVjdE9ic2VydmU9aGFzT2JzZXJ2ZSxnbG9iYWwuQXJyYXlPYnNlcnZlcj1BcnJheU9ic2VydmVyLGdsb2JhbC5BcnJheU9ic2VydmVyLmNhbGN1bGF0ZVNwbGljZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJyYXlTcGxpY2UuY2FsY3VsYXRlU3BsaWNlcyhhLGIpfSxnbG9iYWwuQXJyYXlTcGxpY2U9QXJyYXlTcGxpY2UsZ2xvYmFsLk9iamVjdE9ic2VydmVyPU9iamVjdE9ic2VydmVyLGdsb2JhbC5QYXRoT2JzZXJ2ZXI9UGF0aE9ic2VydmVyLGdsb2JhbC5Db21wb3VuZE9ic2VydmVyPUNvbXBvdW5kT2JzZXJ2ZXIsZ2xvYmFsLlBhdGg9UGF0aCxnbG9iYWwuT2JzZXJ2ZXJUcmFuc2Zvcm09T2JzZXJ2ZXJUcmFuc2Zvcm19KCJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGU/Z2xvYmFsOnRoaXN8fHdpbmRvdyksd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsPXt9LGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjaHJvbWUmJmNocm9tZS5hcHAmJmNocm9tZS5hcHAucnVudGltZSlyZXR1cm4hMTtpZihuYXZpZ2F0b3IuZ2V0RGV2aWNlU3RvcmFnZSlyZXR1cm4hMTt0cnl7dmFyIGE9bmV3IEZ1bmN0aW9uKCJyZXR1cm4gdHJ1ZTsiKTtyZXR1cm4gYSgpfWNhdGNoKGIpe3JldHVybiExfX1mdW5jdGlvbiBjKGEpe2lmKCFhKXRocm93IG5ldyBFcnJvcigiQXNzZXJ0aW9uIGZhaWxlZCIpfWZ1bmN0aW9uIGQoYSxiKXtmb3IodmFyIGM9TihiKSxkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07TShhLGUsTyhiLGUpKX1yZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7Zm9yKHZhciBjPU4oYiksZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO3N3aXRjaChlKXtjYXNlImFyZ3VtZW50cyI6Y2FzZSJjYWxsZXIiOmNhc2UibGVuZ3RoIjpjYXNlIm5hbWUiOmNhc2UicHJvdG90eXBlIjpjYXNlInRvU3RyaW5nIjpjb250aW51ZX1NKGEsZSxPKGIsZSkpfXJldHVybiBhfWZ1bmN0aW9uIGYoYSxiKXtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKylpZihiW2NdaW4gYSlyZXR1cm4gYltjXX1mdW5jdGlvbiBnKGEsYixjKXtQLnZhbHVlPWMsTShhLGIsUCl9ZnVuY3Rpb24gaChhKXt2YXIgYj1hLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKGEpLGM9SS5nZXQoYik7aWYoYylyZXR1cm4gYzt2YXIgZD1oKGIpLGU9dihkKTtyZXR1cm4gcyhiLGUsYSksZX1mdW5jdGlvbiBpKGEsYil7cShhLGIsITApfWZ1bmN0aW9uIGooYSxiKXtxKGIsYSwhMSl9ZnVuY3Rpb24gayhhKXtyZXR1cm4vXm9uW2Etel0rJC8udGVzdChhKX1mdW5jdGlvbiBsKGEpe3JldHVybi9eXHdbYS16QS1aXzAtOV0qJC8udGVzdChhKX1mdW5jdGlvbiBtKGEpe3JldHVybiBMJiZsKGEpP25ldyBGdW5jdGlvbigicmV0dXJuIHRoaXMuX19pbXBsNGNmMWU3ODJoZ19fLiIrYSk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX2ltcGw0Y2YxZTc4MmhnX19bYV19fWZ1bmN0aW9uIG4oYSl7cmV0dXJuIEwmJmwoYSk/bmV3IEZ1bmN0aW9uKCJ2IiwidGhpcy5fX2ltcGw0Y2YxZTc4MmhnX18uIithKyIgPSB2Iik6ZnVuY3Rpb24oYil7dGhpcy5fX2ltcGw0Y2YxZTc4MmhnX19bYV09Yn19ZnVuY3Rpb24gbyhhKXtyZXR1cm4gTCYmbChhKT9uZXcgRnVuY3Rpb24oInJldHVybiB0aGlzLl9faW1wbDRjZjFlNzgyaGdfXy4iK2ErIi5hcHBseSh0aGlzLl9faW1wbDRjZjFlNzgyaGdfXywgYXJndW1lbnRzKSIpOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19pbXBsNGNmMWU3ODJoZ19fW2FdLmFwcGx5KHRoaXMuX19pbXBsNGNmMWU3ODJoZ19fLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIHAoYSxiKXt0cnl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYSxiKX1jYXRjaChjKXtyZXR1cm4gUn19ZnVuY3Rpb24gcShiLGMsZCl7Zm9yKHZhciBlPU4oYiksZj0wO2Y8ZS5sZW5ndGg7ZisrKXt2YXIgZz1lW2ZdO2lmKCJwb2x5bWVyQmxhY2tMaXN0XyIhPT1nJiYhKGcgaW4gY3x8Yi5wb2x5bWVyQmxhY2tMaXN0XyYmYi5wb2x5bWVyQmxhY2tMaXN0X1tnXSkpe1EmJmIuX19sb29rdXBHZXR0ZXJfXyhnKTt2YXIgaCxpLGo9cChiLGcpO2lmKGQmJiJmdW5jdGlvbiI9PXR5cGVvZiBqLnZhbHVlKWNbZ109byhnKTtlbHNle3ZhciBsPWsoZyk7aD1sP2EuZ2V0RXZlbnRIYW5kbGVyR2V0dGVyKGcpOm0oZyksKGoud3JpdGFibGV8fGouc2V0KSYmKGk9bD9hLmdldEV2ZW50SGFuZGxlclNldHRlcihnKTpuKGcpKSxNKGMsZyx7Z2V0Omgsc2V0OmksY29uZmlndXJhYmxlOmouY29uZmlndXJhYmxlLGVudW1lcmFibGU6ai5lbnVtZXJhYmxlfSl9fX19ZnVuY3Rpb24gcihhLGIsYyl7dmFyIGQ9YS5wcm90b3R5cGU7cyhkLGIsYyksZShiLGEpfWZ1bmN0aW9uIHMoYSxiLGQpe3ZhciBlPWIucHJvdG90eXBlO2Modm9pZCAwPT09SS5nZXQoYSkpLEkuc2V0KGEsYiksSi5zZXQoZSxhKSxpKGEsZSksZCYmaihlLGQpLGcoZSwiY29uc3RydWN0b3IiLGIpLGIucHJvdG90eXBlPWV9ZnVuY3Rpb24gdChhLGIpe3JldHVybiBJLmdldChiLnByb3RvdHlwZSk9PT1hfWZ1bmN0aW9uIHUoYSl7dmFyIGI9T2JqZWN0LmdldFByb3RvdHlwZU9mKGEpLGM9aChiKSxkPXYoYyk7cmV0dXJuIHMoYixkLGEpLGR9ZnVuY3Rpb24gdihhKXtmdW5jdGlvbiBiKGIpe2EuY2FsbCh0aGlzLGIpfXZhciBjPU9iamVjdC5jcmVhdGUoYS5wcm90b3R5cGUpO3JldHVybiBjLmNvbnN0cnVjdG9yPWIsYi5wcm90b3R5cGU9YyxifWZ1bmN0aW9uIHcoYSl7cmV0dXJuIGEmJmEuX19pbXBsNGNmMWU3ODJoZ19ffWZ1bmN0aW9uIHgoYSl7cmV0dXJuIXcoYSl9ZnVuY3Rpb24geShhKXtyZXR1cm4gbnVsbD09PWE/bnVsbDooYyh4KGEpKSxhLl9fd3JhcHBlcjhlM2RkOTNhNjBfX3x8KGEuX193cmFwcGVyOGUzZGQ5M2E2MF9fPW5ldyhoKGEpKShhKSkpfWZ1bmN0aW9uIHooYSl7cmV0dXJuIG51bGw9PT1hP251bGw6KGModyhhKSksYS5fX2ltcGw0Y2YxZTc4MmhnX18pfWZ1bmN0aW9uIEEoYSl7cmV0dXJuIGEuX19pbXBsNGNmMWU3ODJoZ19ffWZ1bmN0aW9uIEIoYSxiKXtiLl9faW1wbDRjZjFlNzgyaGdfXz1hLGEuX193cmFwcGVyOGUzZGQ5M2E2MF9fPWJ9ZnVuY3Rpb24gQyhhKXtyZXR1cm4gYSYmdyhhKT96KGEpOmF9ZnVuY3Rpb24gRChhKXtyZXR1cm4gYSYmIXcoYSk/eShhKTphfWZ1bmN0aW9uIEUoYSxiKXtudWxsIT09YiYmKGMoeChhKSksYyh2b2lkIDA9PT1ifHx3KGIpKSxhLl9fd3JhcHBlcjhlM2RkOTNhNjBfXz1iKX1mdW5jdGlvbiBGKGEsYixjKXtTLmdldD1jLE0oYS5wcm90b3R5cGUsYixTKX1mdW5jdGlvbiBHKGEsYil7RihhLGIsZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLl9faW1wbDRjZjFlNzgyaGdfX1tiXSl9KX1mdW5jdGlvbiBIKGEsYil7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2IuZm9yRWFjaChmdW5jdGlvbihiKXthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3ZhciBhPUQodGhpcyk7cmV0dXJuIGFbYl0uYXBwbHkoYSxhcmd1bWVudHMpfX0pfSl9dmFyIEk9bmV3IFdlYWtNYXAsSj1uZXcgV2Vha01hcCxLPU9iamVjdC5jcmVhdGUobnVsbCksTD1iKCksTT1PYmplY3QuZGVmaW5lUHJvcGVydHksTj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxPPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsUD17dmFsdWU6dm9pZCAwLGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfTtOKHdpbmRvdyk7dmFyIFE9L0ZpcmVmb3gvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksUj17Z2V0OmZ1bmN0aW9uKCl7fSxzZXQ6ZnVuY3Rpb24oKXt9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfSxTPXtnZXQ6dm9pZCAwLGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfTthLmFzc2VydD1jLGEuY29uc3RydWN0b3JUYWJsZT1JLGEuZGVmaW5lR2V0dGVyPUYsYS5kZWZpbmVXcmFwR2V0dGVyPUcsYS5mb3J3YXJkTWV0aG9kc1RvV3JhcHBlcj1ILGEuaXNXcmFwcGVyPXcsYS5pc1dyYXBwZXJGb3I9dCxhLm1peGluPWQsYS5uYXRpdmVQcm90b3R5cGVUYWJsZT1KLGEub25lT2Y9ZixhLnJlZ2lzdGVyT2JqZWN0PXUsYS5yZWdpc3RlcldyYXBwZXI9cixhLnJld3JhcD1FLGEuc2V0V3JhcHBlcj1CLGEudW5zYWZlVW53cmFwPUEsYS51bndyYXA9eixhLnVud3JhcElmTmVlZGVkPUMsYS53cmFwPXksYS53cmFwSWZOZWVkZWQ9RCxhLndyYXBwZXJzPUt9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoKXtnPSExO3ZhciBhPWYuc2xpY2UoMCk7Zj1bXTtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKylhW2JdKCl9ZnVuY3Rpb24gYyhhKXtmLnB1c2goYSksZ3x8KGc9ITAsZChiLDApKX12YXIgZCxlPXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyLGY9W10sZz0hMTtpZihlKXt2YXIgaD0xLGk9bmV3IGUoYiksaj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShoKTtpLm9ic2VydmUoaix7Y2hhcmFjdGVyRGF0YTohMH0pLGQ9ZnVuY3Rpb24oKXtoPShoKzEpJTIsai5kYXRhPWh9fWVsc2UgZD13aW5kb3cuc2V0SW1tZWRpYXRlfHx3aW5kb3cuc2V0VGltZW91dDthLnNldEVuZE9mTWljcm90YXNrPWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoKXtwfHwoayhjKSxwPSEwKX1mdW5jdGlvbiBjKCl7cD0hMTtkbyBmb3IodmFyIGE9by5zbGljZSgpLGI9ITEsYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC50YWtlUmVjb3JkcygpO2YoZCksZS5sZW5ndGgmJihkLmNhbGxiYWNrXyhlLGQpLGI9ITApfXdoaWxlKGIpfWZ1bmN0aW9uIGQoYSxiKXt0aGlzLnR5cGU9YSx0aGlzLnRhcmdldD1iLHRoaXMuYWRkZWROb2Rlcz1uZXcgbS5Ob2RlTGlzdCx0aGlzLnJlbW92ZWROb2Rlcz1uZXcgbS5Ob2RlTGlzdCx0aGlzLnByZXZpb3VzU2libGluZz1udWxsLHRoaXMubmV4dFNpYmxpbmc9bnVsbCx0aGlzLmF0dHJpYnV0ZU5hbWU9bnVsbCx0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1udWxsLHRoaXMub2xkVmFsdWU9bnVsbH1mdW5jdGlvbiBlKGEsYil7Zm9yKDthO2E9YS5wYXJlbnROb2RlKXt2YXIgYz1uLmdldChhKTtpZihjKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO2Uub3B0aW9ucy5zdWJ0cmVlJiZlLmFkZFRyYW5zaWVudE9ic2VydmVyKGIpfX19ZnVuY3Rpb24gZihhKXtmb3IodmFyIGI9MDtiPGEubm9kZXNfLmxlbmd0aDtiKyspe3ZhciBjPWEubm9kZXNfW2JdLGQ9bi5nZXQoYyk7aWYoIWQpcmV0dXJuO2Zvcih2YXIgZT0wO2U8ZC5sZW5ndGg7ZSsrKXt2YXIgZj1kW2VdO2Yub2JzZXJ2ZXI9PT1hJiZmLnJlbW92ZVRyYW5zaWVudE9ic2VydmVycygpfX19ZnVuY3Rpb24gZyhhLGMsZSl7Zm9yKHZhciBmPU9iamVjdC5jcmVhdGUobnVsbCksZz1PYmplY3QuY3JlYXRlKG51bGwpLGg9YTtoO2g9aC5wYXJlbnROb2RlKXt2YXIgaT1uLmdldChoKTtpZihpKWZvcih2YXIgaj0wO2o8aS5sZW5ndGg7aisrKXt2YXIgaz1pW2pdLGw9ay5vcHRpb25zO2lmKChoPT09YXx8bC5zdWJ0cmVlKSYmISgiYXR0cmlidXRlcyI9PT1jJiYhbC5hdHRyaWJ1dGVzfHwiYXR0cmlidXRlcyI9PT1jJiZsLmF0dHJpYnV0ZUZpbHRlciYmKG51bGwhPT1lLm5hbWVzcGFjZXx8LTE9PT1sLmF0dHJpYnV0ZUZpbHRlci5pbmRleE9mKGUubmFtZSkpfHwiY2hhcmFjdGVyRGF0YSI9PT1jJiYhbC5jaGFyYWN0ZXJEYXRhfHwiY2hpbGRMaXN0Ij09PWMmJiFsLmNoaWxkTGlzdCkpe3ZhciBtPWsub2JzZXJ2ZXI7ZlttLnVpZF9dPW0sKCJhdHRyaWJ1dGVzIj09PWMmJmwuYXR0cmlidXRlT2xkVmFsdWV8fCJjaGFyYWN0ZXJEYXRhIj09PWMmJmwuY2hhcmFjdGVyRGF0YU9sZFZhbHVlKSYmKGdbbS51aWRfXT1lLm9sZFZhbHVlKX19fXZhciBvPSExO2Zvcih2YXIgcCBpbiBmKXt2YXIgbT1mW3BdLHE9bmV3IGQoYyxhKTsibmFtZSJpbiBlJiYibmFtZXNwYWNlImluIGUmJihxLmF0dHJpYnV0ZU5hbWU9ZS5uYW1lLHEuYXR0cmlidXRlTmFtZXNwYWNlPWUubmFtZXNwYWNlKSxlLmFkZGVkTm9kZXMmJihxLmFkZGVkTm9kZXM9ZS5hZGRlZE5vZGVzKSxlLnJlbW92ZWROb2RlcyYmKHEucmVtb3ZlZE5vZGVzPWUucmVtb3ZlZE5vZGVzKSxlLnByZXZpb3VzU2libGluZyYmKHEucHJldmlvdXNTaWJsaW5nPWUucHJldmlvdXNTaWJsaW5nKSxlLm5leHRTaWJsaW5nJiYocS5uZXh0U2libGluZz1lLm5leHRTaWJsaW5nKSx2b2lkIDAhPT1nW3BdJiYocS5vbGRWYWx1ZT1nW3BdKSxtLnJlY29yZHNfLnB1c2gocSksbz0hMH1vJiZiKCl9ZnVuY3Rpb24gaChhKXtpZih0aGlzLmNoaWxkTGlzdD0hIWEuY2hpbGRMaXN0LHRoaXMuc3VidHJlZT0hIWEuc3VidHJlZSx0aGlzLmF0dHJpYnV0ZXM9ImF0dHJpYnV0ZXMiaW4gYXx8ISgiYXR0cmlidXRlT2xkVmFsdWUiaW4gYXx8ImF0dHJpYnV0ZUZpbHRlciJpbiBhKT8hIWEuYXR0cmlidXRlczohMCx0aGlzLmNoYXJhY3RlckRhdGE9ImNoYXJhY3RlckRhdGFPbGRWYWx1ZSJpbiBhJiYhKCJjaGFyYWN0ZXJEYXRhImluIGEpPyEwOiEhYS5jaGFyYWN0ZXJEYXRhLCF0aGlzLmF0dHJpYnV0ZXMmJihhLmF0dHJpYnV0ZU9sZFZhbHVlfHwiYXR0cmlidXRlRmlsdGVyImluIGEpfHwhdGhpcy5jaGFyYWN0ZXJEYXRhJiZhLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSl0aHJvdyBuZXcgVHlwZUVycm9yO2lmKHRoaXMuY2hhcmFjdGVyRGF0YT0hIWEuY2hhcmFjdGVyRGF0YSx0aGlzLmF0dHJpYnV0ZU9sZFZhbHVlPSEhYS5hdHRyaWJ1dGVPbGRWYWx1ZSx0aGlzLmNoYXJhY3RlckRhdGFPbGRWYWx1ZT0hIWEuY2hhcmFjdGVyRGF0YU9sZFZhbHVlLCJhdHRyaWJ1dGVGaWx0ZXIiaW4gYSl7aWYobnVsbD09YS5hdHRyaWJ1dGVGaWx0ZXJ8fCJvYmplY3QiIT10eXBlb2YgYS5hdHRyaWJ1dGVGaWx0ZXIpdGhyb3cgbmV3IFR5cGVFcnJvcjt0aGlzLmF0dHJpYnV0ZUZpbHRlcj1xLmNhbGwoYS5hdHRyaWJ1dGVGaWx0ZXIpfWVsc2UgdGhpcy5hdHRyaWJ1dGVGaWx0ZXI9bnVsbH1mdW5jdGlvbiBpKGEpe3RoaXMuY2FsbGJhY2tfPWEsdGhpcy5ub2Rlc189W10sdGhpcy5yZWNvcmRzXz1bXSx0aGlzLnVpZF89KytyLG8ucHVzaCh0aGlzKX1mdW5jdGlvbiBqKGEsYixjKXt0aGlzLm9ic2VydmVyPWEsdGhpcy50YXJnZXQ9Yix0aGlzLm9wdGlvbnM9Yyx0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W119dmFyIGs9YS5zZXRFbmRPZk1pY3JvdGFzayxsPWEud3JhcElmTmVlZGVkLG09YS53cmFwcGVycyxuPW5ldyBXZWFrTWFwLG89W10scD0hMSxxPUFycmF5LnByb3RvdHlwZS5zbGljZSxyPTA7aS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmksb2JzZXJ2ZTpmdW5jdGlvbihhLGIpe2E9bChhKTt2YXIgYyxkPW5ldyBoKGIpLGU9bi5nZXQoYSk7ZXx8bi5zZXQoYSxlPVtdKTtmb3IodmFyIGY9MDtmPGUubGVuZ3RoO2YrKyllW2ZdLm9ic2VydmVyPT09dGhpcyYmKGM9ZVtmXSxjLnJlbW92ZVRyYW5zaWVudE9ic2VydmVycygpLGMub3B0aW9ucz1kKTtjfHwoYz1uZXcgaih0aGlzLGEsZCksZS5wdXNoKGMpLHRoaXMubm9kZXNfLnB1c2goYSkpfSxkaXNjb25uZWN0OmZ1bmN0aW9uKCl7dGhpcy5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihhKXtmb3IodmFyIGI9bi5nZXQoYSksYz0wO2M8Yi5sZW5ndGg7YysrKXt2YXIgZD1iW2NdO2lmKGQub2JzZXJ2ZXI9PT10aGlzKXtiLnNwbGljZShjLDEpO2JyZWFrfX19LHRoaXMpLHRoaXMucmVjb3Jkc189W119LHRha2VSZWNvcmRzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWNvcmRzXztyZXR1cm4gdGhpcy5yZWNvcmRzXz1bXSxhfX0sai5wcm90b3R5cGU9e2FkZFRyYW5zaWVudE9ic2VydmVyOmZ1bmN0aW9uKGEpe2lmKGEhPT10aGlzLnRhcmdldCl7dGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzLnB1c2goYSk7dmFyIGI9bi5nZXQoYSk7Ynx8bi5zZXQoYSxiPVtdKSxiLnB1c2godGhpcyl9fSxyZW1vdmVUcmFuc2llbnRPYnNlcnZlcnM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM7dGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdO2Zvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKWZvcih2YXIgYz1hW2JdLGQ9bi5nZXQoYyksZT0wO2U8ZC5sZW5ndGg7ZSsrKWlmKGRbZV09PT10aGlzKXtkLnNwbGljZShlLDEpO2JyZWFrfX19LGEuZW5xdWV1ZU11dGF0aW9uPWcsYS5yZWdpc3RlclRyYW5zaWVudE9ic2VydmVycz1lLGEud3JhcHBlcnMuTXV0YXRpb25PYnNlcnZlcj1pLGEud3JhcHBlcnMuTXV0YXRpb25SZWNvcmQ9ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe3RoaXMucm9vdD1hLHRoaXMucGFyZW50PWJ9ZnVuY3Rpb24gYyhhLGIpe2lmKGEudHJlZVNjb3BlXyE9PWIpe2EudHJlZVNjb3BlXz1iO2Zvcih2YXIgZD1hLnNoYWRvd1Jvb3Q7ZDtkPWQub2xkZXJTaGFkb3dSb290KWQudHJlZVNjb3BlXy5wYXJlbnQ9Yjtmb3IodmFyIGU9YS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWMoZSxiKX19ZnVuY3Rpb24gZChjKXtpZihjIGluc3RhbmNlb2YgYS53cmFwcGVycy5XaW5kb3csYy50cmVlU2NvcGVfKXJldHVybiBjLnRyZWVTY29wZV87dmFyIGUsZj1jLnBhcmVudE5vZGU7cmV0dXJuIGU9Zj9kKGYpOm5ldyBiKGMsbnVsbCksYy50cmVlU2NvcGVfPWV9Yi5wcm90b3R5cGU9e2dldCByZW5kZXJlcigpe3JldHVybiB0aGlzLnJvb3QgaW5zdGFuY2VvZiBhLndyYXBwZXJzLlNoYWRvd1Jvb3Q/YS5nZXRSZW5kZXJlckZvckhvc3QodGhpcy5yb290Lmhvc3QpOm51bGx9LGNvbnRhaW5zOmZ1bmN0aW9uKGEpe2Zvcig7YTthPWEucGFyZW50KWlmKGE9PT10aGlzKXJldHVybiEwO3JldHVybiExfX0sYS5UcmVlU2NvcGU9YixhLmdldFRyZWVTY29wZT1kLGEuc2V0VHJlZVNjb3BlPWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBTLlNoYWRvd1Jvb3R9ZnVuY3Rpb24gYyhhKXtyZXR1cm4gTChhKS5yb290fWZ1bmN0aW9uIGQoYSxkKXt2YXIgaD1bXSxpPWE7Zm9yKGgucHVzaChpKTtpOyl7dmFyIGo9ZyhpKTtpZihqJiZqLmxlbmd0aD4wKXtmb3IodmFyIGs9MDtrPGoubGVuZ3RoO2srKyl7dmFyIG09altrXTtpZihmKG0pKXt2YXIgbj1jKG0pLG89bi5vbGRlclNoYWRvd1Jvb3Q7byYmaC5wdXNoKG8pfWgucHVzaChtKX1pPWpbai5sZW5ndGgtMV19ZWxzZSBpZihiKGkpKXtpZihsKGEsaSkmJmUoZCkpYnJlYWs7aT1pLmhvc3QsaC5wdXNoKGkpfWVsc2UgaT1pLnBhcmVudE5vZGUsaSYmaC5wdXNoKGkpfXJldHVybiBofWZ1bmN0aW9uIGUoYSl7aWYoIWEpcmV0dXJuITE7c3dpdGNoKGEudHlwZSl7Y2FzZSJhYm9ydCI6Y2FzZSJlcnJvciI6Y2FzZSJzZWxlY3QiOmNhc2UiY2hhbmdlIjpjYXNlImxvYWQiOmNhc2UicmVzZXQiOmNhc2UicmVzaXplIjpjYXNlInNjcm9sbCI6Y2FzZSJzZWxlY3RzdGFydCI6cmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gZihhKXtyZXR1cm4gYSBpbnN0YW5jZW9mIEhUTUxTaGFkb3dFbGVtZW50fWZ1bmN0aW9uIGcoYil7cmV0dXJuIGEuZ2V0RGVzdGluYXRpb25JbnNlcnRpb25Qb2ludHMoYil9ZnVuY3Rpb24gaChhLGIpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gYjtiIGluc3RhbmNlb2YgUy5XaW5kb3cmJihiPWIuZG9jdW1lbnQpO2Zvcih2YXIgYz1MKGIpLGQ9YVswXSxlPUwoZCksZj1qKGMsZSksZz0wO2c8YS5sZW5ndGg7ZysrKXt2YXIgaD1hW2ddO2lmKEwoaCk9PT1mKXJldHVybiBofXJldHVybiBhW2EubGVuZ3RoLTFdfWZ1bmN0aW9uIGkoYSl7Zm9yKHZhciBiPVtdO2E7YT1hLnBhcmVudCliLnB1c2goYSk7cmV0dXJuIGJ9ZnVuY3Rpb24gaihhLGIpe2Zvcih2YXIgYz1pKGEpLGQ9aShiKSxlPW51bGw7Yy5sZW5ndGg+MCYmZC5sZW5ndGg+MDspe3ZhciBmPWMucG9wKCksZz1kLnBvcCgpO2lmKGYhPT1nKWJyZWFrO2U9Zn1yZXR1cm4gZX1mdW5jdGlvbiBrKGEsYixjKXtiIGluc3RhbmNlb2YgUy5XaW5kb3cmJihiPWIuZG9jdW1lbnQpO3ZhciBlLGY9TChiKSxnPUwoYyksaD1kKGMsYSksZT1qKGYsZyk7ZXx8KGU9Zy5yb290KTtmb3IodmFyIGk9ZTtpO2k9aS5wYXJlbnQpZm9yKHZhciBrPTA7azxoLmxlbmd0aDtrKyspe3ZhciBsPWhba107aWYoTChsKT09PWkpcmV0dXJuIGx9cmV0dXJuIG51bGx9ZnVuY3Rpb24gbChhLGIpe3JldHVybiBMKGEpPT09TChiKX1mdW5jdGlvbiBtKGEpe2lmKCFVLmdldChhKSYmKFUuc2V0KGEsITApLG4oUihhKSxSKGEudGFyZ2V0KSksSikpe3ZhciBiPUo7dGhyb3cgSj1udWxsLGJ9fWZ1bmN0aW9uIG4oYixjKXtpZihWLmdldChiKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWRTdGF0ZUVycm9yIik7Vi5zZXQoYiwhMCksYS5yZW5kZXJBbGxQZW5kaW5nKCk7dmFyIGUsZixnLGg9Yi50eXBlO2lmKCJsb2FkIj09PWgmJiFiLmJ1YmJsZXMpe3ZhciBpPWM7aSBpbnN0YW5jZW9mIFMuRG9jdW1lbnQmJihnPWkuZGVmYXVsdFZpZXcpJiYoZj1pLGU9W10pfWlmKCFlKWlmKGMgaW5zdGFuY2VvZiBTLldpbmRvdylnPWMsZT1bXTtlbHNlIGlmKGU9ZChjLGIpLCJsb2FkIiE9PWIudHlwZSl7dmFyIGk9ZVtlLmxlbmd0aC0xXTtpIGluc3RhbmNlb2YgUy5Eb2N1bWVudCYmKGc9aS5kZWZhdWx0Vmlldyl9cmV0dXJuIGJiLnNldChiLGUpLG8oYixlLGcsZikmJnAoYixlLGcsZikmJnEoYixlLGcsZiksWi5zZXQoYixjYiksWC5kZWxldGUoYixudWxsKSxWLmRlbGV0ZShiKSxiLmRlZmF1bHRQcmV2ZW50ZWQKfWZ1bmN0aW9uIG8oYSxiLGMsZCl7dmFyIGU9ZGI7aWYoYyYmIXIoYyxhLGUsYixkKSlyZXR1cm4hMTtmb3IodmFyIGY9Yi5sZW5ndGgtMTtmPjA7Zi0tKWlmKCFyKGJbZl0sYSxlLGIsZCkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1lYixmPWJbMF18fGM7cmV0dXJuIHIoZixhLGUsYixkKX1mdW5jdGlvbiBxKGEsYixjLGQpe2Zvcih2YXIgZT1mYixmPTE7ZjxiLmxlbmd0aDtmKyspaWYoIXIoYltmXSxhLGUsYixkKSlyZXR1cm47YyYmYi5sZW5ndGg+MCYmcihjLGEsZSxiLGQpfWZ1bmN0aW9uIHIoYSxiLGMsZCxlKXt2YXIgZj1ULmdldChhKTtpZighZilyZXR1cm4hMDt2YXIgZz1lfHxoKGQsYSk7aWYoZz09PWEpe2lmKGM9PT1kYilyZXR1cm4hMDtjPT09ZmImJihjPWViKX1lbHNlIGlmKGM9PT1mYiYmIWIuYnViYmxlcylyZXR1cm4hMDtpZigicmVsYXRlZFRhcmdldCJpbiBiKXt2YXIgaT1RKGIpLGo9aS5yZWxhdGVkVGFyZ2V0O2lmKGope2lmKGogaW5zdGFuY2VvZiBPYmplY3QmJmouYWRkRXZlbnRMaXN0ZW5lcil7dmFyIGw9UihqKSxtPWsoYixhLGwpO2lmKG09PT1nKXJldHVybiEwfWVsc2UgbT1udWxsO1kuc2V0KGIsbSl9fVouc2V0KGIsYyk7dmFyIG49Yi50eXBlLG89ITE7Vy5zZXQoYixnKSxYLnNldChiLGEpLGYuZGVwdGgrKztmb3IodmFyIHA9MCxxPWYubGVuZ3RoO3E+cDtwKyspe3ZhciByPWZbcF07aWYoci5yZW1vdmVkKW89ITA7ZWxzZSBpZighKHIudHlwZSE9PW58fCFyLmNhcHR1cmUmJmM9PT1kYnx8ci5jYXB0dXJlJiZjPT09ZmIpKXRyeXtpZigiZnVuY3Rpb24iPT10eXBlb2Ygci5oYW5kbGVyP3IuaGFuZGxlci5jYWxsKGEsYik6ci5oYW5kbGVyLmhhbmRsZUV2ZW50KGIpLF8uZ2V0KGIpKXJldHVybiExfWNhdGNoKHMpe0p8fChKPXMpfX1pZihmLmRlcHRoLS0sbyYmMD09PWYuZGVwdGgpe3ZhciB0PWYuc2xpY2UoKTtmLmxlbmd0aD0wO2Zvcih2YXIgcD0wO3A8dC5sZW5ndGg7cCsrKXRbcF0ucmVtb3ZlZHx8Zi5wdXNoKHRbcF0pfXJldHVybiEkLmdldChiKX1mdW5jdGlvbiBzKGEsYixjKXt0aGlzLnR5cGU9YSx0aGlzLmhhbmRsZXI9Yix0aGlzLmNhcHR1cmU9Qm9vbGVhbihjKX1mdW5jdGlvbiB0KGEsYil7aWYoIShhIGluc3RhbmNlb2YgZ2IpKXJldHVybiBSKHgoZ2IsIkV2ZW50IixhLGIpKTt2YXIgYz1hO3JldHVybiByYnx8ImJlZm9yZXVubG9hZCIhPT1jLnR5cGU/dm9pZCBPKGMsdGhpcyk6bmV3IHkoYyl9ZnVuY3Rpb24gdShhKXtyZXR1cm4gYSYmYS5yZWxhdGVkVGFyZ2V0P09iamVjdC5jcmVhdGUoYSx7cmVsYXRlZFRhcmdldDp7dmFsdWU6UShhLnJlbGF0ZWRUYXJnZXQpfX0pOmF9ZnVuY3Rpb24gdihhLGIsYyl7dmFyIGQ9d2luZG93W2FdLGU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gYiBpbnN0YW5jZW9mIGQ/dm9pZCBPKGIsdGhpcyk6Uih4KGQsYSxiLGMpKX07aWYoZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShiLnByb3RvdHlwZSksYyYmTShlLnByb3RvdHlwZSxjKSxkKXRyeXtOKGQsZSxuZXcgZCgidGVtcCIpKX1jYXRjaChmKXtOKGQsZSxkb2N1bWVudC5jcmVhdGVFdmVudChhKSl9cmV0dXJuIGV9ZnVuY3Rpb24gdyhhLGIpe3JldHVybiBmdW5jdGlvbigpe2FyZ3VtZW50c1tiXT1RKGFyZ3VtZW50c1tiXSk7dmFyIGM9USh0aGlzKTtjW2FdLmFwcGx5KGMsYXJndW1lbnRzKX19ZnVuY3Rpb24geChhLGIsYyxkKXtpZihwYilyZXR1cm4gbmV3IGEoYyx1KGQpKTt2YXIgZT1RKGRvY3VtZW50LmNyZWF0ZUV2ZW50KGIpKSxmPW9iW2JdLGc9W2NdO3JldHVybiBPYmplY3Qua2V5cyhmKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPW51bGwhPWQmJmEgaW4gZD9kW2FdOmZbYV07InJlbGF0ZWRUYXJnZXQiPT09YSYmKGI9UShiKSksZy5wdXNoKGIpfSksZVsiaW5pdCIrYl0uYXBwbHkoZSxnKSxlfWZ1bmN0aW9uIHkoYSl7dC5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24geihhKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgYT8hMDphJiZhLmhhbmRsZUV2ZW50fWZ1bmN0aW9uIEEoYSl7c3dpdGNoKGEpe2Nhc2UiRE9NQXR0ck1vZGlmaWVkIjpjYXNlIkRPTUF0dHJpYnV0ZU5hbWVDaGFuZ2VkIjpjYXNlIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCI6Y2FzZSJET01FbGVtZW50TmFtZUNoYW5nZWQiOmNhc2UiRE9NTm9kZUluc2VydGVkIjpjYXNlIkRPTU5vZGVJbnNlcnRlZEludG9Eb2N1bWVudCI6Y2FzZSJET01Ob2RlUmVtb3ZlZCI6Y2FzZSJET01Ob2RlUmVtb3ZlZEZyb21Eb2N1bWVudCI6Y2FzZSJET01TdWJ0cmVlTW9kaWZpZWQiOnJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIEIoYSl7TyhhLHRoaXMpfWZ1bmN0aW9uIEMoYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiBTLlNoYWRvd1Jvb3QmJihhPWEuaG9zdCksUShhKX1mdW5jdGlvbiBEKGEsYil7dmFyIGM9VC5nZXQoYSk7aWYoYylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKylpZighY1tkXS5yZW1vdmVkJiZjW2RdLnR5cGU9PT1iKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIEUoYSxiKXtmb3IodmFyIGM9UShhKTtjO2M9Yy5wYXJlbnROb2RlKWlmKEQoUihjKSxiKSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBGKGEpe0soYSx0Yil9ZnVuY3Rpb24gRyhiLGMsZSxmKXthLnJlbmRlckFsbFBlbmRpbmcoKTt2YXIgZz1SKHViLmNhbGwoUChjKSxlLGYpKTtpZighZylyZXR1cm4gbnVsbDt2YXIgaT1kKGcsbnVsbCksaj1pLmxhc3RJbmRleE9mKGIpO3JldHVybi0xPT1qP251bGw6KGk9aS5zbGljZSgwLGopLGgoaSxiKSl9ZnVuY3Rpb24gSChhKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYj1hYi5nZXQodGhpcyk7cmV0dXJuIGImJmJbYV0mJmJbYV0udmFsdWV8fG51bGx9fWZ1bmN0aW9uIEkoYSl7dmFyIGI9YS5zbGljZSgyKTtyZXR1cm4gZnVuY3Rpb24oYyl7dmFyIGQ9YWIuZ2V0KHRoaXMpO2R8fChkPU9iamVjdC5jcmVhdGUobnVsbCksYWIuc2V0KHRoaXMsZCkpO3ZhciBlPWRbYV07aWYoZSYmdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGIsZS53cmFwcGVkLCExKSwiZnVuY3Rpb24iPT10eXBlb2YgYyl7dmFyIGY9ZnVuY3Rpb24oYil7dmFyIGQ9Yy5jYWxsKHRoaXMsYik7ZD09PSExP2IucHJldmVudERlZmF1bHQoKToib25iZWZvcmV1bmxvYWQiPT09YSYmInN0cmluZyI9PXR5cGVvZiBkJiYoYi5yZXR1cm5WYWx1ZT1kKX07dGhpcy5hZGRFdmVudExpc3RlbmVyKGIsZiwhMSksZFthXT17dmFsdWU6Yyx3cmFwcGVkOmZ9fX19dmFyIEosSz1hLmZvcndhcmRNZXRob2RzVG9XcmFwcGVyLEw9YS5nZXRUcmVlU2NvcGUsTT1hLm1peGluLE49YS5yZWdpc3RlcldyYXBwZXIsTz1hLnNldFdyYXBwZXIsUD1hLnVuc2FmZVVud3JhcCxRPWEudW53cmFwLFI9YS53cmFwLFM9YS53cmFwcGVycyxUPShuZXcgV2Vha01hcCxuZXcgV2Vha01hcCksVT1uZXcgV2Vha01hcCxWPW5ldyBXZWFrTWFwLFc9bmV3IFdlYWtNYXAsWD1uZXcgV2Vha01hcCxZPW5ldyBXZWFrTWFwLFo9bmV3IFdlYWtNYXAsJD1uZXcgV2Vha01hcCxfPW5ldyBXZWFrTWFwLGFiPW5ldyBXZWFrTWFwLGJiPW5ldyBXZWFrTWFwLGNiPTAsZGI9MSxlYj0yLGZiPTM7cy5wcm90b3R5cGU9e2VxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oYW5kbGVyPT09YS5oYW5kbGVyJiZ0aGlzLnR5cGU9PT1hLnR5cGUmJnRoaXMuY2FwdHVyZT09PWEuY2FwdHVyZX0sZ2V0IHJlbW92ZWQoKXtyZXR1cm4gbnVsbD09PXRoaXMuaGFuZGxlcn0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5oYW5kbGVyPW51bGx9fTt2YXIgZ2I9d2luZG93LkV2ZW50O2diLnByb3RvdHlwZS5wb2x5bWVyQmxhY2tMaXN0Xz17cmV0dXJuVmFsdWU6ITAsa2V5TG9jYXRpb246ITB9LHQucHJvdG90eXBlPXtnZXQgdGFyZ2V0KCl7cmV0dXJuIFcuZ2V0KHRoaXMpfSxnZXQgY3VycmVudFRhcmdldCgpe3JldHVybiBYLmdldCh0aGlzKX0sZ2V0IGV2ZW50UGhhc2UoKXtyZXR1cm4gWi5nZXQodGhpcyl9LGdldCBwYXRoKCl7dmFyIGE9YmIuZ2V0KHRoaXMpO3JldHVybiBhP2Euc2xpY2UoKTpbXX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7JC5zZXQodGhpcywhMCl9LHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjpmdW5jdGlvbigpeyQuc2V0KHRoaXMsITApLF8uc2V0KHRoaXMsITApfX0sTihnYix0LGRvY3VtZW50LmNyZWF0ZUV2ZW50KCJFdmVudCIpKTt2YXIgaGI9digiVUlFdmVudCIsdCksaWI9digiQ3VzdG9tRXZlbnQiLHQpLGpiPXtnZXQgcmVsYXRlZFRhcmdldCgpe3ZhciBhPVkuZ2V0KHRoaXMpO3JldHVybiB2b2lkIDAhPT1hP2E6UihRKHRoaXMpLnJlbGF0ZWRUYXJnZXQpfX0sa2I9TSh7aW5pdE1vdXNlRXZlbnQ6dygiaW5pdE1vdXNlRXZlbnQiLDE0KX0samIpLGxiPU0oe2luaXRGb2N1c0V2ZW50OncoImluaXRGb2N1c0V2ZW50Iiw1KX0samIpLG1iPXYoIk1vdXNlRXZlbnQiLGhiLGtiKSxuYj12KCJGb2N1c0V2ZW50IixoYixsYiksb2I9T2JqZWN0LmNyZWF0ZShudWxsKSxwYj1mdW5jdGlvbigpe3RyeXtuZXcgd2luZG93LkZvY3VzRXZlbnQoImZvY3VzIil9Y2F0Y2goYSl7cmV0dXJuITF9cmV0dXJuITB9KCk7aWYoIXBiKXt2YXIgcWI9ZnVuY3Rpb24oYSxiLGMpe2lmKGMpe3ZhciBkPW9iW2NdO2I9TShNKHt9LGQpLGIpfW9iW2FdPWJ9O3FiKCJFdmVudCIse2J1YmJsZXM6ITEsY2FuY2VsYWJsZTohMX0pLHFiKCJDdXN0b21FdmVudCIse2RldGFpbDpudWxsfSwiRXZlbnQiKSxxYigiVUlFdmVudCIse3ZpZXc6bnVsbCxkZXRhaWw6MH0sIkV2ZW50IikscWIoIk1vdXNlRXZlbnQiLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAsY3RybEtleTohMSxhbHRLZXk6ITEsc2hpZnRLZXk6ITEsbWV0YUtleTohMSxidXR0b246MCxyZWxhdGVkVGFyZ2V0Om51bGx9LCJVSUV2ZW50IikscWIoIkZvY3VzRXZlbnQiLHtyZWxhdGVkVGFyZ2V0Om51bGx9LCJVSUV2ZW50Iil9dmFyIHJiPXdpbmRvdy5CZWZvcmVVbmxvYWRFdmVudDt5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQucHJvdG90eXBlKSxNKHkucHJvdG90eXBlLHtnZXQgcmV0dXJuVmFsdWUoKXtyZXR1cm4gUCh0aGlzKS5yZXR1cm5WYWx1ZX0sc2V0IHJldHVyblZhbHVlKGEpe1AodGhpcykucmV0dXJuVmFsdWU9YX19KSxyYiYmTihyYix5KTt2YXIgc2I9d2luZG93LkV2ZW50VGFyZ2V0LHRiPVsiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwYXRjaEV2ZW50Il07W05vZGUsV2luZG93XS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucHJvdG90eXBlO3RiLmZvckVhY2goZnVuY3Rpb24oYSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGIsYSsiXyIse3ZhbHVlOmJbYV19KX0pfSksQi5wcm90b3R5cGU9e2FkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiLGMpe2lmKHooYikmJiFBKGEpKXt2YXIgZD1uZXcgcyhhLGIsYyksZT1ULmdldCh0aGlzKTtpZihlKXtmb3IodmFyIGY9MDtmPGUubGVuZ3RoO2YrKylpZihkLmVxdWFscyhlW2ZdKSlyZXR1cm59ZWxzZSBlPVtdLGUuZGVwdGg9MCxULnNldCh0aGlzLGUpO2UucHVzaChkKTt2YXIgZz1DKHRoaXMpO2cuYWRkRXZlbnRMaXN0ZW5lcl8oYSxtLCEwKX19LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiLGMpe2M9Qm9vbGVhbihjKTt2YXIgZD1ULmdldCh0aGlzKTtpZihkKXtmb3IodmFyIGU9MCxmPSExLGc9MDtnPGQubGVuZ3RoO2crKylkW2ddLnR5cGU9PT1hJiZkW2ddLmNhcHR1cmU9PT1jJiYoZSsrLGRbZ10uaGFuZGxlcj09PWImJihmPSEwLGRbZ10ucmVtb3ZlKCkpKTtpZihmJiYxPT09ZSl7dmFyIGg9Qyh0aGlzKTtoLnJlbW92ZUV2ZW50TGlzdGVuZXJfKGEsbSwhMCl9fX0sZGlzcGF0Y2hFdmVudDpmdW5jdGlvbihiKXt2YXIgYz1RKGIpLGQ9Yy50eXBlO1Uuc2V0KGMsITEpLGEucmVuZGVyQWxsUGVuZGluZygpO3ZhciBlO0UodGhpcyxkKXx8KGU9ZnVuY3Rpb24oKXt9LHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihkLGUsITApKTt0cnl7cmV0dXJuIFEodGhpcykuZGlzcGF0Y2hFdmVudF8oYyl9ZmluYWxseXtlJiZ0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZCxlLCEwKX19fSxzYiYmTihzYixCKTt2YXIgdWI9ZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludDthLmVsZW1lbnRGcm9tUG9pbnQ9RyxhLmdldEV2ZW50SGFuZGxlckdldHRlcj1ILGEuZ2V0RXZlbnRIYW5kbGVyU2V0dGVyPUksYS53cmFwRXZlbnRUYXJnZXRNZXRob2RzPUYsYS53cmFwcGVycy5CZWZvcmVVbmxvYWRFdmVudD15LGEud3JhcHBlcnMuQ3VzdG9tRXZlbnQ9aWIsYS53cmFwcGVycy5FdmVudD10LGEud3JhcHBlcnMuRXZlbnRUYXJnZXQ9QixhLndyYXBwZXJzLkZvY3VzRXZlbnQ9bmIsYS53cmFwcGVycy5Nb3VzZUV2ZW50PW1iLGEud3JhcHBlcnMuVUlFdmVudD1oYn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIscCl9ZnVuY3Rpb24gYyhhKXtqKGEsdGhpcyl9ZnVuY3Rpb24gZCgpe3RoaXMubGVuZ3RoPTAsYih0aGlzLCJsZW5ndGgiKX1mdW5jdGlvbiBlKGEpe2Zvcih2YXIgYj1uZXcgZCxlPTA7ZTxhLmxlbmd0aDtlKyspYltlXT1uZXcgYyhhW2VdKTtyZXR1cm4gYi5sZW5ndGg9ZSxifWZ1bmN0aW9uIGYoYSl7Zy5jYWxsKHRoaXMsYSl9dmFyIGc9YS53cmFwcGVycy5VSUV2ZW50LGg9YS5taXhpbixpPWEucmVnaXN0ZXJXcmFwcGVyLGo9YS5zZXRXcmFwcGVyLGs9YS51bnNhZmVVbndyYXAsbD1hLndyYXAsbT13aW5kb3cuVG91Y2hFdmVudDtpZihtKXt2YXIgbjt0cnl7bj1kb2N1bWVudC5jcmVhdGVFdmVudCgiVG91Y2hFdmVudCIpfWNhdGNoKG8pe3JldHVybn12YXIgcD17ZW51bWVyYWJsZTohMX07Yy5wcm90b3R5cGU9e2dldCB0YXJnZXQoKXtyZXR1cm4gbChrKHRoaXMpLnRhcmdldCl9fTt2YXIgcT17Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0Om51bGx9O1siY2xpZW50WCIsImNsaWVudFkiLCJzY3JlZW5YIiwic2NyZWVuWSIsInBhZ2VYIiwicGFnZVkiLCJpZGVudGlmaWVyIiwid2Via2l0UmFkaXVzWCIsIndlYmtpdFJhZGl1c1kiLCJ3ZWJraXRSb3RhdGlvbkFuZ2xlIiwid2Via2l0Rm9yY2UiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3EuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGsodGhpcylbYV19LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjLnByb3RvdHlwZSxhLHEpfSksZC5wcm90b3R5cGU9e2l0ZW06ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19fSxmLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGcucHJvdG90eXBlKSxoKGYucHJvdG90eXBlLHtnZXQgdG91Y2hlcygpe3JldHVybiBlKGsodGhpcykudG91Y2hlcyl9LGdldCB0YXJnZXRUb3VjaGVzKCl7cmV0dXJuIGUoayh0aGlzKS50YXJnZXRUb3VjaGVzKX0sZ2V0IGNoYW5nZWRUb3VjaGVzKCl7cmV0dXJuIGUoayh0aGlzKS5jaGFuZ2VkVG91Y2hlcyl9LGluaXRUb3VjaEV2ZW50OmZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJOb3QgaW1wbGVtZW50ZWQiKX19KSxpKG0sZixuKSxhLndyYXBwZXJzLlRvdWNoPWMsYS53cmFwcGVycy5Ub3VjaEV2ZW50PWYsYS53cmFwcGVycy5Ub3VjaExpc3Q9ZH19KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSxiKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLGgpfWZ1bmN0aW9uIGMoKXt0aGlzLmxlbmd0aD0wLGIodGhpcywibGVuZ3RoIil9ZnVuY3Rpb24gZChhKXtpZihudWxsPT1hKXJldHVybiBhO2Zvcih2YXIgYj1uZXcgYyxkPTAsZT1hLmxlbmd0aDtlPmQ7ZCsrKWJbZF09ZyhhW2RdKTtyZXR1cm4gYi5sZW5ndGg9ZSxifWZ1bmN0aW9uIGUoYSxiKXthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3JldHVybiBkKGYodGhpcylbYl0uYXBwbHkoZih0aGlzKSxhcmd1bWVudHMpKX19dmFyIGY9YS51bnNhZmVVbndyYXAsZz1hLndyYXAsaD17ZW51bWVyYWJsZTohMX07Yy5wcm90b3R5cGU9e2l0ZW06ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19fSxiKGMucHJvdG90eXBlLCJpdGVtIiksYS53cmFwcGVycy5Ob2RlTGlzdD1jLGEuYWRkV3JhcE5vZGVMaXN0TWV0aG9kPWUsYS53cmFwTm9kZUxpc3Q9ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7YS53cmFwSFRNTENvbGxlY3Rpb249YS53cmFwTm9kZUxpc3QsYS53cmFwcGVycy5IVE1MQ29sbGVjdGlvbj1hLndyYXBwZXJzLk5vZGVMaXN0fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe0EoYSBpbnN0YW5jZW9mIHcpfWZ1bmN0aW9uIGMoYSl7dmFyIGI9bmV3IHk7cmV0dXJuIGJbMF09YSxiLmxlbmd0aD0xLGJ9ZnVuY3Rpb24gZChhLGIsYyl7QyhiLCJjaGlsZExpc3QiLHtyZW1vdmVkTm9kZXM6YyxwcmV2aW91c1NpYmxpbmc6YS5wcmV2aW91c1NpYmxpbmcsbmV4dFNpYmxpbmc6YS5uZXh0U2libGluZ30pfWZ1bmN0aW9uIGUoYSxiKXtDKGEsImNoaWxkTGlzdCIse3JlbW92ZWROb2RlczpifSl9ZnVuY3Rpb24gZihhLGIsZCxlKXtpZihhIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCl7dmFyIGY9aChhKTtQPSEwO2Zvcih2YXIgZz1mLmxlbmd0aC0xO2c+PTA7Zy0tKWEucmVtb3ZlQ2hpbGQoZltnXSksZltnXS5wYXJlbnROb2RlXz1iO1A9ITE7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspZltnXS5wcmV2aW91c1NpYmxpbmdfPWZbZy0xXXx8ZCxmW2ddLm5leHRTaWJsaW5nXz1mW2crMV18fGU7cmV0dXJuIGQmJihkLm5leHRTaWJsaW5nXz1mWzBdKSxlJiYoZS5wcmV2aW91c1NpYmxpbmdfPWZbZi5sZW5ndGgtMV0pLGZ9dmFyIGY9YyhhKSxpPWEucGFyZW50Tm9kZTtyZXR1cm4gaSYmaS5yZW1vdmVDaGlsZChhKSxhLnBhcmVudE5vZGVfPWIsYS5wcmV2aW91c1NpYmxpbmdfPWQsYS5uZXh0U2libGluZ189ZSxkJiYoZC5uZXh0U2libGluZ189YSksZSYmKGUucHJldmlvdXNTaWJsaW5nXz1hKSxmfWZ1bmN0aW9uIGcoYSl7aWYoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpcmV0dXJuIGgoYSk7dmFyIGI9YyhhKSxlPWEucGFyZW50Tm9kZTtyZXR1cm4gZSYmZChhLGUsYiksYn1mdW5jdGlvbiBoKGEpe2Zvcih2YXIgYj1uZXcgeSxjPTAsZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpYltjKytdPWQ7cmV0dXJuIGIubGVuZ3RoPWMsZShhLGIpLGJ9ZnVuY3Rpb24gaShhKXtyZXR1cm4gYX1mdW5jdGlvbiBqKGEsYil7SShhLGIpLGEubm9kZUlzSW5zZXJ0ZWRfKCl9ZnVuY3Rpb24gayhhLGIpe2Zvcih2YXIgYz1EKGIpLGQ9MDtkPGEubGVuZ3RoO2QrKylqKGFbZF0sYyl9ZnVuY3Rpb24gbChhKXtJKGEsbmV3IHooYSxudWxsKSl9ZnVuY3Rpb24gbShhKXtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKylsKGFbYl0pfWZ1bmN0aW9uIG4oYSxiKXt2YXIgYz1hLm5vZGVUeXBlPT09dy5ET0NVTUVOVF9OT0RFP2E6YS5vd25lckRvY3VtZW50O2MhPT1iLm93bmVyRG9jdW1lbnQmJmMuYWRvcHROb2RlKGIpfWZ1bmN0aW9uIG8oYixjKXtpZihjLmxlbmd0aCl7dmFyIGQ9Yi5vd25lckRvY3VtZW50O2lmKGQhPT1jWzBdLm93bmVyRG9jdW1lbnQpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYS5hZG9wdE5vZGVOb1JlbW92ZShjW2VdLGQpfX1mdW5jdGlvbiBwKGEsYil7byhhLGIpO3ZhciBjPWIubGVuZ3RoO2lmKDE9PT1jKXJldHVybiBLKGJbMF0pO2Zvcih2YXIgZD1LKGEub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpLGU9MDtjPmU7ZSsrKWQuYXBwZW5kQ2hpbGQoSyhiW2VdKSk7cmV0dXJuIGR9ZnVuY3Rpb24gcShhKXtpZih2b2lkIDAhPT1hLmZpcnN0Q2hpbGRfKWZvcih2YXIgYj1hLmZpcnN0Q2hpbGRfO2I7KXt2YXIgYz1iO2I9Yi5uZXh0U2libGluZ18sYy5wYXJlbnROb2RlXz1jLnByZXZpb3VzU2libGluZ189Yy5uZXh0U2libGluZ189dm9pZCAwfWEuZmlyc3RDaGlsZF89YS5sYXN0Q2hpbGRfPXZvaWQgMH1mdW5jdGlvbiByKGEpe2lmKGEuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe2Zvcih2YXIgYj1hLmZpcnN0Q2hpbGQ7Yjspe0EoYi5wYXJlbnROb2RlPT09YSk7dmFyIGM9Yi5uZXh0U2libGluZyxkPUsoYiksZT1kLnBhcmVudE5vZGU7ZSYmVy5jYWxsKGUsZCksYi5wcmV2aW91c1NpYmxpbmdfPWIubmV4dFNpYmxpbmdfPWIucGFyZW50Tm9kZV89bnVsbCxiPWN9YS5maXJzdENoaWxkXz1hLmxhc3RDaGlsZF89bnVsbH1lbHNlIGZvcih2YXIgYyxmPUsoYSksZz1mLmZpcnN0Q2hpbGQ7ZzspYz1nLm5leHRTaWJsaW5nLFcuY2FsbChmLGcpLGc9Y31mdW5jdGlvbiBzKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmYi5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX1mdW5jdGlvbiB0KGEpe2Zvcih2YXIgYixjPTA7YzxhLmxlbmd0aDtjKyspYj1hW2NdLGIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKX1mdW5jdGlvbiB1KGEsYixjKXt2YXIgZDtpZihkPU0oYz9RLmNhbGwoYyxKKGEpLCExKTpSLmNhbGwoSihhKSwhMSkpLGIpe2Zvcih2YXIgZT1hLmZpcnN0Q2hpbGQ7ZTtlPWUubmV4dFNpYmxpbmcpZC5hcHBlbmRDaGlsZCh1KGUsITAsYykpO2lmKGEgaW5zdGFuY2VvZiBPLkhUTUxUZW1wbGF0ZUVsZW1lbnQpZm9yKHZhciBmPWQuY29udGVudCxlPWEuY29udGVudC5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWYuYXBwZW5kQ2hpbGQodShlLCEwLGMpKX1yZXR1cm4gZH1mdW5jdGlvbiB2KGEsYil7aWYoIWJ8fEQoYSkhPT1EKGIpKXJldHVybiExO2Zvcih2YXIgYz1iO2M7Yz1jLnBhcmVudE5vZGUpaWYoYz09PWEpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gdyhhKXtBKGEgaW5zdGFuY2VvZiBTKSx4LmNhbGwodGhpcyxhKSx0aGlzLnBhcmVudE5vZGVfPXZvaWQgMCx0aGlzLmZpcnN0Q2hpbGRfPXZvaWQgMCx0aGlzLmxhc3RDaGlsZF89dm9pZCAwLHRoaXMubmV4dFNpYmxpbmdfPXZvaWQgMCx0aGlzLnByZXZpb3VzU2libGluZ189dm9pZCAwLHRoaXMudHJlZVNjb3BlXz12b2lkIDB9dmFyIHg9YS53cmFwcGVycy5FdmVudFRhcmdldCx5PWEud3JhcHBlcnMuTm9kZUxpc3Qsej1hLlRyZWVTY29wZSxBPWEuYXNzZXJ0LEI9YS5kZWZpbmVXcmFwR2V0dGVyLEM9YS5lbnF1ZXVlTXV0YXRpb24sRD1hLmdldFRyZWVTY29wZSxFPWEuaXNXcmFwcGVyLEY9YS5taXhpbixHPWEucmVnaXN0ZXJUcmFuc2llbnRPYnNlcnZlcnMsSD1hLnJlZ2lzdGVyV3JhcHBlcixJPWEuc2V0VHJlZVNjb3BlLEo9YS51bnNhZmVVbndyYXAsSz1hLnVud3JhcCxMPWEudW53cmFwSWZOZWVkZWQsTT1hLndyYXAsTj1hLndyYXBJZk5lZWRlZCxPPWEud3JhcHBlcnMsUD0hMSxRPWRvY3VtZW50LmltcG9ydE5vZGUsUj13aW5kb3cuTm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlLFM9d2luZG93Lk5vZGUsVD13aW5kb3cuRG9jdW1lbnRGcmFnbWVudCxVPShTLnByb3RvdHlwZS5hcHBlbmRDaGlsZCxTLnByb3RvdHlwZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiksVj1TLnByb3RvdHlwZS5pbnNlcnRCZWZvcmUsVz1TLnByb3RvdHlwZS5yZW1vdmVDaGlsZCxYPVMucHJvdG90eXBlLnJlcGxhY2VDaGlsZCxZPS9UcmlkZW50Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLFo9WT9mdW5jdGlvbihhLGIpe3RyeXtXLmNhbGwoYSxiKX1jYXRjaChjKXtpZighKGEgaW5zdGFuY2VvZiBUKSl0aHJvdyBjfX06ZnVuY3Rpb24oYSxiKXtXLmNhbGwoYSxiKX07dy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh4LnByb3RvdHlwZSksRih3LnByb3RvdHlwZSx7YXBwZW5kQ2hpbGQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKGEsbnVsbCl9LGluc2VydEJlZm9yZTpmdW5jdGlvbihhLGMpe2IoYSk7dmFyIGQ7Yz9FKGMpP2Q9SyhjKTooZD1jLGM9TShkKSk6KGM9bnVsbCxkPW51bGwpLGMmJkEoYy5wYXJlbnROb2RlPT09dGhpcyk7dmFyIGUsaD1jP2MucHJldmlvdXNTaWJsaW5nOnRoaXMubGFzdENoaWxkLGk9IXRoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkmJiFzKGEpO2lmKGU9aT9nKGEpOmYoYSx0aGlzLGgsYyksaSluKHRoaXMsYSkscSh0aGlzKSxWLmNhbGwoSih0aGlzKSxLKGEpLGQpO2Vsc2V7aHx8KHRoaXMuZmlyc3RDaGlsZF89ZVswXSksY3x8KHRoaXMubGFzdENoaWxkXz1lW2UubGVuZ3RoLTFdLHZvaWQgMD09PXRoaXMuZmlyc3RDaGlsZF8mJih0aGlzLmZpcnN0Q2hpbGRfPXRoaXMuZmlyc3RDaGlsZCkpO3ZhciBqPWQ/ZC5wYXJlbnROb2RlOkoodGhpcyk7aj9WLmNhbGwoaixwKHRoaXMsZSksZCk6byh0aGlzLGUpfXJldHVybiBDKHRoaXMsImNoaWxkTGlzdCIse2FkZGVkTm9kZXM6ZSxuZXh0U2libGluZzpjLHByZXZpb3VzU2libGluZzpofSksayhlLHRoaXMpLGF9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKGEpe2lmKGIoYSksYS5wYXJlbnROb2RlIT09dGhpcyl7Zm9yKHZhciBkPSExLGU9KHRoaXMuY2hpbGROb2Rlcyx0aGlzLmZpcnN0Q2hpbGQpO2U7ZT1lLm5leHRTaWJsaW5nKWlmKGU9PT1hKXtkPSEwO2JyZWFrfWlmKCFkKXRocm93IG5ldyBFcnJvcigiTm90Rm91bmRFcnJvciIpfXZhciBmPUsoYSksZz1hLm5leHRTaWJsaW5nLGg9YS5wcmV2aW91c1NpYmxpbmc7aWYodGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSl7dmFyIGk9dGhpcy5maXJzdENoaWxkLGo9dGhpcy5sYXN0Q2hpbGQsaz1mLnBhcmVudE5vZGU7ayYmWihrLGYpLGk9PT1hJiYodGhpcy5maXJzdENoaWxkXz1nKSxqPT09YSYmKHRoaXMubGFzdENoaWxkXz1oKSxoJiYoaC5uZXh0U2libGluZ189ZyksZyYmKGcucHJldmlvdXNTaWJsaW5nXz1oKSxhLnByZXZpb3VzU2libGluZ189YS5uZXh0U2libGluZ189YS5wYXJlbnROb2RlXz12b2lkIDB9ZWxzZSBxKHRoaXMpLFooSih0aGlzKSxmKTtyZXR1cm4gUHx8Qyh0aGlzLCJjaGlsZExpc3QiLHtyZW1vdmVkTm9kZXM6YyhhKSxuZXh0U2libGluZzpnLHByZXZpb3VzU2libGluZzpofSksRyh0aGlzLGEpLGF9LHJlcGxhY2VDaGlsZDpmdW5jdGlvbihhLGQpe2IoYSk7dmFyIGU7aWYoRShkKT9lPUsoZCk6KGU9ZCxkPU0oZSkpLGQucGFyZW50Tm9kZSE9PXRoaXMpdGhyb3cgbmV3IEVycm9yKCJOb3RGb3VuZEVycm9yIik7dmFyIGgsaT1kLm5leHRTaWJsaW5nLGo9ZC5wcmV2aW91c1NpYmxpbmcsbT0hdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSYmIXMoYSk7cmV0dXJuIG0/aD1nKGEpOihpPT09YSYmKGk9YS5uZXh0U2libGluZyksaD1mKGEsdGhpcyxqLGkpKSxtPyhuKHRoaXMsYSkscSh0aGlzKSxYLmNhbGwoSih0aGlzKSxLKGEpLGUpKToodGhpcy5maXJzdENoaWxkPT09ZCYmKHRoaXMuZmlyc3RDaGlsZF89aFswXSksdGhpcy5sYXN0Q2hpbGQ9PT1kJiYodGhpcy5sYXN0Q2hpbGRfPWhbaC5sZW5ndGgtMV0pLGQucHJldmlvdXNTaWJsaW5nXz1kLm5leHRTaWJsaW5nXz1kLnBhcmVudE5vZGVfPXZvaWQgMCxlLnBhcmVudE5vZGUmJlguY2FsbChlLnBhcmVudE5vZGUscCh0aGlzLGgpLGUpKSxDKHRoaXMsImNoaWxkTGlzdCIse2FkZGVkTm9kZXM6aCxyZW1vdmVkTm9kZXM6YyhkKSxuZXh0U2libGluZzppLHByZXZpb3VzU2libGluZzpqfSksbChkKSxrKGgsdGhpcyksZH0sbm9kZUlzSW5zZXJ0ZWRfOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPXRoaXMuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZylhLm5vZGVJc0luc2VydGVkXygpfSxoYXNDaGlsZE5vZGVzOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPT10aGlzLmZpcnN0Q2hpbGR9LGdldCBwYXJlbnROb2RlKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMucGFyZW50Tm9kZV8/dGhpcy5wYXJlbnROb2RlXzpNKEoodGhpcykucGFyZW50Tm9kZSl9LGdldCBmaXJzdENoaWxkKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZmlyc3RDaGlsZF8/dGhpcy5maXJzdENoaWxkXzpNKEoodGhpcykuZmlyc3RDaGlsZCl9LGdldCBsYXN0Q2hpbGQoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5sYXN0Q2hpbGRfP3RoaXMubGFzdENoaWxkXzpNKEoodGhpcykubGFzdENoaWxkKX0sZ2V0IG5leHRTaWJsaW5nKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMubmV4dFNpYmxpbmdfP3RoaXMubmV4dFNpYmxpbmdfOk0oSih0aGlzKS5uZXh0U2libGluZyl9LGdldCBwcmV2aW91c1NpYmxpbmcoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5wcmV2aW91c1NpYmxpbmdfP3RoaXMucHJldmlvdXNTaWJsaW5nXzpNKEoodGhpcykucHJldmlvdXNTaWJsaW5nKX0sZ2V0IHBhcmVudEVsZW1lbnQoKXtmb3IodmFyIGE9dGhpcy5wYXJlbnROb2RlO2EmJmEubm9kZVR5cGUhPT13LkVMRU1FTlRfTk9ERTspYT1hLnBhcmVudE5vZGU7cmV0dXJuIGF9LGdldCB0ZXh0Q29udGVudCgpe2Zvcih2YXIgYT0iIixiPXRoaXMuZmlyc3RDaGlsZDtiO2I9Yi5uZXh0U2libGluZyliLm5vZGVUeXBlIT13LkNPTU1FTlRfTk9ERSYmKGErPWIudGV4dENvbnRlbnQpO3JldHVybiBhfSxzZXQgdGV4dENvbnRlbnQoYSl7dmFyIGI9aSh0aGlzLmNoaWxkTm9kZXMpO2lmKHRoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe2lmKHIodGhpcyksIiIhPT1hKXt2YXIgYz1KKHRoaXMpLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYSk7dGhpcy5hcHBlbmRDaGlsZChjKX19ZWxzZSBxKHRoaXMpLEoodGhpcykudGV4dENvbnRlbnQ9YTt2YXIgZD1pKHRoaXMuY2hpbGROb2Rlcyk7Qyh0aGlzLCJjaGlsZExpc3QiLHthZGRlZE5vZGVzOmQscmVtb3ZlZE5vZGVzOmJ9KSxtKGIpLGsoZCx0aGlzKX0sZ2V0IGNoaWxkTm9kZXMoKXtmb3IodmFyIGE9bmV3IHksYj0wLGM9dGhpcy5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKWFbYisrXT1jO3JldHVybiBhLmxlbmd0aD1iLGF9LGNsb25lTm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gdSh0aGlzLGEpfSxjb250YWluczpmdW5jdGlvbihhKXtyZXR1cm4gdih0aGlzLE4oYSkpfSxjb21wYXJlRG9jdW1lbnRQb3NpdGlvbjpmdW5jdGlvbihhKXtyZXR1cm4gVS5jYWxsKEoodGhpcyksTChhKSl9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe2Zvcih2YXIgYSxiLGM9aSh0aGlzLmNoaWxkTm9kZXMpLGQ9W10sZT0iIixmPTA7ZjxjLmxlbmd0aDtmKyspYj1jW2ZdLGIubm9kZVR5cGU9PT13LlRFWFRfTk9ERT9hfHxiLmRhdGEubGVuZ3RoP2E/KGUrPWIuZGF0YSxkLnB1c2goYikpOmE9Yjp0aGlzLnJlbW92ZU5vZGUoYik6KGEmJmQubGVuZ3RoJiYoYS5kYXRhKz1lLHQoZCkpLGQ9W10sZT0iIixhPW51bGwsYi5jaGlsZE5vZGVzLmxlbmd0aCYmYi5ub3JtYWxpemUoKSk7YSYmZC5sZW5ndGgmJihhLmRhdGErPWUsdChkKSl9fSksQih3LCJvd25lckRvY3VtZW50IiksSChTLHcsZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKSxkZWxldGUgdy5wcm90b3R5cGUucXVlcnlTZWxlY3RvcixkZWxldGUgdy5wcm90b3R5cGUucXVlcnlTZWxlY3RvckFsbCx3LnByb3RvdHlwZT1GKE9iamVjdC5jcmVhdGUoeC5wcm90b3R5cGUpLHcucHJvdG90eXBlKSxhLmNsb25lTm9kZT11LGEubm9kZVdhc0FkZGVkPWosYS5ub2RlV2FzUmVtb3ZlZD1sLGEubm9kZXNXZXJlQWRkZWQ9ayxhLm5vZGVzV2VyZVJlbW92ZWQ9bSxhLnNuYXBzaG90Tm9kZUxpc3Q9aSxhLndyYXBwZXJzLk5vZGU9d30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihiLGMsZCxlKXtmb3IodmFyIGY9bnVsbCxnPW51bGwsaD0wLGk9Yi5sZW5ndGg7aT5oO2grKylmPXMoYltoXSksIWUmJihnPXEoZikucm9vdCkmJmcgaW5zdGFuY2VvZiBhLndyYXBwZXJzLlNoYWRvd1Jvb3R8fChkW2MrK109Zik7cmV0dXJuIGN9ZnVuY3Rpb24gYyhhKXtyZXR1cm4gU3RyaW5nKGEpLnJlcGxhY2UoL1wvZGVlcFwvL2csIiAiKX1mdW5jdGlvbiBkKGEsYil7Zm9yKHZhciBjLGU9YS5maXJzdEVsZW1lbnRDaGlsZDtlOyl7aWYoZS5tYXRjaGVzKGIpKXJldHVybiBlO2lmKGM9ZChlLGIpKXJldHVybiBjO2U9ZS5uZXh0RWxlbWVudFNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZShhLGIpe3JldHVybiBhLm1hdGNoZXMoYil9ZnVuY3Rpb24gZihhLGIsYyl7dmFyIGQ9YS5sb2NhbE5hbWU7cmV0dXJuIGQ9PT1ifHxkPT09YyYmYS5uYW1lc3BhY2VVUkk9PT1EfWZ1bmN0aW9uIGcoKXtyZXR1cm4hMH1mdW5jdGlvbiBoKGEsYixjKXtyZXR1cm4gYS5sb2NhbE5hbWU9PT1jfWZ1bmN0aW9uIGkoYSxiKXtyZXR1cm4gYS5uYW1lc3BhY2VVUkk9PT1ifWZ1bmN0aW9uIGooYSxiLGMpe3JldHVybiBhLm5hbWVzcGFjZVVSST09PWImJmEubG9jYWxOYW1lPT09Y31mdW5jdGlvbiBrKGEsYixjLGQsZSxmKXtmb3IodmFyIGc9YS5maXJzdEVsZW1lbnRDaGlsZDtnOylkKGcsZSxmKSYmKGNbYisrXT1nKSxiPWsoZyxiLGMsZCxlLGYpLGc9Zy5uZXh0RWxlbWVudFNpYmxpbmc7cmV0dXJuIGJ9ZnVuY3Rpb24gbChjLGQsZSxmLGcpe3ZhciBoLGk9cih0aGlzKSxqPXEodGhpcykucm9vdDtpZihqIGluc3RhbmNlb2YgYS53cmFwcGVycy5TaGFkb3dSb290KXJldHVybiBrKHRoaXMsZCxlLGMsZixudWxsKTtpZihpIGluc3RhbmNlb2YgQiloPXcuY2FsbChpLGYpO2Vsc2V7aWYoIShpIGluc3RhbmNlb2YgQykpcmV0dXJuIGsodGhpcyxkLGUsYyxmLG51bGwpO2g9di5jYWxsKGksZil9cmV0dXJuIGIoaCxkLGUsZyl9ZnVuY3Rpb24gbShjLGQsZSxmLGcpe3ZhciBoLGk9cih0aGlzKSxqPXEodGhpcykucm9vdDtpZihqIGluc3RhbmNlb2YgYS53cmFwcGVycy5TaGFkb3dSb290KXJldHVybiBrKHRoaXMsZCxlLGMsZixnKTtpZihpIGluc3RhbmNlb2YgQiloPXkuY2FsbChpLGYsZyk7ZWxzZXtpZighKGkgaW5zdGFuY2VvZiBDKSlyZXR1cm4gayh0aGlzLGQsZSxjLGYsZyk7aD14LmNhbGwoaSxmLGcpfXJldHVybiBiKGgsZCxlLCExKX1mdW5jdGlvbiBuKGMsZCxlLGYsZyl7dmFyIGgsaT1yKHRoaXMpLGo9cSh0aGlzKS5yb290O2lmKGogaW5zdGFuY2VvZiBhLndyYXBwZXJzLlNoYWRvd1Jvb3QpcmV0dXJuIGsodGhpcyxkLGUsYyxmLGcpO2lmKGkgaW5zdGFuY2VvZiBCKWg9QS5jYWxsKGksZixnKTtlbHNle2lmKCEoaSBpbnN0YW5jZW9mIEMpKXJldHVybiBrKHRoaXMsZCxlLGMsZixnKTtoPXouY2FsbChpLGYsZyl9cmV0dXJuIGIoaCxkLGUsITEpfXZhciBvPWEud3JhcHBlcnMuSFRNTENvbGxlY3Rpb24scD1hLndyYXBwZXJzLk5vZGVMaXN0LHE9YS5nZXRUcmVlU2NvcGUscj1hLnVuc2FmZVVud3JhcCxzPWEud3JhcCx0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IsdT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucXVlcnlTZWxlY3Rvcix2PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwsdz1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCx4PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lLHk9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lLHo9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWVOUyxBPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZU5TLEI9d2luZG93LkVsZW1lbnQsQz13aW5kb3cuSFRNTERvY3VtZW50fHx3aW5kb3cuRG9jdW1lbnQsRD0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsRT17cXVlcnlTZWxlY3RvcjpmdW5jdGlvbihiKXt2YXIgZT1jKGIpLGY9ZSE9PWI7Yj1lO3ZhciBnLGg9cih0aGlzKSxpPXEodGhpcykucm9vdDtpZihpIGluc3RhbmNlb2YgYS53cmFwcGVycy5TaGFkb3dSb290KXJldHVybiBkKHRoaXMsYik7aWYoaCBpbnN0YW5jZW9mIEIpZz1zKHUuY2FsbChoLGIpKTtlbHNle2lmKCEoaCBpbnN0YW5jZW9mIEMpKXJldHVybiBkKHRoaXMsYik7Zz1zKHQuY2FsbChoLGIpKX1yZXR1cm4gZyYmIWYmJihpPXEoZykucm9vdCkmJmkgaW5zdGFuY2VvZiBhLndyYXBwZXJzLlNoYWRvd1Jvb3Q/ZCh0aGlzLGIpOmd9LHF1ZXJ5U2VsZWN0b3JBbGw6ZnVuY3Rpb24oYSl7dmFyIGI9YyhhKSxkPWIhPT1hO2E9Yjt2YXIgZj1uZXcgcDtyZXR1cm4gZi5sZW5ndGg9bC5jYWxsKHRoaXMsZSwwLGYsYSxkKSxmfX0sRj17Z2V0RWxlbWVudHNCeVRhZ05hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IG8sYz0iKiI9PT1hP2c6ZjtyZXR1cm4gYi5sZW5ndGg9bS5jYWxsKHRoaXMsYywwLGIsYSxhLnRvTG93ZXJDYXNlKCkpLGJ9LGdldEVsZW1lbnRzQnlDbGFzc05hbWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbCgiLiIrYSl9LGdldEVsZW1lbnRzQnlUYWdOYW1lTlM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZXcgbyxkPW51bGw7cmV0dXJuIGQ9IioiPT09YT8iKiI9PT1iP2c6aDoiKiI9PT1iP2k6aixjLmxlbmd0aD1uLmNhbGwodGhpcyxkLDAsYyxhfHxudWxsLGIpLGN9fTthLkdldEVsZW1lbnRzQnlJbnRlcmZhY2U9RixhLlNlbGVjdG9yc0ludGVyZmFjZT1FfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2Zvcig7YSYmYS5ub2RlVHlwZSE9PU5vZGUuRUxFTUVOVF9OT0RFOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gYyhhKXtmb3IoO2EmJmEubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERTspYT1hLnByZXZpb3VzU2libGluZztyZXR1cm4gYX12YXIgZD1hLndyYXBwZXJzLk5vZGVMaXN0LGU9e2dldCBmaXJzdEVsZW1lbnRDaGlsZCgpe3JldHVybiBiKHRoaXMuZmlyc3RDaGlsZCl9LGdldCBsYXN0RWxlbWVudENoaWxkKCl7cmV0dXJuIGModGhpcy5sYXN0Q2hpbGQpfSxnZXQgY2hpbGRFbGVtZW50Q291bnQoKXtmb3IodmFyIGE9MCxiPXRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7YjtiPWIubmV4dEVsZW1lbnRTaWJsaW5nKWErKztyZXR1cm4gYX0sZ2V0IGNoaWxkcmVuKCl7Zm9yKHZhciBhPW5ldyBkLGI9MCxjPXRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7YztjPWMubmV4dEVsZW1lbnRTaWJsaW5nKWFbYisrXT1jO3JldHVybiBhLmxlbmd0aD1iLGF9LHJlbW92ZTpmdW5jdGlvbigpe3ZhciBhPXRoaXMucGFyZW50Tm9kZTthJiZhLnJlbW92ZUNoaWxkKHRoaXMpfX0sZj17Z2V0IG5leHRFbGVtZW50U2libGluZygpe3JldHVybiBiKHRoaXMubmV4dFNpYmxpbmcpfSxnZXQgcHJldmlvdXNFbGVtZW50U2libGluZygpe3JldHVybiBjKHRoaXMucHJldmlvdXNTaWJsaW5nKX19O2EuQ2hpbGROb2RlSW50ZXJmYWNlPWYsYS5QYXJlbnROb2RlSW50ZXJmYWNlPWV9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7ZC5jYWxsKHRoaXMsYSl9dmFyIGM9YS5DaGlsZE5vZGVJbnRlcmZhY2UsZD1hLndyYXBwZXJzLk5vZGUsZT1hLmVucXVldWVNdXRhdGlvbixmPWEubWl4aW4sZz1hLnJlZ2lzdGVyV3JhcHBlcixoPWEudW5zYWZlVW53cmFwLGk9d2luZG93LkNoYXJhY3RlckRhdGE7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShkLnByb3RvdHlwZSksZihiLnByb3RvdHlwZSx7Z2V0IHRleHRDb250ZW50KCl7cmV0dXJuIHRoaXMuZGF0YX0sc2V0IHRleHRDb250ZW50KGEpe3RoaXMuZGF0YT1hfSxnZXQgZGF0YSgpe3JldHVybiBoKHRoaXMpLmRhdGF9LHNldCBkYXRhKGEpe3ZhciBiPWgodGhpcykuZGF0YTtlKHRoaXMsImNoYXJhY3RlckRhdGEiLHtvbGRWYWx1ZTpifSksaCh0aGlzKS5kYXRhPWF9fSksZihiLnByb3RvdHlwZSxjKSxnKGksYixkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIikpLGEud3JhcHBlcnMuQ2hhcmFjdGVyRGF0YT1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3JldHVybiBhPj4+MH1mdW5jdGlvbiBjKGEpe2QuY2FsbCh0aGlzLGEpfXZhciBkPWEud3JhcHBlcnMuQ2hhcmFjdGVyRGF0YSxlPShhLmVucXVldWVNdXRhdGlvbixhLm1peGluKSxmPWEucmVnaXN0ZXJXcmFwcGVyLGc9d2luZG93LlRleHQ7Yy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShkLnByb3RvdHlwZSksZShjLnByb3RvdHlwZSx7c3BsaXRUZXh0OmZ1bmN0aW9uKGEpe2E9YihhKTt2YXIgYz10aGlzLmRhdGE7aWYoYT5jLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkluZGV4U2l6ZUVycm9yIik7dmFyIGQ9Yy5zbGljZSgwLGEpLGU9Yy5zbGljZShhKTt0aGlzLmRhdGE9ZDt2YXIgZj10aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZSk7cmV0dXJuIHRoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShmLHRoaXMubmV4dFNpYmxpbmcpLGZ9fSksZihnLGMsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpKSxhLndyYXBwZXJzLlRleHQ9Y30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihiKXthLmludmFsaWRhdGVSZW5kZXJlckJhc2VkT25BdHRyaWJ1dGUoYiwiY2xhc3MiKX1mdW5jdGlvbiBjKGEsYil7ZChhLHRoaXMpLHRoaXMub3duZXJFbGVtZW50Xz1ifXZhciBkPWEuc2V0V3JhcHBlcixlPWEudW5zYWZlVW53cmFwO2MucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpjLGdldCBsZW5ndGgoKXtyZXR1cm4gZSh0aGlzKS5sZW5ndGh9LGl0ZW06ZnVuY3Rpb24oYSl7cmV0dXJuIGUodGhpcykuaXRlbShhKX0sY29udGFpbnM6ZnVuY3Rpb24oYSl7cmV0dXJuIGUodGhpcykuY29udGFpbnMoYSl9LGFkZDpmdW5jdGlvbigpe2UodGhpcykuYWRkLmFwcGx5KGUodGhpcyksYXJndW1lbnRzKSxiKHRoaXMub3duZXJFbGVtZW50Xyl9LHJlbW92ZTpmdW5jdGlvbigpe2UodGhpcykucmVtb3ZlLmFwcGx5KGUodGhpcyksYXJndW1lbnRzKSxiKHRoaXMub3duZXJFbGVtZW50Xyl9LHRvZ2dsZTpmdW5jdGlvbigpe3ZhciBhPWUodGhpcykudG9nZ2xlLmFwcGx5KGUodGhpcyksYXJndW1lbnRzKTtyZXR1cm4gYih0aGlzLm93bmVyRWxlbWVudF8pLGF9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcykudG9TdHJpbmcoKX19LGEud3JhcHBlcnMuRE9NVG9rZW5MaXN0PWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYixjKXt2YXIgZD1iLnBhcmVudE5vZGU7aWYoZCYmZC5zaGFkb3dSb290KXt2YXIgZT1hLmdldFJlbmRlcmVyRm9ySG9zdChkKTtlLmRlcGVuZHNPbkF0dHJpYnV0ZShjKSYmZS5pbnZhbGlkYXRlKCl9fWZ1bmN0aW9uIGMoYSxiLGMpe2soYSwiYXR0cmlidXRlcyIse25hbWU6YixuYW1lc3BhY2U6bnVsbCxvbGRWYWx1ZTpjfSl9ZnVuY3Rpb24gZChhKXtnLmNhbGwodGhpcyxhKX12YXIgZT1hLkNoaWxkTm9kZUludGVyZmFjZSxmPWEuR2V0RWxlbWVudHNCeUludGVyZmFjZSxnPWEud3JhcHBlcnMuTm9kZSxoPWEud3JhcHBlcnMuRE9NVG9rZW5MaXN0LGk9YS5QYXJlbnROb2RlSW50ZXJmYWNlLGo9YS5TZWxlY3RvcnNJbnRlcmZhY2Usaz0oYS5hZGRXcmFwTm9kZUxpc3RNZXRob2QsYS5lbnF1ZXVlTXV0YXRpb24pLGw9YS5taXhpbixtPShhLm9uZU9mLGEucmVnaXN0ZXJXcmFwcGVyKSxuPWEudW5zYWZlVW53cmFwLG89YS53cmFwcGVycyxwPXdpbmRvdy5FbGVtZW50LHE9WyJtYXRjaGVzIiwibW96TWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiXS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIHAucHJvdG90eXBlW2FdfSkscj1xWzBdLHM9cC5wcm90b3R5cGVbcl0sdD1uZXcgV2Vha01hcDtkLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGcucHJvdG90eXBlKSxsKGQucHJvdG90eXBlLHtjcmVhdGVTaGFkb3dSb290OmZ1bmN0aW9uKCl7dmFyIGI9bmV3IG8uU2hhZG93Um9vdCh0aGlzKTtuKHRoaXMpLnBvbHltZXJTaGFkb3dSb290Xz1iO3ZhciBjPWEuZ2V0UmVuZGVyZXJGb3JIb3N0KHRoaXMpO3JldHVybiBjLmludmFsaWRhdGUoKSxifSxnZXQgc2hhZG93Um9vdCgpe3JldHVybiBuKHRoaXMpLnBvbHltZXJTaGFkb3dSb290X3x8bnVsbH0sc2V0QXR0cmlidXRlOmZ1bmN0aW9uKGEsZCl7dmFyIGU9bih0aGlzKS5nZXRBdHRyaWJ1dGUoYSk7bih0aGlzKS5zZXRBdHRyaWJ1dGUoYSxkKSxjKHRoaXMsYSxlKSxiKHRoaXMsYSl9LHJlbW92ZUF0dHJpYnV0ZTpmdW5jdGlvbihhKXt2YXIgZD1uKHRoaXMpLmdldEF0dHJpYnV0ZShhKTtuKHRoaXMpLnJlbW92ZUF0dHJpYnV0ZShhKSxjKHRoaXMsYSxkKSxiKHRoaXMsYSl9LG1hdGNoZXM6ZnVuY3Rpb24oYSl7cmV0dXJuIHMuY2FsbChuKHRoaXMpLGEpfSxnZXQgY2xhc3NMaXN0KCl7dmFyIGE9dC5nZXQodGhpcyk7cmV0dXJuIGF8fHQuc2V0KHRoaXMsYT1uZXcgaChuKHRoaXMpLmNsYXNzTGlzdCx0aGlzKSksYX0sZ2V0IGNsYXNzTmFtZSgpe3JldHVybiBuKHRoaXMpLmNsYXNzTmFtZX0sc2V0IGNsYXNzTmFtZShhKXt0aGlzLnNldEF0dHJpYnV0ZSgiY2xhc3MiLGEpfSxnZXQgaWQoKXtyZXR1cm4gbih0aGlzKS5pZH0sc2V0IGlkKGEpe3RoaXMuc2V0QXR0cmlidXRlKCJpZCIsYSl9fSkscS5mb3JFYWNoKGZ1bmN0aW9uKGEpeyJtYXRjaGVzIiE9PWEmJihkLnByb3RvdHlwZVthXT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5tYXRjaGVzKGEpfSl9KSxwLnByb3RvdHlwZS53ZWJraXRDcmVhdGVTaGFkb3dSb290JiYoZC5wcm90b3R5cGUud2Via2l0Q3JlYXRlU2hhZG93Um9vdD1kLnByb3RvdHlwZS5jcmVhdGVTaGFkb3dSb290KSxsKGQucHJvdG90eXBlLGUpLGwoZC5wcm90b3R5cGUsZiksbChkLnByb3RvdHlwZSxpKSxsKGQucHJvdG90eXBlLGopLG0ocCxkLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhudWxsLCJ4IikpLGEuaW52YWxpZGF0ZVJlbmRlcmVyQmFzZWRPbkF0dHJpYnV0ZT1iLGEubWF0Y2hlc05hbWVzPXEsYS53cmFwcGVycy5FbGVtZW50PWR9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7c3dpdGNoKGEpe2Nhc2UiJiI6cmV0dXJuIiZhbXA7IjtjYXNlIjwiOnJldHVybiImbHQ7IjtjYXNlIj4iOnJldHVybiImZ3Q7IjtjYXNlJyInOnJldHVybiImcXVvdDsiO2Nhc2UiXHhhMCI6cmV0dXJuIiZuYnNwOyJ9fWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGEucmVwbGFjZShBLGIpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGEucmVwbGFjZShCLGIpfWZ1bmN0aW9uIGUoYSl7Zm9yKHZhciBiPXt9LGM9MDtjPGEubGVuZ3RoO2MrKyliW2FbY11dPSEwO3JldHVybiBifWZ1bmN0aW9uIGYoYSxiKXtzd2l0Y2goYS5ub2RlVHlwZSl7Y2FzZSBOb2RlLkVMRU1FTlRfTk9ERTpmb3IodmFyIGUsZj1hLnRhZ05hbWUudG9Mb3dlckNhc2UoKSxoPSI8IitmLGk9YS5hdHRyaWJ1dGVzLGo9MDtlPWlbal07aisrKWgrPSIgIitlLm5hbWUrJz0iJytjKGUudmFsdWUpKyciJztyZXR1cm4gaCs9Ij4iLENbZl0/aDpoK2coYSkrIjwvIitmKyI+IjtjYXNlIE5vZGUuVEVYVF9OT0RFOnZhciBrPWEuZGF0YTtyZXR1cm4gYiYmRFtiLmxvY2FsTmFtZV0/azpkKGspO2Nhc2UgTm9kZS5DT01NRU5UX05PREU6cmV0dXJuIjwhLS0iK2EuZGF0YSsiLS0+IjtkZWZhdWx0OnRocm93IGNvbnNvbGUuZXJyb3IoYSksbmV3IEVycm9yKCJub3QgaW1wbGVtZW50ZWQiKX19ZnVuY3Rpb24gZyhhKXthIGluc3RhbmNlb2Ygei5IVE1MVGVtcGxhdGVFbGVtZW50JiYoYT1hLmNvbnRlbnQpO2Zvcih2YXIgYj0iIixjPWEuZmlyc3RDaGlsZDtjO2M9Yy5uZXh0U2libGluZyliKz1mKGMsYSk7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyl7dmFyIGQ9Y3x8ImRpdiI7YS50ZXh0Q29udGVudD0iIjt2YXIgZT14KGEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KGQpKTtlLmlubmVySFRNTD1iO2Zvcih2YXIgZjtmPWUuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZCh5KGYpKX1mdW5jdGlvbiBpKGEpe28uY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIGooYSxiKXt2YXIgYz14KGEuY2xvbmVOb2RlKCExKSk7Yy5pbm5lckhUTUw9Yjtmb3IodmFyIGQsZT14KGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSk7ZD1jLmZpcnN0Q2hpbGQ7KWUuYXBwZW5kQ2hpbGQoZCk7cmV0dXJuIHkoZSl9ZnVuY3Rpb24gayhiKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYS5yZW5kZXJBbGxQZW5kaW5nKCksdyh0aGlzKVtiXX19ZnVuY3Rpb24gbChhKXtwKGksYSxrKGEpKX1mdW5jdGlvbiBtKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLnByb3RvdHlwZSxiLHtnZXQ6ayhiKSxzZXQ6ZnVuY3Rpb24oYyl7YS5yZW5kZXJBbGxQZW5kaW5nKCksdyh0aGlzKVtiXT1jfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIG4oYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGkucHJvdG90eXBlLGIse3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGEucmVuZGVyQWxsUGVuZGluZygpLHcodGhpcylbYl0uYXBwbHkodyh0aGlzKSxhcmd1bWVudHMpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfXZhciBvPWEud3JhcHBlcnMuRWxlbWVudCxwPWEuZGVmaW5lR2V0dGVyLHE9YS5lbnF1ZXVlTXV0YXRpb24scj1hLm1peGluLHM9YS5ub2Rlc1dlcmVBZGRlZCx0PWEubm9kZXNXZXJlUmVtb3ZlZCx1PWEucmVnaXN0ZXJXcmFwcGVyLHY9YS5zbmFwc2hvdE5vZGVMaXN0LHc9YS51bnNhZmVVbndyYXAseD1hLnVud3JhcCx5PWEud3JhcCx6PWEud3JhcHBlcnMsQT0vWyZcdTAwQTAiXS9nLEI9L1smXHUwMEEwPD5dL2csQz1lKFsiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImNvbW1hbmQiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwic291cmNlIiwidHJhY2siLCJ3YnIiXSksRD1lKFsic3R5bGUiLCJzY3JpcHQiLCJ4bXAiLCJpZnJhbWUiLCJub2VtYmVkIiwibm9mcmFtZXMiLCJwbGFpbnRleHQiLCJub3NjcmlwdCJdKSxFPS9NU0lFLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLEY9d2luZG93LkhUTUxFbGVtZW50LEc9d2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQ7aS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShvLnByb3RvdHlwZSkscihpLnByb3RvdHlwZSx7Z2V0IGlubmVySFRNTCgpe3JldHVybiBnKHRoaXMpfSxzZXQgaW5uZXJIVE1MKGEpe2lmKEUmJkRbdGhpcy5sb2NhbE5hbWVdKXJldHVybiB2b2lkKHRoaXMudGV4dENvbnRlbnQ9YSk7dmFyIGI9dih0aGlzLmNoaWxkTm9kZXMpO3RoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCk/dGhpcyBpbnN0YW5jZW9mIHouSFRNTFRlbXBsYXRlRWxlbWVudD9oKHRoaXMuY29udGVudCxhKTpoKHRoaXMsYSx0aGlzLnRhZ05hbWUpOiFHJiZ0aGlzIGluc3RhbmNlb2Ygei5IVE1MVGVtcGxhdGVFbGVtZW50P2godGhpcy5jb250ZW50LGEpOncodGhpcykuaW5uZXJIVE1MPWE7dmFyIGM9dih0aGlzLmNoaWxkTm9kZXMpO3EodGhpcywiY2hpbGRMaXN0Iix7YWRkZWROb2RlczpjLHJlbW92ZWROb2RlczpifSksdChiKSxzKGMsdGhpcyl9LGdldCBvdXRlckhUTUwoKXtyZXR1cm4gZih0aGlzLHRoaXMucGFyZW50Tm9kZSl9LHNldCBvdXRlckhUTUwoYSl7dmFyIGI9dGhpcy5wYXJlbnROb2RlO2lmKGIpe2IuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCk7dmFyIGM9aihiLGEpO2IucmVwbGFjZUNoaWxkKGMsdGhpcyl9fSxpbnNlcnRBZGphY2VudEhUTUw6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkO3N3aXRjaChTdHJpbmcoYSkudG9Mb3dlckNhc2UoKSl7Y2FzZSJiZWZvcmViZWdpbiI6Yz10aGlzLnBhcmVudE5vZGUsZD10aGlzO2JyZWFrO2Nhc2UiYWZ0ZXJlbmQiOmM9dGhpcy5wYXJlbnROb2RlLGQ9dGhpcy5uZXh0U2libGluZzticmVhaztjYXNlImFmdGVyYmVnaW4iOmM9dGhpcyxkPXRoaXMuZmlyc3RDaGlsZDticmVhaztjYXNlImJlZm9yZWVuZCI6Yz10aGlzLGQ9bnVsbDticmVhaztkZWZhdWx0OnJldHVybn12YXIgZT1qKGMsYik7Yy5pbnNlcnRCZWZvcmUoZSxkKX0sZ2V0IGhpZGRlbigpe3JldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgiaGlkZGVuIil9LHNldCBoaWRkZW4oYSl7YT90aGlzLnNldEF0dHJpYnV0ZSgiaGlkZGVuIiwiIik6dGhpcy5yZW1vdmVBdHRyaWJ1dGUoImhpZGRlbiIpfX0pLFsiY2xpZW50SGVpZ2h0IiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsImNsaWVudFdpZHRoIiwib2Zmc2V0SGVpZ2h0Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsIm9mZnNldFdpZHRoIiwic2Nyb2xsSGVpZ2h0Iiwic2Nyb2xsV2lkdGgiXS5mb3JFYWNoKGwpLFsic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCJdLmZvckVhY2gobSksWyJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJnZXRDbGllbnRSZWN0cyIsInNjcm9sbEludG9WaWV3Il0uZm9yRWFjaChuKSx1KEYsaSxkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJiIikpLGEud3JhcHBlcnMuSFRNTEVsZW1lbnQ9aSxhLmdldElubmVySFRNTD1nLGEuc2V0SW5uZXJIVE1MPWh9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW5zYWZlVW53cmFwLGc9YS53cmFwLGg9d2luZG93LkhUTUxDYW52YXNFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldENvbnRleHQ6ZnVuY3Rpb24oKXt2YXIgYT1mKHRoaXMpLmdldENvbnRleHQuYXBwbHkoZih0aGlzKSxhcmd1bWVudHMpO3JldHVybiBhJiZnKGEpfX0pLGUoaCxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpKSxhLndyYXBwZXJzLkhUTUxDYW52YXNFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPXdpbmRvdy5IVE1MQ29udGVudEVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6YixnZXQgc2VsZWN0KCl7cmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCJzZWxlY3QiKX0sc2V0IHNlbGVjdChhKXt0aGlzLnNldEF0dHJpYnV0ZSgic2VsZWN0IixhKX0sc2V0QXR0cmlidXRlOmZ1bmN0aW9uKGEsYil7Yy5wcm90b3R5cGUuc2V0QXR0cmlidXRlLmNhbGwodGhpcyxhLGIpLCJzZWxlY3QiPT09U3RyaW5nKGEpLnRvTG93ZXJDYXNlKCkmJnRoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCEwKX19KSxmJiZlKGYsYiksYS53cmFwcGVycy5IVE1MQ29udGVudEVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwSFRNTENvbGxlY3Rpb24sZz1hLnVud3JhcCxoPXdpbmRvdy5IVE1MRm9ybUVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IGVsZW1lbnRzKCl7cmV0dXJuIGYoZyh0aGlzKS5lbGVtZW50cyl9fSksZShoLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZm9ybSIpKSxhLndyYXBwZXJzLkhUTUxGb3JtRWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2QuY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIGMoYSxiKXtpZighKHRoaXMgaW5zdGFuY2VvZiBjKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJET00gb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi4iKTt2YXIgZT1mKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpKTtkLmNhbGwodGhpcyxlKSxnKGUsdGhpcyksdm9pZCAwIT09YSYmKGUud2lkdGg9YSksdm9pZCAwIT09YiYmKGUuaGVpZ2h0PWIpfXZhciBkPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW53cmFwLGc9YS5yZXdyYXAsaD13aW5kb3cuSFRNTEltYWdlRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxlKGgsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKSksYy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsYS53cmFwcGVycy5IVE1MSW1hZ2VFbGVtZW50PWIsYS53cmFwcGVycy5JbWFnZT1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD0oYS5taXhpbixhLndyYXBwZXJzLk5vZGVMaXN0LGEucmVnaXN0ZXJXcmFwcGVyKSxlPXdpbmRvdy5IVE1MU2hhZG93RWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxiLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1iLGUmJmQoZSxiKSxhLndyYXBwZXJzLkhUTUxTaGFkb3dFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7aWYoIWEuZGVmYXVsdFZpZXcpcmV0dXJuIGE7dmFyIGI9bC5nZXQoYSk7aWYoIWIpe2ZvcihiPWEuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKTtiLmxhc3RDaGlsZDspYi5yZW1vdmVDaGlsZChiLmxhc3RDaGlsZCk7bC5zZXQoYSxiKX1yZXR1cm4gYn1mdW5jdGlvbiBjKGEpe2Zvcih2YXIgYyxkPWIoYS5vd25lckRvY3VtZW50KSxlPWkoZC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO2M9YS5maXJzdENoaWxkOyllLmFwcGVuZENoaWxkKGMpO3JldHVybiBlfWZ1bmN0aW9uIGQoYSl7aWYoZS5jYWxsKHRoaXMsYSksIW0pe3ZhciBiPWMoYSk7ay5zZXQodGhpcyxqKGIpKX19dmFyIGU9YS53cmFwcGVycy5IVE1MRWxlbWVudCxmPWEubWl4aW4sZz1hLnJlZ2lzdGVyV3JhcHBlcixoPWEudW5zYWZlVW53cmFwLGk9YS51bndyYXAsaj1hLndyYXAsaz1uZXcgV2Vha01hcCxsPW5ldyBXZWFrTWFwLG09d2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQ7ZC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksZihkLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6ZCxnZXQgY29udGVudCgpe3JldHVybiBtP2ooaCh0aGlzKS5jb250ZW50KTprLmdldCh0aGlzKX19KSxtJiZnKG0sZCksYS53cmFwcGVycy5IVE1MVGVtcGxhdGVFbGVtZW50PWR9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEucmVnaXN0ZXJXcmFwcGVyLGU9d2luZG93LkhUTUxNZWRpYUVsZW1lbnQ7ZSYmKGIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoZSxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImF1ZGlvIikpLGEud3JhcHBlcnMuSFRNTE1lZGlhRWxlbWVudD1iKX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtkLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBjKGEpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkRPTSBvYmplY3QgY29uc3RydWN0b3IgY2Fubm90IGJlIGNhbGxlZCBhcyBhIGZ1bmN0aW9uLiIpO3ZhciBiPWYoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXVkaW8iKSk7ZC5jYWxsKHRoaXMsYiksZyhiLHRoaXMpLGIuc2V0QXR0cmlidXRlKCJwcmVsb2FkIiwiYXV0byIpLHZvaWQgMCE9PWEmJmIuc2V0QXR0cmlidXRlKCJzcmMiLGEpfXZhciBkPWEud3JhcHBlcnMuSFRNTE1lZGlhRWxlbWVudCxlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS51bndyYXAsZz1hLnJld3JhcCxoPXdpbmRvdy5IVE1MQXVkaW9FbGVtZW50O2gmJihiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxlKGgsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhdWRpbyIpKSxjLnByb3RvdHlwZT1iLnByb3RvdHlwZSxhLndyYXBwZXJzLkhUTUxBdWRpb0VsZW1lbnQ9YixhLndyYXBwZXJzLkF1ZGlvPWMpfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3JldHVybiBhLnJlcGxhY2UoL1xzKy9nLCIgIikudHJpbSgpfWZ1bmN0aW9uIGMoYSl7ZS5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24gZChhLGIsYyxmKXtpZighKHRoaXMgaW5zdGFuY2VvZiBkKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJET00gb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi4iKTt2YXIgZz1pKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpKTtlLmNhbGwodGhpcyxnKSxoKGcsdGhpcyksdm9pZCAwIT09YSYmKGcudGV4dD1hKSx2b2lkIDAhPT1iJiZnLnNldEF0dHJpYnV0ZSgidmFsdWUiLGIpLGM9PT0hMCYmZy5zZXRBdHRyaWJ1dGUoInNlbGVjdGVkIiwiIiksZy5zZWxlY3RlZD1mPT09ITB9dmFyIGU9YS53cmFwcGVycy5IVE1MRWxlbWVudCxmPWEubWl4aW4sZz1hLnJlZ2lzdGVyV3JhcHBlcixoPWEucmV3cmFwLGk9YS51bndyYXAsaj1hLndyYXAsaz13aW5kb3cuSFRNTE9wdGlvbkVsZW1lbnQ7Yy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksZihjLnByb3RvdHlwZSx7Z2V0IHRleHQoKXtyZXR1cm4gYih0aGlzLnRleHRDb250ZW50KX0sc2V0IHRleHQoYSl7dGhpcy50ZXh0Q29udGVudD1iKFN0cmluZyhhKSl9LGdldCBmb3JtKCl7cmV0dXJuIGooaSh0aGlzKS5mb3JtKX19KSxnKGssYyxkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSksZC5wcm90b3R5cGU9Yy5wcm90b3R5cGUsYS53cmFwcGVycy5IVE1MT3B0aW9uRWxlbWVudD1jLGEud3JhcHBlcnMuT3B0aW9uPWR9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEudW53cmFwLGc9YS53cmFwLGg9d2luZG93LkhUTUxTZWxlY3RFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2FkZDpmdW5jdGlvbihhLGIpeyJvYmplY3QiPT10eXBlb2YgYiYmKGI9ZihiKSksZih0aGlzKS5hZGQoZihhKSxiKX0scmVtb3ZlOmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hP3ZvaWQgYy5wcm90b3R5cGUucmVtb3ZlLmNhbGwodGhpcyk6KCJvYmplY3QiPT10eXBlb2YgYSYmKGE9ZihhKSksdm9pZCBmKHRoaXMpLnJlbW92ZShhKSl9LGdldCBmb3JtKCl7cmV0dXJuIGcoZih0aGlzKS5mb3JtKX19KSxlKGgsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKSksYS53cmFwcGVycy5IVE1MU2VsZWN0RWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj1hLnVud3JhcCxnPWEud3JhcCxoPWEud3JhcEhUTUxDb2xsZWN0aW9uLGk9d2luZG93LkhUTUxUYWJsZUVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IGNhcHRpb24oKXtyZXR1cm4gZyhmKHRoaXMpLmNhcHRpb24pfSxjcmVhdGVDYXB0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGcoZih0aGlzKS5jcmVhdGVDYXB0aW9uKCkpfSxnZXQgdEhlYWQoKXtyZXR1cm4gZyhmKHRoaXMpLnRIZWFkKX0sY3JlYXRlVEhlYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gZyhmKHRoaXMpLmNyZWF0ZVRIZWFkKCkpfSxjcmVhdGVURm9vdDpmdW5jdGlvbigpe3JldHVybiBnKGYodGhpcykuY3JlYXRlVEZvb3QoKSl9LGdldCB0Rm9vdCgpe3JldHVybiBnKGYodGhpcykudEZvb3QpfSxnZXQgdEJvZGllcygpe3JldHVybiBoKGYodGhpcykudEJvZGllcyl9LGNyZWF0ZVRCb2R5OmZ1bmN0aW9uKCl7cmV0dXJuIGcoZih0aGlzKS5jcmVhdGVUQm9keSgpKQp9LGdldCByb3dzKCl7cmV0dXJuIGgoZih0aGlzKS5yb3dzKX0saW5zZXJ0Um93OmZ1bmN0aW9uKGEpe3JldHVybiBnKGYodGhpcykuaW5zZXJ0Um93KGEpKX19KSxlKGksYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0YWJsZSIpKSxhLndyYXBwZXJzLkhUTUxUYWJsZUVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwSFRNTENvbGxlY3Rpb24sZz1hLnVud3JhcCxoPWEud3JhcCxpPXdpbmRvdy5IVE1MVGFibGVTZWN0aW9uRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHtjb25zdHJ1Y3RvcjpiLGdldCByb3dzKCl7cmV0dXJuIGYoZyh0aGlzKS5yb3dzKX0saW5zZXJ0Um93OmZ1bmN0aW9uKGEpe3JldHVybiBoKGcodGhpcykuaW5zZXJ0Um93KGEpKX19KSxlKGksYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0aGVhZCIpKSxhLndyYXBwZXJzLkhUTUxUYWJsZVNlY3Rpb25FbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPWEud3JhcEhUTUxDb2xsZWN0aW9uLGc9YS51bndyYXAsaD1hLndyYXAsaT13aW5kb3cuSFRNTFRhYmxlUm93RWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHtnZXQgY2VsbHMoKXtyZXR1cm4gZihnKHRoaXMpLmNlbGxzKX0saW5zZXJ0Q2VsbDpmdW5jdGlvbihhKXtyZXR1cm4gaChnKHRoaXMpLmluc2VydENlbGwoYSkpfX0pLGUoaSxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRyIikpLGEud3JhcHBlcnMuSFRNTFRhYmxlUm93RWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3N3aXRjaChhLmxvY2FsTmFtZSl7Y2FzZSJjb250ZW50IjpyZXR1cm4gbmV3IGMoYSk7Y2FzZSJzaGFkb3ciOnJldHVybiBuZXcgZShhKTtjYXNlInRlbXBsYXRlIjpyZXR1cm4gbmV3IGYoYSl9ZC5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MQ29udGVudEVsZW1lbnQsZD1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGU9YS53cmFwcGVycy5IVE1MU2hhZG93RWxlbWVudCxmPWEud3JhcHBlcnMuSFRNTFRlbXBsYXRlRWxlbWVudCxnPShhLm1peGluLGEucmVnaXN0ZXJXcmFwcGVyKSxoPXdpbmRvdy5IVE1MVW5rbm93bkVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShkLnByb3RvdHlwZSksZyhoLGIpLGEud3JhcHBlcnMuSFRNTFVua25vd25FbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO3ZhciBiPWEud3JhcHBlcnMuRWxlbWVudCxjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLnJlZ2lzdGVyT2JqZWN0LGU9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixmPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhlLCJ0aXRsZSIpLGc9ZChmKSxoPU9iamVjdC5nZXRQcm90b3R5cGVPZihnLnByb3RvdHlwZSkuY29uc3RydWN0b3I7aWYoISgiY2xhc3NMaXN0ImluIGYpKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGIucHJvdG90eXBlLCJjbGFzc0xpc3QiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYy5wcm90b3R5cGUsImNsYXNzTGlzdCIsaSksZGVsZXRlIGIucHJvdG90eXBlLmNsYXNzTGlzdH1hLndyYXBwZXJzLlNWR0VsZW1lbnQ9aH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXttLmNhbGwodGhpcyxhKX12YXIgYz1hLm1peGluLGQ9YS5yZWdpc3RlcldyYXBwZXIsZT1hLnVud3JhcCxmPWEud3JhcCxnPXdpbmRvdy5TVkdVc2VFbGVtZW50LGg9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixpPWYoZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGgsImciKSksaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoaCwidXNlIiksaz1pLmNvbnN0cnVjdG9yLGw9T2JqZWN0LmdldFByb3RvdHlwZU9mKGsucHJvdG90eXBlKSxtPWwuY29uc3RydWN0b3I7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShsKSwiaW5zdGFuY2VSb290ImluIGomJmMoYi5wcm90b3R5cGUse2dldCBpbnN0YW5jZVJvb3QoKXtyZXR1cm4gZihlKHRoaXMpLmluc3RhbmNlUm9vdCl9LGdldCBhbmltYXRlZEluc3RhbmNlUm9vdCgpe3JldHVybiBmKGUodGhpcykuYW5pbWF0ZWRJbnN0YW5jZVJvb3QpfX0pLGQoZyxiLGopLGEud3JhcHBlcnMuU1ZHVXNlRWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuRXZlbnRUYXJnZXQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj1hLnVuc2FmZVVud3JhcCxnPWEud3JhcCxoPXdpbmRvdy5TVkdFbGVtZW50SW5zdGFuY2U7aCYmKGIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldCBjb3JyZXNwb25kaW5nRWxlbWVudCgpe3JldHVybiBnKGYodGhpcykuY29ycmVzcG9uZGluZ0VsZW1lbnQpfSxnZXQgY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQoKXtyZXR1cm4gZyhmKHRoaXMpLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KX0sZ2V0IHBhcmVudE5vZGUoKXtyZXR1cm4gZyhmKHRoaXMpLnBhcmVudE5vZGUpfSxnZXQgY2hpbGROb2Rlcygpe3Rocm93IG5ldyBFcnJvcigiTm90IGltcGxlbWVudGVkIil9LGdldCBmaXJzdENoaWxkKCl7cmV0dXJuIGcoZih0aGlzKS5maXJzdENoaWxkKX0sZ2V0IGxhc3RDaGlsZCgpe3JldHVybiBnKGYodGhpcykubGFzdENoaWxkKX0sZ2V0IHByZXZpb3VzU2libGluZygpe3JldHVybiBnKGYodGhpcykucHJldmlvdXNTaWJsaW5nKX0sZ2V0IG5leHRTaWJsaW5nKCl7cmV0dXJuIGcoZih0aGlzKS5uZXh0U2libGluZyl9fSksZShoLGIpLGEud3JhcHBlcnMuU1ZHRWxlbWVudEluc3RhbmNlPWIpfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2UoYSx0aGlzKX12YXIgYz1hLm1peGluLGQ9YS5yZWdpc3RlcldyYXBwZXIsZT1hLnNldFdyYXBwZXIsZj1hLnVuc2FmZVVud3JhcCxnPWEudW53cmFwLGg9YS51bndyYXBJZk5lZWRlZCxpPWEud3JhcCxqPXdpbmRvdy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7YyhiLnByb3RvdHlwZSx7Z2V0IGNhbnZhcygpe3JldHVybiBpKGYodGhpcykuY2FudmFzKX0sZHJhd0ltYWdlOmZ1bmN0aW9uKCl7YXJndW1lbnRzWzBdPWgoYXJndW1lbnRzWzBdKSxmKHRoaXMpLmRyYXdJbWFnZS5hcHBseShmKHRoaXMpLGFyZ3VtZW50cyl9LGNyZWF0ZVBhdHRlcm46ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzWzBdPWcoYXJndW1lbnRzWzBdKSxmKHRoaXMpLmNyZWF0ZVBhdHRlcm4uYXBwbHkoZih0aGlzKSxhcmd1bWVudHMpfX0pLGQoaixiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLmdldENvbnRleHQoIjJkIikpLGEud3JhcHBlcnMuQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEPWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7ZShhLHRoaXMpfXZhciBjPWEubWl4aW4sZD1hLnJlZ2lzdGVyV3JhcHBlcixlPWEuc2V0V3JhcHBlcixmPWEudW5zYWZlVW53cmFwLGc9YS51bndyYXBJZk5lZWRlZCxoPWEud3JhcCxpPXdpbmRvdy5XZWJHTFJlbmRlcmluZ0NvbnRleHQ7aWYoaSl7YyhiLnByb3RvdHlwZSx7Z2V0IGNhbnZhcygpe3JldHVybiBoKGYodGhpcykuY2FudmFzKX0sdGV4SW1hZ2UyRDpmdW5jdGlvbigpe2FyZ3VtZW50c1s1XT1nKGFyZ3VtZW50c1s1XSksZih0aGlzKS50ZXhJbWFnZTJELmFwcGx5KGYodGhpcyksYXJndW1lbnRzKX0sdGV4U3ViSW1hZ2UyRDpmdW5jdGlvbigpe2FyZ3VtZW50c1s2XT1nKGFyZ3VtZW50c1s2XSksZih0aGlzKS50ZXhTdWJJbWFnZTJELmFwcGx5KGYodGhpcyksYXJndW1lbnRzKX19KTt2YXIgaj0vV2ViS2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpP3tkcmF3aW5nQnVmZmVySGVpZ2h0Om51bGwsZHJhd2luZ0J1ZmZlcldpZHRoOm51bGx9Ont9O2QoaSxiLGopLGEud3JhcHBlcnMuV2ViR0xSZW5kZXJpbmdDb250ZXh0PWJ9fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2QoYSx0aGlzKX12YXIgYz1hLnJlZ2lzdGVyV3JhcHBlcixkPWEuc2V0V3JhcHBlcixlPWEudW5zYWZlVW53cmFwLGY9YS51bndyYXAsZz1hLnVud3JhcElmTmVlZGVkLGg9YS53cmFwLGk9d2luZG93LlJhbmdlO2IucHJvdG90eXBlPXtnZXQgc3RhcnRDb250YWluZXIoKXtyZXR1cm4gaChlKHRoaXMpLnN0YXJ0Q29udGFpbmVyKX0sZ2V0IGVuZENvbnRhaW5lcigpe3JldHVybiBoKGUodGhpcykuZW5kQ29udGFpbmVyKX0sZ2V0IGNvbW1vbkFuY2VzdG9yQ29udGFpbmVyKCl7cmV0dXJuIGgoZSh0aGlzKS5jb21tb25BbmNlc3RvckNvbnRhaW5lcil9LHNldFN0YXJ0OmZ1bmN0aW9uKGEsYil7ZSh0aGlzKS5zZXRTdGFydChnKGEpLGIpfSxzZXRFbmQ6ZnVuY3Rpb24oYSxiKXtlKHRoaXMpLnNldEVuZChnKGEpLGIpfSxzZXRTdGFydEJlZm9yZTpmdW5jdGlvbihhKXtlKHRoaXMpLnNldFN0YXJ0QmVmb3JlKGcoYSkpfSxzZXRTdGFydEFmdGVyOmZ1bmN0aW9uKGEpe2UodGhpcykuc2V0U3RhcnRBZnRlcihnKGEpKX0sc2V0RW5kQmVmb3JlOmZ1bmN0aW9uKGEpe2UodGhpcykuc2V0RW5kQmVmb3JlKGcoYSkpfSxzZXRFbmRBZnRlcjpmdW5jdGlvbihhKXtlKHRoaXMpLnNldEVuZEFmdGVyKGcoYSkpfSxzZWxlY3ROb2RlOmZ1bmN0aW9uKGEpe2UodGhpcykuc2VsZWN0Tm9kZShnKGEpKX0sc2VsZWN0Tm9kZUNvbnRlbnRzOmZ1bmN0aW9uKGEpe2UodGhpcykuc2VsZWN0Tm9kZUNvbnRlbnRzKGcoYSkpfSxjb21wYXJlQm91bmRhcnlQb2ludHM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZSh0aGlzKS5jb21wYXJlQm91bmRhcnlQb2ludHMoYSxmKGIpKX0sZXh0cmFjdENvbnRlbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGgoZSh0aGlzKS5leHRyYWN0Q29udGVudHMoKSl9LGNsb25lQ29udGVudHM6ZnVuY3Rpb24oKXtyZXR1cm4gaChlKHRoaXMpLmNsb25lQ29udGVudHMoKSl9LGluc2VydE5vZGU6ZnVuY3Rpb24oYSl7ZSh0aGlzKS5pbnNlcnROb2RlKGcoYSkpfSxzdXJyb3VuZENvbnRlbnRzOmZ1bmN0aW9uKGEpe2UodGhpcykuc3Vycm91bmRDb250ZW50cyhnKGEpKX0sY2xvbmVSYW5nZTpmdW5jdGlvbigpe3JldHVybiBoKGUodGhpcykuY2xvbmVSYW5nZSgpKX0saXNQb2ludEluUmFuZ2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZSh0aGlzKS5pc1BvaW50SW5SYW5nZShnKGEpLGIpfSxjb21wYXJlUG9pbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZSh0aGlzKS5jb21wYXJlUG9pbnQoZyhhKSxiKX0saW50ZXJzZWN0c05vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGUodGhpcykuaW50ZXJzZWN0c05vZGUoZyhhKSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcykudG9TdHJpbmcoKX19LGkucHJvdG90eXBlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCYmKGIucHJvdG90eXBlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gaChlKHRoaXMpLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChhKSl9KSxjKHdpbmRvdy5SYW5nZSxiLGRvY3VtZW50LmNyZWF0ZVJhbmdlKCkpLGEud3JhcHBlcnMuUmFuZ2U9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7dmFyIGI9YS5HZXRFbGVtZW50c0J5SW50ZXJmYWNlLGM9YS5QYXJlbnROb2RlSW50ZXJmYWNlLGQ9YS5TZWxlY3RvcnNJbnRlcmZhY2UsZT1hLm1peGluLGY9YS5yZWdpc3Rlck9iamVjdCxnPWYoZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKTtlKGcucHJvdG90eXBlLGMpLGUoZy5wcm90b3R5cGUsZCksZShnLnByb3RvdHlwZSxiKTt2YXIgaD1mKGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiIpKTthLndyYXBwZXJzLkNvbW1lbnQ9aCxhLndyYXBwZXJzLkRvY3VtZW50RnJhZ21lbnQ9Z30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYj1sKGsoYSkub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO2MuY2FsbCh0aGlzLGIpLGkoYix0aGlzKTt2YXIgZT1hLnNoYWRvd1Jvb3Q7bi5zZXQodGhpcyxlKSx0aGlzLnRyZWVTY29wZV89bmV3IGQodGhpcyxnKGV8fGEpKSxtLnNldCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuRG9jdW1lbnRGcmFnbWVudCxkPWEuVHJlZVNjb3BlLGU9YS5lbGVtZW50RnJvbVBvaW50LGY9YS5nZXRJbm5lckhUTUwsZz1hLmdldFRyZWVTY29wZSxoPWEubWl4aW4saT1hLnJld3JhcCxqPWEuc2V0SW5uZXJIVE1MLGs9YS51bnNhZmVVbndyYXAsbD1hLnVud3JhcCxtPW5ldyBXZWFrTWFwLG49bmV3IFdlYWtNYXAsbz0vWyBcdFxuXHJcZl0vO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGgoYi5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmIsZ2V0IGlubmVySFRNTCgpe3JldHVybiBmKHRoaXMpfSxzZXQgaW5uZXJIVE1MKGEpe2oodGhpcyxhKSx0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpfSxnZXQgb2xkZXJTaGFkb3dSb290KCl7cmV0dXJuIG4uZ2V0KHRoaXMpfHxudWxsfSxnZXQgaG9zdCgpe3JldHVybiBtLmdldCh0aGlzKXx8bnVsbH0saW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyOmZ1bmN0aW9uKCl7cmV0dXJuIG0uZ2V0KHRoaXMpLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpfSxlbGVtZW50RnJvbVBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGUodGhpcyx0aGlzLm93bmVyRG9jdW1lbnQsYSxiKX0sZ2V0RWxlbWVudEJ5SWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG8udGVzdChhKT9udWxsOnRoaXMucXVlcnlTZWxlY3RvcignW2lkPSInK2ErJyJdJyl9fSksYS53cmFwcGVycy5TaGFkb3dSb290PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7YS5wcmV2aW91c1NpYmxpbmdfPWEucHJldmlvdXNTaWJsaW5nLGEubmV4dFNpYmxpbmdfPWEubmV4dFNpYmxpbmcsYS5wYXJlbnROb2RlXz1hLnBhcmVudE5vZGV9ZnVuY3Rpb24gYyhhLGMsZSl7dmFyIGY9SChhKSxnPUgoYyksaD1lP0goZSk6bnVsbDtpZihkKGMpLGIoYyksZSlhLmZpcnN0Q2hpbGQ9PT1lJiYoYS5maXJzdENoaWxkXz1lKSxlLnByZXZpb3VzU2libGluZ189ZS5wcmV2aW91c1NpYmxpbmc7ZWxzZXthLmxhc3RDaGlsZF89YS5sYXN0Q2hpbGQsYS5sYXN0Q2hpbGQ9PT1hLmZpcnN0Q2hpbGQmJihhLmZpcnN0Q2hpbGRfPWEuZmlyc3RDaGlsZCk7dmFyIGk9SShmLmxhc3RDaGlsZCk7aSYmKGkubmV4dFNpYmxpbmdfPWkubmV4dFNpYmxpbmcpfWYuaW5zZXJ0QmVmb3JlKGcsaCl9ZnVuY3Rpb24gZChhKXt2YXIgYz1IKGEpLGQ9Yy5wYXJlbnROb2RlO2lmKGQpe3ZhciBlPUkoZCk7YihhKSxhLnByZXZpb3VzU2libGluZyYmKGEucHJldmlvdXNTaWJsaW5nLm5leHRTaWJsaW5nXz1hKSxhLm5leHRTaWJsaW5nJiYoYS5uZXh0U2libGluZy5wcmV2aW91c1NpYmxpbmdfPWEpLGUubGFzdENoaWxkPT09YSYmKGUubGFzdENoaWxkXz1hKSxlLmZpcnN0Q2hpbGQ9PT1hJiYoZS5maXJzdENoaWxkXz1hKSxkLnJlbW92ZUNoaWxkKGMpfX1mdW5jdGlvbiBlKGEpe0ouc2V0KGEsW10pfWZ1bmN0aW9uIGYoYSl7dmFyIGI9Si5nZXQoYSk7cmV0dXJuIGJ8fEouc2V0KGEsYj1bXSksYn1mdW5jdGlvbiBnKGEpe2Zvcih2YXIgYj1bXSxjPTAsZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpYltjKytdPWQ7cmV0dXJuIGJ9ZnVuY3Rpb24gaCgpe2Zvcih2YXIgYT0wO2E8Ti5sZW5ndGg7YSsrKXt2YXIgYj1OW2FdLGM9Yi5wYXJlbnRSZW5kZXJlcjtjJiZjLmRpcnR5fHxiLnJlbmRlcigpfU49W119ZnVuY3Rpb24gaSgpe3k9bnVsbCxoKCl9ZnVuY3Rpb24gaihhKXt2YXIgYj1MLmdldChhKTtyZXR1cm4gYnx8KGI9bmV3IG4oYSksTC5zZXQoYSxiKSksYn1mdW5jdGlvbiBrKGEpe3ZhciBiPUUoYSkucm9vdDtyZXR1cm4gYiBpbnN0YW5jZW9mIEQ/YjpudWxsfWZ1bmN0aW9uIGwoYSl7cmV0dXJuIGooYS5ob3N0KX1mdW5jdGlvbiBtKGEpe3RoaXMuc2tpcD0hMSx0aGlzLm5vZGU9YSx0aGlzLmNoaWxkTm9kZXM9W119ZnVuY3Rpb24gbihhKXt0aGlzLmhvc3Q9YSx0aGlzLmRpcnR5PSExLHRoaXMuaW52YWxpZGF0ZUF0dHJpYnV0ZXMoKSx0aGlzLmFzc29jaWF0ZU5vZGUoYSl9ZnVuY3Rpb24gbyhhKXtmb3IodmFyIGI9W10sYz1hLmZpcnN0Q2hpbGQ7YztjPWMubmV4dFNpYmxpbmcpdihjKT9iLnB1c2guYXBwbHkoYixmKGMpKTpiLnB1c2goYyk7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhKXtpZihhIGluc3RhbmNlb2YgQilyZXR1cm4gYTtpZihhIGluc3RhbmNlb2YgQSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YS5maXJzdENoaWxkO2I7Yj1iLm5leHRTaWJsaW5nKXt2YXIgYz1wKGIpO2lmKGMpcmV0dXJuIGN9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcShhLGIpe2YoYikucHVzaChhKTt2YXIgYz1LLmdldChhKTtjP2MucHVzaChiKTpLLnNldChhLFtiXSl9ZnVuY3Rpb24gcihhKXtyZXR1cm4gSy5nZXQoYSl9ZnVuY3Rpb24gcyhhKXtLLnNldChhLHZvaWQgMCl9ZnVuY3Rpb24gdChhLGIpe3ZhciBjPWIuZ2V0QXR0cmlidXRlKCJzZWxlY3QiKTtpZighYylyZXR1cm4hMDtpZihjPWMudHJpbSgpLCFjKXJldHVybiEwO2lmKCEoYSBpbnN0YW5jZW9mIHopKXJldHVybiExO2lmKCFQLnRlc3QoYykpcmV0dXJuITE7dHJ5e3JldHVybiBhLm1hdGNoZXMoYyl9Y2F0Y2goZCl7cmV0dXJuITF9fWZ1bmN0aW9uIHUoYSxiKXt2YXIgYz1yKGIpO3JldHVybiBjJiZjW2MubGVuZ3RoLTFdPT09YX1mdW5jdGlvbiB2KGEpe3JldHVybiBhIGluc3RhbmNlb2YgQXx8YSBpbnN0YW5jZW9mIEJ9ZnVuY3Rpb24gdyhhKXtyZXR1cm4gYS5zaGFkb3dSb290fWZ1bmN0aW9uIHgoYSl7Zm9yKHZhciBiPVtdLGM9YS5zaGFkb3dSb290O2M7Yz1jLm9sZGVyU2hhZG93Um9vdCliLnB1c2goYyk7cmV0dXJuIGJ9dmFyIHksej1hLndyYXBwZXJzLkVsZW1lbnQsQT1hLndyYXBwZXJzLkhUTUxDb250ZW50RWxlbWVudCxCPWEud3JhcHBlcnMuSFRNTFNoYWRvd0VsZW1lbnQsQz1hLndyYXBwZXJzLk5vZGUsRD1hLndyYXBwZXJzLlNoYWRvd1Jvb3QsRT0oYS5hc3NlcnQsYS5nZXRUcmVlU2NvcGUpLEY9KGEubWl4aW4sYS5vbmVPZiksRz1hLnVuc2FmZVVud3JhcCxIPWEudW53cmFwLEk9YS53cmFwLEo9bmV3IFdlYWtNYXAsSz1uZXcgV2Vha01hcCxMPW5ldyBXZWFrTWFwLE09Rih3aW5kb3csWyJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZXRUaW1lb3V0Il0pLE49W10sTz1uZXcgQXJyYXlTcGxpY2U7Ty5lcXVhbHM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gSChhLm5vZGUpPT09Yn0sbS5wcm90b3R5cGU9e2FwcGVuZDpmdW5jdGlvbihhKXt2YXIgYj1uZXcgbShhKTtyZXR1cm4gdGhpcy5jaGlsZE5vZGVzLnB1c2goYiksYn0sc3luYzpmdW5jdGlvbihhKXtpZighdGhpcy5za2lwKXtmb3IodmFyIGI9dGhpcy5ub2RlLGU9dGhpcy5jaGlsZE5vZGVzLGY9ZyhIKGIpKSxoPWF8fG5ldyBXZWFrTWFwLGk9Ty5jYWxjdWxhdGVTcGxpY2VzKGUsZiksaj0wLGs9MCxsPTAsbT0wO208aS5sZW5ndGg7bSsrKXtmb3IodmFyIG49aVttXTtsPG4uaW5kZXg7bCsrKWsrKyxlW2orK10uc3luYyhoKTtmb3IodmFyIG89bi5yZW1vdmVkLmxlbmd0aCxwPTA7bz5wO3ArKyl7dmFyIHE9SShmW2srK10pO2guZ2V0KHEpfHxkKHEpfWZvcih2YXIgcj1uLmFkZGVkQ291bnQscz1mW2tdJiZJKGZba10pLHA9MDtyPnA7cCsrKXt2YXIgdD1lW2orK10sdT10Lm5vZGU7YyhiLHUscyksaC5zZXQodSwhMCksdC5zeW5jKGgpfWwrPXJ9Zm9yKHZhciBtPWw7bTxlLmxlbmd0aDttKyspZVttXS5zeW5jKGgpfX19LG4ucHJvdG90eXBlPXtyZW5kZXI6ZnVuY3Rpb24oYSl7aWYodGhpcy5kaXJ0eSl7dGhpcy5pbnZhbGlkYXRlQXR0cmlidXRlcygpO3ZhciBiPXRoaXMuaG9zdDt0aGlzLmRpc3RyaWJ1dGlvbihiKTt2YXIgYz1hfHxuZXcgbShiKTt0aGlzLmJ1aWxkUmVuZGVyVHJlZShjLGIpO3ZhciBkPSFhO2QmJmMuc3luYygpLHRoaXMuZGlydHk9ITF9fSxnZXQgcGFyZW50UmVuZGVyZXIoKXtyZXR1cm4gRSh0aGlzLmhvc3QpLnJlbmRlcmVyfSxpbnZhbGlkYXRlOmZ1bmN0aW9uKCl7aWYoIXRoaXMuZGlydHkpe3RoaXMuZGlydHk9ITA7dmFyIGE9dGhpcy5wYXJlbnRSZW5kZXJlcjtpZihhJiZhLmludmFsaWRhdGUoKSxOLnB1c2godGhpcykseSlyZXR1cm47eT13aW5kb3dbTV0oaSwwKX19LGRpc3RyaWJ1dGlvbjpmdW5jdGlvbihhKXt0aGlzLnJlc2V0QWxsKGEpLHRoaXMuZGlzdHJpYnV0aW9uUmVzb2x1dGlvbihhKX0scmVzZXRBbGw6ZnVuY3Rpb24oYSl7dihhKT9lKGEpOnMoYSk7Zm9yKHZhciBiPWEuZmlyc3RDaGlsZDtiO2I9Yi5uZXh0U2libGluZyl0aGlzLnJlc2V0QWxsKGIpO2Euc2hhZG93Um9vdCYmdGhpcy5yZXNldEFsbChhLnNoYWRvd1Jvb3QpLGEub2xkZXJTaGFkb3dSb290JiZ0aGlzLnJlc2V0QWxsKGEub2xkZXJTaGFkb3dSb290KX0sZGlzdHJpYnV0aW9uUmVzb2x1dGlvbjpmdW5jdGlvbihhKXtpZih3KGEpKXtmb3IodmFyIGI9YSxjPW8oYiksZD14KGIpLGU9MDtlPGQubGVuZ3RoO2UrKyl0aGlzLnBvb2xEaXN0cmlidXRpb24oZFtlXSxjKTtmb3IodmFyIGU9ZC5sZW5ndGgtMTtlPj0wO2UtLSl7dmFyIGY9ZFtlXSxnPXAoZik7aWYoZyl7dmFyIGg9Zi5vbGRlclNoYWRvd1Jvb3Q7aCYmKGM9byhoKSk7Zm9yKHZhciBpPTA7aTxjLmxlbmd0aDtpKyspcShjW2ldLGcpfXRoaXMuZGlzdHJpYnV0aW9uUmVzb2x1dGlvbihmKX19Zm9yKHZhciBqPWEuZmlyc3RDaGlsZDtqO2o9ai5uZXh0U2libGluZyl0aGlzLmRpc3RyaWJ1dGlvblJlc29sdXRpb24oail9LHBvb2xEaXN0cmlidXRpb246ZnVuY3Rpb24oYSxiKXtpZighKGEgaW5zdGFuY2VvZiBCKSlpZihhIGluc3RhbmNlb2YgQSl7dmFyIGM9YTt0aGlzLnVwZGF0ZURlcGVuZGVudEF0dHJpYnV0ZXMoYy5nZXRBdHRyaWJ1dGUoInNlbGVjdCIpKTtmb3IodmFyIGQ9ITEsZT0wO2U8Yi5sZW5ndGg7ZSsrKXt2YXIgYT1iW2VdO2EmJnQoYSxjKSYmKHEoYSxjKSxiW2VdPXZvaWQgMCxkPSEwKX1pZighZClmb3IodmFyIGY9Yy5maXJzdENoaWxkO2Y7Zj1mLm5leHRTaWJsaW5nKXEoZixjKX1lbHNlIGZvcih2YXIgZj1hLmZpcnN0Q2hpbGQ7ZjtmPWYubmV4dFNpYmxpbmcpdGhpcy5wb29sRGlzdHJpYnV0aW9uKGYsYil9LGJ1aWxkUmVuZGVyVHJlZTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz10aGlzLmNvbXBvc2UoYiksZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdLGY9YS5hcHBlbmQoZSk7dGhpcy5idWlsZFJlbmRlclRyZWUoZixlKX1pZih3KGIpKXt2YXIgZz1qKGIpO2cuZGlydHk9ITF9fSxjb21wb3NlOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1bXSxjPWEuc2hhZG93Um9vdHx8YSxkPWMuZmlyc3RDaGlsZDtkO2Q9ZC5uZXh0U2libGluZylpZih2KGQpKXt0aGlzLmFzc29jaWF0ZU5vZGUoYyk7Zm9yKHZhciBlPWYoZCksZz0wO2c8ZS5sZW5ndGg7ZysrKXt2YXIgaD1lW2ddO3UoZCxoKSYmYi5wdXNoKGgpfX1lbHNlIGIucHVzaChkKTtyZXR1cm4gYn0saW52YWxpZGF0ZUF0dHJpYnV0ZXM6ZnVuY3Rpb24oKXt0aGlzLmF0dHJpYnV0ZXM9T2JqZWN0LmNyZWF0ZShudWxsKX0sdXBkYXRlRGVwZW5kZW50QXR0cmlidXRlczpmdW5jdGlvbihhKXtpZihhKXt2YXIgYj10aGlzLmF0dHJpYnV0ZXM7L1wuXHcrLy50ZXN0KGEpJiYoYlsiY2xhc3MiXT0hMCksLyNcdysvLnRlc3QoYSkmJihiLmlkPSEwKSxhLnJlcGxhY2UoL1xbXHMqKFteXHM9XHx+XF1dKykvZyxmdW5jdGlvbihhLGMpe2JbY109ITB9KX19LGRlcGVuZHNPbkF0dHJpYnV0ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hdHRyaWJ1dGVzW2FdfSxhc3NvY2lhdGVOb2RlOmZ1bmN0aW9uKGEpe0coYSkucG9seW1lclNoYWRvd1JlbmRlcmVyXz10aGlzfX07dmFyIFA9L14oOm5vdFwoKT9bKi4jW2EtekEtWl98XS87Qy5wcm90b3R5cGUuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyPWZ1bmN0aW9uKCl7dmFyIGE9Ryh0aGlzKS5wb2x5bWVyU2hhZG93UmVuZGVyZXJfO3JldHVybiBhPyhhLmludmFsaWRhdGUoKSwhMCk6ITF9LEEucHJvdG90eXBlLmdldERpc3RyaWJ1dGVkTm9kZXM9Qi5wcm90b3R5cGUuZ2V0RGlzdHJpYnV0ZWROb2Rlcz1mdW5jdGlvbigpe3JldHVybiBoKCksZih0aGlzKX0sei5wcm90b3R5cGUuZ2V0RGVzdGluYXRpb25JbnNlcnRpb25Qb2ludHM9ZnVuY3Rpb24oKXtyZXR1cm4gaCgpLHIodGhpcyl8fFtdfSxBLnByb3RvdHlwZS5ub2RlSXNJbnNlcnRlZF89Qi5wcm90b3R5cGUubm9kZUlzSW5zZXJ0ZWRfPWZ1bmN0aW9uKCl7dGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKTt2YXIgYSxiPWsodGhpcyk7YiYmKGE9bChiKSksRyh0aGlzKS5wb2x5bWVyU2hhZG93UmVuZGVyZXJfPWEsYSYmYS5pbnZhbGlkYXRlKCl9LGEuZ2V0UmVuZGVyZXJGb3JIb3N0PWosYS5nZXRTaGFkb3dUcmVlcz14LGEucmVuZGVyQWxsUGVuZGluZz1oLGEuZ2V0RGVzdGluYXRpb25JbnNlcnRpb25Qb2ludHM9cixhLnZpc3VhbD17aW5zZXJ0QmVmb3JlOmMscmVtb3ZlOmR9fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGIpe2lmKHdpbmRvd1tiXSl7ZCghYS53cmFwcGVyc1tiXSk7dmFyIGk9ZnVuY3Rpb24oYSl7Yy5jYWxsKHRoaXMsYSl9O2kucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGUoaS5wcm90b3R5cGUse2dldCBmb3JtKCl7cmV0dXJuIGgoZyh0aGlzKS5mb3JtKX19KSxmKHdpbmRvd1tiXSxpLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYi5zbGljZSg0LC03KSkpLGEud3JhcHBlcnNbYl09aX19dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEuYXNzZXJ0LGU9YS5taXhpbixmPWEucmVnaXN0ZXJXcmFwcGVyLGc9YS51bndyYXAsaD1hLndyYXAsaT1bIkhUTUxCdXR0b25FbGVtZW50IiwiSFRNTEZpZWxkU2V0RWxlbWVudCIsIkhUTUxJbnB1dEVsZW1lbnQiLCJIVE1MS2V5Z2VuRWxlbWVudCIsIkhUTUxMYWJlbEVsZW1lbnQiLCJIVE1MTGVnZW5kRWxlbWVudCIsIkhUTUxPYmplY3RFbGVtZW50IiwiSFRNTE91dHB1dEVsZW1lbnQiLCJIVE1MVGV4dEFyZWFFbGVtZW50Il07aS5mb3JFYWNoKGIpfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2QoYSx0aGlzKX17dmFyIGM9YS5yZWdpc3RlcldyYXBwZXIsZD1hLnNldFdyYXBwZXIsZT1hLnVuc2FmZVVud3JhcCxmPWEudW53cmFwLGc9YS51bndyYXBJZk5lZWRlZCxoPWEud3JhcDt3aW5kb3cuU2VsZWN0aW9ufWIucHJvdG90eXBlPXtnZXQgYW5jaG9yTm9kZSgpe3JldHVybiBoKGUodGhpcykuYW5jaG9yTm9kZSl9LGdldCBmb2N1c05vZGUoKXtyZXR1cm4gaChlKHRoaXMpLmZvY3VzTm9kZSl9LGFkZFJhbmdlOmZ1bmN0aW9uKGEpe2UodGhpcykuYWRkUmFuZ2UoZihhKSl9LGNvbGxhcHNlOmZ1bmN0aW9uKGEsYil7ZSh0aGlzKS5jb2xsYXBzZShnKGEpLGIpfSxjb250YWluc05vZGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZSh0aGlzKS5jb250YWluc05vZGUoZyhhKSxiKX0sZXh0ZW5kOmZ1bmN0aW9uKGEsYil7ZSh0aGlzKS5leHRlbmQoZyhhKSxiKX0sZ2V0UmFuZ2VBdDpmdW5jdGlvbihhKXtyZXR1cm4gaChlKHRoaXMpLmdldFJhbmdlQXQoYSkpfSxyZW1vdmVSYW5nZTpmdW5jdGlvbihhKXtlKHRoaXMpLnJlbW92ZVJhbmdlKGYoYSkpfSxzZWxlY3RBbGxDaGlsZHJlbjpmdW5jdGlvbihhKXtlKHRoaXMpLnNlbGVjdEFsbENoaWxkcmVuKGcoYSkpfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiBlKHRoaXMpLnRvU3RyaW5nKCl9fSxjKHdpbmRvdy5TZWxlY3Rpb24sYix3aW5kb3cuZ2V0U2VsZWN0aW9uKCkpLGEud3JhcHBlcnMuU2VsZWN0aW9uPWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7ay5jYWxsKHRoaXMsYSksdGhpcy50cmVlU2NvcGVfPW5ldyBwKHRoaXMsbnVsbCl9ZnVuY3Rpb24gYyhhKXt2YXIgYz1kb2N1bWVudFthXTtiLnByb3RvdHlwZVthXT1mdW5jdGlvbigpe3JldHVybiBDKGMuYXBwbHkoQSh0aGlzKSxhcmd1bWVudHMpKX19ZnVuY3Rpb24gZChhLGIpe0YuY2FsbChBKGIpLEIoYSkpLGUoYSxiKX1mdW5jdGlvbiBlKGEsYil7YS5zaGFkb3dSb290JiZiLmFkb3B0Tm9kZShhLnNoYWRvd1Jvb3QpLGEgaW5zdGFuY2VvZiBvJiZmKGEsYik7Zm9yKHZhciBjPWEuZmlyc3RDaGlsZDtjO2M9Yy5uZXh0U2libGluZyllKGMsYil9ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEub2xkZXJTaGFkb3dSb290O2MmJmIuYWRvcHROb2RlKGMpfWZ1bmN0aW9uIGcoYSl7eihhLHRoaXMpfWZ1bmN0aW9uIGgoYSxiKXt2YXIgYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbltiXTthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3JldHVybiBDKGMuYXBwbHkoQSh0aGlzKSxhcmd1bWVudHMpKX19ZnVuY3Rpb24gaShhLGIpe3ZhciBjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uW2JdO2EucHJvdG90eXBlW2JdPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXBwbHkoQSh0aGlzKSxhcmd1bWVudHMpfX12YXIgaj1hLkdldEVsZW1lbnRzQnlJbnRlcmZhY2Usaz1hLndyYXBwZXJzLk5vZGUsbD1hLlBhcmVudE5vZGVJbnRlcmZhY2UsbT1hLndyYXBwZXJzLlNlbGVjdGlvbixuPWEuU2VsZWN0b3JzSW50ZXJmYWNlLG89YS53cmFwcGVycy5TaGFkb3dSb290LHA9YS5UcmVlU2NvcGUscT1hLmNsb25lTm9kZSxyPWEuZGVmaW5lV3JhcEdldHRlcixzPWEuZWxlbWVudEZyb21Qb2ludCx0PWEuZm9yd2FyZE1ldGhvZHNUb1dyYXBwZXIsdT1hLm1hdGNoZXNOYW1lcyx2PWEubWl4aW4sdz1hLnJlZ2lzdGVyV3JhcHBlcix4PWEucmVuZGVyQWxsUGVuZGluZyx5PWEucmV3cmFwLHo9YS5zZXRXcmFwcGVyLEE9YS51bnNhZmVVbndyYXAsQj1hLnVud3JhcCxDPWEud3JhcCxEPWEud3JhcEV2ZW50VGFyZ2V0TWV0aG9kcyxFPShhLndyYXBOb2RlTGlzdCxuZXcgV2Vha01hcCk7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShrLnByb3RvdHlwZSkscihiLCJkb2N1bWVudEVsZW1lbnQiKSxyKGIsImJvZHkiKSxyKGIsImhlYWQiKSxbImNyZWF0ZUNvbW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZUV2ZW50IiwiY3JlYXRlRXZlbnROUyIsImNyZWF0ZVJhbmdlIiwiY3JlYXRlVGV4dE5vZGUiLCJnZXRFbGVtZW50QnlJZCJdLmZvckVhY2goYyk7dmFyIEY9ZG9jdW1lbnQuYWRvcHROb2RlLEc9ZG9jdW1lbnQuZ2V0U2VsZWN0aW9uO2lmKHYoYi5wcm90b3R5cGUse2Fkb3B0Tm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5wYXJlbnROb2RlJiZhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYSksZChhLHRoaXMpLGF9LGVsZW1lbnRGcm9tUG9pbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcyh0aGlzLHRoaXMsYSxiKX0saW1wb3J0Tm9kZTpmdW5jdGlvbihhLGIpe3JldHVybiBxKGEsYixBKHRoaXMpKX0sZ2V0U2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHgoKSxuZXcgbShHLmNhbGwoQih0aGlzKSkpfSxnZXRFbGVtZW50c0J5TmFtZTpmdW5jdGlvbihhKXtyZXR1cm4gbi5xdWVyeVNlbGVjdG9yQWxsLmNhbGwodGhpcywiW25hbWU9IitKU09OLnN0cmluZ2lmeShTdHJpbmcoYSkpKyJdIil9fSksZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50KXt2YXIgSD1kb2N1bWVudC5yZWdpc3RlckVsZW1lbnQ7Yi5wcm90b3R5cGUucmVnaXN0ZXJFbGVtZW50PWZ1bmN0aW9uKGIsYyl7ZnVuY3Rpb24gZChhKXtyZXR1cm4gYT92b2lkIHooYSx0aGlzKTpmP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZixiKTpkb2N1bWVudC5jcmVhdGVFbGVtZW50KGIpfXZhciBlLGY7aWYodm9pZCAwIT09YyYmKGU9Yy5wcm90b3R5cGUsZj1jLmV4dGVuZHMpLGV8fChlPU9iamVjdC5jcmVhdGUoSFRNTEVsZW1lbnQucHJvdG90eXBlKSksYS5uYXRpdmVQcm90b3R5cGVUYWJsZS5nZXQoZSkpdGhyb3cgbmV3IEVycm9yKCJOb3RTdXBwb3J0ZWRFcnJvciIpO2Zvcih2YXIgZyxoPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKSxpPVtdO2gmJiEoZz1hLm5hdGl2ZVByb3RvdHlwZVRhYmxlLmdldChoKSk7KWkucHVzaChoKSxoPU9iamVjdC5nZXRQcm90b3R5cGVPZihoKTtpZighZyl0aHJvdyBuZXcgRXJyb3IoIk5vdFN1cHBvcnRlZEVycm9yIik7Zm9yKHZhciBqPU9iamVjdC5jcmVhdGUoZyksaz1pLmxlbmd0aC0xO2s+PTA7ay0tKWo9T2JqZWN0LmNyZWF0ZShqKTtbImNyZWF0ZWRDYWxsYmFjayIsImF0dGFjaGVkQ2FsbGJhY2siLCJkZXRhY2hlZENhbGxiYWNrIiwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1lW2FdO2ImJihqW2FdPWZ1bmN0aW9uKCl7Qyh0aGlzKWluc3RhbmNlb2YgZHx8eSh0aGlzKSxiLmFwcGx5KEModGhpcyksYXJndW1lbnRzKX0pfSk7dmFyIGw9e3Byb3RvdHlwZTpqfTtmJiYobC5leHRlbmRzPWYpLGQucHJvdG90eXBlPWUsZC5wcm90b3R5cGUuY29uc3RydWN0b3I9ZCxhLmNvbnN0cnVjdG9yVGFibGUuc2V0KGosZCksYS5uYXRpdmVQcm90b3R5cGVUYWJsZS5zZXQoZSxqKTtILmNhbGwoQih0aGlzKSxiLGwpO3JldHVybiBkfSx0KFt3aW5kb3cuSFRNTERvY3VtZW50fHx3aW5kb3cuRG9jdW1lbnRdLFsicmVnaXN0ZXJFbGVtZW50Il0pfXQoW3dpbmRvdy5IVE1MQm9keUVsZW1lbnQsd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50LHdpbmRvdy5IVE1MSGVhZEVsZW1lbnQsd2luZG93LkhUTUxIdG1sRWxlbWVudF0sWyJhcHBlbmRDaGlsZCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY29udGFpbnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZU5TIiwiaW5zZXJ0QmVmb3JlIiwicXVlcnlTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZW1vdmVDaGlsZCIsInJlcGxhY2VDaGlsZCJdLmNvbmNhdCh1KSksdChbd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50XSxbImFkb3B0Tm9kZSIsImltcG9ydE5vZGUiLCJjb250YWlucyIsImNyZWF0ZUNvbW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZUV2ZW50IiwiY3JlYXRlRXZlbnROUyIsImNyZWF0ZVJhbmdlIiwiY3JlYXRlVGV4dE5vZGUiLCJlbGVtZW50RnJvbVBvaW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImdldFNlbGVjdGlvbiJdKSx2KGIucHJvdG90eXBlLGopLHYoYi5wcm90b3R5cGUsbCksdihiLnByb3RvdHlwZSxuKSx2KGIucHJvdG90eXBlLHtnZXQgaW1wbGVtZW50YXRpb24oKXt2YXIgYT1FLmdldCh0aGlzKTtyZXR1cm4gYT9hOihhPW5ldyBnKEIodGhpcykuaW1wbGVtZW50YXRpb24pLEUuc2V0KHRoaXMsYSksYSl9LGdldCBkZWZhdWx0Vmlldygpe3JldHVybiBDKEIodGhpcykuZGVmYXVsdFZpZXcpfX0pLHcod2luZG93LkRvY3VtZW50LGIsZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKSksd2luZG93LkhUTUxEb2N1bWVudCYmdyh3aW5kb3cuSFRNTERvY3VtZW50LGIpLEQoW3dpbmRvdy5IVE1MQm9keUVsZW1lbnQsd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50LHdpbmRvdy5IVE1MSGVhZEVsZW1lbnRdKSxoKGcsImNyZWF0ZURvY3VtZW50VHlwZSIpLGgoZywiY3JlYXRlRG9jdW1lbnQiKSxoKGcsImNyZWF0ZUhUTUxEb2N1bWVudCIpLGkoZywiaGFzRmVhdHVyZSIpLHcod2luZG93LkRPTUltcGxlbWVudGF0aW9uLGcpLHQoW3dpbmRvdy5ET01JbXBsZW1lbnRhdGlvbl0sWyJjcmVhdGVEb2N1bWVudFR5cGUiLCJjcmVhdGVEb2N1bWVudCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImhhc0ZlYXR1cmUiXSksYS5hZG9wdE5vZGVOb1JlbW92ZT1kLGEud3JhcHBlcnMuRE9NSW1wbGVtZW50YXRpb249ZyxhLndyYXBwZXJzLkRvY3VtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5FdmVudFRhcmdldCxkPWEud3JhcHBlcnMuU2VsZWN0aW9uLGU9YS5taXhpbixmPWEucmVnaXN0ZXJXcmFwcGVyLGc9YS5yZW5kZXJBbGxQZW5kaW5nLGg9YS51bndyYXAsaT1hLnVud3JhcElmTmVlZGVkLGo9YS53cmFwLGs9d2luZG93LldpbmRvdyxsPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlLG09d2luZG93LmdldERlZmF1bHRDb21wdXRlZFN0eWxlLG49d2luZG93LmdldFNlbGVjdGlvbjtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxrLnByb3RvdHlwZS5nZXRDb21wdXRlZFN0eWxlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGoodGhpc3x8d2luZG93KS5nZXRDb21wdXRlZFN0eWxlKGkoYSksYil9LG0mJihrLnByb3RvdHlwZS5nZXREZWZhdWx0Q29tcHV0ZWRTdHlsZT1mdW5jdGlvbihhLGIpe3JldHVybiBqKHRoaXN8fHdpbmRvdykuZ2V0RGVmYXVsdENvbXB1dGVkU3R5bGUoaShhKSxiKX0pLGsucHJvdG90eXBlLmdldFNlbGVjdGlvbj1mdW5jdGlvbigpe3JldHVybiBqKHRoaXN8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCl9LGRlbGV0ZSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSxkZWxldGUgd2luZG93LmdldFNlbGVjdGlvbixbImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCJdLmZvckVhY2goZnVuY3Rpb24oYSl7ay5wcm90b3R5cGVbYV09ZnVuY3Rpb24oKXt2YXIgYj1qKHRoaXN8fHdpbmRvdyk7cmV0dXJuIGJbYV0uYXBwbHkoYixhcmd1bWVudHMpfSxkZWxldGUgd2luZG93W2FdfSksZShiLnByb3RvdHlwZSx7Z2V0Q29tcHV0ZWRTdHlsZTpmdW5jdGlvbihhLGIpe3JldHVybiBnKCksbC5jYWxsKGgodGhpcyksaShhKSxiKX0sZ2V0U2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGcoKSxuZXcgZChuLmNhbGwoaCh0aGlzKSkpfSxnZXQgZG9jdW1lbnQoKXtyZXR1cm4gaihoKHRoaXMpLmRvY3VtZW50KX19KSxtJiYoYi5wcm90b3R5cGUuZ2V0RGVmYXVsdENvbXB1dGVkU3R5bGU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZygpLG0uY2FsbChoKHRoaXMpLGkoYSksYil9KSxmKGssYix3aW5kb3cpLGEud3JhcHBlcnMuV2luZG93PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO3ZhciBiPWEudW53cmFwLGM9d2luZG93LkRhdGFUcmFuc2Zlcnx8d2luZG93LkNsaXBib2FyZCxkPWMucHJvdG90eXBlLnNldERyYWdJbWFnZTtkJiYoYy5wcm90b3R5cGUuc2V0RHJhZ0ltYWdlPWZ1bmN0aW9uKGEsYyxlKXtkLmNhbGwodGhpcyxiKGEpLGMsZSl9KX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYjtiPWEgaW5zdGFuY2VvZiBmP2E6bmV3IGYoYSYmZShhKSksZChiLHRoaXMpfXZhciBjPWEucmVnaXN0ZXJXcmFwcGVyLGQ9YS5zZXRXcmFwcGVyLGU9YS51bndyYXAsZj13aW5kb3cuRm9ybURhdGE7YyhmLGIsbmV3IGYpLGEud3JhcHBlcnMuRm9ybURhdGE9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYj1jW2FdLGQ9d2luZG93W2JdO2lmKGQpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYSksZj1lLmNvbnN0cnVjdG9yO3dpbmRvd1tiXT1mfX12YXIgYz0oYS5pc1dyYXBwZXJGb3Ise2E6IkhUTUxBbmNob3JFbGVtZW50IixhcmVhOiJIVE1MQXJlYUVsZW1lbnQiLGF1ZGlvOiJIVE1MQXVkaW9FbGVtZW50IixiYXNlOiJIVE1MQmFzZUVsZW1lbnQiLGJvZHk6IkhUTUxCb2R5RWxlbWVudCIsYnI6IkhUTUxCUkVsZW1lbnQiLGJ1dHRvbjoiSFRNTEJ1dHRvbkVsZW1lbnQiLGNhbnZhczoiSFRNTENhbnZhc0VsZW1lbnQiLGNhcHRpb246IkhUTUxUYWJsZUNhcHRpb25FbGVtZW50Iixjb2w6IkhUTUxUYWJsZUNvbEVsZW1lbnQiLGNvbnRlbnQ6IkhUTUxDb250ZW50RWxlbWVudCIsZGF0YToiSFRNTERhdGFFbGVtZW50IixkYXRhbGlzdDoiSFRNTERhdGFMaXN0RWxlbWVudCIsZGVsOiJIVE1MTW9kRWxlbWVudCIsZGlyOiJIVE1MRGlyZWN0b3J5RWxlbWVudCIsZGl2OiJIVE1MRGl2RWxlbWVudCIsZGw6IkhUTUxETGlzdEVsZW1lbnQiLGVtYmVkOiJIVE1MRW1iZWRFbGVtZW50IixmaWVsZHNldDoiSFRNTEZpZWxkU2V0RWxlbWVudCIsZm9udDoiSFRNTEZvbnRFbGVtZW50Iixmb3JtOiJIVE1MRm9ybUVsZW1lbnQiLGZyYW1lOiJIVE1MRnJhbWVFbGVtZW50IixmcmFtZXNldDoiSFRNTEZyYW1lU2V0RWxlbWVudCIsaDE6IkhUTUxIZWFkaW5nRWxlbWVudCIsaGVhZDoiSFRNTEhlYWRFbGVtZW50IixocjoiSFRNTEhSRWxlbWVudCIsaHRtbDoiSFRNTEh0bWxFbGVtZW50IixpZnJhbWU6IkhUTUxJRnJhbWVFbGVtZW50IixpbWc6IkhUTUxJbWFnZUVsZW1lbnQiLGlucHV0OiJIVE1MSW5wdXRFbGVtZW50IixrZXlnZW46IkhUTUxLZXlnZW5FbGVtZW50IixsYWJlbDoiSFRNTExhYmVsRWxlbWVudCIsbGVnZW5kOiJIVE1MTGVnZW5kRWxlbWVudCIsbGk6IkhUTUxMSUVsZW1lbnQiLGxpbms6IkhUTUxMaW5rRWxlbWVudCIsbWFwOiJIVE1MTWFwRWxlbWVudCIsbWFycXVlZToiSFRNTE1hcnF1ZWVFbGVtZW50IixtZW51OiJIVE1MTWVudUVsZW1lbnQiLG1lbnVpdGVtOiJIVE1MTWVudUl0ZW1FbGVtZW50IixtZXRhOiJIVE1MTWV0YUVsZW1lbnQiLG1ldGVyOiJIVE1MTWV0ZXJFbGVtZW50IixvYmplY3Q6IkhUTUxPYmplY3RFbGVtZW50IixvbDoiSFRNTE9MaXN0RWxlbWVudCIsb3B0Z3JvdXA6IkhUTUxPcHRHcm91cEVsZW1lbnQiLG9wdGlvbjoiSFRNTE9wdGlvbkVsZW1lbnQiLG91dHB1dDoiSFRNTE91dHB1dEVsZW1lbnQiLHA6IkhUTUxQYXJhZ3JhcGhFbGVtZW50IixwYXJhbToiSFRNTFBhcmFtRWxlbWVudCIscHJlOiJIVE1MUHJlRWxlbWVudCIscHJvZ3Jlc3M6IkhUTUxQcm9ncmVzc0VsZW1lbnQiLHE6IkhUTUxRdW90ZUVsZW1lbnQiLHNjcmlwdDoiSFRNTFNjcmlwdEVsZW1lbnQiLHNlbGVjdDoiSFRNTFNlbGVjdEVsZW1lbnQiLHNoYWRvdzoiSFRNTFNoYWRvd0VsZW1lbnQiLHNvdXJjZToiSFRNTFNvdXJjZUVsZW1lbnQiLHNwYW46IkhUTUxTcGFuRWxlbWVudCIsc3R5bGU6IkhUTUxTdHlsZUVsZW1lbnQiLHRhYmxlOiJIVE1MVGFibGVFbGVtZW50Iix0Ym9keToiSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQiLHRlbXBsYXRlOiJIVE1MVGVtcGxhdGVFbGVtZW50Iix0ZXh0YXJlYToiSFRNTFRleHRBcmVhRWxlbWVudCIsdGhlYWQ6IkhUTUxUYWJsZVNlY3Rpb25FbGVtZW50Iix0aW1lOiJIVE1MVGltZUVsZW1lbnQiLHRpdGxlOiJIVE1MVGl0bGVFbGVtZW50Iix0cjoiSFRNTFRhYmxlUm93RWxlbWVudCIsdHJhY2s6IkhUTUxUcmFja0VsZW1lbnQiLHVsOiJIVE1MVUxpc3RFbGVtZW50Iix2aWRlbzoiSFRNTFZpZGVvRWxlbWVudCJ9KTtPYmplY3Qua2V5cyhjKS5mb3JFYWNoKGIpLE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEud3JhcHBlcnMpLmZvckVhY2goZnVuY3Rpb24oYil7d2luZG93W2JdPWEud3JhcHBlcnNbYl19KX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEsYyl7dmFyIGQsZSxmLGcsaD1hLmZpcnN0RWxlbWVudENoaWxkO2ZvcihlPVtdLGY9YS5zaGFkb3dSb290O2Y7KWUucHVzaChmKSxmPWYub2xkZXJTaGFkb3dSb290O2ZvcihnPWUubGVuZ3RoLTE7Zz49MDtnLS0paWYoZD1lW2ddLnF1ZXJ5U2VsZWN0b3IoYykpcmV0dXJuIGQ7Zm9yKDtoOyl7aWYoZD1iKGgsYykpcmV0dXJuIGQ7aD1oLm5leHRFbGVtZW50U2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBjKGEsYixkKXt2YXIgZSxmLGcsaCxpLGo9YS5maXJzdEVsZW1lbnRDaGlsZDtmb3IoZz1bXSxmPWEuc2hhZG93Um9vdDtmOylnLnB1c2goZiksZj1mLm9sZGVyU2hhZG93Um9vdDtmb3IoaD1nLmxlbmd0aC0xO2g+PTA7aC0tKWZvcihlPWdbaF0ucXVlcnlTZWxlY3RvckFsbChiKSxpPTA7aTxlLmxlbmd0aDtpKyspZC5wdXNoKGVbaV0pO2Zvcig7ajspYyhqLGIsZCksaj1qLm5leHRFbGVtZW50U2libGluZztyZXR1cm4gZH13aW5kb3cud3JhcD1TaGFkb3dET01Qb2x5ZmlsbC53cmFwSWZOZWVkZWQsd2luZG93LnVud3JhcD1TaGFkb3dET01Qb2x5ZmlsbC51bndyYXBJZk5lZWRlZCxPYmplY3QuZGVmaW5lUHJvcGVydHkoRWxlbWVudC5wcm90b3R5cGUsIndlYmtpdFNoYWRvd1Jvb3QiLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoRWxlbWVudC5wcm90b3R5cGUsInNoYWRvd1Jvb3QiKSk7dmFyIGQ9RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhZG93Um9vdDtFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTaGFkb3dSb290PWZ1bmN0aW9uKCl7dmFyIGE9ZC5jYWxsKHRoaXMpO3JldHVybiBDdXN0b21FbGVtZW50cy53YXRjaFNoYWRvdyh0aGlzKSxhfSxFbGVtZW50LnByb3RvdHlwZS53ZWJraXRDcmVhdGVTaGFkb3dSb290PUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3QsYS5xdWVyeUFsbFNoYWRvd3M9ZnVuY3Rpb24oYSxkLGUpe3JldHVybiBlP2MoYSxkLFtdKTpiKGEsZCl9fSh3aW5kb3cuUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz0iIjtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLGZ1bmN0aW9uKGEpe2MrPWEudGV4dENvbnRlbnQrIlxuXG4ifSksYnx8KGM9Yy5yZXBsYWNlKGwsIiIpKSxjfWZ1bmN0aW9uIGMoYSl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtyZXR1cm4gYi50ZXh0Q29udGVudD1hLGJ9ZnVuY3Rpb24gZChhKXt2YXIgYj1jKGEpO2RvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYik7dmFyIGQ9W107aWYoYi5zaGVldCl0cnl7ZD1iLnNoZWV0LmNzc1J1bGVzfWNhdGNoKGUpe31lbHNlIGNvbnNvbGUud2Fybigic2hlZXQgbm90IGZvdW5kIixiKTtyZXR1cm4gYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLGR9ZnVuY3Rpb24gZSgpe3YuaW5pdGlhbGl6ZWQ9ITAsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2KTt2YXIgYT12LmNvbnRlbnREb2N1bWVudCxiPWEuY3JlYXRlRWxlbWVudCgiYmFzZSIpO2IuaHJlZj1kb2N1bWVudC5iYXNlVVJJLGEuaGVhZC5hcHBlbmRDaGlsZChiKX1mdW5jdGlvbiBmKGEpe3YuaW5pdGlhbGl6ZWR8fGUoKSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHYpLGEodi5jb250ZW50RG9jdW1lbnQpLGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodil9ZnVuY3Rpb24gZyhhLGIpe2lmKGIpe3ZhciBlO2lmKGEubWF0Y2goIkBpbXBvcnQiKSYmeCl7dmFyIGc9YyhhKTtmKGZ1bmN0aW9uKGEpe2EuaGVhZC5hcHBlbmRDaGlsZChnLmltcGwpLGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZy5zaGVldC5jc3NSdWxlcywwKSxiKGUpfSl9ZWxzZSBlPWQoYSksYihlKX19ZnVuY3Rpb24gaChhKXthJiZqKCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYSkpfWZ1bmN0aW9uIGkoYSxiKXt2YXIgZD1jKGEpO2Quc2V0QXR0cmlidXRlKGIsIiIpLGQuc2V0QXR0cmlidXRlKHosIiIpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZCl9ZnVuY3Rpb24gaigpe3JldHVybiB3fHwodz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpLHcuc2V0QXR0cmlidXRlKHosIiIpLHdbel09ITApLHd9dmFyIGs9e3N0cmljdFN0eWxpbmc6ITEscmVnaXN0cnk6e30sc2hpbVN0eWxpbmc6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPXRoaXMucHJlcGFyZVJvb3QoYSxjLGQpLGY9dGhpcy5pc1R5cGVFeHRlbnNpb24oZCksZz10aGlzLm1ha2VTY29wZVNlbGVjdG9yKGMsZiksaD1iKGUsITApO2g9dGhpcy5zY29wZUNzc1RleHQoaCxnKSxhJiYoYS5zaGltbWVkU3R5bGU9aCksdGhpcy5hZGRDc3NUb0RvY3VtZW50KGgsYyl9LHNoaW1TdHlsZTpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnNoaW1Dc3NUZXh0KGEudGV4dENvbnRlbnQsYil9LHNoaW1Dc3NUZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9dGhpcy5pbnNlcnREaXJlY3RpdmVzKGEpLHRoaXMuc2NvcGVDc3NUZXh0KGEsYil9LG1ha2VTY29wZVNlbGVjdG9yOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE/Yj8iW2lzPSIrYSsiXSI6YToiIn0saXNUeXBlRXh0ZW5zaW9uOmZ1bmN0aW9uKGEpe3JldHVybiBhJiZhLmluZGV4T2YoIi0iKTwwfSxwcmVwYXJlUm9vdDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5yZWdpc3RlclJvb3QoYSxiLGMpO3JldHVybiB0aGlzLnJlcGxhY2VUZXh0SW5TdHlsZXMoZC5yb290U3R5bGVzLHRoaXMuaW5zZXJ0RGlyZWN0aXZlcyksdGhpcy5yZW1vdmVTdHlsZXMoYSxkLnJvb3RTdHlsZXMpLHRoaXMuc3RyaWN0U3R5bGluZyYmdGhpcy5hcHBseVNjb3BlVG9Db250ZW50KGEsYiksZC5zY29wZVN0eWxlc30scmVtb3ZlU3R5bGVzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjLGQ9MCxlPWIubGVuZ3RoO2U+ZCYmKGM9YltkXSk7ZCsrKWMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKX0scmVnaXN0ZXJSb290OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLnJlZ2lzdHJ5W2JdPXtyb290OmEsbmFtZTpiLGV4dGVuZHNOYW1lOmN9LGU9dGhpcy5maW5kU3R5bGVzKGEpO2Qucm9vdFN0eWxlcz1lLGQuc2NvcGVTdHlsZXM9ZC5yb290U3R5bGVzO3ZhciBmPXRoaXMucmVnaXN0cnlbZC5leHRlbmRzTmFtZV07cmV0dXJuIGYmJihkLnNjb3BlU3R5bGVzPWYuc2NvcGVTdHlsZXMuY29uY2F0KGQuc2NvcGVTdHlsZXMpKSxkfSxmaW5kU3R5bGVzOmZ1bmN0aW9uKGEpe2lmKCFhKXJldHVybltdO3ZhciBiPWEucXVlcnlTZWxlY3RvckFsbCgic3R5bGUiKTtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKGIsZnVuY3Rpb24oYSl7cmV0dXJuIWEuaGFzQXR0cmlidXRlKEEpfSl9LGFwcGx5U2NvcGVUb0NvbnRlbnQ6ZnVuY3Rpb24oYSxiKXthJiYoQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLnF1ZXJ5U2VsZWN0b3JBbGwoIioiKSxmdW5jdGlvbihhKXthLnNldEF0dHJpYnV0ZShiLCIiKX0pLEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYS5xdWVyeVNlbGVjdG9yQWxsKCJ0ZW1wbGF0ZSIpLGZ1bmN0aW9uKGEpe3RoaXMuYXBwbHlTY29wZVRvQ29udGVudChhLmNvbnRlbnQsYil9LHRoaXMpKX0saW5zZXJ0RGlyZWN0aXZlczpmdW5jdGlvbihhKXtyZXR1cm4gYT10aGlzLmluc2VydFBvbHlmaWxsRGlyZWN0aXZlc0luQ3NzVGV4dChhKSx0aGlzLmluc2VydFBvbHlmaWxsUnVsZXNJbkNzc1RleHQoYSl9LGluc2VydFBvbHlmaWxsRGlyZWN0aXZlc0luQ3NzVGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UobSxmdW5jdGlvbihhLGIpe3JldHVybiBiLnNsaWNlKDAsLTIpKyJ7In0pLGEucmVwbGFjZShuLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIrIiB7In0pfSxpbnNlcnRQb2x5ZmlsbFJ1bGVzSW5Dc3NUZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShvLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIuc2xpY2UoMCwtMSl9KSxhLnJlcGxhY2UocCxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLnJlcGxhY2UoYiwiIikucmVwbGFjZShjLCIiKTtyZXR1cm4gZCtlfSl9LHNjb3BlQ3NzVGV4dDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZXh0cmFjdFVuc2NvcGVkUnVsZXNGcm9tQ3NzVGV4dChhKTtpZihhPXRoaXMuaW5zZXJ0UG9seWZpbGxIb3N0SW5Dc3NUZXh0KGEpLGE9dGhpcy5jb252ZXJ0Q29sb25Ib3N0KGEpLGE9dGhpcy5jb252ZXJ0Q29sb25Ib3N0Q29udGV4dChhKSxhPXRoaXMuY29udmVydFNoYWRvd0RPTVNlbGVjdG9ycyhhKSxiKXt2YXIgYSxkPXRoaXM7ZyhhLGZ1bmN0aW9uKGMpe2E9ZC5zY29wZVJ1bGVzKGMsYil9KX1yZXR1cm4gYT1hKyJcbiIrYyxhLnRyaW0oKX0sZXh0cmFjdFVuc2NvcGVkUnVsZXNGcm9tQ3NzVGV4dDpmdW5jdGlvbihhKXtmb3IodmFyIGIsYz0iIjtiPXEuZXhlYyhhKTspYys9YlsxXS5zbGljZSgwLC0xKSsiXG5cbiI7Zm9yKDtiPXIuZXhlYyhhKTspYys9YlswXS5yZXBsYWNlKGJbMl0sIiIpLnJlcGxhY2UoYlsxXSxiWzNdKSsiXG5cbiI7cmV0dXJuIGN9LGNvbnZlcnRDb2xvbkhvc3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuY29udmVydENvbG9uUnVsZShhLGNzc0NvbG9uSG9zdFJlLHRoaXMuY29sb25Ib3N0UGFydFJlcGxhY2VyKX0sY29udmVydENvbG9uSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuY29udmVydENvbG9uUnVsZShhLGNzc0NvbG9uSG9zdENvbnRleHRSZSx0aGlzLmNvbG9uSG9zdENvbnRleHRQYXJ0UmVwbGFjZXIpfSxjb252ZXJ0Q29sb25SdWxlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYS5yZXBsYWNlKGIsZnVuY3Rpb24oYSxiLGQsZSl7aWYoYj1wb2x5ZmlsbEhvc3ROb0NvbWJpbmF0b3IsZCl7Zm9yKHZhciBmLGc9ZC5zcGxpdCgiLCIpLGg9W10saT0wLGo9Zy5sZW5ndGg7aj5pJiYoZj1nW2ldKTtpKyspZj1mLnRyaW0oKSxoLnB1c2goYyhiLGYsZSkpO3JldHVybiBoLmpvaW4oIiwiKX1yZXR1cm4gYitlfSl9LGNvbG9uSG9zdENvbnRleHRQYXJ0UmVwbGFjZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBiLm1hdGNoKHMpP3RoaXMuY29sb25Ib3N0UGFydFJlcGxhY2VyKGEsYixjKTphK2IrYysiLCAiK2IrIiAiK2ErY30sY29sb25Ib3N0UGFydFJlcGxhY2VyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYStiLnJlcGxhY2UocywiIikrY30sY29udmVydFNoYWRvd0RPTVNlbGVjdG9yczpmdW5jdGlvbihhKXtmb3IodmFyIGI9MDtiPHNoYWRvd0RPTVNlbGVjdG9yc1JlLmxlbmd0aDtiKyspYT1hLnJlcGxhY2Uoc2hhZG93RE9NU2VsZWN0b3JzUmVbYl0sIiAiKTtyZXR1cm4gYX0sc2NvcGVSdWxlczpmdW5jdGlvbihhLGIpe3ZhciBjPSIiO3JldHVybiBhJiZBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGEsZnVuY3Rpb24oYSl7aWYoYS5zZWxlY3RvclRleHQmJmEuc3R5bGUmJnZvaWQgMCE9PWEuc3R5bGUuY3NzVGV4dCljKz10aGlzLnNjb3BlU2VsZWN0b3IoYS5zZWxlY3RvclRleHQsYix0aGlzLnN0cmljdFN0eWxpbmcpKyIge1xuCSIsYys9dGhpcy5wcm9wZXJ0aWVzRnJvbVJ1bGUoYSkrIlxufVxuXG4iO2Vsc2UgaWYoYS50eXBlPT09Q1NTUnVsZS5NRURJQV9SVUxFKWMrPSJAbWVkaWEgIithLm1lZGlhLm1lZGlhVGV4dCsiIHtcbiIsYys9dGhpcy5zY29wZVJ1bGVzKGEuY3NzUnVsZXMsYiksYys9IlxufVxuXG4iO2Vsc2UgdHJ5e2EuY3NzVGV4dCYmKGMrPWEuY3NzVGV4dCsiXG5cbiIpfWNhdGNoKGQpe2EudHlwZT09PUNTU1J1bGUuS0VZRlJBTUVTX1JVTEUmJmEuY3NzUnVsZXMmJihjKz10aGlzLmllU2FmZUNzc1RleHRGcm9tS2V5RnJhbWVSdWxlKGEpKX19LHRoaXMpLGN9LGllU2FmZUNzc1RleHRGcm9tS2V5RnJhbWVSdWxlOmZ1bmN0aW9uKGEpe3ZhciBiPSJAa2V5ZnJhbWVzICIrYS5uYW1lKyIgeyI7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYS5jc3NSdWxlcyxmdW5jdGlvbihhKXtiKz0iICIrYS5rZXlUZXh0KyIgeyIrYS5zdHlsZS5jc3NUZXh0KyJ9In0pLGIrPSIgfSJ9LHNjb3BlU2VsZWN0b3I6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVtdLGU9YS5zcGxpdCgiLCIpO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oYSl7YT1hLnRyaW0oKSx0aGlzLnNlbGVjdG9yTmVlZHNTY29waW5nKGEsYikmJihhPWMmJiFhLm1hdGNoKHBvbHlmaWxsSG9zdE5vQ29tYmluYXRvcik/dGhpcy5hcHBseVN0cmljdFNlbGVjdG9yU2NvcGUoYSxiKTp0aGlzLmFwcGx5U2VsZWN0b3JTY29wZShhLGIpKSxkLnB1c2goYSl9LHRoaXMpLGQuam9pbigiLCAiKX0sc2VsZWN0b3JOZWVkc1Njb3Bpbmc6ZnVuY3Rpb24oYSxiKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiEwO3ZhciBjPXRoaXMubWFrZVNjb3BlTWF0Y2hlcihiKTtyZXR1cm4hYS5tYXRjaChjKX0sbWFrZVNjb3BlTWF0Y2hlcjpmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoL1xbL2csIlxcWyIpLnJlcGxhY2UoL1xbL2csIlxcXSIpLG5ldyBSZWdFeHAoIl4oIithKyIpIitzZWxlY3RvclJlU3VmZml4LCJtIil9LGFwcGx5U2VsZWN0b3JTY29wZTpmdW5jdGlvbihhLGIpe3JldHVybiBBcnJheS5pc0FycmF5KGIpP3RoaXMuYXBwbHlTZWxlY3RvclNjb3BlTGlzdChhLGIpOnRoaXMuYXBwbHlTaW1wbGVTZWxlY3RvclNjb3BlKGEsYil9LGFwcGx5U2VsZWN0b3JTY29wZUxpc3Q6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGMsZD1bXSxlPTA7Yz1iW2VdO2UrKylkLnB1c2godGhpcy5hcHBseVNpbXBsZVNlbGVjdG9yU2NvcGUoYSxjKSk7cmV0dXJuIGQuam9pbigiLCAiKX0sYXBwbHlTaW1wbGVTZWxlY3RvclNjb3BlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEubWF0Y2gocG9seWZpbGxIb3N0UmUpPyhhPWEucmVwbGFjZShwb2x5ZmlsbEhvc3ROb0NvbWJpbmF0b3IsYiksYS5yZXBsYWNlKHBvbHlmaWxsSG9zdFJlLGIrIiAiKSk6YisiICIrYX0sYXBwbHlTdHJpY3RTZWxlY3RvclNjb3BlOmZ1bmN0aW9uKGEsYil7Yj1iLnJlcGxhY2UoL1xbaXM9KFteXF1dKilcXS9nLCIkMSIpO3ZhciBjPVsiICIsIj4iLCIrIiwifiJdLGQ9YSxlPSJbIitiKyJdIjtyZXR1cm4gYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWQuc3BsaXQoYSk7ZD1iLm1hcChmdW5jdGlvbihhKXt2YXIgYj1hLnRyaW0oKS5yZXBsYWNlKHBvbHlmaWxsSG9zdFJlLCIiKTtyZXR1cm4gYiYmYy5pbmRleE9mKGIpPDAmJmIuaW5kZXhPZihlKTwwJiYoYT1iLnJlcGxhY2UoLyhbXjpdKikoOiopKC4qKS8sIiQxIitlKyIkMiQzIikpLGF9KS5qb2luKGEpfSksZH0saW5zZXJ0UG9seWZpbGxIb3N0SW5Dc3NUZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoY29sb25Ib3N0Q29udGV4dFJlLHQpLnJlcGxhY2UoY29sb25Ib3N0UmUscyl9LHByb3BlcnRpZXNGcm9tUnVsZTpmdW5jdGlvbihhKXt2YXIgYj1hLnN0eWxlLmNzc1RleHQ7YS5zdHlsZS5jb250ZW50JiYhYS5zdHlsZS5jb250ZW50Lm1hdGNoKC9bJyJdK3xhdHRyLykmJihiPWIucmVwbGFjZSgvY29udGVudDpbXjtdKjsvZywiY29udGVudDogJyIrYS5zdHlsZS5jb250ZW50KyInOyIpKTt2YXIgYz1hLnN0eWxlO2Zvcih2YXIgZCBpbiBjKSJpbml0aWFsIj09PWNbZF0mJihiKz1kKyI6IGluaXRpYWw7ICIpO3JldHVybiBifSxyZXBsYWNlVGV4dEluU3R5bGVzOmZ1bmN0aW9uKGEsYil7YSYmYiYmKGEgaW5zdGFuY2VvZiBBcnJheXx8KGE9W2FdKSxBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGEsZnVuY3Rpb24oYSl7YS50ZXh0Q29udGVudD1iLmNhbGwodGhpcyxhLnRleHRDb250ZW50KX0sdGhpcykpfSxhZGRDc3NUb0RvY3VtZW50OmZ1bmN0aW9uKGEsYil7YS5tYXRjaCgiQGltcG9ydCIpP2koYSxiKTpoKGEpfX0sbD0vXC9cKlteKl0qXCorKFteLypdW14qXSpcKispKlwvL2dpbSxtPS9cL1wqXHMqQHBvbHlmaWxsIChbXipdKlwqKyhbXi8qXVteKl0qXCorKSpcLykoW157XSo/KXsvZ2ltLG49L3BvbHlmaWxsLW5leHQtc2VsZWN0b3JbXn1dKmNvbnRlbnRcOltcc10qP1snIl0oLio/KVsnIl1bO1xzXSp9KFtee10qPyl7L2dpbSxvPS9cL1wqXHNAcG9seWZpbGwtcnVsZShbXipdKlwqKyhbXi8qXVteKl0qXCorKSopXC8vZ2ltLHA9Lyhwb2x5ZmlsbC1ydWxlKVtefV0qKGNvbnRlbnRcOltcc10qWyciXSguKj8pWyciXSlbO1xzXSpbXn1dKn0vZ2ltLHE9L1wvXCpcc0Bwb2x5ZmlsbC11bnNjb3BlZC1ydWxlKFteKl0qXCorKFteLypdW14qXSpcKispKilcLy9naW0scj0vKHBvbHlmaWxsLXVuc2NvcGVkLXJ1bGUpW159XSooY29udGVudFw6W1xzXSpbJyJdKC4qPylbJyJdKVs7XHNdKltefV0qfS9naW0scz0iLXNoYWRvd2Nzc2hvc3QiLHQ9Ii1zaGFkb3djc3Njb250ZXh0Iix1PSIpKD86XFwoKCg/OlxcKFteKShdKlxcKXxbXikoXSopKz8pXFwpKT8oW14se10qKSI7Y3NzQ29sb25Ib3N0UmU9bmV3IFJlZ0V4cCgiKCIrcyt1LCJnaW0iKSxjc3NDb2xvbkhvc3RDb250ZXh0UmU9bmV3IFJlZ0V4cCgiKCIrdCt1LCJnaW0iKSxzZWxlY3RvclJlU3VmZml4PSIoWz5cXHN+K1suLHs6XVtcXHNcXFNdKik/JCIsY29sb25Ib3N0UmU9L1w6aG9zdC9naW0sY29sb25Ib3N0Q29udGV4dFJlPS9cOmhvc3QtY29udGV4dC9naW0scG9seWZpbGxIb3N0Tm9Db21iaW5hdG9yPXMrIi1uby1jb21iaW5hdG9yIixwb2x5ZmlsbEhvc3RSZT1uZXcgUmVnRXhwKHMsImdpbSIpLHBvbHlmaWxsSG9zdENvbnRleHRSZT1uZXcgUmVnRXhwKHQsImdpbSIpLHNoYWRvd0RPTVNlbGVjdG9yc1JlPVsvXF5cXi9nLC9cXi9nLC9cL3NoYWRvd1wvL2csL1wvc2hhZG93LWRlZXBcLy9nLC86OnNoYWRvdy9nLC9cL2RlZXBcLy9nLC86OmNvbnRlbnQvZ107dmFyIHY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7di5zdHlsZS5kaXNwbGF5PSJub25lIjt2YXIgdyx4PW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goIkNocm9tZSIpLHk9InNoaW0tc2hhZG93ZG9tIix6PSJzaGltLXNoYWRvd2RvbS1jc3MiLEE9Im5vLXNoaW0iO2lmKHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCl7aCgic3R5bGUgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbiIpO3ZhciBCPXdyYXAoZG9jdW1lbnQpLEM9Qi5xdWVyeVNlbGVjdG9yKCJoZWFkIik7Qy5pbnNlcnRCZWZvcmUoaigpLEMuY2hpbGROb2Rlc1swXSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZnVuY3Rpb24oKXthLnVybFJlc29sdmVyO2lmKHdpbmRvdy5IVE1MSW1wb3J0cyYmIUhUTUxJbXBvcnRzLnVzZU5hdGl2ZSl7dmFyIGI9ImxpbmtbcmVsPXN0eWxlc2hlZXRdWyIreSsiXSIsYz0ic3R5bGVbIit5KyJdIjtIVE1MSW1wb3J0cy5pbXBvcnRlci5kb2N1bWVudFByZWxvYWRTZWxlY3RvcnMrPSIsIitiLEhUTUxJbXBvcnRzLmltcG9ydGVyLmltcG9ydHNQcmVsb2FkU2VsZWN0b3JzKz0iLCIrYixIVE1MSW1wb3J0cy5wYXJzZXIuZG9jdW1lbnRTZWxlY3RvcnM9W0hUTUxJbXBvcnRzLnBhcnNlci5kb2N1bWVudFNlbGVjdG9ycyxiLGNdLmpvaW4oIiwiKTt2YXIgZD1IVE1MSW1wb3J0cy5wYXJzZXIucGFyc2VHZW5lcmljO0hUTUxJbXBvcnRzLnBhcnNlci5wYXJzZUdlbmVyaWM9ZnVuY3Rpb24oYSl7aWYoIWFbel0pe3ZhciBiPWEuX19pbXBvcnRFbGVtZW50fHxhO2lmKCFiLmhhc0F0dHJpYnV0ZSh5KSlyZXR1cm4gdm9pZCBkLmNhbGwodGhpcyxhKTthLl9fcmVzb3VyY2UmJihiPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpLGIudGV4dENvbnRlbnQ9YS5fX3Jlc291cmNlKSxIVE1MSW1wb3J0cy5wYXRoLnJlc29sdmVVcmxzSW5TdHlsZShiKSxiLnRleHRDb250ZW50PWsuc2hpbVN0eWxlKGIpLGIucmVtb3ZlQXR0cmlidXRlKHksIiIpLGIuc2V0QXR0cmlidXRlKHosIiIpLGJbel09ITAsYi5wYXJlbnROb2RlIT09QyYmKGEucGFyZW50Tm9kZT09PUM/Qy5yZXBsYWNlQ2hpbGQoYixhKTp0aGlzLmFkZEVsZW1lbnRUb0RvY3VtZW50KGIpKSxiLl9faW1wb3J0UGFyc2VkPSEwLHRoaXMubWFya1BhcnNpbmdDb21wbGV0ZShhKSx0aGlzLnBhcnNlTmV4dCgpCn19O3ZhciBlPUhUTUxJbXBvcnRzLnBhcnNlci5oYXNSZXNvdXJjZTtIVE1MSW1wb3J0cy5wYXJzZXIuaGFzUmVzb3VyY2U9ZnVuY3Rpb24oYSl7cmV0dXJuImxpbmsiPT09YS5sb2NhbE5hbWUmJiJzdHlsZXNoZWV0Ij09PWEucmVsJiZhLmhhc0F0dHJpYnV0ZSh5KT9hLl9fcmVzb3VyY2U6ZS5jYWxsKHRoaXMsYSl9fX0pfWEuU2hhZG93Q1NTPWt9KHdpbmRvdy5QbGF0Zm9ybSkpOiFmdW5jdGlvbigpe3dpbmRvdy53cmFwPXdpbmRvdy51bndyYXA9ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LGFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGZ1bmN0aW9uKCl7aWYoQ3VzdG9tRWxlbWVudHMudXNlTmF0aXZlPT09ITEpe3ZhciBhPUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3Q7RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhZG93Um9vdD1mdW5jdGlvbigpe3ZhciBiPWEuY2FsbCh0aGlzKTtyZXR1cm4gQ3VzdG9tRWxlbWVudHMud2F0Y2hTaGFkb3codGhpcyksYn19fSl9KHdpbmRvdy5QbGF0Zm9ybSksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7cmV0dXJuIHZvaWQgMCE9PW1bYV19ZnVuY3Rpb24gYygpe2guY2FsbCh0aGlzKSx0aGlzLl9pc0ludmFsaWQ9ITB9ZnVuY3Rpb24gZChhKXtyZXR1cm4iIj09YSYmYy5jYWxsKHRoaXMpLGEudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBlKGEpe3ZhciBiPWEuY2hhckNvZGVBdCgwKTtyZXR1cm4gYj4zMiYmMTI3PmImJi0xPT1bMzQsMzUsNjAsNjIsNjMsOTZdLmluZGV4T2YoYik/YTplbmNvZGVVUklDb21wb25lbnQoYSl9ZnVuY3Rpb24gZihhKXt2YXIgYj1hLmNoYXJDb2RlQXQoMCk7cmV0dXJuIGI+MzImJjEyNz5iJiYtMT09WzM0LDM1LDYwLDYyLDk2XS5pbmRleE9mKGIpP2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGcoYSxnLGgpe2Z1bmN0aW9uIGkoYSl7dC5wdXNoKGEpfXZhciBqPWd8fCJzY2hlbWUgc3RhcnQiLGs9MCxsPSIiLHI9ITEscz0hMSx0PVtdO2E6Zm9yKDsoYVtrLTFdIT1vfHwwPT1rKSYmIXRoaXMuX2lzSW52YWxpZDspe3ZhciB1PWFba107c3dpdGNoKGope2Nhc2Uic2NoZW1lIHN0YXJ0IjppZighdXx8IXAudGVzdCh1KSl7aWYoZyl7aSgiSW52YWxpZCBzY2hlbWUuIik7YnJlYWsgYX1sPSIiLGo9Im5vIHNjaGVtZSI7Y29udGludWV9bCs9dS50b0xvd2VyQ2FzZSgpLGo9InNjaGVtZSI7YnJlYWs7Y2FzZSJzY2hlbWUiOmlmKHUmJnEudGVzdCh1KSlsKz11LnRvTG93ZXJDYXNlKCk7ZWxzZXtpZigiOiIhPXUpe2lmKGcpe2lmKG89PXUpYnJlYWsgYTtpKCJDb2RlIHBvaW50IG5vdCBhbGxvd2VkIGluIHNjaGVtZTogIit1KTticmVhayBhfWw9IiIsaz0wLGo9Im5vIHNjaGVtZSI7Y29udGludWV9aWYodGhpcy5fc2NoZW1lPWwsbD0iIixnKWJyZWFrIGE7Yih0aGlzLl9zY2hlbWUpJiYodGhpcy5faXNSZWxhdGl2ZT0hMCksaj0iZmlsZSI9PXRoaXMuX3NjaGVtZT8icmVsYXRpdmUiOnRoaXMuX2lzUmVsYXRpdmUmJmgmJmguX3NjaGVtZT09dGhpcy5fc2NoZW1lPyJyZWxhdGl2ZSBvciBhdXRob3JpdHkiOnRoaXMuX2lzUmVsYXRpdmU/ImF1dGhvcml0eSBmaXJzdCBzbGFzaCI6InNjaGVtZSBkYXRhIn1icmVhaztjYXNlInNjaGVtZSBkYXRhIjoiPyI9PXU/KHF1ZXJ5PSI/IixqPSJxdWVyeSIpOiIjIj09dT8odGhpcy5fZnJhZ21lbnQ9IiMiLGo9ImZyYWdtZW50Iik6byE9dSYmIgkiIT11JiYiXG4iIT11JiYiXHIiIT11JiYodGhpcy5fc2NoZW1lRGF0YSs9ZSh1KSk7YnJlYWs7Y2FzZSJubyBzY2hlbWUiOmlmKGgmJmIoaC5fc2NoZW1lKSl7aj0icmVsYXRpdmUiO2NvbnRpbnVlfWkoIk1pc3Npbmcgc2NoZW1lLiIpLGMuY2FsbCh0aGlzKTticmVhaztjYXNlInJlbGF0aXZlIG9yIGF1dGhvcml0eSI6aWYoIi8iIT11fHwiLyIhPWFbaysxXSl7aSgiRXhwZWN0ZWQgLywgZ290OiAiK3UpLGo9InJlbGF0aXZlIjtjb250aW51ZX1qPSJhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMiO2JyZWFrO2Nhc2UicmVsYXRpdmUiOmlmKHRoaXMuX2lzUmVsYXRpdmU9ITAsImZpbGUiIT10aGlzLl9zY2hlbWUmJih0aGlzLl9zY2hlbWU9aC5fc2NoZW1lKSxvPT11KXt0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0LHRoaXMuX3BhdGg9aC5fcGF0aC5zbGljZSgpLHRoaXMuX3F1ZXJ5PWguX3F1ZXJ5O2JyZWFrIGF9aWYoIi8iPT11fHwiXFwiPT11KSJcXCI9PXUmJmkoIlxcIGlzIGFuIGludmFsaWQgY29kZSBwb2ludC4iKSxqPSJyZWxhdGl2ZSBzbGFzaCI7ZWxzZSBpZigiPyI9PXUpdGhpcy5faG9zdD1oLl9ob3N0LHRoaXMuX3BvcnQ9aC5fcG9ydCx0aGlzLl9wYXRoPWguX3BhdGguc2xpY2UoKSx0aGlzLl9xdWVyeT0iPyIsaj0icXVlcnkiO2Vsc2V7aWYoIiMiIT11KXt2YXIgdj1hW2srMV0sdz1hW2srMl07KCJmaWxlIiE9dGhpcy5fc2NoZW1lfHwhcC50ZXN0KHUpfHwiOiIhPXYmJiJ8IiE9dnx8byE9dyYmIi8iIT13JiYiXFwiIT13JiYiPyIhPXcmJiIjIiE9dykmJih0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0LHRoaXMuX3BhdGg9aC5fcGF0aC5zbGljZSgpLHRoaXMuX3BhdGgucG9wKCkpLGo9InJlbGF0aXZlIHBhdGgiO2NvbnRpbnVlfXRoaXMuX2hvc3Q9aC5faG9zdCx0aGlzLl9wb3J0PWguX3BvcnQsdGhpcy5fcGF0aD1oLl9wYXRoLnNsaWNlKCksdGhpcy5fcXVlcnk9aC5fcXVlcnksdGhpcy5fZnJhZ21lbnQ9IiMiLGo9ImZyYWdtZW50In1icmVhaztjYXNlInJlbGF0aXZlIHNsYXNoIjppZigiLyIhPXUmJiJcXCIhPXUpeyJmaWxlIiE9dGhpcy5fc2NoZW1lJiYodGhpcy5faG9zdD1oLl9ob3N0LHRoaXMuX3BvcnQ9aC5fcG9ydCksaj0icmVsYXRpdmUgcGF0aCI7Y29udGludWV9IlxcIj09dSYmaSgiXFwgaXMgYW4gaW52YWxpZCBjb2RlIHBvaW50LiIpLGo9ImZpbGUiPT10aGlzLl9zY2hlbWU/ImZpbGUgaG9zdCI6ImF1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyI7YnJlYWs7Y2FzZSJhdXRob3JpdHkgZmlyc3Qgc2xhc2giOmlmKCIvIiE9dSl7aSgiRXhwZWN0ZWQgJy8nLCBnb3Q6ICIrdSksaj0iYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIjtjb250aW51ZX1qPSJhdXRob3JpdHkgc2Vjb25kIHNsYXNoIjticmVhaztjYXNlImF1dGhvcml0eSBzZWNvbmQgc2xhc2giOmlmKGo9ImF1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyIsIi8iIT11KXtpKCJFeHBlY3RlZCAnLycsIGdvdDogIit1KTtjb250aW51ZX1icmVhaztjYXNlImF1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyI6aWYoIi8iIT11JiYiXFwiIT11KXtqPSJhdXRob3JpdHkiO2NvbnRpbnVlfWkoIkV4cGVjdGVkIGF1dGhvcml0eSwgZ290OiAiK3UpO2JyZWFrO2Nhc2UiYXV0aG9yaXR5IjppZigiQCI9PXUpe3ImJihpKCJAIGFscmVhZHkgc2Vlbi4iKSxsKz0iJTQwIikscj0hMDtmb3IodmFyIHg9MDt4PGwubGVuZ3RoO3grKyl7dmFyIHk9bFt4XTtpZigiCSIhPXkmJiJcbiIhPXkmJiJcciIhPXkpaWYoIjoiIT15fHxudWxsIT09dGhpcy5fcGFzc3dvcmQpe3ZhciB6PWUoeSk7bnVsbCE9PXRoaXMuX3Bhc3N3b3JkP3RoaXMuX3Bhc3N3b3JkKz16OnRoaXMuX3VzZXJuYW1lKz16fWVsc2UgdGhpcy5fcGFzc3dvcmQ9IiI7ZWxzZSBpKCJJbnZhbGlkIHdoaXRlc3BhY2UgaW4gYXV0aG9yaXR5LiIpfWw9IiJ9ZWxzZXtpZihvPT11fHwiLyI9PXV8fCJcXCI9PXV8fCI/Ij09dXx8IiMiPT11KXtrLT1sLmxlbmd0aCxsPSIiLGo9Imhvc3QiO2NvbnRpbnVlfWwrPXV9YnJlYWs7Y2FzZSJmaWxlIGhvc3QiOmlmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXUpezIhPWwubGVuZ3RofHwhcC50ZXN0KGxbMF0pfHwiOiIhPWxbMV0mJiJ8IiE9bFsxXT8wPT1sLmxlbmd0aD9qPSJyZWxhdGl2ZSBwYXRoIHN0YXJ0IjoodGhpcy5faG9zdD1kLmNhbGwodGhpcyxsKSxsPSIiLGo9InJlbGF0aXZlIHBhdGggc3RhcnQiKTpqPSJyZWxhdGl2ZSBwYXRoIjtjb250aW51ZX0iCSI9PXV8fCJcbiI9PXV8fCJcciI9PXU/aSgiSW52YWxpZCB3aGl0ZXNwYWNlIGluIGZpbGUgaG9zdC4iKTpsKz11O2JyZWFrO2Nhc2UiaG9zdCI6Y2FzZSJob3N0bmFtZSI6aWYoIjoiIT11fHxzKXtpZihvPT11fHwiLyI9PXV8fCJcXCI9PXV8fCI/Ij09dXx8IiMiPT11KXtpZih0aGlzLl9ob3N0PWQuY2FsbCh0aGlzLGwpLGw9IiIsaj0icmVsYXRpdmUgcGF0aCBzdGFydCIsZylicmVhayBhO2NvbnRpbnVlfSIJIiE9dSYmIlxuIiE9dSYmIlxyIiE9dT8oIlsiPT11P3M9ITA6Il0iPT11JiYocz0hMSksbCs9dSk6aSgiSW52YWxpZCBjb2RlIHBvaW50IGluIGhvc3QvaG9zdG5hbWU6ICIrdSl9ZWxzZSBpZih0aGlzLl9ob3N0PWQuY2FsbCh0aGlzLGwpLGw9IiIsaj0icG9ydCIsImhvc3RuYW1lIj09ZylicmVhayBhO2JyZWFrO2Nhc2UicG9ydCI6aWYoL1swLTldLy50ZXN0KHUpKWwrPXU7ZWxzZXtpZihvPT11fHwiLyI9PXV8fCJcXCI9PXV8fCI/Ij09dXx8IiMiPT11fHxnKXtpZigiIiE9bCl7dmFyIEE9cGFyc2VJbnQobCwxMCk7QSE9bVt0aGlzLl9zY2hlbWVdJiYodGhpcy5fcG9ydD1BKyIiKSxsPSIifWlmKGcpYnJlYWsgYTtqPSJyZWxhdGl2ZSBwYXRoIHN0YXJ0Ijtjb250aW51ZX0iCSI9PXV8fCJcbiI9PXV8fCJcciI9PXU/aSgiSW52YWxpZCBjb2RlIHBvaW50IGluIHBvcnQ6ICIrdSk6Yy5jYWxsKHRoaXMpfWJyZWFrO2Nhc2UicmVsYXRpdmUgcGF0aCBzdGFydCI6aWYoIlxcIj09dSYmaSgiJ1xcJyBub3QgYWxsb3dlZCBpbiBwYXRoLiIpLGo9InJlbGF0aXZlIHBhdGgiLCIvIiE9dSYmIlxcIiE9dSljb250aW51ZTticmVhaztjYXNlInJlbGF0aXZlIHBhdGgiOmlmKG8hPXUmJiIvIiE9dSYmIlxcIiE9dSYmKGd8fCI/IiE9dSYmIiMiIT11KSkiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJihsKz1lKHUpKTtlbHNleyJcXCI9PXUmJmkoIlxcIG5vdCBhbGxvd2VkIGluIHJlbGF0aXZlIHBhdGguIik7dmFyIEI7KEI9bltsLnRvTG93ZXJDYXNlKCldKSYmKGw9QiksIi4uIj09bD8odGhpcy5fcGF0aC5wb3AoKSwiLyIhPXUmJiJcXCIhPXUmJnRoaXMuX3BhdGgucHVzaCgiIikpOiIuIj09bCYmIi8iIT11JiYiXFwiIT11P3RoaXMuX3BhdGgucHVzaCgiIik6Ii4iIT1sJiYoImZpbGUiPT10aGlzLl9zY2hlbWUmJjA9PXRoaXMuX3BhdGgubGVuZ3RoJiYyPT1sLmxlbmd0aCYmcC50ZXN0KGxbMF0pJiYifCI9PWxbMV0mJihsPWxbMF0rIjoiKSx0aGlzLl9wYXRoLnB1c2gobCkpLGw9IiIsIj8iPT11Pyh0aGlzLl9xdWVyeT0iPyIsaj0icXVlcnkiKToiIyI9PXUmJih0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQiKX1icmVhaztjYXNlInF1ZXJ5IjpnfHwiIyIhPXU/byE9dSYmIgkiIT11JiYiXG4iIT11JiYiXHIiIT11JiYodGhpcy5fcXVlcnkrPWYodSkpOih0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQiKTticmVhaztjYXNlImZyYWdtZW50IjpvIT11JiYiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJih0aGlzLl9mcmFnbWVudCs9dSl9aysrfX1mdW5jdGlvbiBoKCl7dGhpcy5fc2NoZW1lPSIiLHRoaXMuX3NjaGVtZURhdGE9IiIsdGhpcy5fdXNlcm5hbWU9IiIsdGhpcy5fcGFzc3dvcmQ9bnVsbCx0aGlzLl9ob3N0PSIiLHRoaXMuX3BvcnQ9IiIsdGhpcy5fcGF0aD1bXSx0aGlzLl9xdWVyeT0iIix0aGlzLl9mcmFnbWVudD0iIix0aGlzLl9pc0ludmFsaWQ9ITEsdGhpcy5faXNSZWxhdGl2ZT0hMX1mdW5jdGlvbiBpKGEsYil7dm9pZCAwPT09Ynx8YiBpbnN0YW5jZW9mIGl8fChiPW5ldyBpKFN0cmluZyhiKSkpLHRoaXMuX3VybD1hLGguY2FsbCh0aGlzKTt2YXIgYz1hLnJlcGxhY2UoL15bIFx0XHJcblxmXSt8WyBcdFxyXG5cZl0rJC9nLCIiKTtnLmNhbGwodGhpcyxjLG51bGwsYil9dmFyIGo9ITE7aWYoIWEuZm9yY2VKVVJMKXRyeXt2YXIgaz1uZXcgVVJMKCJiIiwiaHR0cDovL2EiKTtqPSJodHRwOi8vYS9iIj09PWsuaHJlZn1jYXRjaChsKXt9aWYoIWope3ZhciBtPU9iamVjdC5jcmVhdGUobnVsbCk7bS5mdHA9MjEsbS5maWxlPTAsbS5nb3BoZXI9NzAsbS5odHRwPTgwLG0uaHR0cHM9NDQzLG0ud3M9ODAsbS53c3M9NDQzO3ZhciBuPU9iamVjdC5jcmVhdGUobnVsbCk7blsiJTJlIl09Ii4iLG5bIi4lMmUiXT0iLi4iLG5bIiUyZS4iXT0iLi4iLG5bIiUyZSUyZSJdPSIuLiI7dmFyIG89dm9pZCAwLHA9L1thLXpBLVpdLyxxPS9bYS16QS1aMC05XCtcLVwuXS87aS5wcm90b3R5cGU9e2dldCBocmVmKCl7aWYodGhpcy5faXNJbnZhbGlkKXJldHVybiB0aGlzLl91cmw7dmFyIGE9IiI7cmV0dXJuKCIiIT10aGlzLl91c2VybmFtZXx8bnVsbCE9dGhpcy5fcGFzc3dvcmQpJiYoYT10aGlzLl91c2VybmFtZSsobnVsbCE9dGhpcy5fcGFzc3dvcmQ/IjoiK3RoaXMuX3Bhc3N3b3JkOiIiKSsiQCIpLHRoaXMucHJvdG9jb2wrKHRoaXMuX2lzUmVsYXRpdmU/Ii8vIithK3RoaXMuaG9zdDoiIikrdGhpcy5wYXRobmFtZSt0aGlzLl9xdWVyeSt0aGlzLl9mcmFnbWVudH0sc2V0IGhyZWYoYSl7aC5jYWxsKHRoaXMpLGcuY2FsbCh0aGlzLGEpfSxnZXQgcHJvdG9jb2woKXtyZXR1cm4gdGhpcy5fc2NoZW1lKyI6In0sc2V0IHByb3RvY29sKGEpe3RoaXMuX2lzSW52YWxpZHx8Zy5jYWxsKHRoaXMsYSsiOiIsInNjaGVtZSBzdGFydCIpfSxnZXQgaG9zdCgpe3JldHVybiB0aGlzLl9pc0ludmFsaWQ/IiI6dGhpcy5fcG9ydD90aGlzLl9ob3N0KyI6Iit0aGlzLl9wb3J0OnRoaXMuX2hvc3R9LHNldCBob3N0KGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJmcuY2FsbCh0aGlzLGEsImhvc3QiKX0sZ2V0IGhvc3RuYW1lKCl7cmV0dXJuIHRoaXMuX2hvc3R9LHNldCBob3N0bmFtZShhKXshdGhpcy5faXNJbnZhbGlkJiZ0aGlzLl9pc1JlbGF0aXZlJiZnLmNhbGwodGhpcyxhLCJob3N0bmFtZSIpfSxnZXQgcG9ydCgpe3JldHVybiB0aGlzLl9wb3J0fSxzZXQgcG9ydChhKXshdGhpcy5faXNJbnZhbGlkJiZ0aGlzLl9pc1JlbGF0aXZlJiZnLmNhbGwodGhpcyxhLCJwb3J0Iil9LGdldCBwYXRobmFtZSgpe3JldHVybiB0aGlzLl9pc0ludmFsaWQ/IiI6dGhpcy5faXNSZWxhdGl2ZT8iLyIrdGhpcy5fcGF0aC5qb2luKCIvIik6dGhpcy5fc2NoZW1lRGF0YX0sc2V0IHBhdGhuYW1lKGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJih0aGlzLl9wYXRoPVtdLGcuY2FsbCh0aGlzLGEsInJlbGF0aXZlIHBhdGggc3RhcnQiKSl9LGdldCBzZWFyY2goKXtyZXR1cm4gdGhpcy5faXNJbnZhbGlkfHwhdGhpcy5fcXVlcnl8fCI/Ij09dGhpcy5fcXVlcnk/IiI6dGhpcy5fcXVlcnl9LHNldCBzZWFyY2goYSl7IXRoaXMuX2lzSW52YWxpZCYmdGhpcy5faXNSZWxhdGl2ZSYmKHRoaXMuX3F1ZXJ5PSI/IiwiPyI9PWFbMF0mJihhPWEuc2xpY2UoMSkpLGcuY2FsbCh0aGlzLGEsInF1ZXJ5IikpfSxnZXQgaGFzaCgpe3JldHVybiB0aGlzLl9pc0ludmFsaWR8fCF0aGlzLl9mcmFnbWVudHx8IiMiPT10aGlzLl9mcmFnbWVudD8iIjp0aGlzLl9mcmFnbWVudH0sc2V0IGhhc2goYSl7dGhpcy5faXNJbnZhbGlkfHwodGhpcy5fZnJhZ21lbnQ9IiMiLCIjIj09YVswXSYmKGE9YS5zbGljZSgxKSksZy5jYWxsKHRoaXMsYSwiZnJhZ21lbnQiKSl9fTt2YXIgcj1hLlVSTDtyJiYoaS5jcmVhdGVPYmplY3RVUkw9ZnVuY3Rpb24oKXtyZXR1cm4gci5jcmVhdGVPYmplY3RVUkwuYXBwbHkocixhcmd1bWVudHMpfSxpLnJldm9rZU9iamVjdFVSTD1mdW5jdGlvbihhKXtyLnJldm9rZU9iamVjdFVSTChhKX0pLGEuVVJMPWl9fSh0aGlzKSxmdW5jdGlvbigpe0Z1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1jLnNsaWNlKCk7cmV0dXJuIGQucHVzaC5hcHBseShkLGFyZ3VtZW50cyksYi5hcHBseShhLGQpfX0pfSh3aW5kb3cuUGxhdGZvcm0pLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtpZighd2luZG93LnBlcmZvcm1hbmNlKXt2YXIgYj1EYXRlLm5vdygpO3dpbmRvdy5wZXJmb3JtYW5jZT17bm93OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktYn19fXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fCh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKCl7dmFyIGE9d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZTtyZXR1cm4gYT9mdW5jdGlvbihiKXtyZXR1cm4gYShmdW5jdGlvbigpe2IocGVyZm9ybWFuY2Uubm93KCkpfSl9OmZ1bmN0aW9uKGEpe3JldHVybiB3aW5kb3cuc2V0VGltZW91dChhLDFlMy82MCl9fSgpKSx3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWV8fCh3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU9ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGEpe2NsZWFyVGltZW91dChhKX19KCkpO3ZhciBjPVtdLGQ9ZnVuY3Rpb24oKXtBcnJheS5wcm90b3R5cGUucHVzaC5jYWxsKGFyZ3VtZW50cyxkb2N1bWVudC5fY3VycmVudFNjcmlwdCksYy5wdXNoKGFyZ3VtZW50cyl9O3dpbmRvdy5Qb2x5bWVyPWQsYS5jb25zdW1lRGVjbGFyYXRpb25zPWZ1bmN0aW9uKGIpe2EuY29uc3VtZURlY2xhcmF0aW9ucz1mdW5jdGlvbigpe3Rocm93IlBvc3NpYmxlIGF0dGVtcHQgdG8gbG9hZCBQb2x5bWVyIHR3aWNlIn0sYiYmYihjKSxjPW51bGx9LHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixmdW5jdGlvbigpe3dpbmRvdy5Qb2x5bWVyPT09ZCYmKHdpbmRvdy5Qb2x5bWVyPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcignWW91IHRyaWVkIHRvIHVzZSBwb2x5bWVyIHdpdGhvdXQgbG9hZGluZyBpdCBmaXJzdC4gVG8gbG9hZCBwb2x5bWVyLCA8bGluayByZWw9ImltcG9ydCIgaHJlZj0iY29tcG9uZW50cy9wb2x5bWVyL3BvbHltZXIuaHRtbCI+Jyl9KX0pfSh3aW5kb3cuUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7dS5wdXNoKGEpLHR8fCh0PSEwLHEoZCkpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCYmd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChhKXx8YX1mdW5jdGlvbiBkKCl7dD0hMTt2YXIgYT11O3U9W10sYS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudWlkXy1iLnVpZF99KTt2YXIgYj0hMTthLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9YS50YWtlUmVjb3JkcygpO2UoYSksYy5sZW5ndGgmJihhLmNhbGxiYWNrXyhjLGEpLGI9ITApfSksYiYmZCgpfWZ1bmN0aW9uIGUoYSl7YS5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgYz1wLmdldChiKTtjJiZjLmZvckVhY2goZnVuY3Rpb24oYil7Yi5vYnNlcnZlcj09PWEmJmIucmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzKCl9KX0pfWZ1bmN0aW9uIGYoYSxiKXtmb3IodmFyIGM9YTtjO2M9Yy5wYXJlbnROb2RlKXt2YXIgZD1wLmdldChjKTtpZihkKWZvcih2YXIgZT0wO2U8ZC5sZW5ndGg7ZSsrKXt2YXIgZj1kW2VdLGc9Zi5vcHRpb25zO2lmKGM9PT1hfHxnLnN1YnRyZWUpe3ZhciBoPWIoZyk7aCYmZi5lbnF1ZXVlKGgpfX19fWZ1bmN0aW9uIGcoYSl7dGhpcy5jYWxsYmFja189YSx0aGlzLm5vZGVzXz1bXSx0aGlzLnJlY29yZHNfPVtdLHRoaXMudWlkXz0rK3Z9ZnVuY3Rpb24gaChhLGIpe3RoaXMudHlwZT1hLHRoaXMudGFyZ2V0PWIsdGhpcy5hZGRlZE5vZGVzPVtdLHRoaXMucmVtb3ZlZE5vZGVzPVtdLHRoaXMucHJldmlvdXNTaWJsaW5nPW51bGwsdGhpcy5uZXh0U2libGluZz1udWxsLHRoaXMuYXR0cmlidXRlTmFtZT1udWxsLHRoaXMuYXR0cmlidXRlTmFtZXNwYWNlPW51bGwsdGhpcy5vbGRWYWx1ZT1udWxsfWZ1bmN0aW9uIGkoYSl7dmFyIGI9bmV3IGgoYS50eXBlLGEudGFyZ2V0KTtyZXR1cm4gYi5hZGRlZE5vZGVzPWEuYWRkZWROb2Rlcy5zbGljZSgpLGIucmVtb3ZlZE5vZGVzPWEucmVtb3ZlZE5vZGVzLnNsaWNlKCksYi5wcmV2aW91c1NpYmxpbmc9YS5wcmV2aW91c1NpYmxpbmcsYi5uZXh0U2libGluZz1hLm5leHRTaWJsaW5nLGIuYXR0cmlidXRlTmFtZT1hLmF0dHJpYnV0ZU5hbWUsYi5hdHRyaWJ1dGVOYW1lc3BhY2U9YS5hdHRyaWJ1dGVOYW1lc3BhY2UsYi5vbGRWYWx1ZT1hLm9sZFZhbHVlLGJ9ZnVuY3Rpb24gaihhLGIpe3JldHVybiB3PW5ldyBoKGEsYil9ZnVuY3Rpb24gayhhKXtyZXR1cm4geD94Oih4PWkodykseC5vbGRWYWx1ZT1hLHgpfWZ1bmN0aW9uIGwoKXt3PXg9dm9pZCAwfWZ1bmN0aW9uIG0oYSl7cmV0dXJuIGE9PT14fHxhPT09d31mdW5jdGlvbiBuKGEsYil7cmV0dXJuIGE9PT1iP2E6eCYmbShhKT94Om51bGx9ZnVuY3Rpb24gbyhhLGIsYyl7dGhpcy5vYnNlcnZlcj1hLHRoaXMudGFyZ2V0PWIsdGhpcy5vcHRpb25zPWMsdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdfXZhciBwPW5ldyBXZWFrTWFwLHE9d2luZG93Lm1zU2V0SW1tZWRpYXRlO2lmKCFxKXt2YXIgcj1bXSxzPVN0cmluZyhNYXRoLnJhbmRvbSgpKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24oYSl7aWYoYS5kYXRhPT09cyl7dmFyIGI9cjtyPVtdLGIuZm9yRWFjaChmdW5jdGlvbihhKXthKCl9KX19KSxxPWZ1bmN0aW9uKGEpe3IucHVzaChhKSx3aW5kb3cucG9zdE1lc3NhZ2UocywiKiIpfX12YXIgdD0hMSx1PVtdLHY9MDtnLnByb3RvdHlwZT17b2JzZXJ2ZTpmdW5jdGlvbihhLGIpe2lmKGE9YyhhKSwhYi5jaGlsZExpc3QmJiFiLmF0dHJpYnV0ZXMmJiFiLmNoYXJhY3RlckRhdGF8fGIuYXR0cmlidXRlT2xkVmFsdWUmJiFiLmF0dHJpYnV0ZXN8fGIuYXR0cmlidXRlRmlsdGVyJiZiLmF0dHJpYnV0ZUZpbHRlci5sZW5ndGgmJiFiLmF0dHJpYnV0ZXN8fGIuY2hhcmFjdGVyRGF0YU9sZFZhbHVlJiYhYi5jaGFyYWN0ZXJEYXRhKXRocm93IG5ldyBTeW50YXhFcnJvcjt2YXIgZD1wLmdldChhKTtkfHxwLnNldChhLGQ9W10pO2Zvcih2YXIgZSxmPTA7ZjxkLmxlbmd0aDtmKyspaWYoZFtmXS5vYnNlcnZlcj09PXRoaXMpe2U9ZFtmXSxlLnJlbW92ZUxpc3RlbmVycygpLGUub3B0aW9ucz1iO2JyZWFrfWV8fChlPW5ldyBvKHRoaXMsYSxiKSxkLnB1c2goZSksdGhpcy5ub2Rlc18ucHVzaChhKSksZS5hZGRMaXN0ZW5lcnMoKX0sZGlzY29ubmVjdDpmdW5jdGlvbigpe3RoaXMubm9kZXNfLmZvckVhY2goZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXAuZ2V0KGEpLGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9YltjXTtpZihkLm9ic2VydmVyPT09dGhpcyl7ZC5yZW1vdmVMaXN0ZW5lcnMoKSxiLnNwbGljZShjLDEpO2JyZWFrfX19LHRoaXMpLHRoaXMucmVjb3Jkc189W119LHRha2VSZWNvcmRzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWNvcmRzXztyZXR1cm4gdGhpcy5yZWNvcmRzXz1bXSxhfX07dmFyIHcseDtvLnByb3RvdHlwZT17ZW5xdWV1ZTpmdW5jdGlvbihhKXt2YXIgYz10aGlzLm9ic2VydmVyLnJlY29yZHNfLGQ9Yy5sZW5ndGg7aWYoYy5sZW5ndGg+MCl7dmFyIGU9Y1tkLTFdLGY9bihlLGEpO2lmKGYpcmV0dXJuIHZvaWQoY1tkLTFdPWYpfWVsc2UgYih0aGlzLm9ic2VydmVyKTtjW2RdPWF9LGFkZExpc3RlbmVyczpmdW5jdGlvbigpe3RoaXMuYWRkTGlzdGVuZXJzXyh0aGlzLnRhcmdldCl9LGFkZExpc3RlbmVyc186ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5vcHRpb25zO2IuYXR0cmlidXRlcyYmYS5hZGRFdmVudExpc3RlbmVyKCJET01BdHRyTW9kaWZpZWQiLHRoaXMsITApLGIuY2hhcmFjdGVyRGF0YSYmYS5hZGRFdmVudExpc3RlbmVyKCJET01DaGFyYWN0ZXJEYXRhTW9kaWZpZWQiLHRoaXMsITApLGIuY2hpbGRMaXN0JiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVJbnNlcnRlZCIsdGhpcywhMCksKGIuY2hpbGRMaXN0fHxiLnN1YnRyZWUpJiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVSZW1vdmVkIix0aGlzLCEwKX0scmVtb3ZlTGlzdGVuZXJzOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVMaXN0ZW5lcnNfKHRoaXMudGFyZ2V0KX0scmVtb3ZlTGlzdGVuZXJzXzpmdW5jdGlvbihhKXt2YXIgYj10aGlzLm9wdGlvbnM7Yi5hdHRyaWJ1dGVzJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUF0dHJNb2RpZmllZCIsdGhpcywhMCksYi5jaGFyYWN0ZXJEYXRhJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCIsdGhpcywhMCksYi5jaGlsZExpc3QmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZUluc2VydGVkIix0aGlzLCEwKSwoYi5jaGlsZExpc3R8fGIuc3VidHJlZSkmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZVJlbW92ZWQiLHRoaXMsITApfSxhZGRUcmFuc2llbnRPYnNlcnZlcjpmdW5jdGlvbihhKXtpZihhIT09dGhpcy50YXJnZXQpe3RoaXMuYWRkTGlzdGVuZXJzXyhhKSx0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChhKTt2YXIgYj1wLmdldChhKTtifHxwLnNldChhLGI9W10pLGIucHVzaCh0aGlzKX19LHJlbW92ZVRyYW5zaWVudE9ic2VydmVyczpmdW5jdGlvbigpe3ZhciBhPXRoaXMudHJhbnNpZW50T2JzZXJ2ZWROb2Rlczt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W10sYS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMucmVtb3ZlTGlzdGVuZXJzXyhhKTtmb3IodmFyIGI9cC5nZXQoYSksYz0wO2M8Yi5sZW5ndGg7YysrKWlmKGJbY109PT10aGlzKXtiLnNwbGljZShjLDEpO2JyZWFrfX0sdGhpcyl9LGhhbmRsZUV2ZW50OmZ1bmN0aW9uKGEpe3N3aXRjaChhLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGEudHlwZSl7Y2FzZSJET01BdHRyTW9kaWZpZWQiOnZhciBiPWEuYXR0ck5hbWUsYz1hLnJlbGF0ZWROb2RlLm5hbWVzcGFjZVVSSSxkPWEudGFyZ2V0LGU9bmV3IGooImF0dHJpYnV0ZXMiLGQpO2UuYXR0cmlidXRlTmFtZT1iLGUuYXR0cmlidXRlTmFtZXNwYWNlPWM7dmFyIGc9YS5hdHRyQ2hhbmdlPT09TXV0YXRpb25FdmVudC5BRERJVElPTj9udWxsOmEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4hYS5hdHRyaWJ1dGVzfHxhLmF0dHJpYnV0ZUZpbHRlciYmYS5hdHRyaWJ1dGVGaWx0ZXIubGVuZ3RoJiYtMT09PWEuYXR0cmlidXRlRmlsdGVyLmluZGV4T2YoYikmJi0xPT09YS5hdHRyaWJ1dGVGaWx0ZXIuaW5kZXhPZihjKT92b2lkIDA6YS5hdHRyaWJ1dGVPbGRWYWx1ZT9rKGcpOmV9KTticmVhaztjYXNlIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCI6dmFyIGQ9YS50YXJnZXQsZT1qKCJjaGFyYWN0ZXJEYXRhIixkKSxnPWEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4gYS5jaGFyYWN0ZXJEYXRhP2EuY2hhcmFjdGVyRGF0YU9sZFZhbHVlP2soZyk6ZTp2b2lkIDB9KTticmVhaztjYXNlIkRPTU5vZGVSZW1vdmVkIjp0aGlzLmFkZFRyYW5zaWVudE9ic2VydmVyKGEudGFyZ2V0KTtjYXNlIkRPTU5vZGVJbnNlcnRlZCI6dmFyIGgsaSxkPWEucmVsYXRlZE5vZGUsbT1hLnRhcmdldDsiRE9NTm9kZUluc2VydGVkIj09PWEudHlwZT8oaD1bbV0saT1bXSk6KGg9W10saT1bbV0pO3ZhciBuPW0ucHJldmlvdXNTaWJsaW5nLG89bS5uZXh0U2libGluZyxlPWooImNoaWxkTGlzdCIsZCk7ZS5hZGRlZE5vZGVzPWgsZS5yZW1vdmVkTm9kZXM9aSxlLnByZXZpb3VzU2libGluZz1uLGUubmV4dFNpYmxpbmc9byxmKGQsZnVuY3Rpb24oYSl7cmV0dXJuIGEuY2hpbGRMaXN0P2U6dm9pZCAwfSl9bCgpfX0sYS5Kc011dGF0aW9uT2JzZXJ2ZXI9ZyxhLk11dGF0aW9uT2JzZXJ2ZXJ8fChhLk11dGF0aW9uT2JzZXJ2ZXI9Zyl9KHRoaXMpLHdpbmRvdy5IVE1MSW1wb3J0cz13aW5kb3cuSFRNTEltcG9ydHN8fHtmbGFnczp7fX0sZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGIpe2I9Ynx8byxkKGZ1bmN0aW9uKCl7ZihhLGIpfSxiKX1mdW5jdGlvbiBjKGEpe3JldHVybiJjb21wbGV0ZSI9PT1hLnJlYWR5U3RhdGV8fGEucmVhZHlTdGF0ZT09PXF9ZnVuY3Rpb24gZChhLGIpe2lmKGMoYikpYSYmYSgpO2Vsc2V7dmFyIGU9ZnVuY3Rpb24oKXsoImNvbXBsZXRlIj09PWIucmVhZHlTdGF0ZXx8Yi5yZWFkeVN0YXRlPT09cSkmJihiLnJlbW92ZUV2ZW50TGlzdGVuZXIocixlKSxkKGEsYikpfTtiLmFkZEV2ZW50TGlzdGVuZXIocixlKX19ZnVuY3Rpb24gZShhKXthLnRhcmdldC5fX2xvYWRlZD0hMH1mdW5jdGlvbiBmKGEsYil7ZnVuY3Rpb24gYygpe2g9PWkmJmEmJmEoKX1mdW5jdGlvbiBkKGEpe2UoYSksaCsrLGMoKX12YXIgZj1iLnF1ZXJ5U2VsZWN0b3JBbGwoImxpbmtbcmVsPWltcG9ydF0iKSxoPTAsaT1mLmxlbmd0aDtpZihpKWZvcih2YXIgaixrPTA7aT5rJiYoaj1mW2tdKTtrKyspZyhqKT9kLmNhbGwoaix7dGFyZ2V0Omp9KTooai5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixkKSxqLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixkKSk7ZWxzZSBjKCl9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gbD9hLl9fbG9hZGVkOmEuX19pbXBvcnRQYXJzZWR9ZnVuY3Rpb24gaChhKXtmb3IodmFyIGIsYz0wLGQ9YS5sZW5ndGg7ZD5jJiYoYj1hW2NdKTtjKyspaShiKSYmaihiKX1mdW5jdGlvbiBpKGEpe3JldHVybiJsaW5rIj09PWEubG9jYWxOYW1lJiYiaW1wb3J0Ij09PWEucmVsfWZ1bmN0aW9uIGooYSl7dmFyIGI9YS5pbXBvcnQ7Yj9lKHt0YXJnZXQ6YX0pOihhLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGUpLGEuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLGUpKX12YXIgaz0iaW1wb3J0ImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpbmsiKSxsPWs7aXNJRT0vVHJpZGVudC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTt2YXIgbT1Cb29sZWFuKHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksbj1mdW5jdGlvbihhKXtyZXR1cm4gbT9TaGFkb3dET01Qb2x5ZmlsbC53cmFwSWZOZWVkZWQoYSk6YX0sbz1uKGRvY3VtZW50KSxwPXtnZXQ6ZnVuY3Rpb24oKXt2YXIgYT1IVE1MSW1wb3J0cy5jdXJyZW50U2NyaXB0fHxkb2N1bWVudC5jdXJyZW50U2NyaXB0fHwoImNvbXBsZXRlIiE9PWRvY3VtZW50LnJlYWR5U3RhdGU/ZG9jdW1lbnQuc2NyaXB0c1tkb2N1bWVudC5zY3JpcHRzLmxlbmd0aC0xXTpudWxsKTtyZXR1cm4gbihhKX0sY29uZmlndXJhYmxlOiEwfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZG9jdW1lbnQsIl9jdXJyZW50U2NyaXB0IixwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobywiX2N1cnJlbnRTY3JpcHQiLHApO3ZhciBxPWlzSUU/ImNvbXBsZXRlIjoiaW50ZXJhY3RpdmUiLHI9InJlYWR5c3RhdGVjaGFuZ2UiO2wmJihuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbihhKXtmb3IodmFyIGIsYz0wLGQ9YS5sZW5ndGg7ZD5jJiYoYj1hW2NdKTtjKyspYi5hZGRlZE5vZGVzJiZoKGIuYWRkZWROb2Rlcyl9KS5vYnNlcnZlKGRvY3VtZW50LmhlYWQse2NoaWxkTGlzdDohMH0pLGZ1bmN0aW9uKCl7aWYoImxvYWRpbmciPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSlmb3IodmFyIGEsYj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJsaW5rW3JlbD1pbXBvcnRdIiksYz0wLGQ9Yi5sZW5ndGg7ZD5jJiYoYT1iW2NdKTtjKyspaihhKX0oKSksYihmdW5jdGlvbigpe0hUTUxJbXBvcnRzLnJlYWR5PSEwLEhUTUxJbXBvcnRzLnJlYWR5VGltZT0obmV3IERhdGUpLmdldFRpbWUoKSxvLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCJIVE1MSW1wb3J0c0xvYWRlZCIse2J1YmJsZXM6ITB9KSl9KSxhLnVzZU5hdGl2ZT1sLGEuaXNJbXBvcnRMb2FkZWQ9ZyxhLndoZW5SZWFkeT1iLGEuaXNJRT1pc0lFLGEud2hlbkltcG9ydHNSZWFkeT1ifSh3aW5kb3cuSFRNTEltcG9ydHMpLGZ1bmN0aW9uKGEpe3ZhciBiPShhLnBhdGgsYS54aHIpLGM9YS5mbGFncyxkPWZ1bmN0aW9uKGEsYil7dGhpcy5jYWNoZT17fSx0aGlzLm9ubG9hZD1hLHRoaXMub25jb21wbGV0ZT1iLHRoaXMuaW5mbGlnaHQ9MCx0aGlzLnBlbmRpbmc9e319O2QucHJvdG90eXBlPXthZGROb2RlczpmdW5jdGlvbihhKXt0aGlzLmluZmxpZ2h0Kz1hLmxlbmd0aDtmb3IodmFyIGIsYz0wLGQ9YS5sZW5ndGg7ZD5jJiYoYj1hW2NdKTtjKyspdGhpcy5yZXF1aXJlKGIpO3RoaXMuY2hlY2tEb25lKCl9LGFkZE5vZGU6ZnVuY3Rpb24oYSl7dGhpcy5pbmZsaWdodCsrLHRoaXMucmVxdWlyZShhKSx0aGlzLmNoZWNrRG9uZSgpfSxyZXF1aXJlOmZ1bmN0aW9uKGEpe3ZhciBiPWEuc3JjfHxhLmhyZWY7YS5fX25vZGVVcmw9Yix0aGlzLmRlZHVwZShiLGEpfHx0aGlzLmZldGNoKGIsYSl9LGRlZHVwZTpmdW5jdGlvbihhLGIpe2lmKHRoaXMucGVuZGluZ1thXSlyZXR1cm4gdGhpcy5wZW5kaW5nW2FdLnB1c2goYiksITA7cmV0dXJuIHRoaXMuY2FjaGVbYV0/KHRoaXMub25sb2FkKGEsYix0aGlzLmNhY2hlW2FdKSx0aGlzLnRhaWwoKSwhMCk6KHRoaXMucGVuZGluZ1thXT1bYl0sITEpfSxmZXRjaDpmdW5jdGlvbihhLGQpe2lmKGMubG9hZCYmY29uc29sZS5sb2coImZldGNoIixhLGQpLGEubWF0Y2goL15kYXRhOi8pKXt2YXIgZT1hLnNwbGl0KCIsIiksZj1lWzBdLGc9ZVsxXTtnPWYuaW5kZXhPZigiO2Jhc2U2NCIpPi0xP2F0b2IoZyk6ZGVjb2RlVVJJQ29tcG9uZW50KGcpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0aGlzLnJlY2VpdmUoYSxkLG51bGwsZyl9LmJpbmQodGhpcyksMCl9ZWxzZXt2YXIgaD1mdW5jdGlvbihiLGMsZSl7dGhpcy5yZWNlaXZlKGEsZCxiLGMsZSl9LmJpbmQodGhpcyk7Yi5sb2FkKGEsaCl9fSxyZWNlaXZlOmZ1bmN0aW9uKGEsYixjLGQsZSl7dGhpcy5jYWNoZVthXT1kO2Zvcih2YXIgZixnPXRoaXMucGVuZGluZ1thXSxoPTAsaT1nLmxlbmd0aDtpPmgmJihmPWdbaF0pO2grKyl0aGlzLm9ubG9hZChhLGYsZCxjLGUpLHRoaXMudGFpbCgpO3RoaXMucGVuZGluZ1thXT1udWxsfSx0YWlsOmZ1bmN0aW9uKCl7LS10aGlzLmluZmxpZ2h0LHRoaXMuY2hlY2tEb25lKCl9LGNoZWNrRG9uZTpmdW5jdGlvbigpe3RoaXMuaW5mbGlnaHR8fHRoaXMub25jb21wbGV0ZSgpfX0sYj1ifHx7YXN5bmM6ITAsb2s6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuc3RhdHVzPj0yMDAmJmEuc3RhdHVzPDMwMHx8MzA0PT09YS5zdGF0dXN8fDA9PT1hLnN0YXR1c30sbG9hZDpmdW5jdGlvbihjLGQsZSl7dmFyIGY9bmV3IFhNTEh0dHBSZXF1ZXN0O3JldHVybihhLmZsYWdzLmRlYnVnfHxhLmZsYWdzLmJ1c3QpJiYoYys9Ij8iK01hdGgucmFuZG9tKCkpLGYub3BlbigiR0VUIixjLGIuYXN5bmMpLGYuYWRkRXZlbnRMaXN0ZW5lcigicmVhZHlzdGF0ZWNoYW5nZSIsZnVuY3Rpb24oKXtpZig0PT09Zi5yZWFkeVN0YXRlKXt2YXIgYT1mLmdldFJlc3BvbnNlSGVhZGVyKCJMb2NhdGlvbiIpLGM9bnVsbDtpZihhKXZhciBjPSIvIj09PWEuc3Vic3RyKDAsMSk/bG9jYXRpb24ub3JpZ2luK2E6YTtkLmNhbGwoZSwhYi5vayhmKSYmZixmLnJlc3BvbnNlfHxmLnJlc3BvbnNlVGV4dCxjKX19KSxmLnNlbmQoKSxmfSxsb2FkRG9jdW1lbnQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMubG9hZChhLGIsYykucmVzcG9uc2VUeXBlPSJkb2N1bWVudCJ9fSxhLnhocj1iLGEuTG9hZGVyPWR9KHdpbmRvdy5IVE1MSW1wb3J0cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtyZXR1cm4ibGluayI9PT1hLmxvY2FsTmFtZSYmYS5yZWw9PT1nfWZ1bmN0aW9uIGMoYSl7dmFyIGI9ZChhKTtyZXR1cm4iZGF0YTp0ZXh0L2phdmFzY3JpcHQ7Y2hhcnNldD11dGYtOCwiK2VuY29kZVVSSUNvbXBvbmVudChiKX1mdW5jdGlvbiBkKGEpe3JldHVybiBhLnRleHRDb250ZW50K2UoYSl9ZnVuY3Rpb24gZShhKXt2YXIgYj1hLl9fbm9kZVVybDtpZighYil7Yj1hLm93bmVyRG9jdW1lbnQuYmFzZVVSSTt2YXIgYz0iWyIrTWF0aC5mbG9vcigxZTMqKE1hdGgucmFuZG9tKCkrMSkpKyJdIixkPWEudGV4dENvbnRlbnQubWF0Y2goL1BvbHltZXJcKFsnIl0oW14nIl0qKS8pO2M9ZCYmZFsxXXx8YyxiKz0iLyIrYysiLmpzIn1yZXR1cm4iXG4vLyMgc291cmNlVVJMPSIrYisiXG4ifWZ1bmN0aW9uIGYoYSl7dmFyIGI9YS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7cmV0dXJuIGIudGV4dENvbnRlbnQ9YS50ZXh0Q29udGVudCxuLnJlc29sdmVVcmxzSW5TdHlsZShiKSxifXZhciBnPSJpbXBvcnQiLGg9YS5mbGFncyxpPWEuaXNJRSxqPXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD93aW5kb3cuU2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGRvY3VtZW50KTpkb2N1bWVudCxrPXtkb2N1bWVudFNlbGVjdG9yczoibGlua1tyZWw9IitnKyJdIixpbXBvcnRzU2VsZWN0b3JzOlsibGlua1tyZWw9IitnKyJdIiwibGlua1tyZWw9c3R5bGVzaGVldF0iLCJzdHlsZSIsInNjcmlwdDpub3QoW3R5cGVdKSIsJ3NjcmlwdFt0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiXSddLmpvaW4oIiwiKSxtYXA6e2xpbms6InBhcnNlTGluayIsc2NyaXB0OiJwYXJzZVNjcmlwdCIsc3R5bGU6InBhcnNlU3R5bGUifSxwYXJzZU5leHQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5leHRUb1BhcnNlKCk7YSYmdGhpcy5wYXJzZShhKX0scGFyc2U6ZnVuY3Rpb24oYSl7aWYodGhpcy5pc1BhcnNlZChhKSlyZXR1cm4gdm9pZChoLnBhcnNlJiZjb25zb2xlLmxvZygiWyVzXSBpcyBhbHJlYWR5IHBhcnNlZCIsYS5sb2NhbE5hbWUpKTt2YXIgYj10aGlzW3RoaXMubWFwW2EubG9jYWxOYW1lXV07YiYmKHRoaXMubWFya1BhcnNpbmcoYSksYi5jYWxsKHRoaXMsYSkpfSxtYXJrUGFyc2luZzpmdW5jdGlvbihhKXtoLnBhcnNlJiZjb25zb2xlLmxvZygicGFyc2luZyIsYSksdGhpcy5wYXJzaW5nRWxlbWVudD1hfSxtYXJrUGFyc2luZ0NvbXBsZXRlOmZ1bmN0aW9uKGEpe2EuX19pbXBvcnRQYXJzZWQ9ITAsYS5fX2ltcG9ydEVsZW1lbnQmJihhLl9faW1wb3J0RWxlbWVudC5fX2ltcG9ydFBhcnNlZD0hMCksdGhpcy5wYXJzaW5nRWxlbWVudD1udWxsLGgucGFyc2UmJmNvbnNvbGUubG9nKCJjb21wbGV0ZWQiLGEpfSxpbnZhbGlkYXRlUGFyc2U6ZnVuY3Rpb24oYSl7YSYmYS5fX2ltcG9ydExpbmsmJihhLl9faW1wb3J0UGFyc2VkPWEuX19pbXBvcnRMaW5rLl9faW1wb3J0UGFyc2VkPSExLHRoaXMucGFyc2VTb29uKCkpfSxwYXJzZVNvb246ZnVuY3Rpb24oKXt0aGlzLl9wYXJzZVNvb24mJmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuX3BhcnNlRGVsYXkpO3ZhciBhPXRoaXM7dGhpcy5fcGFyc2VTb29uPXJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe2EucGFyc2VOZXh0KCl9KX0scGFyc2VJbXBvcnQ6ZnVuY3Rpb24oYSl7aWYoSFRNTEltcG9ydHMuX19pbXBvcnRzUGFyc2luZ0hvb2smJkhUTUxJbXBvcnRzLl9faW1wb3J0c1BhcnNpbmdIb29rKGEpLGEuaW1wb3J0JiYoYS5pbXBvcnQuX19pbXBvcnRQYXJzZWQ9ITApLHRoaXMubWFya1BhcnNpbmdDb21wbGV0ZShhKSxhLmRpc3BhdGNoRXZlbnQoYS5fX3Jlc291cmNlJiYhYS5fX2Vycm9yP25ldyBDdXN0b21FdmVudCgibG9hZCIse2J1YmJsZXM6ITF9KTpuZXcgQ3VzdG9tRXZlbnQoImVycm9yIix7YnViYmxlczohMX0pKSxhLl9fcGVuZGluZylmb3IodmFyIGI7YS5fX3BlbmRpbmcubGVuZ3RoOyliPWEuX19wZW5kaW5nLnNoaWZ0KCksYiYmYih7dGFyZ2V0OmF9KTt0aGlzLnBhcnNlTmV4dCgpfSxwYXJzZUxpbms6ZnVuY3Rpb24oYSl7YihhKT90aGlzLnBhcnNlSW1wb3J0KGEpOihhLmhyZWY9YS5ocmVmLHRoaXMucGFyc2VHZW5lcmljKGEpKX0scGFyc2VTdHlsZTpmdW5jdGlvbihhKXt2YXIgYj1hO2E9ZihhKSxhLl9faW1wb3J0RWxlbWVudD1iLHRoaXMucGFyc2VHZW5lcmljKGEpfSxwYXJzZUdlbmVyaWM6ZnVuY3Rpb24oYSl7dGhpcy50cmFja0VsZW1lbnQoYSksdGhpcy5hZGRFbGVtZW50VG9Eb2N1bWVudChhKX0scm9vdEltcG9ydEZvckVsZW1lbnQ6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWE7Yi5vd25lckRvY3VtZW50Ll9faW1wb3J0TGluazspYj1iLm93bmVyRG9jdW1lbnQuX19pbXBvcnRMaW5rO3JldHVybiBifSxhZGRFbGVtZW50VG9Eb2N1bWVudDpmdW5jdGlvbihhKXtmb3IodmFyIGI9dGhpcy5yb290SW1wb3J0Rm9yRWxlbWVudChhLl9faW1wb3J0RWxlbWVudHx8YSksYz1iLl9faW5zZXJ0ZWRFbGVtZW50cz1iLl9faW5zZXJ0ZWRFbGVtZW50c3x8MCxkPWIubmV4dEVsZW1lbnRTaWJsaW5nLGU9MDtjPmU7ZSsrKWQ9ZCYmZC5uZXh0RWxlbWVudFNpYmxpbmc7Yi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGQpfSx0cmFja0VsZW1lbnQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9ZnVuY3Rpb24oZCl7YiYmYihkKSxjLm1hcmtQYXJzaW5nQ29tcGxldGUoYSksYy5wYXJzZU5leHQoKX07aWYoYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixkKSxhLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixkKSxpJiYic3R5bGUiPT09YS5sb2NhbE5hbWUpe3ZhciBlPSExO2lmKC0xPT1hLnRleHRDb250ZW50LmluZGV4T2YoIkBpbXBvcnQiKSllPSEwO2Vsc2UgaWYoYS5zaGVldCl7ZT0hMDtmb3IodmFyIGYsZz1hLnNoZWV0LmNzc1J1bGVzLGg9Zz9nLmxlbmd0aDowLGo9MDtoPmomJihmPWdbal0pO2orKylmLnR5cGU9PT1DU1NSdWxlLklNUE9SVF9SVUxFJiYoZT1lJiZCb29sZWFuKGYuc3R5bGVTaGVldCkpfWUmJmEuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoImxvYWQiLHtidWJibGVzOiExfSkpfX0scGFyc2VTY3JpcHQ6ZnVuY3Rpb24oYil7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7ZC5fX2ltcG9ydEVsZW1lbnQ9YixkLnNyYz1iLnNyYz9iLnNyYzpjKGIpLGEuY3VycmVudFNjcmlwdD1iLHRoaXMudHJhY2tFbGVtZW50KGQsZnVuY3Rpb24oKXtkLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZCksYS5jdXJyZW50U2NyaXB0PW51bGx9KSx0aGlzLmFkZEVsZW1lbnRUb0RvY3VtZW50KGQpfSxuZXh0VG9QYXJzZTpmdW5jdGlvbigpe3JldHVybiF0aGlzLnBhcnNpbmdFbGVtZW50JiZ0aGlzLm5leHRUb1BhcnNlSW5Eb2Moail9LG5leHRUb1BhcnNlSW5Eb2M6ZnVuY3Rpb24oYSxjKXtpZihhKWZvcih2YXIgZCxlPWEucXVlcnlTZWxlY3RvckFsbCh0aGlzLnBhcnNlU2VsZWN0b3JzRm9yTm9kZShhKSksZj0wLGc9ZS5sZW5ndGg7Zz5mJiYoZD1lW2ZdKTtmKyspaWYoIXRoaXMuaXNQYXJzZWQoZCkpcmV0dXJuIHRoaXMuaGFzUmVzb3VyY2UoZCk/YihkKT90aGlzLm5leHRUb1BhcnNlSW5Eb2MoZC5pbXBvcnQsZCk6ZDp2b2lkIDA7cmV0dXJuIGN9LHBhcnNlU2VsZWN0b3JzRm9yTm9kZTpmdW5jdGlvbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnR8fGE7cmV0dXJuIGI9PT1qP3RoaXMuZG9jdW1lbnRTZWxlY3RvcnM6dGhpcy5pbXBvcnRzU2VsZWN0b3JzfSxpc1BhcnNlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5fX2ltcG9ydFBhcnNlZH0saGFzUmVzb3VyY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGIoYSkmJnZvaWQgMD09PWEuaW1wb3J0PyExOiEwfX0sbD0vKHVybFwoKShbXildKikoXCkpL2csbT0vKEBpbXBvcnRbXHNdKyg/IXVybFwoKSkoW147XSopKDspL2csbj17cmVzb2x2ZVVybHNJblN0eWxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudCxjPWIuY3JlYXRlRWxlbWVudCgiYSIpO3JldHVybiBhLnRleHRDb250ZW50PXRoaXMucmVzb2x2ZVVybHNJbkNzc1RleHQoYS50ZXh0Q29udGVudCxjKSxhfSxyZXNvbHZlVXJsc0luQ3NzVGV4dDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMucmVwbGFjZVVybHMoYSxiLGwpO3JldHVybiBjPXRoaXMucmVwbGFjZVVybHMoYyxiLG0pfSxyZXBsYWNlVXJsczpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGEucmVwbGFjZShjLGZ1bmN0aW9uKGEsYyxkLGUpe3ZhciBmPWQucmVwbGFjZSgvWyInXS9nLCIiKTtyZXR1cm4gYi5ocmVmPWYsZj1iLmhyZWYsYysiJyIrZisiJyIrZX0pfX07YS5wYXJzZXI9ayxhLnBhdGg9bn0oSFRNTEltcG9ydHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGMoYSxnKX1mdW5jdGlvbiBjKGEsYil7cmV0dXJuImxpbmsiPT09YS5sb2NhbE5hbWUmJmEuZ2V0QXR0cmlidXRlKCJyZWwiKT09PWJ9ZnVuY3Rpb24gZChhLGIpe3ZhciBjPWE7YyBpbnN0YW5jZW9mIERvY3VtZW50fHwoYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoZykpLGMuX1VSTD1iO3ZhciBkPWMuY3JlYXRlRWxlbWVudCgiYmFzZSIpO2Quc2V0QXR0cmlidXRlKCJocmVmIixiKSxjLmJhc2VVUkl8fChjLmJhc2VVUkk9Yik7dmFyIGU9Yy5jcmVhdGVFbGVtZW50KCJtZXRhIik7cmV0dXJuIGUuc2V0QXR0cmlidXRlKCJjaGFyc2V0IiwidXRmLTgiKSxjLmhlYWQuYXBwZW5kQ2hpbGQoZSksYy5oZWFkLmFwcGVuZENoaWxkKGQpLGEgaW5zdGFuY2VvZiBEb2N1bWVudHx8KGMuYm9keS5pbm5lckhUTUw9YSksd2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQmJkhUTUxUZW1wbGF0ZUVsZW1lbnQuYm9vdHN0cmFwJiZIVE1MVGVtcGxhdGVFbGVtZW50LmJvb3RzdHJhcChjKSxjfXZhciBlPWEudXNlTmF0aXZlLGY9YS5mbGFncyxnPSJpbXBvcnQiLGg9d2luZG93LlNoYWRvd0RPTVBvbHlmaWxsP1NoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChkb2N1bWVudCk6ZG9jdW1lbnQ7aWYoZSl2YXIgaT17fTtlbHNle3ZhciBqPShhLnhocixhLkxvYWRlciksaz1hLnBhcnNlcixpPXtkb2N1bWVudHM6e30sZG9jdW1lbnRQcmVsb2FkU2VsZWN0b3JzOiJsaW5rW3JlbD0iK2crIl0iLGltcG9ydHNQcmVsb2FkU2VsZWN0b3JzOlsibGlua1tyZWw9IitnKyJdIl0uam9pbigiLCIpLGxvYWROb2RlOmZ1bmN0aW9uKGEpe2wuYWRkTm9kZShhKX0sbG9hZFN1YnRyZWU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5tYXJzaGFsTm9kZXMoYSk7bC5hZGROb2RlcyhiKX0sbWFyc2hhbE5vZGVzOmZ1bmN0aW9uKGEpe3JldHVybiBhLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5sb2FkU2VsZWN0b3JzRm9yTm9kZShhKSl9LGxvYWRTZWxlY3RvcnNGb3JOb2RlOmZ1bmN0aW9uKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudHx8YTtyZXR1cm4gYj09PWg/dGhpcy5kb2N1bWVudFByZWxvYWRTZWxlY3RvcnM6dGhpcy5pbXBvcnRzUHJlbG9hZFNlbGVjdG9yc30sbG9hZGVkOmZ1bmN0aW9uKGEsYyxlLGcsaCl7aWYoZi5sb2FkJiZjb25zb2xlLmxvZygibG9hZGVkIixhLGMpLGMuX19yZXNvdXJjZT1lLGMuX19lcnJvcj1nLGIoYykpe3ZhciBpPXRoaXMuZG9jdW1lbnRzW2FdO3ZvaWQgMD09PWkmJihpPWc/bnVsbDpkKGUsaHx8YSksaSYmKGkuX19pbXBvcnRMaW5rPWMsdGhpcy5ib290RG9jdW1lbnQoaSkpLHRoaXMuZG9jdW1lbnRzW2FdPWkpLGMuaW1wb3J0PWl9ay5wYXJzZU5leHQoKX0sYm9vdERvY3VtZW50OmZ1bmN0aW9uKGEpe3RoaXMubG9hZFN1YnRyZWUoYSksdGhpcy5vYnNlcnZlKGEpLGsucGFyc2VOZXh0KCl9LGxvYWRlZEFsbDpmdW5jdGlvbigpe2sucGFyc2VOZXh0KCl9fSxsPW5ldyBqKGkubG9hZGVkLmJpbmQoaSksaS5sb2FkZWRBbGwuYmluZChpKSk7aWYoIWRvY3VtZW50LmJhc2VVUkkpe3ZhciBtPXtnZXQ6ZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJiYXNlIik7cmV0dXJuIGE/YS5ocmVmOndpbmRvdy5sb2NhdGlvbi5ocmVmfSxjb25maWd1cmFibGU6ITB9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShkb2N1bWVudCwiYmFzZVVSSSIsbSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGgsImJhc2VVUkkiLG0pfSJmdW5jdGlvbiIhPXR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQmJih3aW5kb3cuQ3VzdG9tRXZlbnQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVFdmVudCgiSFRNTEV2ZW50cyIpO3JldHVybiBjLmluaXRFdmVudChhLGIuYnViYmxlcz09PSExPyExOiEwLGIuY2FuY2VsYWJsZT09PSExPyExOiEwLGIuZGV0YWlsKSxjfSl9YS5pbXBvcnRlcj1pLGEuSU1QT1JUX0xJTktfVFlQRT1nLGEuaW1wb3J0TG9hZGVyPWx9KHdpbmRvdy5IVE1MSW1wb3J0cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtmb3IodmFyIGIsZD0wLGU9YS5sZW5ndGg7ZT5kJiYoYj1hW2RdKTtkKyspImNoaWxkTGlzdCI9PT1iLnR5cGUmJmIuYWRkZWROb2Rlcy5sZW5ndGgmJmMoYi5hZGRlZE5vZGVzKX1mdW5jdGlvbiBjKGEpe2Zvcih2YXIgYixlLGc9MCxoPWEubGVuZ3RoO2g+ZyYmKGU9YVtnXSk7ZysrKWI9Ynx8ZS5vd25lckRvY3VtZW50LGQoZSkmJmYubG9hZE5vZGUoZSksZS5jaGlsZHJlbiYmZS5jaGlsZHJlbi5sZW5ndGgmJmMoZS5jaGlsZHJlbil9ZnVuY3Rpb24gZChhKXtyZXR1cm4gMT09PWEubm9kZVR5cGUmJmcuY2FsbChhLGYubG9hZFNlbGVjdG9yc0Zvck5vZGUoYSkpfWZ1bmN0aW9uIGUoYSl7aC5vYnNlcnZlKGEse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSl9dmFyIGY9KGEuSU1QT1JUX0xJTktfVFlQRSxhLmltcG9ydGVyKSxnPShhLnBhcnNlcixIVE1MRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc3x8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3Rvcnx8SFRNTEVsZW1lbnQucHJvdG90eXBlLm1zTWF0Y2hlc1NlbGVjdG9yKSxoPW5ldyBNdXRhdGlvbk9ic2VydmVyKGIpO2Eub2JzZXJ2ZT1lLGYub2JzZXJ2ZT1lfShIVE1MSW1wb3J0cyksZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7SFRNTEltcG9ydHMuaW1wb3J0ZXIuYm9vdERvY3VtZW50KGIpfXZhciBiPXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD93aW5kb3cuU2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGRvY3VtZW50KTpkb2N1bWVudDtIVE1MSW1wb3J0cy51c2VOYXRpdmV8fCgiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZXx8ImludGVyYWN0aXZlIj09PWRvY3VtZW50LnJlYWR5U3RhdGUmJiF3aW5kb3cuYXR0YWNoRXZlbnQ/YSgpOmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGEpKX0oKSx3aW5kb3cuQ3VzdG9tRWxlbWVudHM9d2luZG93LkN1c3RvbUVsZW1lbnRzfHx7ZmxhZ3M6e319LGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxjLGQpe3ZhciBlPWEuZmlyc3RFbGVtZW50Q2hpbGQ7aWYoIWUpZm9yKGU9YS5maXJzdENoaWxkO2UmJmUubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERTspZT1lLm5leHRTaWJsaW5nO2Zvcig7ZTspYyhlLGQpIT09ITAmJmIoZSxjLGQpLGU9ZS5uZXh0RWxlbWVudFNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gYyhhLGIpe2Zvcih2YXIgYz1hLnNoYWRvd1Jvb3Q7YzspZChjLGIpLGM9Yy5vbGRlclNoYWRvd1Jvb3R9ZnVuY3Rpb24gZChhLGQpe2IoYSxmdW5jdGlvbihhKXtyZXR1cm4gZChhKT8hMDp2b2lkIGMoYSxkKX0pLGMoYSxkKX1mdW5jdGlvbiBlKGEpe3JldHVybiBoKGEpPyhpKGEpLCEwKTp2b2lkIGwoYSl9ZnVuY3Rpb24gZihhKXtkKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGUoYSk/ITA6dm9pZCAwfSl9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gZShhKXx8ZihhKX1mdW5jdGlvbiBoKGIpe2lmKCFiLl9fdXBncmFkZWRfXyYmYi5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFKXt2YXIgYz1iLmdldEF0dHJpYnV0ZSgiaXMiKXx8Yi5sb2NhbE5hbWUsZD1hLnJlZ2lzdHJ5W2NdO2lmKGQpcmV0dXJuIEEuZG9tJiZjb25zb2xlLmdyb3VwKCJ1cGdyYWRlOiIsYi5sb2NhbE5hbWUpLGEudXBncmFkZShiKSxBLmRvbSYmY29uc29sZS5ncm91cEVuZCgpLCEwfX1mdW5jdGlvbiBpKGEpe2woYSkscihhKSYmZChhLGZ1bmN0aW9uKGEpe2woYSl9KX1mdW5jdGlvbiBqKGEpe2lmKEUucHVzaChhKSwhRCl7RD0hMDt2YXIgYj13aW5kb3cuUGxhdGZvcm0mJndpbmRvdy5QbGF0Zm9ybS5lbmRPZk1pY3JvdGFza3x8c2V0VGltZW91dDtiKGspfX1mdW5jdGlvbiBrKCl7RD0hMTtmb3IodmFyIGEsYj1FLGM9MCxkPWIubGVuZ3RoO2Q+YyYmKGE9YltjXSk7YysrKWEoKTtFPVtdfWZ1bmN0aW9uIGwoYSl7Qz9qKGZ1bmN0aW9uKCl7bShhKX0pOm0oYSl9ZnVuY3Rpb24gbShhKXsoYS5hdHRhY2hlZENhbGxiYWNrfHxhLmRldGFjaGVkQ2FsbGJhY2t8fGEuX191cGdyYWRlZF9fJiZBLmRvbSkmJihBLmRvbSYmY29uc29sZS5ncm91cCgiaW5zZXJ0ZWQ6IixhLmxvY2FsTmFtZSkscihhKSYmKGEuX19pbnNlcnRlZD0oYS5fX2luc2VydGVkfHwwKSsxLGEuX19pbnNlcnRlZDwxJiYoYS5fX2luc2VydGVkPTEpLGEuX19pbnNlcnRlZD4xP0EuZG9tJiZjb25zb2xlLndhcm4oImluc2VydGVkOiIsYS5sb2NhbE5hbWUsImluc2VydC9yZW1vdmUgY291bnQ6IixhLl9faW5zZXJ0ZWQpOmEuYXR0YWNoZWRDYWxsYmFjayYmKEEuZG9tJiZjb25zb2xlLmxvZygiaW5zZXJ0ZWQ6IixhLmxvY2FsTmFtZSksYS5hdHRhY2hlZENhbGxiYWNrKCkpKSxBLmRvbSYmY29uc29sZS5ncm91cEVuZCgpKX1mdW5jdGlvbiBuKGEpe28oYSksZChhLGZ1bmN0aW9uKGEpe28oYSl9KX1mdW5jdGlvbiBvKGEpe0M/aihmdW5jdGlvbigpe3AoYSl9KTpwKGEpfWZ1bmN0aW9uIHAoYSl7KGEuYXR0YWNoZWRDYWxsYmFja3x8YS5kZXRhY2hlZENhbGxiYWNrfHxhLl9fdXBncmFkZWRfXyYmQS5kb20pJiYoQS5kb20mJmNvbnNvbGUuZ3JvdXAoInJlbW92ZWQ6IixhLmxvY2FsTmFtZSkscihhKXx8KGEuX19pbnNlcnRlZD0oYS5fX2luc2VydGVkfHwwKS0xLGEuX19pbnNlcnRlZD4wJiYoYS5fX2luc2VydGVkPTApLGEuX19pbnNlcnRlZDwwP0EuZG9tJiZjb25zb2xlLndhcm4oInJlbW92ZWQ6IixhLmxvY2FsTmFtZSwiaW5zZXJ0L3JlbW92ZSBjb3VudDoiLGEuX19pbnNlcnRlZCk6YS5kZXRhY2hlZENhbGxiYWNrJiZhLmRldGFjaGVkQ2FsbGJhY2soKSksQS5kb20mJmNvbnNvbGUuZ3JvdXBFbmQoKSl9ZnVuY3Rpb24gcShhKXtyZXR1cm4gd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsP1NoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChhKTphfWZ1bmN0aW9uIHIoYSl7Zm9yKHZhciBiPWEsYz1xKGRvY3VtZW50KTtiOyl7aWYoYj09YylyZXR1cm4hMDtiPWIucGFyZW50Tm9kZXx8Yi5ob3N0fX1mdW5jdGlvbiBzKGEpe2lmKGEuc2hhZG93Um9vdCYmIWEuc2hhZG93Um9vdC5fX3dhdGNoZWQpe0EuZG9tJiZjb25zb2xlLmxvZygid2F0Y2hpbmcgc2hhZG93LXJvb3QgZm9yOiAiLGEubG9jYWxOYW1lKTtmb3IodmFyIGI9YS5zaGFkb3dSb290O2I7KXQoYiksYj1iLm9sZGVyU2hhZG93Um9vdH19ZnVuY3Rpb24gdChhKXthLl9fd2F0Y2hlZHx8KHcoYSksYS5fX3dhdGNoZWQ9ITApfWZ1bmN0aW9uIHUoYSl7aWYoQS5kb20pe3ZhciBiPWFbMF07aWYoYiYmImNoaWxkTGlzdCI9PT1iLnR5cGUmJmIuYWRkZWROb2RlcyYmYi5hZGRlZE5vZGVzKXtmb3IodmFyIGM9Yi5hZGRlZE5vZGVzWzBdO2MmJmMhPT1kb2N1bWVudCYmIWMuaG9zdDspYz1jLnBhcmVudE5vZGU7dmFyIGQ9YyYmKGMuVVJMfHxjLl9VUkx8fGMuaG9zdCYmYy5ob3N0LmxvY2FsTmFtZSl8fCIiO2Q9ZC5zcGxpdCgiLz8iKS5zaGlmdCgpLnNwbGl0KCIvIikucG9wKCl9Y29uc29sZS5ncm91cCgibXV0YXRpb25zICglZCkgWyVzXSIsYS5sZW5ndGgsZHx8IiIpfWEuZm9yRWFjaChmdW5jdGlvbihhKXsiY2hpbGRMaXN0Ij09PWEudHlwZSYmKEcoYS5hZGRlZE5vZGVzLGZ1bmN0aW9uKGEpe2EubG9jYWxOYW1lJiZnKGEpfSksRyhhLnJlbW92ZWROb2RlcyxmdW5jdGlvbihhKXthLmxvY2FsTmFtZSYmbihhKX0pKX0pLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCl9ZnVuY3Rpb24gdigpe3UoRi50YWtlUmVjb3JkcygpKSxrKCl9ZnVuY3Rpb24gdyhhKXtGLm9ic2VydmUoYSx7Y2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KX1mdW5jdGlvbiB4KGEpe3coYSl9ZnVuY3Rpb24geShhKXtBLmRvbSYmY29uc29sZS5ncm91cCgidXBncmFkZURvY3VtZW50OiAiLGEuYmFzZVVSSS5zcGxpdCgiLyIpLnBvcCgpKSxnKGEpLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCl9ZnVuY3Rpb24geihhKXthPXEoYSk7Zm9yKHZhciBiLGM9YS5xdWVyeVNlbGVjdG9yQWxsKCJsaW5rW3JlbD0iK0IrIl0iKSxkPTAsZT1jLmxlbmd0aDtlPmQmJihiPWNbZF0pO2QrKyliLmltcG9ydCYmYi5pbXBvcnQuX19wYXJzZWQmJnooYi5pbXBvcnQpO3koYSl9dmFyIEE9d2luZG93LmxvZ0ZsYWdzfHx7fSxCPXdpbmRvdy5IVE1MSW1wb3J0cz9IVE1MSW1wb3J0cy5JTVBPUlRfTElOS19UWVBFOiJub25lIixDPSF3aW5kb3cuTXV0YXRpb25PYnNlcnZlcnx8d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXI9PT13aW5kb3cuSnNNdXRhdGlvbk9ic2VydmVyO2EuaGFzUG9seWZpbGxNdXRhdGlvbnM9Qzt2YXIgRD0hMSxFPVtdLEY9bmV3IE11dGF0aW9uT2JzZXJ2ZXIodSksRz1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsLmJpbmQoQXJyYXkucHJvdG90eXBlLmZvckVhY2gpO2EuSU1QT1JUX0xJTktfVFlQRT1CLGEud2F0Y2hTaGFkb3c9cyxhLnVwZ3JhZGVEb2N1bWVudFRyZWU9eixhLnVwZ3JhZGVBbGw9ZyxhLnVwZ3JhZGVTdWJ0cmVlPWYsYS5pbnNlcnRlZE5vZGU9aSxhLm9ic2VydmVEb2N1bWVudD14LGEudXBncmFkZURvY3VtZW50PXksYS50YWtlUmVjb3Jkcz12fSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYixnKXt2YXIgaD1nfHx7fTtpZighYil0aHJvdyBuZXcgRXJyb3IoImRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudDogZmlyc3QgYXJndW1lbnQgYG5hbWVgIG11c3Qgbm90IGJlIGVtcHR5Iik7aWYoYi5pbmRleE9mKCItIik8MCl0aHJvdyBuZXcgRXJyb3IoImRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudDogZmlyc3QgYXJndW1lbnQgKCduYW1lJykgbXVzdCBjb250YWluIGEgZGFzaCAoJy0nKS4gQXJndW1lbnQgcHJvdmlkZWQgd2FzICciK1N0cmluZyhiKSsiJy4iKTtpZihjKGIpKXRocm93IG5ldyBFcnJvcigiRmFpbGVkIHRvIGV4ZWN1dGUgJ3JlZ2lzdGVyRWxlbWVudCcgb24gJ0RvY3VtZW50JzogUmVnaXN0cmF0aW9uIGZhaWxlZCBmb3IgdHlwZSAnIitTdHJpbmcoYikrIicuIFRoZSB0eXBlIG5hbWUgaXMgaW52YWxpZC4iKTtpZihuKGIpKXRocm93IG5ldyBFcnJvcigiRHVwbGljYXRlRGVmaW5pdGlvbkVycm9yOiBhIHR5cGUgd2l0aCBuYW1lICciK1N0cmluZyhiKSsiJyBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQiKTtpZighaC5wcm90b3R5cGUpdGhyb3cgbmV3IEVycm9yKCJPcHRpb25zIG1pc3NpbmcgcmVxdWlyZWQgcHJvdG90eXBlIHByb3BlcnR5Iik7cmV0dXJuIGguX19uYW1lPWIudG9Mb3dlckNhc2UoKSxoLmxpZmVjeWNsZT1oLmxpZmVjeWNsZXx8e30saC5hbmNlc3RyeT1kKGguZXh0ZW5kcyksZShoKSxmKGgpLGwoaC5wcm90b3R5cGUpLG8oaC5fX25hbWUsaCksaC5jdG9yPXAoaCksaC5jdG9yLnByb3RvdHlwZT1oLnByb3RvdHlwZSxoLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1oLmN0b3IsYS5yZWFkeSYmYS51cGdyYWRlRG9jdW1lbnRUcmVlKGRvY3VtZW50KSxoLmN0b3J9ZnVuY3Rpb24gYyhhKXtmb3IodmFyIGI9MDtiPHkubGVuZ3RoO2IrKylpZihhPT09eVtiXSlyZXR1cm4hMH1mdW5jdGlvbiBkKGEpe3ZhciBiPW4oYSk7cmV0dXJuIGI/ZChiLmV4dGVuZHMpLmNvbmNhdChbYl0pOltdfWZ1bmN0aW9uIGUoYSl7Zm9yKHZhciBiLGM9YS5leHRlbmRzLGQ9MDtiPWEuYW5jZXN0cnlbZF07ZCsrKWM9Yi5pcyYmYi50YWc7YS50YWc9Y3x8YS5fX25hbWUsYyYmKGEuaXM9YS5fX25hbWUpfWZ1bmN0aW9uIGYoYSl7aWYoIU9iamVjdC5fX3Byb3RvX18pe3ZhciBiPUhUTUxFbGVtZW50LnByb3RvdHlwZTtpZihhLmlzKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KGEudGFnKSxkPU9iamVjdC5nZXRQcm90b3R5cGVPZihjKTtkPT09YS5wcm90b3R5cGUmJihiPWQpfWZvcih2YXIgZSxmPWEucHJvdG90eXBlO2YmJmYhPT1iOyllPU9iamVjdC5nZXRQcm90b3R5cGVPZihmKSxmLl9fcHJvdG9fXz1lLGY9ZTthLm5hdGl2ZT1ifX1mdW5jdGlvbiBnKGEpe3JldHVybiBoKEIoYS50YWcpLGEpfWZ1bmN0aW9uIGgoYixjKXtyZXR1cm4gYy5pcyYmYi5zZXRBdHRyaWJ1dGUoImlzIixjLmlzKSxpKGIsYyksYi5fX3VwZ3JhZGVkX189ITAsayhiKSxhLmluc2VydGVkTm9kZShiKSxhLnVwZ3JhZGVTdWJ0cmVlKGIpLGJ9ZnVuY3Rpb24gaShhLGIpe09iamVjdC5fX3Byb3RvX18/YS5fX3Byb3RvX189Yi5wcm90b3R5cGU6KGooYSxiLnByb3RvdHlwZSxiLm5hdGl2ZSksYS5fX3Byb3RvX189Yi5wcm90b3R5cGUpfWZ1bmN0aW9uIGooYSxiLGMpe2Zvcih2YXIgZD17fSxlPWI7ZSE9PWMmJmUhPT1IVE1MRWxlbWVudC5wcm90b3R5cGU7KXtmb3IodmFyIGYsZz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKSxoPTA7Zj1nW2hdO2grKylkW2ZdfHwoT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsZixPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsZikpLGRbZl09MSk7ZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSl9fWZ1bmN0aW9uIGsoYSl7YS5jcmVhdGVkQ2FsbGJhY2smJmEuY3JlYXRlZENhbGxiYWNrKCl9ZnVuY3Rpb24gbChhKXtpZighYS5zZXRBdHRyaWJ1dGUuX3BvbHlmaWxsZWQpe3ZhciBiPWEuc2V0QXR0cmlidXRlO2Euc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGEsYyl7bS5jYWxsKHRoaXMsYSxjLGIpfTt2YXIgYz1hLnJlbW92ZUF0dHJpYnV0ZTthLnJlbW92ZUF0dHJpYnV0ZT1mdW5jdGlvbihhKXttLmNhbGwodGhpcyxhLG51bGwsYyl9LGEuc2V0QXR0cmlidXRlLl9wb2x5ZmlsbGVkPSEwfX1mdW5jdGlvbiBtKGEsYixjKXthPWEudG9Mb3dlckNhc2UoKTt2YXIgZD10aGlzLmdldEF0dHJpYnV0ZShhKTtjLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgZT10aGlzLmdldEF0dHJpYnV0ZShhKTt0aGlzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayYmZSE9PWQmJnRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKGEsZCxlKX1mdW5jdGlvbiBuKGEpe3JldHVybiBhP3pbYS50b0xvd2VyQ2FzZSgpXTp2b2lkIDB9ZnVuY3Rpb24gbyhhLGIpe3pbYV09Yn1mdW5jdGlvbiBwKGEpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBnKGEpfX1mdW5jdGlvbiBxKGEsYixjKXtyZXR1cm4gYT09PUE/cihiLGMpOkMoYSxiKX1mdW5jdGlvbiByKGEsYil7dmFyIGM9bihifHxhKTtpZihjKXtpZihhPT1jLnRhZyYmYj09Yy5pcylyZXR1cm4gbmV3IGMuY3RvcjtpZighYiYmIWMuaXMpcmV0dXJuIG5ldyBjLmN0b3J9aWYoYil7dmFyIGQ9cihhKTtyZXR1cm4gZC5zZXRBdHRyaWJ1dGUoImlzIixiKSxkfXZhciBkPUIoYSk7cmV0dXJuIGEuaW5kZXhPZigiLSIpPj0wJiZpKGQsSFRNTEVsZW1lbnQpLGR9ZnVuY3Rpb24gcyhhKXtpZighYS5fX3VwZ3JhZGVkX18mJmEubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSl7dmFyIGI9YS5nZXRBdHRyaWJ1dGUoImlzIiksYz1uKGJ8fGEubG9jYWxOYW1lKTtpZihjKXtpZihiJiZjLnRhZz09YS5sb2NhbE5hbWUpcmV0dXJuIGgoYSxjKTtpZighYiYmIWMuZXh0ZW5kcylyZXR1cm4gaChhLGMpfX19ZnVuY3Rpb24gdChiKXt2YXIgYz1ELmNhbGwodGhpcyxiKTtyZXR1cm4gYS51cGdyYWRlQWxsKGMpLGN9YXx8KGE9d2luZG93LkN1c3RvbUVsZW1lbnRzPXtmbGFnczp7fX0pO3ZhciB1PWEuZmxhZ3Msdj1Cb29sZWFuKGRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudCksdz0hdS5yZWdpc3RlciYmdiYmIXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCYmKCF3aW5kb3cuSFRNTEltcG9ydHN8fEhUTUxJbXBvcnRzLnVzZU5hdGl2ZSk7aWYodyl7dmFyIHg9ZnVuY3Rpb24oKXt9O2EucmVnaXN0cnk9e30sYS51cGdyYWRlRWxlbWVudD14LGEud2F0Y2hTaGFkb3c9eCxhLnVwZ3JhZGU9eCxhLnVwZ3JhZGVBbGw9eCxhLnVwZ3JhZGVTdWJ0cmVlPXgsYS5vYnNlcnZlRG9jdW1lbnQ9eCxhLnVwZ3JhZGVEb2N1bWVudD14LGEudXBncmFkZURvY3VtZW50VHJlZT14LGEudGFrZVJlY29yZHM9eCxhLnJlc2VydmVkVGFnTGlzdD1bXX1lbHNle3ZhciB5PVsiYW5ub3RhdGlvbi14bWwiLCJjb2xvci1wcm9maWxlIiwiZm9udC1mYWNlIiwiZm9udC1mYWNlLXNyYyIsImZvbnQtZmFjZS11cmkiLCJmb250LWZhY2UtZm9ybWF0IiwiZm9udC1mYWNlLW5hbWUiLCJtaXNzaW5nLWdseXBoIl0sej17fSxBPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIixCPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQuYmluZChkb2N1bWVudCksQz1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMuYmluZChkb2N1bWVudCksRD1Ob2RlLnByb3RvdHlwZS5jbG9uZU5vZGU7CmRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudD1iLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ9cixkb2N1bWVudC5jcmVhdGVFbGVtZW50TlM9cSxOb2RlLnByb3RvdHlwZS5jbG9uZU5vZGU9dCxhLnJlZ2lzdHJ5PXosYS51cGdyYWRlPXN9dmFyIEU7RT1PYmplY3QuX19wcm90b19ffHx3P2Z1bmN0aW9uKGEsYil7cmV0dXJuIGEgaW5zdGFuY2VvZiBifTpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1hO2M7KXtpZihjPT09Yi5wcm90b3R5cGUpcmV0dXJuITA7Yz1jLl9fcHJvdG9fX31yZXR1cm4hMX0sYS5pbnN0YW5jZW9mPUUsYS5yZXNlcnZlZFRhZ0xpc3Q9eSxkb2N1bWVudC5yZWdpc3Rlcj1kb2N1bWVudC5yZWdpc3RlckVsZW1lbnQsYS5oYXNOYXRpdmU9dixhLnVzZU5hdGl2ZT13fSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuImxpbmsiPT09YS5sb2NhbE5hbWUmJmEuZ2V0QXR0cmlidXRlKCJyZWwiKT09PWN9dmFyIGM9YS5JTVBPUlRfTElOS19UWVBFLGQ9e3NlbGVjdG9yczpbImxpbmtbcmVsPSIrYysiXSJdLG1hcDp7bGluazoicGFyc2VMaW5rIn0scGFyc2U6ZnVuY3Rpb24oYSl7aWYoIWEuX19wYXJzZWQpe2EuX19wYXJzZWQ9ITA7dmFyIGI9YS5xdWVyeVNlbGVjdG9yQWxsKGQuc2VsZWN0b3JzKTtlKGIsZnVuY3Rpb24oYSl7ZFtkLm1hcFthLmxvY2FsTmFtZV1dKGEpfSksQ3VzdG9tRWxlbWVudHMudXBncmFkZURvY3VtZW50KGEpLEN1c3RvbUVsZW1lbnRzLm9ic2VydmVEb2N1bWVudChhKX19LHBhcnNlTGluazpmdW5jdGlvbihhKXtiKGEpJiZ0aGlzLnBhcnNlSW1wb3J0KGEpfSxwYXJzZUltcG9ydDpmdW5jdGlvbihhKXthLmltcG9ydCYmZC5wYXJzZShhLmltcG9ydCl9fSxlPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwuYmluZChBcnJheS5wcm90b3R5cGUuZm9yRWFjaCk7YS5wYXJzZXI9ZCxhLklNUE9SVF9MSU5LX1RZUEU9Y30od2luZG93LkN1c3RvbUVsZW1lbnRzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7Q3VzdG9tRWxlbWVudHMucGFyc2VyLnBhcnNlKGRvY3VtZW50KSxDdXN0b21FbGVtZW50cy51cGdyYWRlRG9jdW1lbnQoZG9jdW1lbnQpLHdpbmRvdy5IVE1MSW1wb3J0cyYmKEhUTUxJbXBvcnRzLl9faW1wb3J0c1BhcnNpbmdIb29rPWZ1bmN0aW9uKGEpe0N1c3RvbUVsZW1lbnRzLnBhcnNlci5wYXJzZShhLmltcG9ydCl9KSxDdXN0b21FbGVtZW50cy5yZWFkeT0hMCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Q3VzdG9tRWxlbWVudHMucmVhZHlUaW1lPURhdGUubm93KCksd2luZG93LkhUTUxJbXBvcnRzJiYoQ3VzdG9tRWxlbWVudHMuZWxhcHNlZD1DdXN0b21FbGVtZW50cy5yZWFkeVRpbWUtSFRNTEltcG9ydHMucmVhZHlUaW1lKSxkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgiV2ViQ29tcG9uZW50c1JlYWR5Iix7YnViYmxlczohMH0pKX0pfWlmKCJmdW5jdGlvbiIhPXR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQmJih3aW5kb3cuQ3VzdG9tRXZlbnQ9ZnVuY3Rpb24oYSxiKXtiPWJ8fHt9O3ZhciBjPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJDdXN0b21FdmVudCIpO3JldHVybiBjLmluaXRDdXN0b21FdmVudChhLEJvb2xlYW4oYi5idWJibGVzKSxCb29sZWFuKGIuY2FuY2VsYWJsZSksYi5kZXRhaWwpLGN9LHdpbmRvdy5DdXN0b21FdmVudC5wcm90b3R5cGU9d2luZG93LkV2ZW50LnByb3RvdHlwZSksImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGV8fGEuZmxhZ3MuZWFnZXIpYigpO2Vsc2UgaWYoImludGVyYWN0aXZlIiE9PWRvY3VtZW50LnJlYWR5U3RhdGV8fHdpbmRvdy5hdHRhY2hFdmVudHx8d2luZG93LkhUTUxJbXBvcnRzJiYhd2luZG93LkhUTUxJbXBvcnRzLnJlYWR5KXt2YXIgYz13aW5kb3cuSFRNTEltcG9ydHMmJiFIVE1MSW1wb3J0cy5yZWFkeT8iSFRNTEltcG9ydHNMb2FkZWQiOiJET01Db250ZW50TG9hZGVkIjt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihjLGIpfWVsc2UgYigpfSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKCl7aWYod2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKXt2YXIgYT1bInVwZ3JhZGVBbGwiLCJ1cGdyYWRlU3VidHJlZSIsIm9ic2VydmVEb2N1bWVudCIsInVwZ3JhZGVEb2N1bWVudCJdLGI9e307YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2JbYV09Q3VzdG9tRWxlbWVudHNbYV19KSxhLmZvckVhY2goZnVuY3Rpb24oYSl7Q3VzdG9tRWxlbWVudHNbYV09ZnVuY3Rpb24oYyl7cmV0dXJuIGJbYV0od3JhcChjKSl9fSl9fSgpLGZ1bmN0aW9uKCl7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTthLnRleHRDb250ZW50PSJib2R5IHt0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UtaW4gMC4yczsgfSBcbmJvZHlbdW5yZXNvbHZlZF0ge29wYWNpdHk6IDA7IGRpc3BsYXk6IGJsb2NrOyBvdmVyZmxvdzogaGlkZGVuOyB9IFxuIjt2YXIgYj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJoZWFkIik7Yi5pbnNlcnRCZWZvcmUoYSxiLmZpcnN0Q2hpbGQpfShQbGF0Zm9ybSksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGIpe3JldHVybiBiPWJ8fFtdLGIubWFwfHwoYj1bYl0pLGEuYXBwbHkodGhpcyxiLm1hcChkKSl9ZnVuY3Rpb24gYyhhLGMsZCl7dmFyIGU7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm47Y2FzZSAxOmU9bnVsbDticmVhaztjYXNlIDI6ZT1jLmFwcGx5KHRoaXMpO2JyZWFrO2RlZmF1bHQ6ZT1iKGQsYyl9ZlthXT1lfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGZbYV19ZnVuY3Rpb24gZShhLGMpe0hUTUxJbXBvcnRzLndoZW5JbXBvcnRzUmVhZHkoZnVuY3Rpb24oKXtiKGMsYSl9KX12YXIgZj17fTthLm1hcnNoYWw9ZCxhLm1vZHVsYXJpemU9YyxhLnVzaW5nPWV9KHdpbmRvdyk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsYXRmb3JtLmpzLm1hcA==",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sun, 09 Nov 2014 03:25:10 GMT",
                    "Content-Length": "131983",
                    "Date": "Sun, 09 Nov 2014 03:25:10 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}