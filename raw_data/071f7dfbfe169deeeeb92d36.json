{
    "url": "http://localhost:9999/toushay/log4javascript/console_uncompressed.html",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Document domain manipulation (DOM-based)",
    "issueType": 5247232,
    "severity": "Medium",
    "confidence": "Firm",
    "issueBackground": "DOM-based document domain manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and sets the document.domain property with this data. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will cause the response page to set an arbitrary document.domain value.<br><br>The document.domain property is used by browsers in their enforcement of the same origin policy. If two pages from different origins explicitly set the same document.domain value, then those two pages can interact in unrestricted ways. If an attacker can cause a page of a targeted application, and another page they control (either directly, or via an XSS-like vulnerability), to set the same document.domain value, then the attacker may be able to fully compromise the targeted application page via the page they already control, with the same possibilities for exploitation as regular cross-site scripting (XSS) vulnerabilities.<br><br>Browsers generally enforce some restrictions on the values that can be assigned to document.domain, and may prevent the use of completely different values than the actual origin of the page. However, there are two important caveats to this. Firstly, browsers allow the use of child or parent domains, so an attacker may be able to switch the domain of the targeted application page to that of a related application with a weaker security posture. Secondly, some browser quirks enable switching to completely unrelated domains. These caveats mean that the ability to manipulate the document.domain property of a page generally represents a security vulnerability whose severity is not far behind regular XSS.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based document domain manipulation vulnerabilities is not to dynamically set the document.domain property using data that originated from any untrusted source. If it is necessary to programmatically set the document.domain property from within client-side code, then the application should employ a set list of acceptable values, and assign only from values in that list.",
    "issueDetail": "The application may be vulnerable to DOM-based document domain manipulation. Data is read from <b>location.search</b> and written to <b>document.domain</b> via the following statements:<ul><li>var queryBits = unescape(location.search).substr(1).split(\"&amp;\"), nameValueBits;</li><li>nameValueBits = queryBits[i].split(\"=\");</li><li>document.domain = nameValueBits[1];</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/toushay/log4javascript/console_uncompressed.html",
                "path": "/toushay/log4javascript/console_uncompressed.html",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC90b3VzaGF5L2xvZzRqYXZhc2NyaXB0L2NvbnNvbGVfdW5jb21wcmVzc2VkLmh0bWwgSFRUUC8xLjENCkhvc3Q6IGxvY2FsaG9zdDo5OTk5DQoNCg==",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 09:03:46 GMT",
                    "Content-Length": "70784",
                    "Date": "Fri, 07 Nov 2014 09:03:46 GMT",
                    "Content-Type": "text/html; charset=utf-8"
                },
                "cookies": [],
                "mimeType": "HTML",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}