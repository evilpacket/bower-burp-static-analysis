{
    "url": "http://localhost:9999/MrSwitch/hello.js/demos/skydrive.html",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "HTML5 storage manipulation (DOM-based)",
    "issueType": 5246720,
    "severity": "Information",
    "confidence": "Firm",
    "issueBackground": "DOM-based HTML5 storage manipulation occurs when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and stores this data in the HTML5 storage of the web browser (either localStorage or sessionStorage). An attacker may be able to use this behavior to construct a URL which, if visited by another application user, will cause the user's browser to store attacker-controllable data.<br><br>This behavior does not in itself constitute a security vulnerability. However, if the application later reads the data back from storage and processes it in an unsafe way, then an attacker may be able to leverage the storage mechanism to deliver other DOM-based attacks, such as cross-site scripting and JavaScript injection.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>You should also review the ways in which the wider application uses data that is retrieved from HTML5 storage. If the data is never handled in an unsafe manner, then this behavior may not constitute any kind of vulnerability.<br><br>The most effective way to avoid DOM-based HTML5 storage manipulation is not to place in HTML5 storage any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored.",
    "issueDetail": "The application may be vulnerable to DOM-based HTML5 storage manipulation. Data is read from <b>window.location.search</b> and written to <b>localStorage.setItem()</b> via the following statements:<ul><li>var access_token = (window.location.hash||window.location.search).match(/access_token=([^&amp;]+)/);</li><li>localStorage.setItem(\"access_token\", decodeURIComponent(access_token[1]));</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/MrSwitch/hello.js/demos/skydrive.html",
                "path": "/MrSwitch/hello.js/demos/skydrive.html",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9NclN3aXRjaC9oZWxsby5qcy9kZW1vcy9za3lkcml2ZS5odG1sIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNTI5OA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04DQpEYXRlOiBGcmksIDA3IE5vdiAyMDE0IDAzOjA4OjE3IEdNVA0KTGFzdC1Nb2RpZmllZDogRnJpLCAwNyBOb3YgMjAxNCAwMzowODoxNyBHTVQNCg0KPCFET0NUWVBFIGh0bWw+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fkb3JuL2Fkb3JuLmNzcyIvPgo8c2NyaXB0IHNyYz0iL2Fkb3JuL2Fkb3JuLmpzIiBhc3luYz48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImNsaWVudF9pZHMuanMiPjwvc2NyaXB0PgoKPHRpdGxlPlNpbXBsZSBTa3lEcml2ZSBEZW1vPC90aXRsZT4KPHN0eWxlPgppbWd7Cglwb3NpdGlvbjogZml4ZWQ7Cgl0b3A6MDsKCWxlZnQ6NTAlOwoJd2lkdGg6MjAwcHg7Cglib3JkZXI6MXB4IHNvbGlkICNjY2M7CglwYWRkaW5nOjEwcHg7Cn0KaW1nOm50aC1jaGlsZCgybil7Cgktd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTBkZWcpOwoJLW1vei10cmFuc2Zvcm06cm90YXRlKDEwZGVnKTsKCS1tcy10cmFuc2Zvcm06cm90YXRlKDEwZGVnKTsKCXRyYW5zZm9ybTpyb3RhdGUoMTBkZWcpOwp9CmltZzpudGgtY2hpbGQoM24pewoJLXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7CgktbW96LXRyYW5zZm9ybTpyb3RhdGUoLTEwZGVnKTsKCS1tcy10cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7Cgl0cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7Cn0KPC9zdHlsZT4KPGgxPlNpbXBsZSBTa3lkcml2ZSBkZW1vPC9oMT4KPGJsb2NrcXVvdGU+Cgk8cD5UaGlzIGRlbW8gdXNlcyBPQXV0aDIgYW5kIENPUlMgKG9yIEpTT05QKSB0byBtYWtlIHNvbWUgUkVTVCBjYWxscyB3aGljaCBuYXZpZ2F0ZSB0aGUgV2luZG93cyBMaXZlIEdyYXBoIEFQSSB0byBnZXQgc29tZSBwaG90b3Mgb3V0IG9mIFNreWRyaXZlLiBJdCBpcyBQTFVHSU4tRlJFRSE8L3A+CjxwPklmIHJ1bm5pbmcgbG9jYWxseSwgPGEgaHJlZj0iaHR0cDovL21hbmFnZS5kZXYubGl2ZS5jb20vIj5yZWdpc3RlciB5b3VyIGRldmVsb3BtZW50IGRvbWFpbjwvYT4gYW5kIHJlcGxhY2UgV0lORE9XU19DTElFTlRfSUQgKGJlbG93KSB3aXRoIHRoZSBjbGllbnRfaWQgeW91IGFyZSBhc3NpZ25lZDwvcD4KPC9ibG9ja3F1b3RlPgoKPHA+QnVpbGQgYSBsb2dpbiBidXR0b248L3A+CjxidXR0b24gb25jbGljaz0ibG9naW4oKSI+TG9naW48L2J1dHRvbj4KPHByZT4KJmx0O2J1dHRvbiBvbmNsaWNrPSJsb2dpbigpIiZndDtMb2dpbiZsdDsvYnV0dG9uJmd0Owo8L3ByZT4KPHA+RGVmaW5lIHRoZSBsb2dpbiBmdW5jdGlvbjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KZnVuY3Rpb24gbG9naW4oKXsKCXdpbmRvdy5sb2NhdGlvbiA9ICdodHRwczovL29hdXRoLmxpdmUuY29tL2F1dGhvcml6ZScrIAoJCSc/Y2xpZW50X2lkPScrV0lORE9XU19DTElFTlRfSUQrCgkJJyZzY29wZT13bC5za3lkcml2ZScrCgkJJyZyZXNwb25zZV90eXBlPXRva2VuJysKCQknJnJlZGlyZWN0X3VyaT0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZik7Cn0KPC9zY3JpcHQ+CjxwPlNhdmUgYSBuZXcgYWNjZXNzX3Rva2VuIC0gaWYgd2luZG93IGxvY2F0aW9uIGFkZHJlc3MgaW5jbHVkZXMgb25lPC9wPiAKPHNjcmlwdCBjbGFzcz0icHJlIj4KdmFyIGFjY2Vzc190b2tlbiA9ICh3aW5kb3cubG9jYXRpb24uaGFzaHx8d2luZG93LmxvY2F0aW9uLnNlYXJjaCkubWF0Y2goL2FjY2Vzc190b2tlbj0oW14mXSspLyk7IAppZihhY2Nlc3NfdG9rZW4peyAKCS8vIFNhdmUgdGhlIGZpcnN0IG1hdGNoCglsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiYWNjZXNzX3Rva2VuIiwgZGVjb2RlVVJJQ29tcG9uZW50KGFjY2Vzc190b2tlblsxXSkpOwp9Cjwvc2NyaXB0PgoKPHA+QnVpbGQgYW4gaHR0cFJlcXVlc3QgaGFuZGxlciBmdW5jdGlvbiBmb3IgQ09SUyB2aWEgWEhSLCBmYWxsaW5nIGJhY2sgdG8gSlNPTlA8L3A+CjxzY3JpcHQgY2xhc3M9InByZSI+CmZ1bmN0aW9uIGh0dHBSZXF1ZXN0KHVybCxjYWxsYmFjayl7CgkvLyBJRTEwLCBGRiwgQ2hyb21lCglpZignd2l0aENyZWRlbnRpYWxzJyBpbiBuZXcgWE1MSHR0cFJlcXVlc3QoKSl7CgkJdmFyIHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKCQkvLyB4aHIucmVzcG9uc2VUeXBlID0gImpzb24iOyAvLyBpcyBub3Qgc3VwcG9ydGVkIGluIGFueSBvZiB0aGUgdmVuZG9ycyB5ZXQuCgkJci5vbmxvYWQgPSBmdW5jdGlvbihlKXsKCQkJY2FsbGJhY2soci5yZXNwb25zZVRleHQ/SlNPTi5wYXJzZShyLnJlc3BvbnNlVGV4dCk6e2Vycm9yOnttZXNzYWdlOiJDb3VsZCBub3QgZ2V0IHJlc291cmNlIn19KTsKCQl9OwoJCXIub3BlbignR0VUJywgdXJsKTsKCQlyLnNlbmQoIG51bGwgKTsKCX0KCWVsc2V7CgkJLy8gRWxzZSBhZGQgdGhlIGNhbGxiYWNrIG9uIHRvIHRoZSBVUkwKCQlqc29ucCh1cmwrIiZjYWxsYmFjaz0/IiwgY2FsbGJhY2spOwoJfQp9Cjwvc2NyaXB0PgoKPHA+anNvbnAoKTogQSBjcm9zcyBkb21haW4gc2NyaXB0aW5nICJoYWNrIjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KdmFyIGpzb25fY291bnRlcj0wOwpmdW5jdGlvbiBqc29ucChwYXRoLGNhbGxiYWNrKXsKCS8vIE1ha2UgdGhlIGFub255bW91cyBmdW5jdGlvbi4gbm90IGFub255bW91cwoJdmFyIGNhbGxiYWNrX25hbWUgPSAnanNvbnBfJyArIGpzb25fY291bnRlcisrOwoJd2luZG93W2NhbGxiYWNrX25hbWVdID0gY2FsbGJhY2s7CgkvLyBBZGQgdGhlIGNhbGxiYWNrIG5hbWUgdG8gdGhlIHBhdGgKCXBhdGggPSBwYXRoLnJlcGxhY2UoL1w9XD8vLCAnPScrY2FsbGJhY2tfbmFtZSk7CgkvLyBmaW5kIGEgcGxhY2UgdG8gaW5zZXJ0IHRoZSBzY3JpcHQgdGFnCgl2YXIgc2libGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKCS8vIENyZWF0ZSB0aGUgc2NyaXB0IHRhZwoJdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwoJc2NyaXB0LnNyYyA9IHBhdGg7CglzaWJsaW5nLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNjcmlwdCxzaWJsaW5nKTsKfQo8L3NjcmlwdD4KCjxwPk5hdmlnYXRlIHRoZSBHcmFwaDogZ2V0QWxsUGhvdG9zIGlzIGEgcmVjdXJzaXZlIGZ1bmN0aW9uIHdoaWNoIHNlZWtzIG91dCBpbWFnZXMgc3RvcmVkIGluIHRoZSB1c2VycyBTa3lEcml2ZTwvcD4KCjxzY3JpcHQgY2xhc3M9InByZSI+CmZ1bmN0aW9uIGdldEFsbFBob3RvcyhwYXRoLGNhbGxiYWNrKXsKCS8vIFRva2VuCgl2YXIgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiYWNjZXNzX3Rva2VuIik7CgoJLy8gTWFrZSBKU09OUCByZXF1ZXN0CglodHRwUmVxdWVzdCgnaHR0cHM6Ly9hcGlzLmxpdmUubmV0L3Y1LjAvJytwYXRoKyc/ZmlsdGVyPWFsYnVtcyxmb2xkZXJzLHBob3RvcyZhY2Nlc3NfdG9rZW49Jyt0b2tlbiwgZnVuY3Rpb24ocil7CgkJLy8gVmFsaWQKCQlpZighcnx8ci5lcnJvcil7CgkJCWFsZXJ0KCJZb3UgaGF2ZSBhbiBlcnJvcjogIityLmVycm9yLm1lc3NhZ2UpOwoJCQlsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgiYWNjZXNzX3Rva2VuIik7CgkJCXJldHVybjsKCQl9CgkJLy8gTG9vcCB0aHJvdWdoIHRoZSByZXN1bHRzCgkJZm9yKHZhciBpPTA7aTxyLmRhdGEubGVuZ3RoO2krKyl7CgkJCXZhciBpdGVtID0gci5kYXRhW2ldOwoJCQkvLyBNYWtlIGEgcmVxdWVzdCB0byBnZXQgdGhlIGZvbGRlciBjb250ZW50cwoJCQlpZihpdGVtLnR5cGUgPT09ICdmb2xkZXInIHx8IGl0ZW0udHlwZSA9PT0gJ2FsYnVtJyl7CgkJCQlnZXRBbGxQaG90b3MoaXRlbS5pZCsnL2ZpbGVzJywgY2FsbGJhY2spOwoJCQl9CgkJCWVsc2UgaWYoaXRlbS50eXBlPT09J3Bob3RvJyl7CgkJCQljYWxsYmFjayhpdGVtKTsKCQkJfQoJCX0KCX0pOwp9Owo8L3NjcmlwdD4KCjxwPklmIHRoZXJlIGlzIGFuIGFjY2Vzc190b2tlbiwgZmlyZSBvZmYgZ2V0QWxsUGhvdG9zLCBhbmQgcHJpbnQgYWxsIGltYWdlcyBvdXQgdG8gdGhlIHNjcmVlbjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oImFjY2Vzc190b2tlbiIpKXsKCS8vIFJlY3Vyc2l2ZWx5IHN0YXJ0IHNlYXJjaGluZyBTa3lkcml2ZSBkaXJlY3RvcmllcyBmb3IgcGhvdG9zLCB0cmlnZ2VycyBjYWxsYmFjayBvbiBlYWNoIGltYWdlCglnZXRBbGxQaG90b3MoJ21lL3NreWRyaXZlL2ZpbGVzJyxmdW5jdGlvbihvYmopewoKCQkvLyBDcmVhdGUgYSBuZXcgaW1hZ2UgaW4gdGhlIERPTSwgZ2l2ZSBpdCBzb21lIHJhbmRvbW5lc3MgYW5kIGluc2VydCBpdCBpbnRvIHRoZSBkb20uCgkJdmFyIGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOwoJCWltZy5zcmMgPSBvYmoucGljdHVyZTsKCQlpbWcuc3R5bGUudG9wID0gKHBhcnNlSW50KE1hdGgucmFuZG9tKCkqODUsMTApKSsnJSc7CgkJaW1nLnN0eWxlLmxlZnQgPSAoNTArcGFyc2VJbnQoTWF0aC5yYW5kb20oKSo1MCwxMCkpKyclJzsKCQlkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGltZyk7Cgl9KTsKfQoKCgpmdW5jdGlvbiBodHRwUmVxdWVzdCh1cmwsY2FsbGJhY2spewoJLy8gSUUxMCwgRkYsIENocm9tZQoJaWYoJ3dpdGhDcmVkZW50aWFscycgaW4gbmV3IFhNTEh0dHBSZXF1ZXN0KCkpewoJCXZhciByID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CgkJLy8geGhyLnJlc3BvbnNlVHlwZSA9ICJqc29uIjsgLy8gaXMgbm90IHN1cHBvcnRlZCBpbiBhbnkgb2YgdGhlIHZlbmRvcnMgeWV0LgoJCXIub25sb2FkID0gZnVuY3Rpb24oZSl7CgkJCWNhbGxiYWNrKHIucmVzcG9uc2VUZXh0P0pTT04ucGFyc2Uoci5yZXNwb25zZVRleHQpOntlcnJvcjp7bWVzc2FnZToiQ291bGQgbm90IGdldCByZXNvdXJjZSJ9fSk7CgkJfTsKCQlyLm9wZW4oJ0dFVCcsIHVybCk7CgkJci5zZW5kKCBudWxsICk7Cgl9CgllbHNlewoJCS8vIEpTT05QCgkJLy8gTWFrZSB0aGUgYW5vbnltb3VzIGZ1bmN0aW9uLiBub3QgYW5vbnltb3VzCgkJdmFyIGNhbGxiYWNrX25hbWUgPSAnanNvbnBfJyArIHBhcnNlSW50KE1hdGgucmFuZG9tKCkqMWUxMCk7CgkJd2luZG93W2NhbGxiYWNrX25hbWVdID0gY2FsbGJhY2s7CgkJLy8gZmluZCBhIHBsYWNlIHRvIGluc2VydCB0aGUgc2NyaXB0IHRhZwoJCXZhciBzaWJsaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOwoJCS8vIENyZWF0ZSB0aGUgc2NyaXB0IHRhZwoJCXZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKCQkvLyBVcGRhdGUgdGhlIHBhdGggd2l0aCB0aGUgY2FsbGJhY2sgbmFtZQoJCXNjcmlwdC5zcmMgPSAodXJsKyImY2FsbGJhY2s9IitjYWxsYmFja19uYW1lKTsKCQkvLyBBcHBlbmQKCQlzaWJsaW5nLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNjcmlwdCxzaWJsaW5nKTsKCX0KfQoKPC9zY3JpcHQ+",
                "body": "PCFET0NUWVBFIGh0bWw+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fkb3JuL2Fkb3JuLmNzcyIvPgo8c2NyaXB0IHNyYz0iL2Fkb3JuL2Fkb3JuLmpzIiBhc3luYz48L3NjcmlwdD4KPHNjcmlwdCBzcmM9ImNsaWVudF9pZHMuanMiPjwvc2NyaXB0PgoKPHRpdGxlPlNpbXBsZSBTa3lEcml2ZSBEZW1vPC90aXRsZT4KPHN0eWxlPgppbWd7Cglwb3NpdGlvbjogZml4ZWQ7Cgl0b3A6MDsKCWxlZnQ6NTAlOwoJd2lkdGg6MjAwcHg7Cglib3JkZXI6MXB4IHNvbGlkICNjY2M7CglwYWRkaW5nOjEwcHg7Cn0KaW1nOm50aC1jaGlsZCgybil7Cgktd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMTBkZWcpOwoJLW1vei10cmFuc2Zvcm06cm90YXRlKDEwZGVnKTsKCS1tcy10cmFuc2Zvcm06cm90YXRlKDEwZGVnKTsKCXRyYW5zZm9ybTpyb3RhdGUoMTBkZWcpOwp9CmltZzpudGgtY2hpbGQoM24pewoJLXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7CgktbW96LXRyYW5zZm9ybTpyb3RhdGUoLTEwZGVnKTsKCS1tcy10cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7Cgl0cmFuc2Zvcm06cm90YXRlKC0xMGRlZyk7Cn0KPC9zdHlsZT4KPGgxPlNpbXBsZSBTa3lkcml2ZSBkZW1vPC9oMT4KPGJsb2NrcXVvdGU+Cgk8cD5UaGlzIGRlbW8gdXNlcyBPQXV0aDIgYW5kIENPUlMgKG9yIEpTT05QKSB0byBtYWtlIHNvbWUgUkVTVCBjYWxscyB3aGljaCBuYXZpZ2F0ZSB0aGUgV2luZG93cyBMaXZlIEdyYXBoIEFQSSB0byBnZXQgc29tZSBwaG90b3Mgb3V0IG9mIFNreWRyaXZlLiBJdCBpcyBQTFVHSU4tRlJFRSE8L3A+CjxwPklmIHJ1bm5pbmcgbG9jYWxseSwgPGEgaHJlZj0iaHR0cDovL21hbmFnZS5kZXYubGl2ZS5jb20vIj5yZWdpc3RlciB5b3VyIGRldmVsb3BtZW50IGRvbWFpbjwvYT4gYW5kIHJlcGxhY2UgV0lORE9XU19DTElFTlRfSUQgKGJlbG93KSB3aXRoIHRoZSBjbGllbnRfaWQgeW91IGFyZSBhc3NpZ25lZDwvcD4KPC9ibG9ja3F1b3RlPgoKPHA+QnVpbGQgYSBsb2dpbiBidXR0b248L3A+CjxidXR0b24gb25jbGljaz0ibG9naW4oKSI+TG9naW48L2J1dHRvbj4KPHByZT4KJmx0O2J1dHRvbiBvbmNsaWNrPSJsb2dpbigpIiZndDtMb2dpbiZsdDsvYnV0dG9uJmd0Owo8L3ByZT4KPHA+RGVmaW5lIHRoZSBsb2dpbiBmdW5jdGlvbjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KZnVuY3Rpb24gbG9naW4oKXsKCXdpbmRvdy5sb2NhdGlvbiA9ICdodHRwczovL29hdXRoLmxpdmUuY29tL2F1dGhvcml6ZScrIAoJCSc/Y2xpZW50X2lkPScrV0lORE9XU19DTElFTlRfSUQrCgkJJyZzY29wZT13bC5za3lkcml2ZScrCgkJJyZyZXNwb25zZV90eXBlPXRva2VuJysKCQknJnJlZGlyZWN0X3VyaT0nK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZik7Cn0KPC9zY3JpcHQ+CjxwPlNhdmUgYSBuZXcgYWNjZXNzX3Rva2VuIC0gaWYgd2luZG93IGxvY2F0aW9uIGFkZHJlc3MgaW5jbHVkZXMgb25lPC9wPiAKPHNjcmlwdCBjbGFzcz0icHJlIj4KdmFyIGFjY2Vzc190b2tlbiA9ICh3aW5kb3cubG9jYXRpb24uaGFzaHx8d2luZG93LmxvY2F0aW9uLnNlYXJjaCkubWF0Y2goL2FjY2Vzc190b2tlbj0oW14mXSspLyk7IAppZihhY2Nlc3NfdG9rZW4peyAKCS8vIFNhdmUgdGhlIGZpcnN0IG1hdGNoCglsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiYWNjZXNzX3Rva2VuIiwgZGVjb2RlVVJJQ29tcG9uZW50KGFjY2Vzc190b2tlblsxXSkpOwp9Cjwvc2NyaXB0PgoKPHA+QnVpbGQgYW4gaHR0cFJlcXVlc3QgaGFuZGxlciBmdW5jdGlvbiBmb3IgQ09SUyB2aWEgWEhSLCBmYWxsaW5nIGJhY2sgdG8gSlNPTlA8L3A+CjxzY3JpcHQgY2xhc3M9InByZSI+CmZ1bmN0aW9uIGh0dHBSZXF1ZXN0KHVybCxjYWxsYmFjayl7CgkvLyBJRTEwLCBGRiwgQ2hyb21lCglpZignd2l0aENyZWRlbnRpYWxzJyBpbiBuZXcgWE1MSHR0cFJlcXVlc3QoKSl7CgkJdmFyIHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKCQkvLyB4aHIucmVzcG9uc2VUeXBlID0gImpzb24iOyAvLyBpcyBub3Qgc3VwcG9ydGVkIGluIGFueSBvZiB0aGUgdmVuZG9ycyB5ZXQuCgkJci5vbmxvYWQgPSBmdW5jdGlvbihlKXsKCQkJY2FsbGJhY2soci5yZXNwb25zZVRleHQ/SlNPTi5wYXJzZShyLnJlc3BvbnNlVGV4dCk6e2Vycm9yOnttZXNzYWdlOiJDb3VsZCBub3QgZ2V0IHJlc291cmNlIn19KTsKCQl9OwoJCXIub3BlbignR0VUJywgdXJsKTsKCQlyLnNlbmQoIG51bGwgKTsKCX0KCWVsc2V7CgkJLy8gRWxzZSBhZGQgdGhlIGNhbGxiYWNrIG9uIHRvIHRoZSBVUkwKCQlqc29ucCh1cmwrIiZjYWxsYmFjaz0/IiwgY2FsbGJhY2spOwoJfQp9Cjwvc2NyaXB0PgoKPHA+anNvbnAoKTogQSBjcm9zcyBkb21haW4gc2NyaXB0aW5nICJoYWNrIjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KdmFyIGpzb25fY291bnRlcj0wOwpmdW5jdGlvbiBqc29ucChwYXRoLGNhbGxiYWNrKXsKCS8vIE1ha2UgdGhlIGFub255bW91cyBmdW5jdGlvbi4gbm90IGFub255bW91cwoJdmFyIGNhbGxiYWNrX25hbWUgPSAnanNvbnBfJyArIGpzb25fY291bnRlcisrOwoJd2luZG93W2NhbGxiYWNrX25hbWVdID0gY2FsbGJhY2s7CgkvLyBBZGQgdGhlIGNhbGxiYWNrIG5hbWUgdG8gdGhlIHBhdGgKCXBhdGggPSBwYXRoLnJlcGxhY2UoL1w9XD8vLCAnPScrY2FsbGJhY2tfbmFtZSk7CgkvLyBmaW5kIGEgcGxhY2UgdG8gaW5zZXJ0IHRoZSBzY3JpcHQgdGFnCgl2YXIgc2libGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKCS8vIENyZWF0ZSB0aGUgc2NyaXB0IHRhZwoJdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwoJc2NyaXB0LnNyYyA9IHBhdGg7CglzaWJsaW5nLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNjcmlwdCxzaWJsaW5nKTsKfQo8L3NjcmlwdD4KCjxwPk5hdmlnYXRlIHRoZSBHcmFwaDogZ2V0QWxsUGhvdG9zIGlzIGEgcmVjdXJzaXZlIGZ1bmN0aW9uIHdoaWNoIHNlZWtzIG91dCBpbWFnZXMgc3RvcmVkIGluIHRoZSB1c2VycyBTa3lEcml2ZTwvcD4KCjxzY3JpcHQgY2xhc3M9InByZSI+CmZ1bmN0aW9uIGdldEFsbFBob3RvcyhwYXRoLGNhbGxiYWNrKXsKCS8vIFRva2VuCgl2YXIgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiYWNjZXNzX3Rva2VuIik7CgoJLy8gTWFrZSBKU09OUCByZXF1ZXN0CglodHRwUmVxdWVzdCgnaHR0cHM6Ly9hcGlzLmxpdmUubmV0L3Y1LjAvJytwYXRoKyc/ZmlsdGVyPWFsYnVtcyxmb2xkZXJzLHBob3RvcyZhY2Nlc3NfdG9rZW49Jyt0b2tlbiwgZnVuY3Rpb24ocil7CgkJLy8gVmFsaWQKCQlpZighcnx8ci5lcnJvcil7CgkJCWFsZXJ0KCJZb3UgaGF2ZSBhbiBlcnJvcjogIityLmVycm9yLm1lc3NhZ2UpOwoJCQlsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgiYWNjZXNzX3Rva2VuIik7CgkJCXJldHVybjsKCQl9CgkJLy8gTG9vcCB0aHJvdWdoIHRoZSByZXN1bHRzCgkJZm9yKHZhciBpPTA7aTxyLmRhdGEubGVuZ3RoO2krKyl7CgkJCXZhciBpdGVtID0gci5kYXRhW2ldOwoJCQkvLyBNYWtlIGEgcmVxdWVzdCB0byBnZXQgdGhlIGZvbGRlciBjb250ZW50cwoJCQlpZihpdGVtLnR5cGUgPT09ICdmb2xkZXInIHx8IGl0ZW0udHlwZSA9PT0gJ2FsYnVtJyl7CgkJCQlnZXRBbGxQaG90b3MoaXRlbS5pZCsnL2ZpbGVzJywgY2FsbGJhY2spOwoJCQl9CgkJCWVsc2UgaWYoaXRlbS50eXBlPT09J3Bob3RvJyl7CgkJCQljYWxsYmFjayhpdGVtKTsKCQkJfQoJCX0KCX0pOwp9Owo8L3NjcmlwdD4KCjxwPklmIHRoZXJlIGlzIGFuIGFjY2Vzc190b2tlbiwgZmlyZSBvZmYgZ2V0QWxsUGhvdG9zLCBhbmQgcHJpbnQgYWxsIGltYWdlcyBvdXQgdG8gdGhlIHNjcmVlbjwvcD4KPHNjcmlwdCBjbGFzcz0icHJlIj4KaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oImFjY2Vzc190b2tlbiIpKXsKCS8vIFJlY3Vyc2l2ZWx5IHN0YXJ0IHNlYXJjaGluZyBTa3lkcml2ZSBkaXJlY3RvcmllcyBmb3IgcGhvdG9zLCB0cmlnZ2VycyBjYWxsYmFjayBvbiBlYWNoIGltYWdlCglnZXRBbGxQaG90b3MoJ21lL3NreWRyaXZlL2ZpbGVzJyxmdW5jdGlvbihvYmopewoKCQkvLyBDcmVhdGUgYSBuZXcgaW1hZ2UgaW4gdGhlIERPTSwgZ2l2ZSBpdCBzb21lIHJhbmRvbW5lc3MgYW5kIGluc2VydCBpdCBpbnRvIHRoZSBkb20uCgkJdmFyIGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOwoJCWltZy5zcmMgPSBvYmoucGljdHVyZTsKCQlpbWcuc3R5bGUudG9wID0gKHBhcnNlSW50KE1hdGgucmFuZG9tKCkqODUsMTApKSsnJSc7CgkJaW1nLnN0eWxlLmxlZnQgPSAoNTArcGFyc2VJbnQoTWF0aC5yYW5kb20oKSo1MCwxMCkpKyclJzsKCQlkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGltZyk7Cgl9KTsKfQoKCgpmdW5jdGlvbiBodHRwUmVxdWVzdCh1cmwsY2FsbGJhY2spewoJLy8gSUUxMCwgRkYsIENocm9tZQoJaWYoJ3dpdGhDcmVkZW50aWFscycgaW4gbmV3IFhNTEh0dHBSZXF1ZXN0KCkpewoJCXZhciByID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CgkJLy8geGhyLnJlc3BvbnNlVHlwZSA9ICJqc29uIjsgLy8gaXMgbm90IHN1cHBvcnRlZCBpbiBhbnkgb2YgdGhlIHZlbmRvcnMgeWV0LgoJCXIub25sb2FkID0gZnVuY3Rpb24oZSl7CgkJCWNhbGxiYWNrKHIucmVzcG9uc2VUZXh0P0pTT04ucGFyc2Uoci5yZXNwb25zZVRleHQpOntlcnJvcjp7bWVzc2FnZToiQ291bGQgbm90IGdldCByZXNvdXJjZSJ9fSk7CgkJfTsKCQlyLm9wZW4oJ0dFVCcsIHVybCk7CgkJci5zZW5kKCBudWxsICk7Cgl9CgllbHNlewoJCS8vIEpTT05QCgkJLy8gTWFrZSB0aGUgYW5vbnltb3VzIGZ1bmN0aW9uLiBub3QgYW5vbnltb3VzCgkJdmFyIGNhbGxiYWNrX25hbWUgPSAnanNvbnBfJyArIHBhcnNlSW50KE1hdGgucmFuZG9tKCkqMWUxMCk7CgkJd2luZG93W2NhbGxiYWNrX25hbWVdID0gY2FsbGJhY2s7CgkJLy8gZmluZCBhIHBsYWNlIHRvIGluc2VydCB0aGUgc2NyaXB0IHRhZwoJCXZhciBzaWJsaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOwoJCS8vIENyZWF0ZSB0aGUgc2NyaXB0IHRhZwoJCXZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKCQkvLyBVcGRhdGUgdGhlIHBhdGggd2l0aCB0aGUgY2FsbGJhY2sgbmFtZQoJCXNjcmlwdC5zcmMgPSAodXJsKyImY2FsbGJhY2s9IitjYWxsYmFja19uYW1lKTsKCQkvLyBBcHBlbmQKCQlzaWJsaW5nLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNjcmlwdCxzaWJsaW5nKTsKCX0KfQoKPC9zY3JpcHQ+",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 03:08:17 GMT",
                    "Content-Length": "5298",
                    "Date": "Fri, 07 Nov 2014 03:08:17 GMT",
                    "Content-Type": "text/html; charset=utf-8"
                },
                "cookies": [],
                "mimeType": "HTML",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}