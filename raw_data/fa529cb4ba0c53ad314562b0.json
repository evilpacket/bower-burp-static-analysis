{
    "url": "http://localhost:9999/lhorie/mithril/archive/v0.1.16/mithril-tests.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>window.location.pathname</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>element.href = window.location.pathname + modes[m.route.mode] + element.pathname</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/lhorie/mithril/archive/v0.1.16/mithril-tests.js",
                "path": "/lhorie/mithril/archive/v0.1.16/mithril-tests.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9saG9yaWUvbWl0aHJpbC9hcmNoaXZlL3YwLjEuMTYvbWl0aHJpbC10ZXN0cy5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "TWl0aHJpbCA9IG0gPSBuZXcgZnVuY3Rpb24gYXBwKHdpbmRvdykgewoJdmFyIHNlbGVjdG9yQ2FjaGUgPSB7fQoJdmFyIHR5cGUgPSB7fS50b1N0cmluZwoJdmFyIHBhcnNlciA9IC8oPzooXnwjfFwuKShbXiNcLlxbXF1dKykpfChcWy4rP1xdKS9nLCBhdHRyUGFyc2VyID0gL1xbKC4rPykoPzo9KCJ8J3wpKC4rPylcMik/XF0vCgoJZnVuY3Rpb24gbSgpIHsKCQl2YXIgYXJncyA9IGFyZ3VtZW50cwoJCXZhciBoYXNBdHRycyA9IHR5cGUuY2FsbChhcmdzWzFdKSA9PSAiW29iamVjdCBPYmplY3RdIiAmJiAhKCJ0YWciIGluIGFyZ3NbMV0pICYmICEoInN1YnRyZWUiIGluIGFyZ3NbMV0pCgkJdmFyIGF0dHJzID0gaGFzQXR0cnMgPyBhcmdzWzFdIDoge30KCQl2YXIgY2xhc3NBdHRyTmFtZSA9ICJjbGFzcyIgaW4gYXR0cnMgPyAiY2xhc3MiIDogImNsYXNzTmFtZSIKCQl2YXIgY2VsbCA9IHNlbGVjdG9yQ2FjaGVbYXJnc1swXV0KCQlpZiAoY2VsbCA9PT0gdW5kZWZpbmVkKSB7CgkJCXNlbGVjdG9yQ2FjaGVbYXJnc1swXV0gPSBjZWxsID0ge3RhZzogImRpdiIsIGF0dHJzOiB7fX0KCQkJdmFyIG1hdGNoLCBjbGFzc2VzID0gW10KCQkJd2hpbGUgKG1hdGNoID0gcGFyc2VyLmV4ZWMoYXJnc1swXSkpIHsKCQkJCWlmIChtYXRjaFsxXSA9PSAiIikgY2VsbC50YWcgPSBtYXRjaFsyXQoJCQkJZWxzZSBpZiAobWF0Y2hbMV0gPT0gIiMiKSBjZWxsLmF0dHJzLmlkID0gbWF0Y2hbMl0KCQkJCWVsc2UgaWYgKG1hdGNoWzFdID09ICIuIikgY2xhc3Nlcy5wdXNoKG1hdGNoWzJdKQoJCQkJZWxzZSBpZiAobWF0Y2hbM11bMF0gPT0gIlsiKSB7CgkJCQkJdmFyIHBhaXIgPSBhdHRyUGFyc2VyLmV4ZWMobWF0Y2hbM10pCgkJCQkJY2VsbC5hdHRyc1twYWlyWzFdXSA9IHBhaXJbM10gfHwgdHJ1ZQoJCQkJfQoJCQl9CgkJCWlmIChjbGFzc2VzLmxlbmd0aCA+IDApIGNlbGwuYXR0cnNbY2xhc3NBdHRyTmFtZV0gPSBjbGFzc2VzLmpvaW4oIiAiKQoJCX0KCQljZWxsID0gY2xvbmUoY2VsbCkKCQljZWxsLmF0dHJzID0gY2xvbmUoY2VsbC5hdHRycykKCQljZWxsLmNoaWxkcmVuID0gaGFzQXR0cnMgPyBhcmdzWzJdIDogYXJnc1sxXQoJCWZvciAodmFyIGF0dHJOYW1lIGluIGF0dHJzKSB7CgkJCWlmIChhdHRyTmFtZSA9PSBjbGFzc0F0dHJOYW1lKSBjZWxsLmF0dHJzW2F0dHJOYW1lXSA9IChjZWxsLmF0dHJzW2F0dHJOYW1lXSB8fCAiIikgKyAiICIgKyBhdHRyc1thdHRyTmFtZV0KCQkJZWxzZSBjZWxsLmF0dHJzW2F0dHJOYW1lXSA9IGF0dHJzW2F0dHJOYW1lXQoJCX0KCQlyZXR1cm4gY2VsbAoJfQoJZnVuY3Rpb24gYnVpbGQocGFyZW50RWxlbWVudCwgcGFyZW50VGFnLCBwYXJlbnRDYWNoZSwgcGFyZW50SW5kZXgsIGRhdGEsIGNhY2hlZCwgc2hvdWxkUmVhdHRhY2gsIGluZGV4LCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSB7CgkJaWYgKGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdW5kZWZpbmVkKSBkYXRhID0gIiIKCQlpZiAoZGF0YS5zdWJ0cmVlID09PSAicmV0YWluIikgcmV0dXJuCgoJCXZhciBjYWNoZWRUeXBlID0gdHlwZS5jYWxsKGNhY2hlZCksIGRhdGFUeXBlID0gdHlwZS5jYWxsKGRhdGEpCgkJaWYgKGNhY2hlZFR5cGUgIT0gZGF0YVR5cGUpIHsKCQkJaWYgKGNhY2hlZCAhPT0gbnVsbCAmJiBjYWNoZWQgIT09IHVuZGVmaW5lZCkgewoJCQkJaWYgKHBhcmVudENhY2hlICYmIHBhcmVudENhY2hlLm5vZGVzKSB7CgkJCQkJdmFyIG9mZnNldCA9IGluZGV4IC0gcGFyZW50SW5kZXgKCQkJCQljbGVhcihwYXJlbnRDYWNoZS5ub2Rlcy5zbGljZShvZmZzZXQsIG9mZnNldCArIChkYXRhVHlwZSA9PSAiW29iamVjdCBBcnJheV0iID8gZGF0YSA6IGNhY2hlZC5ub2RlcykubGVuZ3RoKSkKCQkJCX0KCQkJCWVsc2UgY2xlYXIoY2FjaGVkLm5vZGVzKQoJCQl9CgkJCWNhY2hlZCA9IG5ldyBkYXRhLmNvbnN0cnVjdG9yCgkJCWNhY2hlZC5ub2RlcyA9IFtdCgkJfQoKCQlpZiAoZGF0YVR5cGUgPT0gIltvYmplY3QgQXJyYXldIikgewoJCQl2YXIgbm9kZXMgPSBbXSwgaW50YWN0ID0gY2FjaGVkLmxlbmd0aCA9PT0gZGF0YS5sZW5ndGgsIHN1YkFycmF5Q291bnQgPSAwCgkJCQoJCQl2YXIgREVMRVRJT04gPSAxLCBJTlNFUlRJT04gPSAyICwgTU9WRSA9IDMKCQkJdmFyIGV4aXN0aW5nID0ge30sIHNob3VsZE1haW50YWluSWRlbnRpdGllcyA9IGZhbHNlCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgY2FjaGVkLmxlbmd0aDsgaSsrKSB7CgkJCQlpZiAoY2FjaGVkW2ldICYmIGNhY2hlZFtpXS5hdHRycyAmJiBjYWNoZWRbaV0uYXR0cnMua2V5ICE9PSB1bmRlZmluZWQpIHsKCQkJCQlzaG91bGRNYWludGFpbklkZW50aXRpZXMgPSB0cnVlCgkJCQkJZXhpc3RpbmdbY2FjaGVkW2ldLmF0dHJzLmtleV0gPSB7YWN0aW9uOiBERUxFVElPTiwgaW5kZXg6IGl9CgkJCQl9CgkJCX0KCQkJaWYgKHNob3VsZE1haW50YWluSWRlbnRpdGllcykgewoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CgkJCQkJaWYgKGRhdGFbaV0gJiYgZGF0YVtpXS5hdHRycyAmJiBkYXRhW2ldLmF0dHJzLmtleSAhPT0gdW5kZWZpbmVkKSB7CgkJCQkJCXZhciBrZXkgPSBkYXRhW2ldLmF0dHJzLmtleQoJCQkJCQlpZiAoIWV4aXN0aW5nW2tleV0pIGV4aXN0aW5nW2tleV0gPSB7YWN0aW9uOiBJTlNFUlRJT04sIGluZGV4OiBpfQoJCQkJCQllbHNlIGV4aXN0aW5nW2tleV0gPSB7YWN0aW9uOiBNT1ZFLCBpbmRleDogaSwgZnJvbTogZXhpc3Rpbmdba2V5XS5pbmRleCwgZWxlbWVudDogcGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2V4aXN0aW5nW2tleV0uaW5kZXhdfQoJCQkJCX0KCQkJCX0KCQkJCXZhciBhY3Rpb25zID0gT2JqZWN0LmtleXMoZXhpc3RpbmcpLm1hcChmdW5jdGlvbihrZXkpIHtyZXR1cm4gZXhpc3Rpbmdba2V5XX0pCgkJCQl2YXIgY2hhbmdlcyA9IGFjdGlvbnMuc29ydChmdW5jdGlvbihhLCBiKSB7cmV0dXJuIGEuYWN0aW9uIC0gYi5hY3Rpb24gfHwgYi5pbmRleCAtIGEuaW5kZXh9KQoJCQkJdmFyIG5ld0NhY2hlZCA9IG5ldyBBcnJheShjYWNoZWQubGVuZ3RoKQoJCQkJCgkJCQlmb3IgKHZhciBpID0gMCwgY2hhbmdlOyBjaGFuZ2UgPSBjaGFuZ2VzW2ldOyBpKyspIHsKCQkJCQlpZiAoY2hhbmdlLmFjdGlvbiA9PSBERUxFVElPTikgewoJCQkJCQljbGVhcihjYWNoZWRbY2hhbmdlLmluZGV4XS5ub2RlcykKCQkJCQkJbmV3Q2FjaGVkLnNwbGljZShjaGFuZ2UuaW5kZXgsIDEpCgkJCQkJfQoJCQkJCWlmIChjaGFuZ2UuYWN0aW9uID09IElOU0VSVElPTikgewoJCQkJCQl2YXIgZHVtbXkgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQkJCQkJZHVtbXkua2V5ID0gZGF0YVtjaGFuZ2UuaW5kZXhdLmF0dHJzLmtleS50b1N0cmluZygpCgkJCQkJCXBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKGR1bW15LCBwYXJlbnRFbGVtZW50LmNoaWxkTm9kZXNbY2hhbmdlLmluZGV4XSkKCQkJCQkJbmV3Q2FjaGVkLnNwbGljZShjaGFuZ2UuaW5kZXgsIDAsIHthdHRyczoge2tleTogZGF0YVtjaGFuZ2UuaW5kZXhdLmF0dHJzLmtleX0sIG5vZGVzOiBbZHVtbXldfSkKCQkJCQl9CgkJCQkJCgkJCQkJaWYgKGNoYW5nZS5hY3Rpb24gPT0gTU9WRSkgewoJCQkJCQlpZiAocGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2NoYW5nZS5pbmRleF0gIT09IGNoYW5nZS5lbGVtZW50KSB7CgkJCQkJCQlwYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShjaGFuZ2UuZWxlbWVudCwgcGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2NoYW5nZS5pbmRleF0pCgkJCQkJCX0KCQkJCQkJbmV3Q2FjaGVkW2NoYW5nZS5pbmRleF0gPSBjYWNoZWRbY2hhbmdlLmZyb21dCgkJCQkJfQoJCQkJfQoJCQkJY2FjaGVkID0gbmV3Q2FjaGVkCgkJCQljYWNoZWQubm9kZXMgPSBbXQoJCQkJZm9yICh2YXIgaSA9IDAsIGNoaWxkOyBjaGlsZCA9IHBhcmVudEVsZW1lbnQuY2hpbGROb2Rlc1tpXTsgaSsrKSBjYWNoZWQubm9kZXMucHVzaChjaGlsZCkKCQkJfQoJCQkKCQkJZm9yICh2YXIgaSA9IDAsIGNhY2hlQ291bnQgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewoJCQkJdmFyIGl0ZW0gPSBidWlsZChwYXJlbnRFbGVtZW50LCBwYXJlbnRUYWcsIGNhY2hlZCwgaW5kZXgsIGRhdGFbaV0sIGNhY2hlZFtjYWNoZUNvdW50XSwgc2hvdWxkUmVhdHRhY2gsIGluZGV4ICsgc3ViQXJyYXlDb3VudCB8fCBzdWJBcnJheUNvdW50LCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKQoJCQkJaWYgKGl0ZW0gPT09IHVuZGVmaW5lZCkgY29udGludWUKCQkJCWlmICghaXRlbS5ub2Rlcy5pbnRhY3QpIGludGFjdCA9IGZhbHNlCgkJCQlzdWJBcnJheUNvdW50ICs9IGl0ZW0gaW5zdGFuY2VvZiBBcnJheSA/IGl0ZW0ubGVuZ3RoIDogMQoJCQkJY2FjaGVkW2NhY2hlQ291bnQrK10gPSBpdGVtCgkJCX0KCQkJaWYgKCFpbnRhY3QpIHsKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewoJCQkJCWlmIChjYWNoZWRbaV0gIT09IHVuZGVmaW5lZCkgbm9kZXMgPSBub2Rlcy5jb25jYXQoY2FjaGVkW2ldLm5vZGVzKQoJCQkJfQoJCQkJZm9yICh2YXIgaSA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgbm9kZSA9IGNhY2hlZC5ub2Rlc1tpXTsgaSsrKSB7CgkJCQkJaWYgKG5vZGUucGFyZW50Tm9kZSAhPT0gbnVsbCAmJiBub2RlLnBhcmVudE5vZGUuY2hpbGROb2Rlcy5sZW5ndGggIT0gbm9kZXMubGVuZ3RoKSBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSkKCQkJCX0KCQkJCWZvciAodmFyIGkgPSBjYWNoZWQubm9kZXMubGVuZ3RoLCBub2RlOyBub2RlID0gbm9kZXNbaV07IGkrKykgewoJCQkJCWlmIChub2RlLnBhcmVudE5vZGUgPT09IG51bGwpIHBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobm9kZSkKCQkJCX0KCQkJCWlmIChkYXRhLmxlbmd0aCA8IGNhY2hlZC5sZW5ndGgpIGNhY2hlZC5sZW5ndGggPSBkYXRhLmxlbmd0aAoJCQkJY2FjaGVkLm5vZGVzID0gbm9kZXMKCQkJfQoJCQkKCQl9CgkJZWxzZSBpZiAoZGF0YVR5cGUgPT0gIltvYmplY3QgT2JqZWN0XSIpIHsKCQkJaWYgKGRhdGEudGFnICE9IGNhY2hlZC50YWcgfHwgT2JqZWN0LmtleXMoZGF0YS5hdHRycykuam9pbigpICE9IE9iamVjdC5rZXlzKGNhY2hlZC5hdHRycykuam9pbigpIHx8IGRhdGEuYXR0cnMuaWQgIT0gY2FjaGVkLmF0dHJzLmlkKSBjbGVhcihjYWNoZWQubm9kZXMpCgkJCWlmICh0eXBlb2YgZGF0YS50YWcgIT0gInN0cmluZyIpIHJldHVybgoKCQkJdmFyIG5vZGUsIGlzTmV3ID0gY2FjaGVkLm5vZGVzLmxlbmd0aCA9PT0gMAoJCQlpZiAoZGF0YS5hdHRycy54bWxucykgbmFtZXNwYWNlID0gZGF0YS5hdHRycy54bWxucwoJCQllbHNlIGlmIChkYXRhLnRhZyA9PT0gInN2ZyIpIG5hbWVzcGFjZSA9ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKCQkJaWYgKGlzTmV3KSB7CgkJCQlub2RlID0gbmFtZXNwYWNlID09PSB1bmRlZmluZWQgPyB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChkYXRhLnRhZykgOiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWVzcGFjZSwgZGF0YS50YWcpCgkJCQljYWNoZWQgPSB7CgkJCQkJdGFnOiBkYXRhLnRhZywKCQkJCQlhdHRyczogc2V0QXR0cmlidXRlcyhub2RlLCBkYXRhLnRhZywgZGF0YS5hdHRycywge30sIG5hbWVzcGFjZSksCgkJCQkJY2hpbGRyZW46IGRhdGEuY2hpbGRyZW4gIT09IHVuZGVmaW5lZCA/IGJ1aWxkKG5vZGUsIGRhdGEudGFnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgZGF0YS5jaGlsZHJlbiwgY2FjaGVkLmNoaWxkcmVuLCB0cnVlLCAwLCBkYXRhLmF0dHJzLmNvbnRlbnRlZGl0YWJsZSA/IG5vZGUgOiBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSA6IHVuZGVmaW5lZCwKCQkJCQlub2RlczogW25vZGVdCgkJCQl9CgkJCQlwYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShub2RlLCBwYXJlbnRFbGVtZW50LmNoaWxkTm9kZXNbaW5kZXhdIHx8IG51bGwpCgkJCX0KCQkJZWxzZSB7CgkJCQlub2RlID0gY2FjaGVkLm5vZGVzWzBdCgkJCQlzZXRBdHRyaWJ1dGVzKG5vZGUsIGRhdGEudGFnLCBkYXRhLmF0dHJzLCBjYWNoZWQuYXR0cnMsIG5hbWVzcGFjZSkKCQkJCWNhY2hlZC5jaGlsZHJlbiA9IGJ1aWxkKG5vZGUsIGRhdGEudGFnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgZGF0YS5jaGlsZHJlbiwgY2FjaGVkLmNoaWxkcmVuLCBmYWxzZSwgMCwgZGF0YS5hdHRycy5jb250ZW50ZWRpdGFibGUgPyBub2RlIDogZWRpdGFibGUsIG5hbWVzcGFjZSwgY29uZmlncykKCQkJCWNhY2hlZC5ub2Rlcy5pbnRhY3QgPSB0cnVlCgkJCQlpZiAoc2hvdWxkUmVhdHRhY2ggPT09IHRydWUpIHBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIHBhcmVudEVsZW1lbnQuY2hpbGROb2Rlc1tpbmRleF0gfHwgbnVsbCkKCQkJfQoJCQlpZiAodHlwZS5jYWxsKGRhdGEuYXR0cnNbImNvbmZpZyJdKSA9PSAiW29iamVjdCBGdW5jdGlvbl0iKSB7CgkJCQljb25maWdzLnB1c2goZGF0YS5hdHRyc1siY29uZmlnIl0uYmluZCh3aW5kb3csIG5vZGUsICFpc05ldywgY2FjaGVkLmNvbmZpZ0NvbnRleHQgPSBjYWNoZWQuY29uZmlnQ29udGV4dCB8fCB7fSkpCgkJCX0KCQl9CgkJZWxzZSB7CgkJCXZhciBub2RlcwoJCQlpZiAoY2FjaGVkLm5vZGVzLmxlbmd0aCA9PT0gMCkgewoJCQkJaWYgKGRhdGEuJHRydXN0ZWQpIHsKCQkJCQlub2RlcyA9IGluamVjdEhUTUwocGFyZW50RWxlbWVudCwgaW5kZXgsIGRhdGEpCgkJCQl9CgkJCQllbHNlIHsKCQkJCQlub2RlcyA9IFt3aW5kb3cuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSldCgkJCQkJcGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUobm9kZXNbMF0sIHBhcmVudEVsZW1lbnQuY2hpbGROb2Rlc1tpbmRleF0gfHwgbnVsbCkKCQkJCX0KCQkJCWNhY2hlZCA9ICJzdHJpbmcgbnVtYmVyIGJvb2xlYW4iLmluZGV4T2YodHlwZW9mIGRhdGEpID4gLTEgPyBuZXcgZGF0YS5jb25zdHJ1Y3RvcihkYXRhKSA6IGRhdGEKCQkJCWNhY2hlZC5ub2RlcyA9IG5vZGVzCgkJCX0KCQkJZWxzZSBpZiAoY2FjaGVkLnZhbHVlT2YoKSAhPT0gZGF0YS52YWx1ZU9mKCkgfHwgc2hvdWxkUmVhdHRhY2ggPT09IHRydWUpIHsKCQkJCW5vZGVzID0gY2FjaGVkLm5vZGVzCgkJCQlpZiAoIWVkaXRhYmxlIHx8IGVkaXRhYmxlICE9PSB3aW5kb3cuZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgewoJCQkJCWlmIChkYXRhLiR0cnVzdGVkKSB7CgkJCQkJCWNsZWFyKG5vZGVzKQoJCQkJCQlub2RlcyA9IGluamVjdEhUTUwocGFyZW50RWxlbWVudCwgaW5kZXgsIGRhdGEpCgkJCQkJfQoJCQkJCWVsc2UgewoJCQkJCQlpZiAocGFyZW50VGFnID09PSAidGV4dGFyZWEiKSBwYXJlbnRFbGVtZW50LnZhbHVlID0gZGF0YQoJCQkJCQllbHNlIGlmIChlZGl0YWJsZSkgZWRpdGFibGUuaW5uZXJIVE1MID0gZGF0YQoJCQkJCQllbHNlIHsKCQkJCQkJCWlmIChub2Rlc1swXS5ub2RlVHlwZSA9PSAxIHx8IG5vZGVzLmxlbmd0aCA+IDEpIHsgLy93YXMgYSB0cnVzdGVkIHN0cmluZwoJCQkJCQkJCWNsZWFyKGNhY2hlZC5ub2RlcykKCQkJCQkJCQlub2RlcyA9IFt3aW5kb3cuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSldCgkJCQkJCQl9CgkJCQkJCQlwYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShub2Rlc1swXSwgcGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2luZGV4XSB8fCBudWxsKQoJCQkJCQkJbm9kZXNbMF0ubm9kZVZhbHVlID0gZGF0YQoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQkJY2FjaGVkID0gbmV3IGRhdGEuY29uc3RydWN0b3IoZGF0YSkKCQkJCWNhY2hlZC5ub2RlcyA9IG5vZGVzCgkJCX0KCQkJZWxzZSBjYWNoZWQubm9kZXMuaW50YWN0ID0gdHJ1ZQoJCX0KCgkJcmV0dXJuIGNhY2hlZAoJfQoJZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhub2RlLCB0YWcsIGRhdGFBdHRycywgY2FjaGVkQXR0cnMsIG5hbWVzcGFjZSkgewoJCWZvciAodmFyIGF0dHJOYW1lIGluIGRhdGFBdHRycykgewoJCQl2YXIgZGF0YUF0dHIgPSBkYXRhQXR0cnNbYXR0ck5hbWVdCgkJCXZhciBjYWNoZWRBdHRyID0gY2FjaGVkQXR0cnNbYXR0ck5hbWVdCgkJCWlmICghKGF0dHJOYW1lIGluIGNhY2hlZEF0dHJzKSB8fCAoY2FjaGVkQXR0ciAhPT0gZGF0YUF0dHIpIHx8IG5vZGUgPT09IHdpbmRvdy5kb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7CgkJCQljYWNoZWRBdHRyc1thdHRyTmFtZV0gPSBkYXRhQXR0cgoJCQkJaWYgKGF0dHJOYW1lID09PSAiY29uZmlnIikgY29udGludWUKCQkJCWVsc2UgaWYgKHR5cGVvZiBkYXRhQXR0ciA9PSAiZnVuY3Rpb24iICYmIGF0dHJOYW1lLmluZGV4T2YoIm9uIikgPT0gMCkgewoJCQkJCW5vZGVbYXR0ck5hbWVdID0gYXV0b3JlZHJhdyhkYXRhQXR0ciwgbm9kZSkKCQkJCX0KCQkJCWVsc2UgaWYgKGF0dHJOYW1lID09PSAic3R5bGUiICYmIHR5cGVvZiBkYXRhQXR0ciA9PSAib2JqZWN0IikgewoJCQkJCWZvciAodmFyIHJ1bGUgaW4gZGF0YUF0dHIpIHsKCQkJCQkJaWYgKGNhY2hlZEF0dHIgPT09IHVuZGVmaW5lZCB8fCBjYWNoZWRBdHRyW3J1bGVdICE9PSBkYXRhQXR0cltydWxlXSkgbm9kZS5zdHlsZVtydWxlXSA9IGRhdGFBdHRyW3J1bGVdCgkJCQkJfQoJCQkJCWZvciAodmFyIHJ1bGUgaW4gY2FjaGVkQXR0cikgewoJCQkJCQlpZiAoIShydWxlIGluIGRhdGFBdHRyKSkgbm9kZS5zdHlsZVtydWxlXSA9ICIiCgkJCQkJfQoJCQkJfQoJCQkJZWxzZSBpZiAobmFtZXNwYWNlICE9PSB1bmRlZmluZWQpIHsKCQkJCQlpZiAoYXR0ck5hbWUgPT09ICJocmVmIikgbm9kZS5zZXRBdHRyaWJ1dGVOUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIsICJocmVmIiwgZGF0YUF0dHIpCgkJCQkJZWxzZSBpZiAoYXR0ck5hbWUgPT09ICJjbGFzc05hbWUiKSBub2RlLnNldEF0dHJpYnV0ZSgiY2xhc3MiLCBkYXRhQXR0cikKCQkJCQllbHNlIG5vZGUuc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBkYXRhQXR0cikKCQkJCX0KCQkJCWVsc2UgaWYgKGF0dHJOYW1lID09PSAidmFsdWUiICYmIHRhZyA9PT0gImlucHV0IikgewoJCQkJCWlmIChub2RlLnZhbHVlICE9PSBkYXRhQXR0cikgbm9kZS52YWx1ZSA9IGRhdGFBdHRyCgkJCQl9CgkJCQllbHNlIGlmIChhdHRyTmFtZSBpbiBub2RlICYmICEoYXR0ck5hbWUgPT0gImxpc3QiIHx8IGF0dHJOYW1lID09ICJzdHlsZSIpKSB7CgkJCQkJbm9kZVthdHRyTmFtZV0gPSBkYXRhQXR0cgoJCQkJfQoJCQkJZWxzZSBub2RlLnNldEF0dHJpYnV0ZShhdHRyTmFtZSwgZGF0YUF0dHIpCgkJCX0KCQl9CgkJcmV0dXJuIGNhY2hlZEF0dHJzCgl9CglmdW5jdGlvbiBjbGVhcihub2RlcykgewoJCWZvciAodmFyIGkgPSBub2Rlcy5sZW5ndGggLSAxOyBpID4gLTE7IGktLSkgaWYgKG5vZGVzW2ldICYmIG5vZGVzW2ldLnBhcmVudE5vZGUpIG5vZGVzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZXNbaV0pCgkJbm9kZXMubGVuZ3RoID0gMAoJfQoJZnVuY3Rpb24gaW5qZWN0SFRNTChwYXJlbnRFbGVtZW50LCBpbmRleCwgZGF0YSkgewoJCXZhciBuZXh0U2libGluZyA9IHBhcmVudEVsZW1lbnQuY2hpbGROb2Rlc1tpbmRleF0KCQlpZiAobmV4dFNpYmxpbmcpIHsKCQkJdmFyIGlzRWxlbWVudCA9IG5leHRTaWJsaW5nLm5vZGVUeXBlICE9IDEKCQkJdmFyIHBsYWNlaG9sZGVyID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKQoJCQlpZiAoaXNFbGVtZW50KSB7CgkJCQlwYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShwbGFjZWhvbGRlciwgbmV4dFNpYmxpbmcpCgkJCQlwbGFjZWhvbGRlci5pbnNlcnRBZGphY2VudEhUTUwoImJlZm9yZWJlZ2luIiwgZGF0YSkKCQkJCXBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQocGxhY2Vob2xkZXIpCgkJCX0KCQkJZWxzZSBuZXh0U2libGluZy5pbnNlcnRBZGphY2VudEhUTUwoImJlZm9yZWJlZ2luIiwgZGF0YSkKCQl9CgkJZWxzZSBwYXJlbnRFbGVtZW50Lmluc2VydEFkamFjZW50SFRNTCgiYmVmb3JlZW5kIiwgZGF0YSkKCQl2YXIgbm9kZXMgPSBbXQoJCXdoaWxlIChwYXJlbnRFbGVtZW50LmNoaWxkTm9kZXNbaW5kZXhdICE9PSBuZXh0U2libGluZykgewoJCQlub2Rlcy5wdXNoKHBhcmVudEVsZW1lbnQuY2hpbGROb2Rlc1tpbmRleF0pCgkJCWluZGV4KysKCQl9CgkJcmV0dXJuIG5vZGVzCgl9CglmdW5jdGlvbiBjbG9uZShvYmplY3QpIHsKCQl2YXIgcmVzdWx0ID0ge30KCQlmb3IgKHZhciBwcm9wIGluIG9iamVjdCkgcmVzdWx0W3Byb3BdID0gb2JqZWN0W3Byb3BdCgkJcmV0dXJuIHJlc3VsdAoJfQoJZnVuY3Rpb24gYXV0b3JlZHJhdyhjYWxsYmFjaywgb2JqZWN0KSB7CgkJcmV0dXJuIGZ1bmN0aW9uKGUpIHsKCQkJZSA9IGUgfHwgZXZlbnQKCQkJbS5zdGFydENvbXB1dGF0aW9uKCkKCQkJdHJ5IHtyZXR1cm4gY2FsbGJhY2suY2FsbChvYmplY3QsIGUpfQoJCQlmaW5hbGx5IHttLmVuZENvbXB1dGF0aW9uKCl9CgkJfQoJfQoKCXZhciBodG1sCgl2YXIgZG9jdW1lbnROb2RlID0gewoJCWluc2VydEFkamFjZW50SFRNTDogZnVuY3Rpb24oXywgZGF0YSkgewoJCQl3aW5kb3cuZG9jdW1lbnQud3JpdGUoZGF0YSkKCQkJd2luZG93LmRvY3VtZW50LmNsb3NlKCkKCQl9LAoJCWFwcGVuZENoaWxkOiBmdW5jdGlvbihub2RlKSB7CgkJCWlmIChodG1sID09PSB1bmRlZmluZWQpIGh0bWwgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaHRtbCIpCgkJCWlmIChub2RlLm5vZGVOYW1lID09ICJIVE1MIikgaHRtbCA9IG5vZGUKCQkJZWxzZSBodG1sLmFwcGVuZENoaWxkKG5vZGUpCgkJCWlmICh3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICE9PSBodG1sKSB7CgkJCQl3aW5kb3cuZG9jdW1lbnQucmVwbGFjZUNoaWxkKGh0bWwsIHdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpCgkJCX0KCQl9LAoJCWluc2VydEJlZm9yZTogZnVuY3Rpb24obm9kZSkgewoJCQl0aGlzLmFwcGVuZENoaWxkKG5vZGUpCgkJfSwKCQljaGlsZE5vZGVzOiBbXQoJfQoJdmFyIG5vZGVDYWNoZSA9IFtdLCBjZWxsQ2FjaGUgPSB7fQoJbS5yZW5kZXIgPSBmdW5jdGlvbihyb290LCBjZWxsKSB7CgkJdmFyIGNvbmZpZ3MgPSBbXQoJCWlmICghcm9vdCkgdGhyb3cgbmV3IEVycm9yKCJQbGVhc2UgZW5zdXJlIHRoZSBET00gZWxlbWVudCBleGlzdHMgYmVmb3JlIHJlbmRlcmluZyBhIHRlbXBsYXRlIGludG8gaXQuIikKCQl2YXIgaW5kZXggPSBub2RlQ2FjaGUuaW5kZXhPZihyb290KQoJCXZhciBpZCA9IGluZGV4IDwgMCA/IG5vZGVDYWNoZS5wdXNoKHJvb3QpIC0gMSA6IGluZGV4CgkJdmFyIG5vZGUgPSByb290ID09IHdpbmRvdy5kb2N1bWVudCB8fCByb290ID09IHdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgPyBkb2N1bWVudE5vZGUgOiByb290CgkJY2VsbENhY2hlW2lkXSA9IGJ1aWxkKG5vZGUsIG51bGwsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBjZWxsLCBjZWxsQ2FjaGVbaWRdLCBmYWxzZSwgMCwgbnVsbCwgdW5kZWZpbmVkLCBjb25maWdzKQoJCWZvciAodmFyIGkgPSAwOyBpIDwgY29uZmlncy5sZW5ndGg7IGkrKykgY29uZmlnc1tpXSgpCgl9CgoJbS50cnVzdCA9IGZ1bmN0aW9uKHZhbHVlKSB7CgkJdmFsdWUgPSBuZXcgU3RyaW5nKHZhbHVlKQoJCXZhbHVlLiR0cnVzdGVkID0gdHJ1ZQoJCXJldHVybiB2YWx1ZQoJfQoKCXZhciByb290cyA9IFtdLCBtb2R1bGVzID0gW10sIGNvbnRyb2xsZXJzID0gW10sIG5vdyA9IDAsIGxhc3RSZWRyYXcgPSAwLCBsYXN0UmVkcmF3SWQgPSAwLCBjb21wdXRlUG9zdFJlZHJhd0hvb2sgPSBudWxsCgltLm1vZHVsZSA9IGZ1bmN0aW9uKHJvb3QsIG1vZHVsZSkgewoJCXZhciBpbmRleCA9IHJvb3RzLmluZGV4T2Yocm9vdCkKCQlpZiAoaW5kZXggPCAwKSBpbmRleCA9IHJvb3RzLmxlbmd0aAoJCXZhciBpc1ByZXZlbnRlZCA9IGZhbHNlCgkJaWYgKGNvbnRyb2xsZXJzW2luZGV4XSAmJiB0eXBlb2YgY29udHJvbGxlcnNbaW5kZXhdLm9udW5sb2FkID09ICJmdW5jdGlvbiIpIHsKCQkJdmFyIGV2ZW50ID0gewoJCQkJcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge2lzUHJldmVudGVkID0gdHJ1ZX0KCQkJfQoJCQljb250cm9sbGVyc1tpbmRleF0ub251bmxvYWQoZXZlbnQpCgkJfQoJCWlmICghaXNQcmV2ZW50ZWQpIHsKCQkJbS5zdGFydENvbXB1dGF0aW9uKCkKCQkJcm9vdHNbaW5kZXhdID0gcm9vdAoJCQltb2R1bGVzW2luZGV4XSA9IG1vZHVsZQoJCQljb250cm9sbGVyc1tpbmRleF0gPSBuZXcgbW9kdWxlLmNvbnRyb2xsZXIKCQkJbS5lbmRDb21wdXRhdGlvbigpCgkJfQoJfQoJbS5yZWRyYXcgPSBmdW5jdGlvbigpIHsKCQlub3cgPSB3aW5kb3cucGVyZm9ybWFuY2UgJiYgd2luZG93LnBlcmZvcm1hbmNlLm5vdyA/IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSA6IG5ldyB3aW5kb3cuRGF0ZSgpLmdldFRpbWUoKQoJCWlmIChub3cgLSBsYXN0UmVkcmF3ID4gMTYpIHJlZHJhdygpCgkJZWxzZSB7CgkJCXZhciBjYW5jZWwgPSB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LmNsZWFyVGltZW91dAoJCQl2YXIgZGVmZXIgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5zZXRUaW1lb3V0CgkJCWNhbmNlbChsYXN0UmVkcmF3SWQpCgkJCWxhc3RSZWRyYXdJZCA9IGRlZmVyKHJlZHJhdywgMCkKCQl9Cgl9CglmdW5jdGlvbiByZWRyYXcoKSB7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCByb290cy5sZW5ndGg7IGkrKykgewoJCQlpZiAoY29udHJvbGxlcnNbaV0pIG0ucmVuZGVyKHJvb3RzW2ldLCBtb2R1bGVzW2ldLnZpZXcoY29udHJvbGxlcnNbaV0pKQoJCX0KCQlpZiAoY29tcHV0ZVBvc3RSZWRyYXdIb29rKSB7CgkJCWNvbXB1dGVQb3N0UmVkcmF3SG9vaygpCgkJCWNvbXB1dGVQb3N0UmVkcmF3SG9vayA9IG51bGwKCQl9CgkJbGFzdFJlZHJhdyA9IG5vdwoJfQoKCXZhciBwZW5kaW5nUmVxdWVzdHMgPSAwCgltLnN0YXJ0Q29tcHV0YXRpb24gPSBmdW5jdGlvbigpIHtwZW5kaW5nUmVxdWVzdHMrK30KCW0uZW5kQ29tcHV0YXRpb24gPSBmdW5jdGlvbigpIHsKCQlwZW5kaW5nUmVxdWVzdHMgPSBNYXRoLm1heChwZW5kaW5nUmVxdWVzdHMgLSAxLCAwKQoJCWlmIChwZW5kaW5nUmVxdWVzdHMgPT0gMCkgbS5yZWRyYXcoKQoJfQoKCW0ud2l0aEF0dHIgPSBmdW5jdGlvbihwcm9wLCB3aXRoQXR0ckNhbGxiYWNrKSB7CgkJcmV0dXJuIGZ1bmN0aW9uKGUpIHsKCQkJZSA9IGUgfHwgZXZlbnQKCQkJd2l0aEF0dHJDYWxsYmFjayhwcm9wIGluIGUuY3VycmVudFRhcmdldCA/IGUuY3VycmVudFRhcmdldFtwcm9wXSA6IGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUocHJvcCkpCgkJfQoJfQoKCS8vcm91dGluZwoJdmFyIG1vZGVzID0ge3BhdGhuYW1lOiAiIiwgaGFzaDogIiMiLCBzZWFyY2g6ICI/In0KCXZhciByZWRpcmVjdCA9IGZ1bmN0aW9uKCkge30sIHJvdXRlUGFyYW1zID0ge30sIGN1cnJlbnRSb3V0ZQoJbS5yb3V0ZSA9IGZ1bmN0aW9uKCkgewoJCWlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gY3VycmVudFJvdXRlCgkJZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2YgYXJndW1lbnRzWzFdID09ICJzdHJpbmciKSB7CgkJCXZhciByb290ID0gYXJndW1lbnRzWzBdLCBkZWZhdWx0Um91dGUgPSBhcmd1bWVudHNbMV0sIHJvdXRlciA9IGFyZ3VtZW50c1syXQoJCQlyZWRpcmVjdCA9IGZ1bmN0aW9uKHNvdXJjZSkgewoJCQkJdmFyIHBhdGggPSBjdXJyZW50Um91dGUgPSBub3JtYWxpemVSb3V0ZShzb3VyY2UpCgkJCQlpZiAoIXJvdXRlQnlWYWx1ZShyb290LCByb3V0ZXIsIHBhdGgpKSB7CgkJCQkJbS5yb3V0ZShkZWZhdWx0Um91dGUsIHRydWUpCgkJCQl9CgkJCX0KCQkJdmFyIGxpc3RlbmVyID0gbS5yb3V0ZS5tb2RlID09ICJoYXNoIiA/ICJvbmhhc2hjaGFuZ2UiIDogIm9ucG9wc3RhdGUiCgkJCXdpbmRvd1tsaXN0ZW5lcl0gPSBmdW5jdGlvbigpIHsKCQkJCWlmIChjdXJyZW50Um91dGUgIT0gbm9ybWFsaXplUm91dGUod2luZG93LmxvY2F0aW9uW20ucm91dGUubW9kZV0pKSB7CgkJCQkJcmVkaXJlY3Qod2luZG93LmxvY2F0aW9uW20ucm91dGUubW9kZV0pCgkJCQl9CgkJCX0KCQkJY29tcHV0ZVBvc3RSZWRyYXdIb29rID0gc2V0U2Nyb2xsCgkJCXdpbmRvd1tsaXN0ZW5lcl0oKQoJCQljdXJyZW50Um91dGUgPSBub3JtYWxpemVSb3V0ZSh3aW5kb3cubG9jYXRpb25bbS5yb3V0ZS5tb2RlXSkKCQl9CgkJZWxzZSBpZiAoYXJndW1lbnRzWzBdLmFkZEV2ZW50TGlzdGVuZXIpIHsKCQkJdmFyIGVsZW1lbnQgPSBhcmd1bWVudHNbMF0KCQkJdmFyIGlzSW5pdGlhbGl6ZWQgPSBhcmd1bWVudHNbMV0KCQkJaWYgKGVsZW1lbnQuaHJlZi5pbmRleE9mKG1vZGVzW20ucm91dGUubW9kZV0pIDwgMCkgewoJCQkJZWxlbWVudC5ocmVmID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgbW9kZXNbbS5yb3V0ZS5tb2RlXSArIGVsZW1lbnQucGF0aG5hbWUKCQkJfQoJCQlpZiAoIWlzSW5pdGlhbGl6ZWQpIHsKCQkJCWVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLCByb3V0ZVVub2J0cnVzaXZlKQoJCQkJZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIHJvdXRlVW5vYnRydXNpdmUpCgkJCX0KCQl9CgkJZWxzZSBpZiAodHlwZW9mIGFyZ3VtZW50c1swXSA9PSAic3RyaW5nIikgewoJCQljdXJyZW50Um91dGUgPSBhcmd1bWVudHNbMF0KCQkJdmFyIHF1ZXJ5c3RyaW5nID0gdHlwZW9mIGFyZ3VtZW50c1sxXSA9PSAib2JqZWN0IiA/IGJ1aWxkUXVlcnlTdHJpbmcoYXJndW1lbnRzWzFdKSA6IG51bGwKCQkJaWYgKHF1ZXJ5c3RyaW5nKSBjdXJyZW50Um91dGUgKz0gKGN1cnJlbnRSb3V0ZS5pbmRleE9mKCI/IikgPT09IC0xID8gIj8iIDogIiYiKSArIHF1ZXJ5c3RyaW5nCgoJCQl2YXIgc2hvdWxkUmVwbGFjZUhpc3RvcnlFbnRyeSA9IChhcmd1bWVudHMubGVuZ3RoID09IDMgPyBhcmd1bWVudHNbMl0gOiBhcmd1bWVudHNbMV0pID09PSB0cnVlCgoJCQlpZiAod2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKSB7CgkJCQljb21wdXRlUG9zdFJlZHJhd0hvb2sgPSBmdW5jdGlvbigpIHsKCQkJCQl3aW5kb3cuaGlzdG9yeVtzaG91bGRSZXBsYWNlSGlzdG9yeUVudHJ5ID8gInJlcGxhY2VTdGF0ZSIgOiAicHVzaFN0YXRlIl0obnVsbCwgd2luZG93LmRvY3VtZW50LnRpdGxlLCBtb2Rlc1ttLnJvdXRlLm1vZGVdICsgY3VycmVudFJvdXRlKQoJCQkJCXNldFNjcm9sbCgpCgkJCQl9CgkJCQlyZWRpcmVjdChtb2Rlc1ttLnJvdXRlLm1vZGVdICsgY3VycmVudFJvdXRlKQoJCQl9CgkJCWVsc2Ugd2luZG93LmxvY2F0aW9uW20ucm91dGUubW9kZV0gPSBjdXJyZW50Um91dGUKCQl9Cgl9CgltLnJvdXRlLnBhcmFtID0gZnVuY3Rpb24oa2V5KSB7cmV0dXJuIHJvdXRlUGFyYW1zW2tleV19CgltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJZnVuY3Rpb24gbm9ybWFsaXplUm91dGUocm91dGUpIHtyZXR1cm4gcm91dGUuc2xpY2UobW9kZXNbbS5yb3V0ZS5tb2RlXS5sZW5ndGgpfQoJZnVuY3Rpb24gcm91dGVCeVZhbHVlKHJvb3QsIHJvdXRlciwgcGF0aCkgewoJCXJvdXRlUGFyYW1zID0ge30KCgkJdmFyIHF1ZXJ5U3RhcnQgPSBwYXRoLmluZGV4T2YoIj8iKQoJCWlmIChxdWVyeVN0YXJ0ICE9PSAtMSkgewoJCQlyb3V0ZVBhcmFtcyA9IHBhcnNlUXVlcnlTdHJpbmcocGF0aC5zdWJzdHIocXVlcnlTdGFydCArIDEsIHBhdGgubGVuZ3RoKSkKCQkJcGF0aCA9IHBhdGguc3Vic3RyKDAsIHF1ZXJ5U3RhcnQpCgkJfQoKCQlmb3IgKHZhciByb3V0ZSBpbiByb3V0ZXIpIHsKCQkJaWYgKHJvdXRlID09IHBhdGgpIHJldHVybiAhdm9pZCBtLm1vZHVsZShyb290LCByb3V0ZXJbcm91dGVdKQoKCQkJdmFyIG1hdGNoZXIgPSBuZXcgUmVnRXhwKCJeIiArIHJvdXRlLnJlcGxhY2UoLzpbXlwvXSs/XC57M30vZywgIiguKj8pIikucmVwbGFjZSgvOlteXC9dKy9nLCAiKFteXFwvXSspIikgKyAiXC8/JCIpCgoJCQlpZiAobWF0Y2hlci50ZXN0KHBhdGgpKSB7CgkJCQlyZXR1cm4gIXZvaWQgcGF0aC5yZXBsYWNlKG1hdGNoZXIsIGZ1bmN0aW9uKCkgewoJCQkJCXZhciBrZXlzID0gcm91dGUubWF0Y2goLzpbXlwvXSsvZykgfHwgW10KCQkJCQl2YXIgdmFsdWVzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEsIC0yKQoJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgcm91dGVQYXJhbXNba2V5c1tpXS5yZXBsYWNlKC86fFwuL2csICIiKV0gPSBkZWNvZGVTcGFjZSh2YWx1ZXNbaV0pCgkJCQkJbS5tb2R1bGUocm9vdCwgcm91dGVyW3JvdXRlXSkKCQkJCX0pCgkJCX0KCQl9Cgl9CglmdW5jdGlvbiByb3V0ZVVub2J0cnVzaXZlKGUpIHsKCQllID0gZSB8fCBldmVudAoJCWlmIChlLmN0cmxLZXkgfHwgZS5tZXRhS2V5IHx8IGUud2hpY2ggPT0gMikgcmV0dXJuCgkJZS5wcmV2ZW50RGVmYXVsdCgpCgkJbS5yb3V0ZShlLmN1cnJlbnRUYXJnZXRbbS5yb3V0ZS5tb2RlXS5zbGljZShtb2Rlc1ttLnJvdXRlLm1vZGVdLmxlbmd0aCkpCgl9CglmdW5jdGlvbiBzZXRTY3JvbGwoKSB7CgkJaWYgKG0ucm91dGUubW9kZSAhPSAiaGFzaCIgJiYgd2luZG93LmxvY2F0aW9uLmhhc2gpIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2gKCQllbHNlIHdpbmRvdy5zY3JvbGxUbygwLCAwKQoJfQoJZnVuY3Rpb24gYnVpbGRRdWVyeVN0cmluZyhvYmplY3QsIHByZWZpeCkgewoJCXZhciBzdHIgPSBbXQoJCWZvcih2YXIgcHJvcCBpbiBvYmplY3QpIHsKCQkJdmFyIGtleSA9IHByZWZpeCA/IHByZWZpeCArICJbIiArIHByb3AgKyAiXSIgOiBwcm9wLCB2YWx1ZSA9IG9iamVjdFtwcm9wXQoJCQlzdHIucHVzaCh0eXBlb2YgdmFsdWUgPT0gIm9iamVjdCIgPyBidWlsZFF1ZXJ5U3RyaW5nKHZhbHVlLCBrZXkpIDogZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyAiPSIgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKQoJCX0KCQlyZXR1cm4gc3RyLmpvaW4oIiYiKQoJfQoJZnVuY3Rpb24gcGFyc2VRdWVyeVN0cmluZyhzdHIpIHsKCQl2YXIgcGFpcnMgPSBzdHIuc3BsaXQoIiYiKSwgcGFyYW1zID0ge30KCQlmb3IgKHZhciBpID0gMDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7CgkJCXZhciBwYWlyID0gcGFpcnNbaV0uc3BsaXQoIj0iKQoJCQlwYXJhbXNbZGVjb2RlU3BhY2UocGFpclswXSldID0gcGFpclsxXSA/IGRlY29kZVNwYWNlKHBhaXJbMV0pIDogKHBhaXIubGVuZ3RoID09PSAxID8gdHJ1ZSA6ICIiKQoJCX0KCQlyZXR1cm4gcGFyYW1zCgl9CglmdW5jdGlvbiBkZWNvZGVTcGFjZShzdHJpbmcpIHsKCQlyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHN0cmluZy5yZXBsYWNlKC9cKy9nLCAiICIpKQoJfQoKCS8vbW9kZWwKCW0ucHJvcCA9IGZ1bmN0aW9uKHN0b3JlKSB7CgkJdmFyIHByb3AgPSBmdW5jdGlvbigpIHsKCQkJaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHN0b3JlID0gYXJndW1lbnRzWzBdCgkJCXJldHVybiBzdG9yZQoJCX0KCQlwcm9wLnRvSlNPTiA9IGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gc3RvcmUKCQl9CgkJcmV0dXJuIHByb3AKCX0KCgl2YXIgbm9uZSA9IHt9CgltLmRlZmVycmVkID0gZnVuY3Rpb24oKSB7CgkJdmFyIHJlc29sdmVycyA9IFtdLCByZWplY3RlcnMgPSBbXSwgcmVzb2x2ZWQgPSBub25lLCByZWplY3RlZCA9IG5vbmUsIHByb21pc2UgPSBtLnByb3AoKQoJCXZhciBvYmplY3QgPSB7CgkJCXJlc29sdmU6IGZ1bmN0aW9uKHZhbHVlKSB7CgkJCQlpZiAocmVzb2x2ZWQgPT09IG5vbmUpIHByb21pc2UocmVzb2x2ZWQgPSB2YWx1ZSkKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgcmVzb2x2ZXJzLmxlbmd0aDsgaSsrKSByZXNvbHZlcnNbaV0odmFsdWUpCgkJCQlyZXNvbHZlcnMubGVuZ3RoID0gcmVqZWN0ZXJzLmxlbmd0aCA9IDAKCQkJfSwKCQkJcmVqZWN0OiBmdW5jdGlvbih2YWx1ZSkgewoJCQkJaWYgKHJlamVjdGVkID09PSBub25lKSByZWplY3RlZCA9IHZhbHVlCgkJCQlmb3IgKHZhciBpID0gMDsgaSA8IHJlamVjdGVycy5sZW5ndGg7IGkrKykgcmVqZWN0ZXJzW2ldKHZhbHVlKQoJCQkJcmVzb2x2ZXJzLmxlbmd0aCA9IHJlamVjdGVycy5sZW5ndGggPSAwCgkJCX0sCgkJCXByb21pc2U6IHByb21pc2UKCQl9CgkJb2JqZWN0LnByb21pc2UucmVzb2x2ZXJzID0gcmVzb2x2ZXJzCgkJb2JqZWN0LnByb21pc2UudGhlbiA9IGZ1bmN0aW9uKHN1Y2Nlc3MsIGVycm9yKSB7CgkJCXZhciBuZXh0ID0gbS5kZWZlcnJlZCgpCgkJCWlmICghc3VjY2Vzcykgc3VjY2VzcyA9IGlkZW50aXR5CgkJCWlmICghZXJyb3IpIGVycm9yID0gaWRlbnRpdHkKCQkJZnVuY3Rpb24gY2FsbGJhY2sobWV0aG9kLCBjYWxsYmFjaykgewoJCQkJcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7CgkJCQkJdHJ5IHsKCQkJCQkJdmFyIHJlc3VsdCA9IGNhbGxiYWNrKHZhbHVlKQoJCQkJCQlpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PSAiZnVuY3Rpb24iKSByZXN1bHQudGhlbihuZXh0W21ldGhvZF0sIGVycm9yKQoJCQkJCQllbHNlIG5leHRbbWV0aG9kXShyZXN1bHQgIT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHZhbHVlKQoJCQkJCX0KCQkJCQljYXRjaCAoZSkgewoJCQkJCQlpZiAoZSBpbnN0YW5jZW9mIEVycm9yICYmIGUuY29uc3RydWN0b3IgIT09IEVycm9yKSB0aHJvdyBlCgkJCQkJCWVsc2UgbmV4dC5yZWplY3QoZSkKCQkJCQl9CgkJCQl9CgkJCX0KCQkJaWYgKHJlc29sdmVkICE9PSBub25lKSBjYWxsYmFjaygicmVzb2x2ZSIsIHN1Y2Nlc3MpKHJlc29sdmVkKQoJCQllbHNlIGlmIChyZWplY3RlZCAhPT0gbm9uZSkgY2FsbGJhY2soInJlamVjdCIsIGVycm9yKShyZWplY3RlZCkKCQkJZWxzZSB7CgkJCQlyZXNvbHZlcnMucHVzaChjYWxsYmFjaygicmVzb2x2ZSIsIHN1Y2Nlc3MpKQoJCQkJcmVqZWN0ZXJzLnB1c2goY2FsbGJhY2soInJlamVjdCIsIGVycm9yKSkKCQkJfQoJCQlyZXR1cm4gbmV4dC5wcm9taXNlCgkJfQoJCXJldHVybiBvYmplY3QKCX0KCW0uc3luYyA9IGZ1bmN0aW9uKGFyZ3MpIHsKCQl2YXIgbWV0aG9kID0gInJlc29sdmUiCgkJZnVuY3Rpb24gc3luY2hyb25pemVyKHBvcywgcmVzb2x2ZWQpIHsKCQkJcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7CgkJCQlyZXN1bHRzW3Bvc10gPSB2YWx1ZQoJCQkJaWYgKCFyZXNvbHZlZCkgbWV0aG9kID0gInJlamVjdCIKCQkJCWlmICgtLW91dHN0YW5kaW5nID09IDApIHsKCQkJCQlkZWZlcnJlZC5wcm9taXNlKHJlc3VsdHMpCgkJCQkJZGVmZXJyZWRbbWV0aG9kXShyZXN1bHRzKQoJCQkJfQoJCQkJcmV0dXJuIHZhbHVlCgkJCX0KCQl9CgoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKQoJCXZhciBvdXRzdGFuZGluZyA9IGFyZ3MubGVuZ3RoCgkJdmFyIHJlc3VsdHMgPSBuZXcgQXJyYXkob3V0c3RhbmRpbmcpCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7CgkJCWFyZ3NbaV0udGhlbihzeW5jaHJvbml6ZXIoaSwgdHJ1ZSksIHN5bmNocm9uaXplcihpLCBmYWxzZSkpCgkJfQoJCXJldHVybiBkZWZlcnJlZC5wcm9taXNlCgl9CglmdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge3JldHVybiB2YWx1ZX0KCglmdW5jdGlvbiBhamF4KG9wdGlvbnMpIHsKCQl2YXIgeGhyID0gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdAoJCXhoci5vcGVuKG9wdGlvbnMubWV0aG9kLCBvcHRpb25zLnVybCwgdHJ1ZSwgb3B0aW9ucy51c2VyLCBvcHRpb25zLnBhc3N3b3JkKQoJCXhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHsKCQkJaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7CgkJCQlpZiAoeGhyLnN0YXR1cyA+PSAyMDAgJiYgeGhyLnN0YXR1cyA8IDMwMCkgb3B0aW9ucy5vbmxvYWQoe3R5cGU6ICJsb2FkIiwgdGFyZ2V0OiB4aHJ9KQoJCQkJZWxzZSBvcHRpb25zLm9uZXJyb3Ioe3R5cGU6ICJlcnJvciIsIHRhcmdldDogeGhyfSkKCQkJfQoJCX0KCQlpZiAodHlwZW9mIG9wdGlvbnMuY29uZmlnID09ICJmdW5jdGlvbiIpIHsKCQkJdmFyIG1heWJlWGhyID0gb3B0aW9ucy5jb25maWcoeGhyLCBvcHRpb25zKQoJCQlpZiAobWF5YmVYaHIgIT09IHVuZGVmaW5lZCkgeGhyID0gbWF5YmVYaHIKCQl9CgkJeGhyLnNlbmQob3B0aW9ucy5kYXRhKQoJCXJldHVybiB4aHIKCX0KCWZ1bmN0aW9uIGJpbmREYXRhKHhock9wdGlvbnMsIGRhdGEsIHNlcmlhbGl6ZSkgewoJCWlmIChkYXRhICYmIE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA+IDApIHsKCQkJaWYgKHhock9wdGlvbnMubWV0aG9kID09ICJHRVQiKSB7CgkJCQl4aHJPcHRpb25zLnVybCA9IHhock9wdGlvbnMudXJsICsgKHhock9wdGlvbnMudXJsLmluZGV4T2YoIj8iKSA8IDAgPyAiPyIgOiAiJiIpICsgYnVpbGRRdWVyeVN0cmluZyhkYXRhKQoJCQl9CgkJCWVsc2UgeGhyT3B0aW9ucy5kYXRhID0gc2VyaWFsaXplKGRhdGEpCgkJfQoJCXJldHVybiB4aHJPcHRpb25zCgl9CglmdW5jdGlvbiBwYXJhbWV0ZXJpemVVcmwodXJsLCBkYXRhKSB7CgkJdmFyIHRva2VucyA9IHVybC5tYXRjaCgvOlthLXpdXHcrL2dpKQoJCWlmICh0b2tlbnMgJiYgZGF0YSkgewoJCQlmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykgewoJCQkJdmFyIGtleSA9IHRva2Vuc1tpXS5zbGljZSgxKQoJCQkJdXJsID0gdXJsLnJlcGxhY2UodG9rZW5zW2ldLCBkYXRhW2tleV0pCgkJCQlkZWxldGUgZGF0YVtrZXldCgkJCX0KCQl9CgkJcmV0dXJuIHVybAoJfQoKCW0ucmVxdWVzdCA9IGZ1bmN0aW9uKHhock9wdGlvbnMpIHsKCQlpZiAoeGhyT3B0aW9ucy5iYWNrZ3JvdW5kICE9PSB0cnVlKSBtLnN0YXJ0Q29tcHV0YXRpb24oKQoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKQoJCXZhciBzZXJpYWxpemUgPSB4aHJPcHRpb25zLnNlcmlhbGl6ZSB8fCBKU09OLnN0cmluZ2lmeQoJCXZhciBkZXNlcmlhbGl6ZSA9IHhock9wdGlvbnMuZGVzZXJpYWxpemUgfHwgSlNPTi5wYXJzZQoJCXZhciBleHRyYWN0ID0geGhyT3B0aW9ucy5leHRyYWN0IHx8IGZ1bmN0aW9uKHhocikgewoJCQlyZXR1cm4geGhyLnJlc3BvbnNlVGV4dC5sZW5ndGggPT09IDAgJiYgZGVzZXJpYWxpemUgPT09IEpTT04ucGFyc2UgPyBudWxsIDogeGhyLnJlc3BvbnNlVGV4dAoJCX0KCQl4aHJPcHRpb25zLnVybCA9IHBhcmFtZXRlcml6ZVVybCh4aHJPcHRpb25zLnVybCwgeGhyT3B0aW9ucy5kYXRhKQoJCXhock9wdGlvbnMgPSBiaW5kRGF0YSh4aHJPcHRpb25zLCB4aHJPcHRpb25zLmRhdGEsIHNlcmlhbGl6ZSkKCQl4aHJPcHRpb25zLm9ubG9hZCA9IHhock9wdGlvbnMub25lcnJvciA9IGZ1bmN0aW9uKGUpIHsKCQkJdHJ5IHsKCQkJCWUgPSBlIHx8IGV2ZW50CgkJCQl2YXIgdW53cmFwID0gKGUudHlwZSA9PSAibG9hZCIgPyB4aHJPcHRpb25zLnVud3JhcFN1Y2Nlc3MgOiB4aHJPcHRpb25zLnVud3JhcEVycm9yKSB8fCBpZGVudGl0eQoJCQkJdmFyIHJlc3BvbnNlID0gdW53cmFwKGRlc2VyaWFsaXplKGV4dHJhY3QoZS50YXJnZXQsIHhock9wdGlvbnMpKSkKCQkJCWlmIChlLnR5cGUgPT0gImxvYWQiKSB7CgkJCQkJaWYgKHJlc3BvbnNlIGluc3RhbmNlb2YgQXJyYXkgJiYgeGhyT3B0aW9ucy50eXBlKSB7CgkJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgcmVzcG9uc2UubGVuZ3RoOyBpKyspIHJlc3BvbnNlW2ldID0gbmV3IHhock9wdGlvbnMudHlwZShyZXNwb25zZVtpXSkKCQkJCQl9CgkJCQkJZWxzZSBpZiAoeGhyT3B0aW9ucy50eXBlKSByZXNwb25zZSA9IG5ldyB4aHJPcHRpb25zLnR5cGUocmVzcG9uc2UpCgkJCQl9CgkJCQlkZWZlcnJlZFtlLnR5cGUgPT0gImxvYWQiID8gInJlc29sdmUiIDogInJlamVjdCJdKHJlc3BvbnNlKQoJCQl9CgkJCWNhdGNoIChlKSB7CgkJCQlpZiAoZSBpbnN0YW5jZW9mIFN5bnRheEVycm9yKSB0aHJvdyBuZXcgU3ludGF4RXJyb3IoIkNvdWxkIG5vdCBwYXJzZSBIVFRQIHJlc3BvbnNlLiBTZWUgaHR0cDovL2xob3JpZS5naXRodWIuaW8vbWl0aHJpbC9taXRocmlsLnJlcXVlc3QuaHRtbCN1c2luZy12YXJpYWJsZS1kYXRhLWZvcm1hdHMiKQoJCQkJZWxzZSBpZiAoZSBpbnN0YW5jZW9mIEVycm9yICYmIGUuY29uc3RydWN0b3IgIT09IEVycm9yKSB0aHJvdyBlCgkJCQllbHNlIGRlZmVycmVkLnJlamVjdChlKQoJCQl9CgkJCWlmICh4aHJPcHRpb25zLmJhY2tncm91bmQgIT09IHRydWUpIG0uZW5kQ29tcHV0YXRpb24oKQoJCX0KCQlhamF4KHhock9wdGlvbnMpCgkJcmV0dXJuIGRlZmVycmVkLnByb21pc2UKCX0KCgkvL3Rlc3RpbmcgQVBJCgltLmRlcHMgPSBmdW5jdGlvbihtb2NrKSB7cmV0dXJuIHdpbmRvdyA9IG1vY2t9CgkvL2ZvciBpbnRlcm5hbCB0ZXN0aW5nIG9ubHksIGRvIG5vdCB1c2UgYG0uZGVwcy5mYWN0b3J5YAoJbS5kZXBzLmZhY3RvcnkgPSBhcHAKCglyZXR1cm4gbQp9KHR5cGVvZiB3aW5kb3cgIT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKCmlmICh0eXBlb2YgbW9kdWxlICE9ICJ1bmRlZmluZWQiICYmIG1vZHVsZSAhPT0gbnVsbCkgbW9kdWxlLmV4cG9ydHMgPSBtCmlmICh0eXBlb2YgZGVmaW5lID09ICJmdW5jdGlvbiIgJiYgZGVmaW5lLmFtZCkgZGVmaW5lKGZ1bmN0aW9uKCkge3JldHVybiBtfSkKCjs7OwoKZnVuY3Rpb24gdGVzdChjb25kaXRpb24pIHsKCXRyeSB7aWYgKCFjb25kaXRpb24oKSkgdGhyb3cgbmV3IEVycm9yfQoJY2F0Y2ggKGUpIHtjb25zb2xlLmVycm9yKGUpO3Rlc3QuZmFpbHVyZXMucHVzaChjb25kaXRpb24pfQoJdGVzdC50b3RhbCsrCn0KdGVzdC50b3RhbCA9IDAKdGVzdC5mYWlsdXJlcyA9IFtdCnRlc3QucHJpbnQgPSBmdW5jdGlvbihwcmludCkgewoJZm9yICh2YXIgaSA9IDA7IGkgPCB0ZXN0LmZhaWx1cmVzLmxlbmd0aDsgaSsrKSB7CgkJcHJpbnQodGVzdC5mYWlsdXJlc1tpXS50b1N0cmluZygpKQoJfQoJcHJpbnQoInRlc3RzOiAiICsgdGVzdC50b3RhbCArICJcbmZhaWx1cmVzOiAiICsgdGVzdC5mYWlsdXJlcy5sZW5ndGgpCgoJaWYgKHRlc3QuZmFpbHVyZXMubGVuZ3RoID4gMCkgewoJCXRocm93IG5ldyBFcnJvcih0ZXN0LmZhaWx1cmVzLmxlbmd0aCArICIgdGVzdHMgZGlkIG5vdCBwYXNzIikKCX0KfQoKdmFyIG1vY2sgPSB7fQptb2NrLndpbmRvdyA9IG5ldyBmdW5jdGlvbigpIHsKCXZhciB3aW5kb3cgPSB7fQoJd2luZG93LmRvY3VtZW50ID0ge30KCXdpbmRvdy5kb2N1bWVudC5jaGlsZE5vZGVzID0gW10KCXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24odGFnKSB7CgkJcmV0dXJuIHsKCQkJc3R5bGU6IHt9LAoJCQljaGlsZE5vZGVzOiBbXSwKCQkJbm9kZVR5cGU6IDEsCgkJCW5vZGVOYW1lOiB0YWcudG9VcHBlckNhc2UoKSwKCQkJYXBwZW5kQ2hpbGQ6IHdpbmRvdy5kb2N1bWVudC5hcHBlbmRDaGlsZCwKCQkJcmVtb3ZlQ2hpbGQ6IHdpbmRvdy5kb2N1bWVudC5yZW1vdmVDaGlsZCwKCQkJcmVwbGFjZUNoaWxkOiB3aW5kb3cuZG9jdW1lbnQucmVwbGFjZUNoaWxkLAoJCQlpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uKG5vZGUsIHJlZmVyZW5jZSkgewoJCQkJbm9kZS5wYXJlbnROb2RlID0gdGhpcwoJCQkJdmFyIHJlZmVyZW5jZUluZGV4ID0gdGhpcy5jaGlsZE5vZGVzLmluZGV4T2YocmVmZXJlbmNlKQoJCQkJaWYgKHJlZmVyZW5jZUluZGV4IDwgMCkgdGhpcy5jaGlsZE5vZGVzLnB1c2gobm9kZSkKCQkJCWVsc2UgewoJCQkJCXZhciBpbmRleCA9IHRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKG5vZGUpCgkJCQkJaWYgKGluZGV4ID4gLTEpIHRoaXMuY2hpbGROb2Rlcy5zcGxpY2UoaW5kZXgsIDEpCgkJCQkJdGhpcy5jaGlsZE5vZGVzLnNwbGljZShyZWZlcmVuY2VJbmRleCwgMCwgbm9kZSkKCQkJCX0KCQkJfSwKCQkJaW5zZXJ0QWRqYWNlbnRIVE1MOiBmdW5jdGlvbihwb3NpdGlvbiwgaHRtbCkgewoJCQkJLy90b2RvOiBhY2NlcHQgbWFya3VwCgkJCQlpZiAocG9zaXRpb24gPT0gImJlZm9yZWJlZ2luIikgewoJCQkJCXRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUod2luZG93LmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGh0bWwpLCB0aGlzKQoJCQkJfQoJCQkJZWxzZSBpZiAocG9zaXRpb24gPT0gImJlZm9yZWVuZCIpIHsKCQkJCQl0aGlzLmFwcGVuZENoaWxkKHdpbmRvdy5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShodG1sKSkKCQkJCX0KCQkJfSwKCQkJc2V0QXR0cmlidXRlOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSkgewoJCQkJdGhpc1tuYW1lXSA9IHZhbHVlLnRvU3RyaW5nKCkKCQkJfSwKCQkJc2V0QXR0cmlidXRlTlM6IGZ1bmN0aW9uKG5hbWVzcGFjZSwgbmFtZSwgdmFsdWUpIHsKCQkJCXRoaXMubmFtZXNwYWNlVVJJID0gbmFtZXNwYWNlCgkJCQl0aGlzW25hbWVdID0gdmFsdWUudG9TdHJpbmcoKQoJCQl9LAoJCQlnZXRBdHRyaWJ1dGU6IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7CgkJCQlyZXR1cm4gdGhpc1tuYW1lXQoJCQl9CgkJfQoJfQoJd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyA9IGZ1bmN0aW9uKG5hbWVzcGFjZSwgdGFnKSB7CgkJdmFyIGVsZW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpCgkJZWxlbWVudC5uYW1lc3BhY2VVUkkgPSBuYW1lc3BhY2UKCQlyZXR1cm4gZWxlbWVudAoJfQoJd2luZG93LmRvY3VtZW50LmNyZWF0ZVRleHROb2RlID0gZnVuY3Rpb24odGV4dCkgewoJCXJldHVybiB7bm9kZVZhbHVlOiB0ZXh0LnRvU3RyaW5nKCl9Cgl9Cgl3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImh0bWwiKQoJd2luZG93LmRvY3VtZW50LnJlcGxhY2VDaGlsZCA9IGZ1bmN0aW9uKG5ld0NoaWxkLCBvbGRDaGlsZCkgewoJCXZhciBpbmRleCA9IHRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKG9sZENoaWxkKQoJCWlmIChpbmRleCA+IC0xKSB0aGlzLmNoaWxkTm9kZXMuc3BsaWNlKGluZGV4LCAxLCBuZXdDaGlsZCkKCQllbHNlIHRoaXMuY2hpbGROb2Rlcy5wdXNoKG5ld0NoaWxkKQoJCW5ld0NoaWxkLnBhcmVudE5vZGUgPSB0aGlzCgkJb2xkQ2hpbGQucGFyZW50Tm9kZSA9IG51bGwKCX0KCXdpbmRvdy5kb2N1bWVudC5hcHBlbmRDaGlsZCA9IGZ1bmN0aW9uKGNoaWxkKSB7CgkJdmFyIGluZGV4ID0gdGhpcy5jaGlsZE5vZGVzLmluZGV4T2YoY2hpbGQpCgkJaWYgKGluZGV4ID4gLTEpIHRoaXMuY2hpbGROb2Rlcy5zcGxpY2UoaW5kZXgsIDEpCgkJdGhpcy5jaGlsZE5vZGVzLnB1c2goY2hpbGQpCgkJY2hpbGQucGFyZW50Tm9kZSA9IHRoaXMKCX0KCXdpbmRvdy5kb2N1bWVudC5yZW1vdmVDaGlsZCA9IGZ1bmN0aW9uKGNoaWxkKSB7CgkJdmFyIGluZGV4ID0gdGhpcy5jaGlsZE5vZGVzLmluZGV4T2YoY2hpbGQpCgkJdGhpcy5jaGlsZE5vZGVzLnNwbGljZShpbmRleCwgMSkKCQljaGlsZC5wYXJlbnROb2RlID0gbnVsbAoJfQoJd2luZG93LnNjcm9sbFRvID0gZnVuY3Rpb24oKSB7fQoJd2luZG93LnBlcmZvcm1hbmNlID0gbmV3IGZ1bmN0aW9uICgpIHsKCQl2YXIgdGltZXN0YW1wID0gNTAKCQl0aGlzLiRlbGFwc2UgPSBmdW5jdGlvbihhbW91bnQpIHt0aW1lc3RhbXAgKz0gYW1vdW50fQoJCXRoaXMubm93ID0gZnVuY3Rpb24oKSB7cmV0dXJuIHRpbWVzdGFtcH0KCX0KCXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uKCkge30KCXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSBmdW5jdGlvbihjYWxsYmFjaykge3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuJGNhbGxiYWNrID0gY2FsbGJhY2t9Cgl3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLiRyZXNvbHZlID0gZnVuY3Rpb24oKSB7CgkJaWYgKHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuJGNhbGxiYWNrKSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLiRjYWxsYmFjaygpCgkJd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS4kY2FsbGJhY2sgPSBudWxsCgkJd2luZG93LnBlcmZvcm1hbmNlLiRlbGFwc2UoMjApCgl9Cgl3aW5kb3cuWE1MSHR0cFJlcXVlc3QgPSBuZXcgZnVuY3Rpb24oKSB7CgkJdmFyIHJlcXVlc3QgPSBmdW5jdGlvbigpIHsKCQkJdGhpcy5vcGVuID0gZnVuY3Rpb24obWV0aG9kLCB1cmwpIHsKCQkJCXRoaXMubWV0aG9kID0gbWV0aG9kCgkJCQl0aGlzLnVybCA9IHVybAoJCQl9CgkJCXRoaXMuc2VuZCA9IGZ1bmN0aW9uKCkgewoJCQkJdGhpcy5yZXNwb25zZVRleHQgPSBKU09OLnN0cmluZ2lmeSh0aGlzKQoJCQkJdGhpcy5yZWFkeVN0YXRlID0gNAoJCQkJdGhpcy5zdGF0dXMgPSAyMDAKCQkJCXJlcXVlc3QuJGluc3RhbmNlcy5wdXNoKHRoaXMpCgkJCX0KCQl9CgkJcmVxdWVzdC4kaW5zdGFuY2VzID0gW10KCQlyZXR1cm4gcmVxdWVzdAoJfQoJd2luZG93LmxvY2F0aW9uID0ge3NlYXJjaDogIiIsIHBhdGhuYW1lOiAiIiwgaGFzaDogIiJ9LAoJd2luZG93Lmhpc3RvcnkgPSB7fQoJd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlID0gZnVuY3Rpb24oZGF0YSwgdGl0bGUsIHVybCkgewoJCXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHVybAoJfSwKCXdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSA9IGZ1bmN0aW9uKGRhdGEsIHRpdGxlLCB1cmwpIHsKCQl3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoID0gd2luZG93LmxvY2F0aW9uLmhhc2ggPSB1cmwKCX0KCXJldHVybiB3aW5kb3cKfQpmdW5jdGlvbiB0ZXN0TWl0aHJpbChtb2NrKSB7CgltLmRlcHMobW9jaykKCgkvL20KCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIpLnRhZyA9PT0gImRpdiJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiLmZvbyIpLnRhZyA9PT0gImRpdiJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiLmZvbyIpLmF0dHJzLmNsYXNzTmFtZSA9PT0gImZvbyJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiW3RpdGxlPWJhcl0iKS50YWcgPT09ICJkaXYifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oIlt0aXRsZT1iYXJdIikuYXR0cnMudGl0bGUgPT09ICJiYXIifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oIlt0aXRsZT1cJ2JhclwnXSIpLmF0dHJzLnRpdGxlID09PSAiYmFyIn0pCgl0ZXN0KGZ1bmN0aW9uKCkge3JldHVybiBtKCJbdGl0bGU9XCJiYXJcIl0iKS5hdHRycy50aXRsZSA9PT0gImJhciJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiZGl2IiwgInRlc3QiKS5jaGlsZHJlbiA9PT0gInRlc3QifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIFsidGVzdCJdKS5jaGlsZHJlblswXSA9PT0gInRlc3QifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIHt0aXRsZTogImJhciJ9LCAidGVzdCIpLmF0dHJzLnRpdGxlID09PSAiYmFyIn0pCgl0ZXN0KGZ1bmN0aW9uKCkge3JldHVybiBtKCJkaXYiLCB7dGl0bGU6ICJiYXIifSwgInRlc3QiKS5jaGlsZHJlbiA9PT0gInRlc3QifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIHt0aXRsZTogImJhciJ9LCBbInRlc3QiXSkuY2hpbGRyZW5bMF0gPT09ICJ0ZXN0In0pCgl0ZXN0KGZ1bmN0aW9uKCkge3JldHVybiBtKCJkaXYiLCB7dGl0bGU6ICJiYXIifSwgbSgiZGl2IikpLmNoaWxkcmVuLnRhZyA9PT0gImRpdiJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiZGl2Iiwge3RpdGxlOiAiYmFyIn0sIFttKCJkaXYiKV0pLmNoaWxkcmVuWzBdLnRhZyA9PT0gImRpdiJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiZGl2IiwgWyJhIiwgImIiXSkuY2hpbGRyZW4ubGVuZ3RoID09PSAyfSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIFttKCJkaXYiKV0pLmNoaWxkcmVuWzBdLnRhZyA9PT0gImRpdiJ9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgiZGl2IiwgbSgiZGl2IikpLmNoaWxkcmVuLnRhZyA9PT0gImRpdiJ9KSAvL3llcywgdGhpcyBpcyBleHBlY3RlZCBiZWhhdmlvcjogc2VlIG1ldGhvZCBzaWduYXR1cmUKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIFt1bmRlZmluZWRdKS50YWcgPT09ICJkaXYifSkKCXRlc3QoZnVuY3Rpb24oKSB7cmV0dXJuIG0oImRpdiIsIFt7Zm9vOiAiYmFyIn1dKX0pIC8vYXMgbG9uZyBhcyBpdCBkb2Vzbid0IHRocm93IGVycm9ycywgaXQncyBmaW5lCgl0ZXN0KGZ1bmN0aW9uKCkge3JldHVybiBtKCJzdmciLCBbbSgiZyIpXSl9KQoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbSgic3ZnIiwgW20oImFbaHJlZj0naHR0cDovL2dvb2dsZS5jb20nXSIpXSl9KQoKCS8vbS5tb2R1bGUKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKQoKCQl2YXIgcm9vdDEgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5tb2R1bGUocm9vdDEsIHsKCQkJY29udHJvbGxlcjogZnVuY3Rpb24oKSB7dGhpcy52YWx1ZSA9ICJ0ZXN0MSJ9LAoJCQl2aWV3OiBmdW5jdGlvbihjdHJsKSB7cmV0dXJuIGN0cmwudmFsdWV9CgkJfSkKCgkJdmFyIHJvb3QyID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ubW9kdWxlKHJvb3QyLCB7CgkJCWNvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge3RoaXMudmFsdWUgPSAidGVzdDIifSwKCQkJdmlldzogZnVuY3Rpb24oY3RybCkge3JldHVybiBjdHJsLnZhbHVlfQoJCX0pCgoJCW1vY2sucmVxdWVzdEFuaW1hdGlvbkZyYW1lLiRyZXNvbHZlKCkKCgkJcmV0dXJuIHJvb3QxLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAidGVzdDEiICYmIHJvb3QyLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAidGVzdDIiCgl9KQoKCS8vbS53aXRoQXR0cgoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgdmFsdWUKCQl2YXIgaGFuZGxlciA9IG0ud2l0aEF0dHIoInRlc3QiLCBmdW5jdGlvbihkYXRhKSB7dmFsdWUgPSBkYXRhfSkKCQloYW5kbGVyKHtjdXJyZW50VGFyZ2V0OiB7dGVzdDogImZvbyJ9fSkKCQlyZXR1cm4gdmFsdWUgPT09ICJmb28iCgl9KQoKCS8vbS50cnVzdAoJdGVzdChmdW5jdGlvbigpIHtyZXR1cm4gbS50cnVzdCgidGVzdCIpLnZhbHVlT2YoKSA9PT0gInRlc3QifSkKCgkvL20ucmVuZGVyCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsICJ0ZXN0IikKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gInRlc3QiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCB7Y2xhc3M6ICJhIn0pKQoJCXZhciBlbGVtZW50QmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2Iiwge2NsYXNzOiAiYiJ9KSkKCQl2YXIgZWxlbWVudEFmdGVyID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJcmV0dXJuIGVsZW1lbnRCZWZvcmUgPT09IGVsZW1lbnRBZnRlcgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiLmEiKSkKCQl2YXIgZWxlbWVudEJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCW0ucmVuZGVyKHJvb3QsIG0oIi5iIikpCgkJdmFyIGVsZW1lbnRBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXJldHVybiBlbGVtZW50QmVmb3JlID09PSBlbGVtZW50QWZ0ZXIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHtpZDogImEifSkpCgkJdmFyIGVsZW1lbnRCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMF0KCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCB7dGl0bGU6ICJiIn0pKQoJCXZhciBlbGVtZW50QWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbMF0KCQlyZXR1cm4gZWxlbWVudEJlZm9yZSAhPT0gZWxlbWVudEFmdGVyCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCIjYSIpKQoJCXZhciBlbGVtZW50QmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJbS5yZW5kZXIocm9vdCwgbSgiW3RpdGxlPWJdIikpCgkJdmFyIGVsZW1lbnRBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXJldHVybiBlbGVtZW50QmVmb3JlICE9PSBlbGVtZW50QWZ0ZXIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oIiNhIikpCgkJdmFyIGVsZW1lbnRCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMF0KCQltLnJlbmRlcihyb290LCAidGVzdCIpCgkJdmFyIGVsZW1lbnRBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXJldHVybiBlbGVtZW50QmVmb3JlICE9PSBlbGVtZW50QWZ0ZXIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFt1bmRlZmluZWRdKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAiIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgic3ZnIiwgW20oImciKV0pKQoJCXZhciBnID0gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0KCQlyZXR1cm4gZy5ub2RlTmFtZSA9PT0gIkciICYmIGcubmFtZXNwYWNlVVJJID09ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oInN2ZyIsIFttKCJhW2hyZWY9J2h0dHA6Ly9nb29nbGUuY29tJ10iKV0pKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlTmFtZSA9PT0gIkEiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYuY2xhc3NuYW1lIiwgW20oImEiLCB7aHJlZjogIi9maXJzdCJ9KV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFttKCJhIiwge2hyZWY6ICIvc2Vjb25kIn0pXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzLmxlbmd0aCA9PSAxCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJ1bCIsIFttKCJsaSIpXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgidWwiLCBbbSgibGkiKSwgdW5kZWZpbmVkXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzFdLm5vZGVWYWx1ZSA9PT0gIiIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oInVsIiwgW20oImxpIiksIG0oImxpIildKSkKCQltLnJlbmRlcihyb290LCBtKCJ1bCIsIFttKCJsaSIpLCB1bmRlZmluZWRdKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMubGVuZ3RoID09IDIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0ubm9kZVZhbHVlID09PSAiIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgidWwiLCBbbSgibGkiKV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oInVsIiwgW3VuZGVmaW5lZF0pKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICIiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJ1bCIsIFttKCJsaSIpXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgidWwiLCBbe31dKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMubGVuZ3RoID09PSAwCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJ1bCIsIFttKCJsaSIsIFttKCJhIildKV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oInVsIiwgW3tzdWJ0cmVlOiAicmV0YWluIn1dKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlTmFtZSA9PT0gIkEiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDMKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJhIiwge2NvbmZpZzogbS5yb3V0ZX0sICJ0ZXN0IikpCgkJbS5yZW5kZXIocm9vdCwgbSgiYSIsIHtjb25maWc6IG0ucm91dGV9LCAidGVzdCIpKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzI5CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJdmFyIGxpc3QgPSBbZmFsc2UsIGZhbHNlXQoJCW0ucmVuZGVyKHJvb3QsIGxpc3QucmV2ZXJzZSgpLm1hcChmdW5jdGlvbihmbGFnLCBpbmRleCkgewoJCQlyZXR1cm4gbSgiaW5wdXRbdHlwZT1jaGVja2JveF0iLCB7b25jbGljazogbS53aXRoQXR0cigiY2hlY2tlZCIsIGZ1bmN0aW9uKHZhbHVlKSB7bGlzdFtpbmRleF0gPSB2YWx1ZX0pLCBjaGVja2VkOiBmbGFnfSkKCQl9KSkKCgkJbW9jay5kb2N1bWVudC5hY3RpdmVFbGVtZW50ID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJcm9vdC5jaGlsZE5vZGVzWzBdLmNoZWNrZWQgPSB0cnVlCgkJcm9vdC5jaGlsZE5vZGVzWzBdLm9uY2xpY2soe2N1cnJlbnRUYXJnZXQ6IHtjaGVja2VkOiB0cnVlfX0pCgoJCW0ucmVuZGVyKHJvb3QsIGxpc3QucmV2ZXJzZSgpLm1hcChmdW5jdGlvbihmbGFnLCBpbmRleCkgewoJCQlyZXR1cm4gbSgiaW5wdXRbdHlwZT1jaGVja2JveF0iLCB7b25jbGljazogbS53aXRoQXR0cigiY2hlY2tlZCIsIGZ1bmN0aW9uKHZhbHVlKSB7bGlzdFtpbmRleF0gPSB2YWx1ZX0pLCBjaGVja2VkOiBmbGFnfSkKCQl9KSkKCgkJbW9jay5kb2N1bWVudC5hY3RpdmVFbGVtZW50ID0gbnVsbAoKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoZWNrZWQgPT09IGZhbHNlICYmIHJvb3QuY2hpbGROb2Rlc1sxXS5jaGVja2VkID09PSB0cnVlCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDQgKDEpCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFtudWxsLCBtKCIjYmFyIildKSkKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgWyJ0ZXN0IiwgbSgiI2JhciIpXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gInRlc3QiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDQgKDIpCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFtudWxsLCBtKCIjYmFyIildKSkKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgW20oImRpdiIpLCBtKCIjYmFyIildKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0ubm9kZU5hbWUgPT09ICJESVYiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDQgKDMpCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFsidGVzdCIsIG0oIiNiYXIiKV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oIiNmb28iLCBbbSgiZGl2IiksIG0oIiNiYXIiKV0pKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlTmFtZSA9PT0gIkRJViIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy80NCAoNCkKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgW20oImRpdiIpLCBtKCIjYmFyIildKSkKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgWyJ0ZXN0IiwgbSgiI2JhciIpXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gInRlc3QiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDQgKDUpCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFttKCIjYmFyIildKSkKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgW20oIiNiYXIiKSwgW20oIiNiYXoiKV1dKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0uaWQgPT09ICJiYXoiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDgKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQKCQltLnJlbmRlcihyb290LCBtKCJodG1sIiwgW20oIiNmb28iKV0pKQoJCXZhciByZXN1bHQgPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5pZCA9PT0gImZvbyIKCQlyb290LmNoaWxkTm9kZXMgPSBbbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJodG1sIildCgkJcmV0dXJuIHJlc3VsdAoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzQ5CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiYSIsICJ0ZXN0IikpCgkJbS5yZW5kZXIocm9vdCwgbSgiYS5mb28iLCAidGVzdCIpKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzQ5CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiYS5mb28iLCAidGVzdCIpKQoJCW0ucmVuZGVyKHJvb3QsIG0oImEiLCAidGVzdCIpKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzQ5CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiYS5mb28iLCAidGVzdCIpKQoJCW0ucmVuZGVyKHJvb3QsIG0oImEiLCAidGVzdDEiKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAidGVzdDEiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNDkKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJhIiwgInRlc3QiKSkKCQltLnJlbmRlcihyb290LCBtKCJhIiwgInRlc3QxIikpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gInRlc3QxIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzUwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFtbbSgiZGl2IiwgImEiKSwgbSgiZGl2IiwgImIiKV0sIG0oIiNiYXIiKV0pKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1sxXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImIiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNTAKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgW1ttKCJkaXYiLCAiYSIpLCBtKCJkaXYiLCAiYiIpXSwgbSgiI2JhciIpXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFtbbSgiZGl2IiwgImEiKSwgbSgiZGl2IiwgImIiKSwgbSgiZGl2IiwgImMiKV0sIG0oIiNiYXIiKV0pKQoJCXJldHVybiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1syXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImMiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNTAKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCIjZm9vIiwgW1ttKCJkaXYiLCAiYSIpLCBtKCJkaXYiLCAiYiIpXSwgW20oImRpdiIsICJjIiksIG0oImRpdiIsICJkIildLCBtKCIjYmFyIildKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbM10uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJkIiAmJiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1s0XS5pZCA9PT0gImJhciIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy81MAoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oIiNmb28iLCBbW20oImRpdiIsICJhIiksIG0oImRpdiIsICJiIildLCAidGVzdCJdKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJiIiAmJiByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1syXS5ub2RlVmFsdWUgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzUwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2ZvbyIsIFtbImEiLCAiYiJdLCAidGVzdCJdKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0ubm9kZVZhbHVlID09PSAiYiIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMl0ubm9kZVZhbHVlID09PSAidGVzdCIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy81MQoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oIm1haW4iLCBbbSgiYnV0dG9uIiksIG0oImFydGljbGUiLCBbbSgic2VjdGlvbiIpLCBtKCJuYXYiKV0pXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgibWFpbiIsIFttKCJidXR0b24iKSwgbSgiYXJ0aWNsZSIsIFttKCJzcGFuIiksIG0oIm5hdiIpXSldKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0uY2hpbGROb2Rlc1swXS5ub2RlTmFtZSA9PT0gIlNQQU4iCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNTEKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJtYWluIiwgW20oImJ1dHRvbiIpLCBtKCJhcnRpY2xlIiwgW20oInNlY3Rpb24iKSwgbSgibmF2IildKV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oIm1haW4iLCBbbSgiYnV0dG9uIiksIG0oImFydGljbGUiLCBbInRlc3QiLCBtKCJuYXYiKV0pXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzFdLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAidGVzdCIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy81MQoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oIm1haW4iLCBbbSgiYnV0dG9uIiksIG0oImFydGljbGUiLCBbbSgic2VjdGlvbiIpLCBtKCJuYXYiKV0pXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgibWFpbiIsIFttKCJidXR0b24iKSwgbSgiYXJ0aWNsZSIsIFttLnRydXN0KCJ0ZXN0IiksIG0oIm5hdiIpXSldKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzU1CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiI2EiKSkKCQl2YXIgZWxlbWVudEJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCW0ucmVuZGVyKHJvb3QsIG0oIiNiIikpCgkJdmFyIGVsZW1lbnRBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXJldHVybiBlbGVtZW50QmVmb3JlICE9PSBlbGVtZW50QWZ0ZXIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy81NgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIFtudWxsLCAiZm9vIl0pCgkJbS5yZW5kZXIocm9vdCwgWyJiYXIiXSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzLmxlbmd0aCA9PSAxCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvNTYKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCAiZm9vIikpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlcy5sZW5ndGggPT0gMQoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgW20oImJ1dHRvbiIpLCBtKCJ1bCIpXSkpCgkJdmFyIHZhbHVlQmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0ubm9kZU5hbWUKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbdW5kZWZpbmVkLCBtKCJ1bCIpXSkpCgkJdmFyIHZhbHVlQWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUKCQlyZXR1cm4gdmFsdWVCZWZvcmUgPT09ICJCVVRUT04iICYmIHZhbHVlQWZ0ZXIgPT09ICIiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbbSgidWwiKSwgdW5kZWZpbmVkXSkpCgkJdmFyIHZhbHVlQmVmb3JlMSA9IHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5vZGVOYW1lCgkJdmFyIHZhbHVlQmVmb3JlMiA9IHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzFdLm5vZGVWYWx1ZQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFt1bmRlZmluZWQsIG0oInVsIildKSkKCQl2YXIgdmFsdWVBZnRlcjEgPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUKCQl2YXIgdmFsdWVBZnRlcjIgPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2Rlc1sxXS5ub2RlTmFtZQoJCXJldHVybiB2YWx1ZUJlZm9yZTEgPT09ICJVTCIgJiYgdmFsdWVBZnRlcjEgPT09ICIiICYmIHZhbHVlQmVmb3JlMiA9PT0gIiIgJiYgdmFsdWVBZnRlcjIgPT09ICJVTCIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy83OQoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHtzdHlsZToge2JhY2tncm91bmQ6ICJyZWQifX0pKQoJCXZhciB2YWx1ZUJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1swXS5zdHlsZS5iYWNrZ3JvdW5kCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2Iiwge3N0eWxlOiB7fX0pKQoJCXZhciB2YWx1ZUFmdGVyID0gcm9vdC5jaGlsZE5vZGVzWzBdLnN0eWxlLmJhY2tncm91bmQKCQlyZXR1cm4gdmFsdWVCZWZvcmUgPT09ICJyZWQiICYmIHZhbHVlQWZ0ZXIgPT09ICIiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXZbc3R5bGU9J2JhY2tncm91bmQ6cmVkJ10iKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLnN0eWxlID09PSAiYmFja2dyb3VuZDpyZWQiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCB7c3R5bGU6IHtiYWNrZ3JvdW5kOiAicmVkIn19KSkKCQl2YXIgdmFsdWVCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMF0uc3R5bGUuYmFja2dyb3VuZAoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHt9KSkKCQl2YXIgdmFsdWVBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXS5zdHlsZS5iYWNrZ3JvdW5kCgkJcmV0dXJuIHZhbHVlQmVmb3JlID09PSAicmVkIiAmJiB2YWx1ZUFmdGVyID09PSB1bmRlZmluZWQKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCXZhciBtb2R1bGUgPSB7fSwgdW5sb2FkZWQgPSBmYWxzZQoJCW1vZHVsZS5jb250cm9sbGVyID0gZnVuY3Rpb24oKSB7CgkJCXRoaXMub251bmxvYWQgPSBmdW5jdGlvbigpIHt1bmxvYWRlZCA9IHRydWV9CgkJfQoJCW1vZHVsZS52aWV3ID0gZnVuY3Rpb24oKSB7fQoJCW0ubW9kdWxlKHJvb3QsIG1vZHVsZSkKCQltLm1vZHVsZShyb290LCB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7fX0pCgkJcmV0dXJuIHVubG9hZGVkID09PSB0cnVlCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvODcKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbW20oImEiKSwgbSgiYSIpXSwgbSgiYnV0dG9uIildKSkKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbW20oImEiKV0sIG0oImJ1dHRvbiIpXSkpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzLmxlbmd0aCA9PSAyICYmIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzFdLm5vZGVOYW1lID09ICJCVVRUT04iCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvODcKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbbSgiYSIpLCBtKCJiIiksIG0oImJ1dHRvbiIpXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgW20oImEiKSwgbSgiYnV0dG9uIildKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMubGVuZ3RoID09IDIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV0ubm9kZU5hbWUgPT0gIkJVVFRPTiIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy85OQoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFttKCJpbWciKSwgbSgiaDEiKV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFttKCJhIildKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMubGVuZ3RoID09IDEgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMF0ubm9kZU5hbWUgPT0gIkEiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvMTIwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgWyJhIiwgImIiLCAiYyIsICJkIl0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFtbImQiLCAiZSJdXSkpCgkJdmFyIGNoaWxkcmVuID0gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMKCQlyZXR1cm4gY2hpbGRyZW4ubGVuZ3RoID09IDIgJiYgY2hpbGRyZW5bMF0ubm9kZVZhbHVlID09ICJkIiAmJiBjaGlsZHJlblsxXS5ub2RlVmFsdWUgPT0gImUiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvMTIwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgW1siYSIsICJiIiwgImMiLCAiZCJdXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgWyJkIiwgImUiXSkpCgkJdmFyIGNoaWxkcmVuID0gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMKCQlyZXR1cm4gY2hpbGRyZW4ubGVuZ3RoID09IDIgJiYgY2hpbGRyZW5bMF0ubm9kZVZhbHVlID09ICJkIiAmJiBjaGlsZHJlblsxXS5ub2RlVmFsdWUgPT0gImUiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvMTIwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgWyJ4IiwgW1siYSJdLCAiYiIsICJjIiwgImQiXV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFsiZCIsIFsiZSJdXSkpCgkJdmFyIGNoaWxkcmVuID0gcm9vdC5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXMKCQlyZXR1cm4gY2hpbGRyZW4ubGVuZ3RoID09IDIgJiYgY2hpbGRyZW5bMF0ubm9kZVZhbHVlID09ICJkIiAmJiBjaGlsZHJlblsxXS5ub2RlVmFsdWUgPT0gImUiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvMTIwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgWyJiIl0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFtbImUiXV0pKQoJCXZhciBjaGlsZHJlbiA9IHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzCgkJcmV0dXJuIGNoaWxkcmVuLmxlbmd0aCA9PSAxICYmIGNoaWxkcmVuWzBdLm5vZGVWYWx1ZSA9PSAiZSIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy8xMjAKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbImEiLCBbImIiXV0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIFsiZCIsIFtbImUiXV1dKSkKCQl2YXIgY2hpbGRyZW4gPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2RlcwoJCXJldHVybiBjaGlsZHJlbi5sZW5ndGggPT0gMiAmJiBjaGlsZHJlblswXS5ub2RlVmFsdWUgPT0gImQiICYmIGNoaWxkcmVuWzFdLm5vZGVWYWx1ZSA9PSAiZSIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy8xMjAKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbImEiLCBbWyJiIl1dXSkpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2IiwgWyJkIiwgWyJlIl1dKSkKCQl2YXIgY2hpbGRyZW4gPSByb290LmNoaWxkTm9kZXNbMF0uY2hpbGROb2RlcwoJCXJldHVybiBjaGlsZHJlbi5sZW5ndGggPT0gMiAmJiBjaGlsZHJlblswXS5ub2RlVmFsdWUgPT0gImQiICYmIGNoaWxkcmVuWzFdLm5vZGVWYWx1ZSA9PSAiZSIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy8xMjAKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbImEiLCBbWyJiIl0sICJjIl1dKSkKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbImQiLCBbW1siZSJdXSwgIngiXV0pKQoJCXZhciBjaGlsZHJlbiA9IHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzCgkJcmV0dXJuIGNoaWxkcmVuLmxlbmd0aCA9PSAzICYmIGNoaWxkcmVuWzBdLm5vZGVWYWx1ZSA9PSAiZCIgJiYgY2hpbGRyZW5bMV0ubm9kZVZhbHVlID09ICJlIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgoJCXZhciBzdWNjZXNzID0gZmFsc2UKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCB7Y29uZmlnOiBmdW5jdGlvbihlbGVtLCBpc0luaXRpYWxpemVkLCBjdHgpIHtjdHguZGF0YSA9IDF9fSkpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2Iiwge2NvbmZpZzogZnVuY3Rpb24oZWxlbSwgaXNJbml0aWFsaXplZCwgY3R4KSB7c3VjY2VzcyA9IGN0eC5kYXRhID09PSAxfX0pKQoJCXJldHVybiBzdWNjZXNzCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCgkJdmFyIGluZGV4ID0gMDsKCQl2YXIgc3VjY2VzcyA9IHRydWU7CgkJdmFyIHN0YXRlZnVsQ29uZmlnID0gZnVuY3Rpb24oZWxlbSwgaXNJbml0aWFsaXplZCwgY3R4KSB7Y3R4LmRhdGEgPSBpbmRleCsrfQoJCXZhciBub2RlID0gbSgiZGl2Iiwge2NvbmZpZzogc3RhdGVmdWxDb25maWd9KTsKCQltLnJlbmRlcihyb290LCBbbm9kZSwgbm9kZV0pOwoKCQlpbmRleCA9IDA7CgkJdmFyIGNoZWNrQ29uZmlnID0gZnVuY3Rpb24oZWxlbSwgaXNJbml0aWFsaXplZCwgY3R4KSB7CgkJCXN1Y2Nlc3MgPSBzdWNjZXNzICYmIChjdHguZGF0YSA9PT0gaW5kZXgrKykKCQl9CgkJbm9kZSA9IG0oImRpdiIsIHtjb25maWc6IGNoZWNrQ29uZmlnfSk7CgkJbS5yZW5kZXIocm9vdCwgW25vZGUsIG5vZGVdKTsKCQlyZXR1cm4gc3VjY2VzczsKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCXZhciBwYXJlbnQKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBtKCJhIiwgewoJCQljb25maWc6IGZ1bmN0aW9uKGVsKSB7cGFyZW50ID0gZWwucGFyZW50Tm9kZS5wYXJlbnROb2RlfQoJCX0pKSk7CgkJcmV0dXJuIHBhcmVudCA9PT0gcm9vdAoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJdmFyIGNvdW50ID0gMAoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIG0oImEiLCB7CgkJCWNvbmZpZzogZnVuY3Rpb24oZWwpIHsKCQkJCXZhciBpc2xhbmQgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJCQljb3VudCsrCgkJCQlpZiAoY291bnQgPiAyKSB0aHJvdyAidG9vIG11Y2ggcmVjdXJzaW9uLi4uIgoJCQkJbS5yZW5kZXIoaXNsYW5kLCBtKCJkaXYiKSkKCQkJfQoJCX0pKSk7CgkJcmV0dXJuIGNvdW50ID09IDEKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy8xMjkKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbWyJmb28iLCAiYmFyIl0sIFsiZm9vIiwgImJhciJdLCBbImZvbyIsICJiYXIiXV0pKTsKCQltLnJlbmRlcihyb290LCBtKCJkaXYiLCBbImFzZGYiLCAiYXNkZjIiLCAiYXNkZjMiXSkpOwoJCXJldHVybiB0cnVlCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvOTgKCQkvL2luc2VydCBhdCBiZWdpbm5pbmcKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJlbmRlcihyb290LCBbbSgiYSIsIHtrZXk6IDF9KSwgbSgiYSIsIHtrZXk6IDJ9KSwgbSgiYSIsIHtrZXk6IDN9KV0pCgkJdmFyIGZpcnN0QmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJbS5yZW5kZXIocm9vdCwgW20oImEiLCB7a2V5OiA0fSksIG0oImEiLCB7a2V5OiAxfSksIG0oImEiLCB7a2V5OiAyfSksIG0oImEiLCB7a2V5OiAzfSldKQoJCXZhciBmaXJzdEFmdGVyID0gcm9vdC5jaGlsZE5vZGVzWzFdCgkJcmV0dXJuIGZpcnN0QmVmb3JlID09IGZpcnN0QWZ0ZXIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLmtleSA9PSA0ICYmIHJvb3QuY2hpbGROb2Rlcy5sZW5ndGggPT0gNAoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzk4CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgW20oImEiLCB7a2V5OiAxfSksIG0oImEiLCB7a2V5OiAyfSksIG0oImEiLCB7a2V5OiAzfSldKQoJCXZhciBmaXJzdEJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCW0ucmVuZGVyKHJvb3QsIFttKCJhIiwge2tleTogNH0pLCBtKCJhIiwge2tleTogMX0pLCBtKCJhIiwge2tleTogMn0pXSkKCQl2YXIgZmlyc3RBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1sxXQoJCXJldHVybiBmaXJzdEJlZm9yZSA9PSBmaXJzdEFmdGVyICYmIHJvb3QuY2hpbGROb2Rlc1swXS5rZXkgPT0gNCAmJiByb290LmNoaWxkTm9kZXMubGVuZ3RoID09IDMKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy85OAoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIFttKCJhIiwge2tleTogMX0pLCBtKCJhIiwge2tleTogMn0pLCBtKCJhIiwge2tleTogM30pXSkKCQl2YXIgZmlyc3RCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMV0KCQltLnJlbmRlcihyb290LCBbbSgiYSIsIHtrZXk6IDJ9KSwgbSgiYSIsIHtrZXk6IDN9KSwgbSgiYSIsIHtrZXk6IDR9KV0pCgkJdmFyIGZpcnN0QWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbMF0KCQlyZXR1cm4gZmlyc3RCZWZvcmUgPT0gZmlyc3RBZnRlciAmJiByb290LmNoaWxkTm9kZXNbMF0ua2V5ID09PSAiMiIgJiYgcm9vdC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMwoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzk4CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgW20oImEiLCB7a2V5OiAxfSksIG0oImEiLCB7a2V5OiAyfSksIG0oImEiLCB7a2V5OiAzfSksIG0oImEiLCB7a2V5OiA0fSksIG0oImEiLCB7a2V5OiA1fSldKQoJCXZhciBmaXJzdEJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXZhciBzZWNvbmRCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMV0KCQl2YXIgZm91cnRoQmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzNdCgkJbS5yZW5kZXIocm9vdCwgW20oImEiLCB7a2V5OiA0fSksIG0oImEiLCB7a2V5OiAxMH0pLCBtKCJhIiwge2tleTogMX0pLCBtKCJhIiwge2tleTogMn0pXSkKCQl2YXIgZmlyc3RBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1syXQoJCXZhciBzZWNvbmRBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1szXQoJCXZhciBmb3VydGhBZnRlciA9IHJvb3QuY2hpbGROb2Rlc1swXQoJCXJldHVybiBmaXJzdEJlZm9yZSA9PT0gZmlyc3RBZnRlciAmJiBzZWNvbmRCZWZvcmUgPT09IHNlY29uZEFmdGVyICYmIGZvdXJ0aEJlZm9yZSA9PT0gZm91cnRoQWZ0ZXIgJiYgcm9vdC5jaGlsZE5vZGVzWzFdLmtleSA9PSAiMTAiICYmIHJvb3QuY2hpbGROb2Rlcy5sZW5ndGggPT09IDQKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy85OAoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIFttKCJhIiwge2tleTogMX0pLCBtKCJhIiwge2tleTogMn0pLCBtKCJhIiwge2tleTogM30pLCBtKCJhIiwge2tleTogNH0pLCBtKCJhIiwge2tleTogNX0pXSkKCQl2YXIgZmlyc3RCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMF0KCQl2YXIgc2Vjb25kQmVmb3JlID0gcm9vdC5jaGlsZE5vZGVzWzFdCgkJdmFyIGZvdXJ0aEJlZm9yZSA9IHJvb3QuY2hpbGROb2Rlc1szXQoJCW0ucmVuZGVyKHJvb3QsIFttKCJhIiwge2tleTogNH0pLCBtKCJhIiwge2tleTogMTB9KSwgbSgiYSIsIHtrZXk6IDJ9KSwgbSgiYSIsIHtrZXk6IDF9KSwgbSgiYSIsIHtrZXk6IDZ9KSwgbSgiYSIsIHtrZXk6IDd9KV0pCgkJdmFyIGZpcnN0QWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbM10KCQl2YXIgc2Vjb25kQWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbMl0KCQl2YXIgZm91cnRoQWZ0ZXIgPSByb290LmNoaWxkTm9kZXNbMF0KCQlyZXR1cm4gZmlyc3RCZWZvcmUgPT09IGZpcnN0QWZ0ZXIgJiYgc2Vjb25kQmVmb3JlID09PSBzZWNvbmRBZnRlciAmJiBmb3VydGhCZWZvcmUgPT09IGZvdXJ0aEFmdGVyICYmIHJvb3QuY2hpbGROb2Rlc1sxXS5rZXkgPT0gIjEwIiAmJiByb290LmNoaWxkTm9kZXNbNF0ua2V5ID09ICI2IiAmJiByb290LmNoaWxkTm9kZXNbNV0ua2V5ID09ICI3IiAmJiByb290LmNoaWxkTm9kZXMubGVuZ3RoID09PSA2Cgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvMTM0CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2Iiwge2NvbnRlbnRlZGl0YWJsZTogdHJ1ZX0sICJ0ZXN0IikpCgkJbW9jay5kb2N1bWVudC5hY3RpdmVFbGVtZW50ID0gcm9vdC5jaGlsZE5vZGVzWzBdCgkJbS5yZW5kZXIocm9vdCwgbSgiZGl2Iiwge2NvbnRlbnRlZGl0YWJsZTogdHJ1ZX0sICJ0ZXN0MSIpKQoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHtjb250ZW50ZWRpdGFibGU6IGZhbHNlfSwgInRlc3QyIikpCgkJcmV0dXJuIHJvb3QuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gInRlc3QyIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzEzNgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucmVuZGVyKHJvb3QsIG0oInRleHRhcmVhIiwgWyJ0ZXN0Il0pKQoJCW0ucmVuZGVyKHJvb3QsIG0oInRleHRhcmVhIiwgWyJ0ZXN0MSJdKSkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLnZhbHVlID09PSAidGVzdDEiCgl9KQoJLy9lbmQgbS5yZW5kZXIKCgkvL20ucmVkcmF3Cgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCXZhciBjb250cm9sbGVyCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5tb2R1bGUocm9vdCwgewoJCQljb250cm9sbGVyOiBmdW5jdGlvbigpIHtjb250cm9sbGVyID0gdGhpc30sCgkJCXZpZXc6IGZ1bmN0aW9uKGN0cmwpIHtyZXR1cm4gY3RybC52YWx1ZX0KCQl9KQoJCWNvbnRyb2xsZXIudmFsdWUgPSAiZm9vIgoJCW0ucmVkcmF3KCkKCQl2YXIgdmFsdWVCZWZvcmUgPSByb290LmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKQoJCW0ucmVkcmF3KCkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gdmFsdWVCZWZvcmUgPT09ICIiICYmIHJvb3QuY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJmb28iCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vc2V0dXAKCQl2YXIgY291bnQgPSAwCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5tb2R1bGUocm9vdCwgewoJCQljb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LAoJCQl2aWV3OiBmdW5jdGlvbihjdHJsKSB7CgkJCQljb3VudCsrCgkJCX0KCQl9KQoJCW0ucmVkcmF3KCkKCQltLnJlZHJhdygpCgkJbS5yZWRyYXcoKQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkKCQltLnJlZHJhdygpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIGNvdW50ID09PSAyCgl9KQoKCS8vbS5yb3V0ZQoJdGVzdChmdW5jdGlvbigpIHsKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vc2V0dXAKCQltb2NrLmxvY2F0aW9uLnNlYXJjaCA9ICI/IgoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0MSIsIHsKCQkJIi90ZXN0MSI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gImZvbyJ9fQoJCX0pCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uc2VhcmNoID09ICI/L3Rlc3QxIiAmJiByb290LmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3NldHVwCgkJbW9jay5sb2NhdGlvbi5wYXRobmFtZSA9ICIvIgoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAicGF0aG5hbWUiCgkJbS5yb3V0ZShyb290LCAiL3Rlc3QyIiwgewoJCQkiL3Rlc3QyIjoge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge30sIHZpZXc6IGZ1bmN0aW9uKCkge3JldHVybiAiZm9vIn19CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gbW9jay5sb2NhdGlvbi5wYXRobmFtZSA9PSAiL3Rlc3QyIiAmJiByb290LmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3NldHVwCgkJbW9jay5sb2NhdGlvbi5oYXNoID0gIiMiCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucm91dGUubW9kZSA9ICJoYXNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0MyIsIHsKCQkJIi90ZXN0MyI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gImZvbyJ9fQoJCX0pCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uaGFzaCA9PSAiIy90ZXN0MyIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImZvbyIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucm91dGUubW9kZSA9ICJzZWFyY2giCgkJbS5yb3V0ZShyb290LCAiL3Rlc3Q0L2ZvbyIsIHsKCQkJIi90ZXN0NC86dGVzdCI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gbS5yb3V0ZS5wYXJhbSgidGVzdCIpfX0KCQl9KQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy90ZWFyZG93bgoJCXJldHVybiBtb2NrLmxvY2F0aW9uLnNlYXJjaCA9PSAiPy90ZXN0NC9mb28iICYmIHJvb3QuY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPT09ICJmb28iCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vc2V0dXAKCQltb2NrLmxvY2F0aW9uLnNlYXJjaCA9ICI/IgoKCQl2YXIgbW9kdWxlID0ge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge30sIHZpZXc6IGZ1bmN0aW9uKCkge3JldHVybiBtLnJvdXRlLnBhcmFtKCJ0ZXN0Iil9fQoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0NS9mb28iLCB7CgkJCSIvIjogbW9kdWxlLAoJCQkiL3Rlc3Q1Lzp0ZXN0IjogbW9kdWxlCgkJfSkKCQl2YXIgcGFyYW1WYWx1ZUJlZm9yZSA9IG0ucm91dGUucGFyYW0oInRlc3QiKQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkKCQltLnJvdXRlKCIvIikKCQl2YXIgcGFyYW1WYWx1ZUFmdGVyID0gbS5yb3V0ZS5wYXJhbSgidGVzdCIpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uc2VhcmNoID09ICI/LyIgJiYgcGFyYW1WYWx1ZUJlZm9yZSA9PT0gImZvbyIgJiYgcGFyYW1WYWx1ZUFmdGVyID09PSB1bmRlZmluZWQKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciBtb2R1bGUgPSB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7cmV0dXJuIG0ucm91dGUucGFyYW0oImExIil9fQoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0Ni9mb28iLCB7CgkJCSIvIjogbW9kdWxlLAoJCQkiL3Rlc3Q2LzphMSI6IG1vZHVsZQoJCX0pCgkJdmFyIHBhcmFtVmFsdWVCZWZvcmUgPSBtLnJvdXRlLnBhcmFtKCJhMSIpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKQoJCW0ucm91dGUoIi8iKQoJCXZhciBwYXJhbVZhbHVlQWZ0ZXIgPSBtLnJvdXRlLnBhcmFtKCJhMSIpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uc2VhcmNoID09ICI/LyIgJiYgcGFyYW1WYWx1ZUJlZm9yZSA9PT0gImZvbyIgJiYgcGFyYW1WYWx1ZUFmdGVyID09PSB1bmRlZmluZWQKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy82MQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciBtb2R1bGUgPSB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7cmV0dXJuIG0ucm91dGUucGFyYW0oImExIil9fQoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0Ny9mb28iLCB7CgkJCSIvIjogbW9kdWxlLAoJCQkiL3Rlc3Q3LzphMSI6IG1vZHVsZQoJCX0pCgkJdmFyIHJvdXRlVmFsdWVCZWZvcmUgPSBtLnJvdXRlKCkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApCgkJbS5yb3V0ZSgiLyIpCgkJdmFyIHJvdXRlVmFsdWVBZnRlciA9IG0ucm91dGUoKQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy90ZWFyZG93bgoJCXJldHVybiByb3V0ZVZhbHVlQmVmb3JlID09PSAiL3Rlc3Q3L2ZvbyIgJiYgcm91dGVWYWx1ZUFmdGVyID09PSAiLyIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucm91dGUubW9kZSA9ICJzZWFyY2giCgkJbS5yb3V0ZShyb290LCAiL3Rlc3Q4L2Zvby9TRVAvYmFyL2JheiIsIHsKCQkJIi90ZXN0OC86dGVzdC9TRVAvOnBhdGguLi4iOiB7CgkJCQljb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LAoJCQkJdmlldzogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIG0ucm91dGUucGFyYW0oInRlc3QiKSArICJfIiArIG0ucm91dGUucGFyYW0oInBhdGgiKQoJCQkJfQoJCQl9CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gbW9jay5sb2NhdGlvbi5zZWFyY2ggPT0gIj8vdGVzdDgvZm9vL1NFUC9iYXIvYmF6IiAmJiByb290LmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAiZm9vX2Jhci9iYXoiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vc2V0dXAKCQltb2NrLmxvY2F0aW9uLnNlYXJjaCA9ICI/IgoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi90ZXN0OS9mb28vYmFyL1NFUC9iYXoiLCB7CgkJCSIvdGVzdDkvOnRlc3QuLi4vU0VQLzpwYXRoIjogewoJCQkJY29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwKCQkJCXZpZXc6IGZ1bmN0aW9uKCkgewoJCQkJCXJldHVybiBtLnJvdXRlLnBhcmFtKCJ0ZXN0IikgKyAiXyIgKyBtLnJvdXRlLnBhcmFtKCJwYXRoIikKCQkJCX0KCQkJfQoJCX0pCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uc2VhcmNoID09ICI/L3Rlc3Q5L2Zvby9iYXIvU0VQL2JheiIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImZvby9iYXJfYmF6IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3NldHVwCgkJbW9jay5sb2NhdGlvbi5zZWFyY2ggPSAiPyIKCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yb3V0ZS5tb2RlID0gInNlYXJjaCIKCQltLnJvdXRlKHJvb3QsICIvdGVzdDEwL2ZvbyUyMGJhciIsIHsKCQkJIi90ZXN0MTAvOnRlc3QiOiB7CgkJCQljb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LAoJCQkJdmlldzogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIG0ucm91dGUucGFyYW0oInRlc3QiKQoJCQkJfQoJCQl9CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImZvbyBiYXIiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vc2V0dXAKCQltb2NrLmxvY2F0aW9uLnNlYXJjaCA9ICI/IgoKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLnJvdXRlLm1vZGUgPSAic2VhcmNoIgoJCW0ucm91dGUocm9vdCwgIi8iLCB7CgkJCSIvIjoge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge30sIHZpZXc6IGZ1bmN0aW9uKCkge3JldHVybiAiZm9vIn19LAoJCQkiL3Rlc3QxMSI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gImJhciJ9fQoJCX0pCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKQoJCW0ucm91dGUoIi90ZXN0MTEvIikKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gbW9jay5sb2NhdGlvbi5zZWFyY2ggPT0gIj8vdGVzdDExLyIgJiYgcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImJhciIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucm91dGUubW9kZSA9ICJzZWFyY2giCgkJbS5yb3V0ZShyb290LCAiLyIsIHsKCQkJIi8iOiB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7fX0sCgkJCSIvdGVzdDEyIjoge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge30sIHZpZXc6IGZ1bmN0aW9uKCkge319CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApCgkJbS5yb3V0ZSgiL3Rlc3QxMj9hPWZvbyZiPWJhciIpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIG1vY2subG9jYXRpb24uc2VhcmNoID09ICI/L3Rlc3QxMj9hPWZvbyZiPWJhciIgJiYgbS5yb3V0ZS5wYXJhbSgiYSIpID09ICJmb28iICYmIG0ucm91dGUucGFyYW0oImIiKSA9PSAiYmFyIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3NldHVwCgkJbW9jay5sb2NhdGlvbi5zZWFyY2ggPSAiPyIKCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yb3V0ZS5tb2RlID0gInNlYXJjaCIKCQltLnJvdXRlKHJvb3QsICIvIiwgewoJCQkiLyI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gImJhciJ9fSwKCQkJIi90ZXN0MTMvOnRlc3QiOiB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7cmV0dXJuIG0ucm91dGUucGFyYW0oInRlc3QiKX19CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApCgkJbS5yb3V0ZSgiL3Rlc3QxMy9mb28/dGVzdD1iYXIiKQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy90ZWFyZG93bgoJCXJldHVybiBtb2NrLmxvY2F0aW9uLnNlYXJjaCA9PSAiPy90ZXN0MTMvZm9vP3Rlc3Q9YmFyIiAmJiByb290LmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVlID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3NldHVwCgkJbW9jay5sb2NhdGlvbi5zZWFyY2ggPSAiPyIKCgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgkJbS5yb3V0ZS5tb2RlID0gInNlYXJjaCIKCQltLnJvdXRlKHJvb3QsICIvIiwgewoJCQkiLyI6IHtjb250cm9sbGVyOiBmdW5jdGlvbigpIHt9LCB2aWV3OiBmdW5jdGlvbigpIHtyZXR1cm4gImJhciJ9fSwKCQkJIi90ZXN0MTQiOiB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7cmV0dXJuICJmb28ifX0KCQl9KQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkKCQltLnJvdXRlKCIvdGVzdDE0P3Rlc3QmdGVzdDI9IikKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApIC8vdGVhcmRvd24KCQlyZXR1cm4gbW9jay5sb2NhdGlvbi5zZWFyY2ggPT0gIj8vdGVzdDE0P3Rlc3QmdGVzdDI9IiAmJiBtLnJvdXRlLnBhcmFtKCJ0ZXN0IikgPT09IHRydWUgJiYgbS5yb3V0ZS5wYXJhbSgidGVzdDIiKSA9PT0gIiIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCW0ucm91dGUubW9kZSA9ICJzZWFyY2giCgkJbS5yb3V0ZShyb290LCAiLyIsIHsKCQkJIi8iOiB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7fSwgdmlldzogZnVuY3Rpb24oKSB7fX0sCgkJCSIvdGVzdDEyIjoge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge30sIHZpZXc6IGZ1bmN0aW9uKCkge319CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApCgkJbS5yb3V0ZSgiL3Rlc3QxMiIsIHthOiAiZm9vIiwgYjogImJhciJ9KQoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy90ZWFyZG93bgoJCXJldHVybiBtb2NrLmxvY2F0aW9uLnNlYXJjaCA9PSAiPy90ZXN0MTI/YT1mb28mYj1iYXIiICYmIG0ucm91dGUucGFyYW0oImEiKSA9PSAiZm9vIiAmJiBtLnJvdXRlLnBhcmFtKCJiIikgPT0gImJhciIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkgLy9zZXR1cAoJCW1vY2subG9jYXRpb24uc2VhcmNoID0gIj8iCgoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoJCXZhciByb3V0ZTEsIHJvdXRlMgoJCW0ucm91dGUubW9kZSA9ICJzZWFyY2giCgkJbS5yb3V0ZShyb290LCAiLyIsIHsKCQkJIi8iOiB7Y29udHJvbGxlcjogZnVuY3Rpb24oKSB7cm91dGUxID0gbS5yb3V0ZSgpfSwgdmlldzogZnVuY3Rpb24oKSB7fX0sCgkJCSIvdGVzdDEzIjoge2NvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge3JvdXRlMiA9IG0ucm91dGUoKX0sIHZpZXc6IGZ1bmN0aW9uKCkge319CgkJfSkKCQltb2NrLnBlcmZvcm1hbmNlLiRlbGFwc2UoNTApCgkJbS5yb3V0ZSgiL3Rlc3QxMyIpCgkJbW9jay5wZXJmb3JtYW5jZS4kZWxhcHNlKDUwKSAvL3RlYXJkb3duCgkJcmV0dXJuIHJvdXRlMSA9PSAiLyIgJiYgcm91dGUyID09ICIvdGVzdDEzIgoJfSkKCS8vZW5kIG0ucm91dGUKCgkvL20ucHJvcAoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcHJvcCA9IG0ucHJvcCgidGVzdCIpCgkJcmV0dXJuIHByb3AoKSA9PT0gInRlc3QiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcHJvcCA9IG0ucHJvcCgidGVzdCIpCgkJcHJvcCgiZm9vIikKCQlyZXR1cm4gcHJvcCgpID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHByb3AgPSBtLnByb3AoInRlc3QiKQoJCXJldHVybiBKU09OLnN0cmluZ2lmeShwcm9wKSA9PT0gJyJ0ZXN0IicKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciBvYmogPSB7cHJvcDogbS5wcm9wKCJ0ZXN0Iil9CgkJcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaikgPT09ICd7InByb3AiOiJ0ZXN0In0nCgl9KQoKCS8vbS5yZXF1ZXN0Cgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciBwcm9wID0gbS5yZXF1ZXN0KHttZXRob2Q6ICJHRVQiLCB1cmw6ICJ0ZXN0In0pCgkJbW9jay5YTUxIdHRwUmVxdWVzdC4kaW5zdGFuY2VzLnBvcCgpLm9ucmVhZHlzdGF0ZWNoYW5nZSgpCgkJcmV0dXJuIHByb3AoKS5tZXRob2QgPT09ICJHRVQiICYmIHByb3AoKS51cmwgPT09ICJ0ZXN0IgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHByb3AgPSBtLnJlcXVlc3Qoe21ldGhvZDogIkdFVCIsIHVybDogInRlc3QifSkudGhlbihmdW5jdGlvbih2YWx1ZSkge3JldHVybiAiZm9vIn0pCgkJbW9jay5YTUxIdHRwUmVxdWVzdC4kaW5zdGFuY2VzLnBvcCgpLm9ucmVhZHlzdGF0ZWNoYW5nZSgpCgkJcmV0dXJuIHByb3AoKSA9PT0gImZvbyIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciBwcm9wID0gbS5yZXF1ZXN0KHttZXRob2Q6ICJQT1NUIiwgdXJsOiAiaHR0cDovL2RvbWFpbi5jb206ODAiLCBkYXRhOiB7fX0pLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtyZXR1cm4gdmFsdWV9KQoJCW1vY2suWE1MSHR0cFJlcXVlc3QuJGluc3RhbmNlcy5wb3AoKS5vbnJlYWR5c3RhdGVjaGFuZ2UoKQoJCXJldHVybiBwcm9wKCkudXJsID09PSAiaHR0cDovL2RvbWFpbi5jb206ODAiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgcHJvcCA9IG0ucmVxdWVzdCh7bWV0aG9kOiAiUE9TVCIsIHVybDogImh0dHA6Ly9kb21haW4uY29tOjgwLzp0ZXN0MSIsIGRhdGE6IHt0ZXN0MTogImZvbyJ9fSkudGhlbihmdW5jdGlvbih2YWx1ZSkge3JldHVybiB2YWx1ZX0pCgkJbW9jay5YTUxIdHRwUmVxdWVzdC4kaW5zdGFuY2VzLnBvcCgpLm9ucmVhZHlzdGF0ZWNoYW5nZSgpCgkJcmV0dXJuIHByb3AoKS51cmwgPT09ICJodHRwOi8vZG9tYWluLmNvbTo4MC9mb28iCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgZXJyb3IgPSBtLnByb3AoIm5vIGVycm9yIikKCQl2YXIgcHJvcCA9IG0ucmVxdWVzdCh7bWV0aG9kOiAiR0VUIiwgdXJsOiAidGVzdCIsIGRlc2VyaWFsaXplOiBmdW5jdGlvbigpIHt0aHJvdyBuZXcgRXJyb3IoImVycm9yIG9jY3VycmVkIil9fSkudGhlbihudWxsLCBlcnJvcikKCQltb2NrLlhNTEh0dHBSZXF1ZXN0LiRpbnN0YW5jZXMucG9wKCkub25yZWFkeXN0YXRlY2hhbmdlKCkKCQlyZXR1cm4gcHJvcCgpID09PSB1bmRlZmluZWQgJiYgZXJyb3IoKS5tZXNzYWdlID09PSAiZXJyb3Igb2NjdXJyZWQiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgZXJyb3IgPSBtLnByb3AoIm5vIGVycm9yIiksIGV4Y2VwdGlvbgoJCXZhciBwcm9wID0gbS5yZXF1ZXN0KHttZXRob2Q6ICJHRVQiLCB1cmw6ICJ0ZXN0IiwgZGVzZXJpYWxpemU6IGZ1bmN0aW9uKCkge3Rocm93IG5ldyBUeXBlRXJyb3IoImVycm9yIG9jY3VycmVkIil9fSkudGhlbihudWxsLCBlcnJvcikKCQl0cnkge21vY2suWE1MSHR0cFJlcXVlc3QuJGluc3RhbmNlcy5wb3AoKS5vbnJlYWR5c3RhdGVjaGFuZ2UoKX0KCQljYXRjaCAoZSkge2V4Y2VwdGlvbiA9IGV9CgkJbS5lbmRDb21wdXRhdGlvbigpCgkJcmV0dXJuIHByb3AoKSA9PT0gdW5kZWZpbmVkICYmIGVycm9yKCkgPT09ICJubyBlcnJvciIgJiYgZXhjZXB0aW9uLm1lc3NhZ2UgPT0gImVycm9yIG9jY3VycmVkIgoJfSkKCgkvL20uZGVmZXJyZWQKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpCgkJZGVmZXJyZWQucHJvbWlzZS50aGVuKGZ1bmN0aW9uKGRhdGEpIHt2YWx1ZSA9IGRhdGF9KQoJCWRlZmVycmVkLnJlc29sdmUoInRlc3QiKQoJCXJldHVybiB2YWx1ZSA9PT0gInRlc3QiCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgdmFsdWUKCQl2YXIgZGVmZXJyZWQgPSBtLmRlZmVycmVkKCkKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSkge3JldHVybiAiZm9vIn0pLnRoZW4oZnVuY3Rpb24oZGF0YSkge3ZhbHVlID0gZGF0YX0pCgkJZGVmZXJyZWQucmVzb2x2ZSgidGVzdCIpCgkJcmV0dXJuIHZhbHVlID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpCgkJZGVmZXJyZWQucHJvbWlzZS50aGVuKG51bGwsIGZ1bmN0aW9uKGRhdGEpIHt2YWx1ZSA9IGRhdGF9KQoJCWRlZmVycmVkLnJlamVjdCgidGVzdCIpCgkJcmV0dXJuIHZhbHVlID09PSAidGVzdCIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciB2YWx1ZQoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKQoJCWRlZmVycmVkLnByb21pc2UudGhlbihudWxsLCBmdW5jdGlvbihkYXRhKSB7cmV0dXJuICJmb28ifSkudGhlbihudWxsLCBmdW5jdGlvbihkYXRhKSB7dmFsdWUgPSBkYXRhfSkKCQlkZWZlcnJlZC5yZWplY3QoInRlc3QiKQoJCXJldHVybiB2YWx1ZSA9PT0gImZvbyIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciB2YWx1ZTEsIHZhbHVlMgoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKQoJCWRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKSB7dGhyb3cgbmV3IEVycm9yfSkudGhlbihmdW5jdGlvbihkYXRhKSB7dmFsdWUxID0gMX0sIGZ1bmN0aW9uKGRhdGEpIHt2YWx1ZTIgPSBkYXRhfSkKCQlkZWZlcnJlZC5yZXNvbHZlKCJ0ZXN0IikKCQlyZXR1cm4gdmFsdWUxID09PSB1bmRlZmluZWQgJiYgdmFsdWUyIGluc3RhbmNlb2YgRXJyb3IKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciBkZWZlcnJlZDEgPSBtLmRlZmVycmVkKCkKCQl2YXIgZGVmZXJyZWQyID0gbS5kZWZlcnJlZCgpCgkJdmFyIHZhbHVlMSwgdmFsdWUyCgkJZGVmZXJyZWQxLnByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKSB7CgkJCXZhbHVlMSA9IGRhdGEKCQkJcmV0dXJuIGRlZmVycmVkMi5wcm9taXNlCgkJfSkudGhlbihmdW5jdGlvbihkYXRhKSB7CgkJCXZhbHVlMiA9IGRhdGEKCQl9KQoJCWRlZmVycmVkMS5yZXNvbHZlKDEpCgkJZGVmZXJyZWQyLnJlc29sdmUoMikKCQlyZXR1cm4gdmFsdWUxID09PSAxICYmIHZhbHVlMiA9PT0gMgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzgwCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZQoJCWRlZmVycmVkLnJlc29sdmUoMSkKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZSA9IGRhdGEKCQl9KQoJCXJldHVybiB2YWx1ZSA9PT0gMQoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzgwCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZQoJCWRlZmVycmVkLnJlamVjdCgxKQoJCWRlZmVycmVkLnByb21pc2UudGhlbihudWxsLCBmdW5jdGlvbihkYXRhKSB7CgkJCXZhbHVlID0gZGF0YQoJCX0pCgkJcmV0dXJuIHZhbHVlID09PSAxCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvODAKCQl2YXIgZGVmZXJyZWQgPSBtLmRlZmVycmVkKCksIHZhbHVlCgkJZGVmZXJyZWQucmVzb2x2ZSgxKQoJCWRlZmVycmVkLnJlc29sdmUoMikKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZSA9IGRhdGEKCQl9KQoJCXJldHVybiB2YWx1ZSA9PT0gMQoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzgwCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZQoJCWRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKSB7CgkJCXZhbHVlID0gZGF0YQoJCX0pCgkJZGVmZXJyZWQucmVzb2x2ZSgxKQoJCWRlZmVycmVkLnJlc29sdmUoMikKCQlyZXR1cm4gdmFsdWUgPT09IDEKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy84MAoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKSwgdmFsdWUxLCB2YWx1ZTIKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZTEgPSBkYXRhCgkJfSwgZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZTIgPSBkYXRhCgkJfSkKCQlkZWZlcnJlZC5yZXNvbHZlKDEpCgkJZGVmZXJyZWQucmVqZWN0KDIpCgkJcmV0dXJuIHZhbHVlMSA9PT0gMSAmJiB2YWx1ZTIgPT09IHVuZGVmaW5lZAoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzgwCgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZTEsIHZhbHVlMgoJCWRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbigpIHsKCQkJdmFsdWUxID0gZGF0YQoJCX0sIGZ1bmN0aW9uKGRhdGEpIHsKCQkJdmFsdWUyID0gZGF0YQoJCX0pCgkJZGVmZXJyZWQucmVqZWN0KDEpCgkJZGVmZXJyZWQucmVzb2x2ZSgyKQoJCXJldHVybiB2YWx1ZTEgPT09IHVuZGVmaW5lZCAmJiB2YWx1ZTIgPT09IDEKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCS8vaHR0cHM6Ly9naXRodWIuY29tL2xob3JpZS9taXRocmlsLmpzL2lzc3Vlcy84MAoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKSwgdmFsdWUKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4obnVsbCwgZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZSA9IGRhdGEKCQl9KQoJCWRlZmVycmVkLnJlamVjdCgxKQoJCWRlZmVycmVkLnJlamVjdCgyKQoJCXJldHVybiB2YWx1ZSA9PT0gMQoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJLy9odHRwczovL2dpdGh1Yi5jb20vbGhvcmllL21pdGhyaWwuanMvaXNzdWVzLzg1CgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZQoJCWRlZmVycmVkLnJlc29sdmUoKQoJCWRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbihkYXRhKSB7CgkJCXZhbHVlID0gMQoJCX0pCgkJcmV0dXJuIHZhbHVlID09PSAxCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQkvL2h0dHBzOi8vZ2l0aHViLmNvbS9saG9yaWUvbWl0aHJpbC5qcy9pc3N1ZXMvODUKCQl2YXIgZGVmZXJyZWQgPSBtLmRlZmVycmVkKCksIHZhbHVlCgkJZGVmZXJyZWQucmVqZWN0KCkKCQlkZWZlcnJlZC5wcm9taXNlLnRoZW4obnVsbCwgZnVuY3Rpb24oZGF0YSkgewoJCQl2YWx1ZSA9IDEKCQl9KQoJCXJldHVybiB2YWx1ZSA9PT0gMQoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIGRlZmVycmVkID0gbS5kZWZlcnJlZCgpLCB2YWx1ZQoJCWRlZmVycmVkLnJlc29sdmUoMSkKCQlyZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpID09PSAxCgl9KQoJdGVzdChmdW5jdGlvbigpIHsKCQl2YXIgZGVmZXJyZWQgPSBtLmRlZmVycmVkKCksIHZhbHVlCgkJdmFyIHByb21pc2UgPSBkZWZlcnJlZC5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZGF0YSkge3JldHVybiBkYXRhICsgMX0pCgkJZGVmZXJyZWQucmVzb2x2ZSgxKQoJCXJldHVybiBwcm9taXNlKCkgPT09IDIKCX0pCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciBkZWZlcnJlZCA9IG0uZGVmZXJyZWQoKSwgdmFsdWUKCQlkZWZlcnJlZC5yZWplY3QoMSkKCQlyZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpID09PSB1bmRlZmluZWQKCX0pCgoJLy9tLnN5bmMKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlCgkJdmFyIGRlZmVycmVkMSA9IG0uZGVmZXJyZWQoKQoJCXZhciBkZWZlcnJlZDIgPSBtLmRlZmVycmVkKCkKCQltLnN5bmMoW2RlZmVycmVkMS5wcm9taXNlLCBkZWZlcnJlZDIucHJvbWlzZV0pLnRoZW4oZnVuY3Rpb24oZGF0YSkge3ZhbHVlID0gZGF0YX0pCgkJZGVmZXJyZWQxLnJlc29sdmUoInRlc3QiKQoJCWRlZmVycmVkMi5yZXNvbHZlKCJmb28iKQoJCXJldHVybiB2YWx1ZVswXSA9PT0gInRlc3QiICYmIHZhbHVlWzFdID09PSAiZm9vIgoJfSkKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlCgkJdmFyIGRlZmVycmVkMSA9IG0uZGVmZXJyZWQoKQoJCXZhciBkZWZlcnJlZDIgPSBtLmRlZmVycmVkKCkKCQltLnN5bmMoW2RlZmVycmVkMS5wcm9taXNlLCBkZWZlcnJlZDIucHJvbWlzZV0pLnRoZW4oZnVuY3Rpb24oZGF0YSkge3ZhbHVlID0gZGF0YX0pCgkJZGVmZXJyZWQyLnJlc29sdmUoImZvbyIpCgkJZGVmZXJyZWQxLnJlc29sdmUoInRlc3QiKQoJCXJldHVybiB2YWx1ZVswXSA9PT0gInRlc3QiICYmIHZhbHVlWzFdID09PSAiZm9vIgoJfSkKCgkvL20uc3RhcnRDb21wdXRhdGlvbi9tLmVuZENvbXB1dGF0aW9uCgl0ZXN0KGZ1bmN0aW9uKCkgewoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkKCgkJdmFyIGNvbnRyb2xsZXIKCQl2YXIgcm9vdCA9IG1vY2suZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikKCQltLm1vZHVsZShyb290LCB7CgkJCWNvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge2NvbnRyb2xsZXIgPSB0aGlzfSwKCQkJdmlldzogZnVuY3Rpb24oY3RybCkge3JldHVybiBjdHJsLnZhbHVlfQoJCX0pCgoJCW1vY2sucGVyZm9ybWFuY2UuJGVsYXBzZSg1MCkKCgkJbS5zdGFydENvbXB1dGF0aW9uKCkKCQljb250cm9sbGVyLnZhbHVlID0gImZvbyIKCQltLmVuZENvbXB1dGF0aW9uKCkKCQlyZXR1cm4gcm9vdC5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9PT0gImZvbyIKCX0pCgoJLy9jb25zb2xlLmxvZyBwcmVzZW5jZQoJdGVzdChmdW5jdGlvbigpIHsKCQlyZXR1cm4gbS5kZXBzLmZhY3RvcnkudG9TdHJpbmcoKS5pbmRleE9mKCJjb25zb2xlIikgPCAwCgl9KQoKCS8vIGNvbmZpZyBjb250ZXh0Cgl0ZXN0KGZ1bmN0aW9uKCkgewoJCXZhciByb290ID0gbW9jay5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKQoKCQl2YXIgc3VjY2VzcyA9IGZhbHNlOwoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHtjb25maWc6IGZ1bmN0aW9uKGVsZW0sIGlzSW5pdGlhbGl6ZWQsIGN0eCkge2N0eC5kYXRhPTF9fSkpOwoJCW0ucmVuZGVyKHJvb3QsIG0oImRpdiIsIHtjb25maWc6IGZ1bmN0aW9uKGVsZW0sIGlzSW5pdGlhbGl6ZWQsIGN0eCkge3N1Y2Nlc3MgPSBjdHguZGF0YT09PTF9fSkpOwoJCXJldHVybiBzdWNjZXNzOwoJfSkKCgkvLyBtb3JlIGNvbXBsZXggY29uZmlnIGNvbnRleHQKCXRlc3QoZnVuY3Rpb24oKSB7CgkJdmFyIHJvb3QgPSBtb2NrLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpCgoJCXZhciBpZHggPSAwOwoJCXZhciBzdWNjZXNzID0gdHJ1ZTsKCQl2YXIgc3RhdGVmdWxDb25maWcgPSBmdW5jdGlvbihlbGVtLCBpc0luaXRpYWxpemVkLCBjdHgpIHtjdHguZGF0YT1pZHgrK30KCQl2YXIgbm9kZSA9IG0oImRpdiIsIHtjb25maWc6IHN0YXRlZnVsQ29uZmlnfSk7CgkJbS5yZW5kZXIocm9vdCwgW25vZGUsIG5vZGVdKTsKCgkJaWR4ID0gMDsKCQl2YXIgY2hlY2tDb25maWcgPSBmdW5jdGlvbihlbGVtLCBpc0luaXRpYWxpemVkLCBjdHgpIHsKCQkJc3VjY2VzcyA9IHN1Y2Nlc3MgJiYgKGN0eC5kYXRhID09PSBpZHgrKykKCQl9CgkJbm9kZSA9IG0oImRpdiIsIHtjb25maWc6IGNoZWNrQ29uZmlnfSk7CgkJbS5yZW5kZXIocm9vdCwgW25vZGUsIG5vZGVdKTsKCQlyZXR1cm4gc3VjY2VzczsKCX0pCgp9CgovL21vY2tzCnRlc3RNaXRocmlsKG1vY2sud2luZG93KQoKdGVzdC5wcmludChjb25zb2xlLmxvZykK",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 16:12:05 GMT",
                    "Content-Length": "67584",
                    "Date": "Fri, 07 Nov 2014 16:12:06 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}